// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Avs.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The properties of a cluster
    /// </summary>
    public partial class ClusterProperties : DefaultClusterProperties
    {
        /// <summary>
        /// Initializes a new instance of the ClusterProperties class.
        /// </summary>
        public ClusterProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClusterProperties class.
        /// </summary>
        /// <param name="clusterId">The identity</param>
        /// <param name="clusterSize">The cluster size</param>
        /// <param name="hosts">The hosts</param>
        /// <param name="provisioningState">The state of the cluster
        /// provisioning. Possible values include: 'Succeeded', 'Failed',
        /// 'Cancelled', 'Updating'</param>
        public ClusterProperties(int? clusterId = default(int?), int? clusterSize = default(int?), IList<string> hosts = default(IList<string>), string provisioningState = default(string))
            : base(clusterId, clusterSize, hosts)
        {
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the state of the cluster provisioning. Possible values
        /// include: 'Succeeded', 'Failed', 'Cancelled', 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

    }
}
