// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Avs.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay
    /// to inherit from
    /// </summary>
    public partial class WorkloadNetworkDhcpEntity
    {
        /// <summary>
        /// Initializes a new instance of the WorkloadNetworkDhcpEntity class.
        /// </summary>
        public WorkloadNetworkDhcpEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkloadNetworkDhcpEntity class.
        /// </summary>
        /// <param name="displayName">Display name of the DHCP entity.</param>
        /// <param name="segments">NSX Segments consuming DHCP.</param>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'Succeeded', 'Failed', 'Building', 'Deleting',
        /// 'Updating'</param>
        /// <param name="revision">NSX revision number.</param>
        public WorkloadNetworkDhcpEntity(string displayName = default(string), IList<string> segments = default(IList<string>), string provisioningState = default(string), long? revision = default(long?))
        {
            DisplayName = displayName;
            Segments = segments;
            ProvisioningState = provisioningState;
            Revision = revision;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets display name of the DHCP entity.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets NSX Segments consuming DHCP.
        /// </summary>
        [JsonProperty(PropertyName = "segments")]
        public IList<string> Segments { get; private set; }

        /// <summary>
        /// Gets the provisioning state. Possible values include: 'Succeeded',
        /// 'Failed', 'Building', 'Deleting', 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets NSX revision number.
        /// </summary>
        [JsonProperty(PropertyName = "revision")]
        public long? Revision { get; set; }

    }
}
