// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Avs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of a vSphere Replication (VR) addon
    /// </summary>
    [Newtonsoft.Json.JsonObject("VR")]
    public partial class AddonVrProperties : AddonProperties
    {
        /// <summary>
        /// Initializes a new instance of the AddonVrProperties class.
        /// </summary>
        public AddonVrProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddonVrProperties class.
        /// </summary>
        /// <param name="vrsCount">The vSphere Replication Server (VRS)
        /// count</param>
        /// <param name="provisioningState">The state of the addon
        /// provisioning. Possible values include: 'Succeeded', 'Failed',
        /// 'Cancelled', 'Building', 'Deleting', 'Updating'</param>
        public AddonVrProperties(int vrsCount, string provisioningState = default(string))
            : base(provisioningState)
        {
            VrsCount = vrsCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the vSphere Replication Server (VRS) count
        /// </summary>
        [JsonProperty(PropertyName = "vrsCount")]
        public int VrsCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
