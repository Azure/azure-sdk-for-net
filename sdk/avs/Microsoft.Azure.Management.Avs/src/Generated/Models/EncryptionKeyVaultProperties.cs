// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Avs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An Encryption Key
    /// </summary>
    public partial class EncryptionKeyVaultProperties
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionKeyVaultProperties
        /// class.
        /// </summary>
        public EncryptionKeyVaultProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionKeyVaultProperties
        /// class.
        /// </summary>
        /// <param name="keyName">The name of the key.</param>
        /// <param name="keyVersion">The version of the key.</param>
        /// <param name="keyVaultUrl">The URL of the vault.</param>
        /// <param name="keyState">The state of key provided. Possible values
        /// include: 'Connected', 'AccessDenied'</param>
        /// <param name="versionType">Property of the key if user provided or
        /// auto detected. Possible values include: 'Fixed',
        /// 'AutoDetected'</param>
        public EncryptionKeyVaultProperties(string keyName = default(string), string keyVersion = default(string), string keyVaultUrl = default(string), string keyState = default(string), string versionType = default(string))
        {
            KeyName = keyName;
            KeyVersion = keyVersion;
            KeyVaultUrl = keyVaultUrl;
            KeyState = keyState;
            VersionType = versionType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the key.
        /// </summary>
        [JsonProperty(PropertyName = "keyName")]
        public string KeyName { get; set; }

        /// <summary>
        /// Gets or sets the version of the key.
        /// </summary>
        [JsonProperty(PropertyName = "keyVersion")]
        public string KeyVersion { get; set; }

        /// <summary>
        /// Gets or sets the URL of the vault.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultUrl")]
        public string KeyVaultUrl { get; set; }

        /// <summary>
        /// Gets the state of key provided. Possible values include:
        /// 'Connected', 'AccessDenied'
        /// </summary>
        [JsonProperty(PropertyName = "keyState")]
        public string KeyState { get; private set; }

        /// <summary>
        /// Gets property of the key if user provided or auto detected.
        /// Possible values include: 'Fixed', 'AutoDetected'
        /// </summary>
        [JsonProperty(PropertyName = "versionType")]
        public string VersionType { get; private set; }

    }
}
