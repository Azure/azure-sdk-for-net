// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Build result resource properties payload
    /// </summary>
    public partial class BuildResultProperties
    {
        /// <summary>
        /// Initializes a new instance of the BuildResultProperties class.
        /// </summary>
        public BuildResultProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BuildResultProperties class.
        /// </summary>
        /// <param name="name">The name of this build result</param>
        /// <param name="provisioningState">Provisioning state of the KPack
        /// build result. Possible values include: 'Queuing', 'Building',
        /// 'Succeeded', 'Failed', 'Deleting'</param>
        /// <param name="buildPodName">The build pod name which can be used to
        /// get the build log streaming.</param>
        /// <param name="buildStages">All of the build stage (init-container
        /// and container) resources in build pod.</param>
        public BuildResultProperties(string name = default(string), string provisioningState = default(string), string buildPodName = default(string), IList<BuildStageProperties> buildStages = default(IList<BuildStageProperties>))
        {
            Name = name;
            ProvisioningState = provisioningState;
            BuildPodName = buildPodName;
            BuildStages = buildStages;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of this build result
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets provisioning state of the KPack build result. Possible values
        /// include: 'Queuing', 'Building', 'Succeeded', 'Failed', 'Deleting'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the build pod name which can be used to get the build
        /// log streaming.
        /// </summary>
        [JsonProperty(PropertyName = "buildPodName")]
        public string BuildPodName { get; set; }

        /// <summary>
        /// Gets all of the build stage (init-container and container)
        /// resources in build pod.
        /// </summary>
        [JsonProperty(PropertyName = "buildStages")]
        public IList<BuildStageProperties> BuildStages { get; private set; }

    }
}
