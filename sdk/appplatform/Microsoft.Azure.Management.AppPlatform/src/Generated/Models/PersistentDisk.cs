// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Persistent disk payload
    /// </summary>
    public partial class PersistentDisk
    {
        /// <summary>
        /// Initializes a new instance of the PersistentDisk class.
        /// </summary>
        public PersistentDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PersistentDisk class.
        /// </summary>
        /// <param name="sizeInGB">Size of the persistent disk in GB</param>
        /// <param name="usedInGB">Size of the used persistent disk in
        /// GB</param>
        /// <param name="mountPath">Mount path of the persistent disk</param>
        public PersistentDisk(int? sizeInGB = default(int?), int? usedInGB = default(int?), string mountPath = default(string))
        {
            SizeInGB = sizeInGB;
            UsedInGB = usedInGB;
            MountPath = mountPath;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets size of the persistent disk in GB
        /// </summary>
        [JsonProperty(PropertyName = "sizeInGB")]
        public int? SizeInGB { get; set; }

        /// <summary>
        /// Gets size of the used persistent disk in GB
        /// </summary>
        [JsonProperty(PropertyName = "usedInGB")]
        public int? UsedInGB { get; private set; }

        /// <summary>
        /// Gets or sets mount path of the persistent disk
        /// </summary>
        [JsonProperty(PropertyName = "mountPath")]
        public string MountPath { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SizeInGB > 50)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "SizeInGB", 50);
            }
            if (SizeInGB < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "SizeInGB", 0);
            }
            if (UsedInGB > 50)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "UsedInGB", 50);
            }
            if (UsedInGB < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "UsedInGB", 0);
            }
        }
    }
}
