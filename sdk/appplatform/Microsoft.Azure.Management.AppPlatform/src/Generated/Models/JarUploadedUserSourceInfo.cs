// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Uploaded Jar binary for a deployment
    /// </summary>
    [Newtonsoft.Json.JsonObject("Jar")]
    public partial class JarUploadedUserSourceInfo : UploadedUserSourceInfo
    {
        /// <summary>
        /// Initializes a new instance of the JarUploadedUserSourceInfo class.
        /// </summary>
        public JarUploadedUserSourceInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JarUploadedUserSourceInfo class.
        /// </summary>
        /// <param name="version">Version of the source</param>
        /// <param name="relativePath">Relative path of the storage which
        /// stores the source</param>
        /// <param name="runtimeVersion">Runtime version of the Jar
        /// file</param>
        /// <param name="jvmOptions">JVM parameter</param>
        public JarUploadedUserSourceInfo(string version = default(string), string relativePath = default(string), string runtimeVersion = default(string), string jvmOptions = default(string))
            : base(version, relativePath)
        {
            RuntimeVersion = runtimeVersion;
            JvmOptions = jvmOptions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets runtime version of the Jar file
        /// </summary>
        [JsonProperty(PropertyName = "runtimeVersion")]
        public string RuntimeVersion { get; set; }

        /// <summary>
        /// Gets or sets JVM parameter
        /// </summary>
        [JsonProperty(PropertyName = "jvmOptions")]
        public string JvmOptions { get; set; }

    }
}
