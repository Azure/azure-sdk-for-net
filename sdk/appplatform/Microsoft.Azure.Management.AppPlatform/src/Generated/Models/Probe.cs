// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Probe describes a health check to be performed against an App Instance
    /// to determine whether it is alive or ready to receive traffic.
    /// </summary>
    public partial class Probe
    {
        /// <summary>
        /// Initializes a new instance of the Probe class.
        /// </summary>
        public Probe()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Probe class.
        /// </summary>
        /// <param name="disableProbe">Indicate whether the probe is
        /// disabled.</param>
        /// <param name="probeAction">The action of the probe.</param>
        /// <param name="initialDelaySeconds">Number of seconds after the App
        /// Instance has started before probes are initiated. More info:
        /// https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</param>
        /// <param name="periodSeconds">How often (in seconds) to perform the
        /// probe. Minimum value is 1.</param>
        /// <param name="timeoutSeconds">Number of seconds after which the
        /// probe times out. Minimum value is 1.</param>
        /// <param name="failureThreshold">Minimum consecutive failures for the
        /// probe to be considered failed after having succeeded. Minimum value
        /// is 1.</param>
        /// <param name="successThreshold">Minimum consecutive successes for
        /// the probe to be considered successful after having failed. Must be
        /// 1 for liveness and startup. Minimum value is 1.</param>
        public Probe(bool disableProbe, ProbeAction probeAction = default(ProbeAction), int? initialDelaySeconds = default(int?), int? periodSeconds = default(int?), int? timeoutSeconds = default(int?), int? failureThreshold = default(int?), int? successThreshold = default(int?))
        {
            ProbeAction = probeAction;
            DisableProbe = disableProbe;
            InitialDelaySeconds = initialDelaySeconds;
            PeriodSeconds = periodSeconds;
            TimeoutSeconds = timeoutSeconds;
            FailureThreshold = failureThreshold;
            SuccessThreshold = successThreshold;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the action of the probe.
        /// </summary>
        [JsonProperty(PropertyName = "probeAction")]
        public ProbeAction ProbeAction { get; set; }

        /// <summary>
        /// Gets or sets indicate whether the probe is disabled.
        /// </summary>
        [JsonProperty(PropertyName = "disableProbe")]
        public bool DisableProbe { get; set; }

        /// <summary>
        /// Gets or sets number of seconds after the App Instance has started
        /// before probes are initiated. More info:
        /// https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [JsonProperty(PropertyName = "initialDelaySeconds")]
        public int? InitialDelaySeconds { get; set; }

        /// <summary>
        /// Gets or sets how often (in seconds) to perform the probe. Minimum
        /// value is 1.
        /// </summary>
        [JsonProperty(PropertyName = "periodSeconds")]
        public int? PeriodSeconds { get; set; }

        /// <summary>
        /// Gets or sets number of seconds after which the probe times out.
        /// Minimum value is 1.
        /// </summary>
        [JsonProperty(PropertyName = "timeoutSeconds")]
        public int? TimeoutSeconds { get; set; }

        /// <summary>
        /// Gets or sets minimum consecutive failures for the probe to be
        /// considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        [JsonProperty(PropertyName = "failureThreshold")]
        public int? FailureThreshold { get; set; }

        /// <summary>
        /// Gets or sets minimum consecutive successes for the probe to be
        /// considered successful after having failed. Must be 1 for liveness
        /// and startup. Minimum value is 1.
        /// </summary>
        [JsonProperty(PropertyName = "successThreshold")]
        public int? SuccessThreshold { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
