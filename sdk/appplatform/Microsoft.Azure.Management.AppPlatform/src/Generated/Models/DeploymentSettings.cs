// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Deployment settings payload
    /// </summary>
    public partial class DeploymentSettings
    {
        /// <summary>
        /// Initializes a new instance of the DeploymentSettings class.
        /// </summary>
        public DeploymentSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeploymentSettings class.
        /// </summary>
        /// <param name="cpu">Required CPU, basic tier should be 1, standard
        /// tier should be in range (1, 4)</param>
        /// <param name="memoryInGB">Required Memory size in GB, basic tier
        /// should be in range (1, 2), standard tier should be in range (1,
        /// 8)</param>
        /// <param name="jvmOptions">JVM parameter</param>
        /// <param name="netCoreMainEntryPath">The path to the .NET executable
        /// relative to zip root</param>
        /// <param name="environmentVariables">Collection of environment
        /// variables</param>
        /// <param name="runtimeVersion">Runtime version. Possible values
        /// include: 'Java_8', 'Java_11', 'NetCore_31'</param>
        public DeploymentSettings(int? cpu = default(int?), int? memoryInGB = default(int?), string jvmOptions = default(string), string netCoreMainEntryPath = default(string), IDictionary<string, string> environmentVariables = default(IDictionary<string, string>), string runtimeVersion = default(string))
        {
            Cpu = cpu;
            MemoryInGB = memoryInGB;
            JvmOptions = jvmOptions;
            NetCoreMainEntryPath = netCoreMainEntryPath;
            EnvironmentVariables = environmentVariables;
            RuntimeVersion = runtimeVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets required CPU, basic tier should be 1, standard tier
        /// should be in range (1, 4)
        /// </summary>
        [JsonProperty(PropertyName = "cpu")]
        public int? Cpu { get; set; }

        /// <summary>
        /// Gets or sets required Memory size in GB, basic tier should be in
        /// range (1, 2), standard tier should be in range (1, 8)
        /// </summary>
        [JsonProperty(PropertyName = "memoryInGB")]
        public int? MemoryInGB { get; set; }

        /// <summary>
        /// Gets or sets JVM parameter
        /// </summary>
        [JsonProperty(PropertyName = "jvmOptions")]
        public string JvmOptions { get; set; }

        /// <summary>
        /// Gets or sets the path to the .NET executable relative to zip root
        /// </summary>
        [JsonProperty(PropertyName = "netCoreMainEntryPath")]
        public string NetCoreMainEntryPath { get; set; }

        /// <summary>
        /// Gets or sets collection of environment variables
        /// </summary>
        [JsonProperty(PropertyName = "environmentVariables")]
        public IDictionary<string, string> EnvironmentVariables { get; set; }

        /// <summary>
        /// Gets or sets runtime version. Possible values include: 'Java_8',
        /// 'Java_11', 'NetCore_31'
        /// </summary>
        [JsonProperty(PropertyName = "runtimeVersion")]
        public string RuntimeVersion { get; set; }

    }
}
