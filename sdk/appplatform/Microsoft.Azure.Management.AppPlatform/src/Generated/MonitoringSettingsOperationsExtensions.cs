// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for MonitoringSettingsOperations.
    /// </summary>
    public static partial class MonitoringSettingsOperationsExtensions
    {
            /// <summary>
            /// Get the Monitoring Setting and its properties.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            public static MonitoringSettingResource Get(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName)
            {
                return operations.GetAsync(resourceGroupName, serviceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the Monitoring Setting and its properties.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MonitoringSettingResource> GetAsync(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, serviceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the Monitoring Setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='monitoringSettingResource'>
            /// Parameters for the update operation
            /// </param>
            public static MonitoringSettingResource UpdatePut(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, MonitoringSettingResource monitoringSettingResource)
            {
                return operations.UpdatePutAsync(resourceGroupName, serviceName, monitoringSettingResource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the Monitoring Setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='monitoringSettingResource'>
            /// Parameters for the update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MonitoringSettingResource> UpdatePutAsync(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, MonitoringSettingResource monitoringSettingResource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdatePutWithHttpMessagesAsync(resourceGroupName, serviceName, monitoringSettingResource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the Monitoring Setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='monitoringSettingResource'>
            /// Parameters for the update operation
            /// </param>
            public static MonitoringSettingResource UpdatePatch(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, MonitoringSettingResource monitoringSettingResource)
            {
                return operations.UpdatePatchAsync(resourceGroupName, serviceName, monitoringSettingResource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the Monitoring Setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='monitoringSettingResource'>
            /// Parameters for the update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MonitoringSettingResource> UpdatePatchAsync(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, MonitoringSettingResource monitoringSettingResource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdatePatchWithHttpMessagesAsync(resourceGroupName, serviceName, monitoringSettingResource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the Monitoring Setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='monitoringSettingResource'>
            /// Parameters for the update operation
            /// </param>
            public static MonitoringSettingResource BeginUpdatePut(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, MonitoringSettingResource monitoringSettingResource)
            {
                return operations.BeginUpdatePutAsync(resourceGroupName, serviceName, monitoringSettingResource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the Monitoring Setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='monitoringSettingResource'>
            /// Parameters for the update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MonitoringSettingResource> BeginUpdatePutAsync(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, MonitoringSettingResource monitoringSettingResource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdatePutWithHttpMessagesAsync(resourceGroupName, serviceName, monitoringSettingResource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the Monitoring Setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='monitoringSettingResource'>
            /// Parameters for the update operation
            /// </param>
            public static MonitoringSettingResource BeginUpdatePatch(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, MonitoringSettingResource monitoringSettingResource)
            {
                return operations.BeginUpdatePatchAsync(resourceGroupName, serviceName, monitoringSettingResource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the Monitoring Setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='monitoringSettingResource'>
            /// Parameters for the update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MonitoringSettingResource> BeginUpdatePatchAsync(this IMonitoringSettingsOperations operations, string resourceGroupName, string serviceName, MonitoringSettingResource monitoringSettingResource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdatePatchWithHttpMessagesAsync(resourceGroupName, serviceName, monitoringSettingResource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
