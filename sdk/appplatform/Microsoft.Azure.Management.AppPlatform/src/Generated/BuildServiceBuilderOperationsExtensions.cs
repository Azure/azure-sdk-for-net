// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BuildServiceBuilderOperations.
    /// </summary>
    public static partial class BuildServiceBuilderOperationsExtensions
    {
            /// <summary>
            /// Get a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            public static BuilderResource Get(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName)
            {
                return operations.GetAsync(resourceGroupName, serviceName, buildServiceName, builderName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BuilderResource> GetAsync(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, builderName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            /// <param name='builderResource'>
            /// The target builder for the create or update operation
            /// </param>
            public static BuilderResource CreateOrUpdate(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName, BuilderResource builderResource)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, serviceName, buildServiceName, builderName, builderResource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            /// <param name='builderResource'>
            /// The target builder for the create or update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BuilderResource> CreateOrUpdateAsync(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName, BuilderResource builderResource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, builderName, builderResource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            public static void Delete(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName)
            {
                operations.DeleteAsync(resourceGroupName, serviceName, buildServiceName, builderName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, builderName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List KPack builders result.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            public static IPage<BuilderResource> List(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName)
            {
                return operations.ListAsync(resourceGroupName, serviceName, buildServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List KPack builders result.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BuilderResource>> ListAsync(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            /// <param name='builderResource'>
            /// The target builder for the create or update operation
            /// </param>
            public static BuilderResource BeginCreateOrUpdate(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName, BuilderResource builderResource)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, serviceName, buildServiceName, builderName, builderResource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            /// <param name='builderResource'>
            /// The target builder for the create or update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BuilderResource> BeginCreateOrUpdateAsync(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName, BuilderResource builderResource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, builderName, builderResource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            public static void BeginDelete(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName)
            {
                operations.BeginDeleteAsync(resourceGroupName, serviceName, buildServiceName, builderName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a KPack builder.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='builderName'>
            /// The name of the builder resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IBuildServiceBuilderOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string builderName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, builderName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List KPack builders result.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BuilderResource> ListNext(this IBuildServiceBuilderOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List KPack builders result.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BuilderResource>> ListNextAsync(this IBuildServiceBuilderOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
