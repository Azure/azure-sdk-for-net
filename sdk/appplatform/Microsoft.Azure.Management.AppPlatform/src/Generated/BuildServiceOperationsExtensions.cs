// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BuildServiceOperations.
    /// </summary>
    public static partial class BuildServiceOperationsExtensions
    {
            /// <summary>
            /// List build services resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            public static IPage<BuildService> ListBuildServices(this IBuildServiceOperations operations, string resourceGroupName, string serviceName)
            {
                return operations.ListBuildServicesAsync(resourceGroupName, serviceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List build services resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BuildService>> ListBuildServicesAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBuildServicesWithHttpMessagesAsync(resourceGroupName, serviceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a build service resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            public static BuildService GetBuildService(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName)
            {
                return operations.GetBuildServiceAsync(resourceGroupName, serviceName, buildServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a build service resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BuildService> GetBuildServiceAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetBuildServiceWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List KPack builds.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            public static IPage<Build> ListBuilds(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName)
            {
                return operations.ListBuildsAsync(resourceGroupName, serviceName, buildServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List KPack builds.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Build>> ListBuildsAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBuildsWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a KPack build.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            public static Build GetBuild(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName)
            {
                return operations.GetBuildAsync(resourceGroupName, serviceName, buildServiceName, buildName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a KPack build.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Build> GetBuildAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetBuildWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, buildName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update a KPack build.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            /// <param name='build'>
            /// Parameters for the create or update operation
            /// </param>
            public static Build CreateOrUpdateBuild(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName, Build build)
            {
                return operations.CreateOrUpdateBuildAsync(resourceGroupName, serviceName, buildServiceName, buildName, build).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a KPack build.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            /// <param name='build'>
            /// Parameters for the create or update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Build> CreateOrUpdateBuildAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName, Build build, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateBuildWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, buildName, build, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List KPack build results.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            public static IPage<BuildResult> ListBuildResults(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName)
            {
                return operations.ListBuildResultsAsync(resourceGroupName, serviceName, buildServiceName, buildName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List KPack build results.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BuildResult>> ListBuildResultsAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBuildResultsWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, buildName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a KPack build result.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            /// <param name='buildResultName'>
            /// The name of the build result resource.
            /// </param>
            public static BuildResult GetBuildResult(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName, string buildResultName)
            {
                return operations.GetBuildResultAsync(resourceGroupName, serviceName, buildServiceName, buildName, buildResultName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a KPack build result.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            /// <param name='buildResultName'>
            /// The name of the build result resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BuildResult> GetBuildResultAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName, string buildResultName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetBuildResultWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, buildName, buildResultName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a KPack build result log download URL.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            /// <param name='buildResultName'>
            /// The name of the build result resource.
            /// </param>
            public static BuildResultLog GetBuildResultLog(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName, string buildResultName)
            {
                return operations.GetBuildResultLogAsync(resourceGroupName, serviceName, buildServiceName, buildName, buildResultName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a KPack build result log download URL.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildName'>
            /// The name of the build resource.
            /// </param>
            /// <param name='buildResultName'>
            /// The name of the build result resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BuildResultLog> GetBuildResultLogAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildName, string buildResultName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetBuildResultLogWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, buildName, buildResultName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get an resource upload URL for build service, which may be artifacts or
            /// source archive.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            public static ResourceUploadDefinition GetResourceUploadUrl(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName)
            {
                return operations.GetResourceUploadUrlAsync(resourceGroupName, serviceName, buildServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get an resource upload URL for build service, which may be artifacts or
            /// source archive.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ResourceUploadDefinition> GetResourceUploadUrlAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetResourceUploadUrlWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get all supported buildpacks.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            public static SupportedBuildpacksCollection ListSupportedBuildpacks(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName)
            {
                return operations.ListSupportedBuildpacksAsync(resourceGroupName, serviceName, buildServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all supported buildpacks.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportedBuildpacksCollection> ListSupportedBuildpacksAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListSupportedBuildpacksWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the supported buildpack resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildpackName'>
            /// The name of the buildpack resource.
            /// </param>
            public static SupportedBuildpackResource GetSupportedBuildpack(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildpackName)
            {
                return operations.GetSupportedBuildpackAsync(resourceGroupName, serviceName, buildServiceName, buildpackName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the supported buildpack resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='buildpackName'>
            /// The name of the buildpack resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportedBuildpackResource> GetSupportedBuildpackAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string buildpackName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSupportedBuildpackWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, buildpackName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get all supported stacks.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            public static SupportedStacksCollection ListSupportedStacks(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName)
            {
                return operations.ListSupportedStacksAsync(resourceGroupName, serviceName, buildServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all supported stacks.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportedStacksCollection> ListSupportedStacksAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListSupportedStacksWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the supported stack resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='stackName'>
            /// The name of the stack resource.
            /// </param>
            public static SupportedStackResource GetSupportedStack(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string stackName)
            {
                return operations.GetSupportedStackAsync(resourceGroupName, serviceName, buildServiceName, stackName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the supported stack resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='buildServiceName'>
            /// The name of the build service resource.
            /// </param>
            /// <param name='stackName'>
            /// The name of the stack resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SupportedStackResource> GetSupportedStackAsync(this IBuildServiceOperations operations, string resourceGroupName, string serviceName, string buildServiceName, string stackName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSupportedStackWithHttpMessagesAsync(resourceGroupName, serviceName, buildServiceName, stackName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List build services resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BuildService> ListBuildServicesNext(this IBuildServiceOperations operations, string nextPageLink)
            {
                return operations.ListBuildServicesNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List build services resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BuildService>> ListBuildServicesNextAsync(this IBuildServiceOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBuildServicesNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List KPack builds.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<Build> ListBuildsNext(this IBuildServiceOperations operations, string nextPageLink)
            {
                return operations.ListBuildsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List KPack builds.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Build>> ListBuildsNextAsync(this IBuildServiceOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBuildsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List KPack build results.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BuildResult> ListBuildResultsNext(this IBuildServiceOperations operations, string nextPageLink)
            {
                return operations.ListBuildResultsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List KPack build results.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BuildResult>> ListBuildResultsNextAsync(this IBuildServiceOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBuildResultsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
