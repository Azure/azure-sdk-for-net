// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AppPlatform
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ConfigurationServicesOperations.
    /// </summary>
    public static partial class ConfigurationServicesOperationsExtensions
    {
            /// <summary>
            /// Get the Application Configuration Service and its properties.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            public static ConfigurationServiceResource Get(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName)
            {
                return operations.GetAsync(resourceGroupName, serviceName, configurationServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the Application Configuration Service and its properties.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ConfigurationServiceResource> GetAsync(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, serviceName, configurationServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create the default Application Configuration Service or update the existing
            /// Application Configuration Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='configurationServiceResource'>
            /// Parameters for the update operation
            /// </param>
            public static ConfigurationServiceResource CreateOrUpdate(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, ConfigurationServiceResource configurationServiceResource)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, serviceName, configurationServiceName, configurationServiceResource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create the default Application Configuration Service or update the existing
            /// Application Configuration Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='configurationServiceResource'>
            /// Parameters for the update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ConfigurationServiceResource> CreateOrUpdateAsync(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, ConfigurationServiceResource configurationServiceResource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serviceName, configurationServiceName, configurationServiceResource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Disable the default Application Configuration Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            public static void Delete(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName)
            {
                operations.DeleteAsync(resourceGroupName, serviceName, configurationServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Disable the default Application Configuration Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, serviceName, configurationServiceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Handles requests to list all resources in a Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            public static IPage<ConfigurationServiceResource> List(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName)
            {
                return operations.ListAsync(resourceGroupName, serviceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Handles requests to list all resources in a Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ConfigurationServiceResource>> ListAsync(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, serviceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Check if the Application Configuration Service settings are valid.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='settings'>
            /// Application Configuration Service settings to be validated
            /// </param>
            public static ConfigurationServiceSettingsValidateResult Validate(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, ConfigurationServiceSettings settings)
            {
                return operations.ValidateAsync(resourceGroupName, serviceName, configurationServiceName, settings).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Check if the Application Configuration Service settings are valid.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='settings'>
            /// Application Configuration Service settings to be validated
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ConfigurationServiceSettingsValidateResult> ValidateAsync(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, ConfigurationServiceSettings settings, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ValidateWithHttpMessagesAsync(resourceGroupName, serviceName, configurationServiceName, settings, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create the default Application Configuration Service or update the existing
            /// Application Configuration Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='configurationServiceResource'>
            /// Parameters for the update operation
            /// </param>
            public static ConfigurationServiceResource BeginCreateOrUpdate(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, ConfigurationServiceResource configurationServiceResource)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, serviceName, configurationServiceName, configurationServiceResource).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create the default Application Configuration Service or update the existing
            /// Application Configuration Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='configurationServiceResource'>
            /// Parameters for the update operation
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ConfigurationServiceResource> BeginCreateOrUpdateAsync(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, ConfigurationServiceResource configurationServiceResource, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serviceName, configurationServiceName, configurationServiceResource, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Disable the default Application Configuration Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            public static void BeginDelete(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName)
            {
                operations.BeginDeleteAsync(resourceGroupName, serviceName, configurationServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Disable the default Application Configuration Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, serviceName, configurationServiceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Check if the Application Configuration Service settings are valid.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='settings'>
            /// Application Configuration Service settings to be validated
            /// </param>
            public static ConfigurationServiceSettingsValidateResult BeginValidate(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, ConfigurationServiceSettings settings)
            {
                return operations.BeginValidateAsync(resourceGroupName, serviceName, configurationServiceName, settings).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Check if the Application Configuration Service settings are valid.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Service resource.
            /// </param>
            /// <param name='configurationServiceName'>
            /// The name of Application Configuration Service.
            /// </param>
            /// <param name='settings'>
            /// Application Configuration Service settings to be validated
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ConfigurationServiceSettingsValidateResult> BeginValidateAsync(this IConfigurationServicesOperations operations, string resourceGroupName, string serviceName, string configurationServiceName, ConfigurationServiceSettings settings, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginValidateWithHttpMessagesAsync(resourceGroupName, serviceName, configurationServiceName, settings, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Handles requests to list all resources in a Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ConfigurationServiceResource> ListNext(this IConfigurationServicesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Handles requests to list all resources in a Service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ConfigurationServiceResource>> ListNextAsync(this IConfigurationServicesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
