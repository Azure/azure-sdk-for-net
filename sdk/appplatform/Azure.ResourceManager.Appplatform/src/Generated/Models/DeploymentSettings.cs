// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Appplatform.Models
{
    /// <summary> Deployment settings payload. </summary>
    public partial class DeploymentSettings
    {
        /// <summary> Initializes a new instance of DeploymentSettings. </summary>
        public DeploymentSettings()
        {
            EnvironmentVariables = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of DeploymentSettings. </summary>
        /// <param name="cpu"> Required CPU. This should be 1 for Basic tier, and in range [1, 4] for Standard tier. This is deprecated starting from API version 2021-09-01-preview. Please use the resourceRequests field to set the CPU size. </param>
        /// <param name="memoryInGB"> Required Memory size in GB. This should be in range [1, 2] for Basic tier, and in range [1, 8] for Standard tier. This is deprecated starting from API version 2021-09-01-preview. Please use the resourceRequests field to set the the memory size. </param>
        /// <param name="resourceRequests"> The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later. </param>
        /// <param name="jvmOptions"> JVM parameter. </param>
        /// <param name="netCoreMainEntryPath"> The path to the .NET executable relative to zip root. </param>
        /// <param name="environmentVariables"> Collection of environment variables. </param>
        /// <param name="runtimeVersion"> Runtime version. </param>
        /// <param name="containerProbeSettings"> Container liveness and readiness probe settings. </param>
        internal DeploymentSettings(int? cpu, int? memoryInGB, ResourceRequests resourceRequests, string jvmOptions, string netCoreMainEntryPath, IDictionary<string, string> environmentVariables, RuntimeVersion? runtimeVersion, DeploymentSettingsContainerProbeSettings containerProbeSettings)
        {
            Cpu = cpu;
            MemoryInGB = memoryInGB;
            ResourceRequests = resourceRequests;
            JvmOptions = jvmOptions;
            NetCoreMainEntryPath = netCoreMainEntryPath;
            EnvironmentVariables = environmentVariables;
            RuntimeVersion = runtimeVersion;
            ContainerProbeSettings = containerProbeSettings;
        }

        /// <summary> Required CPU. This should be 1 for Basic tier, and in range [1, 4] for Standard tier. This is deprecated starting from API version 2021-09-01-preview. Please use the resourceRequests field to set the CPU size. </summary>
        public int? Cpu { get; set; }
        /// <summary> Required Memory size in GB. This should be in range [1, 2] for Basic tier, and in range [1, 8] for Standard tier. This is deprecated starting from API version 2021-09-01-preview. Please use the resourceRequests field to set the the memory size. </summary>
        public int? MemoryInGB { get; set; }
        /// <summary> The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later. </summary>
        public ResourceRequests ResourceRequests { get; set; }
        /// <summary> JVM parameter. </summary>
        public string JvmOptions { get; set; }
        /// <summary> The path to the .NET executable relative to zip root. </summary>
        public string NetCoreMainEntryPath { get; set; }
        /// <summary> Collection of environment variables. </summary>
        public IDictionary<string, string> EnvironmentVariables { get; }
        /// <summary> Runtime version. </summary>
        public RuntimeVersion? RuntimeVersion { get; set; }
        /// <summary> Container liveness and readiness probe settings. </summary>
        public DeploymentSettingsContainerProbeSettings ContainerProbeSettings { get; set; }
    }
}
