// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    /// <summary> Deployment resource properties payload. </summary>
    public partial class DeploymentResourceProperties
    {
        /// <summary> Initializes a new instance of DeploymentResourceProperties. </summary>
        public DeploymentResourceProperties()
        {
            Instances = new ChangeTrackingList<DeploymentInstance>();
        }

        /// <summary> Initializes a new instance of DeploymentResourceProperties. </summary>
        /// <param name="source"> Uploaded source information of the deployment. </param>
        /// <param name="deploymentSettings"> Deployment settings of the Deployment. </param>
        /// <param name="provisioningState"> Provisioning state of the Deployment. </param>
        /// <param name="status"> Status of the Deployment. </param>
        /// <param name="active"> Indicates whether the Deployment is active. </param>
        /// <param name="instances"> Collection of instances belong to the Deployment. </param>
        internal DeploymentResourceProperties(UserSourceInfo source, DeploymentSettings deploymentSettings, DeploymentResourceProvisioningState? provisioningState, DeploymentResourceStatus? status, bool? active, IReadOnlyList<DeploymentInstance> instances)
        {
            Source = source;
            DeploymentSettings = deploymentSettings;
            ProvisioningState = provisioningState;
            Status = status;
            Active = active;
            Instances = instances;
        }

        /// <summary> Uploaded source information of the deployment. </summary>
        public UserSourceInfo Source { get; set; }
        /// <summary> Deployment settings of the Deployment. </summary>
        public DeploymentSettings DeploymentSettings { get; set; }
        /// <summary> Provisioning state of the Deployment. </summary>
        public DeploymentResourceProvisioningState? ProvisioningState { get; }
        /// <summary> Status of the Deployment. </summary>
        public DeploymentResourceStatus? Status { get; }
        /// <summary> Indicates whether the Deployment is active. </summary>
        public bool? Active { get; set; }
        /// <summary> Collection of instances belong to the Deployment. </summary>
        public IReadOnlyList<DeploymentInstance> Instances { get; }
    }
}
