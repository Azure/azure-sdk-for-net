// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    public partial class CustomPersistentDiskProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("type");
            writer.WriteStringValue(UnderlyingResourceType.ToString());
            writer.WritePropertyName("mountPath");
            writer.WriteStringValue(MountPath);
            if (Optional.IsDefined(ReadOnly))
            {
                writer.WritePropertyName("readOnly");
                writer.WriteBooleanValue(ReadOnly.Value);
            }
            if (Optional.IsCollectionDefined(MountOptions))
            {
                writer.WritePropertyName("mountOptions");
                writer.WriteStartArray();
                foreach (var item in MountOptions)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static CustomPersistentDiskProperties DeserializeCustomPersistentDiskProperties(JsonElement element)
        {
            if (element.TryGetProperty("type", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "AzureFileVolume": return AzureFileVolume.DeserializeAzureFileVolume(element);
                }
            }
            return UnknownCustomPersistentDiskProperties.DeserializeUnknownCustomPersistentDiskProperties(element);
        }
    }
}
