// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    public partial class AppPlatformCustomContainer : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Server))
            {
                writer.WritePropertyName("server"u8);
                writer.WriteStringValue(Server);
            }
            if (Core.Optional.IsDefined(ContainerImage))
            {
                writer.WritePropertyName("containerImage"u8);
                writer.WriteStringValue(ContainerImage);
            }
            if (Core.Optional.IsCollectionDefined(Command))
            {
                writer.WritePropertyName("command"u8);
                writer.WriteStartArray();
                foreach (var item in Command)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsCollectionDefined(Args))
            {
                writer.WritePropertyName("args"u8);
                writer.WriteStartArray();
                foreach (var item in Args)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsDefined(ImageRegistryCredential))
            {
                writer.WritePropertyName("imageRegistryCredential"u8);
                writer.WriteObjectValue(ImageRegistryCredential);
            }
            if (Core.Optional.IsDefined(LanguageFramework))
            {
                writer.WritePropertyName("languageFramework"u8);
                writer.WriteStringValue(LanguageFramework);
            }
            writer.WriteEndObject();
        }

        internal static AppPlatformCustomContainer DeserializeAppPlatformCustomContainer(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> server = default;
            Core.Optional<string> containerImage = default;
            Core.Optional<IList<string>> command = default;
            Core.Optional<IList<string>> args = default;
            Core.Optional<AppPlatformImageRegistryCredential> imageRegistryCredential = default;
            Core.Optional<string> languageFramework = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("server"u8))
                {
                    server = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("containerImage"u8))
                {
                    containerImage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("command"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    command = array;
                    continue;
                }
                if (property.NameEquals("args"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    args = array;
                    continue;
                }
                if (property.NameEquals("imageRegistryCredential"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    imageRegistryCredential = AppPlatformImageRegistryCredential.DeserializeAppPlatformImageRegistryCredential(property.Value);
                    continue;
                }
                if (property.NameEquals("languageFramework"u8))
                {
                    languageFramework = property.Value.GetString();
                    continue;
                }
            }
            return new AppPlatformCustomContainer(server.Value, containerImage.Value, Core.Optional.ToList(command), Core.Optional.ToList(args), imageRegistryCredential.Value, languageFramework.Value);
        }
    }
}
