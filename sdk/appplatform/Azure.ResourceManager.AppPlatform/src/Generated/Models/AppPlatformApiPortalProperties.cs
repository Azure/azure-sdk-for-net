// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    /// <summary> API portal properties payload. </summary>
    public partial class AppPlatformApiPortalProperties
    {
        /// <summary> Initializes a new instance of <see cref="AppPlatformApiPortalProperties"/>. </summary>
        public AppPlatformApiPortalProperties()
        {
            GatewayIds = new ChangeTrackingList<ResourceIdentifier>();
            SourceUris = new ChangeTrackingList<Uri>();
            Instances = new ChangeTrackingList<AppPlatformApiPortalInstance>();
        }

        /// <summary> Initializes a new instance of <see cref="AppPlatformApiPortalProperties"/>. </summary>
        /// <param name="provisioningState"> State of the API portal. </param>
        /// <param name="isPublic"> Indicates whether the API portal exposes endpoint. </param>
        /// <param name="uri"> URL of the API portal, exposed when 'public' is true. </param>
        /// <param name="isHttpsOnly"> Indicate if only https is allowed. </param>
        /// <param name="gatewayIds"> The array of resource Ids of gateway to integrate with API portal. </param>
        /// <param name="sourceUris"> Collection of OpenAPI source URL locations. </param>
        /// <param name="ssoProperties"> Single sign-on related configuration. </param>
        /// <param name="resourceRequests"> The requested resource quantity for required CPU and Memory. </param>
        /// <param name="instances"> Collection of instances belong to API portal. </param>
        internal AppPlatformApiPortalProperties(AppPlatformApiPortalProvisioningState? provisioningState, bool? isPublic, Uri uri, bool? isHttpsOnly, IList<ResourceIdentifier> gatewayIds, IList<Uri> sourceUris, AppPlatformSsoProperties ssoProperties, AppPlatformApiPortalResourceRequirements resourceRequests, IReadOnlyList<AppPlatformApiPortalInstance> instances)
        {
            ProvisioningState = provisioningState;
            IsPublic = isPublic;
            Uri = uri;
            IsHttpsOnly = isHttpsOnly;
            GatewayIds = gatewayIds;
            SourceUris = sourceUris;
            SsoProperties = ssoProperties;
            ResourceRequests = resourceRequests;
            Instances = instances;
        }

        /// <summary> State of the API portal. </summary>
        public AppPlatformApiPortalProvisioningState? ProvisioningState { get; }
        /// <summary> Indicates whether the API portal exposes endpoint. </summary>
        public bool? IsPublic { get; set; }
        /// <summary> URL of the API portal, exposed when 'public' is true. </summary>
        public Uri Uri { get; }
        /// <summary> Indicate if only https is allowed. </summary>
        public bool? IsHttpsOnly { get; set; }
        /// <summary> The array of resource Ids of gateway to integrate with API portal. </summary>
        public IList<ResourceIdentifier> GatewayIds { get; }
        /// <summary> Collection of OpenAPI source URL locations. </summary>
        public IList<Uri> SourceUris { get; }
        /// <summary> Single sign-on related configuration. </summary>
        public AppPlatformSsoProperties SsoProperties { get; set; }
        /// <summary> The requested resource quantity for required CPU and Memory. </summary>
        public AppPlatformApiPortalResourceRequirements ResourceRequests { get; }
        /// <summary> Collection of instances belong to API portal. </summary>
        public IReadOnlyList<AppPlatformApiPortalInstance> Instances { get; }
    }
}
