// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    /// <summary> Cross-Origin Resource Sharing property. </summary>
    public partial class AppPlatformGatewayCorsProperties
    {
        /// <summary> Initializes a new instance of <see cref="AppPlatformGatewayCorsProperties"/>. </summary>
        public AppPlatformGatewayCorsProperties()
        {
            AllowedOrigins = new ChangeTrackingList<string>();
            AllowedMethods = new ChangeTrackingList<string>();
            AllowedHeaders = new ChangeTrackingList<string>();
            ExposedHeaders = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="AppPlatformGatewayCorsProperties"/>. </summary>
        /// <param name="allowedOrigins"> Allowed origins to make cross-site requests. The special value `*` allows all domains. </param>
        /// <param name="allowedMethods"> Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default. </param>
        /// <param name="allowedHeaders"> Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header. </param>
        /// <param name="maxAge"> How long, in seconds, the response from a pre-flight request can be cached by clients. </param>
        /// <param name="areCredentialsAllowed"> Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`. </param>
        /// <param name="exposedHeaders"> HTTP response headers to expose for cross-site requests. </param>
        internal AppPlatformGatewayCorsProperties(IList<string> allowedOrigins, IList<string> allowedMethods, IList<string> allowedHeaders, int? maxAge, bool? areCredentialsAllowed, IList<string> exposedHeaders)
        {
            AllowedOrigins = allowedOrigins;
            AllowedMethods = allowedMethods;
            AllowedHeaders = allowedHeaders;
            MaxAge = maxAge;
            AreCredentialsAllowed = areCredentialsAllowed;
            ExposedHeaders = exposedHeaders;
        }

        /// <summary> Allowed origins to make cross-site requests. The special value `*` allows all domains. </summary>
        public IList<string> AllowedOrigins { get; }
        /// <summary> Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default. </summary>
        public IList<string> AllowedMethods { get; }
        /// <summary> Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header. </summary>
        public IList<string> AllowedHeaders { get; }
        /// <summary> How long, in seconds, the response from a pre-flight request can be cached by clients. </summary>
        public int? MaxAge { get; set; }
        /// <summary> Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`. </summary>
        public bool? AreCredentialsAllowed { get; set; }
        /// <summary> HTTP response headers to expose for cross-site requests. </summary>
        public IList<string> ExposedHeaders { get; }
    }
}
