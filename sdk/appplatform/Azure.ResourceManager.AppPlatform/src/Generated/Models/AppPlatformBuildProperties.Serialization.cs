// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.AppPlatform.Models
{
    public partial class AppPlatformBuildProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(RelativePath))
            {
                writer.WritePropertyName("relativePath"u8);
                writer.WriteStringValue(RelativePath);
            }
            if (Core.Optional.IsDefined(Builder))
            {
                writer.WritePropertyName("builder"u8);
                writer.WriteStringValue(Builder);
            }
            if (Core.Optional.IsDefined(AgentPool))
            {
                writer.WritePropertyName("agentPool"u8);
                writer.WriteStringValue(AgentPool);
            }
            if (Core.Optional.IsCollectionDefined(Env))
            {
                writer.WritePropertyName("env"u8);
                writer.WriteStartObject();
                foreach (var item in Env)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Core.Optional.IsDefined(ResourceRequests))
            {
                writer.WritePropertyName("resourceRequests"u8);
                writer.WriteObjectValue(ResourceRequests);
            }
            writer.WriteEndObject();
        }

        internal static AppPlatformBuildProperties DeserializeAppPlatformBuildProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> relativePath = default;
            Core.Optional<string> builder = default;
            Core.Optional<string> agentPool = default;
            Core.Optional<AppPlatformBuildProvisioningState> provisioningState = default;
            Core.Optional<IDictionary<string, string>> env = default;
            Core.Optional<SubResource> triggeredBuildResult = default;
            Core.Optional<AppPlatformBuildResourceRequirements> resourceRequests = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("relativePath"u8))
                {
                    relativePath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("builder"u8))
                {
                    builder = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("agentPool"u8))
                {
                    agentPool = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    provisioningState = new AppPlatformBuildProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("env"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    env = dictionary;
                    continue;
                }
                if (property.NameEquals("triggeredBuildResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    triggeredBuildResult = JsonSerializer.Deserialize<SubResource>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("resourceRequests"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resourceRequests = AppPlatformBuildResourceRequirements.DeserializeAppPlatformBuildResourceRequirements(property.Value);
                    continue;
                }
            }
            return new AppPlatformBuildProperties(relativePath.Value, builder.Value, agentPool.Value, Core.Optional.ToNullable(provisioningState), Core.Optional.ToDictionary(env), triggeredBuildResult, resourceRequests.Value);
        }
    }
}
