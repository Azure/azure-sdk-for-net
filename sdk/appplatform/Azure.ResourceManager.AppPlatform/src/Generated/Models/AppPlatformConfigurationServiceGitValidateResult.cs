// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    /// <summary> Validation result for configuration service settings. </summary>
    public partial class AppPlatformConfigurationServiceGitValidateResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AppPlatformConfigurationServiceGitValidateResult"/>. </summary>
        internal AppPlatformConfigurationServiceGitValidateResult()
        {
            GitReposValidationResult = new ChangeTrackingList<AppPlatformConfigurationServiceGitReposValidationMessages>();
        }

        /// <summary> Initializes a new instance of <see cref="AppPlatformConfigurationServiceGitValidateResult"/>. </summary>
        /// <param name="isValid"> Indicate if the configuration service settings are valid. </param>
        /// <param name="gitReposValidationResult"> The detail validation results. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AppPlatformConfigurationServiceGitValidateResult(bool? isValid, IReadOnlyList<AppPlatformConfigurationServiceGitReposValidationMessages> gitReposValidationResult, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            IsValid = isValid;
            GitReposValidationResult = gitReposValidationResult;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Indicate if the configuration service settings are valid. </summary>
        public bool? IsValid { get; }
        /// <summary> The detail validation results. </summary>
        public IReadOnlyList<AppPlatformConfigurationServiceGitReposValidationMessages> GitReposValidationResult { get; }
    }
}
