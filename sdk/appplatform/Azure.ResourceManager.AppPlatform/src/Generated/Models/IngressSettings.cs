// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.ResourceManager.AppPlatform.Models
{
    /// <summary> App ingress settings payload. </summary>
    public partial class IngressSettings
    {
        /// <summary> Initializes a new instance of IngressSettings. </summary>
        public IngressSettings()
        {
        }

        /// <summary> Initializes a new instance of IngressSettings. </summary>
        /// <param name="readTimeoutInSeconds"> Ingress read time out in seconds. </param>
        /// <param name="sendTimeoutInSeconds"> Ingress send time out in seconds. </param>
        /// <param name="sessionAffinity"> Type of the affinity, set this to Cookie to enable session affinity. </param>
        /// <param name="sessionCookieMaxAge"> Time in seconds until the cookie expires. </param>
        /// <param name="backendProtocol"> How ingress should communicate with this app backend service. </param>
        /// <param name="clientAuth"> Client-Certification Authentication. </param>
        internal IngressSettings(int? readTimeoutInSeconds, int? sendTimeoutInSeconds, SessionAffinity? sessionAffinity, int? sessionCookieMaxAge, BackendProtocol? backendProtocol, IngressSettingsClientAuth clientAuth)
        {
            ReadTimeoutInSeconds = readTimeoutInSeconds;
            SendTimeoutInSeconds = sendTimeoutInSeconds;
            SessionAffinity = sessionAffinity;
            SessionCookieMaxAge = sessionCookieMaxAge;
            BackendProtocol = backendProtocol;
            ClientAuth = clientAuth;
        }

        /// <summary> Ingress read time out in seconds. </summary>
        public int? ReadTimeoutInSeconds { get; set; }
        /// <summary> Ingress send time out in seconds. </summary>
        public int? SendTimeoutInSeconds { get; set; }
        /// <summary> Type of the affinity, set this to Cookie to enable session affinity. </summary>
        public SessionAffinity? SessionAffinity { get; set; }
        /// <summary> Time in seconds until the cookie expires. </summary>
        public int? SessionCookieMaxAge { get; set; }
        /// <summary> How ingress should communicate with this app backend service. </summary>
        public BackendProtocol? BackendProtocol { get; set; }
        /// <summary> Client-Certification Authentication. </summary>
        internal IngressSettingsClientAuth ClientAuth { get; set; }
        /// <summary> Collection of certificate resource id. </summary>
        public IList<string> ClientAuthCertificates
        {
            get
            {
                if (ClientAuth is null)
                    ClientAuth = new IngressSettingsClientAuth();
                return ClientAuth.Certificates;
            }
        }
    }
}
