// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    public partial class MonitoringSettingProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Error))
            {
                writer.WritePropertyName("error");
                writer.WriteObjectValue(Error);
            }
            if (Optional.IsDefined(TraceEnabled))
            {
                writer.WritePropertyName("traceEnabled");
                writer.WriteBooleanValue(TraceEnabled.Value);
            }
            if (Optional.IsDefined(AppInsightsInstrumentationKey))
            {
                writer.WritePropertyName("appInsightsInstrumentationKey");
                writer.WriteStringValue(AppInsightsInstrumentationKey);
            }
            if (Optional.IsDefined(AppInsightsSamplingRate))
            {
                writer.WritePropertyName("appInsightsSamplingRate");
                writer.WriteNumberValue(AppInsightsSamplingRate.Value);
            }
            if (Optional.IsDefined(AppInsightsAgentVersions))
            {
                writer.WritePropertyName("appInsightsAgentVersions");
                writer.WriteObjectValue(AppInsightsAgentVersions);
            }
            writer.WriteEndObject();
        }

        internal static MonitoringSettingProperties DeserializeMonitoringSettingProperties(JsonElement element)
        {
            Optional<MonitoringSettingState> provisioningState = default;
            Optional<AppPlatformErrorInfo> error = default;
            Optional<bool> traceEnabled = default;
            Optional<string> appInsightsInstrumentationKey = default;
            Optional<double> appInsightsSamplingRate = default;
            Optional<ApplicationInsightsAgentVersions> appInsightsAgentVersions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new MonitoringSettingState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("error"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    error = AppPlatformErrorInfo.DeserializeAppPlatformErrorInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("traceEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    traceEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("appInsightsInstrumentationKey"))
                {
                    appInsightsInstrumentationKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("appInsightsSamplingRate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    appInsightsSamplingRate = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("appInsightsAgentVersions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    appInsightsAgentVersions = ApplicationInsightsAgentVersions.DeserializeApplicationInsightsAgentVersions(property.Value);
                    continue;
                }
            }
            return new MonitoringSettingProperties(Optional.ToNullable(provisioningState), error.Value, Optional.ToNullable(traceEnabled), appInsightsInstrumentationKey.Value, Optional.ToNullable(appInsightsSamplingRate), appInsightsAgentVersions.Value);
        }
    }
}
