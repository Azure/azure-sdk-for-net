// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppPlatform.Models
{
    public partial class AppInstanceHttpGetAction : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Path))
            {
                writer.WritePropertyName("path");
                writer.WriteStringValue(Path);
            }
            if (Optional.IsDefined(Scheme))
            {
                writer.WritePropertyName("scheme");
                writer.WriteStringValue(Scheme.Value.ToString());
            }
            writer.WritePropertyName("type");
            writer.WriteStringValue(ProbeActionType.ToString());
            writer.WriteEndObject();
        }

        internal static AppInstanceHttpGetAction DeserializeAppInstanceHttpGetAction(JsonElement element)
        {
            Optional<string> path = default;
            Optional<AppInstanceHttpSchemeType> scheme = default;
            ProbeActionType type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("path"))
                {
                    path = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("scheme"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    scheme = new AppInstanceHttpSchemeType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ProbeActionType(property.Value.GetString());
                    continue;
                }
            }
            return new AppInstanceHttpGetAction(type, path.Value, Optional.ToNullable(scheme));
        }
    }
}
