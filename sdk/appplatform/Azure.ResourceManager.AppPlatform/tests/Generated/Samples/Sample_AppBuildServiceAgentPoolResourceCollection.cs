// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.AppPlatform.Models;

namespace Azure.ResourceManager.AppPlatform
{
    public partial class Sample_AppBuildServiceAgentPoolResourceCollection
    {
        // BuildServiceAgentPool_List
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_BuildServiceAgentPoolList()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/BuildServiceAgentPool_List.json
            // this example is just showing the usage of "BuildServiceAgentPool_List" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this AppBuildServiceResource created on azure
            // for more information of creating AppBuildServiceResource, please refer to the document of AppBuildServiceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string buildServiceName = "default";
            ResourceIdentifier appBuildServiceResourceId = AppBuildServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, buildServiceName);
            AppBuildServiceResource appBuildService = client.GetAppBuildServiceResource(appBuildServiceResourceId);

            // get the collection of this AppBuildServiceAgentPoolResource
            AppBuildServiceAgentPoolResourceCollection collection = appBuildService.GetAppBuildServiceAgentPoolResources();

            // invoke the operation and iterate over the result
            await foreach (AppBuildServiceAgentPoolResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AppBuildServiceAgentPoolResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // BuildServiceAgentPool_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_BuildServiceAgentPoolGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/BuildServiceAgentPool_Get.json
            // this example is just showing the usage of "BuildServiceAgentPool_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this AppBuildServiceResource created on azure
            // for more information of creating AppBuildServiceResource, please refer to the document of AppBuildServiceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string buildServiceName = "default";
            ResourceIdentifier appBuildServiceResourceId = AppBuildServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, buildServiceName);
            AppBuildServiceResource appBuildService = client.GetAppBuildServiceResource(appBuildServiceResourceId);

            // get the collection of this AppBuildServiceAgentPoolResource
            AppBuildServiceAgentPoolResourceCollection collection = appBuildService.GetAppBuildServiceAgentPoolResources();

            // invoke the operation
            string agentPoolName = "default";
            AppBuildServiceAgentPoolResource result = await collection.GetAsync(agentPoolName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AppBuildServiceAgentPoolResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // BuildServiceAgentPool_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_BuildServiceAgentPoolGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/BuildServiceAgentPool_Get.json
            // this example is just showing the usage of "BuildServiceAgentPool_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this AppBuildServiceResource created on azure
            // for more information of creating AppBuildServiceResource, please refer to the document of AppBuildServiceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string buildServiceName = "default";
            ResourceIdentifier appBuildServiceResourceId = AppBuildServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, buildServiceName);
            AppBuildServiceResource appBuildService = client.GetAppBuildServiceResource(appBuildServiceResourceId);

            // get the collection of this AppBuildServiceAgentPoolResource
            AppBuildServiceAgentPoolResourceCollection collection = appBuildService.GetAppBuildServiceAgentPoolResources();

            // invoke the operation
            string agentPoolName = "default";
            bool result = await collection.ExistsAsync(agentPoolName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // BuildServiceAgentPool_UpdatePut
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_BuildServiceAgentPoolUpdatePut()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/BuildServiceAgentPool_UpdatePut.json
            // this example is just showing the usage of "BuildServiceAgentPool_UpdatePut" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this AppBuildServiceResource created on azure
            // for more information of creating AppBuildServiceResource, please refer to the document of AppBuildServiceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string buildServiceName = "default";
            ResourceIdentifier appBuildServiceResourceId = AppBuildServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, buildServiceName);
            AppBuildServiceResource appBuildService = client.GetAppBuildServiceResource(appBuildServiceResourceId);

            // get the collection of this AppBuildServiceAgentPoolResource
            AppBuildServiceAgentPoolResourceCollection collection = appBuildService.GetAppBuildServiceAgentPoolResources();

            // invoke the operation
            string agentPoolName = "default";
            AppBuildServiceAgentPoolResourceData data = new AppBuildServiceAgentPoolResourceData()
            {
                Properties = new BuildServiceAgentPoolProperties()
                {
                    PoolSize = new BuildServiceAgentPoolSizeProperties()
                    {
                        Name = "S3",
                    },
                },
            };
            ArmOperation<AppBuildServiceAgentPoolResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, agentPoolName, data);
            AppBuildServiceAgentPoolResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AppBuildServiceAgentPoolResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
