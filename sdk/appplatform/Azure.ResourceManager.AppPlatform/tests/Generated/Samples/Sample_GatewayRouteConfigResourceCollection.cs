// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.AppPlatform.Models;

namespace Azure.ResourceManager.AppPlatform
{
    public partial class Sample_GatewayRouteConfigResourceCollection
    {
        // GatewayRouteConfigs_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GatewayRouteConfigsGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/GatewayRouteConfigs_Get.json
            // this example is just showing the usage of "GatewayRouteConfigs_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this GatewayResource created on azure
            // for more information of creating GatewayResource, please refer to the document of GatewayResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string gatewayName = "default";
            ResourceIdentifier gatewayResourceId = GatewayResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, gatewayName);
            GatewayResource gatewayResource = client.GetGatewayResource(gatewayResourceId);

            // get the collection of this GatewayRouteConfigResource
            GatewayRouteConfigResourceCollection collection = gatewayResource.GetGatewayRouteConfigResources();

            // invoke the operation
            string routeConfigName = "myRouteConfig";
            GatewayRouteConfigResource result = await collection.GetAsync(routeConfigName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            GatewayRouteConfigResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // GatewayRouteConfigs_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GatewayRouteConfigsGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/GatewayRouteConfigs_Get.json
            // this example is just showing the usage of "GatewayRouteConfigs_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this GatewayResource created on azure
            // for more information of creating GatewayResource, please refer to the document of GatewayResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string gatewayName = "default";
            ResourceIdentifier gatewayResourceId = GatewayResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, gatewayName);
            GatewayResource gatewayResource = client.GetGatewayResource(gatewayResourceId);

            // get the collection of this GatewayRouteConfigResource
            GatewayRouteConfigResourceCollection collection = gatewayResource.GetGatewayRouteConfigResources();

            // invoke the operation
            string routeConfigName = "myRouteConfig";
            bool result = await collection.ExistsAsync(routeConfigName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // GatewayRouteConfigs_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_GatewayRouteConfigsCreateOrUpdate()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/GatewayRouteConfigs_CreateOrUpdate.json
            // this example is just showing the usage of "GatewayRouteConfigs_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this GatewayResource created on azure
            // for more information of creating GatewayResource, please refer to the document of GatewayResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string gatewayName = "default";
            ResourceIdentifier gatewayResourceId = GatewayResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, gatewayName);
            GatewayResource gatewayResource = client.GetGatewayResource(gatewayResourceId);

            // get the collection of this GatewayRouteConfigResource
            GatewayRouteConfigResourceCollection collection = gatewayResource.GetGatewayRouteConfigResources();

            // invoke the operation
            string routeConfigName = "myRouteConfig";
            GatewayRouteConfigResourceData data = new GatewayRouteConfigResourceData()
            {
                Properties = new GatewayRouteConfigProperties()
                {
                    AppResourceId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myApp",
                    Routes =
{
new GatewayApiRoute()
{
Title = "myApp route config",
SsoEnabled = true,
Predicates =
{
"Path=/api5/customer/**"
},
Filters =
{
"StripPrefix=2","RateLimit=1,1s"
},
}
},
                },
            };
            ArmOperation<GatewayRouteConfigResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, routeConfigName, data);
            GatewayRouteConfigResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            GatewayRouteConfigResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // GatewayRouteConfigs_List
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_GatewayRouteConfigsList()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/GatewayRouteConfigs_List.json
            // this example is just showing the usage of "GatewayRouteConfigs_List" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this GatewayResource created on azure
            // for more information of creating GatewayResource, please refer to the document of GatewayResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string gatewayName = "default";
            ResourceIdentifier gatewayResourceId = GatewayResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, gatewayName);
            GatewayResource gatewayResource = client.GetGatewayResource(gatewayResourceId);

            // get the collection of this GatewayRouteConfigResource
            GatewayRouteConfigResourceCollection collection = gatewayResource.GetGatewayRouteConfigResources();

            // invoke the operation and iterate over the result
            await foreach (GatewayRouteConfigResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                GatewayRouteConfigResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
