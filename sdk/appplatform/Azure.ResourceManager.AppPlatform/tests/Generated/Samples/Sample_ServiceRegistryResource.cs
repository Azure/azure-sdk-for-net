// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;

namespace Azure.ResourceManager.AppPlatform
{
    public partial class Sample_ServiceRegistryResource
    {
        // ServiceRegistries_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ServiceRegistriesGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/ServiceRegistries_Get.json
            // this example is just showing the usage of "ServiceRegistries_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ServiceRegistryResource created on azure
            // for more information of creating ServiceRegistryResource, please refer to the document of ServiceRegistryResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string serviceRegistryName = "default";
            ResourceIdentifier serviceRegistryResourceId = ServiceRegistryResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, serviceRegistryName);
            ServiceRegistryResource serviceRegistryResource = client.GetServiceRegistryResource(serviceRegistryResourceId);

            // invoke the operation
            ServiceRegistryResource result = await serviceRegistryResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServiceRegistryResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ServiceRegistries_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_ServiceRegistriesCreateOrUpdate()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/ServiceRegistries_CreateOrUpdate.json
            // this example is just showing the usage of "ServiceRegistries_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ServiceRegistryResource created on azure
            // for more information of creating ServiceRegistryResource, please refer to the document of ServiceRegistryResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string serviceRegistryName = "default";
            ResourceIdentifier serviceRegistryResourceId = ServiceRegistryResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, serviceRegistryName);
            ServiceRegistryResource serviceRegistryResource = client.GetServiceRegistryResource(serviceRegistryResourceId);

            // invoke the operation
            ArmOperation<ServiceRegistryResource> lro = await serviceRegistryResource.UpdateAsync(WaitUntil.Completed);
            ServiceRegistryResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServiceRegistryResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ServiceRegistries_Delete
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_ServiceRegistriesDelete()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/ServiceRegistries_Delete.json
            // this example is just showing the usage of "ServiceRegistries_Delete" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ServiceRegistryResource created on azure
            // for more information of creating ServiceRegistryResource, please refer to the document of ServiceRegistryResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string serviceRegistryName = "default";
            ResourceIdentifier serviceRegistryResourceId = ServiceRegistryResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, serviceRegistryName);
            ServiceRegistryResource serviceRegistryResource = client.GetServiceRegistryResource(serviceRegistryResourceId);

            // invoke the operation
            await serviceRegistryResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
