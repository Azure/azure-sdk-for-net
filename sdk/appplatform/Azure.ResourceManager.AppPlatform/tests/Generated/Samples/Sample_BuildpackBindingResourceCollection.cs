// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.AppPlatform.Models;

namespace Azure.ResourceManager.AppPlatform
{
    public partial class Sample_BuildpackBindingResourceCollection
    {
        // BuildpackBinding_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_BuildpackBindingGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/BuildpackBinding_Get.json
            // this example is just showing the usage of "BuildpackBinding_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this AppBuilderResource created on azure
            // for more information of creating AppBuilderResource, please refer to the document of AppBuilderResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string buildServiceName = "default";
            string builderName = "default";
            ResourceIdentifier appBuilderResourceId = AppBuilderResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, buildServiceName, builderName);
            AppBuilderResource appBuilderResource = client.GetAppBuilderResource(appBuilderResourceId);

            // get the collection of this BuildpackBindingResource
            BuildpackBindingResourceCollection collection = appBuilderResource.GetBuildpackBindingResources();

            // invoke the operation
            string buildpackBindingName = "myBuildpackBinding";
            BuildpackBindingResource result = await collection.GetAsync(buildpackBindingName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BuildpackBindingResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // BuildpackBinding_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_BuildpackBindingGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/BuildpackBinding_Get.json
            // this example is just showing the usage of "BuildpackBinding_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this AppBuilderResource created on azure
            // for more information of creating AppBuilderResource, please refer to the document of AppBuilderResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string buildServiceName = "default";
            string builderName = "default";
            ResourceIdentifier appBuilderResourceId = AppBuilderResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, buildServiceName, builderName);
            AppBuilderResource appBuilderResource = client.GetAppBuilderResource(appBuilderResourceId);

            // get the collection of this BuildpackBindingResource
            BuildpackBindingResourceCollection collection = appBuilderResource.GetBuildpackBindingResources();

            // invoke the operation
            string buildpackBindingName = "myBuildpackBinding";
            bool result = await collection.ExistsAsync(buildpackBindingName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // BuildpackBinding_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_BuildpackBindingCreateOrUpdate()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/BuildpackBinding_CreateOrUpdate.json
            // this example is just showing the usage of "BuildpackBinding_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this AppBuilderResource created on azure
            // for more information of creating AppBuilderResource, please refer to the document of AppBuilderResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string buildServiceName = "default";
            string builderName = "default";
            ResourceIdentifier appBuilderResourceId = AppBuilderResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, buildServiceName, builderName);
            AppBuilderResource appBuilderResource = client.GetAppBuilderResource(appBuilderResourceId);

            // get the collection of this BuildpackBindingResource
            BuildpackBindingResourceCollection collection = appBuilderResource.GetBuildpackBindingResources();

            // invoke the operation
            string buildpackBindingName = "myBuildpackBinding";
            BuildpackBindingResourceData data = new BuildpackBindingResourceData()
            {
                Properties = new BuildpackBindingProperties()
                {
                    BindingType = BindingType.ApplicationInsights,
                    LaunchProperties = new BuildpackBindingLaunchProperties()
                    {
                        Properties =
{
["abc"] = "def",
["any-string"] = "any-string",
["sampling-rate"] = "12.0",
},
                        Secrets =
{
["connection-string"] = "XXXXXXXXXXXXXXXXX=XXXXXXXXXXXXX-XXXXXXXXXXXXXXXXXXX;XXXXXXXXXXXXXXXXX=XXXXXXXXXXXXXXXXXXX",
},
                    },
                },
            };
            ArmOperation<BuildpackBindingResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, buildpackBindingName, data);
            BuildpackBindingResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BuildpackBindingResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // BuildpackBinding_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_BuildpackBindingGet()
        {
            // Generated from example definition: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-03-01-preview/examples/BuildpackBinding_List.json
            // this example is just showing the usage of "BuildpackBinding_List" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this AppBuilderResource created on azure
            // for more information of creating AppBuilderResource, please refer to the document of AppBuilderResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string serviceName = "myservice";
            string buildServiceName = "default";
            string builderName = "default";
            ResourceIdentifier appBuilderResourceId = AppBuilderResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, buildServiceName, builderName);
            AppBuilderResource appBuilderResource = client.GetAppBuilderResource(appBuilderResourceId);

            // get the collection of this BuildpackBindingResource
            BuildpackBindingResourceCollection collection = appBuilderResource.GetBuildpackBindingResources();

            // invoke the operation and iterate over the result
            await foreach (BuildpackBindingResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                BuildpackBindingResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
