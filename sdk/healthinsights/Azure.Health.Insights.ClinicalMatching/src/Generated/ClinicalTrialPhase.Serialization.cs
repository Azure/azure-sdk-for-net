// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Health.Insights.ClinicalMatching
{
    internal static partial class ClinicalTrialPhaseExtensions
    {
        public static string ToSerialString(this ClinicalTrialPhase value) => value switch
        {
            ClinicalTrialPhase.NotApplicable => "notApplicable",
            ClinicalTrialPhase.EarlyPhase1 => "earlyPhase1",
            ClinicalTrialPhase.Phase1 => "phase1",
            ClinicalTrialPhase.Phase2 => "phase2",
            ClinicalTrialPhase.Phase3 => "phase3",
            ClinicalTrialPhase.Phase4 => "phase4",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ClinicalTrialPhase value.")
        };

        public static ClinicalTrialPhase ToClinicalTrialPhase(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "notApplicable")) return ClinicalTrialPhase.NotApplicable;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "earlyPhase1")) return ClinicalTrialPhase.EarlyPhase1;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "phase1")) return ClinicalTrialPhase.Phase1;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "phase2")) return ClinicalTrialPhase.Phase2;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "phase3")) return ClinicalTrialPhase.Phase3;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "phase4")) return ClinicalTrialPhase.Phase4;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ClinicalTrialPhase value.");
        }
    }
}
