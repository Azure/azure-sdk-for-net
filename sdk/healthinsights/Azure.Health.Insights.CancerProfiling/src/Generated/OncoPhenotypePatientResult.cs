// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Health.Insights.CancerProfiling
{
    /// <summary> The results of the model's work for a single patient. </summary>
    public partial class OncoPhenotypePatientResult
    {
        /// <summary> Initializes a new instance of <see cref="OncoPhenotypePatientResult"/>. </summary>
        /// <param name="id"> The identifier given for the patient in the request. </param>
        /// <param name="inferences"> The model's inferences for the given patient. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="inferences"/> is null. </exception>
        internal OncoPhenotypePatientResult(string id, IEnumerable<OncoPhenotypeInference> inferences)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(inferences, nameof(inferences));

            Id = id;
            Inferences = inferences.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="OncoPhenotypePatientResult"/>. </summary>
        /// <param name="id"> The identifier given for the patient in the request. </param>
        /// <param name="inferences"> The model's inferences for the given patient. </param>
        internal OncoPhenotypePatientResult(string id, IReadOnlyList<OncoPhenotypeInference> inferences)
        {
            Id = id;
            Inferences = inferences;
        }

        /// <summary> The identifier given for the patient in the request. </summary>
        public string Id { get; }
        /// <summary> The model's inferences for the given patient. </summary>
        public IReadOnlyList<OncoPhenotypeInference> Inferences { get; }
    }
}
