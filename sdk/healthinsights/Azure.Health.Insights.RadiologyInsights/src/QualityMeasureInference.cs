// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> A QualityMeasure inference captures the  MIPS ('measure based incentive payment system') quality measure criteria in the document that are used to measure the data completeness. </summary>
    public partial class QualityMeasureInference : RadiologyInsightsInference
    {
        /// <summary> Initializes a new instance of <see cref="QualityMeasureInference"/>. </summary>
        /// <param name="qualityMeasureDenominator"> The denominator, which identifies the QualityMeasure kind. </param>
        /// <param name="complianceType"> The ComplianceType indicates whether the document is compliant for the specified QualityMeasure or not, or if exceptions apply. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="qualityMeasureDenominator"/> is null. </exception>
        internal QualityMeasureInference(string qualityMeasureDenominator, QualityMeasureComplianceType complianceType)
        {
            Argument.AssertNotNull(qualityMeasureDenominator, nameof(qualityMeasureDenominator));

            Kind = RadiologyInsightsInferenceType.QualityMeasure;
            QualityMeasureDenominator = qualityMeasureDenominator;
            ComplianceType = complianceType;
            QualityCriteria = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="QualityMeasureInference"/>. </summary>
        /// <param name="kind"> Discriminator property for RadiologyInsightsInference. </param>
        /// <param name="extension"> Additional Content defined by implementations. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="qualityMeasureDenominator"> The denominator, which identifies the QualityMeasure kind. </param>
        /// <param name="complianceType"> The ComplianceType indicates whether the document is compliant for the specified QualityMeasure or not, or if exceptions apply. </param>
        /// <param name="qualityCriteria"> List of quality criteria identified in the document, if any. </param>
        internal QualityMeasureInference(RadiologyInsightsInferenceType kind, IReadOnlyList<FhirR4Extension> extension, IDictionary<string, BinaryData> serializedAdditionalRawData, string qualityMeasureDenominator, QualityMeasureComplianceType complianceType, IReadOnlyList<string> qualityCriteria) : base(kind, extension, serializedAdditionalRawData)
        {
            QualityMeasureDenominator = qualityMeasureDenominator;
            ComplianceType = complianceType;
            QualityCriteria = qualityCriteria;
        }

        /// <summary> Initializes a new instance of <see cref="QualityMeasureInference"/> for deserialization. </summary>
        internal QualityMeasureInference()
        {
        }

        /// <summary> The denominator, which identifies the QualityMeasure kind. </summary>
        public string QualityMeasureDenominator { get; }
        /// <summary> The ComplianceType indicates whether the document is compliant for the specified QualityMeasure or not, or if exceptions apply. </summary>
        public QualityMeasureComplianceType ComplianceType { get; }
        /// <summary> List of quality criteria identified in the document, if any. </summary>
        public IReadOnlyList<string> QualityCriteria { get; }
    }
}
