// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure;

namespace Azure.Health.Insights.RadiologyInsights
{
    public partial class RadiologyInsightsPatientResult
    {
        internal static RadiologyInsightsPatientResult DeserializeRadiologyInsightsPatientResult(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string patientId = default;
            IReadOnlyList<RadiologyInsightsInference> inferences = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("patientId"u8))
                {
                    patientId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("inferences"u8))
                {
                    List<RadiologyInsightsInference> array = new List<RadiologyInsightsInference>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RadiologyInsightsInference.DeserializeRadiologyInsightsInference(item));
                    }
                    inferences = array;
                    continue;
                }
            }
            return new RadiologyInsightsPatientResult(patientId, inferences);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static RadiologyInsightsPatientResult FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeRadiologyInsightsPatientResult(document.RootElement);
        }
    }
}
