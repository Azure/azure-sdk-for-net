// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> Sex mismatch returns when there is a conflict between the patient references (female/male, he/she/his/her), documented clinical procedures, or documented body parts to the patient Sex that mentioned in the patient info. </summary>
    public partial class SexMismatchInference : RadiologyInsightsInference
    {
        /// <summary> Initializes a new instance of <see cref="SexMismatchInference"/>. </summary>
        /// <param name="sexIndication"> sex indication. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sexIndication"/> is null. </exception>
        internal SexMismatchInference(CodeableConcept sexIndication)
        {
            Argument.AssertNotNull(sexIndication, nameof(sexIndication));

            Kind = "sexMismatch";
            SexIndication = sexIndication;
        }

        /// <summary> Initializes a new instance of <see cref="SexMismatchInference"/>. </summary>
        /// <param name="extension"> Additional Content defined by implementations. </param>
        /// <param name="kind"> Discriminator. </param>
        /// <param name="sexIndication"> sex indication. </param>
        internal SexMismatchInference(IReadOnlyList<Extension> extension, string kind, CodeableConcept sexIndication) : base(extension, kind)
        {
            SexIndication = sexIndication;
        }

        /// <summary> sex indication. </summary>
        public CodeableConcept SexIndication { get; }
    }
}
