// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary>
    /// Completed Order mismatch
    /// A complete order requires that all the body parts listed in the order will be document (some body parts requires measurements).
    /// This inference is relevant only for ultrasound procedure/order of type US ABDOMEN, US RETROPERITONEAL, US PELVIS, or US BREAST.
    /// This inference returns when there is a missing body part or a missing measurement of a body part that is required by the order.
    /// </summary>
    public partial class CompleteOrderDiscrepancyInference : RadiologyInsightsInference
    {
        /// <summary> Initializes a new instance of <see cref="CompleteOrderDiscrepancyInference"/>. </summary>
        /// <param name="orderType"> Order Type. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="orderType"/> is null. </exception>
        internal CompleteOrderDiscrepancyInference(CodeableConcept orderType)
        {
            Argument.AssertNotNull(orderType, nameof(orderType));

            Kind = "completeOrderDiscrepancy";
            OrderType = orderType;
            MissingBodyParts = new ChangeTrackingList<CodeableConcept>();
            MissingBodyPartMeasurements = new ChangeTrackingList<CodeableConcept>();
        }

        /// <summary> Initializes a new instance of <see cref="CompleteOrderDiscrepancyInference"/>. </summary>
        /// <param name="extension"> Additional Content defined by implementations. </param>
        /// <param name="kind"> Discriminator. </param>
        /// <param name="orderType"> Order Type. </param>
        /// <param name="missingBodyParts"> List of missing body parts required by a complete order. </param>
        /// <param name="missingBodyPartMeasurements"> List of missing body parts that require measurement by a complete order. </param>
        internal CompleteOrderDiscrepancyInference(IReadOnlyList<Extension> extension, string kind, CodeableConcept orderType, IReadOnlyList<CodeableConcept> missingBodyParts, IReadOnlyList<CodeableConcept> missingBodyPartMeasurements) : base(extension, kind)
        {
            OrderType = orderType;
            MissingBodyParts = missingBodyParts;
            MissingBodyPartMeasurements = missingBodyPartMeasurements;
        }

        /// <summary> Order Type. </summary>
        public CodeableConcept OrderType { get; }
        /// <summary> List of missing body parts required by a complete order. </summary>
        public IReadOnlyList<CodeableConcept> MissingBodyParts { get; }
        /// <summary> List of missing body parts that require measurement by a complete order. </summary>
        public IReadOnlyList<CodeableConcept> MissingBodyPartMeasurements { get; }
    }
}
