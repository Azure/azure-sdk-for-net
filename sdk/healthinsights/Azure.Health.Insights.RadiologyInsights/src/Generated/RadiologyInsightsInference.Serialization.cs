// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;

namespace Azure.Health.Insights.RadiologyInsights
{
    public partial class RadiologyInsightsInference
    {
        internal static RadiologyInsightsInference DeserializeRadiologyInsightsInference(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            if (element.TryGetProperty("kind", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "ageMismatch": return AgeMismatchInference.DeserializeAgeMismatchInference(element);
                    case "sexMismatch": return SexMismatchInference.DeserializeSexMismatchInference(element);
                    case "lateralityDiscrepancy": return LateralityDiscrepancyInference.DeserializeLateralityDiscrepancyInference(element);
                    case "completeOrderDiscrepancy": return CompleteOrderDiscrepancyInference.DeserializeCompleteOrderDiscrepancyInference(element);
                    case "limitedOrderDiscrepancy": return LimitedOrderDiscrepancyInference.DeserializeLimitedOrderDiscrepancyInference(element);
                    case "finding": return FindingInference.DeserializeFindingInference(element);
                    case "criticalResult": return CriticalResultInference.DeserializeCriticalResultInference(element);
                    case "radiologyProcedure": return RadiologyProcedureInference.DeserializeRadiologyProcedureInference(element);
                    case "followupRecommendation": return FollowupRecommendationInference.DeserializeFollowupRecommendationInference(element);
                    case "followupCommunication": return FollowupCommunicationInference.DeserializeFollowupCommunicationInference(element);
                }
            }
            return UnknownRadiologyInsightsInference.DeserializeUnknownRadiologyInsightsInference(element);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static RadiologyInsightsInference FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeRadiologyInsightsInference(document.RootElement);
        }
    }
}
