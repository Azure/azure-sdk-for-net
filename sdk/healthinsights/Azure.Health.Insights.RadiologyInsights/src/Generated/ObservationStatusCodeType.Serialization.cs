// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Health.Insights.RadiologyInsights
{
    internal static partial class ObservationStatusCodeTypeExtensions
    {
        public static string ToSerialString(this ObservationStatusCodeType value) => value switch
        {
            ObservationStatusCodeType.Registered => "registered",
            ObservationStatusCodeType.Preliminary => "preliminary",
            ObservationStatusCodeType.Final => "final",
            ObservationStatusCodeType.Amended => "amended",
            ObservationStatusCodeType.Corrected => "corrected",
            ObservationStatusCodeType.Cancelled => "cancelled",
            ObservationStatusCodeType.EnteredInError => "entered-in-error",
            ObservationStatusCodeType.Unknown => "unknown",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ObservationStatusCodeType value.")
        };

        public static ObservationStatusCodeType ToObservationStatusCodeType(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "registered")) return ObservationStatusCodeType.Registered;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "preliminary")) return ObservationStatusCodeType.Preliminary;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "final")) return ObservationStatusCodeType.Final;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "amended")) return ObservationStatusCodeType.Amended;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "corrected")) return ObservationStatusCodeType.Corrected;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "cancelled")) return ObservationStatusCodeType.Cancelled;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "entered-in-error")) return ObservationStatusCodeType.EnteredInError;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "unknown")) return ObservationStatusCodeType.Unknown;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ObservationStatusCodeType value.");
        }
    }
}
