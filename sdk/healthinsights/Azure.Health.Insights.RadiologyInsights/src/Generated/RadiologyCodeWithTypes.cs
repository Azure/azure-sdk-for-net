// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary> Code with types. </summary>
    public partial class RadiologyCodeWithTypes
    {
        /// <summary> Initializes a new instance of <see cref="RadiologyCodeWithTypes"/>. </summary>
        /// <param name="code"> Code. </param>
        /// <param name="types"> Collection of types. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="code"/> or <paramref name="types"/> is null. </exception>
        internal RadiologyCodeWithTypes(CodeableConcept code, IEnumerable<CodeableConcept> types)
        {
            Argument.AssertNotNull(code, nameof(code));
            Argument.AssertNotNull(types, nameof(types));

            Code = code;
            Types = types.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="RadiologyCodeWithTypes"/>. </summary>
        /// <param name="code"> Code. </param>
        /// <param name="types"> Collection of types. </param>
        internal RadiologyCodeWithTypes(CodeableConcept code, IReadOnlyList<CodeableConcept> types)
        {
            Code = code;
            Types = types;
        }

        /// <summary> Code. </summary>
        public CodeableConcept Code { get; }
        /// <summary> Collection of types. </summary>
        public IReadOnlyList<CodeableConcept> Types { get; }
    }
}
