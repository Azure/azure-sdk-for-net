// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Health.Insights.RadiologyInsights
{
    internal static partial class EncounterClassExtensions
    {
        public static string ToSerialString(this EncounterClass value) => value switch
        {
            EncounterClass.InPatient => "inpatient",
            EncounterClass.Ambulatory => "ambulatory",
            EncounterClass.Observation => "observation",
            EncounterClass.Emergency => "emergency",
            EncounterClass.Virtual => "virtual",
            EncounterClass.HealthHome => "healthHome",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown EncounterClass value.")
        };

        public static EncounterClass ToEncounterClass(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "inpatient")) return EncounterClass.InPatient;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "ambulatory")) return EncounterClass.Ambulatory;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "observation")) return EncounterClass.Observation;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "emergency")) return EncounterClass.Emergency;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "virtual")) return EncounterClass.Virtual;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "healthHome")) return EncounterClass.HealthHome;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown EncounterClass value.");
        }
    }
}
