// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Health.Insights.RadiologyInsights
{
    /// <summary>
    /// Limited Order mismatch
    /// A limited order requires that not all the body parts listed in the order will be document.
    /// This inference is relevant only for ultrasound procedure/order of type US ABDOMEN, US RETROPERITONEAL, US PELVIS, or US BREAST.
    /// This inference returns when all body parts and measurement of a body part required by the order, mentioned in the text.
    /// </summary>
    public partial class LimitedOrderDiscrepancyInference : RadiologyInsightsInference
    {
        /// <summary> Initializes a new instance of <see cref="LimitedOrderDiscrepancyInference"/>. </summary>
        /// <param name="orderType"> Order Type. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="orderType"/> is null. </exception>
        internal LimitedOrderDiscrepancyInference(CodeableConcept orderType)
        {
            Argument.AssertNotNull(orderType, nameof(orderType));

            Kind = "limitedOrderDiscrepancy";
            OrderType = orderType;
            PresentBodyParts = new ChangeTrackingList<CodeableConcept>();
            PresentBodyPartMeasurements = new ChangeTrackingList<CodeableConcept>();
        }

        /// <summary> Initializes a new instance of <see cref="LimitedOrderDiscrepancyInference"/>. </summary>
        /// <param name="extension"> Additional Content defined by implementations. </param>
        /// <param name="kind"> Discriminator. </param>
        /// <param name="orderType"> Order Type. </param>
        /// <param name="presentBodyParts"> Complete list of body parts found in the document. </param>
        /// <param name="presentBodyPartMeasurements"> Complete list of body parts that require measurement by a complete order. </param>
        internal LimitedOrderDiscrepancyInference(IReadOnlyList<Extension> extension, string kind, CodeableConcept orderType, IReadOnlyList<CodeableConcept> presentBodyParts, IReadOnlyList<CodeableConcept> presentBodyPartMeasurements) : base(extension, kind)
        {
            OrderType = orderType;
            PresentBodyParts = presentBodyParts;
            PresentBodyPartMeasurements = presentBodyPartMeasurements;
        }

        /// <summary> Order Type. </summary>
        public CodeableConcept OrderType { get; }
        /// <summary> Complete list of body parts found in the document. </summary>
        public IReadOnlyList<CodeableConcept> PresentBodyParts { get; }
        /// <summary> Complete list of body parts that require measurement by a complete order. </summary>
        public IReadOnlyList<CodeableConcept> PresentBodyPartMeasurements { get; }
    }
}
