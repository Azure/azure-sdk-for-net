// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PowerBIDedicated.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents an instance of an auto scale v-core resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AutoScaleVCore : Resource
    {
        /// <summary>
        /// Initializes a new instance of the AutoScaleVCore class.
        /// </summary>
        public AutoScaleVCore()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoScaleVCore class.
        /// </summary>
        /// <param name="location">Location of the PowerBI Dedicated
        /// resource.</param>
        /// <param name="sku">The SKU of the auto scale v-core
        /// resource.</param>
        /// <param name="id">An identifier that represents the PowerBI
        /// Dedicated resource.</param>
        /// <param name="name">The name of the PowerBI Dedicated
        /// resource.</param>
        /// <param name="type">The type of the PowerBI Dedicated
        /// resource.</param>
        /// <param name="tags">Key-value pairs of additional resource
        /// provisioning properties.</param>
        /// <param name="systemData">Metadata pertaining to creation and last
        /// modification of the resource.</param>
        /// <param name="capacityLimit">The maximum capacity of an auto scale
        /// v-core resource.</param>
        /// <param name="capacityObjectId">The object ID of the capacity
        /// resource associated with the auto scale v-core resource.</param>
        /// <param name="provisioningState">The current deployment state of an
        /// auto scale v-core resource. The provisioningState is to indicate
        /// states for resource provisioning. Possible values include:
        /// 'Succeeded'</param>
        public AutoScaleVCore(string location, AutoScaleVCoreSku sku, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), SystemData systemData = default(SystemData), int? capacityLimit = default(int?), string capacityObjectId = default(string), string provisioningState = default(string))
            : base(location, id, name, type, tags, systemData)
        {
            Sku = sku;
            CapacityLimit = capacityLimit;
            CapacityObjectId = capacityObjectId;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the SKU of the auto scale v-core resource.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public AutoScaleVCoreSku Sku { get; set; }

        /// <summary>
        /// Gets or sets the maximum capacity of an auto scale v-core resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.capacityLimit")]
        public int? CapacityLimit { get; set; }

        /// <summary>
        /// Gets or sets the object ID of the capacity resource associated with
        /// the auto scale v-core resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.capacityObjectId")]
        public string CapacityObjectId { get; set; }

        /// <summary>
        /// Gets the current deployment state of an auto scale v-core resource.
        /// The provisioningState is to indicate states for resource
        /// provisioning. Possible values include: 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Sku == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sku");
            }
            if (Sku != null)
            {
                Sku.Validate();
            }
        }
    }
}
