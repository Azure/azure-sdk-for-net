// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Media.LiveVideoAnalytics.Edge.Models
{
    /// <summary> Enables a media graph to write/store media (video and audio) to a file on the Edge device. </summary>
    public partial class MediaGraphFileSink : MediaGraphSink
    {
        /// <summary> Initializes a new instance of MediaGraphFileSink. </summary>
        /// <param name="name"> Name to be used for the media graph sink. </param>
        /// <param name="inputs"> An array of the names of the other nodes in the media graph, the outputs of which are used as input for this sink node. </param>
        /// <param name="filePathPattern"> Absolute file path pattern for creating new files on the Edge device. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="inputs"/>, or <paramref name="filePathPattern"/> is null. </exception>
        public MediaGraphFileSink(string name, IEnumerable<MediaGraphNodeInput> inputs, string filePathPattern) : base(name, inputs)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (inputs == null)
            {
                throw new ArgumentNullException(nameof(inputs));
            }
            if (filePathPattern == null)
            {
                throw new ArgumentNullException(nameof(filePathPattern));
            }

            FilePathPattern = filePathPattern;
            Type = "#Microsoft.Media.MediaGraphFileSink";
        }

        /// <summary> Initializes a new instance of MediaGraphFileSink. </summary>
        /// <param name="type"> The discriminator for derived types. </param>
        /// <param name="name"> Name to be used for the media graph sink. </param>
        /// <param name="inputs"> An array of the names of the other nodes in the media graph, the outputs of which are used as input for this sink node. </param>
        /// <param name="filePathPattern"> Absolute file path pattern for creating new files on the Edge device. </param>
        internal MediaGraphFileSink(string type, string name, IList<MediaGraphNodeInput> inputs, string filePathPattern) : base(type, name, inputs)
        {
            FilePathPattern = filePathPattern;
            Type = type ?? "#Microsoft.Media.MediaGraphFileSink";
        }

        /// <summary> Absolute file path pattern for creating new files on the Edge device. </summary>
        public string FilePathPattern { get; set; }
    }
}
