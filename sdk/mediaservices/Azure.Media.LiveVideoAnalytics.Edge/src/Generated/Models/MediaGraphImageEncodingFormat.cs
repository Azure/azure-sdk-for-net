// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Media.LiveVideoAnalytics.Edge.Models
{
    /// <summary> The different encoding formats that can be used for the image. </summary>
    public readonly partial struct MediaGraphImageEncodingFormat : IEquatable<MediaGraphImageEncodingFormat>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="MediaGraphImageEncodingFormat"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MediaGraphImageEncodingFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string JpegValue = "Jpeg";
        private const string BmpValue = "Bmp";
        private const string PngValue = "Png";

        /// <summary> JPEG image format. </summary>
        public static MediaGraphImageEncodingFormat Jpeg { get; } = new MediaGraphImageEncodingFormat(JpegValue);
        /// <summary> BMP image format. </summary>
        public static MediaGraphImageEncodingFormat Bmp { get; } = new MediaGraphImageEncodingFormat(BmpValue);
        /// <summary> PNG image format. </summary>
        public static MediaGraphImageEncodingFormat Png { get; } = new MediaGraphImageEncodingFormat(PngValue);
        /// <summary> Determines if two <see cref="MediaGraphImageEncodingFormat"/> values are the same. </summary>
        public static bool operator ==(MediaGraphImageEncodingFormat left, MediaGraphImageEncodingFormat right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MediaGraphImageEncodingFormat"/> values are not the same. </summary>
        public static bool operator !=(MediaGraphImageEncodingFormat left, MediaGraphImageEncodingFormat right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MediaGraphImageEncodingFormat"/>. </summary>
        public static implicit operator MediaGraphImageEncodingFormat(string value) => new MediaGraphImageEncodingFormat(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MediaGraphImageEncodingFormat other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MediaGraphImageEncodingFormat other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
