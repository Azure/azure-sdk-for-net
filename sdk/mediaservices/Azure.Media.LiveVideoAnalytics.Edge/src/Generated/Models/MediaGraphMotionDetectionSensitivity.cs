// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.Media.LiveVideoAnalytics.Edge.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for MediaGraphMotionDetectionSensitivity.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(MediaGraphMotionDetectionSensitivityConverter))]
    public struct MediaGraphMotionDetectionSensitivity : System.IEquatable<MediaGraphMotionDetectionSensitivity>
    {
        private MediaGraphMotionDetectionSensitivity(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// Low Sensitivity.
        /// </summary>
        public static readonly MediaGraphMotionDetectionSensitivity Low = "Low";

        /// <summary>
        /// Medium Sensitivity.
        /// </summary>
        public static readonly MediaGraphMotionDetectionSensitivity Medium = "Medium";

        /// <summary>
        /// High Sensitivity.
        /// </summary>
        public static readonly MediaGraphMotionDetectionSensitivity High = "High";


        /// <summary>
        /// Underlying value of enum MediaGraphMotionDetectionSensitivity
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for
        /// MediaGraphMotionDetectionSensitivity
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type MediaGraphMotionDetectionSensitivity
        /// </summary>
        public bool Equals(MediaGraphMotionDetectionSensitivity e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to
        /// MediaGraphMotionDetectionSensitivity
        /// </summary>
        public static implicit operator MediaGraphMotionDetectionSensitivity(string value)
        {
            return new MediaGraphMotionDetectionSensitivity(value);
        }

        /// <summary>
        /// Implicit operator to convert MediaGraphMotionDetectionSensitivity
        /// to string
        /// </summary>
        public static implicit operator string(MediaGraphMotionDetectionSensitivity e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum
        /// MediaGraphMotionDetectionSensitivity
        /// </summary>
        public static bool operator == (MediaGraphMotionDetectionSensitivity e1, MediaGraphMotionDetectionSensitivity e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum
        /// MediaGraphMotionDetectionSensitivity
        /// </summary>
        public static bool operator != (MediaGraphMotionDetectionSensitivity e1, MediaGraphMotionDetectionSensitivity e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for MediaGraphMotionDetectionSensitivity
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is MediaGraphMotionDetectionSensitivity && Equals((MediaGraphMotionDetectionSensitivity)obj);
        }

        /// <summary>
        /// Returns for hashCode MediaGraphMotionDetectionSensitivity
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
