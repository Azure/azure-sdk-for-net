// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An Asset.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Asset : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the Asset class.
        /// </summary>
        public Asset()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Asset class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="assetId">The Asset ID.</param>
        /// <param name="created">The creation date of the Asset.</param>
        /// <param name="lastModified">The last modified date of the
        /// Asset.</param>
        /// <param name="alternateId">The alternate ID of the Asset.</param>
        /// <param name="description">The Asset description.</param>
        /// <param name="container">The name of the asset blob
        /// container.</param>
        /// <param name="storageAccountName">The name of the storage
        /// account.</param>
        /// <param name="storageEncryptionFormat">The Asset encryption format.
        /// One of None or MediaStorageEncryption. Possible values include:
        /// 'None', 'MediaStorageClientEncryption'</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource.</param>
        public Asset(string id = default(string), string name = default(string), string type = default(string), System.Guid assetId = default(System.Guid), System.DateTime created = default(System.DateTime), System.DateTime lastModified = default(System.DateTime), string alternateId = default(string), string description = default(string), string container = default(string), string storageAccountName = default(string), AssetStorageEncryptionFormat storageEncryptionFormat = default(AssetStorageEncryptionFormat), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            AssetId = assetId;
            Created = created;
            LastModified = lastModified;
            AlternateId = alternateId;
            Description = description;
            Container = container;
            StorageAccountName = storageAccountName;
            StorageEncryptionFormat = storageEncryptionFormat;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Asset ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.assetId")]
        public System.Guid AssetId { get; private set; }

        /// <summary>
        /// Gets the creation date of the Asset.
        /// </summary>
        [JsonProperty(PropertyName = "properties.created")]
        public System.DateTime Created { get; private set; }

        /// <summary>
        /// Gets the last modified date of the Asset.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModified")]
        public System.DateTime LastModified { get; private set; }

        /// <summary>
        /// Gets or sets the alternate ID of the Asset.
        /// </summary>
        [JsonProperty(PropertyName = "properties.alternateId")]
        public string AlternateId { get; set; }

        /// <summary>
        /// Gets or sets the Asset description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the name of the asset blob container.
        /// </summary>
        [JsonProperty(PropertyName = "properties.container")]
        public string Container { get; set; }

        /// <summary>
        /// Gets or sets the name of the storage account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageAccountName")]
        public string StorageAccountName { get; set; }

        /// <summary>
        /// Gets the Asset encryption format. One of None or
        /// MediaStorageEncryption. Possible values include: 'None',
        /// 'MediaStorageClientEncryption'
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageEncryptionFormat")]
        public AssetStorageEncryptionFormat StorageEncryptionFormat { get; private set; }

        /// <summary>
        /// Gets the system metadata relating to this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
