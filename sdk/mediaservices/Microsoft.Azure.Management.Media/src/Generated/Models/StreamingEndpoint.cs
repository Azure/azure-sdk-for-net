// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The streaming endpoint.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class StreamingEndpoint : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the StreamingEndpoint class.
        /// </summary>
        public StreamingEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StreamingEndpoint class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="scaleUnits">The number of scale units. Use the Scale
        /// operation to adjust this value.</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="description">The streaming endpoint
        /// description.</param>
        /// <param name="availabilitySetName">This feature is deprecated, do
        /// not set a value for this property.</param>
        /// <param name="accessControl">The access control definition of the
        /// streaming endpoint.</param>
        /// <param name="maxCacheAge">Max cache age</param>
        /// <param name="customHostNames">The custom host names of the
        /// streaming endpoint</param>
        /// <param name="hostName">The streaming endpoint host name.</param>
        /// <param name="cdnEnabled">The CDN enabled flag.</param>
        /// <param name="cdnProvider">The CDN provider name.</param>
        /// <param name="cdnProfile">The CDN profile name.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// streaming endpoint.</param>
        /// <param name="resourceState">The resource state of the streaming
        /// endpoint. Possible values include: 'Stopped', 'Starting',
        /// 'Running', 'Stopping', 'Deleting', 'Scaling'</param>
        /// <param name="crossSiteAccessPolicies">The streaming endpoint access
        /// policies.</param>
        /// <param name="freeTrialEndTime">The free trial expiration
        /// time.</param>
        /// <param name="created">The exact time the streaming endpoint was
        /// created.</param>
        /// <param name="lastModified">The exact time the streaming endpoint
        /// was last modified.</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource.</param>
        public StreamingEndpoint(string location, int scaleUnits, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string description = default(string), string availabilitySetName = default(string), StreamingEndpointAccessControl accessControl = default(StreamingEndpointAccessControl), long? maxCacheAge = default(long?), IList<string> customHostNames = default(IList<string>), string hostName = default(string), bool? cdnEnabled = default(bool?), string cdnProvider = default(string), string cdnProfile = default(string), string provisioningState = default(string), StreamingEndpointResourceState? resourceState = default(StreamingEndpointResourceState?), CrossSiteAccessPolicies crossSiteAccessPolicies = default(CrossSiteAccessPolicies), System.DateTime? freeTrialEndTime = default(System.DateTime?), System.DateTime? created = default(System.DateTime?), System.DateTime? lastModified = default(System.DateTime?), SystemData systemData = default(SystemData))
            : base(location, id, name, type, tags)
        {
            Description = description;
            ScaleUnits = scaleUnits;
            AvailabilitySetName = availabilitySetName;
            AccessControl = accessControl;
            MaxCacheAge = maxCacheAge;
            CustomHostNames = customHostNames;
            HostName = hostName;
            CdnEnabled = cdnEnabled;
            CdnProvider = cdnProvider;
            CdnProfile = cdnProfile;
            ProvisioningState = provisioningState;
            ResourceState = resourceState;
            CrossSiteAccessPolicies = crossSiteAccessPolicies;
            FreeTrialEndTime = freeTrialEndTime;
            Created = created;
            LastModified = lastModified;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the streaming endpoint description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the number of scale units. Use the Scale operation to
        /// adjust this value.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scaleUnits")]
        public int ScaleUnits { get; set; }

        /// <summary>
        /// Gets or sets this feature is deprecated, do not set a value for
        /// this property.
        /// </summary>
        [JsonProperty(PropertyName = "properties.availabilitySetName")]
        public string AvailabilitySetName { get; set; }

        /// <summary>
        /// Gets or sets the access control definition of the streaming
        /// endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.accessControl")]
        public StreamingEndpointAccessControl AccessControl { get; set; }

        /// <summary>
        /// Gets or sets max cache age
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxCacheAge")]
        public long? MaxCacheAge { get; set; }

        /// <summary>
        /// Gets or sets the custom host names of the streaming endpoint
        /// </summary>
        [JsonProperty(PropertyName = "properties.customHostNames")]
        public IList<string> CustomHostNames { get; set; }

        /// <summary>
        /// Gets the streaming endpoint host name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostName")]
        public string HostName { get; private set; }

        /// <summary>
        /// Gets or sets the CDN enabled flag.
        /// </summary>
        [JsonProperty(PropertyName = "properties.cdnEnabled")]
        public bool? CdnEnabled { get; set; }

        /// <summary>
        /// Gets or sets the CDN provider name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.cdnProvider")]
        public string CdnProvider { get; set; }

        /// <summary>
        /// Gets or sets the CDN profile name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.cdnProfile")]
        public string CdnProfile { get; set; }

        /// <summary>
        /// Gets the provisioning state of the streaming endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets the resource state of the streaming endpoint. Possible values
        /// include: 'Stopped', 'Starting', 'Running', 'Stopping', 'Deleting',
        /// 'Scaling'
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceState")]
        public StreamingEndpointResourceState? ResourceState { get; private set; }

        /// <summary>
        /// Gets or sets the streaming endpoint access policies.
        /// </summary>
        [JsonProperty(PropertyName = "properties.crossSiteAccessPolicies")]
        public CrossSiteAccessPolicies CrossSiteAccessPolicies { get; set; }

        /// <summary>
        /// Gets the free trial expiration time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.freeTrialEndTime")]
        public System.DateTime? FreeTrialEndTime { get; private set; }

        /// <summary>
        /// Gets the exact time the streaming endpoint was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.created")]
        public System.DateTime? Created { get; private set; }

        /// <summary>
        /// Gets the exact time the streaming endpoint was last modified.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModified")]
        public System.DateTime? LastModified { get; private set; }

        /// <summary>
        /// Gets the system metadata relating to this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
