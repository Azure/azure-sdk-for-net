// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents input files for a Job.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.JobInputClip")]
    public partial class JobInputClip : JobInput
    {
        /// <summary>
        /// Initializes a new instance of the JobInputClip class.
        /// </summary>
        public JobInputClip()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobInputClip class.
        /// </summary>
        /// <param name="files">List of files. Required for JobInputHttp.
        /// Maximum of 4000 characters each.</param>
        /// <param name="start">Defines a point on the timeline of the input
        /// media at which processing will start. Defaults to the beginning of
        /// the input media.</param>
        /// <param name="end">Defines a point on the timeline of the input
        /// media at which processing will end. Defaults to the end of the
        /// input media.</param>
        /// <param name="label">A label that is assigned to a JobInputClip,
        /// that is used to satisfy a reference used in the Transform. For
        /// example, a Transform can be authored so as to take an image file
        /// with the label 'xyz' and apply it as an overlay onto the input
        /// video before it is encoded. When submitting a Job, exactly one of
        /// the JobInputs should be the image file, and it should have the
        /// label 'xyz'.</param>
        /// <param name="inputDefinitions">Defines a list of InputDefinitions.
        /// For each InputDefinition, it defines a list of track selections and
        /// related metadata.</param>
        public JobInputClip(IList<string> files = default(IList<string>), ClipTime start = default(ClipTime), ClipTime end = default(ClipTime), string label = default(string), IList<InputDefinition> inputDefinitions = default(IList<InputDefinition>))
        {
            Files = files;
            Start = start;
            End = end;
            Label = label;
            InputDefinitions = inputDefinitions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of files. Required for JobInputHttp. Maximum of
        /// 4000 characters each.
        /// </summary>
        [JsonProperty(PropertyName = "files")]
        public IList<string> Files { get; set; }

        /// <summary>
        /// Gets or sets defines a point on the timeline of the input media at
        /// which processing will start. Defaults to the beginning of the input
        /// media.
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public ClipTime Start { get; set; }

        /// <summary>
        /// Gets or sets defines a point on the timeline of the input media at
        /// which processing will end. Defaults to the end of the input media.
        /// </summary>
        [JsonProperty(PropertyName = "end")]
        public ClipTime End { get; set; }

        /// <summary>
        /// Gets or sets a label that is assigned to a JobInputClip, that is
        /// used to satisfy a reference used in the Transform. For example, a
        /// Transform can be authored so as to take an image file with the
        /// label 'xyz' and apply it as an overlay onto the input video before
        /// it is encoded. When submitting a Job, exactly one of the JobInputs
        /// should be the image file, and it should have the label 'xyz'.
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// Gets or sets defines a list of InputDefinitions. For each
        /// InputDefinition, it defines a list of track selections and related
        /// metadata.
        /// </summary>
        [JsonProperty(PropertyName = "inputDefinitions")]
        public IList<InputDefinition> InputDefinitions { get; set; }

    }
}
