// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Specifies a configuration for PlayReady licenses.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration")]
    public partial class ContentKeyPolicyPlayReadyConfiguration : ContentKeyPolicyConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ContentKeyPolicyPlayReadyConfiguration class.
        /// </summary>
        public ContentKeyPolicyPlayReadyConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ContentKeyPolicyPlayReadyConfiguration class.
        /// </summary>
        /// <param name="licenses">The PlayReady licenses.</param>
        /// <param name="responseCustomData">The custom response data.</param>
        public ContentKeyPolicyPlayReadyConfiguration(IList<ContentKeyPolicyPlayReadyLicense> licenses, string responseCustomData = default(string))
        {
            Licenses = licenses;
            ResponseCustomData = responseCustomData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the PlayReady licenses.
        /// </summary>
        [JsonProperty(PropertyName = "licenses")]
        public IList<ContentKeyPolicyPlayReadyLicense> Licenses { get; set; }

        /// <summary>
        /// Gets or sets the custom response data.
        /// </summary>
        [JsonProperty(PropertyName = "responseCustomData")]
        public string ResponseCustomData { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Licenses == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Licenses");
            }
            if (Licenses != null)
            {
                foreach (var element in Licenses)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
