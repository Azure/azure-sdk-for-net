// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The class to specify one track property condition.
    /// </summary>
    public partial class FilterTrackPropertyCondition
    {
        /// <summary>
        /// Initializes a new instance of the FilterTrackPropertyCondition
        /// class.
        /// </summary>
        public FilterTrackPropertyCondition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FilterTrackPropertyCondition
        /// class.
        /// </summary>
        /// <param name="property">The track property type. Possible values
        /// include: 'Unknown', 'Type', 'Name', 'Language', 'FourCC',
        /// 'Bitrate'</param>
        /// <param name="value">The track proprty value.</param>
        /// <param name="operation">The track property condition operation.
        /// Possible values include: 'Equal', 'NotEqual'</param>
        public FilterTrackPropertyCondition(FilterTrackPropertyType property, string value, FilterTrackPropertyCompareOperation operation)
        {
            Property = property;
            Value = value;
            Operation = operation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the track property type. Possible values include:
        /// 'Unknown', 'Type', 'Name', 'Language', 'FourCC', 'Bitrate'
        /// </summary>
        [JsonProperty(PropertyName = "property")]
        public FilterTrackPropertyType Property { get; set; }

        /// <summary>
        /// Gets or sets the track proprty value.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets the track property condition operation. Possible
        /// values include: 'Equal', 'NotEqual'
        /// </summary>
        [JsonProperty(PropertyName = "operation")]
        public FilterTrackPropertyCompareOperation Operation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Value == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Value");
            }
        }
    }
}
