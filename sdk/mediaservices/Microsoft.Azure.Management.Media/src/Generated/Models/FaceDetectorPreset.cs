// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes all the settings to be used when analyzing a video in order
    /// to detect (and optionally redact) all the faces present.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.FaceDetectorPreset")]
    public partial class FaceDetectorPreset : Preset
    {
        /// <summary>
        /// Initializes a new instance of the FaceDetectorPreset class.
        /// </summary>
        public FaceDetectorPreset()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FaceDetectorPreset class.
        /// </summary>
        /// <param name="resolution">Specifies the maximum resolution at which
        /// your video is analyzed. The default behavior is "SourceResolution,"
        /// which will keep the input video at its original resolution when
        /// analyzed. Using "StandardDefinition" will resize input videos to
        /// standard definition while preserving the appropriate aspect ratio.
        /// It will only resize if the video is of higher resolution. For
        /// example, a 1920x1080 input would be scaled to 640x360 before
        /// processing. Switching to "StandardDefinition" will reduce the time
        /// it takes to process high resolution video. It may also reduce the
        /// cost of using this component (see
        /// https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics
        /// for details). However, faces that end up being too small in the
        /// resized video may not be detected. Possible values include:
        /// 'SourceResolution', 'StandardDefinition'</param>
        /// <param name="mode">This mode provides the ability to choose between
        /// the following settings: 1) Analyze - For detection only.This mode
        /// generates a metadata JSON file marking appearances of faces
        /// throughout the video.Where possible, appearances of the same person
        /// are assigned the same ID. 2) Combined - Additionally redacts(blurs)
        /// detected faces. 3) Redact - This enables a 2-pass process, allowing
        /// for selective redaction of a subset of detected faces.It takes in
        /// the metadata file from a prior analyze pass, along with the source
        /// video, and a user-selected subset of IDs that require redaction.
        /// Possible values include: 'Analyze', 'Redact', 'Combined'</param>
        /// <param name="blurType">Blur type. Possible values include: 'Box',
        /// 'Low', 'Med', 'High', 'Black'</param>
        /// <param name="experimentalOptions">Dictionary containing key value
        /// pairs for parameters not exposed in the preset itself</param>
        public FaceDetectorPreset(AnalysisResolution? resolution = default(AnalysisResolution?), FaceRedactorMode? mode = default(FaceRedactorMode?), BlurType? blurType = default(BlurType?), IDictionary<string, string> experimentalOptions = default(IDictionary<string, string>))
        {
            Resolution = resolution;
            Mode = mode;
            BlurType = blurType;
            ExperimentalOptions = experimentalOptions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies the maximum resolution at which your video
        /// is analyzed. The default behavior is "SourceResolution," which will
        /// keep the input video at its original resolution when analyzed.
        /// Using "StandardDefinition" will resize input videos to standard
        /// definition while preserving the appropriate aspect ratio. It will
        /// only resize if the video is of higher resolution. For example, a
        /// 1920x1080 input would be scaled to 640x360 before processing.
        /// Switching to "StandardDefinition" will reduce the time it takes to
        /// process high resolution video. It may also reduce the cost of using
        /// this component (see
        /// https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics
        /// for details). However, faces that end up being too small in the
        /// resized video may not be detected. Possible values include:
        /// 'SourceResolution', 'StandardDefinition'
        /// </summary>
        [JsonProperty(PropertyName = "resolution")]
        public AnalysisResolution? Resolution { get; set; }

        /// <summary>
        /// Gets or sets this mode provides the ability to choose between the
        /// following settings: 1) Analyze - For detection only.This mode
        /// generates a metadata JSON file marking appearances of faces
        /// throughout the video.Where possible, appearances of the same person
        /// are assigned the same ID. 2) Combined - Additionally redacts(blurs)
        /// detected faces. 3) Redact - This enables a 2-pass process, allowing
        /// for selective redaction of a subset of detected faces.It takes in
        /// the metadata file from a prior analyze pass, along with the source
        /// video, and a user-selected subset of IDs that require redaction.
        /// Possible values include: 'Analyze', 'Redact', 'Combined'
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        public FaceRedactorMode? Mode { get; set; }

        /// <summary>
        /// Gets or sets blur type. Possible values include: 'Box', 'Low',
        /// 'Med', 'High', 'Black'
        /// </summary>
        [JsonProperty(PropertyName = "blurType")]
        public BlurType? BlurType { get; set; }

        /// <summary>
        /// Gets or sets dictionary containing key value pairs for parameters
        /// not exposed in the preset itself
        /// </summary>
        [JsonProperty(PropertyName = "experimentalOptions")]
        public IDictionary<string, string> ExperimentalOptions { get; set; }

    }
}
