// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ContentKeyPolicyFairPlayOfflineRentalConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ContentKeyPolicyFairPlayOfflineRentalConfiguration class.
        /// </summary>
        public ContentKeyPolicyFairPlayOfflineRentalConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ContentKeyPolicyFairPlayOfflineRentalConfiguration class.
        /// </summary>
        /// <param name="playbackDurationSeconds">Playback duration</param>
        /// <param name="storageDurationSeconds">Storage duration</param>
        public ContentKeyPolicyFairPlayOfflineRentalConfiguration(long playbackDurationSeconds, long storageDurationSeconds)
        {
            PlaybackDurationSeconds = playbackDurationSeconds;
            StorageDurationSeconds = storageDurationSeconds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets playback duration
        /// </summary>
        [JsonProperty(PropertyName = "playbackDurationSeconds")]
        public long PlaybackDurationSeconds { get; set; }

        /// <summary>
        /// Gets or sets storage duration
        /// </summary>
        [JsonProperty(PropertyName = "storageDurationSeconds")]
        public long StorageDurationSeconds { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
