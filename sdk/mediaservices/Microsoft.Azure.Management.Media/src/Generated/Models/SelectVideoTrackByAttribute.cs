// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Select video tracks from the input by specifying an attribute and an
    /// attribute filter.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.SelectVideoTrackByAttribute")]
    public partial class SelectVideoTrackByAttribute : VideoTrackDescriptor
    {
        /// <summary>
        /// Initializes a new instance of the SelectVideoTrackByAttribute
        /// class.
        /// </summary>
        public SelectVideoTrackByAttribute()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SelectVideoTrackByAttribute
        /// class.
        /// </summary>
        /// <param name="attribute">The TrackAttribute to filter the tracks by.
        /// Possible values include: 'Bitrate', 'Language'</param>
        /// <param name="filter">The type of AttributeFilter to apply to the
        /// TrackAttribute in order to select the tracks. Possible values
        /// include: 'All', 'Top', 'Bottom', 'ValueEquals'</param>
        /// <param name="filterValue">The value to filter the tracks by.  Only
        /// used when AttributeFilter.ValueEquals is specified for the Filter
        /// property. For TrackAttribute.Bitrate, this should be an integer
        /// value in bits per second (e.g: '1500000').  The
        /// TrackAttribute.Language is not supported for video tracks.</param>
        public SelectVideoTrackByAttribute(TrackAttribute attribute, AttributeFilter filter, string filterValue = default(string))
        {
            Attribute = attribute;
            Filter = filter;
            FilterValue = filterValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the TrackAttribute to filter the tracks by. Possible
        /// values include: 'Bitrate', 'Language'
        /// </summary>
        [JsonProperty(PropertyName = "attribute")]
        public TrackAttribute Attribute { get; set; }

        /// <summary>
        /// Gets or sets the type of AttributeFilter to apply to the
        /// TrackAttribute in order to select the tracks. Possible values
        /// include: 'All', 'Top', 'Bottom', 'ValueEquals'
        /// </summary>
        [JsonProperty(PropertyName = "filter")]
        public AttributeFilter Filter { get; set; }

        /// <summary>
        /// Gets or sets the value to filter the tracks by.  Only used when
        /// AttributeFilter.ValueEquals is specified for the Filter property.
        /// For TrackAttribute.Bitrate, this should be an integer value in bits
        /// per second (e.g: '1500000').  The TrackAttribute.Language is not
        /// supported for video tracks.
        /// </summary>
        [JsonProperty(PropertyName = "filterValue")]
        public string FilterValue { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
