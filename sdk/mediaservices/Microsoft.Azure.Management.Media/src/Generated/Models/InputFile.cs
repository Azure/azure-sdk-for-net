// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An InputDefinition for a single file.  TrackSelections are scoped to
    /// the file specified.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.InputFile")]
    public partial class InputFile : InputDefinition
    {
        /// <summary>
        /// Initializes a new instance of the InputFile class.
        /// </summary>
        public InputFile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InputFile class.
        /// </summary>
        /// <param name="includedTracks">The list of TrackDescriptors which
        /// define the metadata and selection of tracks in the input.</param>
        /// <param name="filename">Name of the file that this input definition
        /// applies to.</param>
        public InputFile(IList<TrackDescriptor> includedTracks = default(IList<TrackDescriptor>), string filename = default(string))
            : base(includedTracks)
        {
            Filename = filename;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the file that this input definition applies
        /// to.
        /// </summary>
        [JsonProperty(PropertyName = "filename")]
        public string Filename { get; set; }

    }
}
