// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a policy option.
    /// </summary>
    public partial class ContentKeyPolicyOption
    {
        /// <summary>
        /// Initializes a new instance of the ContentKeyPolicyOption class.
        /// </summary>
        public ContentKeyPolicyOption()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContentKeyPolicyOption class.
        /// </summary>
        /// <param name="configuration">The key delivery configuration.</param>
        /// <param name="restriction">The requirements that must be met to
        /// deliver keys with this configuration</param>
        /// <param name="policyOptionId">The legacy Policy Option ID.</param>
        /// <param name="name">The Policy Option description.</param>
        public ContentKeyPolicyOption(ContentKeyPolicyConfiguration configuration, ContentKeyPolicyRestriction restriction, System.Guid policyOptionId = default(System.Guid), string name = default(string))
        {
            PolicyOptionId = policyOptionId;
            Name = name;
            Configuration = configuration;
            Restriction = restriction;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the legacy Policy Option ID.
        /// </summary>
        [JsonProperty(PropertyName = "policyOptionId")]
        public System.Guid PolicyOptionId { get; private set; }

        /// <summary>
        /// Gets or sets the Policy Option description.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the key delivery configuration.
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public ContentKeyPolicyConfiguration Configuration { get; set; }

        /// <summary>
        /// Gets or sets the requirements that must be met to deliver keys with
        /// this configuration
        /// </summary>
        [JsonProperty(PropertyName = "restriction")]
        public ContentKeyPolicyRestriction Restriction { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Configuration == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Configuration");
            }
            if (Restriction == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Restriction");
            }
        }
    }
}
