// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for LiveOutputResourceState.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(LiveOutputResourceStateConverter))]
    public struct LiveOutputResourceState : System.IEquatable<LiveOutputResourceState>
    {
        private LiveOutputResourceState(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// Live output is being created. No content is archived in the asset
        /// until the live output is in running state.
        /// </summary>
        public static readonly LiveOutputResourceState Creating = "Creating";

        /// <summary>
        /// Live output is running and archiving live streaming content to the
        /// asset if there is valid input from a contribution encoder.
        /// </summary>
        public static readonly LiveOutputResourceState Running = "Running";

        /// <summary>
        /// Live output is being deleted. The live asset is being converted
        /// from live to on-demand asset. Any streaming URLs created on the
        /// live output asset continue to work.
        /// </summary>
        public static readonly LiveOutputResourceState Deleting = "Deleting";


        /// <summary>
        /// Underlying value of enum LiveOutputResourceState
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for LiveOutputResourceState
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type LiveOutputResourceState
        /// </summary>
        public bool Equals(LiveOutputResourceState e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to LiveOutputResourceState
        /// </summary>
        public static implicit operator LiveOutputResourceState(string value)
        {
            return new LiveOutputResourceState(value);
        }

        /// <summary>
        /// Implicit operator to convert LiveOutputResourceState to string
        /// </summary>
        public static implicit operator string(LiveOutputResourceState e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum LiveOutputResourceState
        /// </summary>
        public static bool operator == (LiveOutputResourceState e1, LiveOutputResourceState e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum LiveOutputResourceState
        /// </summary>
        public static bool operator != (LiveOutputResourceState e1, LiveOutputResourceState e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for LiveOutputResourceState
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is LiveOutputResourceState && Equals((LiveOutputResourceState)obj);
        }

        /// <summary>
        /// Returns for hashCode LiveOutputResourceState
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
