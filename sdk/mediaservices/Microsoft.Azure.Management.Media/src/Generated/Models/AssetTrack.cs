// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An Asset Track resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AssetTrack : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the AssetTrack class.
        /// </summary>
        public AssetTrack()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssetTrack class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="track">Detailed information about a track in the
        /// asset.</param>
        /// <param name="provisioningState">Provisioning state of the asset
        /// track. Possible values include: 'Failed', 'InProgress',
        /// 'Succeeded'</param>
        public AssetTrack(string id = default(string), string name = default(string), string type = default(string), TrackBase track = default(TrackBase), ProvisioningState provisioningState = default(ProvisioningState))
            : base(id, name, type)
        {
            Track = track;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets detailed information about a track in the asset.
        /// </summary>
        [JsonProperty(PropertyName = "properties.track")]
        public TrackBase Track { get; set; }

        /// <summary>
        /// Gets provisioning state of the asset track. Possible values
        /// include: 'Failed', 'InProgress', 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public ProvisioningState ProvisioningState { get; private set; }

    }
}
