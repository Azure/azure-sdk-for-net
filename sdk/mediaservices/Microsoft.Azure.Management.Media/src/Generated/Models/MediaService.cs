// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A Media Services account.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class MediaService : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the MediaService class.
        /// </summary>
        public MediaService()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MediaService class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the
        /// resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="location">The Azure Region of the resource.</param>
        /// <param name="mediaServiceId">The Media Services account ID.</param>
        /// <param name="storageAccounts">The storage accounts for this
        /// resource.</param>
        public MediaService(string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string location = default(string), System.Guid mediaServiceId = default(System.Guid), IList<StorageAccount> storageAccounts = default(IList<StorageAccount>))
            : base(id, name, type, tags, location)
        {
            MediaServiceId = mediaServiceId;
            StorageAccounts = storageAccounts;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Media Services account ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.mediaServiceId")]
        public System.Guid MediaServiceId { get; private set; }

        /// <summary>
        /// Gets or sets the storage accounts for this resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageAccounts")]
        public IList<StorageAccount> StorageAccounts { get; set; }

    }
}
