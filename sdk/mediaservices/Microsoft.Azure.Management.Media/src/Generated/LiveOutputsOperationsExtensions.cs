// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for LiveOutputsOperations.
    /// </summary>
    public static partial class LiveOutputsOperationsExtensions
    {
            /// <summary>
            /// List Live Outputs
            /// </summary>
            /// <remarks>
            /// Lists the live outputs of a live event.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            public static IPage<LiveOutput> List(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName)
            {
                return operations.ListAsync(resourceGroupName, accountName, liveEventName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List Live Outputs
            /// </summary>
            /// <remarks>
            /// Lists the live outputs of a live event.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<LiveOutput>> ListAsync(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, accountName, liveEventName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get Live Output
            /// </summary>
            /// <remarks>
            /// Gets a live output.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            public static LiveOutput Get(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName)
            {
                return operations.GetAsync(resourceGroupName, accountName, liveEventName, liveOutputName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Live Output
            /// </summary>
            /// <remarks>
            /// Gets a live output.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LiveOutput> GetAsync(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, accountName, liveEventName, liveOutputName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create Live Output
            /// </summary>
            /// <remarks>
            /// Creates a new live output.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            /// <param name='parameters'>
            /// Live Output properties needed for creation.
            /// </param>
            public static LiveOutput Create(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, LiveOutput parameters)
            {
                return operations.CreateAsync(resourceGroupName, accountName, liveEventName, liveOutputName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create Live Output
            /// </summary>
            /// <remarks>
            /// Creates a new live output.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            /// <param name='parameters'>
            /// Live Output properties needed for creation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LiveOutput> CreateAsync(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, LiveOutput parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, accountName, liveEventName, liveOutputName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete Live Output
            /// </summary>
            /// <remarks>
            /// Deletes a live output. Deleting a live output does not delete the asset the
            /// live output is writing to.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            public static void Delete(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName)
            {
                operations.DeleteAsync(resourceGroupName, accountName, liveEventName, liveOutputName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Live Output
            /// </summary>
            /// <remarks>
            /// Deletes a live output. Deleting a live output does not delete the asset the
            /// live output is writing to.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, accountName, liveEventName, liveOutputName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create Live Output
            /// </summary>
            /// <remarks>
            /// Creates a new live output.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            /// <param name='parameters'>
            /// Live Output properties needed for creation.
            /// </param>
            public static LiveOutput BeginCreate(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, LiveOutput parameters)
            {
                return operations.BeginCreateAsync(resourceGroupName, accountName, liveEventName, liveOutputName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create Live Output
            /// </summary>
            /// <remarks>
            /// Creates a new live output.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            /// <param name='parameters'>
            /// Live Output properties needed for creation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LiveOutput> BeginCreateAsync(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, LiveOutput parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, accountName, liveEventName, liveOutputName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete Live Output
            /// </summary>
            /// <remarks>
            /// Deletes a live output. Deleting a live output does not delete the asset the
            /// live output is writing to.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            public static void BeginDelete(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName)
            {
                operations.BeginDeleteAsync(resourceGroupName, accountName, liveEventName, liveOutputName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Live Output
            /// </summary>
            /// <remarks>
            /// Deletes a live output. Deleting a live output does not delete the asset the
            /// live output is writing to.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='accountName'>
            /// The Media Services account name.
            /// </param>
            /// <param name='liveEventName'>
            /// The name of the live event, maximum length is 32.
            /// </param>
            /// <param name='liveOutputName'>
            /// The name of the live output.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this ILiveOutputsOperations operations, string resourceGroupName, string accountName, string liveEventName, string liveOutputName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, accountName, liveEventName, liveOutputName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List Live Outputs
            /// </summary>
            /// <remarks>
            /// Lists the live outputs of a live event.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<LiveOutput> ListNext(this ILiveOutputsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List Live Outputs
            /// </summary>
            /// <remarks>
            /// Lists the live outputs of a live event.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<LiveOutput>> ListNextAsync(this ILiveOutputsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
