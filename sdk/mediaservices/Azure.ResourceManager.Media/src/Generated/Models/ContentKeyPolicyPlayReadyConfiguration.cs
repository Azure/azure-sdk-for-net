// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Media.Models
{
    /// <summary> Specifies a configuration for PlayReady licenses. </summary>
    public partial class ContentKeyPolicyPlayReadyConfiguration : ContentKeyPolicyConfiguration
    {
        /// <summary> Initializes a new instance of ContentKeyPolicyPlayReadyConfiguration. </summary>
        /// <param name="licenses"> The PlayReady licenses. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="licenses"/> is null. </exception>
        public ContentKeyPolicyPlayReadyConfiguration(IEnumerable<ContentKeyPolicyPlayReadyLicense> licenses)
        {
            if (licenses == null)
            {
                throw new ArgumentNullException(nameof(licenses));
            }

            Licenses = licenses.ToList();
            OdataType = "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration";
        }

        /// <summary> Initializes a new instance of ContentKeyPolicyPlayReadyConfiguration. </summary>
        /// <param name="odataType"> The discriminator for derived types. </param>
        /// <param name="licenses"> The PlayReady licenses. </param>
        /// <param name="responseCustomData"> The custom response data. </param>
        internal ContentKeyPolicyPlayReadyConfiguration(string odataType, IList<ContentKeyPolicyPlayReadyLicense> licenses, string responseCustomData) : base(odataType)
        {
            Licenses = licenses;
            ResponseCustomData = responseCustomData;
            OdataType = odataType ?? "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration";
        }

        /// <summary> The PlayReady licenses. </summary>
        public IList<ContentKeyPolicyPlayReadyLicense> Licenses { get; }
        /// <summary> The custom response data. </summary>
        public string ResponseCustomData { get; set; }
    }
}
