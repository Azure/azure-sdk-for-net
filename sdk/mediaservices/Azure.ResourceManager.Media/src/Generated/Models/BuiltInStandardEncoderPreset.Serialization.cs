// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Media.Models
{
    public partial class BuiltInStandardEncoderPreset : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Configurations))
            {
                writer.WritePropertyName("configurations"u8);
                writer.WriteObjectValue(Configurations);
            }
            writer.WritePropertyName("presetName"u8);
            writer.WriteStringValue(PresetName.ToString());
            writer.WritePropertyName("@odata.type"u8);
            writer.WriteStringValue(OdataType);
            writer.WriteEndObject();
        }

        internal static BuiltInStandardEncoderPreset DeserializeBuiltInStandardEncoderPreset(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<EncoderPresetConfigurations> configurations = default;
            EncoderNamedPreset presetName = default;
            string odataType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("configurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    configurations = EncoderPresetConfigurations.DeserializeEncoderPresetConfigurations(property.Value);
                    continue;
                }
                if (property.NameEquals("presetName"u8))
                {
                    presetName = new EncoderNamedPreset(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("@odata.type"u8))
                {
                    odataType = property.Value.GetString();
                    continue;
                }
            }
            return new BuiltInStandardEncoderPreset(odataType, configurations.Value, presetName);
        }
    }
}
