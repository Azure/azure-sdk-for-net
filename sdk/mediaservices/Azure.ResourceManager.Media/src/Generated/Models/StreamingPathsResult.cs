// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Media.Models
{
    /// <summary> Class of response for listPaths action. </summary>
    public partial class StreamingPathsResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="StreamingPathsResult"/>. </summary>
        internal StreamingPathsResult()
        {
            StreamingPaths = new ChangeTrackingList<StreamingPath>();
            DownloadPaths = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="StreamingPathsResult"/>. </summary>
        /// <param name="streamingPaths"> Streaming Paths supported by current Streaming Locator. </param>
        /// <param name="downloadPaths"> Download Paths supported by current Streaming Locator. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal StreamingPathsResult(IReadOnlyList<StreamingPath> streamingPaths, IReadOnlyList<string> downloadPaths, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            StreamingPaths = streamingPaths;
            DownloadPaths = downloadPaths;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Streaming Paths supported by current Streaming Locator. </summary>
        public IReadOnlyList<StreamingPath> StreamingPaths { get; }
        /// <summary> Download Paths supported by current Streaming Locator. </summary>
        public IReadOnlyList<string> DownloadPaths { get; }
    }
}
