// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Media.Models
{
    /// <summary> Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation. </summary>
    public partial class FilterTrackSelection
    {
        /// <summary> Initializes a new instance of FilterTrackSelection. </summary>
        /// <param name="trackSelections"> The track selections. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="trackSelections"/> is null. </exception>
        public FilterTrackSelection(IEnumerable<FilterTrackPropertyCondition> trackSelections)
        {
            if (trackSelections == null)
            {
                throw new ArgumentNullException(nameof(trackSelections));
            }

            TrackSelections = trackSelections.ToList();
        }

        /// <summary> Initializes a new instance of FilterTrackSelection. </summary>
        /// <param name="trackSelections"> The track selections. </param>
        internal FilterTrackSelection(IList<FilterTrackPropertyCondition> trackSelections)
        {
            TrackSelections = trackSelections;
        }

        /// <summary> The track selections. </summary>
        public IList<FilterTrackPropertyCondition> TrackSelections { get; }
    }
}
