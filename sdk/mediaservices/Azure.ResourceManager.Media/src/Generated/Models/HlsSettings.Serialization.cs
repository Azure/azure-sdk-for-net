// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Media.Models
{
    public partial class HlsSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Default))
            {
                writer.WritePropertyName("default");
                writer.WriteBooleanValue(Default.Value);
            }
            if (Optional.IsDefined(Forced))
            {
                writer.WritePropertyName("forced");
                writer.WriteBooleanValue(Forced.Value);
            }
            if (Optional.IsDefined(Characteristics))
            {
                writer.WritePropertyName("characteristics");
                writer.WriteStringValue(Characteristics);
            }
            writer.WriteEndObject();
        }

        internal static HlsSettings DeserializeHlsSettings(JsonElement element)
        {
            Optional<bool> @default = default;
            Optional<bool> forced = default;
            Optional<string> characteristics = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("default"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    @default = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("forced"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    forced = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("characteristics"))
                {
                    characteristics = property.Value.GetString();
                    continue;
                }
            }
            return new HlsSettings(Optional.ToNullable(@default), Optional.ToNullable(forced), characteristics.Value);
        }
    }
}
