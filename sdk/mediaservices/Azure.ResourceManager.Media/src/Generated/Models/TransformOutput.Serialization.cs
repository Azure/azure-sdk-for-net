// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Media.Models
{
    public partial class TransformOutput : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(OnError))
            {
                writer.WritePropertyName("onError");
                writer.WriteStringValue(OnError.Value.ToString());
            }
            if (Optional.IsDefined(RelativePriority))
            {
                writer.WritePropertyName("relativePriority");
                writer.WriteStringValue(RelativePriority.Value.ToString());
            }
            writer.WritePropertyName("preset");
            writer.WriteObjectValue(Preset);
            writer.WriteEndObject();
        }

        internal static TransformOutput DeserializeTransformOutput(JsonElement element)
        {
            Optional<OnErrorType> onError = default;
            Optional<Priority> relativePriority = default;
            Preset preset = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("onError"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    onError = new OnErrorType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("relativePriority"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    relativePriority = new Priority(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("preset"))
                {
                    preset = Preset.DeserializePreset(property.Value);
                    continue;
                }
            }
            return new TransformOutput(Optional.ToNullable(onError), Optional.ToNullable(relativePriority), preset);
        }
    }
}
