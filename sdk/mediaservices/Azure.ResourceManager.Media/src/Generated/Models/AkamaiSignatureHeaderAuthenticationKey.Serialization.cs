// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Media.Models
{
    public partial class AkamaiSignatureHeaderAuthenticationKey : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Identifier))
            {
                writer.WritePropertyName("identifier");
                writer.WriteStringValue(Identifier);
            }
            if (Optional.IsDefined(Base64Key))
            {
                writer.WritePropertyName("base64Key");
                writer.WriteStringValue(Base64Key);
            }
            if (Optional.IsDefined(Expiration))
            {
                writer.WritePropertyName("expiration");
                writer.WriteStringValue(Expiration.Value, "O");
            }
            writer.WriteEndObject();
        }

        internal static AkamaiSignatureHeaderAuthenticationKey DeserializeAkamaiSignatureHeaderAuthenticationKey(JsonElement element)
        {
            Optional<string> identifier = default;
            Optional<string> base64Key = default;
            Optional<DateTimeOffset> expiration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("identifier"))
                {
                    identifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("base64Key"))
                {
                    base64Key = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("expiration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expiration = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new AkamaiSignatureHeaderAuthenticationKey(identifier.Value, base64Key.Value, Optional.ToNullable(expiration));
        }
    }
}
