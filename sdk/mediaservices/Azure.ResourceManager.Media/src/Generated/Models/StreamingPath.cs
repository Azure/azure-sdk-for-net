// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Media.Models
{
    /// <summary> Class of paths for streaming. </summary>
    public partial class StreamingPath
    {
        /// <summary> Initializes a new instance of <see cref="StreamingPath"/>. </summary>
        /// <param name="streamingProtocol"> Streaming protocol. </param>
        /// <param name="encryptionScheme"> Encryption scheme. </param>
        internal StreamingPath(StreamingPolicyStreamingProtocol streamingProtocol, StreamingPathEncryptionScheme encryptionScheme)
        {
            StreamingProtocol = streamingProtocol;
            EncryptionScheme = encryptionScheme;
            Paths = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="StreamingPath"/>. </summary>
        /// <param name="streamingProtocol"> Streaming protocol. </param>
        /// <param name="encryptionScheme"> Encryption scheme. </param>
        /// <param name="paths"> Streaming paths for each protocol and encryptionScheme pair. </param>
        internal StreamingPath(StreamingPolicyStreamingProtocol streamingProtocol, StreamingPathEncryptionScheme encryptionScheme, IReadOnlyList<string> paths)
        {
            StreamingProtocol = streamingProtocol;
            EncryptionScheme = encryptionScheme;
            Paths = paths;
        }

        /// <summary> Streaming protocol. </summary>
        public StreamingPolicyStreamingProtocol StreamingProtocol { get; }
        /// <summary> Encryption scheme. </summary>
        public StreamingPathEncryptionScheme EncryptionScheme { get; }
        /// <summary> Streaming paths for each protocol and encryptionScheme pair. </summary>
        public IReadOnlyList<string> Paths { get; }
    }
}
