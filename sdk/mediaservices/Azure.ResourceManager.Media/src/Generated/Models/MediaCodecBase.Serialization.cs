// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Media.Models
{
    public partial class MediaCodecBase : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("@odata.type"u8);
            writer.WriteStringValue(OdataType);
            if (Optional.IsDefined(Label))
            {
                writer.WritePropertyName("label"u8);
                writer.WriteStringValue(Label);
            }
            writer.WriteEndObject();
        }

        internal static MediaCodecBase DeserializeMediaCodecBase(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            if (element.TryGetProperty("@odata.type", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "#Microsoft.Media.AacAudio": return AacAudio.DeserializeAacAudio(element);
                    case "#Microsoft.Media.Audio": return MediaAudioBase.DeserializeMediaAudioBase(element);
                    case "#Microsoft.Media.CopyAudio": return CodecCopyAudio.DeserializeCodecCopyAudio(element);
                    case "#Microsoft.Media.CopyVideo": return CodecCopyVideo.DeserializeCodecCopyVideo(element);
                    case "#Microsoft.Media.DDAudio": return DDAudio.DeserializeDDAudio(element);
                    case "#Microsoft.Media.H264Video": return H264Video.DeserializeH264Video(element);
                    case "#Microsoft.Media.H265Video": return H265Video.DeserializeH265Video(element);
                    case "#Microsoft.Media.Image": return MediaImageBase.DeserializeMediaImageBase(element);
                    case "#Microsoft.Media.JpgImage": return JpgImage.DeserializeJpgImage(element);
                    case "#Microsoft.Media.PngImage": return PngImage.DeserializePngImage(element);
                    case "#Microsoft.Media.Video": return MediaVideoBase.DeserializeMediaVideoBase(element);
                }
            }
            return UnknownCodec.DeserializeUnknownCodec(element);
        }
    }
}
