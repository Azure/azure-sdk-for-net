// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Media.Analytics.Edge.Models
{
    /// <summary> A node that accepts raw video as input, and detects objects. </summary>
    public partial class ObjectTrackingProcessor : Processor
    {
        /// <summary> Initializes a new instance of ObjectTrackingProcessor. </summary>
        /// <param name="name"> The name for this processor node. </param>
        /// <param name="inputs"> An array of the names of the other nodes in the topology, the outputs of which are used as input for this processor node. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="inputs"/> is null. </exception>
        public ObjectTrackingProcessor(string name, IEnumerable<NodeInput> inputs) : base(name, inputs)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (inputs == null)
            {
                throw new ArgumentNullException(nameof(inputs));
            }

            Type = "#Microsoft.VideoAnalyzer.ObjectTrackingProcessor";
        }

        /// <summary> Initializes a new instance of ObjectTrackingProcessor. </summary>
        /// <param name="type"> The discriminator for derived types. </param>
        /// <param name="name"> The name for this processor node. </param>
        /// <param name="inputs"> An array of the names of the other nodes in the topology, the outputs of which are used as input for this processor node. </param>
        /// <param name="accuracy"> Enumeration that controls the accuracy of the tracker. </param>
        internal ObjectTrackingProcessor(string type, string name, IList<NodeInput> inputs, ObjectTrackingAccuracy? accuracy) : base(type, name, inputs)
        {
            Accuracy = accuracy;
            Type = type ?? "#Microsoft.VideoAnalyzer.ObjectTrackingProcessor";
        }

        /// <summary> Enumeration that controls the accuracy of the tracker. </summary>
        public ObjectTrackingAccuracy? Accuracy { get; set; }
    }
}
