// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Media.Analytics.Edge.Models
{
    /// <summary> A processor that allows the pipeline topology to send video frames to a Cognitive Services Vision extension. Inference results are relayed to downstream nodes. </summary>
    public partial class CognitiveServicesVisionExtension : ExtensionProcessorBase
    {
        /// <summary> Initializes a new instance of CognitiveServicesVisionExtension. </summary>
        /// <param name="name"> The name for this processor node. </param>
        /// <param name="inputs"> An array of the names of the other nodes in the topology, the outputs of which are used as input for this processor node. </param>
        /// <param name="endpoint"> Endpoint to which this processor should connect. </param>
        /// <param name="image"> Describes the parameters of the image that is sent as input to the endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="inputs"/>, <paramref name="endpoint"/>, or <paramref name="image"/> is null. </exception>
        public CognitiveServicesVisionExtension(string name, IEnumerable<NodeInput> inputs, Endpoint endpoint, Image image) : base(name, inputs, endpoint, image)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (inputs == null)
            {
                throw new ArgumentNullException(nameof(inputs));
            }
            if (endpoint == null)
            {
                throw new ArgumentNullException(nameof(endpoint));
            }
            if (image == null)
            {
                throw new ArgumentNullException(nameof(image));
            }

            Type = "#Microsoft.VideoAnalyzer.CognitiveServicesVisionExtension";
        }

        /// <summary> Initializes a new instance of CognitiveServicesVisionExtension. </summary>
        /// <param name="type"> The discriminator for derived types. </param>
        /// <param name="name"> The name for this processor node. </param>
        /// <param name="inputs"> An array of the names of the other nodes in the topology, the outputs of which are used as input for this processor node. </param>
        /// <param name="endpoint"> Endpoint to which this processor should connect. </param>
        /// <param name="image"> Describes the parameters of the image that is sent as input to the endpoint. </param>
        /// <param name="samplingOptions"> Describes the sampling options to be applied when forwarding samples to the extension. </param>
        /// <param name="extensionConfiguration"> Optional configuration to pass to the CognitiveServicesVision extension. </param>
        internal CognitiveServicesVisionExtension(string type, string name, IList<NodeInput> inputs, Endpoint endpoint, Image image, SamplingOptions samplingOptions, string extensionConfiguration) : base(type, name, inputs, endpoint, image, samplingOptions)
        {
            ExtensionConfiguration = extensionConfiguration;
            Type = type ?? "#Microsoft.VideoAnalyzer.CognitiveServicesVisionExtension";
        }

        /// <summary> Optional configuration to pass to the CognitiveServicesVision extension. </summary>
        public string ExtensionConfiguration { get; set; }
    }
}
