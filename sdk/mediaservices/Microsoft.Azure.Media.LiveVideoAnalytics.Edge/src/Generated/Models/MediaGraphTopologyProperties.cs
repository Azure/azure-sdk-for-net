// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Media.LiveVideoAnalytics.Edge.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes the properties of a graph topology.
    /// </summary>
    public partial class MediaGraphTopologyProperties
    {
        /// <summary>
        /// Initializes a new instance of the MediaGraphTopologyProperties
        /// class.
        /// </summary>
        public MediaGraphTopologyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MediaGraphTopologyProperties
        /// class.
        /// </summary>
        public MediaGraphTopologyProperties(string description = default(string), IList<MediaGraphParameterDeclaration> parameters = default(IList<MediaGraphParameterDeclaration>), IList<MediaGraphSource> sources = default(IList<MediaGraphSource>), IList<MediaGraphProcessor> processors = default(IList<MediaGraphProcessor>), IList<MediaGraphSink> sinks = default(IList<MediaGraphSink>))
        {
            Description = description;
            Parameters = parameters;
            Sources = sources;
            Processors = processors;
            Sinks = sinks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<MediaGraphParameterDeclaration> Parameters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sources")]
        public IList<MediaGraphSource> Sources { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processors")]
        public IList<MediaGraphProcessor> Processors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sinks")]
        public IList<MediaGraphSink> Sinks { get; set; }

    }
}
