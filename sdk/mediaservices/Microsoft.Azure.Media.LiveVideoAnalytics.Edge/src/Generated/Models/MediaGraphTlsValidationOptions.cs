// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Media.LiveVideoAnalytics.Edge.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Options for controlling the authentication of TLS endpoints.
    /// </summary>
    public partial class MediaGraphTlsValidationOptions
    {
        /// <summary>
        /// Initializes a new instance of the MediaGraphTlsValidationOptions
        /// class.
        /// </summary>
        public MediaGraphTlsValidationOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MediaGraphTlsValidationOptions
        /// class.
        /// </summary>
        /// <param name="ignoreHostname">Boolean value ignoring the host name
        /// (common name) during validation.</param>
        /// <param name="ignoreSignature">Boolean value ignoring the integrity
        /// of the certificate chain at the current time.</param>
        public MediaGraphTlsValidationOptions(string ignoreHostname = default(string), string ignoreSignature = default(string))
        {
            IgnoreHostname = ignoreHostname;
            IgnoreSignature = ignoreSignature;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets boolean value ignoring the host name (common name)
        /// during validation.
        /// </summary>
        [JsonProperty(PropertyName = "ignoreHostname")]
        public string IgnoreHostname { get; set; }

        /// <summary>
        /// Gets or sets boolean value ignoring the integrity of the
        /// certificate chain at the current time.
        /// </summary>
        [JsonProperty(PropertyName = "ignoreSignature")]
        public string IgnoreSignature { get; set; }

    }
}
