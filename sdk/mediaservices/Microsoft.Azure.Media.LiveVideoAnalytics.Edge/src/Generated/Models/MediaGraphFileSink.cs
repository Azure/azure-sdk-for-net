// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Media.LiveVideoAnalytics.Edge.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Enables a media graph to write/store media (video and audio) to a file
    /// on the Edge device.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.MediaGraphFileSink")]
    public partial class MediaGraphFileSink : MediaGraphSink
    {
        /// <summary>
        /// Initializes a new instance of the MediaGraphFileSink class.
        /// </summary>
        public MediaGraphFileSink()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MediaGraphFileSink class.
        /// </summary>
        /// <param name="name">Name to be used for the media graph
        /// sink.</param>
        /// <param name="inputs">An array of the names of the other nodes in
        /// the media graph, the outputs of which are used as input for this
        /// sink node.</param>
        /// <param name="filePathPattern">Absolute file path pattern for
        /// creating new files on the Edge device.</param>
        public MediaGraphFileSink(string name, IList<MediaGraphNodeInput> inputs, string filePathPattern)
            : base(name, inputs)
        {
            FilePathPattern = filePathPattern;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets absolute file path pattern for creating new files on
        /// the Edge device.
        /// </summary>
        [JsonProperty(PropertyName = "filePathPattern")]
        public string FilePathPattern { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (FilePathPattern == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FilePathPattern");
            }
            if (FilePathPattern != null)
            {
                if (FilePathPattern.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "FilePathPattern", 1);
                }
            }
        }
    }
}
