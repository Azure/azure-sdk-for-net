// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Media.LiveVideoAnalytics.Edge.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An endpoint that the media graph can connect to, with no encryption in
    /// transit.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.MediaGraphUnsecuredEndpoint")]
    public partial class MediaGraphUnsecuredEndpoint : MediaGraphEndpoint
    {
        /// <summary>
        /// Initializes a new instance of the MediaGraphUnsecuredEndpoint
        /// class.
        /// </summary>
        public MediaGraphUnsecuredEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MediaGraphUnsecuredEndpoint
        /// class.
        /// </summary>
        /// <param name="url">Url for the endpoint.</param>
        /// <param name="credentials">Polymorphic credentials to be presented
        /// to the endpoint.</param>
        public MediaGraphUnsecuredEndpoint(string url, MediaGraphCredentials credentials = default(MediaGraphCredentials))
            : base(url, credentials)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
