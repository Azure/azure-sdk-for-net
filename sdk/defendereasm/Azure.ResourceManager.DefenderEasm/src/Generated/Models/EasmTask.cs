// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DefenderEasm.Models
{
    /// <summary> Task details. </summary>
    public partial class EasmTask : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="EasmTask"/>. </summary>
        public EasmTask()
        {
        }

        /// <summary> Initializes a new instance of <see cref="EasmTask"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="startedAt"> The time the task started. </param>
        /// <param name="completedAt"> The time the task completed. </param>
        /// <param name="lastPolledAt"> The last time the task was polled. </param>
        /// <param name="state"> the state the task is in. </param>
        /// <param name="phase"> the phase the task is in. </param>
        /// <param name="reason"> The reason the task was moved into its current state, if the task wasn't completed. </param>
        /// <param name="metadata"> The reason the task was moved into its current state, if the task wasn't completed. </param>
        internal EasmTask(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, EasmResourceProvisioningState? provisioningState, string startedAt, string completedAt, string lastPolledAt, string state, string phase, string reason, BinaryData metadata) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            StartedAt = startedAt;
            CompletedAt = completedAt;
            LastPolledAt = lastPolledAt;
            State = state;
            Phase = phase;
            Reason = reason;
            Metadata = metadata;
        }

        /// <summary> Resource provisioning state. </summary>
        public EasmResourceProvisioningState? ProvisioningState { get; }
        /// <summary> The time the task started. </summary>
        public string StartedAt { get; set; }
        /// <summary> The time the task completed. </summary>
        public string CompletedAt { get; set; }
        /// <summary> The last time the task was polled. </summary>
        public string LastPolledAt { get; set; }
        /// <summary> the state the task is in. </summary>
        public string State { get; set; }
        /// <summary> the phase the task is in. </summary>
        public string Phase { get; set; }
        /// <summary> The reason the task was moved into its current state, if the task wasn't completed. </summary>
        public string Reason { get; set; }
        /// <summary>
        /// The reason the task was moved into its current state, if the task wasn't completed.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Metadata { get; set; }
    }
}
