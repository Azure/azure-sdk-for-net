// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.DefenderEasm;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DefenderEasm.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmDefenderEasmModelFactory
    {
        /// <summary> Initializes a new instance of WorkspaceResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="dataPlaneEndpoint"> Data plane endpoint. </param>
        /// <returns> A new <see cref="DefenderEasm.WorkspaceResourceData"/> instance for mocking. </returns>
        public static WorkspaceResourceData WorkspaceResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, ResourceState? provisioningState = null, string dataPlaneEndpoint = null)
        {
            tags ??= new Dictionary<string, string>();

            return new WorkspaceResourceData(id, name, resourceType, systemData, tags, location, provisioningState, dataPlaneEndpoint);
        }

        /// <summary> Initializes a new instance of LabelResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="displayName"> Label display name. </param>
        /// <param name="color"> Label color. </param>
        /// <returns> A new <see cref="DefenderEasm.LabelResourceData"/> instance for mocking. </returns>
        public static LabelResourceData LabelResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ResourceState? provisioningState = null, string displayName = null, string color = null)
        {
            return new LabelResourceData(id, name, resourceType, systemData, provisioningState, displayName, color);
        }

        /// <summary> Initializes a new instance of LabelResourcePatch. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="displayName"> Label display name. </param>
        /// <param name="color"> Label color. </param>
        /// <returns> A new <see cref="Models.LabelResourcePatch"/> instance for mocking. </returns>
        public static LabelResourcePatch LabelResourcePatch(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ResourceState? provisioningState = null, string displayName = null, string color = null)
        {
            return new LabelResourcePatch(id, name, resourceType, systemData, provisioningState, displayName, color);
        }

        /// <summary> Initializes a new instance of TaskResource. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> Resource provisioning state. </param>
        /// <param name="startedAt"> The time the task started. </param>
        /// <param name="completedAt"> The time the task completed. </param>
        /// <param name="lastPolledAt"> The last time the task was polled. </param>
        /// <param name="state"> the state the task is in. </param>
        /// <param name="phase"> the phase the task is in. </param>
        /// <param name="reason"> The reason the task was moved into its current state, if the task wasn't completed. </param>
        /// <param name="metadata"> The reason the task was moved into its current state, if the task wasn't completed. </param>
        /// <returns> A new <see cref="Models.TaskResource"/> instance for mocking. </returns>
        public static TaskResource TaskResource(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ResourceState? provisioningState = null, string startedAt = null, string completedAt = null, string lastPolledAt = null, string state = null, string phase = null, string reason = null, BinaryData metadata = null)
        {
            return new TaskResource(id, name, resourceType, systemData, provisioningState, startedAt, completedAt, lastPolledAt, state, phase, reason, metadata);
        }
    }
}
