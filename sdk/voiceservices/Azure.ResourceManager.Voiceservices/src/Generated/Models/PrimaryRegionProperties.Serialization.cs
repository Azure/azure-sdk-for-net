// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Voiceservices.Models
{
    public partial class PrimaryRegionProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("operatorAddresses");
            writer.WriteStartArray();
            foreach (var item in OperatorAddresses)
            {
                writer.WriteStringValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsCollectionDefined(EsrpAddresses))
            {
                writer.WritePropertyName("esrpAddresses");
                writer.WriteStartArray();
                foreach (var item in EsrpAddresses)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(AllowedSignalingSourceAddressPrefixes))
            {
                writer.WritePropertyName("allowedSignalingSourceAddressPrefixes");
                writer.WriteStartArray();
                foreach (var item in AllowedSignalingSourceAddressPrefixes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(AllowedMediaSourceAddressPrefixes))
            {
                writer.WritePropertyName("allowedMediaSourceAddressPrefixes");
                writer.WriteStartArray();
                foreach (var item in AllowedMediaSourceAddressPrefixes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static PrimaryRegionProperties DeserializePrimaryRegionProperties(JsonElement element)
        {
            IList<string> operatorAddresses = default;
            Optional<IList<string>> esrpAddresses = default;
            Optional<IList<string>> allowedSignalingSourceAddressPrefixes = default;
            Optional<IList<string>> allowedMediaSourceAddressPrefixes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("operatorAddresses"))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    operatorAddresses = array;
                    continue;
                }
                if (property.NameEquals("esrpAddresses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    esrpAddresses = array;
                    continue;
                }
                if (property.NameEquals("allowedSignalingSourceAddressPrefixes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    allowedSignalingSourceAddressPrefixes = array;
                    continue;
                }
                if (property.NameEquals("allowedMediaSourceAddressPrefixes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    allowedMediaSourceAddressPrefixes = array;
                    continue;
                }
            }
            return new PrimaryRegionProperties(operatorAddresses, Optional.ToList(esrpAddresses), Optional.ToList(allowedSignalingSourceAddressPrefixes), Optional.ToList(allowedMediaSourceAddressPrefixes));
        }
    }
}
