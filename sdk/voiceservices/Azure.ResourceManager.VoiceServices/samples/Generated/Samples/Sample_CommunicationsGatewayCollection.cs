// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.VoiceServices;
using Azure.ResourceManager.VoiceServices.Models;

namespace Azure.ResourceManager.VoiceServices.Samples
{
    public partial class Sample_CommunicationsGatewayCollection
    {
        // ListCommunicationsGatewayResource
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ListCommunicationsGatewayResource()
        {
            // Generated from example definition: specification/voiceservices/resource-manager/Microsoft.VoiceServices/stable/2023-01-31/examples/CommunicationsGateways_ListByResourceGroup.json
            // this example is just showing the usage of "CommunicationsGateways_ListByResourceGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this CommunicationsGatewayResource
            CommunicationsGatewayCollection collection = resourceGroupResource.GetCommunicationsGateways();

            // invoke the operation and iterate over the result
            await foreach (CommunicationsGatewayResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                CommunicationsGatewayData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // GetCommunicationsGatewayResource
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetCommunicationsGatewayResource()
        {
            // Generated from example definition: specification/voiceservices/resource-manager/Microsoft.VoiceServices/stable/2023-01-31/examples/CommunicationsGateways_Get.json
            // this example is just showing the usage of "CommunicationsGateways_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this CommunicationsGatewayResource
            CommunicationsGatewayCollection collection = resourceGroupResource.GetCommunicationsGateways();

            // invoke the operation
            string communicationsGatewayName = "myname";
            CommunicationsGatewayResource result = await collection.GetAsync(communicationsGatewayName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CommunicationsGatewayData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // GetCommunicationsGatewayResource
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetCommunicationsGatewayResource()
        {
            // Generated from example definition: specification/voiceservices/resource-manager/Microsoft.VoiceServices/stable/2023-01-31/examples/CommunicationsGateways_Get.json
            // this example is just showing the usage of "CommunicationsGateways_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this CommunicationsGatewayResource
            CommunicationsGatewayCollection collection = resourceGroupResource.GetCommunicationsGateways();

            // invoke the operation
            string communicationsGatewayName = "myname";
            bool result = await collection.ExistsAsync(communicationsGatewayName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // CreateCommunicationsGatewayResource
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateCommunicationsGatewayResource()
        {
            // Generated from example definition: specification/voiceservices/resource-manager/Microsoft.VoiceServices/stable/2023-01-31/examples/CommunicationsGateways_CreateOrUpdate.json
            // this example is just showing the usage of "CommunicationsGateways_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "testrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this CommunicationsGatewayResource
            CommunicationsGatewayCollection collection = resourceGroupResource.GetCommunicationsGateways();

            // invoke the operation
            string communicationsGatewayName = "myname";
            CommunicationsGatewayData data = new CommunicationsGatewayData(new AzureLocation("useast"))
            {
                ServiceLocations =
{
new ServiceRegionProperties("useast",new PrimaryRegionProperties(new string[]
{
"198.51.100.1"
})
{
AllowedSignalingSourceAddressPrefixes =
{
"10.1.1.0/24"
},
AllowedMediaSourceAddressPrefixes =
{
"10.1.2.0/24"
},
}),new ServiceRegionProperties("useast2",new PrimaryRegionProperties(new string[]
{
"198.51.100.2"
})
{
AllowedSignalingSourceAddressPrefixes =
{
"10.2.1.0/24"
},
AllowedMediaSourceAddressPrefixes =
{
"10.2.2.0/24"
},
})
},
                Connectivity = Connectivity.PublicAddress,
                Codecs =
{
TeamsCodec.Pcma
},
                E911Type = E911Type.Standard,
                Platforms =
{
CommunicationsPlatform.OperatorConnect
},
                AutoGeneratedDomainNameLabelScope = AutoGeneratedDomainNameLabelScope.NoReuse,
                TeamsVoicemailPilotNumber = "1234567890",
            };
            ArmOperation<CommunicationsGatewayResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, communicationsGatewayName, data);
            CommunicationsGatewayResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CommunicationsGatewayData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
