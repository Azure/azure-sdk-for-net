// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.VoiceServices;

namespace Azure.ResourceManager.VoiceServices.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmVoiceServicesModelFactory
    {
        /// <summary> Initializes a new instance of VoiceServicesCommunicationsGatewayData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="provisioningState">
        /// Resource provisioning state.
        /// Serialized Name: CommunicationsGateway.properties.provisioningState
        /// </param>
        /// <param name="status">
        /// The current status of the deployment.
        /// Serialized Name: CommunicationsGateway.properties.status
        /// </param>
        /// <param name="serviceLocations">
        /// The regions in which to deploy the resources needed for Teams Calling
        /// Serialized Name: CommunicationsGateway.properties.serviceLocations
        /// </param>
        /// <param name="connectivity">
        /// How to connect back to the operator network, e.g. MAPS
        /// Serialized Name: CommunicationsGateway.properties.connectivity
        /// </param>
        /// <param name="codecs">
        /// Voice codecs to support
        /// Serialized Name: CommunicationsGateway.properties.codecs
        /// </param>
        /// <param name="e911Type">
        /// How to handle 911 calls
        /// Serialized Name: CommunicationsGateway.properties.e911Type
        /// </param>
        /// <param name="platforms">
        /// What platforms to support
        /// Serialized Name: CommunicationsGateway.properties.platforms
        /// </param>
        /// <param name="apiBridge">
        /// Details of API bridge functionality, if required
        /// Serialized Name: CommunicationsGateway.properties.apiBridge
        /// </param>
        /// <param name="autoGeneratedDomainNameLabelScope">
        /// The scope at which the auto-generated domain name can be re-used
        /// Serialized Name: CommunicationsGateway.properties.autoGeneratedDomainNameLabelScope
        /// </param>
        /// <param name="autoGeneratedDomainNameLabel">
        /// The autogenerated label used as part of the FQDNs for accessing the Communications Gateway
        /// Serialized Name: CommunicationsGateway.properties.autoGeneratedDomainNameLabel
        /// </param>
        /// <param name="teamsVoicemailPilotNumber">
        /// This number is used in Teams Phone Mobile scenarios for access to the voicemail IVR from the native dialer.
        /// Serialized Name: CommunicationsGateway.properties.teamsVoicemailPilotNumber
        /// </param>
        /// <param name="isOnPremMcpEnabled">
        /// Whether an on-premises Mobile Control Point is in use.
        /// Serialized Name: CommunicationsGateway.properties.onPremMcpEnabled
        /// </param>
        /// <param name="emergencyDialStrings">
        /// A list of dial strings used for emergency calling.
        /// Serialized Name: CommunicationsGateway.properties.emergencyDialStrings
        /// </param>
        /// <returns> A new <see cref="VoiceServices.VoiceServicesCommunicationsGatewayData"/> instance for mocking. </returns>
        public static VoiceServicesCommunicationsGatewayData VoiceServicesCommunicationsGatewayData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, VoiceServicesProvisioningState? provisioningState = null, VoiceServicesCommunicationsGatewayStatus? status = null, IEnumerable<VoiceServicesServiceRegionProperties> serviceLocations = null, VoiceServicesCommunicationsGatewayConnectivity? connectivity = null, IEnumerable<VoiceServicesTeamsCodec> codecs = null, VoiceServicesEmergencyCallType? e911Type = null, IEnumerable<VoiceServicesCommunicationsPlatform> platforms = null, BinaryData apiBridge = null, AutoGeneratedDomainNameLabelScope? autoGeneratedDomainNameLabelScope = null, string autoGeneratedDomainNameLabel = null, string teamsVoicemailPilotNumber = null, bool? isOnPremMcpEnabled = null, IEnumerable<string> emergencyDialStrings = null)
        {
            tags ??= new Dictionary<string, string>();
            serviceLocations ??= new List<VoiceServicesServiceRegionProperties>();
            codecs ??= new List<VoiceServicesTeamsCodec>();
            platforms ??= new List<VoiceServicesCommunicationsPlatform>();
            emergencyDialStrings ??= new List<string>();

            return new VoiceServicesCommunicationsGatewayData(id, name, resourceType, systemData, tags, location, provisioningState, status, serviceLocations?.ToList(), connectivity, codecs?.ToList(), e911Type, platforms?.ToList(), apiBridge, autoGeneratedDomainNameLabelScope, autoGeneratedDomainNameLabel, teamsVoicemailPilotNumber, isOnPremMcpEnabled, emergencyDialStrings?.ToList());
        }

        /// <summary> Initializes a new instance of VoiceServicesCheckNameAvailabilityResult. </summary>
        /// <param name="nameAvailable">
        /// Indicates if the resource name is available.
        /// Serialized Name: CheckNameAvailabilityResponse.nameAvailable
        /// </param>
        /// <param name="reason">
        /// The reason why the given name is not available.
        /// Serialized Name: CheckNameAvailabilityResponse.reason
        /// </param>
        /// <param name="message">
        /// Detailed reason why the given name is not available.
        /// Serialized Name: CheckNameAvailabilityResponse.message
        /// </param>
        /// <returns> A new <see cref="Models.VoiceServicesCheckNameAvailabilityResult"/> instance for mocking. </returns>
        public static VoiceServicesCheckNameAvailabilityResult VoiceServicesCheckNameAvailabilityResult(bool? nameAvailable = null, VoiceServicesNameUnavailableReason? reason = null, string message = null)
        {
            return new VoiceServicesCheckNameAvailabilityResult(nameAvailable, reason, message);
        }

        /// <summary> Initializes a new instance of VoiceServicesTestLineData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="provisioningState">
        /// Resource provisioning state.
        /// Serialized Name: TestLine.properties.provisioningState
        /// </param>
        /// <param name="phoneNumber">
        /// The phone number
        /// Serialized Name: TestLine.properties.phoneNumber
        /// </param>
        /// <param name="purpose">
        /// Purpose of this test line, e.g. automated or manual testing
        /// Serialized Name: TestLine.properties.purpose
        /// </param>
        /// <returns> A new <see cref="VoiceServices.VoiceServicesTestLineData"/> instance for mocking. </returns>
        public static VoiceServicesTestLineData VoiceServicesTestLineData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, VoiceServicesProvisioningState? provisioningState = null, string phoneNumber = null, VoiceServicesTestLinePurpose? purpose = null)
        {
            tags ??= new Dictionary<string, string>();

            return new VoiceServicesTestLineData(id, name, resourceType, systemData, tags, location, provisioningState, phoneNumber, purpose);
        }
    }
}
