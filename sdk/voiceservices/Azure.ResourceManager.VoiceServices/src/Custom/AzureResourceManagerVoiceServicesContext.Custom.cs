// <auto-generated/>

using Azure.ResourceManager.Models;
using Azure.ResourceManager.VoiceServices;
using Azure.ResourceManager.VoiceServices.Models;
using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;

namespace Azure.ResourceManager.VoiceServices;

[ModelReaderWriterBuildable(typeof(VoiceServicesCommunicationsGatewayData))]
[ModelReaderWriterBuildable(typeof(VoiceServicesCommunicationsGatewayResource))]
[ModelReaderWriterBuildable(typeof(VoiceServicesTestLineData))]
[ModelReaderWriterBuildable(typeof(VoiceServicesTestLineResource))]
[ModelReaderWriterBuildable(typeof(VoiceServicesCheckNameAvailabilityContent))]
[ModelReaderWriterBuildable(typeof(VoiceServicesCheckNameAvailabilityResult))]
[ModelReaderWriterBuildable(typeof(VoiceServicesCommunicationsGatewayListResult))]
[ModelReaderWriterBuildable(typeof(VoiceServicesCommunicationsGatewayPatch))]
[ModelReaderWriterBuildable(typeof(VoiceServicesPrimaryRegionProperties))]
[ModelReaderWriterBuildable(typeof(VoiceServicesServiceRegionProperties))]
[ModelReaderWriterBuildable(typeof(VoiceServicesTestLineListResult))]
[ModelReaderWriterBuildable(typeof(VoiceServicesTestLinePatch))]
public partial class AzureResourceManagerVoiceServicesContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
    }
}
