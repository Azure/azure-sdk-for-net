// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Evaluation details of IfNotExists effect.
    /// </summary>
    public partial class IfNotExistsEvaluationDetails
    {
        /// <summary>
        /// Initializes a new instance of the IfNotExistsEvaluationDetails
        /// class.
        /// </summary>
        public IfNotExistsEvaluationDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IfNotExistsEvaluationDetails
        /// class.
        /// </summary>
        /// <param name="resourceId">ID of the last evaluated resource for
        /// IfNotExists effect.</param>
        /// <param name="totalResources">Total number of resources to which the
        /// existence condition is applicable.</param>
        public IfNotExistsEvaluationDetails(string resourceId = default(string), int? totalResources = default(int?))
        {
            ResourceId = resourceId;
            TotalResources = totalResources;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ID of the last evaluated resource for IfNotExists
        /// effect.
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets total number of resources to which the existence
        /// condition is applicable.
        /// </summary>
        [JsonProperty(PropertyName = "totalResources")]
        public int? TotalResources { get; set; }

    }
}
