// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The restrictions on a field imposed by a specific policy.
    /// </summary>
    public partial class FieldRestriction
    {
        /// <summary>
        /// Initializes a new instance of the FieldRestriction class.
        /// </summary>
        public FieldRestriction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FieldRestriction class.
        /// </summary>
        /// <param name="result">The type of restriction that is imposed on the
        /// field. Possible values include: 'Required', 'Removed',
        /// 'Deny'</param>
        /// <param name="defaultValue">The value that policy will set for the
        /// field if the user does not provide a value.</param>
        /// <param name="values">The values that policy either requires or
        /// denies for the field.</param>
        /// <param name="policy">The details of the policy that is causing the
        /// field restriction.</param>
        public FieldRestriction(string result = default(string), string defaultValue = default(string), IList<string> values = default(IList<string>), PolicyReference policy = default(PolicyReference))
        {
            Result = result;
            DefaultValue = defaultValue;
            Values = values;
            Policy = policy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the type of restriction that is imposed on the field. Possible
        /// values include: 'Required', 'Removed', 'Deny'
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public string Result { get; private set; }

        /// <summary>
        /// Gets the value that policy will set for the field if the user does
        /// not provide a value.
        /// </summary>
        [JsonProperty(PropertyName = "defaultValue")]
        public string DefaultValue { get; private set; }

        /// <summary>
        /// Gets the values that policy either requires or denies for the
        /// field.
        /// </summary>
        [JsonProperty(PropertyName = "values")]
        public IList<string> Values { get; private set; }

        /// <summary>
        /// Gets the details of the policy that is causing the field
        /// restriction.
        /// </summary>
        [JsonProperty(PropertyName = "policy")]
        public PolicyReference Policy { get; private set; }

    }
}
