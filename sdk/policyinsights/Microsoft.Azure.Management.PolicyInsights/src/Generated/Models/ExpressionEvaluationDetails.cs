// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Evaluation details of policy language expressions.
    /// </summary>
    public partial class ExpressionEvaluationDetails
    {
        /// <summary>
        /// Initializes a new instance of the ExpressionEvaluationDetails
        /// class.
        /// </summary>
        public ExpressionEvaluationDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressionEvaluationDetails
        /// class.
        /// </summary>
        /// <param name="result">Evaluation result.</param>
        /// <param name="expression">Expression evaluated.</param>
        /// <param name="path">Property path if the expression is a field or an
        /// alias.</param>
        /// <param name="expressionValue">Value of the expression.</param>
        /// <param name="targetValue">Target value to be compared with the
        /// expression value.</param>
        /// <param name="operatorProperty">Operator to compare the expression
        /// value and the target value.</param>
        public ExpressionEvaluationDetails(string result = default(string), string expression = default(string), string path = default(string), object expressionValue = default(object), object targetValue = default(object), string operatorProperty = default(string))
        {
            Result = result;
            Expression = expression;
            Path = path;
            ExpressionValue = expressionValue;
            TargetValue = targetValue;
            OperatorProperty = operatorProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets evaluation result.
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public string Result { get; set; }

        /// <summary>
        /// Gets or sets expression evaluated.
        /// </summary>
        [JsonProperty(PropertyName = "expression")]
        public string Expression { get; set; }

        /// <summary>
        /// Gets or sets property path if the expression is a field or an
        /// alias.
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets value of the expression.
        /// </summary>
        [JsonProperty(PropertyName = "expressionValue")]
        public object ExpressionValue { get; set; }

        /// <summary>
        /// Gets or sets target value to be compared with the expression value.
        /// </summary>
        [JsonProperty(PropertyName = "targetValue")]
        public object TargetValue { get; set; }

        /// <summary>
        /// Gets or sets operator to compare the expression value and the
        /// target value.
        /// </summary>
        [JsonProperty(PropertyName = "operator")]
        public string OperatorProperty { get; set; }

    }
}
