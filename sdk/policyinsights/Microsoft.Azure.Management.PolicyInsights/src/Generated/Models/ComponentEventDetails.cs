// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Component event details.
    /// </summary>
    public partial class ComponentEventDetails
    {
        /// <summary>
        /// Initializes a new instance of the ComponentEventDetails class.
        /// </summary>
        public ComponentEventDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComponentEventDetails class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="id">Component Id.</param>
        /// <param name="type">Component type.</param>
        /// <param name="name">Component name.</param>
        /// <param name="timestamp">Timestamp for component policy event
        /// record.</param>
        /// <param name="tenantId">Tenant ID for the policy event
        /// record.</param>
        /// <param name="principalOid">Principal object ID for the user who
        /// initiated the resource component operation that triggered the
        /// policy event.</param>
        /// <param name="policyDefinitionAction">Policy definition action, i.e.
        /// effect.</param>
        public ComponentEventDetails(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string id = default(string), string type = default(string), string name = default(string), System.DateTime? timestamp = default(System.DateTime?), string tenantId = default(string), string principalOid = default(string), string policyDefinitionAction = default(string))
        {
            AdditionalProperties = additionalProperties;
            Id = id;
            Type = type;
            Name = name;
            Timestamp = timestamp;
            TenantId = tenantId;
            PrincipalOid = principalOid;
            PolicyDefinitionAction = policyDefinitionAction;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets component Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets component type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets component name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets timestamp for component policy event record.
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// Gets or sets tenant ID for the policy event record.
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or sets principal object ID for the user who initiated the
        /// resource component operation that triggered the policy event.
        /// </summary>
        [JsonProperty(PropertyName = "principalOid")]
        public string PrincipalOid { get; set; }

        /// <summary>
        /// Gets or sets policy definition action, i.e. effect.
        /// </summary>
        [JsonProperty(PropertyName = "policyDefinitionAction")]
        public string PolicyDefinitionAction { get; set; }

    }
}
