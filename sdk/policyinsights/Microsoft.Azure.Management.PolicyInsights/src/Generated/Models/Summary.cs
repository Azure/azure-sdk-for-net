// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Summary results.
    /// </summary>
    public partial class Summary
    {
        /// <summary>
        /// Initializes a new instance of the Summary class.
        /// </summary>
        public Summary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Summary class.
        /// </summary>
        /// <param name="odataid">OData entity ID; always set to null since
        /// summaries do not have an entity ID.</param>
        /// <param name="odatacontext">OData context string; used by OData
        /// clients to resolve type information based on metadata.</param>
        /// <param name="results">Compliance summary for all policy
        /// assignments.</param>
        /// <param name="policyAssignments">Policy assignments summary.</param>
        public Summary(string odataid = default(string), string odatacontext = default(string), SummaryResults results = default(SummaryResults), IList<PolicyAssignmentSummary> policyAssignments = default(IList<PolicyAssignmentSummary>))
        {
            Odataid = odataid;
            Odatacontext = odatacontext;
            Results = results;
            PolicyAssignments = policyAssignments;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets oData entity ID; always set to null since summaries do
        /// not have an entity ID.
        /// </summary>
        [JsonProperty(PropertyName = "@odata.id")]
        public string Odataid { get; set; }

        /// <summary>
        /// Gets or sets oData context string; used by OData clients to resolve
        /// type information based on metadata.
        /// </summary>
        [JsonProperty(PropertyName = "@odata.context")]
        public string Odatacontext { get; set; }

        /// <summary>
        /// Gets or sets compliance summary for all policy assignments.
        /// </summary>
        [JsonProperty(PropertyName = "results")]
        public SummaryResults Results { get; set; }

        /// <summary>
        /// Gets or sets policy assignments summary.
        /// </summary>
        [JsonProperty(PropertyName = "policyAssignments")]
        public IList<PolicyAssignmentSummary> PolicyAssignments { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Results != null)
            {
                Results.Validate();
            }
            if (PolicyAssignments != null)
            {
                foreach (var element in PolicyAssignments)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
