// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.PolicyInsights.Models
{
    /// <summary> Policy evaluation details. </summary>
    public partial class PolicyEvaluationDetails
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="PolicyEvaluationDetails"/>. </summary>
        internal PolicyEvaluationDetails()
        {
            EvaluatedExpressions = new ChangeTrackingList<ExpressionEvaluationDetails>();
        }

        /// <summary> Initializes a new instance of <see cref="PolicyEvaluationDetails"/>. </summary>
        /// <param name="evaluatedExpressions"> Details of the evaluated expressions. </param>
        /// <param name="ifNotExistsDetails"> Evaluation details of IfNotExists effect. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal PolicyEvaluationDetails(IReadOnlyList<ExpressionEvaluationDetails> evaluatedExpressions, IfNotExistsEvaluationDetails ifNotExistsDetails, Dictionary<string, BinaryData> rawData)
        {
            EvaluatedExpressions = evaluatedExpressions;
            IfNotExistsDetails = ifNotExistsDetails;
            _rawData = rawData;
        }

        /// <summary> Details of the evaluated expressions. </summary>
        public IReadOnlyList<ExpressionEvaluationDetails> EvaluatedExpressions { get; }
        /// <summary> Evaluation details of IfNotExists effect. </summary>
        public IfNotExistsEvaluationDetails IfNotExistsDetails { get; }
    }
}
