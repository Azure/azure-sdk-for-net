// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.PolicyInsights.Models
{
    /// <summary> Summary results. </summary>
    public partial class PolicySummary
    {
        /// <summary> Initializes a new instance of <see cref="PolicySummary"/>. </summary>
        internal PolicySummary()
        {
            PolicyAssignments = new ChangeTrackingList<PolicyAssignmentSummary>();
        }

        /// <summary> Initializes a new instance of <see cref="PolicySummary"/>. </summary>
        /// <param name="odataId"> OData entity ID; always set to null since summaries do not have an entity ID. </param>
        /// <param name="odataContext"> OData context string; used by OData clients to resolve type information based on metadata. </param>
        /// <param name="results"> Compliance summary for all policy assignments. </param>
        /// <param name="policyAssignments"> Policy assignments summary. </param>
        internal PolicySummary(string odataId, string odataContext, PolicySummaryResults results, IReadOnlyList<PolicyAssignmentSummary> policyAssignments)
        {
            ODataId = odataId;
            ODataContext = odataContext;
            Results = results;
            PolicyAssignments = policyAssignments;
        }

        /// <summary> OData entity ID; always set to null since summaries do not have an entity ID. </summary>
        public string ODataId { get; }
        /// <summary> OData context string; used by OData clients to resolve type information based on metadata. </summary>
        public string ODataContext { get; }
        /// <summary> Compliance summary for all policy assignments. </summary>
        public PolicySummaryResults Results { get; }
        /// <summary> Policy assignments summary. </summary>
        public IReadOnlyList<PolicyAssignmentSummary> PolicyAssignments { get; }
    }
}
