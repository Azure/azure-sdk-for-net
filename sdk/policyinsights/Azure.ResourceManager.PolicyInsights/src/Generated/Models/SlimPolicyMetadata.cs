// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.PolicyInsights.Models
{
    /// <summary>
    /// Slim version of policy metadata resource definition, excluding properties with large strings
    /// Serialized Name: SlimPolicyMetadata
    /// </summary>
    public partial class SlimPolicyMetadata : ResourceData
    {
        /// <summary> Initializes a new instance of SlimPolicyMetadata. </summary>
        internal SlimPolicyMetadata()
        {
        }

        /// <summary> Initializes a new instance of SlimPolicyMetadata. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="metadataId">
        /// The policy metadata identifier.
        /// Serialized Name: SlimPolicyMetadata.properties.metadataId
        /// </param>
        /// <param name="category">
        /// The category of the policy metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.category
        /// </param>
        /// <param name="title">
        /// The title of the policy metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.title
        /// </param>
        /// <param name="owner">
        /// The owner of the policy metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.owner
        /// </param>
        /// <param name="additionalContentUri">
        /// Url for getting additional content about the resource metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.additionalContentUrl
        /// </param>
        /// <param name="metadata">
        /// Additional metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.metadata
        /// </param>
        internal SlimPolicyMetadata(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string metadataId, string category, string title, string owner, Uri additionalContentUri, BinaryData metadata) : base(id, name, resourceType, systemData)
        {
            MetadataId = metadataId;
            Category = category;
            Title = title;
            Owner = owner;
            AdditionalContentUri = additionalContentUri;
            Metadata = metadata;
        }

        /// <summary>
        /// The policy metadata identifier.
        /// Serialized Name: SlimPolicyMetadata.properties.metadataId
        /// </summary>
        public string MetadataId { get; }
        /// <summary>
        /// The category of the policy metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.category
        /// </summary>
        public string Category { get; }
        /// <summary>
        /// The title of the policy metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.title
        /// </summary>
        public string Title { get; }
        /// <summary>
        /// The owner of the policy metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.owner
        /// </summary>
        public string Owner { get; }
        /// <summary>
        /// Url for getting additional content about the resource metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.additionalContentUrl
        /// </summary>
        public Uri AdditionalContentUri { get; }
        /// <summary>
        /// Additional metadata.
        /// Serialized Name: SlimPolicyMetadata.properties.metadata
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Metadata { get; }
    }
}
