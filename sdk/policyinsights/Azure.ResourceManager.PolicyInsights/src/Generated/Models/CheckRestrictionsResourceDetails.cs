// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.PolicyInsights.Models
{
    /// <summary> The information about the resource that will be evaluated. </summary>
    public partial class CheckRestrictionsResourceDetails
    {
        /// <summary> Initializes a new instance of <see cref="CheckRestrictionsResourceDetails"/>. </summary>
        /// <param name="resourceContent"> The resource content. This should include whatever properties are already known and can be a partial set of all resource properties. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceContent"/> is null. </exception>
        public CheckRestrictionsResourceDetails(BinaryData resourceContent)
        {
            Argument.AssertNotNull(resourceContent, nameof(resourceContent));

            ResourceContent = resourceContent;
        }

        /// <summary> Initializes a new instance of <see cref="CheckRestrictionsResourceDetails"/>. </summary>
        /// <param name="resourceContent"> The resource content. This should include whatever properties are already known and can be a partial set of all resource properties. </param>
        /// <param name="apiVersion"> The api-version of the resource content. </param>
        /// <param name="scope"> The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID. </param>
        internal CheckRestrictionsResourceDetails(BinaryData resourceContent, string apiVersion, string scope)
        {
            ResourceContent = resourceContent;
            ApiVersion = apiVersion;
            Scope = scope;
        }

        /// <summary>
        /// The resource content. This should include whatever properties are already known and can be a partial set of all resource properties.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData ResourceContent { get; }
        /// <summary> The api-version of the resource content. </summary>
        public string ApiVersion { get; set; }
        /// <summary> The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID. </summary>
        public string Scope { get; set; }
    }
}
