// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.PolicyInsights.Models
{
    /// <summary>
    /// Summarize action results.
    /// Serialized Name: SummarizeResults
    /// </summary>
    internal partial class SummarizeResults
    {
        /// <summary> Initializes a new instance of SummarizeResults. </summary>
        internal SummarizeResults()
        {
            Value = new ChangeTrackingList<PolicySummary>();
        }

        /// <summary> Initializes a new instance of SummarizeResults. </summary>
        /// <param name="odataContext">
        /// OData context string; used by OData clients to resolve type information based on metadata.
        /// Serialized Name: SummarizeResults.@odata.context
        /// </param>
        /// <param name="odataCount">
        /// OData entity count; represents the number of summaries returned; always set to 1.
        /// Serialized Name: SummarizeResults.@odata.count
        /// </param>
        /// <param name="value">
        /// Summarize action results.
        /// Serialized Name: SummarizeResults.value
        /// </param>
        internal SummarizeResults(string odataContext, int? odataCount, IReadOnlyList<PolicySummary> value)
        {
            OdataContext = odataContext;
            OdataCount = odataCount;
            Value = value;
        }

        /// <summary>
        /// OData context string; used by OData clients to resolve type information based on metadata.
        /// Serialized Name: SummarizeResults.@odata.context
        /// </summary>
        public string OdataContext { get; }
        /// <summary>
        /// OData entity count; represents the number of summaries returned; always set to 1.
        /// Serialized Name: SummarizeResults.@odata.count
        /// </summary>
        public int? OdataCount { get; }
        /// <summary>
        /// Summarize action results.
        /// Serialized Name: SummarizeResults.value
        /// </summary>
        public IReadOnlyList<PolicySummary> Value { get; }
    }
}
