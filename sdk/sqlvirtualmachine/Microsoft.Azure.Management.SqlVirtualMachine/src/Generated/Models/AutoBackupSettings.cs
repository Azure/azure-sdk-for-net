// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SqlVirtualMachine.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Configure backups for databases in your SQL virtual machine.
    /// </summary>
    public partial class AutoBackupSettings
    {
        /// <summary>
        /// Initializes a new instance of the AutoBackupSettings class.
        /// </summary>
        public AutoBackupSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoBackupSettings class.
        /// </summary>
        /// <param name="enable">Enable or disable autobackup on SQL virtual
        /// machine.</param>
        /// <param name="enableEncryption">Enable or disable encryption for
        /// backup on SQL virtual machine.</param>
        /// <param name="retentionPeriod">Retention period of backup: 1-30
        /// days.</param>
        /// <param name="storageAccountUrl">Storage account url where backup
        /// will be taken to.</param>
        /// <param name="storageAccessKey">Storage account key where backup
        /// will be taken to.</param>
        /// <param name="password">Password for encryption on backup.</param>
        /// <param name="backupSystemDbs">Include or exclude system databases
        /// from auto backup.</param>
        /// <param name="backupScheduleType">Backup schedule type. Possible
        /// values include: 'Manual', 'Automated'</param>
        /// <param name="fullBackupFrequency">Frequency of full backups. In
        /// both cases, full backups begin during the next scheduled time
        /// window. Possible values include: 'Daily', 'Weekly'</param>
        /// <param name="fullBackupStartTime">Start time of a given day during
        /// which full backups can take place. 0-23 hours.</param>
        /// <param name="fullBackupWindowHours">Duration of the time window of
        /// a given day during which full backups can take place. 1-23
        /// hours.</param>
        /// <param name="logBackupFrequency">Frequency of log backups. 5-60
        /// minutes.</param>
        public AutoBackupSettings(bool? enable = default(bool?), bool? enableEncryption = default(bool?), int? retentionPeriod = default(int?), string storageAccountUrl = default(string), string storageAccessKey = default(string), string password = default(string), bool? backupSystemDbs = default(bool?), string backupScheduleType = default(string), string fullBackupFrequency = default(string), int? fullBackupStartTime = default(int?), int? fullBackupWindowHours = default(int?), int? logBackupFrequency = default(int?))
        {
            Enable = enable;
            EnableEncryption = enableEncryption;
            RetentionPeriod = retentionPeriod;
            StorageAccountUrl = storageAccountUrl;
            StorageAccessKey = storageAccessKey;
            Password = password;
            BackupSystemDbs = backupSystemDbs;
            BackupScheduleType = backupScheduleType;
            FullBackupFrequency = fullBackupFrequency;
            FullBackupStartTime = fullBackupStartTime;
            FullBackupWindowHours = fullBackupWindowHours;
            LogBackupFrequency = logBackupFrequency;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets enable or disable autobackup on SQL virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "enable")]
        public bool? Enable { get; set; }

        /// <summary>
        /// Gets or sets enable or disable encryption for backup on SQL virtual
        /// machine.
        /// </summary>
        [JsonProperty(PropertyName = "enableEncryption")]
        public bool? EnableEncryption { get; set; }

        /// <summary>
        /// Gets or sets retention period of backup: 1-30 days.
        /// </summary>
        [JsonProperty(PropertyName = "retentionPeriod")]
        public int? RetentionPeriod { get; set; }

        /// <summary>
        /// Gets or sets storage account url where backup will be taken to.
        /// </summary>
        [JsonProperty(PropertyName = "storageAccountUrl")]
        public string StorageAccountUrl { get; set; }

        /// <summary>
        /// Gets or sets storage account key where backup will be taken to.
        /// </summary>
        [JsonProperty(PropertyName = "storageAccessKey")]
        public string StorageAccessKey { get; set; }

        /// <summary>
        /// Gets or sets password for encryption on backup.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets include or exclude system databases from auto backup.
        /// </summary>
        [JsonProperty(PropertyName = "backupSystemDbs")]
        public bool? BackupSystemDbs { get; set; }

        /// <summary>
        /// Gets or sets backup schedule type. Possible values include:
        /// 'Manual', 'Automated'
        /// </summary>
        [JsonProperty(PropertyName = "backupScheduleType")]
        public string BackupScheduleType { get; set; }

        /// <summary>
        /// Gets or sets frequency of full backups. In both cases, full backups
        /// begin during the next scheduled time window. Possible values
        /// include: 'Daily', 'Weekly'
        /// </summary>
        [JsonProperty(PropertyName = "fullBackupFrequency")]
        public string FullBackupFrequency { get; set; }

        /// <summary>
        /// Gets or sets start time of a given day during which full backups
        /// can take place. 0-23 hours.
        /// </summary>
        [JsonProperty(PropertyName = "fullBackupStartTime")]
        public int? FullBackupStartTime { get; set; }

        /// <summary>
        /// Gets or sets duration of the time window of a given day during
        /// which full backups can take place. 1-23 hours.
        /// </summary>
        [JsonProperty(PropertyName = "fullBackupWindowHours")]
        public int? FullBackupWindowHours { get; set; }

        /// <summary>
        /// Gets or sets frequency of log backups. 5-60 minutes.
        /// </summary>
        [JsonProperty(PropertyName = "logBackupFrequency")]
        public int? LogBackupFrequency { get; set; }

    }
}
