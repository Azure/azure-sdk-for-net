// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SqlVirtualMachine.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A SQL virtual machine.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SqlVirtualMachineModel : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the SqlVirtualMachineModel class.
        /// </summary>
        public SqlVirtualMachineModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlVirtualMachineModel class.
        /// </summary>
        /// <param name="location">Resource location.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="identity">Azure Active Directory identity of the
        /// server.</param>
        /// <param name="virtualMachineResourceId">ARM Resource id of
        /// underlying virtual machine created from SQL marketplace
        /// image.</param>
        /// <param name="provisioningState">Provisioning state to track the
        /// async operation status.</param>
        /// <param name="sqlImageOffer">SQL image offer. Examples include
        /// SQL2016-WS2016, SQL2017-WS2016.</param>
        /// <param name="sqlServerLicenseType">SQL Server license type.
        /// Possible values include: 'PAYG', 'AHUB', 'DR'</param>
        /// <param name="sqlManagement">SQL Server Management type. Possible
        /// values include: 'Full', 'LightWeight', 'NoAgent'</param>
        /// <param name="sqlImageSku">SQL Server edition type. Possible values
        /// include: 'Developer', 'Express', 'Standard', 'Enterprise',
        /// 'Web'</param>
        /// <param name="sqlVirtualMachineGroupResourceId">ARM resource id of
        /// the SQL virtual machine group this SQL virtual machine is or will
        /// be part of.</param>
        /// <param name="wsfcDomainCredentials">Domain credentials for setting
        /// up Windows Server Failover Cluster for SQL availability
        /// group.</param>
        /// <param name="autoPatchingSettings">Auto patching settings for
        /// applying critical security updates to SQL virtual machine.</param>
        /// <param name="autoBackupSettings">Auto backup settings for SQL
        /// Server.</param>
        /// <param name="keyVaultCredentialSettings">Key vault credential
        /// settings.</param>
        /// <param name="serverConfigurationsManagementSettings">SQL Server
        /// configuration management settings.</param>
        public SqlVirtualMachineModel(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), ResourceIdentity identity = default(ResourceIdentity), string virtualMachineResourceId = default(string), string provisioningState = default(string), string sqlImageOffer = default(string), string sqlServerLicenseType = default(string), string sqlManagement = default(string), string sqlImageSku = default(string), string sqlVirtualMachineGroupResourceId = default(string), WsfcDomainCredentials wsfcDomainCredentials = default(WsfcDomainCredentials), AutoPatchingSettings autoPatchingSettings = default(AutoPatchingSettings), AutoBackupSettings autoBackupSettings = default(AutoBackupSettings), KeyVaultCredentialSettings keyVaultCredentialSettings = default(KeyVaultCredentialSettings), ServerConfigurationsManagementSettings serverConfigurationsManagementSettings = default(ServerConfigurationsManagementSettings))
            : base(location, id, name, type, tags)
        {
            Identity = identity;
            VirtualMachineResourceId = virtualMachineResourceId;
            ProvisioningState = provisioningState;
            SqlImageOffer = sqlImageOffer;
            SqlServerLicenseType = sqlServerLicenseType;
            SqlManagement = sqlManagement;
            SqlImageSku = sqlImageSku;
            SqlVirtualMachineGroupResourceId = sqlVirtualMachineGroupResourceId;
            WsfcDomainCredentials = wsfcDomainCredentials;
            AutoPatchingSettings = autoPatchingSettings;
            AutoBackupSettings = autoBackupSettings;
            KeyVaultCredentialSettings = keyVaultCredentialSettings;
            ServerConfigurationsManagementSettings = serverConfigurationsManagementSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets azure Active Directory identity of the server.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public ResourceIdentity Identity { get; set; }

        /// <summary>
        /// Gets or sets ARM Resource id of underlying virtual machine created
        /// from SQL marketplace image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualMachineResourceId")]
        public string VirtualMachineResourceId { get; set; }

        /// <summary>
        /// Gets provisioning state to track the async operation status.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets SQL image offer. Examples include SQL2016-WS2016,
        /// SQL2017-WS2016.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sqlImageOffer")]
        public string SqlImageOffer { get; set; }

        /// <summary>
        /// Gets or sets SQL Server license type. Possible values include:
        /// 'PAYG', 'AHUB', 'DR'
        /// </summary>
        [JsonProperty(PropertyName = "properties.sqlServerLicenseType")]
        public string SqlServerLicenseType { get; set; }

        /// <summary>
        /// Gets or sets SQL Server Management type. Possible values include:
        /// 'Full', 'LightWeight', 'NoAgent'
        /// </summary>
        [JsonProperty(PropertyName = "properties.sqlManagement")]
        public string SqlManagement { get; set; }

        /// <summary>
        /// Gets or sets SQL Server edition type. Possible values include:
        /// 'Developer', 'Express', 'Standard', 'Enterprise', 'Web'
        /// </summary>
        [JsonProperty(PropertyName = "properties.sqlImageSku")]
        public string SqlImageSku { get; set; }

        /// <summary>
        /// Gets or sets ARM resource id of the SQL virtual machine group this
        /// SQL virtual machine is or will be part of.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sqlVirtualMachineGroupResourceId")]
        public string SqlVirtualMachineGroupResourceId { get; set; }

        /// <summary>
        /// Gets or sets domain credentials for setting up Windows Server
        /// Failover Cluster for SQL availability group.
        /// </summary>
        [JsonProperty(PropertyName = "properties.wsfcDomainCredentials")]
        public WsfcDomainCredentials WsfcDomainCredentials { get; set; }

        /// <summary>
        /// Gets or sets auto patching settings for applying critical security
        /// updates to SQL virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "properties.autoPatchingSettings")]
        public AutoPatchingSettings AutoPatchingSettings { get; set; }

        /// <summary>
        /// Gets or sets auto backup settings for SQL Server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.autoBackupSettings")]
        public AutoBackupSettings AutoBackupSettings { get; set; }

        /// <summary>
        /// Gets or sets key vault credential settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.keyVaultCredentialSettings")]
        public KeyVaultCredentialSettings KeyVaultCredentialSettings { get; set; }

        /// <summary>
        /// Gets or sets SQL Server configuration management settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serverConfigurationsManagementSettings")]
        public ServerConfigurationsManagementSettings ServerConfigurationsManagementSettings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
