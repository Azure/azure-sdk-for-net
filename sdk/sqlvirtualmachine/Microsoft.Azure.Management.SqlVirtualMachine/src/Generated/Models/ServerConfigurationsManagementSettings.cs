// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SqlVirtualMachine.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Set the connectivity, storage and workload settings.
    /// </summary>
    public partial class ServerConfigurationsManagementSettings
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ServerConfigurationsManagementSettings class.
        /// </summary>
        public ServerConfigurationsManagementSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ServerConfigurationsManagementSettings class.
        /// </summary>
        /// <param name="sqlConnectivityUpdateSettings">SQL connectivity type
        /// settings.</param>
        /// <param name="sqlWorkloadTypeUpdateSettings">SQL workload type
        /// settings.</param>
        /// <param name="sqlStorageUpdateSettings">SQL storage update
        /// settings.</param>
        /// <param name="additionalFeaturesServerConfigurations">Additional SQL
        /// feature settings.</param>
        public ServerConfigurationsManagementSettings(SqlConnectivityUpdateSettings sqlConnectivityUpdateSettings = default(SqlConnectivityUpdateSettings), SqlWorkloadTypeUpdateSettings sqlWorkloadTypeUpdateSettings = default(SqlWorkloadTypeUpdateSettings), SqlStorageUpdateSettings sqlStorageUpdateSettings = default(SqlStorageUpdateSettings), AdditionalFeaturesServerConfigurations additionalFeaturesServerConfigurations = default(AdditionalFeaturesServerConfigurations))
        {
            SqlConnectivityUpdateSettings = sqlConnectivityUpdateSettings;
            SqlWorkloadTypeUpdateSettings = sqlWorkloadTypeUpdateSettings;
            SqlStorageUpdateSettings = sqlStorageUpdateSettings;
            AdditionalFeaturesServerConfigurations = additionalFeaturesServerConfigurations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets SQL connectivity type settings.
        /// </summary>
        [JsonProperty(PropertyName = "sqlConnectivityUpdateSettings")]
        public SqlConnectivityUpdateSettings SqlConnectivityUpdateSettings { get; set; }

        /// <summary>
        /// Gets or sets SQL workload type settings.
        /// </summary>
        [JsonProperty(PropertyName = "sqlWorkloadTypeUpdateSettings")]
        public SqlWorkloadTypeUpdateSettings SqlWorkloadTypeUpdateSettings { get; set; }

        /// <summary>
        /// Gets or sets SQL storage update settings.
        /// </summary>
        [JsonProperty(PropertyName = "sqlStorageUpdateSettings")]
        public SqlStorageUpdateSettings SqlStorageUpdateSettings { get; set; }

        /// <summary>
        /// Gets or sets additional SQL feature settings.
        /// </summary>
        [JsonProperty(PropertyName = "additionalFeaturesServerConfigurations")]
        public AdditionalFeaturesServerConfigurations AdditionalFeaturesServerConfigurations { get; set; }

    }
}
