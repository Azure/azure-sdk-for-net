// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SqlVirtualMachine.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Set disk storage settings for SQL Server.
    /// </summary>
    public partial class SqlStorageUpdateSettings
    {
        /// <summary>
        /// Initializes a new instance of the SqlStorageUpdateSettings class.
        /// </summary>
        public SqlStorageUpdateSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlStorageUpdateSettings class.
        /// </summary>
        /// <param name="diskCount">Virtual machine disk count.</param>
        /// <param name="startingDeviceId">Device id of the first disk to be
        /// updated.</param>
        /// <param name="diskConfigurationType">Disk configuration to apply to
        /// SQL Server. Possible values include: 'NEW', 'EXTEND', 'ADD'</param>
        public SqlStorageUpdateSettings(int? diskCount = default(int?), int? startingDeviceId = default(int?), string diskConfigurationType = default(string))
        {
            DiskCount = diskCount;
            StartingDeviceId = startingDeviceId;
            DiskConfigurationType = diskConfigurationType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets virtual machine disk count.
        /// </summary>
        [JsonProperty(PropertyName = "diskCount")]
        public int? DiskCount { get; set; }

        /// <summary>
        /// Gets or sets device id of the first disk to be updated.
        /// </summary>
        [JsonProperty(PropertyName = "startingDeviceId")]
        public int? StartingDeviceId { get; set; }

        /// <summary>
        /// Gets or sets disk configuration to apply to SQL Server. Possible
        /// values include: 'NEW', 'EXTEND', 'ADD'
        /// </summary>
        [JsonProperty(PropertyName = "diskConfigurationType")]
        public string DiskConfigurationType { get; set; }

    }
}
