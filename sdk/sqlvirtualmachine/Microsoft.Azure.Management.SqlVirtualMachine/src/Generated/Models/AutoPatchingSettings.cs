// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SqlVirtualMachine.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Set a patching window during which Windows and SQL patches will be
    /// applied.
    /// </summary>
    public partial class AutoPatchingSettings
    {
        /// <summary>
        /// Initializes a new instance of the AutoPatchingSettings class.
        /// </summary>
        public AutoPatchingSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoPatchingSettings class.
        /// </summary>
        /// <param name="enable">Enable or disable autopatching on SQL virtual
        /// machine.</param>
        /// <param name="dayOfWeek">Day of week to apply the patch on. Possible
        /// values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
        /// 'Friday', 'Saturday', 'Sunday'</param>
        /// <param name="maintenanceWindowStartingHour">Hour of the day when
        /// patching is initiated. Local VM time.</param>
        /// <param name="maintenanceWindowDuration">Duration of
        /// patching.</param>
        public AutoPatchingSettings(bool? enable = default(bool?), DayOfWeek? dayOfWeek = default(DayOfWeek?), int? maintenanceWindowStartingHour = default(int?), int? maintenanceWindowDuration = default(int?))
        {
            Enable = enable;
            DayOfWeek = dayOfWeek;
            MaintenanceWindowStartingHour = maintenanceWindowStartingHour;
            MaintenanceWindowDuration = maintenanceWindowDuration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets enable or disable autopatching on SQL virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "enable")]
        public bool? Enable { get; set; }

        /// <summary>
        /// Gets or sets day of week to apply the patch on. Possible values
        /// include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
        /// 'Saturday', 'Sunday'
        /// </summary>
        [JsonProperty(PropertyName = "dayOfWeek")]
        public DayOfWeek? DayOfWeek { get; set; }

        /// <summary>
        /// Gets or sets hour of the day when patching is initiated. Local VM
        /// time.
        /// </summary>
        [JsonProperty(PropertyName = "maintenanceWindowStartingHour")]
        public int? MaintenanceWindowStartingHour { get; set; }

        /// <summary>
        /// Gets or sets duration of patching.
        /// </summary>
        [JsonProperty(PropertyName = "maintenanceWindowDuration")]
        public int? MaintenanceWindowDuration { get; set; }

    }
}
