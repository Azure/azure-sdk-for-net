// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SqlVirtualMachine
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SqlVirtualMachinesOperations.
    /// </summary>
    public static partial class SqlVirtualMachinesOperationsExtensions
    {
            /// <summary>
            /// Gets all SQL virtual machines in a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<SqlVirtualMachineModel> List(this ISqlVirtualMachinesOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all SQL virtual machines in a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SqlVirtualMachineModel>> ListAsync(this ISqlVirtualMachinesOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='expand'>
            /// The child resources to include in the response.
            /// </param>
            public static SqlVirtualMachineModel Get(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, string expand = default(string))
            {
                return operations.GetAsync(resourceGroupName, sqlVirtualMachineName, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='expand'>
            /// The child resources to include in the response.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlVirtualMachineModel> GetAsync(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, string expand = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, sqlVirtualMachineName, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='parameters'>
            /// The SQL virtual machine.
            /// </param>
            public static SqlVirtualMachineModel CreateOrUpdate(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, SqlVirtualMachineModel parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, sqlVirtualMachineName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='parameters'>
            /// The SQL virtual machine.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlVirtualMachineModel> CreateOrUpdateAsync(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, SqlVirtualMachineModel parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, sqlVirtualMachineName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            public static void Delete(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName)
            {
                operations.DeleteAsync(resourceGroupName, sqlVirtualMachineName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, sqlVirtualMachineName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='parameters'>
            /// The SQL virtual machine.
            /// </param>
            public static SqlVirtualMachineModel Update(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, SqlVirtualMachineUpdate parameters)
            {
                return operations.UpdateAsync(resourceGroupName, sqlVirtualMachineName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='parameters'>
            /// The SQL virtual machine.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlVirtualMachineModel> UpdateAsync(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, SqlVirtualMachineUpdate parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, sqlVirtualMachineName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all SQL virtual machines in a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            public static IPage<SqlVirtualMachineModel> ListByResourceGroup(this ISqlVirtualMachinesOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all SQL virtual machines in a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SqlVirtualMachineModel>> ListByResourceGroupAsync(this ISqlVirtualMachinesOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='parameters'>
            /// The SQL virtual machine.
            /// </param>
            public static SqlVirtualMachineModel BeginCreateOrUpdate(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, SqlVirtualMachineModel parameters)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, sqlVirtualMachineName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='parameters'>
            /// The SQL virtual machine.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlVirtualMachineModel> BeginCreateOrUpdateAsync(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, SqlVirtualMachineModel parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, sqlVirtualMachineName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            public static void BeginDelete(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName)
            {
                operations.BeginDeleteAsync(resourceGroupName, sqlVirtualMachineName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, sqlVirtualMachineName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='parameters'>
            /// The SQL virtual machine.
            /// </param>
            public static SqlVirtualMachineModel BeginUpdate(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, SqlVirtualMachineUpdate parameters)
            {
                return operations.BeginUpdateAsync(resourceGroupName, sqlVirtualMachineName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates a SQL virtual machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group that contains the resource. You can obtain this
            /// value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='sqlVirtualMachineName'>
            /// Name of the SQL virtual machine.
            /// </param>
            /// <param name='parameters'>
            /// The SQL virtual machine.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlVirtualMachineModel> BeginUpdateAsync(this ISqlVirtualMachinesOperations operations, string resourceGroupName, string sqlVirtualMachineName, SqlVirtualMachineUpdate parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, sqlVirtualMachineName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all SQL virtual machines in a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SqlVirtualMachineModel> ListNext(this ISqlVirtualMachinesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all SQL virtual machines in a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SqlVirtualMachineModel>> ListNextAsync(this ISqlVirtualMachinesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all SQL virtual machines in a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SqlVirtualMachineModel> ListByResourceGroupNext(this ISqlVirtualMachinesOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all SQL virtual machines in a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SqlVirtualMachineModel>> ListByResourceGroupNextAsync(this ISqlVirtualMachinesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
