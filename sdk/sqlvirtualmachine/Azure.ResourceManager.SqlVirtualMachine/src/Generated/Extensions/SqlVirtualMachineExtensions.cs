// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.SqlVirtualMachine
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.SqlVirtualMachine. </summary>
    public static partial class SqlVirtualMachineExtensions
    {
        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary>
        /// Gets all SQL virtual machine groups in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups
        /// Operation Id: SqlVirtualMachineGroups_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SqlVirtualMachineGroupResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<SqlVirtualMachineGroupResource> GetSqlVirtualMachineGroupsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetSqlVirtualMachineGroupsAsync(cancellationToken);
        }

        /// <summary>
        /// Gets all SQL virtual machine groups in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups
        /// Operation Id: SqlVirtualMachineGroups_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SqlVirtualMachineGroupResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<SqlVirtualMachineGroupResource> GetSqlVirtualMachineGroups(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetSqlVirtualMachineGroups(cancellationToken);
        }

        /// <summary>
        /// Gets all SQL virtual machines in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines
        /// Operation Id: SqlVirtualMachines_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SqlVirtualMachineResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<SqlVirtualMachineResource> GetSqlVirtualMachinesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetSqlVirtualMachinesAsync(cancellationToken);
        }

        /// <summary>
        /// Gets all SQL virtual machines in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines
        /// Operation Id: SqlVirtualMachines_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SqlVirtualMachineResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<SqlVirtualMachineResource> GetSqlVirtualMachines(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetSqlVirtualMachines(cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of SqlVirtualMachineGroupResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of SqlVirtualMachineGroupResources and their operations over a SqlVirtualMachineGroupResource. </returns>
        public static SqlVirtualMachineGroupCollection GetSqlVirtualMachineGroups(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetSqlVirtualMachineGroups();
        }

        /// <summary>
        /// Gets a SQL virtual machine group.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}
        /// Operation Id: SqlVirtualMachineGroups_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="sqlVirtualMachineGroupName"> Name of the SQL virtual machine group. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="sqlVirtualMachineGroupName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="sqlVirtualMachineGroupName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<SqlVirtualMachineGroupResource>> GetSqlVirtualMachineGroupAsync(this ResourceGroupResource resourceGroupResource, string sqlVirtualMachineGroupName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetSqlVirtualMachineGroups().GetAsync(sqlVirtualMachineGroupName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a SQL virtual machine group.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}
        /// Operation Id: SqlVirtualMachineGroups_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="sqlVirtualMachineGroupName"> Name of the SQL virtual machine group. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="sqlVirtualMachineGroupName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="sqlVirtualMachineGroupName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<SqlVirtualMachineGroupResource> GetSqlVirtualMachineGroup(this ResourceGroupResource resourceGroupResource, string sqlVirtualMachineGroupName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetSqlVirtualMachineGroups().Get(sqlVirtualMachineGroupName, cancellationToken);
        }

        /// <summary> Gets a collection of SqlVirtualMachineResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of SqlVirtualMachineResources and their operations over a SqlVirtualMachineResource. </returns>
        public static SqlVirtualMachineCollection GetSqlVirtualMachines(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetSqlVirtualMachines();
        }

        /// <summary>
        /// Gets a SQL virtual machine.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}
        /// Operation Id: SqlVirtualMachines_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="sqlVirtualMachineName"> Name of the SQL virtual machine. </param>
        /// <param name="expand"> The child resources to include in the response. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="sqlVirtualMachineName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="sqlVirtualMachineName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<SqlVirtualMachineResource>> GetSqlVirtualMachineAsync(this ResourceGroupResource resourceGroupResource, string sqlVirtualMachineName, string expand = null, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetSqlVirtualMachines().GetAsync(sqlVirtualMachineName, expand, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a SQL virtual machine.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}
        /// Operation Id: SqlVirtualMachines_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="sqlVirtualMachineName"> Name of the SQL virtual machine. </param>
        /// <param name="expand"> The child resources to include in the response. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="sqlVirtualMachineName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="sqlVirtualMachineName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<SqlVirtualMachineResource> GetSqlVirtualMachine(this ResourceGroupResource resourceGroupResource, string sqlVirtualMachineName, string expand = null, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetSqlVirtualMachines().Get(sqlVirtualMachineName, expand, cancellationToken);
        }

        #region AvailabilityGroupListenerResource
        /// <summary>
        /// Gets an object representing an <see cref="AvailabilityGroupListenerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AvailabilityGroupListenerResource.CreateResourceIdentifier" /> to create an <see cref="AvailabilityGroupListenerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AvailabilityGroupListenerResource" /> object. </returns>
        public static AvailabilityGroupListenerResource GetAvailabilityGroupListenerResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AvailabilityGroupListenerResource.ValidateResourceId(id);
                return new AvailabilityGroupListenerResource(client, id);
            }
            );
        }
        #endregion

        #region SqlVirtualMachineGroupResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlVirtualMachineGroupResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlVirtualMachineGroupResource.CreateResourceIdentifier" /> to create a <see cref="SqlVirtualMachineGroupResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlVirtualMachineGroupResource" /> object. </returns>
        public static SqlVirtualMachineGroupResource GetSqlVirtualMachineGroupResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlVirtualMachineGroupResource.ValidateResourceId(id);
                return new SqlVirtualMachineGroupResource(client, id);
            }
            );
        }
        #endregion

        #region SqlVirtualMachineResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlVirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlVirtualMachineResource.CreateResourceIdentifier" /> to create a <see cref="SqlVirtualMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlVirtualMachineResource" /> object. </returns>
        public static SqlVirtualMachineResource GetSqlVirtualMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlVirtualMachineResource.ValidateResourceId(id);
                return new SqlVirtualMachineResource(client, id);
            }
            );
        }
        #endregion
    }
}
