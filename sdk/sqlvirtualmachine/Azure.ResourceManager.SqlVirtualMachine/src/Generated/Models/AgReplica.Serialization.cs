// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SqlVirtualMachine.Models
{
    public partial class AgReplica : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SqlVirtualMachineInstanceId))
            {
                writer.WritePropertyName("sqlVirtualMachineInstanceId");
                writer.WriteStringValue(SqlVirtualMachineInstanceId);
            }
            if (Optional.IsDefined(Role))
            {
                writer.WritePropertyName("role");
                writer.WriteStringValue(Role.Value.ToString());
            }
            if (Optional.IsDefined(Commit))
            {
                writer.WritePropertyName("commit");
                writer.WriteStringValue(Commit.Value.ToString());
            }
            if (Optional.IsDefined(Failover))
            {
                writer.WritePropertyName("failover");
                writer.WriteStringValue(Failover.Value.ToString());
            }
            if (Optional.IsDefined(ReadableSecondary))
            {
                writer.WritePropertyName("readableSecondary");
                writer.WriteStringValue(ReadableSecondary.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static AgReplica DeserializeAgReplica(JsonElement element)
        {
            Optional<string> sqlVirtualMachineInstanceId = default;
            Optional<Role> role = default;
            Optional<Commit> commit = default;
            Optional<Failover> failover = default;
            Optional<ReadableSecondary> readableSecondary = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sqlVirtualMachineInstanceId"))
                {
                    sqlVirtualMachineInstanceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("role"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    role = new Role(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("commit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    commit = new Commit(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("failover"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    failover = new Failover(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("readableSecondary"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    readableSecondary = new ReadableSecondary(property.Value.GetString());
                    continue;
                }
            }
            return new AgReplica(sqlVirtualMachineInstanceId.Value, Optional.ToNullable(role), Optional.ToNullable(commit), Optional.ToNullable(failover), Optional.ToNullable(readableSecondary));
        }
    }
}
