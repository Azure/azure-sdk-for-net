// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SqlVirtualMachine.Models
{
    public partial class SqlServerConfigurationsManagementSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SqlConnectivityUpdateSettings))
            {
                writer.WritePropertyName("sqlConnectivityUpdateSettings"u8);
                writer.WriteObjectValue(SqlConnectivityUpdateSettings);
            }
            if (Optional.IsDefined(SqlWorkloadTypeUpdateSettings))
            {
                writer.WritePropertyName("sqlWorkloadTypeUpdateSettings"u8);
                writer.WriteObjectValue(SqlWorkloadTypeUpdateSettings);
            }
            if (Optional.IsDefined(SqlStorageUpdateSettings))
            {
                writer.WritePropertyName("sqlStorageUpdateSettings"u8);
                writer.WriteObjectValue(SqlStorageUpdateSettings);
            }
            if (Optional.IsDefined(AdditionalFeaturesServerConfigurations))
            {
                writer.WritePropertyName("additionalFeaturesServerConfigurations"u8);
                writer.WriteObjectValue(AdditionalFeaturesServerConfigurations);
            }
            if (Optional.IsDefined(SqlInstanceSettings))
            {
                writer.WritePropertyName("sqlInstanceSettings"u8);
                writer.WriteObjectValue(SqlInstanceSettings);
            }
            writer.WriteEndObject();
        }

        internal static SqlServerConfigurationsManagementSettings DeserializeSqlServerConfigurationsManagementSettings(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<SqlConnectivityUpdateSettings> sqlConnectivityUpdateSettings = default;
            Optional<SqlWorkloadTypeUpdateSettings> sqlWorkloadTypeUpdateSettings = default;
            Optional<SqlStorageUpdateSettings> sqlStorageUpdateSettings = default;
            Optional<AdditionalFeaturesServerConfigurations> additionalFeaturesServerConfigurations = default;
            Optional<SqlInstanceSettings> sqlInstanceSettings = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sqlConnectivityUpdateSettings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sqlConnectivityUpdateSettings = SqlConnectivityUpdateSettings.DeserializeSqlConnectivityUpdateSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("sqlWorkloadTypeUpdateSettings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sqlWorkloadTypeUpdateSettings = SqlWorkloadTypeUpdateSettings.DeserializeSqlWorkloadTypeUpdateSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("sqlStorageUpdateSettings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sqlStorageUpdateSettings = SqlStorageUpdateSettings.DeserializeSqlStorageUpdateSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("additionalFeaturesServerConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    additionalFeaturesServerConfigurations = AdditionalFeaturesServerConfigurations.DeserializeAdditionalFeaturesServerConfigurations(property.Value);
                    continue;
                }
                if (property.NameEquals("sqlInstanceSettings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sqlInstanceSettings = SqlInstanceSettings.DeserializeSqlInstanceSettings(property.Value);
                    continue;
                }
            }
            return new SqlServerConfigurationsManagementSettings(sqlConnectivityUpdateSettings.Value, sqlWorkloadTypeUpdateSettings.Value, sqlStorageUpdateSettings.Value, additionalFeaturesServerConfigurations.Value, sqlInstanceSettings.Value);
        }
    }
}
