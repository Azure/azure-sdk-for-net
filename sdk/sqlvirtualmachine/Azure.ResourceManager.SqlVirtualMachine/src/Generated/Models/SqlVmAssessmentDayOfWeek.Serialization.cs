// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.SqlVirtualMachine.Models
{
    internal static partial class SqlVmAssessmentDayOfWeekExtensions
    {
        public static string ToSerialString(this SqlVmAssessmentDayOfWeek value) => value switch
        {
            SqlVmAssessmentDayOfWeek.Monday => "Monday",
            SqlVmAssessmentDayOfWeek.Tuesday => "Tuesday",
            SqlVmAssessmentDayOfWeek.Wednesday => "Wednesday",
            SqlVmAssessmentDayOfWeek.Thursday => "Thursday",
            SqlVmAssessmentDayOfWeek.Friday => "Friday",
            SqlVmAssessmentDayOfWeek.Saturday => "Saturday",
            SqlVmAssessmentDayOfWeek.Sunday => "Sunday",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SqlVmAssessmentDayOfWeek value.")
        };

        public static SqlVmAssessmentDayOfWeek ToSqlVmAssessmentDayOfWeek(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Monday")) return SqlVmAssessmentDayOfWeek.Monday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Tuesday")) return SqlVmAssessmentDayOfWeek.Tuesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Wednesday")) return SqlVmAssessmentDayOfWeek.Wednesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Thursday")) return SqlVmAssessmentDayOfWeek.Thursday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Friday")) return SqlVmAssessmentDayOfWeek.Friday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Saturday")) return SqlVmAssessmentDayOfWeek.Saturday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Sunday")) return SqlVmAssessmentDayOfWeek.Sunday;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SqlVmAssessmentDayOfWeek value.");
        }
    }
}
