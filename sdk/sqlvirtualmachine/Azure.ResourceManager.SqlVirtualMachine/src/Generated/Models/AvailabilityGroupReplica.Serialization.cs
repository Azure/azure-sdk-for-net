// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SqlVirtualMachine.Models
{
    public partial class AvailabilityGroupReplica : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(SqlVmInstanceId))
            {
                writer.WritePropertyName("sqlVirtualMachineInstanceId"u8);
                writer.WriteStringValue(SqlVmInstanceId);
            }
            if (Core.Optional.IsDefined(Role))
            {
                writer.WritePropertyName("role"u8);
                writer.WriteStringValue(Role.Value.ToString());
            }
            if (Core.Optional.IsDefined(Commit))
            {
                writer.WritePropertyName("commit"u8);
                writer.WriteStringValue(Commit.Value.ToString());
            }
            if (Core.Optional.IsDefined(Failover))
            {
                writer.WritePropertyName("failover"u8);
                writer.WriteStringValue(Failover.Value.ToString());
            }
            if (Core.Optional.IsDefined(ReadableSecondary))
            {
                writer.WritePropertyName("readableSecondary"u8);
                writer.WriteStringValue(ReadableSecondary.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static AvailabilityGroupReplica DeserializeAvailabilityGroupReplica(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<ResourceIdentifier> sqlVmInstanceId = default;
            Core.Optional<AvailabilityGroupReplicaRole> role = default;
            Core.Optional<AvailabilityGroupReplicaCommitMode> commit = default;
            Core.Optional<AvailabilityGroupReplicaFailoverMode> failover = default;
            Core.Optional<ReadableSecondaryMode> readableSecondary = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sqlVirtualMachineInstanceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sqlVmInstanceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("role"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    role = new AvailabilityGroupReplicaRole(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("commit"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    commit = new AvailabilityGroupReplicaCommitMode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("failover"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    failover = new AvailabilityGroupReplicaFailoverMode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("readableSecondary"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    readableSecondary = new ReadableSecondaryMode(property.Value.GetString());
                    continue;
                }
            }
            return new AvailabilityGroupReplica(sqlVmInstanceId.Value, Core.Optional.ToNullable(role), Core.Optional.ToNullable(commit), Core.Optional.ToNullable(failover), Core.Optional.ToNullable(readableSecondary));
        }
    }
}
