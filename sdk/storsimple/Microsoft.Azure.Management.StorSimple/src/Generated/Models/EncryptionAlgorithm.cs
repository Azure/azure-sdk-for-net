// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple1200Series.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for EncryptionAlgorithm.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum EncryptionAlgorithm
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "AES256")]
        AES256,
        [EnumMember(Value = "RSAES_PKCS1_v_1_5")]
        RSAESPKCS1V15
    }
    internal static class EncryptionAlgorithmEnumExtension
    {
        internal static string ToSerializedValue(this EncryptionAlgorithm? value)
        {
            return value == null ? null : ((EncryptionAlgorithm)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this EncryptionAlgorithm value)
        {
            switch( value )
            {
                case EncryptionAlgorithm.None:
                    return "None";
                case EncryptionAlgorithm.AES256:
                    return "AES256";
                case EncryptionAlgorithm.RSAESPKCS1V15:
                    return "RSAES_PKCS1_v_1_5";
            }
            return null;
        }

        internal static EncryptionAlgorithm? ParseEncryptionAlgorithm(this string value)
        {
            switch( value )
            {
                case "None":
                    return EncryptionAlgorithm.None;
                case "AES256":
                    return EncryptionAlgorithm.AES256;
                case "RSAES_PKCS1_v_1_5":
                    return EncryptionAlgorithm.RSAESPKCS1V15;
            }
            return null;
        }
    }
}
