{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "metadata": {
        "description": "The tenant ID to which the application and resources belong."
      }
    },
    "testApplicationId": {
      "type": "string",
      "metadata": {
        "description": "The application client ID used to run tests."
      }
    },
    "testApplicationSecret": {
      "type": "string",
      "metadata": {
        "description": "The application client secret used to run tests."
      }
    },
    "testApplicationOid": {
      "type": "string",
      "defaultValue": "b3653439-8136-4cd5-aac3-2a9460871ca6",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the resource. By default, this is the same as the resource group."
      }
    }
  },
  "variables": {
    "apiVersion": "2022-10-01-preview",
    "schemaRegistryGroup": "azsdk_net_test_group",
    "baseNameAvro": "[concat(parameters('baseName'), '-avro')]",
    "baseNameAvro1": "[concat(parameters('baseName'), '-avro1')]",
    "baseNameAvro2": "[concat(parameters('baseName'), '-avro2')]",
    "baseNameAvro3": "[concat(parameters('baseName'), '-avro3')]",
    "baseNameAvro4": "[concat(parameters('baseName'), '-avro4')]",
    "schemaRegistryEndpointAvro": "[concat(parameters('baseName'), '-avro', '.servicebus.windows.net')]",
    "schemaRegistryEndpointAvro1": "[concat(parameters('baseName'), '-avro1', '.servicebus.windows.net')]",
    "schemaRegistryEndpointAvro2": "[concat(parameters('baseName'), '-avro2', '.servicebus.windows.net')]",
    "schemaRegistryEndpointAvro3": "[concat(parameters('baseName'), '-avro3', '.servicebus.windows.net')]",
    "schemaRegistryEndpointAvro4": "[concat(parameters('baseName'), '-avro4', '.servicebus.windows.net')]",
    "baseNameJson1": "[concat(parameters('baseName'), '-json1')]",
    "baseNameJson2": "[concat(parameters('baseName'), '-json2')]",
    "baseNameJson3": "[concat(parameters('baseName'), '-json3')]",
    "baseNameJson4": "[concat(parameters('baseName'), '-json4')]",
    "schemaRegistryEndpointJson1": "[concat(parameters('baseName'), '-json1', '.servicebus.windows.net')]",
    "schemaRegistryEndpointJson2": "[concat(parameters('baseName'), '-json2', '.servicebus.windows.net')]",
    "schemaRegistryEndpointJson3": "[concat(parameters('baseName'), '-json3', '.servicebus.windows.net')]",
    "schemaRegistryEndpointJson4": "[concat(parameters('baseName'), '-json4', '.servicebus.windows.net')]",
    "baseNameCustom1": "[concat(parameters('baseName'), '-custom1')]",
    "baseNameCustom2": "[concat(parameters('baseName'), '-custom2')]",
    "baseNameCustom3": "[concat(parameters('baseName'), '-custom3')]",
    "baseNameCustom4": "[concat(parameters('baseName'), '-custom4')]",
    "schemaRegistryEndpointCustom1": "[concat(parameters('baseName'), '-custom1', '.servicebus.windows.net')]",
    "schemaRegistryEndpointCustom2": "[concat(parameters('baseName'), '-custom2', '.servicebus.windows.net')]",
    "schemaRegistryEndpointCustom3": "[concat(parameters('baseName'), '-custom3', '.servicebus.windows.net')]",
    "schemaRegistryEndpointCustom4": "[concat(parameters('baseName'), '-custom4', '.servicebus.windows.net')]",
    "eventHubName": "azsdk_net_test_hub",
    "eventHubsDataOwnerRoleId": "f526a384-b230-433a-b45c-95f59c4a2dec"
  },

  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameAvro')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameAvro1')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameJson1')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameCustom1')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameAvro2')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameJson2')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameCustom2')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameAvro3')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameJson3')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameCustom3')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameAvro4')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameJson4')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('baseNameCustom4')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameAvro'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro'))]" ],
      "properties": {
        "schemaType": "avro"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameAvro1'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro1'))]" ],
      "properties": {
        "schemaType": "avro"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameJson1'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameJson1'))]" ],
      "properties": {
        "schemaType": "json"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameCustom1'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameCustom1'))]" ],
      "properties": {
        "schemaType": "custom"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameAvro2'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro2'))]" ],
      "properties": {
        "schemaType": "avro"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameJson2'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameJson2'))]" ],
      "properties": {
        "schemaType": "json"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameCustom2'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameCustom2'))]" ],
      "properties": {
        "schemaType": "custom"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameAvro3'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro3'))]" ],
      "properties": {
        "schemaType": "avro"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameJson3'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameJson3'))]" ],
      "properties": {
        "schemaType": "json"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameCustom3'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameCustom3'))]" ],
      "properties": {
        "schemaType": "custom"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameAvro4'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro4'))]" ],
      "properties": {
        "schemaType": "avro"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameJson4'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameJson4'))]" ],
      "properties": {
        "schemaType": "json"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/schemagroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[format('{0}/{1}', variables('baseNameCustom4'), variables('schemaRegistryGroup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameCustom4'))]" ],
      "properties": {
        "schemaType": "custom"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, parameters('testApplicationOid'), variables('eventHubsDataOwnerRoleId'))]",
      "dependsOn": [ "[resourceId('Microsoft.EventHub/namespaces', variables('baseNameAvro1'))]" ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('eventHubsDataOwnerRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    }
  ],
  "outputs": {
    "SCHEMAREGISTRY_GROUP": {
      "type": "string",
      "value": "[variables('schemaRegistryGroup')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_AVRO": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointAvro')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_AVRO1": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointAvro1')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_JSON1": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointJson1')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_CUSTOM1": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointCustom1')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_AVRO2": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointAvro2')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_JSON2": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointJson2')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_CUSTOM2": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointCustom2')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_AVRO3": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointAvro3')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_JSON3": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointJson3')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_CUSTOM3": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointCustom3')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_AVRO4": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointAvro4')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_JSON4": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointJson4')]"
    },
    "SCHEMAREGISTRY_ENDPOINT_CUSTOM4": {
      "type": "string",
      "value": "[variables('schemaRegistryEndpointCustom4')]"
    },
    "SCHEMAREGISTRY_EVENTHUB_NAME": {
      "type": "string",
      "value": "[variables('eventHubName')]"
    }
  }
}
