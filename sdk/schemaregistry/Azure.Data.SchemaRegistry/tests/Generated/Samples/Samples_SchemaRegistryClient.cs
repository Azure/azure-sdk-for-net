// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Data.SchemaRegistry;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Data.SchemaRegistry.Samples
{
    public partial class Samples_SchemaRegistryClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SchemaOperations_GetSchemaByVersion_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

            Response response = client.GetSchemaByVersion("<groupName>", "<name>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SchemaOperations_GetSchemaByVersion_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

            Response response = await client.GetSchemaByVersionAsync("<groupName>", "<name>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SchemaOperations_GetSchemaByVersion_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

            Response<BinaryData> response = client.GetSchemaByVersion("<groupName>", "<name>", 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SchemaOperations_GetSchemaByVersion_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

            Response<BinaryData> response = await client.GetSchemaByVersionAsync("<groupName>", "<name>", 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SchemaOperations_GetSchemaByVersion_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

            Response response = client.GetSchemaByVersion("<groupName>", "<name>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SchemaOperations_GetSchemaByVersion_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

            Response response = await client.GetSchemaByVersionAsync("<groupName>", "<name>", 1234, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SchemaOperations_GetSchemaByVersion_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

            Response<BinaryData> response = client.GetSchemaByVersion("<groupName>", "<name>", 1234);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SchemaOperations_GetSchemaByVersion_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

            Response<BinaryData> response = await client.GetSchemaByVersionAsync("<groupName>", "<name>", 1234);
        }
    }
}
