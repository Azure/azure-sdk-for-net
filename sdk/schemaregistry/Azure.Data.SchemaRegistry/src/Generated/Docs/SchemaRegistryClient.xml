<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSchemaByIdAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetSchemaByIdAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response<BinaryData> response = await client.GetSchemaByIdAsync("<id>");
]]></code>
This sample shows how to call GetSchemaByIdAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response<BinaryData> response = await client.GetSchemaByIdAsync("<id>");
]]></code></example>
    </member>
    <member name="GetSchemaById(string,CancellationToken)">
      <example>
This sample shows how to call GetSchemaById.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response<BinaryData> response = client.GetSchemaById("<id>");
]]></code>
This sample shows how to call GetSchemaById with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response<BinaryData> response = client.GetSchemaById("<id>");
]]></code></example>
    </member>
    <member name="GetSchemaByIdAsync(string,RequestContext)">
      <example>
This sample shows how to call GetSchemaByIdAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = await client.GetSchemaByIdAsync("<id>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSchemaByIdAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = await client.GetSchemaByIdAsync("<id>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSchemaById(string,RequestContext)">
      <example>
This sample shows how to call GetSchemaById and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = client.GetSchemaById("<id>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSchemaById with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = client.GetSchemaById("<id>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSchemaByVersionAsync(string,string,int,CancellationToken)">
      <example>
This sample shows how to call GetSchemaByVersionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response<BinaryData> response = await client.GetSchemaByVersionAsync("<groupName>", "<name>", 1234);
]]></code>
This sample shows how to call GetSchemaByVersionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response<BinaryData> response = await client.GetSchemaByVersionAsync("<groupName>", "<name>", 1234);
]]></code></example>
    </member>
    <member name="GetSchemaByVersion(string,string,int,CancellationToken)">
      <example>
This sample shows how to call GetSchemaByVersion.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response<BinaryData> response = client.GetSchemaByVersion("<groupName>", "<name>", 1234);
]]></code>
This sample shows how to call GetSchemaByVersion with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response<BinaryData> response = client.GetSchemaByVersion("<groupName>", "<name>", 1234);
]]></code></example>
    </member>
    <member name="GetSchemaByVersionAsync(string,string,int,RequestContext)">
      <example>
This sample shows how to call GetSchemaByVersionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = await client.GetSchemaByVersionAsync("<groupName>", "<name>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSchemaByVersionAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = await client.GetSchemaByVersionAsync("<groupName>", "<name>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSchemaByVersion(string,string,int,RequestContext)">
      <example>
This sample shows how to call GetSchemaByVersion and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = client.GetSchemaByVersion("<groupName>", "<name>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSchemaByVersion with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = client.GetSchemaByVersion("<groupName>", "<name>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetSchemaIdByContentAsync(string,string,BinaryData,ContentType,CancellationToken)">
      <example>
This sample shows how to call GetSchemaIdByContentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = await client.GetSchemaIdByContentAsync("<groupName>", "<name>", BinaryData.FromObjectAsJson(new object()), new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetSchemaIdByContentAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = await client.GetSchemaIdByContentAsync("<groupName>", "<name>", BinaryData.FromObjectAsJson(new object()), new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetSchemaIdByContent(string,string,BinaryData,ContentType,CancellationToken)">
      <example>
This sample shows how to call GetSchemaIdByContent.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = client.GetSchemaIdByContent("<groupName>", "<name>", BinaryData.FromObjectAsJson(new object()), new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetSchemaIdByContent with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = client.GetSchemaIdByContent("<groupName>", "<name>", BinaryData.FromObjectAsJson(new object()), new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetSchemaIdByContentAsync(string,string,RequestContent,ContentType,RequestContext)">
      <example>
This sample shows how to call GetSchemaIdByContentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = await client.GetSchemaIdByContentAsync("<groupName>", "<name>", content, new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetSchemaIdByContentAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = await client.GetSchemaIdByContentAsync("<groupName>", "<name>", content, new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetSchemaIdByContent(string,string,RequestContent,ContentType,RequestContext)">
      <example>
This sample shows how to call GetSchemaIdByContent.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = client.GetSchemaIdByContent("<groupName>", "<name>", content, new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetSchemaIdByContent with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = client.GetSchemaIdByContent("<groupName>", "<name>", content, new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RegisterSchemaAsync(string,string,BinaryData,ContentType,CancellationToken)">
      <example>
This sample shows how to call RegisterSchemaAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = await client.RegisterSchemaAsync("<groupName>", "<name>", BinaryData.FromObjectAsJson(new object()), new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RegisterSchemaAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = await client.RegisterSchemaAsync("<groupName>", "<name>", BinaryData.FromObjectAsJson(new object()), new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RegisterSchema(string,string,BinaryData,ContentType,CancellationToken)">
      <example>
This sample shows how to call RegisterSchema.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = client.RegisterSchema("<groupName>", "<name>", BinaryData.FromObjectAsJson(new object()), new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RegisterSchema with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

Response response = client.RegisterSchema("<groupName>", "<name>", BinaryData.FromObjectAsJson(new object()), new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RegisterSchemaAsync(string,string,RequestContent,ContentType,RequestContext)">
      <example>
This sample shows how to call RegisterSchemaAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = await client.RegisterSchemaAsync("<groupName>", "<name>", content, new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RegisterSchemaAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = await client.RegisterSchemaAsync("<groupName>", "<name>", content, new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RegisterSchema(string,string,RequestContent,ContentType,RequestContext)">
      <example>
This sample shows how to call RegisterSchema.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = client.RegisterSchema("<groupName>", "<name>", content, new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RegisterSchema with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

RequestContent content = RequestContent.Create(new object());
Response response = client.RegisterSchema("<groupName>", "<name>", content, new ContentType("application/json; serialization=Avro"));
Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetSchemaGroupsAsync(CancellationToken)">
      <example>
This sample shows how to call GetSchemaGroupsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

await foreach (SchemaGroup item in client.GetSchemaGroupsAsync())
{
}
]]></code>
This sample shows how to call GetSchemaGroupsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

await foreach (SchemaGroup item in client.GetSchemaGroupsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetSchemaGroups(CancellationToken)">
      <example>
This sample shows how to call GetSchemaGroups.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

foreach (SchemaGroup item in client.GetSchemaGroups())
{
}
]]></code>
This sample shows how to call GetSchemaGroups with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

foreach (SchemaGroup item in client.GetSchemaGroups())
{
}
]]></code></example>
    </member>
    <member name="GetSchemaGroupsAsync(RequestContext)">
      <example>
This sample shows how to call GetSchemaGroupsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

await foreach (BinaryData item in client.GetSchemaGroupsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("groupName").ToString());
}
]]></code>
This sample shows how to call GetSchemaGroupsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

await foreach (BinaryData item in client.GetSchemaGroupsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("groupName").ToString());
}
]]></code></example>
    </member>
    <member name="GetSchemaGroups(RequestContext)">
      <example>
This sample shows how to call GetSchemaGroups and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

foreach (BinaryData item in client.GetSchemaGroups(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("groupName").ToString());
}
]]></code>
This sample shows how to call GetSchemaGroups with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

foreach (BinaryData item in client.GetSchemaGroups(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("groupName").ToString());
}
]]></code></example>
    </member>
    <member name="GetSchemaVersionsAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetSchemaVersionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

await foreach (Models.Version item in client.GetSchemaVersionsAsync("<groupName>", "<name>"))
{
}
]]></code>
This sample shows how to call GetSchemaVersionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

await foreach (Models.Version item in client.GetSchemaVersionsAsync("<groupName>", "<name>"))
{
}
]]></code></example>
    </member>
    <member name="GetSchemaVersions(string,string,CancellationToken)">
      <example>
This sample shows how to call GetSchemaVersions.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

foreach (Models.Version item in client.GetSchemaVersions("<groupName>", "<name>"))
{
}
]]></code>
This sample shows how to call GetSchemaVersions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

foreach (Models.Version item in client.GetSchemaVersions("<groupName>", "<name>"))
{
}
]]></code></example>
    </member>
    <member name="GetSchemaVersionsAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetSchemaVersionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

await foreach (BinaryData item in client.GetSchemaVersionsAsync("<groupName>", "<name>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("schemaVersion").ToString());
}
]]></code>
This sample shows how to call GetSchemaVersionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

await foreach (BinaryData item in client.GetSchemaVersionsAsync("<groupName>", "<name>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("schemaVersion").ToString());
}
]]></code></example>
    </member>
    <member name="GetSchemaVersions(string,string,RequestContext)">
      <example>
This sample shows how to call GetSchemaVersions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

foreach (BinaryData item in client.GetSchemaVersions("<groupName>", "<name>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("schemaVersion").ToString());
}
]]></code>
This sample shows how to call GetSchemaVersions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
SchemaRegistryClient client = new SchemaRegistryClient(endpoint, credential);

foreach (BinaryData item in client.GetSchemaVersions("<groupName>", "<name>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result[0].GetProperty("schemaVersion").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>