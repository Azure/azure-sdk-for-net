// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Data.SchemaRegistry.Models
{
    internal static partial class SchemaContentTypeValuesExtensions
    {
        /// <param name="value"> The value to serialize. </param>
        public static string ToSerialString(this SchemaContentTypeValues value) => value switch
        {
            SchemaContentTypeValues.Avro => "application/json; serialization=Avro",
            SchemaContentTypeValues.Json => "application/json; serialization=Json",
            SchemaContentTypeValues.Custom => "text/plain; charset=utf-8",
            SchemaContentTypeValues.Protobuf => "text/vnd.ms.protobuf",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SchemaContentTypeValues value.")
        };

        /// <param name="value"> The value to deserialize. </param>
        public static SchemaContentTypeValues ToSchemaContentTypeValues(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "application/json; serialization=Avro"))
            {
                return SchemaContentTypeValues.Avro;
            }
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "application/json; serialization=Json"))
            {
                return SchemaContentTypeValues.Json;
            }
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "text/plain; charset=utf-8"))
            {
                return SchemaContentTypeValues.Custom;
            }
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "text/vnd.ms.protobuf"))
            {
                return SchemaContentTypeValues.Protobuf;
            }
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SchemaContentTypeValues value.");
        }
    }
}
