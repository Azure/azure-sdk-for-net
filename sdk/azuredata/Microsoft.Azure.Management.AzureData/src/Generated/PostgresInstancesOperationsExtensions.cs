// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureData
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for PostgresInstancesOperations.
    /// </summary>
    public static partial class PostgresInstancesOperationsExtensions
    {
            /// <summary>
            /// List postgres Instance resources in the subscription
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<PostgresInstance> List(this IPostgresInstancesOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// List postgres Instance resources in the subscription
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<PostgresInstance>> ListAsync(this IPostgresInstancesOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List postgres Instance resources in the resource group
            /// </summary>
            /// <remarks>
            /// Get a postgres Instances list by Resource group name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            public static IPage<PostgresInstance> ListByResourceGroup(this IPostgresInstancesOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List postgres Instance resources in the resource group
            /// </summary>
            /// <remarks>
            /// Get a postgres Instances list by Resource group name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<PostgresInstance>> ListByResourceGroupAsync(this IPostgresInstancesOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves a postgres Instance resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='postgresInstanceName'>
            /// Name of Postgres Instance
            /// </param>
            public static PostgresInstance Get(this IPostgresInstancesOperations operations, string resourceGroupName, string postgresInstanceName)
            {
                return operations.GetAsync(resourceGroupName, postgresInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves a postgres Instance resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='postgresInstanceName'>
            /// Name of Postgres Instance
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PostgresInstance> GetAsync(this IPostgresInstancesOperations operations, string resourceGroupName, string postgresInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, postgresInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or replaces a postgres Instance resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='postgresInstanceName'>
            /// Name of PostgresInstance
            /// </param>
            public static PostgresInstance Create(this IPostgresInstancesOperations operations, string resourceGroupName, string postgresInstanceName)
            {
                return operations.CreateAsync(resourceGroupName, postgresInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or replaces a postgres Instance resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='postgresInstanceName'>
            /// Name of PostgresInstance
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PostgresInstance> CreateAsync(this IPostgresInstancesOperations operations, string resourceGroupName, string postgresInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, postgresInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a postgres Instance resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='postgresInstanceName'>
            /// Name of Postgres Instance
            /// </param>
            public static void Delete(this IPostgresInstancesOperations operations, string resourceGroupName, string postgresInstanceName)
            {
                operations.DeleteAsync(resourceGroupName, postgresInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a postgres Instance resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='postgresInstanceName'>
            /// Name of Postgres Instance
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IPostgresInstancesOperations operations, string resourceGroupName, string postgresInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, postgresInstanceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates a postgres Instance resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='postgresInstanceName'>
            /// Name of Postgres Instance
            /// </param>
            /// <param name='parameters'>
            /// The Postgres Instance.
            /// </param>
            public static PostgresInstance Update(this IPostgresInstancesOperations operations, string resourceGroupName, string postgresInstanceName, PostgresInstanceUpdate parameters)
            {
                return operations.UpdateAsync(resourceGroupName, postgresInstanceName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates a postgres Instance resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='postgresInstanceName'>
            /// Name of Postgres Instance
            /// </param>
            /// <param name='parameters'>
            /// The Postgres Instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PostgresInstance> UpdateAsync(this IPostgresInstancesOperations operations, string resourceGroupName, string postgresInstanceName, PostgresInstanceUpdate parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, postgresInstanceName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List postgres Instance resources in the subscription
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<PostgresInstance> ListNext(this IPostgresInstancesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List postgres Instance resources in the subscription
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<PostgresInstance>> ListNextAsync(this IPostgresInstancesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List postgres Instance resources in the resource group
            /// </summary>
            /// <remarks>
            /// Get a postgres Instances list by Resource group name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<PostgresInstance> ListByResourceGroupNext(this IPostgresInstancesOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List postgres Instance resources in the resource group
            /// </summary>
            /// <remarks>
            /// Get a postgres Instances list by Resource group name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<PostgresInstance>> ListByResourceGroupNextAsync(this IPostgresInstancesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
