// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties from the on premise data controller
    /// </summary>
    public partial class OnPremiseProperty
    {
        /// <summary>
        /// Initializes a new instance of the OnPremiseProperty class.
        /// </summary>
        public OnPremiseProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OnPremiseProperty class.
        /// </summary>
        /// <param name="id">A globally unique ID identifying the associated on
        /// premise cluster</param>
        /// <param name="publicSigningKey">Certificate that contains the on
        /// premise cluster public key used to verify signing</param>
        /// <param name="signingCertificateThumbprint">Unique thumbprint
        /// returned to customer to verify the certificate being
        /// uploaded</param>
        public OnPremiseProperty(System.Guid id, string publicSigningKey, string signingCertificateThumbprint = default(string))
        {
            Id = id;
            PublicSigningKey = publicSigningKey;
            SigningCertificateThumbprint = signingCertificateThumbprint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a globally unique ID identifying the associated on
        /// premise cluster
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets certificate that contains the on premise cluster
        /// public key used to verify signing
        /// </summary>
        [JsonProperty(PropertyName = "publicSigningKey")]
        public string PublicSigningKey { get; set; }

        /// <summary>
        /// Gets or sets unique thumbprint returned to customer to verify the
        /// certificate being uploaded
        /// </summary>
        [JsonProperty(PropertyName = "signingCertificateThumbprint")]
        public string SigningCertificateThumbprint { get; set; }

    }
}
