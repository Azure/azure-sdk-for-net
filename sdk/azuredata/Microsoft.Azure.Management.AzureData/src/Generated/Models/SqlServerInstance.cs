// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureData.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A SqlServerInstance.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SqlServerInstance : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the SqlServerInstance class.
        /// </summary>
        public SqlServerInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlServerInstance class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="version">SQL Server version.</param>
        /// <param name="edition">SQL Server edition.</param>
        /// <param name="containerResourceId">ARM Resource id of the container
        /// resource (Azure Arc for Servers)</param>
        /// <param name="vCore">The number of logical processors used by the
        /// SQL Server instance.</param>
        /// <param name="status">The cloud connectivity status.</param>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="createTime">The time when the resource was
        /// created.</param>
        /// <param name="updateTime">The time when the resource was last
        /// updated.</param>
        public SqlServerInstance(string location, string version, string edition, string containerResourceId, string vCore, string status, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string createTime = default(string), string updateTime = default(string))
            : base(location, id, name, type, tags)
        {
            Version = version;
            Edition = edition;
            ContainerResourceId = containerResourceId;
            CreateTime = createTime;
            UpdateTime = updateTime;
            VCore = vCore;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets SQL Server version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets SQL Server edition.
        /// </summary>
        [JsonProperty(PropertyName = "properties.edition")]
        public string Edition { get; set; }

        /// <summary>
        /// Gets or sets ARM Resource id of the container resource (Azure Arc
        /// for Servers)
        /// </summary>
        [JsonProperty(PropertyName = "properties.containerResourceId")]
        public string ContainerResourceId { get; set; }

        /// <summary>
        /// Gets the time when the resource was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createTime")]
        public string CreateTime { get; private set; }

        /// <summary>
        /// Gets the time when the resource was last updated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.updateTime")]
        public string UpdateTime { get; private set; }

        /// <summary>
        /// Gets or sets the number of logical processors used by the SQL
        /// Server instance.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vCore")]
        public string VCore { get; set; }

        /// <summary>
        /// Gets or sets the cloud connectivity status.
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

    }
}
