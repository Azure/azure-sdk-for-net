// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.Compute.Models
{
    public partial class BootDiagnosticsInstanceView : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ConsoleScreenshotBlobUri))
            {
                writer.WritePropertyName("consoleScreenshotBlobUri");
                writer.WriteStringValue(ConsoleScreenshotBlobUri);
            }
            if (Optional.IsDefined(SerialConsoleLogBlobUri))
            {
                writer.WritePropertyName("serialConsoleLogBlobUri");
                writer.WriteStringValue(SerialConsoleLogBlobUri);
            }
            if (Optional.IsDefined(Status))
            {
                writer.WritePropertyName("status");
                writer.WriteObjectValue(Status);
            }
            writer.WriteEndObject();
        }

        internal static BootDiagnosticsInstanceView DeserializeBootDiagnosticsInstanceView(JsonElement element)
        {
            Optional<string> consoleScreenshotBlobUri = default;
            Optional<string> serialConsoleLogBlobUri = default;
            Optional<InstanceViewStatus> status = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("consoleScreenshotBlobUri"))
                {
                    consoleScreenshotBlobUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serialConsoleLogBlobUri"))
                {
                    serialConsoleLogBlobUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    status = InstanceViewStatus.DeserializeInstanceViewStatus(property.Value);
                    continue;
                }
            }
            return new BootDiagnosticsInstanceView(consoleScreenshotBlobUri.HasValue ? consoleScreenshotBlobUri.Value : null, serialConsoleLogBlobUri.HasValue ? serialConsoleLogBlobUri.Value : null, status.HasValue ? status.Value : null);
        }
    }
}
