// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.Compute.Models
{
    public partial class DedicatedHostInstanceView : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AssetId))
            {
                writer.WritePropertyName("assetId");
                writer.WriteStringValue(AssetId);
            }
            if (Optional.IsDefined(AvailableCapacity))
            {
                writer.WritePropertyName("availableCapacity");
                writer.WriteObjectValue(AvailableCapacity);
            }
            if (Optional.IsDefined(Statuses))
            {
                writer.WritePropertyName("statuses");
                writer.WriteStartArray();
                foreach (var item in Statuses)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static DedicatedHostInstanceView DeserializeDedicatedHostInstanceView(JsonElement element)
        {
            Optional<string> assetId = default;
            Optional<DedicatedHostAvailableCapacity> availableCapacity = default;
            Optional<IList<InstanceViewStatus>> statuses = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("assetId"))
                {
                    assetId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("availableCapacity"))
                {
                    availableCapacity = DedicatedHostAvailableCapacity.DeserializeDedicatedHostAvailableCapacity(property.Value);
                    continue;
                }
                if (property.NameEquals("statuses"))
                {
                    List<InstanceViewStatus> array = new List<InstanceViewStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(InstanceViewStatus.DeserializeInstanceViewStatus(item));
                        }
                    }
                    statuses = array;
                    continue;
                }
            }
            return new DedicatedHostInstanceView(assetId.HasValue ? assetId.Value : null, availableCapacity.HasValue ? availableCapacity.Value : null, new ChangeTrackingList<InstanceViewStatus>(statuses));
        }
    }
}
