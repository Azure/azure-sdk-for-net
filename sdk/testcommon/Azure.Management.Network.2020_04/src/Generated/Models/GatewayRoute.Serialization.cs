// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.Network.Models
{
    public partial class GatewayRoute
    {
        internal static GatewayRoute DeserializeGatewayRoute(JsonElement element)
        {
            Optional<string> localAddress = default;
            Optional<string> network = default;
            Optional<string> nextHop = default;
            Optional<string> sourcePeer = default;
            Optional<string> origin = default;
            Optional<string> asPath = default;
            Optional<int> weight = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("localAddress"))
                {
                    localAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("network"))
                {
                    network = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nextHop"))
                {
                    nextHop = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourcePeer"))
                {
                    sourcePeer = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("origin"))
                {
                    origin = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("asPath"))
                {
                    asPath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("weight"))
                {
                    weight = property.Value.GetInt32();
                    continue;
                }
            }
            return new GatewayRoute(localAddress.HasValue ? localAddress.Value : null, network.HasValue ? network.Value : null, nextHop.HasValue ? nextHop.Value : null, sourcePeer.HasValue ? sourcePeer.Value : null, origin.HasValue ? origin.Value : null, asPath.HasValue ? asPath.Value : null, weight.HasValue ? weight.Value : (int?)null);
        }
    }
}
