// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.Resources.Models
{
    public partial class Provider
    {
        internal static Provider DeserializeProvider(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> @namespace = default;
            Optional<string> registrationState = default;
            Optional<IReadOnlyList<ProviderResourceType>> resourceTypes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("namespace"))
                {
                    @namespace = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("registrationState"))
                {
                    registrationState = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceTypes"))
                {
                    List<ProviderResourceType> array = new List<ProviderResourceType>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ProviderResourceType.DeserializeProviderResourceType(item));
                    }
                    resourceTypes = array;
                    continue;
                }
            }
            return new Provider(id.Value, @namespace.Value, registrationState.Value, Optional.ToList(resourceTypes));
        }
    }
}
