// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.Management.Resource;

namespace Azure.Management.Resource
{
    /// <summary> Resource service management client. </summary>
    public class ResourceManagementClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        private readonly string _subscriptionId;
        private readonly Uri _endpoint;

        /// <summary> Initializes a new instance of ResourceManagementClient for mocking. </summary>
        protected ResourceManagementClient()
        {
        }

        /// <summary> Initializes a new instance of ResourceManagementClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public ResourceManagementClient(string subscriptionId, TokenCredential tokenCredential, ResourceManagementClientOptions options = null) : this(subscriptionId, null, tokenCredential, options)
        {
        }
        /// <summary> Initializes a new instance of ResourceManagementClient. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> This occurs when one of the required arguments is null. </exception>
        public ResourceManagementClient(string subscriptionId, Uri endpoint, TokenCredential tokenCredential, ResourceManagementClientOptions options = null)
        {
            if (subscriptionId == null)
            {
                throw new ArgumentNullException(nameof(subscriptionId));
            }
            endpoint ??= new Uri("https://management.azure.com");

            options ??= new ResourceManagementClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = ManagementPipelineBuilder.Build(tokenCredential, endpoint, options);
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
        }

        /// <summary> Creates a new instance of DeploymentsClient. </summary>
        public virtual DeploymentsClient GetDeploymentsClient()
        {
            return new DeploymentsClient(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
        }

        /// <summary> Creates a new instance of ProvidersClient. </summary>
        public virtual ProvidersClient GetProvidersClient()
        {
            return new ProvidersClient(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
        }

        /// <summary> Creates a new instance of ResourcesClient. </summary>
        public virtual ResourcesClient GetResourcesClient()
        {
            return new ResourcesClient(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
        }

        /// <summary> Creates a new instance of ResourceGroupsClient. </summary>
        public virtual ResourceGroupsClient GetResourceGroupsClient()
        {
            return new ResourceGroupsClient(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
        }

        /// <summary> Creates a new instance of TagsClient. </summary>
        public virtual TagsClient GetTagsClient()
        {
            return new TagsClient(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
        }

        /// <summary> Creates a new instance of DeploymentClient. </summary>
        public virtual DeploymentClient GetDeploymentClient()
        {
            return new DeploymentClient(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
        }
    }
}
