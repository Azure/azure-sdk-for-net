// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Graph.Rbac.Models
{
    public partial class PreAuthorizedApplication : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AppId))
            {
                writer.WritePropertyName("appId");
                writer.WriteStringValue(AppId);
            }
            if (Optional.IsCollectionDefined(Permissions))
            {
                writer.WritePropertyName("permissions");
                writer.WriteStartArray();
                foreach (var item in Permissions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Extensions))
            {
                writer.WritePropertyName("extensions");
                writer.WriteStartArray();
                foreach (var item in Extensions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static PreAuthorizedApplication DeserializePreAuthorizedApplication(JsonElement element)
        {
            Optional<string> appId = default;
            Optional<IList<PreAuthorizedApplicationPermission>> permissions = default;
            Optional<IList<PreAuthorizedApplicationExtension>> extensions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("appId"))
                {
                    appId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("permissions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<PreAuthorizedApplicationPermission> array = new List<PreAuthorizedApplicationPermission>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PreAuthorizedApplicationPermission.DeserializePreAuthorizedApplicationPermission(item));
                    }
                    permissions = array;
                    continue;
                }
                if (property.NameEquals("extensions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<PreAuthorizedApplicationExtension> array = new List<PreAuthorizedApplicationExtension>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(PreAuthorizedApplicationExtension.DeserializePreAuthorizedApplicationExtension(item));
                    }
                    extensions = array;
                    continue;
                }
            }
            return new PreAuthorizedApplication(appId.Value, Optional.ToList(permissions), Optional.ToList(extensions));
        }
    }
}
