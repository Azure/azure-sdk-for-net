// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Graph.Rbac.Models
{
    /// <summary> Represents an OAuth 2.0 delegated permission scope. The specified OAuth 2.0 delegated permission scopes may be requested by client applications (through the requiredResourceAccess collection on the Application object) when calling a resource application. The oauth2Permissions property of the ServicePrincipal entity and of the Application entity is a collection of OAuth2Permission. </summary>
    public partial class OAuth2Permission
    {
        /// <summary> Initializes a new instance of OAuth2Permission. </summary>
        public OAuth2Permission()
        {
        }

        /// <summary> Initializes a new instance of OAuth2Permission. </summary>
        /// <param name="adminConsentDescription"> Permission help text that appears in the admin consent and app assignment experiences. </param>
        /// <param name="adminConsentDisplayName"> Display name for the permission that appears in the admin consent and app assignment experiences. </param>
        /// <param name="id"> Unique scope permission identifier inside the oauth2Permissions collection. </param>
        /// <param name="isEnabled"> When creating or updating a permission, this property must be set to true (which is the default). To delete a permission, this property must first be set to false. At that point, in a subsequent call, the permission may be removed. </param>
        /// <param name="type"> Specifies whether this scope permission can be consented to by an end user, or whether it is a tenant-wide permission that must be consented to by a Company Administrator. Possible values are &quot;User&quot; or &quot;Admin&quot;. </param>
        /// <param name="userConsentDescription"> Permission help text that appears in the end user consent experience. </param>
        /// <param name="userConsentDisplayName"> Display name for the permission that appears in the end user consent experience. </param>
        /// <param name="value"> The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. </param>
        internal OAuth2Permission(string adminConsentDescription, string adminConsentDisplayName, string id, bool? isEnabled, string type, string userConsentDescription, string userConsentDisplayName, string value)
        {
            AdminConsentDescription = adminConsentDescription;
            AdminConsentDisplayName = adminConsentDisplayName;
            Id = id;
            IsEnabled = isEnabled;
            Type = type;
            UserConsentDescription = userConsentDescription;
            UserConsentDisplayName = userConsentDisplayName;
            Value = value;
        }

        /// <summary> Permission help text that appears in the admin consent and app assignment experiences. </summary>
        public string AdminConsentDescription { get; set; }
        /// <summary> Display name for the permission that appears in the admin consent and app assignment experiences. </summary>
        public string AdminConsentDisplayName { get; set; }
        /// <summary> Unique scope permission identifier inside the oauth2Permissions collection. </summary>
        public string Id { get; set; }
        /// <summary> When creating or updating a permission, this property must be set to true (which is the default). To delete a permission, this property must first be set to false. At that point, in a subsequent call, the permission may be removed. </summary>
        public bool? IsEnabled { get; set; }
        /// <summary> Specifies whether this scope permission can be consented to by an end user, or whether it is a tenant-wide permission that must be consented to by a Company Administrator. Possible values are &quot;User&quot; or &quot;Admin&quot;. </summary>
        public string Type { get; set; }
        /// <summary> Permission help text that appears in the end user consent experience. </summary>
        public string UserConsentDescription { get; set; }
        /// <summary> Display name for the permission that appears in the end user consent experience. </summary>
        public string UserConsentDisplayName { get; set; }
        /// <summary> The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. </summary>
        public string Value { get; set; }
    }
}
