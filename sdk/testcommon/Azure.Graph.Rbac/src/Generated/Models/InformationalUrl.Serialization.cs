// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Graph.Rbac.Models
{
    public partial class InformationalUrl : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(TermsOfService))
            {
                writer.WritePropertyName("termsOfService");
                writer.WriteStringValue(TermsOfService);
            }
            if (Optional.IsDefined(Marketing))
            {
                writer.WritePropertyName("marketing");
                writer.WriteStringValue(Marketing);
            }
            if (Optional.IsDefined(Privacy))
            {
                writer.WritePropertyName("privacy");
                writer.WriteStringValue(Privacy);
            }
            if (Optional.IsDefined(Support))
            {
                writer.WritePropertyName("support");
                writer.WriteStringValue(Support);
            }
            writer.WriteEndObject();
        }

        internal static InformationalUrl DeserializeInformationalUrl(JsonElement element)
        {
            Optional<string> termsOfService = default;
            Optional<string> marketing = default;
            Optional<string> privacy = default;
            Optional<string> support = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("termsOfService"))
                {
                    termsOfService = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("marketing"))
                {
                    marketing = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("privacy"))
                {
                    privacy = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("support"))
                {
                    support = property.Value.GetString();
                    continue;
                }
            }
            return new InformationalUrl(termsOfService.Value, marketing.Value, privacy.Value, support.Value);
        }
    }
}
