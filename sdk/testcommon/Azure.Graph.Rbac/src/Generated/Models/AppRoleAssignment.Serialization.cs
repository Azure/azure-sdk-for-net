// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Graph.Rbac.Models
{
    public partial class AppRoleAssignment
    {
        internal static AppRoleAssignment DeserializeAppRoleAssignment(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> principalDisplayName = default;
            Optional<string> principalId = default;
            Optional<string> principalType = default;
            Optional<string> resourceDisplayName = default;
            Optional<string> resourceId = default;
            Optional<string> objectId = default;
            string objectType = default;
            Optional<DateTimeOffset?> deletionTimestamp = default;
            IReadOnlyDictionary<string, object> additionalProperties = default;
            Dictionary<string, object> additionalPropertiesDictionary = new Dictionary<string, object>();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("principalDisplayName"))
                {
                    principalDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("principalId"))
                {
                    principalId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("principalType"))
                {
                    principalType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceDisplayName"))
                {
                    resourceDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceId"))
                {
                    resourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("objectId"))
                {
                    objectId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("objectType"))
                {
                    objectType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deletionTimestamp"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deletionTimestamp = null;
                        continue;
                    }
                    deletionTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                additionalPropertiesDictionary.Add(property.Name, property.Value.GetObject());
            }
            additionalProperties = additionalPropertiesDictionary;
            return new AppRoleAssignment(objectId.Value, objectType, Optional.ToNullable(deletionTimestamp), additionalProperties, id.Value, principalDisplayName.Value, principalId.Value, principalType.Value, resourceDisplayName.Value, resourceId.Value);
        }
    }
}
