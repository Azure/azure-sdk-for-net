// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Graph.Rbac.Models
{
    public partial class OAuth2Permission : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (AdminConsentDescription != null)
            {
                writer.WritePropertyName("adminConsentDescription");
                writer.WriteStringValue(AdminConsentDescription);
            }
            if (AdminConsentDisplayName != null)
            {
                writer.WritePropertyName("adminConsentDisplayName");
                writer.WriteStringValue(AdminConsentDisplayName);
            }
            if (Id != null)
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            if (IsEnabled != null)
            {
                writer.WritePropertyName("isEnabled");
                writer.WriteBooleanValue(IsEnabled.Value);
            }
            if (Type != null)
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type);
            }
            if (UserConsentDescription != null)
            {
                writer.WritePropertyName("userConsentDescription");
                writer.WriteStringValue(UserConsentDescription);
            }
            if (UserConsentDisplayName != null)
            {
                writer.WritePropertyName("userConsentDisplayName");
                writer.WriteStringValue(UserConsentDisplayName);
            }
            if (Value != null)
            {
                writer.WritePropertyName("value");
                writer.WriteStringValue(Value);
            }
            writer.WriteEndObject();
        }

        internal static OAuth2Permission DeserializeOAuth2Permission(JsonElement element)
        {
            string adminConsentDescription = default;
            string adminConsentDisplayName = default;
            string id = default;
            bool? isEnabled = default;
            string type = default;
            string userConsentDescription = default;
            string userConsentDisplayName = default;
            string value = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("adminConsentDescription"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    adminConsentDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("adminConsentDisplayName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    adminConsentDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("userConsentDescription"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    userConsentDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("userConsentDisplayName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    userConsentDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    value = property.Value.GetString();
                    continue;
                }
            }
            return new OAuth2Permission(adminConsentDescription, adminConsentDisplayName, id, isEnabled, type, userConsentDescription, userConsentDisplayName, value);
        }
    }
}
