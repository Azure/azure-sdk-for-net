// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Graph.Rbac.Models
{
    /// <summary> Request parameters for updating an existing work or school account user. </summary>
    public partial class UserUpdateParameters : UserBase
    {
        /// <summary> Initializes a new instance of UserUpdateParameters. </summary>
        public UserUpdateParameters()
        {
        }

        /// <summary> Initializes a new instance of UserUpdateParameters. </summary>
        /// <param name="immutableId"> This must be specified if you are using a federated domain for the user&apos;s userPrincipalName (UPN) property when creating a new user account. It is used to associate an on-premises Active Directory user account with their Azure AD user object. </param>
        /// <param name="usageLocation"> A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: &quot;US&quot;, &quot;JP&quot;, and &quot;GB&quot;. </param>
        /// <param name="givenName"> The given name for the user. </param>
        /// <param name="surname"> The user&apos;s surname (family name or last name). </param>
        /// <param name="userType"> A string value that can be used to classify user types in your directory, such as &apos;Member&apos; and &apos;Guest&apos;. </param>
        /// <param name="additionalProperties"> . </param>
        /// <param name="accountEnabled"> Whether the account is enabled. </param>
        /// <param name="displayName"> The display name of the user. </param>
        /// <param name="passwordProfile"> The password profile of the user. </param>
        /// <param name="userPrincipalName"> The user principal name (someuser@contoso.com). It must contain one of the verified domains for the tenant. </param>
        /// <param name="mailNickname"> The mail alias for the user. </param>
        internal UserUpdateParameters(string immutableId, string usageLocation, string givenName, string surname, UserType? userType, IDictionary<string, object> additionalProperties, bool? accountEnabled, string displayName, PasswordProfile passwordProfile, string userPrincipalName, string mailNickname) : base(immutableId, usageLocation, givenName, surname, userType, additionalProperties)
        {
            AccountEnabled = accountEnabled;
            DisplayName = displayName;
            PasswordProfile = passwordProfile;
            UserPrincipalName = userPrincipalName;
            MailNickname = mailNickname;
        }

        /// <summary> Whether the account is enabled. </summary>
        public bool? AccountEnabled { get; set; }
        /// <summary> The display name of the user. </summary>
        public string DisplayName { get; set; }
        /// <summary> The password profile of the user. </summary>
        public PasswordProfile PasswordProfile { get; set; }
        /// <summary> The user principal name (someuser@contoso.com). It must contain one of the verified domains for the tenant. </summary>
        public string UserPrincipalName { get; set; }
        /// <summary> The mail alias for the user. </summary>
        public string MailNickname { get; set; }
    }
}
