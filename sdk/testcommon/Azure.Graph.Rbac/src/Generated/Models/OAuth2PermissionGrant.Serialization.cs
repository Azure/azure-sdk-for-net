// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Graph.Rbac.Models
{
    public partial class OAuth2PermissionGrant : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (OdataType != null)
            {
                writer.WritePropertyName("odata.type");
                writer.WriteStringValue(OdataType);
            }
            if (ClientId != null)
            {
                writer.WritePropertyName("clientId");
                writer.WriteStringValue(ClientId);
            }
            if (ObjectId != null)
            {
                writer.WritePropertyName("objectId");
                writer.WriteStringValue(ObjectId);
            }
            if (ConsentType != null)
            {
                writer.WritePropertyName("consentType");
                writer.WriteStringValue(ConsentType.Value.ToString());
            }
            if (PrincipalId != null)
            {
                writer.WritePropertyName("principalId");
                writer.WriteStringValue(PrincipalId);
            }
            if (ResourceId != null)
            {
                writer.WritePropertyName("resourceId");
                writer.WriteStringValue(ResourceId);
            }
            if (Scope != null)
            {
                writer.WritePropertyName("scope");
                writer.WriteStringValue(Scope);
            }
            if (StartTime != null)
            {
                writer.WritePropertyName("startTime");
                writer.WriteStringValue(StartTime);
            }
            if (ExpiryTime != null)
            {
                writer.WritePropertyName("expiryTime");
                writer.WriteStringValue(ExpiryTime);
            }
            writer.WriteEndObject();
        }

        internal static OAuth2PermissionGrant DeserializeOAuth2PermissionGrant(JsonElement element)
        {
            string odataType = default;
            string clientId = default;
            string objectId = default;
            ConsentType? consentType = default;
            string principalId = default;
            string resourceId = default;
            string scope = default;
            string startTime = default;
            string expiryTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("odata.type"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    odataType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("clientId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clientId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("objectId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    objectId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("consentType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    consentType = new ConsentType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("principalId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    principalId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("scope"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scope = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    startTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("expiryTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    expiryTime = property.Value.GetString();
                    continue;
                }
            }
            return new OAuth2PermissionGrant(odataType, clientId, objectId, consentType, principalId, resourceId, scope, startTime, expiryTime);
        }
    }
}
