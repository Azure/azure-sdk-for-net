// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.Graph.Rbac;

namespace Azure.Graph.Rbac
{
    /// <summary> Rbac service management client. </summary>
    public class RbacManagementClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        private readonly string _tenantID;
        private readonly Uri _endpoint;

        /// <summary> Initializes a new instance of RbacManagementClient for mocking. </summary>
        protected RbacManagementClient()
        {
        }

        /// <summary> Initializes a new instance of RbacManagementClient. </summary>
        /// <param name="tenantID"> The tenant ID. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public RbacManagementClient(string tenantID, TokenCredential tokenCredential, RbacManagementClientOptions options = null) : this(tenantID, null, tokenCredential, options)
        {
        }
        /// <summary> Initializes a new instance of RbacManagementClient. </summary>
        /// <param name="tenantID"> The tenant ID. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> This occurs when one of the required arguments is null. </exception>
        public RbacManagementClient(string tenantID, Uri endpoint, TokenCredential tokenCredential, RbacManagementClientOptions options = null)
        {
            if (tenantID == null)
            {
                throw new ArgumentNullException(nameof(tenantID));
            }
            endpoint ??= new Uri("https://graph.windows.net");

            options ??= new RbacManagementClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = ManagementPipelineBuilder.Build(tokenCredential, endpoint, options);
            _tenantID = tenantID;
            _endpoint = endpoint;
        }

        /// <summary> Creates a new instance of SignedInUserClient. </summary>
        public virtual SignedInUserClient GetSignedInUserClient()
        {
            return new SignedInUserClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }

        /// <summary> Creates a new instance of ApplicationsClient. </summary>
        public virtual ApplicationsClient GetApplicationsClient()
        {
            return new ApplicationsClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }

        /// <summary> Creates a new instance of DeletedApplicationsClient. </summary>
        public virtual DeletedApplicationsClient GetDeletedApplicationsClient()
        {
            return new DeletedApplicationsClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }

        /// <summary> Creates a new instance of GroupsClient. </summary>
        public virtual GroupsClient GetGroupsClient()
        {
            return new GroupsClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }

        /// <summary> Creates a new instance of ServicePrincipalsClient. </summary>
        public virtual ServicePrincipalsClient GetServicePrincipalsClient()
        {
            return new ServicePrincipalsClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }

        /// <summary> Creates a new instance of UsersClient. </summary>
        public virtual UsersClient GetUsersClient()
        {
            return new UsersClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }

        /// <summary> Creates a new instance of ObjectsClient. </summary>
        public virtual ObjectsClient GetObjectsClient()
        {
            return new ObjectsClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }

        /// <summary> Creates a new instance of DomainsClient. </summary>
        public virtual DomainsClient GetDomainsClient()
        {
            return new DomainsClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }

        /// <summary> Creates a new instance of OAuth2PermissionGrantClient. </summary>
        public virtual OAuth2PermissionGrantClient GetOAuth2PermissionGrantClient()
        {
            return new OAuth2PermissionGrantClient(_clientDiagnostics, _pipeline, _tenantID, _endpoint);
        }
    }
}
