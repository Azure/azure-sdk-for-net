// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace ProjectCarnegie.Models
{
    public partial class TextDetectResponse
    {
        internal static TextDetectResponse DeserializeTextDetectResponse(JsonElement element)
        {
            Optional<IReadOnlyList<TextListMatchResult>> blocklistMatchResults = default;
            Optional<TextDetectMultiSeverityResult> hateResult = default;
            Optional<TextDetectMultiSeverityResult> selfHarmResult = default;
            Optional<TextDetectMultiSeverityResult> sexualResult = default;
            Optional<TextDetectMultiSeverityResult> violenceResult = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("blocklistMatchResults"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<TextListMatchResult> array = new List<TextListMatchResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(TextListMatchResult.DeserializeTextListMatchResult(item));
                    }
                    blocklistMatchResults = array;
                    continue;
                }
                if (property.NameEquals("hateResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    hateResult = TextDetectMultiSeverityResult.DeserializeTextDetectMultiSeverityResult(property.Value);
                    continue;
                }
                if (property.NameEquals("selfHarmResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    selfHarmResult = TextDetectMultiSeverityResult.DeserializeTextDetectMultiSeverityResult(property.Value);
                    continue;
                }
                if (property.NameEquals("sexualResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sexualResult = TextDetectMultiSeverityResult.DeserializeTextDetectMultiSeverityResult(property.Value);
                    continue;
                }
                if (property.NameEquals("violenceResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    violenceResult = TextDetectMultiSeverityResult.DeserializeTextDetectMultiSeverityResult(property.Value);
                    continue;
                }
            }
            return new TextDetectResponse(Optional.ToList(blocklistMatchResults), hateResult, selfHarmResult, sexualResult, violenceResult);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static TextDetectResponse FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeTextDetectResponse(document.RootElement);
        }
    }
}
