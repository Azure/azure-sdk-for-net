// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> DB System lifecycle state enum. </summary>
    public readonly partial struct DbSystemLifecycleState : IEquatable<DbSystemLifecycleState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DbSystemLifecycleState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DbSystemLifecycleState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ProvisioningValue = "Provisioning";
        private const string AvailableValue = "Available";
        private const string UpdatingValue = "Updating";
        private const string TerminatingValue = "Terminating";
        private const string TerminatedValue = "Terminated";
        private const string FailedValue = "Failed";
        private const string MigratedValue = "Migrated";
        private const string MaintenanceInProgressValue = "MaintenanceInProgress";
        private const string NeedsAttentionValue = "NeedsAttention";
        private const string UpgradingValue = "Upgrading";

        /// <summary> Indicates that resource in Provisioning state. </summary>
        public static DbSystemLifecycleState Provisioning { get; } = new DbSystemLifecycleState(ProvisioningValue);
        /// <summary> Indicates that resource in Available state. </summary>
        public static DbSystemLifecycleState Available { get; } = new DbSystemLifecycleState(AvailableValue);
        /// <summary> Indicates that resource in Updating state. </summary>
        public static DbSystemLifecycleState Updating { get; } = new DbSystemLifecycleState(UpdatingValue);
        /// <summary> Indicates that resource in Terminating state. </summary>
        public static DbSystemLifecycleState Terminating { get; } = new DbSystemLifecycleState(TerminatingValue);
        /// <summary> Indicates that resource in Terminated state. </summary>
        public static DbSystemLifecycleState Terminated { get; } = new DbSystemLifecycleState(TerminatedValue);
        /// <summary> Indicates that resource in Failed state. </summary>
        public static DbSystemLifecycleState Failed { get; } = new DbSystemLifecycleState(FailedValue);
        /// <summary> Indicates that resource is Migrated state. </summary>
        public static DbSystemLifecycleState Migrated { get; } = new DbSystemLifecycleState(MigratedValue);
        /// <summary> Indicates that resource maintenance in progress state. </summary>
        public static DbSystemLifecycleState MaintenanceInProgress { get; } = new DbSystemLifecycleState(MaintenanceInProgressValue);
        /// <summary> Indicates that resource needs attention state. </summary>
        public static DbSystemLifecycleState NeedsAttention { get; } = new DbSystemLifecycleState(NeedsAttentionValue);
        /// <summary> Indicates that resource in Upgrading state. </summary>
        public static DbSystemLifecycleState Upgrading { get; } = new DbSystemLifecycleState(UpgradingValue);
        /// <summary> Determines if two <see cref="DbSystemLifecycleState"/> values are the same. </summary>
        public static bool operator ==(DbSystemLifecycleState left, DbSystemLifecycleState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DbSystemLifecycleState"/> values are not the same. </summary>
        public static bool operator !=(DbSystemLifecycleState left, DbSystemLifecycleState right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DbSystemLifecycleState"/>. </summary>
        public static implicit operator DbSystemLifecycleState(string value) => new DbSystemLifecycleState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DbSystemLifecycleState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DbSystemLifecycleState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
