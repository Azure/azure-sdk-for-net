// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary>
    /// DbSystem resource base model.
    /// Please note <see cref="DbSystemBaseProperties"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="DbSystemProperties"/>.
    /// </summary>
    public abstract partial class DbSystemBaseProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private protected IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DbSystemBaseProperties"/>. </summary>
        /// <param name="resourceAnchorId"> Azure Resource Anchor ID. </param>
        /// <param name="networkAnchorId"> Azure Network Anchor ID. </param>
        /// <param name="hostname"> The hostname for the DB system. </param>
        /// <param name="shape"> The shape of the DB system. The shape determines resources to allocate to the DB system. For virtual machine shapes, the number of CPU cores and memory. For bare metal and Exadata shapes, the number of CPU cores, storage, and memory. </param>
        /// <param name="sshPublicKeys"> The public key portion of one or more key pairs used for SSH access to the DB system. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceAnchorId"/>, <paramref name="networkAnchorId"/>, <paramref name="hostname"/>, <paramref name="shape"/> or <paramref name="sshPublicKeys"/> is null. </exception>
        protected DbSystemBaseProperties(ResourceIdentifier resourceAnchorId, ResourceIdentifier networkAnchorId, string hostname, string shape, IEnumerable<string> sshPublicKeys)
        {
            Argument.AssertNotNull(resourceAnchorId, nameof(resourceAnchorId));
            Argument.AssertNotNull(networkAnchorId, nameof(networkAnchorId));
            Argument.AssertNotNull(hostname, nameof(hostname));
            Argument.AssertNotNull(shape, nameof(shape));
            Argument.AssertNotNull(sshPublicKeys, nameof(sshPublicKeys));

            ResourceAnchorId = resourceAnchorId;
            NetworkAnchorId = networkAnchorId;
            Hostname = hostname;
            ScanIPs = new ChangeTrackingList<string>();
            Shape = shape;
            SshPublicKeys = sshPublicKeys.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="DbSystemBaseProperties"/>. </summary>
        /// <param name="source"> The source of the database: Use `None` for creating a new database. The default is `None`. </param>
        /// <param name="provisioningState"> dbSystem provisioning state. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="resourceAnchorId"> Azure Resource Anchor ID. </param>
        /// <param name="networkAnchorId"> Azure Network Anchor ID. </param>
        /// <param name="clusterName"> The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. </param>
        /// <param name="displayName"> The user-friendly name for the DB system. The name does not have to be unique. </param>
        /// <param name="initialDataStorageSizeInGb"> Size in GB of the initial data volume that will be created and attached to a virtual machine DB system. You can scale up storage after provisioning, as needed. Note that the total storage size attached will be more than the amount you specify to allow for REDO/RECO space and software volume. </param>
        /// <param name="dataStorageSizeInGbs"> The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. </param>
        /// <param name="dbSystemOptions"> The DB system options. </param>
        /// <param name="diskRedundancy"> The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. </param>
        /// <param name="domainV2"> The domain name for the DB system. </param>
        /// <param name="gridImageOcid"> The OCID of a grid infrastructure software image. This is a database software image of the type GRID_IMAGE. </param>
        /// <param name="hostname"> The hostname for the DB system. </param>
        /// <param name="ocid"> The OCID of the DB system. </param>
        /// <param name="licenseModelV2"> The Oracle license model that applies to all the databases on the DB system. The default is LicenseIncluded. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="lifecycleState"> The current state of the DB system. </param>
        /// <param name="listenerPort"> The port number configured for the listener on the DB system. </param>
        /// <param name="memorySizeInGbs"> Memory allocated to the DB system, in gigabytes. </param>
        /// <param name="nodeCount"> The number of nodes in the DB system. For RAC DB systems, the value is greater than 1. </param>
        /// <param name="scanDnsName"> The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system. </param>
        /// <param name="scanIPs"> The list of Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. Note: For a single-node DB system, this list is empty. </param>
        /// <param name="shape"> The shape of the DB system. The shape determines resources to allocate to the DB system. For virtual machine shapes, the number of CPU cores and memory. For bare metal and Exadata shapes, the number of CPU cores, storage, and memory. </param>
        /// <param name="sshPublicKeys"> The public key portion of one or more key pairs used for SSH access to the DB system. </param>
        /// <param name="storageVolumePerformanceMode"> The block storage volume performance level. Valid values are Balanced and HighPerformance. See [Block Volume Performance](/Content/Block/Concepts/blockvolumeperformance.htm) for more information. </param>
        /// <param name="timeZone"> The time zone of the DB system, e.g., UTC, to set the timeZone as UTC. </param>
        /// <param name="version"> The Oracle Database version of the DB system. </param>
        /// <param name="computeModel"> The compute model for Base Database Service. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy. </param>
        /// <param name="computeCount"> The number of compute servers for the DB system. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DbSystemBaseProperties(DbSystemSourceType? source, OracleDatabaseProvisioningState? provisioningState, Uri ociUri, ResourceIdentifier resourceAnchorId, ResourceIdentifier networkAnchorId, string clusterName, string displayName, int? initialDataStorageSizeInGb, int? dataStorageSizeInGbs, DbSystemOptions dbSystemOptions, DiskRedundancyType? diskRedundancy, string domainV2, string gridImageOcid, string hostname, string ocid, OracleLicenseModel? licenseModelV2, string lifecycleDetails, DbSystemLifecycleState? lifecycleState, int? listenerPort, int? memorySizeInGbs, int? nodeCount, string scanDnsName, IReadOnlyList<string> scanIPs, string shape, IList<string> sshPublicKeys, StorageVolumePerformanceMode? storageVolumePerformanceMode, string timeZone, string version, OracleDatabaseComputeModel? computeModel, int? computeCount, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Source = source;
            ProvisioningState = provisioningState;
            OciUri = ociUri;
            ResourceAnchorId = resourceAnchorId;
            NetworkAnchorId = networkAnchorId;
            ClusterName = clusterName;
            DisplayName = displayName;
            InitialDataStorageSizeInGb = initialDataStorageSizeInGb;
            DataStorageSizeInGbs = dataStorageSizeInGbs;
            DbSystemOptions = dbSystemOptions;
            DiskRedundancy = diskRedundancy;
            DomainV2 = domainV2;
            GridImageOcid = gridImageOcid;
            Hostname = hostname;
            Ocid = ocid;
            LicenseModelV2 = licenseModelV2;
            LifecycleDetails = lifecycleDetails;
            LifecycleState = lifecycleState;
            ListenerPort = listenerPort;
            MemorySizeInGbs = memorySizeInGbs;
            NodeCount = nodeCount;
            ScanDnsName = scanDnsName;
            ScanIPs = scanIPs;
            Shape = shape;
            SshPublicKeys = sshPublicKeys;
            StorageVolumePerformanceMode = storageVolumePerformanceMode;
            TimeZone = timeZone;
            Version = version;
            ComputeModel = computeModel;
            ComputeCount = computeCount;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DbSystemBaseProperties"/> for deserialization. </summary>
        internal DbSystemBaseProperties()
        {
        }

        /// <summary> The source of the database: Use `None` for creating a new database. The default is `None`. </summary>
        internal DbSystemSourceType? Source { get; set; }
        /// <summary> dbSystem provisioning state. </summary>
        public OracleDatabaseProvisioningState? ProvisioningState { get; }
        /// <summary> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </summary>
        public Uri OciUri { get; }
        /// <summary> Azure Resource Anchor ID. </summary>
        public ResourceIdentifier ResourceAnchorId { get; set; }
        /// <summary> Azure Network Anchor ID. </summary>
        public ResourceIdentifier NetworkAnchorId { get; set; }
        /// <summary> The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. </summary>
        public string ClusterName { get; set; }
        /// <summary> The user-friendly name for the DB system. The name does not have to be unique. </summary>
        public string DisplayName { get; set; }
        /// <summary> Size in GB of the initial data volume that will be created and attached to a virtual machine DB system. You can scale up storage after provisioning, as needed. Note that the total storage size attached will be more than the amount you specify to allow for REDO/RECO space and software volume. </summary>
        public int? InitialDataStorageSizeInGb { get; set; }
        /// <summary> The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. </summary>
        public int? DataStorageSizeInGbs { get; }
        /// <summary> The DB system options. </summary>
        internal DbSystemOptions DbSystemOptions { get; set; }
        /// <summary> The storage option used in DB system. ASM - Automatic storage management, LVM - Logical Volume management. </summary>
        public StorageManagementType? DbSystemOptionsStorageManagement
        {
            get => DbSystemOptions is null ? default : DbSystemOptions.StorageManagement;
            set
            {
                if (DbSystemOptions is null)
                    DbSystemOptions = new DbSystemOptions();
                DbSystemOptions.StorageManagement = value;
            }
        }

        /// <summary> The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. </summary>
        public DiskRedundancyType? DiskRedundancy { get; set; }
        /// <summary> The domain name for the DB system. </summary>
        public string DomainV2 { get; set; }
        /// <summary> The OCID of a grid infrastructure software image. This is a database software image of the type GRID_IMAGE. </summary>
        public string GridImageOcid { get; }
        /// <summary> The hostname for the DB system. </summary>
        public string Hostname { get; set; }
        /// <summary> The OCID of the DB system. </summary>
        public string Ocid { get; }
        /// <summary> The Oracle license model that applies to all the databases on the DB system. The default is LicenseIncluded. </summary>
        public OracleLicenseModel? LicenseModelV2 { get; set; }
        /// <summary> Additional information about the current lifecycle state. </summary>
        public string LifecycleDetails { get; }
        /// <summary> The current state of the DB system. </summary>
        public DbSystemLifecycleState? LifecycleState { get; }
        /// <summary> The port number configured for the listener on the DB system. </summary>
        public int? ListenerPort { get; }
        /// <summary> Memory allocated to the DB system, in gigabytes. </summary>
        public int? MemorySizeInGbs { get; }
        /// <summary> The number of nodes in the DB system. For RAC DB systems, the value is greater than 1. </summary>
        public int? NodeCount { get; set; }
        /// <summary> The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system. </summary>
        public string ScanDnsName { get; }
        /// <summary> The list of Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. Note: For a single-node DB system, this list is empty. </summary>
        public IReadOnlyList<string> ScanIPs { get; }
        /// <summary> The shape of the DB system. The shape determines resources to allocate to the DB system. For virtual machine shapes, the number of CPU cores and memory. For bare metal and Exadata shapes, the number of CPU cores, storage, and memory. </summary>
        public string Shape { get; set; }
        /// <summary> The public key portion of one or more key pairs used for SSH access to the DB system. </summary>
        public IList<string> SshPublicKeys { get; }
        /// <summary> The block storage volume performance level. Valid values are Balanced and HighPerformance. See [Block Volume Performance](/Content/Block/Concepts/blockvolumeperformance.htm) for more information. </summary>
        public StorageVolumePerformanceMode? StorageVolumePerformanceMode { get; set; }
        /// <summary> The time zone of the DB system, e.g., UTC, to set the timeZone as UTC. </summary>
        public string TimeZone { get; set; }
        /// <summary> The Oracle Database version of the DB system. </summary>
        public string Version { get; }
        /// <summary> The compute model for Base Database Service. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy. </summary>
        public OracleDatabaseComputeModel? ComputeModel { get; set; }
        /// <summary> The number of compute servers for the DB system. </summary>
        public int? ComputeCount { get; set; }
    }
}
