// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ExtendedLocation.Models
{
    /// <summary> The Resource Sync Rules patchable resource definition. </summary>
    public partial class ResourceSyncRulePatch
    {
        /// <summary> Initializes a new instance of ResourceSyncRulePatch. </summary>
        public ResourceSyncRulePatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> Priority represents a priority of the Resource Sync Rule. </summary>
        public int? Priority { get; set; }
        /// <summary> Provisioning State for the Resource Sync Rule. </summary>
        public string ProvisioningState { get; }
        /// <summary> A label selector is composed of two parts, matchLabels and matchExpressions. The first part, matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &apos;key&apos;, the operator is &apos;In&apos;, and the values array contains only &apos;value&apos;. The second part, matchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn. The values set must be empty in the case of Exists and DoesNotExist. All of the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match. </summary>
        public ResourceSyncRulePropertiesSelector Selector { get; set; }
        /// <summary> For an unmapped custom resource, its labels will be used to find matching resource sync rules. If this resource sync rule is one of the matching rules with highest priority, then the unmapped custom resource will be projected to the target resource group associated with this resource sync rule. The user creating this resource sync rule should have write permissions on the target resource group and this write permission will be validated when creating the resource sync rule. </summary>
        public string TargetResourceGroup { get; set; }
    }
}
