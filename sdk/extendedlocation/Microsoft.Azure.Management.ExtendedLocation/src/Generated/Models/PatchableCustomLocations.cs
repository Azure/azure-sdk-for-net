// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ExtendedLocation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Custom Locations patchable resource definition.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PatchableCustomLocations : IResource
    {
        /// <summary>
        /// Initializes a new instance of the PatchableCustomLocations class.
        /// </summary>
        public PatchableCustomLocations()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PatchableCustomLocations class.
        /// </summary>
        /// <param name="authentication">This is optional input that contains
        /// the authentication that should be used to generate the
        /// namespace.</param>
        /// <param name="clusterExtensionIds">Contains the reference to the
        /// add-on that contains charts to deploy CRDs and operators.</param>
        /// <param name="displayName">Display name for the Custom Locations
        /// location.</param>
        /// <param name="hostResourceId">Connected Cluster or AKS Cluster. The
        /// Custom Locations RP will perform a checkAccess API for
        /// listAdminCredentials permissions.</param>
        /// <param name="hostType">Type of host the Custom Locations is
        /// referencing (Kubernetes, etc...). Possible values include:
        /// 'Kubernetes'</param>
        /// <param name="namespaceProperty">Kubernetes namespace that will be
        /// created on the specified cluster.</param>
        /// <param name="provisioningState">Provisioning State for the Custom
        /// Location.</param>
        /// <param name="tags">Resource tags</param>
        public PatchableCustomLocations(CustomLocationPropertiesAuthentication authentication = default(CustomLocationPropertiesAuthentication), IList<string> clusterExtensionIds = default(IList<string>), string displayName = default(string), string hostResourceId = default(string), string hostType = default(string), string namespaceProperty = default(string), string provisioningState = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            Authentication = authentication;
            ClusterExtensionIds = clusterExtensionIds;
            DisplayName = displayName;
            HostResourceId = hostResourceId;
            HostType = hostType;
            NamespaceProperty = namespaceProperty;
            ProvisioningState = provisioningState;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets this is optional input that contains the
        /// authentication that should be used to generate the namespace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.authentication")]
        public CustomLocationPropertiesAuthentication Authentication { get; set; }

        /// <summary>
        /// Gets or sets contains the reference to the add-on that contains
        /// charts to deploy CRDs and operators.
        /// </summary>
        [JsonProperty(PropertyName = "properties.clusterExtensionIds")]
        public IList<string> ClusterExtensionIds { get; set; }

        /// <summary>
        /// Gets or sets display name for the Custom Locations location.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets connected Cluster or AKS Cluster. The Custom Locations
        /// RP will perform a checkAccess API for listAdminCredentials
        /// permissions.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostResourceId")]
        public string HostResourceId { get; set; }

        /// <summary>
        /// Gets or sets type of host the Custom Locations is referencing
        /// (Kubernetes, etc...). Possible values include: 'Kubernetes'
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostType")]
        public string HostType { get; set; }

        /// <summary>
        /// Gets or sets kubernetes namespace that will be created on the
        /// specified cluster.
        /// </summary>
        [JsonProperty(PropertyName = "properties.namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets provisioning State for the Custom Location.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets resource tags
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

    }
}
