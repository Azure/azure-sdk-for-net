// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ExtendedLocation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Custom Locations operation.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CustomLocationOperation
    {
        /// <summary>
        /// Initializes a new instance of the CustomLocationOperation class.
        /// </summary>
        public CustomLocationOperation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomLocationOperation class.
        /// </summary>
        /// <param name="description">The description of the operation.</param>
        /// <param name="operation">The display name of the compute
        /// operation.</param>
        /// <param name="provider">The resource provider for the
        /// operation.</param>
        /// <param name="resource">The display name of the resource the
        /// operation applies to.</param>
        /// <param name="isDataAction">Is this Operation a data plane
        /// operation</param>
        /// <param name="name">The name of the compute operation.</param>
        /// <param name="origin">The origin of the compute operation.</param>
        public CustomLocationOperation(string description = default(string), string operation = default(string), string provider = default(string), string resource = default(string), bool? isDataAction = default(bool?), string name = default(string), string origin = default(string))
        {
            Description = description;
            Operation = operation;
            Provider = provider;
            Resource = resource;
            IsDataAction = isDataAction;
            Name = name;
            Origin = origin;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the description of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "display.description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets the display name of the compute operation.
        /// </summary>
        [JsonProperty(PropertyName = "display.operation")]
        public string Operation { get; private set; }

        /// <summary>
        /// Gets the resource provider for the operation.
        /// </summary>
        [JsonProperty(PropertyName = "display.provider")]
        public string Provider { get; private set; }

        /// <summary>
        /// Gets the display name of the resource the operation applies to.
        /// </summary>
        [JsonProperty(PropertyName = "display.resource")]
        public string Resource { get; private set; }

        /// <summary>
        /// Gets is this Operation a data plane operation
        /// </summary>
        [JsonProperty(PropertyName = "isDataAction")]
        public bool? IsDataAction { get; private set; }

        /// <summary>
        /// Gets the name of the compute operation.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the origin of the compute operation.
        /// </summary>
        [JsonProperty(PropertyName = "origin")]
        public string Origin { get; private set; }

    }
}
