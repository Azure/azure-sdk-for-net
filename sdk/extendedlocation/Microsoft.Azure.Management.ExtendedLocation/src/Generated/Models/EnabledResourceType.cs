// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ExtendedLocation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// EnabledResourceType definition.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EnabledResourceType : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the EnabledResourceType class.
        /// </summary>
        public EnabledResourceType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnabledResourceType class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="clusterExtensionId">Cluster Extension ID</param>
        /// <param name="extensionType">Cluster Extension Type</param>
        /// <param name="typesMetadata">Metadata of the Resource Type</param>
        /// <param name="systemData">Metadata pertaining to creation and last
        /// modification of the resource</param>
        public EnabledResourceType(string id = default(string), string name = default(string), string type = default(string), string clusterExtensionId = default(string), string extensionType = default(string), IList<EnabledResourceTypePropertiesTypesMetadataItem> typesMetadata = default(IList<EnabledResourceTypePropertiesTypesMetadataItem>), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            ClusterExtensionId = clusterExtensionId;
            ExtensionType = extensionType;
            TypesMetadata = typesMetadata;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets cluster Extension ID
        /// </summary>
        [JsonProperty(PropertyName = "properties.clusterExtensionId")]
        public string ClusterExtensionId { get; set; }

        /// <summary>
        /// Gets or sets cluster Extension Type
        /// </summary>
        [JsonProperty(PropertyName = "properties.extensionType")]
        public string ExtensionType { get; set; }

        /// <summary>
        /// Gets or sets metadata of the Resource Type
        /// </summary>
        [JsonProperty(PropertyName = "properties.typesMetadata")]
        public IList<EnabledResourceTypePropertiesTypesMetadataItem> TypesMetadata { get; set; }

        /// <summary>
        /// Gets metadata pertaining to creation and last modification of the
        /// resource
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
