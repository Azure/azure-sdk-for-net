// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Security.ConfidentialLedger.Models
{
    /// <summary> The ReceiptContents. </summary>
    public partial class ReceiptContents
    {
        /// <summary> Initializes a new instance of ReceiptContents. </summary>
        /// <param name="nodeId"></param>
        /// <param name="proof"></param>
        /// <param name="signature"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="nodeId"/>, <paramref name="proof"/> or <paramref name="signature"/> is null. </exception>
        internal ReceiptContents(string nodeId, IEnumerable<ReceiptElement> proof, string signature)
        {
            if (nodeId == null)
            {
                throw new ArgumentNullException(nameof(nodeId));
            }
            if (proof == null)
            {
                throw new ArgumentNullException(nameof(proof));
            }
            if (signature == null)
            {
                throw new ArgumentNullException(nameof(signature));
            }

            NodeId = nodeId;
            Proof = proof.ToList();
            ServiceEndorsements = new ChangeTrackingList<string>();
            Signature = signature;
        }

        /// <summary> Initializes a new instance of ReceiptContents. </summary>
        /// <param name="cert"></param>
        /// <param name="leaf"></param>
        /// <param name="leafComponents"></param>
        /// <param name="nodeId"></param>
        /// <param name="proof"></param>
        /// <param name="root"></param>
        /// <param name="serviceEndorsements"></param>
        /// <param name="signature"></param>
        internal ReceiptContents(string cert, string leaf, ReceiptLeafComponents leafComponents, string nodeId, IReadOnlyList<ReceiptElement> proof, string root, IReadOnlyList<string> serviceEndorsements, string signature)
        {
            Cert = cert;
            Leaf = leaf;
            LeafComponents = leafComponents;
            NodeId = nodeId;
            Proof = proof;
            Root = root;
            ServiceEndorsements = serviceEndorsements;
            Signature = signature;
        }

        /// <summary> Gets the cert. </summary>
        public string Cert { get; }
        /// <summary> Gets the leaf. </summary>
        public string Leaf { get; }
        /// <summary> Gets the leaf components. </summary>
        public ReceiptLeafComponents LeafComponents { get; }
        /// <summary> Gets the node id. </summary>
        public string NodeId { get; }
        /// <summary> Gets the proof. </summary>
        public IReadOnlyList<ReceiptElement> Proof { get; }
        /// <summary> Gets the root. </summary>
        public string Root { get; }
        /// <summary> Gets the service endorsements. </summary>
        public IReadOnlyList<string> ServiceEndorsements { get; }
        /// <summary> Gets the signature. </summary>
        public string Signature { get; }
    }
}
