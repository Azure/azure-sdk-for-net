// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Security.ConfidentialLedger.Models
{
    /// <summary> Contains the information about a Confidential Ledger. </summary>
    public partial class LedgerIdentityInformation
    {
        /// <summary> Initializes a new instance of LedgerIdentityInformation. </summary>
        /// <param name="ledgerTlsCertificate"> PEM-encoded certificate used for TLS by the Confidential Ledger. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="ledgerTlsCertificate"/> is null. </exception>
        internal LedgerIdentityInformation(string ledgerTlsCertificate)
        {
            if (ledgerTlsCertificate == null)
            {
                throw new ArgumentNullException(nameof(ledgerTlsCertificate));
            }

            LedgerTlsCertificate = ledgerTlsCertificate;
        }

        /// <summary> Initializes a new instance of LedgerIdentityInformation. </summary>
        /// <param name="ledgerId"> Id for the ledger. </param>
        /// <param name="ledgerTlsCertificate"> PEM-encoded certificate used for TLS by the Confidential Ledger. </param>
        internal LedgerIdentityInformation(string ledgerId, string ledgerTlsCertificate)
        {
            LedgerId = ledgerId;
            LedgerTlsCertificate = ledgerTlsCertificate;
        }

        /// <summary> Id for the ledger. </summary>
        public string LedgerId { get; }
        /// <summary> PEM-encoded certificate used for TLS by the Confidential Ledger. </summary>
        public string LedgerTlsCertificate { get; }
    }
}
