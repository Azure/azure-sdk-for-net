// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Security.ConfidentialLedger.Models
{
    /// <summary> Information about the enclaves running the Confidential Ledger. </summary>
    public partial class ConfidentialLedgerEnclaves
    {
        /// <summary> Initializes a new instance of ConfidentialLedgerEnclaves. </summary>
        /// <param name="currentNodeId"> Id of the Confidential Ledger node responding to the request. </param>
        /// <param name="enclaveQuotes"> Dictionary of enclave quotes, indexed by node id. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="currentNodeId"/> or <paramref name="enclaveQuotes"/> is null. </exception>
        internal ConfidentialLedgerEnclaves(string currentNodeId, IReadOnlyDictionary<string, EnclaveQuote> enclaveQuotes)
        {
            if (currentNodeId == null)
            {
                throw new ArgumentNullException(nameof(currentNodeId));
            }
            if (enclaveQuotes == null)
            {
                throw new ArgumentNullException(nameof(enclaveQuotes));
            }

            CurrentNodeId = currentNodeId;
            EnclaveQuotes = enclaveQuotes;
        }

        /// <summary> Id of the Confidential Ledger node responding to the request. </summary>
        public string CurrentNodeId { get; }
        /// <summary> Dictionary of enclave quotes, indexed by node id. </summary>
        public IReadOnlyDictionary<string, EnclaveQuote> EnclaveQuotes { get; }
    }
}
