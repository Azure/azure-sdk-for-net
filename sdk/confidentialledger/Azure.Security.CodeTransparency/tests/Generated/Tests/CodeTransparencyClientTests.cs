// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Security.CodeTransparency.Tests
{
    public partial class CodeTransparencyClientTests : SecurityCodeTransparencyTestBase
    {
        public CodeTransparencyClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntryStatus_GetEntryStatus()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response response = await client.GetEntryStatusAsync("2.123", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntryStatus_GetEntryStatus_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response<GetOperationResult> response = await client.GetEntryStatusAsync("2.123");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntryStatuses_ListEntryStatuses()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response response = await client.GetEntryStatusesAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntryStatuses_ListEntryStatuses_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response<ListOperationResult> response = await client.GetEntryStatusesAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntry_GetEntry()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response response = await client.GetEntryAsync("2.131", null, null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntry_GetEntry_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response<BinaryData> response = await client.GetEntryAsync("2.131");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntryReceipt_GetEntryReceipt()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response response = await client.GetEntryReceiptAsync("2.131", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntryReceipt_GetEntryReceipt_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response<BinaryData> response = await client.GetEntryReceiptAsync("2.131");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetParameters_GetParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response response = await client.GetParametersAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetParameters_GetParameters_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response<ParametersResult> response = await client.GetParametersAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetDidConfig_GetDidConfig()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response response = await client.GetDidConfigAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetDidConfig_GetDidConfig_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response<DidDocument> response = await client.GetDidConfigAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetCodeTransparencyConfig_GetCodeTransparencyConfig()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response response = await client.GetCodeTransparencyConfigAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetCodeTransparencyConfig_GetCodeTransparencyConfig_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response<CodeTransparencyConfiguration> response = await client.GetCodeTransparencyConfigAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetCodeTransparencyVersion_GetCodeTransparencyVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response response = await client.GetCodeTransparencyVersionAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetCodeTransparencyVersion_GetCodeTransparencyVersion_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            Response<VersionResult> response = await client.GetCodeTransparencyVersionAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntryIds_ListEntryIds()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            await foreach (BinaryData item in client.GetEntryIdsAsync(null, null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CodeTransparency_GetEntryIds_ListEntryIds_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            CodeTransparencyClient client = CreateCodeTransparencyClient(endpoint, credential);

            await foreach (string item in client.GetEntryIdsAsync())
            {
            }
        }
    }
}
