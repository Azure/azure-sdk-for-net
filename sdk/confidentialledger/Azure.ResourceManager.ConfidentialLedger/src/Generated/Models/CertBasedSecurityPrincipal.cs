// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ConfidentialLedger.Models
{
    /// <summary> Cert based security principal with Ledger RoleName. </summary>
    public partial class CertBasedSecurityPrincipal
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="CertBasedSecurityPrincipal"/>. </summary>
        public CertBasedSecurityPrincipal()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CertBasedSecurityPrincipal"/>. </summary>
        /// <param name="cert"> Public key of the user cert (.pem or .cer). </param>
        /// <param name="ledgerRoleName"> LedgerRole associated with the Security Principal of Ledger. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal CertBasedSecurityPrincipal(string cert, ConfidentialLedgerRoleName? ledgerRoleName, Dictionary<string, BinaryData> rawData)
        {
            Cert = cert;
            LedgerRoleName = ledgerRoleName;
            _rawData = rawData;
        }

        /// <summary> Public key of the user cert (.pem or .cer). </summary>
        public string Cert { get; set; }
        /// <summary> LedgerRole associated with the Security Principal of Ledger. </summary>
        public ConfidentialLedgerRoleName? LedgerRoleName { get; set; }
    }
}
