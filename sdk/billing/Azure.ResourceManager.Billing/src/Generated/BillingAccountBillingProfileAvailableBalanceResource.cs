// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Globalization;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.ResourceManager.Billing
{
    /// <summary>
    /// A Class representing a BillingAccountBillingProfileAvailableBalance along with the instance operations that can be performed on it.
    /// If you have a <see cref="ResourceIdentifier"/> you can construct a <see cref="BillingAccountBillingProfileAvailableBalanceResource"/>
    /// from an instance of <see cref="ArmClient"/> using the GetBillingAccountBillingProfileAvailableBalanceResource method.
    /// Otherwise you can get one from its parent resource <see cref="BillingProfileResource"/> using the GetBillingAccountBillingProfileAvailableBalance method.
    /// </summary>
    public partial class BillingAccountBillingProfileAvailableBalanceResource : ArmResource
    {
        /// <summary> Generate the resource identifier of a <see cref="BillingAccountBillingProfileAvailableBalanceResource"/> instance. </summary>
        /// <param name="billingAccountName"> The billingAccountName. </param>
        /// <param name="billingProfileName"> The billingProfileName. </param>
        public static ResourceIdentifier CreateResourceIdentifier(string billingAccountName, string billingProfileName)
        {
            var resourceId = $"/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/availableBalance/default";
            return new ResourceIdentifier(resourceId);
        }

        private readonly ClientDiagnostics _billingAccountBillingProfileAvailableBalanceAvailableBalancesClientDiagnostics;
        private readonly AvailableBalancesRestOperations _billingAccountBillingProfileAvailableBalanceAvailableBalancesRestClient;
        private readonly AvailableBalanceData _data;

        /// <summary> Gets the resource type for the operations. </summary>
        public static readonly ResourceType ResourceType = "Microsoft.Billing/billingAccounts/billingProfiles/availableBalance";

        /// <summary> Initializes a new instance of the <see cref="BillingAccountBillingProfileAvailableBalanceResource"/> class for mocking. </summary>
        protected BillingAccountBillingProfileAvailableBalanceResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="BillingAccountBillingProfileAvailableBalanceResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="data"> The resource that is the target of operations. </param>
        internal BillingAccountBillingProfileAvailableBalanceResource(ArmClient client, AvailableBalanceData data) : this(client, data.Id)
        {
            HasData = true;
            _data = data;
        }

        /// <summary> Initializes a new instance of the <see cref="BillingAccountBillingProfileAvailableBalanceResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal BillingAccountBillingProfileAvailableBalanceResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
            _billingAccountBillingProfileAvailableBalanceAvailableBalancesClientDiagnostics = new ClientDiagnostics("Azure.ResourceManager.Billing", ResourceType.Namespace, Diagnostics);
            TryGetApiVersion(ResourceType, out string billingAccountBillingProfileAvailableBalanceAvailableBalancesApiVersion);
            _billingAccountBillingProfileAvailableBalanceAvailableBalancesRestClient = new AvailableBalancesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, billingAccountBillingProfileAvailableBalanceAvailableBalancesApiVersion);
#if DEBUG
			ValidateResourceId(Id);
#endif
        }

        /// <summary> Gets whether or not the current instance has data. </summary>
        public virtual bool HasData { get; }

        /// <summary> Gets the data representing this Feature. </summary>
        /// <exception cref="InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        public virtual AvailableBalanceData Data
        {
            get
            {
                if (!HasData)
                    throw new InvalidOperationException("The current instance does not have data, you must call Get first.");
                return _data;
            }
        }

        internal static void ValidateResourceId(ResourceIdentifier id)
        {
            if (id.ResourceType != ResourceType)
                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture, "Invalid resource type {0} expected {1}", id.ResourceType, ResourceType), nameof(id));
        }

        /// <summary>
        /// The Available Credit or Payment on Account Balance for a billing profile. The credit balance can be used to settle due or past due invoices and is supported for billing accounts with agreement type Microsoft Customer Agreement. The payment on account balance is supported for billing accounts with agreement type Microsoft Customer Agreement.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/availableBalance/default</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AvailableBalances_GetByBillingProfile</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-04-01</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="BillingAccountBillingProfileAvailableBalanceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<BillingAccountBillingProfileAvailableBalanceResource>> GetAsync(CancellationToken cancellationToken = default)
        {
            using var scope = _billingAccountBillingProfileAvailableBalanceAvailableBalancesClientDiagnostics.CreateScope("BillingAccountBillingProfileAvailableBalanceResource.Get");
            scope.Start();
            try
            {
                var response = await _billingAccountBillingProfileAvailableBalanceAvailableBalancesRestClient.GetByBillingProfileAsync(Id.Parent.Parent.Name, Id.Parent.Name, cancellationToken).ConfigureAwait(false);
                if (response.Value == null)
                    throw new RequestFailedException(response.GetRawResponse());
                return Response.FromValue(new BillingAccountBillingProfileAvailableBalanceResource(Client, response.Value), response.GetRawResponse());
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// The Available Credit or Payment on Account Balance for a billing profile. The credit balance can be used to settle due or past due invoices and is supported for billing accounts with agreement type Microsoft Customer Agreement. The payment on account balance is supported for billing accounts with agreement type Microsoft Customer Agreement.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/availableBalance/default</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AvailableBalances_GetByBillingProfile</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-04-01</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="BillingAccountBillingProfileAvailableBalanceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<BillingAccountBillingProfileAvailableBalanceResource> Get(CancellationToken cancellationToken = default)
        {
            using var scope = _billingAccountBillingProfileAvailableBalanceAvailableBalancesClientDiagnostics.CreateScope("BillingAccountBillingProfileAvailableBalanceResource.Get");
            scope.Start();
            try
            {
                var response = _billingAccountBillingProfileAvailableBalanceAvailableBalancesRestClient.GetByBillingProfile(Id.Parent.Parent.Name, Id.Parent.Name, cancellationToken);
                if (response.Value == null)
                    throw new RequestFailedException(response.GetRawResponse());
                return Response.FromValue(new BillingAccountBillingProfileAvailableBalanceResource(Client, response.Value), response.GetRawResponse());
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
