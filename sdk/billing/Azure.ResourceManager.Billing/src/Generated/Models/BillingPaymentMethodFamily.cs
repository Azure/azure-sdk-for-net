// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Billing.Models
{
    /// <summary> Payment on Account type. </summary>
    public readonly partial struct BillingPaymentMethodFamily : IEquatable<BillingPaymentMethodFamily>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="BillingPaymentMethodFamily"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public BillingPaymentMethodFamily(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string OtherValue = "Other";
        private const string NoneValue = "None";
        private const string CreditCardValue = "CreditCard";
        private const string CreditsValue = "Credits";
        private const string CheckWireValue = "CheckWire";
        private const string EWalletValue = "EWallet";
        private const string TaskOrderValue = "TaskOrder";
        private const string DirectDebitValue = "DirectDebit";

        /// <summary> Other. </summary>
        public static BillingPaymentMethodFamily Other { get; } = new BillingPaymentMethodFamily(OtherValue);
        /// <summary> None. </summary>
        public static BillingPaymentMethodFamily None { get; } = new BillingPaymentMethodFamily(NoneValue);
        /// <summary> CreditCard. </summary>
        public static BillingPaymentMethodFamily CreditCard { get; } = new BillingPaymentMethodFamily(CreditCardValue);
        /// <summary> Credits. </summary>
        public static BillingPaymentMethodFamily Credits { get; } = new BillingPaymentMethodFamily(CreditsValue);
        /// <summary> CheckWire. </summary>
        public static BillingPaymentMethodFamily CheckWire { get; } = new BillingPaymentMethodFamily(CheckWireValue);
        /// <summary> EWallet. </summary>
        public static BillingPaymentMethodFamily EWallet { get; } = new BillingPaymentMethodFamily(EWalletValue);
        /// <summary> TaskOrder. </summary>
        public static BillingPaymentMethodFamily TaskOrder { get; } = new BillingPaymentMethodFamily(TaskOrderValue);
        /// <summary> DirectDebit. </summary>
        public static BillingPaymentMethodFamily DirectDebit { get; } = new BillingPaymentMethodFamily(DirectDebitValue);
        /// <summary> Determines if two <see cref="BillingPaymentMethodFamily"/> values are the same. </summary>
        public static bool operator ==(BillingPaymentMethodFamily left, BillingPaymentMethodFamily right) => left.Equals(right);
        /// <summary> Determines if two <see cref="BillingPaymentMethodFamily"/> values are not the same. </summary>
        public static bool operator !=(BillingPaymentMethodFamily left, BillingPaymentMethodFamily right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="BillingPaymentMethodFamily"/>. </summary>
        public static implicit operator BillingPaymentMethodFamily(string value) => new BillingPaymentMethodFamily(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is BillingPaymentMethodFamily other && Equals(other);
        /// <inheritdoc />
        public bool Equals(BillingPaymentMethodFamily other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
