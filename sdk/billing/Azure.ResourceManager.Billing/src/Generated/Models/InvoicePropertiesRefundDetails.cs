// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Billing.Models
{
    /// <summary> The details of a refund request. </summary>
    public partial class InvoicePropertiesRefundDetails : RefundDetailsSummary
    {
        /// <summary> Initializes a new instance of <see cref="InvoicePropertiesRefundDetails"/>. </summary>
        public InvoicePropertiesRefundDetails()
        {
        }

        /// <summary> Initializes a new instance of <see cref="InvoicePropertiesRefundDetails"/>. </summary>
        /// <param name="requestedOn"> Date when the refund was requested. </param>
        /// <param name="approvedOn"> Date when the refund was approved. </param>
        /// <param name="completedOn"> Date when the refund was completed. </param>
        /// <param name="amountRequested"> The amount of refund requested. </param>
        /// <param name="amountRefunded"> The amount refunded. </param>
        /// <param name="rebillInvoiceId"> The invoice ID of the rebill invoice for a refund. </param>
        /// <param name="transactionCount"> The number of transactions refunded. </param>
        /// <param name="refundStatus"> The status of refund request. </param>
        /// <param name="refundOperationId"> The ID of refund operation. </param>
        /// <param name="refundReason"> The reason for refund. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal InvoicePropertiesRefundDetails(DateTimeOffset? requestedOn, DateTimeOffset? approvedOn, DateTimeOffset? completedOn, RefundDetailsSummaryAmountRequested amountRequested, RefundDetailsSummaryAmountRefunded amountRefunded, string rebillInvoiceId, int? transactionCount, RefundStatus? refundStatus, string refundOperationId, RefundReasonCode? refundReason, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(requestedOn, approvedOn, completedOn, amountRequested, amountRefunded, rebillInvoiceId, transactionCount, refundStatus, refundOperationId, refundReason, serializedAdditionalRawData)
        {
        }
    }
}
