// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Billing;

namespace Azure.ResourceManager.Billing.Testing
{
    /// <summary> A class to add extension methods to TenantResource. </summary>
    public partial class BillingTenantResourceExtension : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="BillingTenantResourceExtension"/> class for mocking. </summary>
        protected BillingTenantResourceExtension()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="BillingTenantResourceExtension"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal BillingTenantResourceExtension(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of BillingSubscriptionResources in the TenantResource. </summary>
        /// <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        /// <exception cref="ArgumentException"> <paramref name="billingAccountName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="billingAccountName"/> is null. </exception>
        /// <returns> An object representing collection of BillingSubscriptionResources and their operations over a BillingSubscriptionResource. </returns>
        public virtual BillingSubscriptionCollection GetBillingSubscriptions(string billingAccountName)
        {
            Argument.AssertNotNullOrEmpty(billingAccountName, nameof(billingAccountName));

            return new BillingSubscriptionCollection(Client, Id, billingAccountName);
        }

        /// <summary> Gets a collection of BillingSubscriptionAliasResources in the TenantResource. </summary>
        /// <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        /// <exception cref="ArgumentException"> <paramref name="billingAccountName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="billingAccountName"/> is null. </exception>
        /// <returns> An object representing collection of BillingSubscriptionAliasResources and their operations over a BillingSubscriptionAliasResource. </returns>
        public virtual BillingSubscriptionAliasCollection GetBillingSubscriptionAliases(string billingAccountName)
        {
            Argument.AssertNotNullOrEmpty(billingAccountName, nameof(billingAccountName));

            return new BillingSubscriptionAliasCollection(Client, Id, billingAccountName);
        }

        /// <summary> Gets a collection of BillingPaymentMethodResources in the TenantResource. </summary>
        /// <returns> An object representing collection of BillingPaymentMethodResources and their operations over a BillingPaymentMethodResource. </returns>
        public virtual BillingPaymentMethodCollection GetBillingPaymentMethods()
        {
            return GetCachedClient(Client => new BillingPaymentMethodCollection(Client, Id));
        }

        /// <summary> Gets a collection of BillingAccountPaymentMethodResources in the TenantResource. </summary>
        /// <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        /// <exception cref="ArgumentException"> <paramref name="billingAccountName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="billingAccountName"/> is null. </exception>
        /// <returns> An object representing collection of BillingAccountPaymentMethodResources and their operations over a BillingAccountPaymentMethodResource. </returns>
        public virtual BillingAccountPaymentMethodCollection GetBillingAccountPaymentMethods(string billingAccountName)
        {
            Argument.AssertNotNullOrEmpty(billingAccountName, nameof(billingAccountName));

            return new BillingAccountPaymentMethodCollection(Client, Id, billingAccountName);
        }

        /// <summary> Gets a collection of BillingPaymentMethodLinkResources in the TenantResource. </summary>
        /// <param name="billingAccountName"> The ID that uniquely identifies a billing account. </param>
        /// <param name="billingProfileName"> The ID that uniquely identifies a billing profile. </param>
        /// <exception cref="ArgumentException"> <paramref name="billingAccountName"/> or <paramref name="billingProfileName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="billingAccountName"/> or <paramref name="billingProfileName"/> is null. </exception>
        /// <returns> An object representing collection of BillingPaymentMethodLinkResources and their operations over a BillingPaymentMethodLinkResource. </returns>
        public virtual BillingPaymentMethodLinkCollection GetBillingPaymentMethodLinks(string billingAccountName, string billingProfileName)
        {
            Argument.AssertNotNullOrEmpty(billingAccountName, nameof(billingAccountName));
            Argument.AssertNotNullOrEmpty(billingProfileName, nameof(billingProfileName));

            return new BillingPaymentMethodLinkCollection(Client, Id, billingAccountName, billingProfileName);
        }
    }
}
