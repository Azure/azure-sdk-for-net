// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using System.Xml;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Billing;

namespace Azure.ResourceManager.Billing.Samples
{
    public partial class Sample_BillingSubscriptionAliasCollection
    {
        // BillingSubscriptionAliasListByBillingAccount
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_BillingSubscriptionAliasListByBillingAccount()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/BillingSubscriptionAliasListByBillingAccount.json
            // this example is just showing the usage of "BillingSubscriptionsAliases_ListByBillingAccount" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TenantResource created on azure
            // for more information of creating TenantResource, please refer to the document of TenantResource
            var tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // get the collection of this BillingSubscriptionAliasResource
            string billingAccountName = "{billingAccountName}";
            BillingSubscriptionAliasCollection collection = tenantResource.GetBillingSubscriptionAliases(billingAccountName);

            // invoke the operation and iterate over the result
            await foreach (BillingSubscriptionAliasResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                BillingSubscriptionAliasData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // BillingSubscriptionAlias
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_BillingSubscriptionAlias()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/BillingSubscriptionAlias.json
            // this example is just showing the usage of "BillingSubscriptionsAliases_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TenantResource created on azure
            // for more information of creating TenantResource, please refer to the document of TenantResource
            var tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // get the collection of this BillingSubscriptionAliasResource
            string billingAccountName = "{billingAccountName}";
            BillingSubscriptionAliasCollection collection = tenantResource.GetBillingSubscriptionAliases(billingAccountName);

            // invoke the operation
            string aliasName = "c356b7c7-7545-4686-b843-c1a49cf853fc";
            BillingSubscriptionAliasResource result = await collection.GetAsync(aliasName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingSubscriptionAliasData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // BillingSubscriptionAlias
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_BillingSubscriptionAlias()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/BillingSubscriptionAlias.json
            // this example is just showing the usage of "BillingSubscriptionsAliases_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TenantResource created on azure
            // for more information of creating TenantResource, please refer to the document of TenantResource
            var tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // get the collection of this BillingSubscriptionAliasResource
            string billingAccountName = "{billingAccountName}";
            BillingSubscriptionAliasCollection collection = tenantResource.GetBillingSubscriptionAliases(billingAccountName);

            // invoke the operation
            string aliasName = "c356b7c7-7545-4686-b843-c1a49cf853fc";
            bool result = await collection.ExistsAsync(aliasName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // BillingSubscriptionAlias
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_BillingSubscriptionAlias()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/BillingSubscriptionAlias.json
            // this example is just showing the usage of "BillingSubscriptionsAliases_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TenantResource created on azure
            // for more information of creating TenantResource, please refer to the document of TenantResource
            var tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // get the collection of this BillingSubscriptionAliasResource
            string billingAccountName = "{billingAccountName}";
            BillingSubscriptionAliasCollection collection = tenantResource.GetBillingSubscriptionAliases(billingAccountName);

            // invoke the operation
            string aliasName = "c356b7c7-7545-4686-b843-c1a49cf853fc";
            NullableResponse<BillingSubscriptionAliasResource> response = await collection.GetIfExistsAsync(aliasName);
            BillingSubscriptionAliasResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                BillingSubscriptionAliasData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // PutBillingSubscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_PutBillingSubscription()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/PutBillingSubscriptionAlias.json
            // this example is just showing the usage of "BillingSubscriptionsAliases_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TenantResource created on azure
            // for more information of creating TenantResource, please refer to the document of TenantResource
            var tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // get the collection of this BillingSubscriptionAliasResource
            string billingAccountName = "{billingAccountName}";
            BillingSubscriptionAliasCollection collection = tenantResource.GetBillingSubscriptionAliases(billingAccountName);

            // invoke the operation
            string aliasName = "c356b7c7-7545-4686-b843-c1a49cf853fc";
            BillingSubscriptionAliasData data = new BillingSubscriptionAliasData()
            {
                BillingFrequency = "P1M",
                BillingProfileId = new ResourceIdentifier("/providers/Microsoft.Billing/BillingAccounts/{billingAccountName}/billingProfiles/2b72f936-0166-47d6-91a3-ef9f84f36664"),
                CustomerId = "e259ec08-fc9f-481c-a052-8b0c83a3a051",
                DisplayName = "Subscription 3",
                InvoiceSectionId = new ResourceIdentifier("/providers/Microsoft.Billing/BillingAccounts/{billingAccountName}/billingProfiles/2b72f936-0166-47d6-91a3-ef9f84f36664/5c562559-e31b-4bfe-b608-f8b5b3fbd073"),
                ProductTypeId = "CFQ7TTC0LDPB",
                Quantity = 4,
                SkuId = "0001",
                TermDuration = XmlConvert.ToTimeSpan("P1Y"),
            };
            ArmOperation<BillingSubscriptionAliasResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, aliasName, data);
            BillingSubscriptionAliasResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingSubscriptionAliasData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
