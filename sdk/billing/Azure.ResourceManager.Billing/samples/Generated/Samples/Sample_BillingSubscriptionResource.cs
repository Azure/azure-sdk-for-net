// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using System.Xml;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Billing;
using Azure.ResourceManager.Billing.Models;

namespace Azure.ResourceManager.Billing.Samples
{
    public partial class Sample_BillingSubscriptionResource
    {
        // BillingSubscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_BillingSubscription()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/BillingSubscription.json
            // this example is just showing the usage of "BillingSubscriptions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingSubscriptionResource created on azure
            // for more information of creating BillingSubscriptionResource, please refer to the document of BillingSubscriptionResource
            string billingAccountName = "{billingAccountName}";
            string billingSubscriptionName = "418b0e9c-5dc3-4260-918f-30b90619fe07";
            ResourceIdentifier billingSubscriptionResourceId = BillingSubscriptionResource.CreateResourceIdentifier(billingAccountName, billingSubscriptionName);
            BillingSubscriptionResource billingSubscription = client.GetBillingSubscriptionResource(billingSubscriptionResourceId);

            // invoke the operation
            BillingSubscriptionResource result = await billingSubscription.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // UpdateBillingProperty
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateBillingProperty()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/UpdateBillingSubscription.json
            // this example is just showing the usage of "BillingSubscriptions_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingSubscriptionResource created on azure
            // for more information of creating BillingSubscriptionResource, please refer to the document of BillingSubscriptionResource
            string billingAccountName = "{billingAccountName}";
            string billingSubscriptionName = "418b0e9c-5dc3-4260-918f-30b90619fe07";
            ResourceIdentifier billingSubscriptionResourceId = BillingSubscriptionResource.CreateResourceIdentifier(billingAccountName, billingSubscriptionName);
            BillingSubscriptionResource billingSubscription = client.GetBillingSubscriptionResource(billingSubscriptionResourceId);

            // invoke the operation
            BillingSubscriptionData data = new BillingSubscriptionData()
            {
                DisplayName = "Subscription 1",
            };
            ArmOperation<BillingSubscriptionResource> lro = await billingSubscription.UpdateAsync(WaitUntil.Completed, data);
            BillingSubscriptionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // DeleteBillingSubscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteBillingSubscription()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/DeleteBillingSubscription.json
            // this example is just showing the usage of "BillingSubscriptions_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingSubscriptionResource created on azure
            // for more information of creating BillingSubscriptionResource, please refer to the document of BillingSubscriptionResource
            string billingAccountName = "{billingAccountName}";
            string billingSubscriptionName = "7f271b5e-a89e-45cc-8fa5-cd5c643f8b5e";
            ResourceIdentifier billingSubscriptionResourceId = BillingSubscriptionResource.CreateResourceIdentifier(billingAccountName, billingSubscriptionName);
            BillingSubscriptionResource billingSubscription = client.GetBillingSubscriptionResource(billingSubscriptionResourceId);

            // invoke the operation
            await billingSubscription.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // MoveBillingSubscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Move_MoveBillingSubscription()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/MoveBillingSubscription.json
            // this example is just showing the usage of "BillingSubscriptions_Move" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingSubscriptionResource created on azure
            // for more information of creating BillingSubscriptionResource, please refer to the document of BillingSubscriptionResource
            string billingAccountName = "{billingAccountName}";
            string billingSubscriptionName = "418b0e9c-5dc3-4260-918f-30b90619fe07";
            ResourceIdentifier billingSubscriptionResourceId = BillingSubscriptionResource.CreateResourceIdentifier(billingAccountName, billingSubscriptionName);
            BillingSubscriptionResource billingSubscription = client.GetBillingSubscriptionResource(billingSubscriptionResourceId);

            // invoke the operation
            BillingSubscriptionMoveContent content = new BillingSubscriptionMoveContent()
            {
                DestinationInvoiceSectionId = new ResourceIdentifier("/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/2b72f936-0166-47d6-91a3-ef9f84f36664/invoiceSections/06febd6b-3cb7-47fe-ac7d-7b4e83e80f53"),
            };
            ArmOperation<BillingSubscriptionResource> lro = await billingSubscription.MoveAsync(WaitUntil.Completed, content);
            BillingSubscriptionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // SubscriptionMoveValidateFailure
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task ValidateMoveEligibility_SubscriptionMoveValidateFailure()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/ValidateSubscriptionMoveFailure.json
            // this example is just showing the usage of "BillingSubscriptions_ValidateMoveEligibility" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingSubscriptionResource created on azure
            // for more information of creating BillingSubscriptionResource, please refer to the document of BillingSubscriptionResource
            string billingAccountName = "{billingAccountName}";
            string billingSubscriptionName = "418b0e9c-5dc3-4260-918f-30b90619fe07";
            ResourceIdentifier billingSubscriptionResourceId = BillingSubscriptionResource.CreateResourceIdentifier(billingAccountName, billingSubscriptionName);
            BillingSubscriptionResource billingSubscription = client.GetBillingSubscriptionResource(billingSubscriptionResourceId);

            // invoke the operation
            BillingSubscriptionMoveContent content = new BillingSubscriptionMoveContent()
            {
                DestinationInvoiceSectionId = new ResourceIdentifier("/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/e004d7ce-feca-4341-97c9-9f11cae37858/invoiceSections/06febd6b-3cb7-47fe-ac7d-7b4e83e80f53"),
            };
            BillingSubscriptionValidateMoveEligibilityResult result = await billingSubscription.ValidateMoveEligibilityAsync(content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // SubscriptionMoveValidateSuccess
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task ValidateMoveEligibility_SubscriptionMoveValidateSuccess()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/ValidateSubscriptionMoveSuccess.json
            // this example is just showing the usage of "BillingSubscriptions_ValidateMoveEligibility" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingSubscriptionResource created on azure
            // for more information of creating BillingSubscriptionResource, please refer to the document of BillingSubscriptionResource
            string billingAccountName = "{billingAccountName}";
            string billingSubscriptionName = "418b0e9c-5dc3-4260-918f-30b90619fe07";
            ResourceIdentifier billingSubscriptionResourceId = BillingSubscriptionResource.CreateResourceIdentifier(billingAccountName, billingSubscriptionName);
            BillingSubscriptionResource billingSubscription = client.GetBillingSubscriptionResource(billingSubscriptionResourceId);

            // invoke the operation
            BillingSubscriptionMoveContent content = new BillingSubscriptionMoveContent()
            {
                DestinationInvoiceSectionId = new ResourceIdentifier("/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/e004d7ce-feca-4341-97c9-9f11cae37858/invoiceSections/06febd6b-3cb7-47fe-ac7d-7b4e83e80f53"),
            };
            BillingSubscriptionValidateMoveEligibilityResult result = await billingSubscription.ValidateMoveEligibilityAsync(content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // MergeSubscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Merge_MergeSubscription()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/MergeSubscription.json
            // this example is just showing the usage of "BillingSubscriptions_Merge" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingSubscriptionResource created on azure
            // for more information of creating BillingSubscriptionResource, please refer to the document of BillingSubscriptionResource
            string billingAccountName = "{billingAccountName}";
            string billingSubscriptionName = "7f271b5e-a89e-45cc-8fa5-cd5c643f8b5e";
            ResourceIdentifier billingSubscriptionResourceId = BillingSubscriptionResource.CreateResourceIdentifier(billingAccountName, billingSubscriptionName);
            BillingSubscriptionResource billingSubscription = client.GetBillingSubscriptionResource(billingSubscriptionResourceId);

            // invoke the operation
            BillingSubscriptionMergeContent content = new BillingSubscriptionMergeContent()
            {
                TargetBillingSubscriptionName = "9e030ae5-51ed-4e02-8e17-d51b3aa55980",
                Quantity = 4,
            };
            ArmOperation<BillingSubscriptionResource> lro = await billingSubscription.MergeAsync(WaitUntil.Completed, content);
            BillingSubscriptionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // SplitSubscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Split_SplitSubscription()
        {
            // Generated from example definition: specification/billing/resource-manager/Microsoft.Billing/stable/2021-10-01/examples/SplitSubscription.json
            // this example is just showing the usage of "BillingSubscriptions_Split" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingSubscriptionResource created on azure
            // for more information of creating BillingSubscriptionResource, please refer to the document of BillingSubscriptionResource
            string billingAccountName = "{billingAccountName}";
            string billingSubscriptionName = "9e030ae5-51ed-4e02-8e17-d51b3aa55980";
            ResourceIdentifier billingSubscriptionResourceId = BillingSubscriptionResource.CreateResourceIdentifier(billingAccountName, billingSubscriptionName);
            BillingSubscriptionResource billingSubscription = client.GetBillingSubscriptionResource(billingSubscriptionResourceId);

            // invoke the operation
            BillingSubscriptionSplitContent content = new BillingSubscriptionSplitContent()
            {
                BillingFrequency = "P1M",
                Quantity = 4,
                TargetProductTypeId = "CFQ7TTC0LDPB",
                TargetSkuId = "0001",
                TermDuration = XmlConvert.ToTimeSpan("P1Y"),
            };
            ArmOperation<BillingSubscriptionResource> lro = await billingSubscription.SplitAsync(WaitUntil.Completed, content);
            BillingSubscriptionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
