// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Billing.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An enrollment account.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EnrollmentAccount : Resource
    {
        /// <summary>
        /// Initializes a new instance of the EnrollmentAccount class.
        /// </summary>
        public EnrollmentAccount()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnrollmentAccount class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="accountName">The name of the enrollment
        /// account.</param>
        /// <param name="costCenter">The cost center associated with the
        /// enrollment account.</param>
        /// <param name="accountOwner">The owner of the enrollment
        /// account.</param>
        /// <param name="status">The status of the enrollment account.</param>
        /// <param name="startDate">The start date of the enrollment
        /// account.</param>
        /// <param name="endDate">The end date of the enrollment
        /// account.</param>
        /// <param name="department">Associated department. By default this is
        /// not populated, unless it's specified in $expand.</param>
        public EnrollmentAccount(string id = default(string), string name = default(string), string type = default(string), string accountName = default(string), string costCenter = default(string), string accountOwner = default(string), string status = default(string), System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), Department department = default(Department))
            : base(id, name, type)
        {
            AccountName = accountName;
            CostCenter = costCenter;
            AccountOwner = accountOwner;
            Status = status;
            StartDate = startDate;
            EndDate = endDate;
            Department = department;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the enrollment account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.accountName")]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or sets the cost center associated with the enrollment
        /// account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.costCenter")]
        public string CostCenter { get; set; }

        /// <summary>
        /// Gets or sets the owner of the enrollment account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.accountOwner")]
        public string AccountOwner { get; set; }

        /// <summary>
        /// Gets or sets the status of the enrollment account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the start date of the enrollment account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startDate")]
        public System.DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or sets the end date of the enrollment account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endDate")]
        public System.DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or sets associated department. By default this is not
        /// populated, unless it's specified in $expand.
        /// </summary>
        [JsonProperty(PropertyName = "properties.department")]
        public Department Department { get; set; }

    }
}
