// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Billing.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The role assignment
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class BillingRoleAssignment : Resource
    {
        /// <summary>
        /// Initializes a new instance of the BillingRoleAssignment class.
        /// </summary>
        public BillingRoleAssignment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BillingRoleAssignment class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="createdOn">The date the role assignment was
        /// created.</param>
        /// <param name="createdByPrincipalTenantId">The tenant Id of the user
        /// who created the role assignment.</param>
        /// <param name="createdByPrincipalId">The principal Id of the user who
        /// created the role assignment.</param>
        /// <param name="billingRoleAssignmentName">The name of the role
        /// assignment.</param>
        /// <param name="principalId">The principal id of the user to whom the
        /// role was assigned.</param>
        /// <param name="roleDefinitionName">The ID of the role
        /// definition.</param>
        /// <param name="scope">The scope at which the role was
        /// assigned.</param>
        public BillingRoleAssignment(string id = default(string), string name = default(string), string type = default(string), string createdOn = default(string), string createdByPrincipalTenantId = default(string), string createdByPrincipalId = default(string), string billingRoleAssignmentName = default(string), string principalId = default(string), string roleDefinitionName = default(string), string scope = default(string))
            : base(id, name, type)
        {
            CreatedOn = createdOn;
            CreatedByPrincipalTenantId = createdByPrincipalTenantId;
            CreatedByPrincipalId = createdByPrincipalId;
            BillingRoleAssignmentName = billingRoleAssignmentName;
            PrincipalId = principalId;
            RoleDefinitionName = roleDefinitionName;
            Scope = scope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the date the role assignment was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdOn")]
        public string CreatedOn { get; private set; }

        /// <summary>
        /// Gets the tenant Id of the user who created the role assignment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdByPrincipalTenantId")]
        public string CreatedByPrincipalTenantId { get; private set; }

        /// <summary>
        /// Gets the principal Id of the user who created the role assignment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdByPrincipalId")]
        public string CreatedByPrincipalId { get; private set; }

        /// <summary>
        /// Gets the name of the role assignment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string BillingRoleAssignmentName { get; private set; }

        /// <summary>
        /// Gets the principal id of the user to whom the role was assigned.
        /// </summary>
        [JsonProperty(PropertyName = "properties.principalId")]
        public string PrincipalId { get; private set; }

        /// <summary>
        /// Gets the ID of the role definition.
        /// </summary>
        [JsonProperty(PropertyName = "properties.roleDefinitionName")]
        public string RoleDefinitionName { get; private set; }

        /// <summary>
        /// Gets the scope at which the role was assigned.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scope")]
        public string Scope { get; private set; }

    }
}
