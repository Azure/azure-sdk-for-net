// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.TrustedSigning;

namespace Azure.ResourceManager.TrustedSigning.Models
{
    /// <summary> Properties of the certificate profile. </summary>
    internal partial class CertificateProfileProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="CertificateProfileProperties"/>. </summary>
        /// <param name="profileType"> Profile type of the certificate. </param>
        /// <param name="identityValidationId"> Identity validation id used for the certificate subject name. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="identityValidationId"/> is null. </exception>
        public CertificateProfileProperties(CertificateProfileType profileType, string identityValidationId)
        {
            Argument.AssertNotNull(identityValidationId, nameof(identityValidationId));

            ProfileType = profileType;
            IdentityValidationId = identityValidationId;
            Certificates = new ChangeTrackingList<TrustedSigningCertificate>();
        }

        /// <summary> Initializes a new instance of <see cref="CertificateProfileProperties"/>. </summary>
        /// <param name="profileType"> Profile type of the certificate. </param>
        /// <param name="includeStreetAddress"> Whether to include STREET in the certificate subject name. </param>
        /// <param name="includeCity"> Whether to include L in the certificate subject name. Applicable only for private trust, private trust ci profile types. </param>
        /// <param name="includeState"> Whether to include S in the certificate subject name. Applicable only for private trust, private trust ci profile types. </param>
        /// <param name="includeCountry"> Whether to include C in the certificate subject name. Applicable only for private trust, private trust ci profile types. </param>
        /// <param name="includePostalCode"> Whether to include PC in the certificate subject name. </param>
        /// <param name="identityValidationId"> Identity validation id used for the certificate subject name. </param>
        /// <param name="provisioningState"> Status of the current operation on certificate profile. </param>
        /// <param name="status"> Status of the certificate profile. </param>
        /// <param name="certificates"> List of renewed certificates. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal CertificateProfileProperties(CertificateProfileType profileType, bool? includeStreetAddress, bool? includeCity, bool? includeState, bool? includeCountry, bool? includePostalCode, string identityValidationId, TrustedSigningProvisioningState? provisioningState, CertificateProfileStatus? status, IReadOnlyList<TrustedSigningCertificate> certificates, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ProfileType = profileType;
            IncludeStreetAddress = includeStreetAddress;
            IncludeCity = includeCity;
            IncludeState = includeState;
            IncludeCountry = includeCountry;
            IncludePostalCode = includePostalCode;
            IdentityValidationId = identityValidationId;
            ProvisioningState = provisioningState;
            Status = status;
            Certificates = certificates;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Profile type of the certificate. </summary>
        public CertificateProfileType ProfileType { get; set; }

        /// <summary> Whether to include STREET in the certificate subject name. </summary>
        public bool? IncludeStreetAddress { get; set; }

        /// <summary> Whether to include L in the certificate subject name. Applicable only for private trust, private trust ci profile types. </summary>
        public bool? IncludeCity { get; set; }

        /// <summary> Whether to include S in the certificate subject name. Applicable only for private trust, private trust ci profile types. </summary>
        public bool? IncludeState { get; set; }

        /// <summary> Whether to include C in the certificate subject name. Applicable only for private trust, private trust ci profile types. </summary>
        public bool? IncludeCountry { get; set; }

        /// <summary> Whether to include PC in the certificate subject name. </summary>
        public bool? IncludePostalCode { get; set; }

        /// <summary> Identity validation id used for the certificate subject name. </summary>
        public string IdentityValidationId { get; set; }

        /// <summary> Status of the current operation on certificate profile. </summary>
        public TrustedSigningProvisioningState? ProvisioningState { get; }

        /// <summary> Status of the certificate profile. </summary>
        public CertificateProfileStatus? Status { get; }

        /// <summary> List of renewed certificates. </summary>
        public IReadOnlyList<TrustedSigningCertificate> Certificates { get; } = new ChangeTrackingList<TrustedSigningCertificate>();
    }
}
