// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.TrustedSigning;

namespace Azure.ResourceManager.TrustedSigning.Models
{
    /// <summary> Parameters for creating or updating a trusted signing account. </summary>
    public partial class TrustedSigningAccountPatch
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="TrustedSigningAccountPatch"/>. </summary>
        public TrustedSigningAccountPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="TrustedSigningAccountPatch"/>. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="properties"> Properties of the trusted signing account. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal TrustedSigningAccountPatch(IDictionary<string, string> tags, CodeSigningAccountPatchProperties properties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Tags = tags;
            Properties = properties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }

        /// <summary> Properties of the trusted signing account. </summary>
        internal CodeSigningAccountPatchProperties Properties { get; set; }

        /// <summary> Name of the SKU. </summary>
        public TrustedSigningSkuName? SkuName
        {
            get
            {
                return Properties is null ? default : Properties.SkuName;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new CodeSigningAccountPatchProperties();
                }
                Properties.SkuName = value.Value;
            }
        }
    }
}
