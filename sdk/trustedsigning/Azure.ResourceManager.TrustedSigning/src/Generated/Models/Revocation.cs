// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.TrustedSigning.Models
{
    /// <summary> Revocation details of the certificate. </summary>
    internal partial class Revocation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="Revocation"/>. </summary>
        internal Revocation()
        {
        }

        /// <summary> Initializes a new instance of <see cref="Revocation"/>. </summary>
        /// <param name="requestedOn"> The timestamp when the revocation is requested. </param>
        /// <param name="effectiveOn"> The timestamp when the revocation is effective. </param>
        /// <param name="reason"> Reason for revocation. </param>
        /// <param name="remarks"> Remarks for the revocation. </param>
        /// <param name="revocationStatus"> Status of the revocation. </param>
        /// <param name="failureReason"> Reason for the revocation failure. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal Revocation(DateTimeOffset? requestedOn, DateTimeOffset? effectiveOn, string reason, string remarks, CertificateRevocationStatus? revocationStatus, string failureReason, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            RequestedOn = requestedOn;
            EffectiveOn = effectiveOn;
            Reason = reason;
            Remarks = remarks;
            RevocationStatus = revocationStatus;
            FailureReason = failureReason;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The timestamp when the revocation is requested. </summary>
        public DateTimeOffset? RequestedOn { get; }

        /// <summary> The timestamp when the revocation is effective. </summary>
        public DateTimeOffset? EffectiveOn { get; }

        /// <summary> Reason for revocation. </summary>
        public string Reason { get; }

        /// <summary> Remarks for the revocation. </summary>
        public string Remarks { get; }

        /// <summary> Status of the revocation. </summary>
        public CertificateRevocationStatus? RevocationStatus { get; }

        /// <summary> Reason for the revocation failure. </summary>
        public string FailureReason { get; }
    }
}
