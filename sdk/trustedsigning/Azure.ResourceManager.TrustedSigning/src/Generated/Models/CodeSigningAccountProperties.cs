// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.TrustedSigning.Models
{
    /// <summary> Properties of the trusted signing account. </summary>
    internal partial class CodeSigningAccountProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="CodeSigningAccountProperties"/>. </summary>
        public CodeSigningAccountProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CodeSigningAccountProperties"/>. </summary>
        /// <param name="accountUri"> The URI of the trusted signing account which is used during signing files. </param>
        /// <param name="sku"> SKU of the trusted signing account. </param>
        /// <param name="provisioningState"> Status of the current operation on trusted signing account. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal CodeSigningAccountProperties(Uri accountUri, TrustedSigningAccountSku sku, TrustedSigningProvisioningState? provisioningState, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            AccountUri = accountUri;
            Sku = sku;
            ProvisioningState = provisioningState;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The URI of the trusted signing account which is used during signing files. </summary>
        public Uri AccountUri { get; }

        /// <summary> SKU of the trusted signing account. </summary>
        internal TrustedSigningAccountSku Sku { get; set; }

        /// <summary> Status of the current operation on trusted signing account. </summary>
        public TrustedSigningProvisioningState? ProvisioningState { get; }

        /// <summary> Name of the SKU. </summary>
        public TrustedSigningSkuName? SkuName
        {
            get
            {
                return Sku is null ? default : Sku.Name;
            }
            set
            {
                Sku = value.HasValue ? new TrustedSigningAccountSku(value.Value) : default;
            }
        }
    }
}
