// <auto-generated/>

using Azure.ResourceManager.Models;
using Azure.ResourceManager.TrustedSigning;
using Azure.ResourceManager.TrustedSigning.Models;
using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;

namespace Azure.ResourceManager.TrustedSigning;

[ModelReaderWriterBuildable(typeof(TrustedSigningAccountData))]
[ModelReaderWriterBuildable(typeof(TrustedSigningAccountResource))]
[ModelReaderWriterBuildable(typeof(TrustedSigningCertificateProfileData))]
[ModelReaderWriterBuildable(typeof(TrustedSigningCertificateProfileResource))]
[ModelReaderWriterBuildable(typeof(CertificateProfileListResult))]
[ModelReaderWriterBuildable(typeof(CodeSigningAccountListResult))]
[ModelReaderWriterBuildable(typeof(RevokeCertificateContent))]
[ModelReaderWriterBuildable(typeof(TrustedSigningAccountNameAvailabilityContent))]
[ModelReaderWriterBuildable(typeof(TrustedSigningAccountNameAvailabilityResult))]
[ModelReaderWriterBuildable(typeof(TrustedSigningAccountPatch))]
[ModelReaderWriterBuildable(typeof(TrustedSigningAccountSku))]
[ModelReaderWriterBuildable(typeof(TrustedSigningCertificate))]
public partial class AzureResourceManagerTrustedSigningContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
    }
}
