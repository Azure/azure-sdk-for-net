// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SelfHelp.Models
{
    /// <summary> Solutions metrics based chart. </summary>
    public partial class MetricsBasedChart
    {
        /// <summary> Initializes a new instance of <see cref="MetricsBasedChart"/>. </summary>
        public MetricsBasedChart()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MetricsBasedChart"/>. </summary>
        /// <param name="name"> Chart name. </param>
        /// <param name="aggregationType"> Allowed values are Sum, Avg, Count, Min, Max. Default is Sum. </param>
        /// <param name="timeSpanDuration"> Time span duration. </param>
        /// <param name="title"> Chart title. </param>
        /// <param name="filterGroup"> Filter group. </param>
        /// <param name="replacementKey"> Place holder used in HTML Content replace control with the content. </param>
        internal MetricsBasedChart(string name, AggregationType? aggregationType, TimeSpan? timeSpanDuration, string title, FilterGroup filterGroup, string replacementKey)
        {
            Name = name;
            AggregationType = aggregationType;
            TimeSpanDuration = timeSpanDuration;
            Title = title;
            FilterGroup = filterGroup;
            ReplacementKey = replacementKey;
        }

        /// <summary> Chart name. </summary>
        public string Name { get; set; }
        /// <summary> Allowed values are Sum, Avg, Count, Min, Max. Default is Sum. </summary>
        public AggregationType? AggregationType { get; set; }
        /// <summary> Time span duration. </summary>
        public TimeSpan? TimeSpanDuration { get; set; }
        /// <summary> Chart title. </summary>
        public string Title { get; set; }
        /// <summary> Filter group. </summary>
        internal FilterGroup FilterGroup { get; set; }
        /// <summary> List of filters. </summary>
        public IList<SelfHelpFilter> Filter
        {
            get
            {
                if (FilterGroup is null)
                    FilterGroup = new FilterGroup();
                return FilterGroup.Filter;
            }
        }

        /// <summary> Place holder used in HTML Content replace control with the content. </summary>
        public string ReplacementKey { get; set; }
    }
}
