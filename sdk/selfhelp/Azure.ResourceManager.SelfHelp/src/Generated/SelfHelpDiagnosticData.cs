// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SelfHelp.Models;

namespace Azure.ResourceManager.SelfHelp
{
    /// <summary>
    /// A class representing the SelfHelpDiagnostic data model.
    /// Diagnostic resource
    /// </summary>
    public partial class SelfHelpDiagnosticData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="SelfHelpDiagnosticData"/>. </summary>
        public SelfHelpDiagnosticData()
        {
            GlobalParameters = new ChangeTrackingDictionary<string, string>();
            Insights = new ChangeTrackingList<SelfHelpDiagnosticInvocation>();
            Diagnostics = new ChangeTrackingList<SelfHelpDiagnosticInfo>();
        }

        /// <summary> Initializes a new instance of <see cref="SelfHelpDiagnosticData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="globalParameters"> Global parameters that can be passed to all solutionIds. </param>
        /// <param name="insights"> SolutionIds that are needed to be invoked. </param>
        /// <param name="acceptedOn"> Diagnostic Request Accepted time. </param>
        /// <param name="provisioningState"> Status of diagnostic provisioning. </param>
        /// <param name="diagnostics"> Array of Diagnostics. </param>
        internal SelfHelpDiagnosticData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> globalParameters, IList<SelfHelpDiagnosticInvocation> insights, DateTimeOffset? acceptedOn, SelfHelpProvisioningState? provisioningState, IReadOnlyList<SelfHelpDiagnosticInfo> diagnostics) : base(id, name, resourceType, systemData)
        {
            GlobalParameters = globalParameters;
            Insights = insights;
            AcceptedOn = acceptedOn;
            ProvisioningState = provisioningState;
            Diagnostics = diagnostics;
        }

        /// <summary> Global parameters that can be passed to all solutionIds. </summary>
        public IDictionary<string, string> GlobalParameters { get; }
        /// <summary> SolutionIds that are needed to be invoked. </summary>
        public IList<SelfHelpDiagnosticInvocation> Insights { get; }
        /// <summary> Diagnostic Request Accepted time. </summary>
        public DateTimeOffset? AcceptedOn { get; }
        /// <summary> Status of diagnostic provisioning. </summary>
        public SelfHelpProvisioningState? ProvisioningState { get; }
        /// <summary> Array of Diagnostics. </summary>
        public IReadOnlyList<SelfHelpDiagnosticInfo> Diagnostics { get; }
    }
}
