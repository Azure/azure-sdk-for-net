// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Edifact agreement acknowledgement settings.
    /// </summary>
    public partial class EdifactAcknowledgementSettings
    {
        /// <summary>
        /// Initializes a new instance of the EdifactAcknowledgementSettings
        /// class.
        /// </summary>
        public EdifactAcknowledgementSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EdifactAcknowledgementSettings
        /// class.
        /// </summary>
        /// <param name="needTechnicalAcknowledgement">The value indicating
        /// whether technical acknowledgement is needed.</param>
        /// <param name="batchTechnicalAcknowledgements">The value indicating
        /// whether to batch the technical acknowledgements.</param>
        /// <param name="needFunctionalAcknowledgement">The value indicating
        /// whether functional acknowledgement is needed.</param>
        /// <param name="batchFunctionalAcknowledgements">The value indicating
        /// whether to batch functional acknowledgements.</param>
        /// <param name="needLoopForValidMessages">The value indicating whether
        /// a loop is needed for valid messages.</param>
        /// <param name="sendSynchronousAcknowledgement">The value indicating
        /// whether to send synchronous acknowledgement.</param>
        /// <param name="acknowledgementControlNumberLowerBound">The
        /// acknowledgement control number lower bound.</param>
        /// <param name="acknowledgementControlNumberUpperBound">The
        /// acknowledgement control number upper bound.</param>
        /// <param name="rolloverAcknowledgementControlNumber">The value
        /// indicating whether to rollover acknowledgement control
        /// number.</param>
        /// <param name="acknowledgementControlNumberPrefix">The
        /// acknowledgement control number prefix.</param>
        /// <param name="acknowledgementControlNumberSuffix">The
        /// acknowledgement control number suffix.</param>
        public EdifactAcknowledgementSettings(bool needTechnicalAcknowledgement, bool batchTechnicalAcknowledgements, bool needFunctionalAcknowledgement, bool batchFunctionalAcknowledgements, bool needLoopForValidMessages, bool sendSynchronousAcknowledgement, int acknowledgementControlNumberLowerBound, int acknowledgementControlNumberUpperBound, bool rolloverAcknowledgementControlNumber, string acknowledgementControlNumberPrefix = default(string), string acknowledgementControlNumberSuffix = default(string))
        {
            NeedTechnicalAcknowledgement = needTechnicalAcknowledgement;
            BatchTechnicalAcknowledgements = batchTechnicalAcknowledgements;
            NeedFunctionalAcknowledgement = needFunctionalAcknowledgement;
            BatchFunctionalAcknowledgements = batchFunctionalAcknowledgements;
            NeedLoopForValidMessages = needLoopForValidMessages;
            SendSynchronousAcknowledgement = sendSynchronousAcknowledgement;
            AcknowledgementControlNumberPrefix = acknowledgementControlNumberPrefix;
            AcknowledgementControlNumberSuffix = acknowledgementControlNumberSuffix;
            AcknowledgementControlNumberLowerBound = acknowledgementControlNumberLowerBound;
            AcknowledgementControlNumberUpperBound = acknowledgementControlNumberUpperBound;
            RolloverAcknowledgementControlNumber = rolloverAcknowledgementControlNumber;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the value indicating whether technical acknowledgement
        /// is needed.
        /// </summary>
        [JsonProperty(PropertyName = "needTechnicalAcknowledgement")]
        public bool NeedTechnicalAcknowledgement { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to batch the technical
        /// acknowledgements.
        /// </summary>
        [JsonProperty(PropertyName = "batchTechnicalAcknowledgements")]
        public bool BatchTechnicalAcknowledgements { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether functional
        /// acknowledgement is needed.
        /// </summary>
        [JsonProperty(PropertyName = "needFunctionalAcknowledgement")]
        public bool NeedFunctionalAcknowledgement { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to batch functional
        /// acknowledgements.
        /// </summary>
        [JsonProperty(PropertyName = "batchFunctionalAcknowledgements")]
        public bool BatchFunctionalAcknowledgements { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether a loop is needed for
        /// valid messages.
        /// </summary>
        [JsonProperty(PropertyName = "needLoopForValidMessages")]
        public bool NeedLoopForValidMessages { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to send synchronous
        /// acknowledgement.
        /// </summary>
        [JsonProperty(PropertyName = "sendSynchronousAcknowledgement")]
        public bool SendSynchronousAcknowledgement { get; set; }

        /// <summary>
        /// Gets or sets the acknowledgement control number prefix.
        /// </summary>
        [JsonProperty(PropertyName = "acknowledgementControlNumberPrefix")]
        public string AcknowledgementControlNumberPrefix { get; set; }

        /// <summary>
        /// Gets or sets the acknowledgement control number suffix.
        /// </summary>
        [JsonProperty(PropertyName = "acknowledgementControlNumberSuffix")]
        public string AcknowledgementControlNumberSuffix { get; set; }

        /// <summary>
        /// Gets or sets the acknowledgement control number lower bound.
        /// </summary>
        [JsonProperty(PropertyName = "acknowledgementControlNumberLowerBound")]
        public int AcknowledgementControlNumberLowerBound { get; set; }

        /// <summary>
        /// Gets or sets the acknowledgement control number upper bound.
        /// </summary>
        [JsonProperty(PropertyName = "acknowledgementControlNumberUpperBound")]
        public int AcknowledgementControlNumberUpperBound { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to rollover
        /// acknowledgement control number.
        /// </summary>
        [JsonProperty(PropertyName = "rolloverAcknowledgementControlNumber")]
        public bool RolloverAcknowledgementControlNumber { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
