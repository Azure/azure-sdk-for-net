// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The integration service environment properties.
    /// </summary>
    public partial class IntegrationServiceEnvironmentProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationServiceEnvironmentProperties class.
        /// </summary>
        public IntegrationServiceEnvironmentProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationServiceEnvironmentProperties class.
        /// </summary>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'NotSpecified', 'Accepted', 'Running', 'Ready',
        /// 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
        /// 'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
        /// 'Unregistering', 'Unregistered', 'Completed'</param>
        /// <param name="state">The integration service environment state.
        /// Possible values include: 'NotSpecified', 'Completed', 'Enabled',
        /// 'Disabled', 'Deleted', 'Suspended'</param>
        /// <param name="integrationServiceEnvironmentId">Gets the tracking
        /// id.</param>
        /// <param name="endpointsConfiguration">The endpoints
        /// configuration.</param>
        /// <param name="networkConfiguration">The network
        /// configuration.</param>
        public IntegrationServiceEnvironmentProperties(string provisioningState = default(string), string state = default(string), string integrationServiceEnvironmentId = default(string), FlowEndpointsConfiguration endpointsConfiguration = default(FlowEndpointsConfiguration), NetworkConfiguration networkConfiguration = default(NetworkConfiguration))
        {
            ProvisioningState = provisioningState;
            State = state;
            IntegrationServiceEnvironmentId = integrationServiceEnvironmentId;
            EndpointsConfiguration = endpointsConfiguration;
            NetworkConfiguration = networkConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the provisioning state. Possible values include:
        /// 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating',
        /// 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
        /// 'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
        /// 'Unregistering', 'Unregistered', 'Completed'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the integration service environment state. Possible
        /// values include: 'NotSpecified', 'Completed', 'Enabled', 'Disabled',
        /// 'Deleted', 'Suspended'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets the tracking id.
        /// </summary>
        [JsonProperty(PropertyName = "integrationServiceEnvironmentId")]
        public string IntegrationServiceEnvironmentId { get; set; }

        /// <summary>
        /// Gets or sets the endpoints configuration.
        /// </summary>
        [JsonProperty(PropertyName = "endpointsConfiguration")]
        public FlowEndpointsConfiguration EndpointsConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the network configuration.
        /// </summary>
        [JsonProperty(PropertyName = "networkConfiguration")]
        public NetworkConfiguration NetworkConfiguration { get; set; }

    }
}
