// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The reference to the key vault key.
    /// </summary>
    public partial class KeyVaultKeyReference
    {
        /// <summary>
        /// Initializes a new instance of the KeyVaultKeyReference class.
        /// </summary>
        public KeyVaultKeyReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KeyVaultKeyReference class.
        /// </summary>
        /// <param name="keyVault">The key vault reference.</param>
        /// <param name="keyName">The private key name in key vault.</param>
        /// <param name="keyVersion">The private key version in key
        /// vault.</param>
        public KeyVaultKeyReference(KeyVaultKeyReferenceKeyVault keyVault, string keyName, string keyVersion = default(string))
        {
            KeyVault = keyVault;
            KeyName = keyName;
            KeyVersion = keyVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the key vault reference.
        /// </summary>
        [JsonProperty(PropertyName = "keyVault")]
        public KeyVaultKeyReferenceKeyVault KeyVault { get; set; }

        /// <summary>
        /// Gets or sets the private key name in key vault.
        /// </summary>
        [JsonProperty(PropertyName = "keyName")]
        public string KeyName { get; set; }

        /// <summary>
        /// Gets or sets the private key version in key vault.
        /// </summary>
        [JsonProperty(PropertyName = "keyVersion")]
        public string KeyVersion { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (KeyVault == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyVault");
            }
            if (KeyName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyName");
            }
        }
    }
}
