// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The API resource properties.
    /// </summary>
    public partial class ApiResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the ApiResourceProperties class.
        /// </summary>
        public ApiResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiResourceProperties class.
        /// </summary>
        /// <param name="name">The name</param>
        /// <param name="connectionParameters">The connection
        /// parameters.</param>
        /// <param name="metadata">The metadata.</param>
        /// <param name="runtimeUrls">The runtime urls.</param>
        /// <param name="generalInformation">The api general
        /// information.</param>
        /// <param name="capabilities">The capabilities.</param>
        /// <param name="backendService">The backend service.</param>
        /// <param name="policies">The policies for the API.</param>
        /// <param name="apiDefinitionUrl">The API definition.</param>
        /// <param name="apiDefinitions">The api definitions.</param>
        /// <param name="integrationServiceEnvironment">The integration service
        /// environment reference.</param>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'NotSpecified', 'Accepted', 'Running', 'Ready',
        /// 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
        /// 'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
        /// 'Unregistering', 'Unregistered', 'Completed'</param>
        /// <param name="category">The category. Possible values include:
        /// 'NotSpecified', 'Enterprise', 'Standard', 'Premium'</param>
        public ApiResourceProperties(string name = default(string), IDictionary<string, object> connectionParameters = default(IDictionary<string, object>), ApiResourceMetadata metadata = default(ApiResourceMetadata), IList<string> runtimeUrls = default(IList<string>), ApiResourceGeneralInformation generalInformation = default(ApiResourceGeneralInformation), IList<string> capabilities = default(IList<string>), ApiResourceBackendService backendService = default(ApiResourceBackendService), ApiResourcePolicies policies = default(ApiResourcePolicies), string apiDefinitionUrl = default(string), ApiResourceDefinitions apiDefinitions = default(ApiResourceDefinitions), ResourceReference integrationServiceEnvironment = default(ResourceReference), string provisioningState = default(string), string category = default(string))
        {
            Name = name;
            ConnectionParameters = connectionParameters;
            Metadata = metadata;
            RuntimeUrls = runtimeUrls;
            GeneralInformation = generalInformation;
            Capabilities = capabilities;
            BackendService = backendService;
            Policies = policies;
            ApiDefinitionUrl = apiDefinitionUrl;
            ApiDefinitions = apiDefinitions;
            IntegrationServiceEnvironment = integrationServiceEnvironment;
            ProvisioningState = provisioningState;
            Category = category;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the connection parameters.
        /// </summary>
        [JsonProperty(PropertyName = "connectionParameters")]
        public IDictionary<string, object> ConnectionParameters { get; set; }

        /// <summary>
        /// Gets or sets the metadata.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public ApiResourceMetadata Metadata { get; set; }

        /// <summary>
        /// Gets or sets the runtime urls.
        /// </summary>
        [JsonProperty(PropertyName = "runtimeUrls")]
        public IList<string> RuntimeUrls { get; set; }

        /// <summary>
        /// Gets or sets the api general information.
        /// </summary>
        [JsonProperty(PropertyName = "generalInformation")]
        public ApiResourceGeneralInformation GeneralInformation { get; set; }

        /// <summary>
        /// Gets or sets the capabilities.
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IList<string> Capabilities { get; set; }

        /// <summary>
        /// Gets or sets the backend service.
        /// </summary>
        [JsonProperty(PropertyName = "backendService")]
        public ApiResourceBackendService BackendService { get; set; }

        /// <summary>
        /// Gets or sets the policies for the API.
        /// </summary>
        [JsonProperty(PropertyName = "policies")]
        public ApiResourcePolicies Policies { get; set; }

        /// <summary>
        /// Gets or sets the API definition.
        /// </summary>
        [JsonProperty(PropertyName = "apiDefinitionUrl")]
        public string ApiDefinitionUrl { get; set; }

        /// <summary>
        /// Gets or sets the api definitions.
        /// </summary>
        [JsonProperty(PropertyName = "apiDefinitions")]
        public ApiResourceDefinitions ApiDefinitions { get; set; }

        /// <summary>
        /// Gets or sets the integration service environment reference.
        /// </summary>
        [JsonProperty(PropertyName = "integrationServiceEnvironment")]
        public ResourceReference IntegrationServiceEnvironment { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state. Possible values include:
        /// 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating',
        /// 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
        /// 'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
        /// 'Unregistering', 'Unregistered', 'Completed'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the category. Possible values include: 'NotSpecified',
        /// 'Enterprise', 'Standard', 'Premium'
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

    }
}
