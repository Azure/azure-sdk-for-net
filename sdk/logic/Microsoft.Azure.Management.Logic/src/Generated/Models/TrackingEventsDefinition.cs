// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The tracking events definition.
    /// </summary>
    public partial class TrackingEventsDefinition
    {
        /// <summary>
        /// Initializes a new instance of the TrackingEventsDefinition class.
        /// </summary>
        public TrackingEventsDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TrackingEventsDefinition class.
        /// </summary>
        /// <param name="sourceType">The source type.</param>
        /// <param name="events">The events.</param>
        /// <param name="trackEventsOptions">The track events options. Possible
        /// values include: 'None', 'DisableSourceInfoEnrich'</param>
        public TrackingEventsDefinition(string sourceType, IList<TrackingEvent> events, string trackEventsOptions = default(string))
        {
            SourceType = sourceType;
            TrackEventsOptions = trackEventsOptions;
            Events = events;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the source type.
        /// </summary>
        [JsonProperty(PropertyName = "sourceType")]
        public string SourceType { get; set; }

        /// <summary>
        /// Gets or sets the track events options. Possible values include:
        /// 'None', 'DisableSourceInfoEnrich'
        /// </summary>
        [JsonProperty(PropertyName = "trackEventsOptions")]
        public string TrackEventsOptions { get; set; }

        /// <summary>
        /// Gets or sets the events.
        /// </summary>
        [JsonProperty(PropertyName = "events")]
        public IList<TrackingEvent> Events { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SourceType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceType");
            }
            if (Events == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Events");
            }
            if (Events != null)
            {
                foreach (var element in Events)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
