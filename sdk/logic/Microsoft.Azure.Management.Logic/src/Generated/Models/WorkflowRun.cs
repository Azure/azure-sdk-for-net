// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The workflow run.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkflowRun : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the WorkflowRun class.
        /// </summary>
        public WorkflowRun()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkflowRun class.
        /// </summary>
        /// <param name="id">The resource id.</param>
        /// <param name="waitEndTime">Gets the wait end time.</param>
        /// <param name="startTime">Gets the start time.</param>
        /// <param name="endTime">Gets the end time.</param>
        /// <param name="status">Gets the status. Possible values include:
        /// 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
        /// 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
        /// 'TimedOut', 'Aborted', 'Ignored'</param>
        /// <param name="code">Gets the code.</param>
        /// <param name="error">Gets the error.</param>
        /// <param name="correlationId">Gets the correlation id.</param>
        /// <param name="correlation">The run correlation.</param>
        /// <param name="workflow">Gets the reference to workflow
        /// version.</param>
        /// <param name="trigger">Gets the fired trigger.</param>
        /// <param name="outputs">Gets the outputs.</param>
        /// <param name="response">Gets the response of the flow run.</param>
        /// <param name="name">Gets the workflow run name.</param>
        /// <param name="type">Gets the workflow run type.</param>
        public WorkflowRun(string id = default(string), System.DateTime? waitEndTime = default(System.DateTime?), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), string status = default(string), string code = default(string), object error = default(object), string correlationId = default(string), Correlation correlation = default(Correlation), ResourceReference workflow = default(ResourceReference), WorkflowRunTrigger trigger = default(WorkflowRunTrigger), IDictionary<string, WorkflowOutputParameter> outputs = default(IDictionary<string, WorkflowOutputParameter>), WorkflowRunTrigger response = default(WorkflowRunTrigger), string name = default(string), string type = default(string))
            : base(id)
        {
            WaitEndTime = waitEndTime;
            StartTime = startTime;
            EndTime = endTime;
            Status = status;
            Code = code;
            Error = error;
            CorrelationId = correlationId;
            Correlation = correlation;
            Workflow = workflow;
            Trigger = trigger;
            Outputs = outputs;
            Response = response;
            Name = name;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the wait end time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.waitEndTime")]
        public System.DateTime? WaitEndTime { get; private set; }

        /// <summary>
        /// Gets the start time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startTime")]
        public System.DateTime? StartTime { get; private set; }

        /// <summary>
        /// Gets the end time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endTime")]
        public System.DateTime? EndTime { get; private set; }

        /// <summary>
        /// Gets the status. Possible values include: 'NotSpecified', 'Paused',
        /// 'Running', 'Waiting', 'Succeeded', 'Skipped', 'Suspended',
        /// 'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets the code.
        /// </summary>
        [JsonProperty(PropertyName = "properties.code")]
        public string Code { get; private set; }

        /// <summary>
        /// Gets the error.
        /// </summary>
        [JsonProperty(PropertyName = "properties.error")]
        public object Error { get; private set; }

        /// <summary>
        /// Gets the correlation id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.correlationId")]
        public string CorrelationId { get; private set; }

        /// <summary>
        /// Gets or sets the run correlation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.correlation")]
        public Correlation Correlation { get; set; }

        /// <summary>
        /// Gets the reference to workflow version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.workflow")]
        public ResourceReference Workflow { get; private set; }

        /// <summary>
        /// Gets the fired trigger.
        /// </summary>
        [JsonProperty(PropertyName = "properties.trigger")]
        public WorkflowRunTrigger Trigger { get; private set; }

        /// <summary>
        /// Gets the outputs.
        /// </summary>
        [JsonProperty(PropertyName = "properties.outputs")]
        public IDictionary<string, WorkflowOutputParameter> Outputs { get; private set; }

        /// <summary>
        /// Gets the response of the flow run.
        /// </summary>
        [JsonProperty(PropertyName = "properties.response")]
        public WorkflowRunTrigger Response { get; private set; }

        /// <summary>
        /// Gets the workflow run name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the workflow run type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
