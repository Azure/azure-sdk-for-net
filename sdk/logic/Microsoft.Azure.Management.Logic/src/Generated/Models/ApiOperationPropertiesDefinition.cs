// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The api operations properties
    /// </summary>
    public partial class ApiOperationPropertiesDefinition
    {
        /// <summary>
        /// Initializes a new instance of the ApiOperationPropertiesDefinition
        /// class.
        /// </summary>
        public ApiOperationPropertiesDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiOperationPropertiesDefinition
        /// class.
        /// </summary>
        /// <param name="summary">The summary of the api operation.</param>
        /// <param name="description">The description of the api
        /// operation.</param>
        /// <param name="visibility">The visibility of the api
        /// operation.</param>
        /// <param name="trigger">The trigger type of api operation.</param>
        /// <param name="triggerHint">The trigger hint for the api
        /// operation.</param>
        /// <param name="pageable">Indicates whether the api operation is
        /// pageable.</param>
        /// <param name="annotation">The annotation of api operation.</param>
        /// <param name="api">The api reference.</param>
        /// <param name="inputsDefinition">The operation inputs definition
        /// schema.</param>
        /// <param name="responsesDefinition">The operation responses
        /// definition schemas.</param>
        /// <param name="isWebhook">Indicates whether the API operation is
        /// webhook or not.</param>
        /// <param name="isNotification">Indicates whether the API operation is
        /// notification or not.</param>
        public ApiOperationPropertiesDefinition(string summary = default(string), string description = default(string), string visibility = default(string), string trigger = default(string), string triggerHint = default(string), bool? pageable = default(bool?), ApiOperationAnnotation annotation = default(ApiOperationAnnotation), ApiReference api = default(ApiReference), SwaggerSchema inputsDefinition = default(SwaggerSchema), IDictionary<string, SwaggerSchema> responsesDefinition = default(IDictionary<string, SwaggerSchema>), bool? isWebhook = default(bool?), bool? isNotification = default(bool?))
        {
            Summary = summary;
            Description = description;
            Visibility = visibility;
            Trigger = trigger;
            TriggerHint = triggerHint;
            Pageable = pageable;
            Annotation = annotation;
            Api = api;
            InputsDefinition = inputsDefinition;
            ResponsesDefinition = responsesDefinition;
            IsWebhook = isWebhook;
            IsNotification = isNotification;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the summary of the api operation.
        /// </summary>
        [JsonProperty(PropertyName = "summary")]
        public string Summary { get; set; }

        /// <summary>
        /// Gets or sets the description of the api operation.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the visibility of the api operation.
        /// </summary>
        [JsonProperty(PropertyName = "visibility")]
        public string Visibility { get; set; }

        /// <summary>
        /// Gets or sets the trigger type of api operation.
        /// </summary>
        [JsonProperty(PropertyName = "trigger")]
        public string Trigger { get; set; }

        /// <summary>
        /// Gets or sets the trigger hint for the api operation.
        /// </summary>
        [JsonProperty(PropertyName = "triggerHint")]
        public string TriggerHint { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the api operation is pageable.
        /// </summary>
        [JsonProperty(PropertyName = "pageable")]
        public bool? Pageable { get; set; }

        /// <summary>
        /// Gets or sets the annotation of api operation.
        /// </summary>
        [JsonProperty(PropertyName = "annotation")]
        public ApiOperationAnnotation Annotation { get; set; }

        /// <summary>
        /// Gets or sets the api reference.
        /// </summary>
        [JsonProperty(PropertyName = "api")]
        public ApiReference Api { get; set; }

        /// <summary>
        /// Gets or sets the operation inputs definition schema.
        /// </summary>
        [JsonProperty(PropertyName = "inputsDefinition")]
        public SwaggerSchema InputsDefinition { get; set; }

        /// <summary>
        /// Gets or sets the operation responses definition schemas.
        /// </summary>
        [JsonProperty(PropertyName = "responsesDefinition")]
        public IDictionary<string, SwaggerSchema> ResponsesDefinition { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the API operation is webhook or not.
        /// </summary>
        [JsonProperty(PropertyName = "isWebhook")]
        public bool? IsWebhook { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the API operation is notification or
        /// not.
        /// </summary>
        [JsonProperty(PropertyName = "isNotification")]
        public bool? IsNotification { get; set; }

    }
}
