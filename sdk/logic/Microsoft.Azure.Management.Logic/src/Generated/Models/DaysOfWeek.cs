// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DaysOfWeek.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DaysOfWeek
    {
        [EnumMember(Value = "Sunday")]
        Sunday,
        [EnumMember(Value = "Monday")]
        Monday,
        [EnumMember(Value = "Tuesday")]
        Tuesday,
        [EnumMember(Value = "Wednesday")]
        Wednesday,
        [EnumMember(Value = "Thursday")]
        Thursday,
        [EnumMember(Value = "Friday")]
        Friday,
        [EnumMember(Value = "Saturday")]
        Saturday
    }
    internal static class DaysOfWeekEnumExtension
    {
        internal static string ToSerializedValue(this DaysOfWeek? value)
        {
            return value == null ? null : ((DaysOfWeek)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DaysOfWeek value)
        {
            switch( value )
            {
                case DaysOfWeek.Sunday:
                    return "Sunday";
                case DaysOfWeek.Monday:
                    return "Monday";
                case DaysOfWeek.Tuesday:
                    return "Tuesday";
                case DaysOfWeek.Wednesday:
                    return "Wednesday";
                case DaysOfWeek.Thursday:
                    return "Thursday";
                case DaysOfWeek.Friday:
                    return "Friday";
                case DaysOfWeek.Saturday:
                    return "Saturday";
            }
            return null;
        }

        internal static DaysOfWeek? ParseDaysOfWeek(this string value)
        {
            switch( value )
            {
                case "Sunday":
                    return DaysOfWeek.Sunday;
                case "Monday":
                    return DaysOfWeek.Monday;
                case "Tuesday":
                    return DaysOfWeek.Tuesday;
                case "Wednesday":
                    return DaysOfWeek.Wednesday;
                case "Thursday":
                    return DaysOfWeek.Thursday;
                case "Friday":
                    return DaysOfWeek.Friday;
                case "Saturday":
                    return DaysOfWeek.Saturday;
            }
            return null;
        }
    }
}
