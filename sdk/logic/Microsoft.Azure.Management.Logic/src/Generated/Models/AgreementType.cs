// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AgreementType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AgreementType
    {
        [EnumMember(Value = "NotSpecified")]
        NotSpecified,
        [EnumMember(Value = "AS2")]
        AS2,
        [EnumMember(Value = "X12")]
        X12,
        [EnumMember(Value = "Edifact")]
        Edifact
    }
    internal static class AgreementTypeEnumExtension
    {
        internal static string ToSerializedValue(this AgreementType? value)
        {
            return value == null ? null : ((AgreementType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AgreementType value)
        {
            switch( value )
            {
                case AgreementType.NotSpecified:
                    return "NotSpecified";
                case AgreementType.AS2:
                    return "AS2";
                case AgreementType.X12:
                    return "X12";
                case AgreementType.Edifact:
                    return "Edifact";
            }
            return null;
        }

        internal static AgreementType? ParseAgreementType(this string value)
        {
            switch( value )
            {
                case "NotSpecified":
                    return AgreementType.NotSpecified;
                case "AS2":
                    return AgreementType.AS2;
                case "X12":
                    return AgreementType.X12;
                case "Edifact":
                    return AgreementType.Edifact;
            }
            return null;
        }
    }
}
