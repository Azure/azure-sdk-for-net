// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The integration service environment subnet network health.
    /// </summary>
    public partial class IntegrationServiceEnvironmentSubnetNetworkHealth
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationServiceEnvironmentSubnetNetworkHealth class.
        /// </summary>
        public IntegrationServiceEnvironmentSubnetNetworkHealth()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationServiceEnvironmentSubnetNetworkHealth class.
        /// </summary>
        /// <param name="networkDependencyHealthState">The integration service
        /// environment network health state. Possible values include:
        /// 'NotSpecified', 'Unknown', 'Available', 'NotAvailable'</param>
        /// <param name="outboundNetworkDependencies">The outbound network
        /// dependencies.</param>
        /// <param name="outboundNetworkHealth">The integration service
        /// environment network health.</param>
        public IntegrationServiceEnvironmentSubnetNetworkHealth(string networkDependencyHealthState, IList<IntegrationServiceEnvironmentNetworkDependency> outboundNetworkDependencies = default(IList<IntegrationServiceEnvironmentNetworkDependency>), IntegrationServiceEnvironmentNetworkDependencyHealth outboundNetworkHealth = default(IntegrationServiceEnvironmentNetworkDependencyHealth))
        {
            OutboundNetworkDependencies = outboundNetworkDependencies;
            OutboundNetworkHealth = outboundNetworkHealth;
            NetworkDependencyHealthState = networkDependencyHealthState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the outbound network dependencies.
        /// </summary>
        [JsonProperty(PropertyName = "outboundNetworkDependencies")]
        public IList<IntegrationServiceEnvironmentNetworkDependency> OutboundNetworkDependencies { get; set; }

        /// <summary>
        /// Gets or sets the integration service environment network health.
        /// </summary>
        [JsonProperty(PropertyName = "outboundNetworkHealth")]
        public IntegrationServiceEnvironmentNetworkDependencyHealth OutboundNetworkHealth { get; set; }

        /// <summary>
        /// Gets or sets the integration service environment network health
        /// state. Possible values include: 'NotSpecified', 'Unknown',
        /// 'Available', 'NotAvailable'
        /// </summary>
        [JsonProperty(PropertyName = "networkDependencyHealthState")]
        public string NetworkDependencyHealthState { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (NetworkDependencyHealthState == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NetworkDependencyHealthState");
            }
            if (OutboundNetworkHealth != null)
            {
                OutboundNetworkHealth.Validate();
            }
        }
    }
}
