// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The integration service environment subnet network health.
    /// </summary>
    public partial class IntegrationServiceEnvironmentNetworkDependencyHealth
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationServiceEnvironmentNetworkDependencyHealth class.
        /// </summary>
        public IntegrationServiceEnvironmentNetworkDependencyHealth()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationServiceEnvironmentNetworkDependencyHealth class.
        /// </summary>
        /// <param name="error">The error if any occurred during the
        /// operation.</param>
        /// <param name="state">The network dependency health state. Possible
        /// values include: 'NotSpecified', 'Healthy', 'Unhealthy',
        /// 'Unknown'</param>
        public IntegrationServiceEnvironmentNetworkDependencyHealth(ExtendedErrorInfo error = default(ExtendedErrorInfo), string state = default(string))
        {
            Error = error;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the error if any occurred during the operation.
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ExtendedErrorInfo Error { get; set; }

        /// <summary>
        /// Gets or sets the network dependency health state. Possible values
        /// include: 'NotSpecified', 'Healthy', 'Unhealthy', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Error != null)
            {
                Error.Validate();
            }
        }
    }
}
