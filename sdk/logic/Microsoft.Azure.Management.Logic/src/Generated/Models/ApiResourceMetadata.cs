// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The api resource metadata.
    /// </summary>
    public partial class ApiResourceMetadata
    {
        /// <summary>
        /// Initializes a new instance of the ApiResourceMetadata class.
        /// </summary>
        public ApiResourceMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiResourceMetadata class.
        /// </summary>
        /// <param name="source">The source.</param>
        /// <param name="brandColor">The brand color.</param>
        /// <param name="hideKey">The hide key.</param>
        /// <param name="tags">The tags.</param>
        /// <param name="apiType">The api type. Possible values include:
        /// 'NotSpecified', 'Rest', 'Soap'</param>
        /// <param name="wsdlService">The WSDL service.</param>
        /// <param name="wsdlImportMethod">The WSDL import method. Possible
        /// values include: 'NotSpecified', 'SoapToRest',
        /// 'SoapPassThrough'</param>
        /// <param name="connectionType">The connection type.</param>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'NotSpecified', 'Accepted', 'Running', 'Ready',
        /// 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
        /// 'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
        /// 'Unregistering', 'Unregistered', 'Completed'</param>
        /// <param name="deploymentParameters">The connector deployment
        /// parameters metadata.</param>
        public ApiResourceMetadata(string source = default(string), string brandColor = default(string), string hideKey = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string apiType = default(string), WsdlService wsdlService = default(WsdlService), string wsdlImportMethod = default(string), string connectionType = default(string), string provisioningState = default(string), ApiDeploymentParameterMetadataSet deploymentParameters = default(ApiDeploymentParameterMetadataSet))
        {
            Source = source;
            BrandColor = brandColor;
            HideKey = hideKey;
            Tags = tags;
            ApiType = apiType;
            WsdlService = wsdlService;
            WsdlImportMethod = wsdlImportMethod;
            ConnectionType = connectionType;
            ProvisioningState = provisioningState;
            DeploymentParameters = deploymentParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the source.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets the brand color.
        /// </summary>
        [JsonProperty(PropertyName = "brandColor")]
        public string BrandColor { get; set; }

        /// <summary>
        /// Gets or sets the hide key.
        /// </summary>
        [JsonProperty(PropertyName = "hideKey")]
        public string HideKey { get; set; }

        /// <summary>
        /// Gets or sets the tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the api type. Possible values include: 'NotSpecified',
        /// 'Rest', 'Soap'
        /// </summary>
        [JsonProperty(PropertyName = "ApiType")]
        public string ApiType { get; set; }

        /// <summary>
        /// Gets or sets the WSDL service.
        /// </summary>
        [JsonProperty(PropertyName = "wsdlService")]
        public WsdlService WsdlService { get; set; }

        /// <summary>
        /// Gets or sets the WSDL import method. Possible values include:
        /// 'NotSpecified', 'SoapToRest', 'SoapPassThrough'
        /// </summary>
        [JsonProperty(PropertyName = "wsdlImportMethod")]
        public string WsdlImportMethod { get; set; }

        /// <summary>
        /// Gets or sets the connection type.
        /// </summary>
        [JsonProperty(PropertyName = "connectionType")]
        public string ConnectionType { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state. Possible values include:
        /// 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating',
        /// 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
        /// 'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
        /// 'Unregistering', 'Unregistered', 'Completed'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the connector deployment parameters metadata.
        /// </summary>
        [JsonProperty(PropertyName = "deploymentParameters")]
        public ApiDeploymentParameterMetadataSet DeploymentParameters { get; set; }

    }
}
