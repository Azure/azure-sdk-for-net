// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Logic.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Logic
{
    /// <summary> A class representing the IntegrationAccountMap data model. </summary>
    public partial class IntegrationAccountMapData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of IntegrationAccountMapData. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="mapType">
        /// The map type.
        /// Serialized Name: IntegrationAccountMap.properties.mapType
        /// </param>
        public IntegrationAccountMapData(AzureLocation location, MapType mapType) : base(location)
        {
            MapType = mapType;
        }

        /// <summary> Initializes a new instance of IntegrationAccountMapData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="mapType">
        /// The map type.
        /// Serialized Name: IntegrationAccountMap.properties.mapType
        /// </param>
        /// <param name="parametersSchema">
        /// The parameters schema of integration account map.
        /// Serialized Name: IntegrationAccountMap.properties.parametersSchema
        /// </param>
        /// <param name="createdOn">
        /// The created time.
        /// Serialized Name: IntegrationAccountMap.properties.createdTime
        /// </param>
        /// <param name="changedOn">
        /// The changed time.
        /// Serialized Name: IntegrationAccountMap.properties.changedTime
        /// </param>
        /// <param name="content">
        /// The content.
        /// Serialized Name: IntegrationAccountMap.properties.content
        /// </param>
        /// <param name="contentType">
        /// The content type.
        /// Serialized Name: IntegrationAccountMap.properties.contentType
        /// </param>
        /// <param name="contentLink">
        /// The content link.
        /// Serialized Name: IntegrationAccountMap.properties.contentLink
        /// </param>
        /// <param name="metadata">
        /// The metadata.
        /// Serialized Name: IntegrationAccountMap.properties.metadata
        /// </param>
        internal IntegrationAccountMapData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, MapType mapType, IntegrationAccountMapPropertiesParametersSchema parametersSchema, DateTimeOffset? createdOn, DateTimeOffset? changedOn, string content, string contentType, ContentLink contentLink, BinaryData metadata) : base(id, name, resourceType, systemData, tags, location)
        {
            MapType = mapType;
            ParametersSchema = parametersSchema;
            CreatedOn = createdOn;
            ChangedOn = changedOn;
            Content = content;
            ContentType = contentType;
            ContentLink = contentLink;
            Metadata = metadata;
        }

        /// <summary>
        /// The map type.
        /// Serialized Name: IntegrationAccountMap.properties.mapType
        /// </summary>
        public MapType MapType { get; set; }
        /// <summary>
        /// The parameters schema of integration account map.
        /// Serialized Name: IntegrationAccountMap.properties.parametersSchema
        /// </summary>
        internal IntegrationAccountMapPropertiesParametersSchema ParametersSchema { get; set; }
        /// <summary>
        /// The reference name.
        /// Serialized Name: IntegrationAccountMapPropertiesParametersSchema.ref
        /// </summary>
        public string ParametersSchemaRef
        {
            get => ParametersSchema is null ? default : ParametersSchema.Ref;
            set
            {
                if (ParametersSchema is null)
                    ParametersSchema = new IntegrationAccountMapPropertiesParametersSchema();
                ParametersSchema.Ref = value;
            }
        }

        /// <summary>
        /// The created time.
        /// Serialized Name: IntegrationAccountMap.properties.createdTime
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// The changed time.
        /// Serialized Name: IntegrationAccountMap.properties.changedTime
        /// </summary>
        public DateTimeOffset? ChangedOn { get; }
        /// <summary>
        /// The content.
        /// Serialized Name: IntegrationAccountMap.properties.content
        /// </summary>
        public string Content { get; set; }
        /// <summary>
        /// The content type.
        /// Serialized Name: IntegrationAccountMap.properties.contentType
        /// </summary>
        public string ContentType { get; set; }
        /// <summary>
        /// The content link.
        /// Serialized Name: IntegrationAccountMap.properties.contentLink
        /// </summary>
        public ContentLink ContentLink { get; }
        /// <summary>
        /// The metadata.
        /// Serialized Name: IntegrationAccountMap.properties.metadata
        /// </summary>
        public BinaryData Metadata { get; set; }
    }
}
