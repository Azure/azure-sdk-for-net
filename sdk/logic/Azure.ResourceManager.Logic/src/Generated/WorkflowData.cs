// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Logic.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Logic
{
    /// <summary> A class representing the Workflow data model. </summary>
    public partial class WorkflowData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of WorkflowData. </summary>
        /// <param name="location"> The location. </param>
        public WorkflowData(AzureLocation location) : base(location)
        {
            Parameters = new ChangeTrackingDictionary<string, WorkflowParameter>();
        }

        /// <summary> Initializes a new instance of WorkflowData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="identity"> Managed service identity properties. </param>
        /// <param name="provisioningState"> Gets the provisioning state. </param>
        /// <param name="createdOn"> Gets the created time. </param>
        /// <param name="changedOn"> Gets the changed time. </param>
        /// <param name="state"> The state. </param>
        /// <param name="version"> Gets the version. </param>
        /// <param name="accessEndpoint"> Gets the access endpoint. </param>
        /// <param name="endpointsConfiguration"> The endpoints configuration. </param>
        /// <param name="accessControl"> The access control configuration. </param>
        /// <param name="sku"> The sku. </param>
        /// <param name="integrationAccount"> The integration account. </param>
        /// <param name="integrationServiceEnvironment"> The integration service environment. </param>
        /// <param name="definition"> The definition. </param>
        /// <param name="parameters"> The parameters. </param>
        internal WorkflowData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, Models.ManagedServiceIdentity identity, WorkflowProvisioningState? provisioningState, DateTimeOffset? createdOn, DateTimeOffset? changedOn, WorkflowState? state, string version, string accessEndpoint, FlowEndpointsConfiguration endpointsConfiguration, FlowAccessControlConfiguration accessControl, LogicSku sku, ResourceReference integrationAccount, ResourceReference integrationServiceEnvironment, BinaryData definition, IDictionary<string, WorkflowParameter> parameters) : base(id, name, resourceType, systemData, tags, location)
        {
            Identity = identity;
            ProvisioningState = provisioningState;
            CreatedOn = createdOn;
            ChangedOn = changedOn;
            State = state;
            Version = version;
            AccessEndpoint = accessEndpoint;
            EndpointsConfiguration = endpointsConfiguration;
            AccessControl = accessControl;
            Sku = sku;
            IntegrationAccount = integrationAccount;
            IntegrationServiceEnvironment = integrationServiceEnvironment;
            Definition = definition;
            Parameters = parameters;
        }

        /// <summary> Managed service identity properties. </summary>
        public Models.ManagedServiceIdentity Identity { get; set; }
        /// <summary> Gets the provisioning state. </summary>
        public WorkflowProvisioningState? ProvisioningState { get; }
        /// <summary> Gets the created time. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> Gets the changed time. </summary>
        public DateTimeOffset? ChangedOn { get; }
        /// <summary> The state. </summary>
        public WorkflowState? State { get; set; }
        /// <summary> Gets the version. </summary>
        public string Version { get; }
        /// <summary> Gets the access endpoint. </summary>
        public string AccessEndpoint { get; }
        /// <summary> The endpoints configuration. </summary>
        public FlowEndpointsConfiguration EndpointsConfiguration { get; set; }
        /// <summary> The access control configuration. </summary>
        public FlowAccessControlConfiguration AccessControl { get; set; }
        /// <summary> The sku. </summary>
        public LogicSku Sku { get; }
        /// <summary> The integration account. </summary>
        public ResourceReference IntegrationAccount { get; set; }
        /// <summary> The integration service environment. </summary>
        public ResourceReference IntegrationServiceEnvironment { get; set; }
        /// <summary> The definition. </summary>
        public BinaryData Definition { get; set; }
        /// <summary> The parameters. </summary>
        public IDictionary<string, WorkflowParameter> Parameters { get; }
    }
}
