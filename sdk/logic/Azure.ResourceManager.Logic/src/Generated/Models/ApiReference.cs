// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The Api reference.
    /// Serialized Name: ApiReference
    /// </summary>
    public partial class ApiReference : ResourceReference
    {
        /// <summary> Initializes a new instance of ApiReference. </summary>
        public ApiReference()
        {
        }

        /// <summary> Initializes a new instance of ApiReference. </summary>
        /// <param name="id">
        /// The resource id.
        /// Serialized Name: ResourceReference.id
        /// </param>
        /// <param name="name">
        /// Gets the resource name.
        /// Serialized Name: ResourceReference.name
        /// </param>
        /// <param name="resourceType">
        /// Gets the resource type.
        /// Serialized Name: ResourceReference.type
        /// </param>
        /// <param name="displayName">
        /// The display name of the api.
        /// Serialized Name: ApiReference.displayName
        /// </param>
        /// <param name="description">
        /// The description of the api.
        /// Serialized Name: ApiReference.description
        /// </param>
        /// <param name="iconUri">
        /// The icon uri of the api.
        /// Serialized Name: ApiReference.iconUri
        /// </param>
        /// <param name="swagger">
        /// The swagger of the api.
        /// Serialized Name: ApiReference.swagger
        /// </param>
        /// <param name="brandColor">
        /// The brand color of the api.
        /// Serialized Name: ApiReference.brandColor
        /// </param>
        /// <param name="category">
        /// The tier.
        /// Serialized Name: ApiReference.category
        /// </param>
        /// <param name="integrationServiceEnvironment">
        /// The integration service environment reference.
        /// Serialized Name: ApiReference.integrationServiceEnvironment
        /// </param>
        internal ApiReference(string id, string name, string resourceType, string displayName, string description, Uri iconUri, BinaryData swagger, string brandColor, ApiTier? category, ResourceReference integrationServiceEnvironment) : base(id, name, resourceType)
        {
            DisplayName = displayName;
            Description = description;
            IconUri = iconUri;
            Swagger = swagger;
            BrandColor = brandColor;
            Category = category;
            IntegrationServiceEnvironment = integrationServiceEnvironment;
        }

        /// <summary>
        /// The display name of the api.
        /// Serialized Name: ApiReference.displayName
        /// </summary>
        public string DisplayName { get; set; }
        /// <summary>
        /// The description of the api.
        /// Serialized Name: ApiReference.description
        /// </summary>
        public string Description { get; set; }
        /// <summary>
        /// The icon uri of the api.
        /// Serialized Name: ApiReference.iconUri
        /// </summary>
        public Uri IconUri { get; set; }
        /// <summary>
        /// The swagger of the api.
        /// Serialized Name: ApiReference.swagger
        /// </summary>
        public BinaryData Swagger { get; set; }
        /// <summary>
        /// The brand color of the api.
        /// Serialized Name: ApiReference.brandColor
        /// </summary>
        public string BrandColor { get; set; }
        /// <summary>
        /// The tier.
        /// Serialized Name: ApiReference.category
        /// </summary>
        public ApiTier? Category { get; set; }
        /// <summary>
        /// The integration service environment reference.
        /// Serialized Name: ApiReference.integrationServiceEnvironment
        /// </summary>
        public ResourceReference IntegrationServiceEnvironment { get; set; }
    }
}
