// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The Edifact delimiter override settings.
    /// Serialized Name: EdifactDelimiterOverride
    /// </summary>
    public partial class EdifactDelimiterOverride
    {
        /// <summary> Initializes a new instance of EdifactDelimiterOverride. </summary>
        /// <param name="dataElementSeparator">
        /// The data element separator.
        /// Serialized Name: EdifactDelimiterOverride.dataElementSeparator
        /// </param>
        /// <param name="componentSeparator">
        /// The component separator.
        /// Serialized Name: EdifactDelimiterOverride.componentSeparator
        /// </param>
        /// <param name="segmentTerminator">
        /// The segment terminator.
        /// Serialized Name: EdifactDelimiterOverride.segmentTerminator
        /// </param>
        /// <param name="repetitionSeparator">
        /// The repetition separator.
        /// Serialized Name: EdifactDelimiterOverride.repetitionSeparator
        /// </param>
        /// <param name="segmentTerminatorSuffix">
        /// The segment terminator suffix.
        /// Serialized Name: EdifactDelimiterOverride.segmentTerminatorSuffix
        /// </param>
        /// <param name="decimalPointIndicator">
        /// The decimal point indicator.
        /// Serialized Name: EdifactDelimiterOverride.decimalPointIndicator
        /// </param>
        /// <param name="releaseIndicator">
        /// The release indicator.
        /// Serialized Name: EdifactDelimiterOverride.releaseIndicator
        /// </param>
        public EdifactDelimiterOverride(int dataElementSeparator, int componentSeparator, int segmentTerminator, int repetitionSeparator, SegmentTerminatorSuffix segmentTerminatorSuffix, EdifactDecimalIndicator decimalPointIndicator, int releaseIndicator)
        {
            DataElementSeparator = dataElementSeparator;
            ComponentSeparator = componentSeparator;
            SegmentTerminator = segmentTerminator;
            RepetitionSeparator = repetitionSeparator;
            SegmentTerminatorSuffix = segmentTerminatorSuffix;
            DecimalPointIndicator = decimalPointIndicator;
            ReleaseIndicator = releaseIndicator;
        }

        /// <summary> Initializes a new instance of EdifactDelimiterOverride. </summary>
        /// <param name="messageId">
        /// The message id.
        /// Serialized Name: EdifactDelimiterOverride.messageId
        /// </param>
        /// <param name="messageVersion">
        /// The message version.
        /// Serialized Name: EdifactDelimiterOverride.messageVersion
        /// </param>
        /// <param name="messageRelease">
        /// The message release.
        /// Serialized Name: EdifactDelimiterOverride.messageRelease
        /// </param>
        /// <param name="dataElementSeparator">
        /// The data element separator.
        /// Serialized Name: EdifactDelimiterOverride.dataElementSeparator
        /// </param>
        /// <param name="componentSeparator">
        /// The component separator.
        /// Serialized Name: EdifactDelimiterOverride.componentSeparator
        /// </param>
        /// <param name="segmentTerminator">
        /// The segment terminator.
        /// Serialized Name: EdifactDelimiterOverride.segmentTerminator
        /// </param>
        /// <param name="repetitionSeparator">
        /// The repetition separator.
        /// Serialized Name: EdifactDelimiterOverride.repetitionSeparator
        /// </param>
        /// <param name="segmentTerminatorSuffix">
        /// The segment terminator suffix.
        /// Serialized Name: EdifactDelimiterOverride.segmentTerminatorSuffix
        /// </param>
        /// <param name="decimalPointIndicator">
        /// The decimal point indicator.
        /// Serialized Name: EdifactDelimiterOverride.decimalPointIndicator
        /// </param>
        /// <param name="releaseIndicator">
        /// The release indicator.
        /// Serialized Name: EdifactDelimiterOverride.releaseIndicator
        /// </param>
        /// <param name="messageAssociationAssignedCode">
        /// The message association assigned code.
        /// Serialized Name: EdifactDelimiterOverride.messageAssociationAssignedCode
        /// </param>
        /// <param name="targetNamespace">
        /// The target namespace on which this delimiter settings has to be applied.
        /// Serialized Name: EdifactDelimiterOverride.targetNamespace
        /// </param>
        internal EdifactDelimiterOverride(string messageId, string messageVersion, string messageRelease, int dataElementSeparator, int componentSeparator, int segmentTerminator, int repetitionSeparator, SegmentTerminatorSuffix segmentTerminatorSuffix, EdifactDecimalIndicator decimalPointIndicator, int releaseIndicator, string messageAssociationAssignedCode, string targetNamespace)
        {
            MessageId = messageId;
            MessageVersion = messageVersion;
            MessageRelease = messageRelease;
            DataElementSeparator = dataElementSeparator;
            ComponentSeparator = componentSeparator;
            SegmentTerminator = segmentTerminator;
            RepetitionSeparator = repetitionSeparator;
            SegmentTerminatorSuffix = segmentTerminatorSuffix;
            DecimalPointIndicator = decimalPointIndicator;
            ReleaseIndicator = releaseIndicator;
            MessageAssociationAssignedCode = messageAssociationAssignedCode;
            TargetNamespace = targetNamespace;
        }

        /// <summary>
        /// The message id.
        /// Serialized Name: EdifactDelimiterOverride.messageId
        /// </summary>
        public string MessageId { get; set; }
        /// <summary>
        /// The message version.
        /// Serialized Name: EdifactDelimiterOverride.messageVersion
        /// </summary>
        public string MessageVersion { get; set; }
        /// <summary>
        /// The message release.
        /// Serialized Name: EdifactDelimiterOverride.messageRelease
        /// </summary>
        public string MessageRelease { get; set; }
        /// <summary>
        /// The data element separator.
        /// Serialized Name: EdifactDelimiterOverride.dataElementSeparator
        /// </summary>
        public int DataElementSeparator { get; set; }
        /// <summary>
        /// The component separator.
        /// Serialized Name: EdifactDelimiterOverride.componentSeparator
        /// </summary>
        public int ComponentSeparator { get; set; }
        /// <summary>
        /// The segment terminator.
        /// Serialized Name: EdifactDelimiterOverride.segmentTerminator
        /// </summary>
        public int SegmentTerminator { get; set; }
        /// <summary>
        /// The repetition separator.
        /// Serialized Name: EdifactDelimiterOverride.repetitionSeparator
        /// </summary>
        public int RepetitionSeparator { get; set; }
        /// <summary>
        /// The segment terminator suffix.
        /// Serialized Name: EdifactDelimiterOverride.segmentTerminatorSuffix
        /// </summary>
        public SegmentTerminatorSuffix SegmentTerminatorSuffix { get; set; }
        /// <summary>
        /// The decimal point indicator.
        /// Serialized Name: EdifactDelimiterOverride.decimalPointIndicator
        /// </summary>
        public EdifactDecimalIndicator DecimalPointIndicator { get; set; }
        /// <summary>
        /// The release indicator.
        /// Serialized Name: EdifactDelimiterOverride.releaseIndicator
        /// </summary>
        public int ReleaseIndicator { get; set; }
        /// <summary>
        /// The message association assigned code.
        /// Serialized Name: EdifactDelimiterOverride.messageAssociationAssignedCode
        /// </summary>
        public string MessageAssociationAssignedCode { get; set; }
        /// <summary>
        /// The target namespace on which this delimiter settings has to be applied.
        /// Serialized Name: EdifactDelimiterOverride.targetNamespace
        /// </summary>
        public string TargetNamespace { get; set; }
    }
}
