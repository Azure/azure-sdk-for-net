// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The Api deployment parameter visibility.
    /// Serialized Name: ApiDeploymentParameterVisibility
    /// </summary>
    public readonly partial struct LogicAppApiDeploymentParameterVisibility : IEquatable<LogicAppApiDeploymentParameterVisibility>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="LogicAppApiDeploymentParameterVisibility"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public LogicAppApiDeploymentParameterVisibility(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotSpecifiedValue = "NotSpecified";
        private const string DefaultValue = "Default";
        private const string InternalValue = "Internal";

        /// <summary>
        /// NotSpecified
        /// Serialized Name: ApiDeploymentParameterVisibility.NotSpecified
        /// </summary>
        public static LogicAppApiDeploymentParameterVisibility NotSpecified { get; } = new LogicAppApiDeploymentParameterVisibility(NotSpecifiedValue);
        /// <summary>
        /// Default
        /// Serialized Name: ApiDeploymentParameterVisibility.Default
        /// </summary>
        public static LogicAppApiDeploymentParameterVisibility Default { get; } = new LogicAppApiDeploymentParameterVisibility(DefaultValue);
        /// <summary>
        /// Internal
        /// Serialized Name: ApiDeploymentParameterVisibility.Internal
        /// </summary>
        public static LogicAppApiDeploymentParameterVisibility Internal { get; } = new LogicAppApiDeploymentParameterVisibility(InternalValue);
        /// <summary> Determines if two <see cref="LogicAppApiDeploymentParameterVisibility"/> values are the same. </summary>
        public static bool operator ==(LogicAppApiDeploymentParameterVisibility left, LogicAppApiDeploymentParameterVisibility right) => left.Equals(right);
        /// <summary> Determines if two <see cref="LogicAppApiDeploymentParameterVisibility"/> values are not the same. </summary>
        public static bool operator !=(LogicAppApiDeploymentParameterVisibility left, LogicAppApiDeploymentParameterVisibility right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="LogicAppApiDeploymentParameterVisibility"/>. </summary>
        public static implicit operator LogicAppApiDeploymentParameterVisibility(string value) => new LogicAppApiDeploymentParameterVisibility(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is LogicAppApiDeploymentParameterVisibility other && Equals(other);
        /// <inheritdoc />
        public bool Equals(LogicAppApiDeploymentParameterVisibility other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
