// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary> The WSDL import method. </summary>
    public readonly partial struct WsdlImportMethod : IEquatable<WsdlImportMethod>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="WsdlImportMethod"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public WsdlImportMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotSpecifiedValue = "NotSpecified";
        private const string SoapToRestValue = "SoapToRest";
        private const string SoapPassThroughValue = "SoapPassThrough";

        /// <summary> NotSpecified. </summary>
        public static WsdlImportMethod NotSpecified { get; } = new WsdlImportMethod(NotSpecifiedValue);
        /// <summary> SoapToRest. </summary>
        public static WsdlImportMethod SoapToRest { get; } = new WsdlImportMethod(SoapToRestValue);
        /// <summary> SoapPassThrough. </summary>
        public static WsdlImportMethod SoapPassThrough { get; } = new WsdlImportMethod(SoapPassThroughValue);
        /// <summary> Determines if two <see cref="WsdlImportMethod"/> values are the same. </summary>
        public static bool operator ==(WsdlImportMethod left, WsdlImportMethod right) => left.Equals(right);
        /// <summary> Determines if two <see cref="WsdlImportMethod"/> values are not the same. </summary>
        public static bool operator !=(WsdlImportMethod left, WsdlImportMethod right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="WsdlImportMethod"/>. </summary>
        public static implicit operator WsdlImportMethod(string value) => new WsdlImportMethod(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is WsdlImportMethod other && Equals(other);
        /// <inheritdoc />
        public bool Equals(WsdlImportMethod other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
