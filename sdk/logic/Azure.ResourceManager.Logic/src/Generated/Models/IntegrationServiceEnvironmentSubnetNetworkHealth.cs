// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary> The integration service environment subnet network health. </summary>
    public partial class IntegrationServiceEnvironmentSubnetNetworkHealth
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="IntegrationServiceEnvironmentSubnetNetworkHealth"/>. </summary>
        /// <param name="networkDependencyHealthState"> The integration service environment network health state. </param>
        internal IntegrationServiceEnvironmentSubnetNetworkHealth(IntegrationServiceEnvironmentNetworkEndPointAccessibilityState networkDependencyHealthState)
        {
            OutboundNetworkDependencies = new ChangeTrackingList<IntegrationServiceEnvironmentNetworkDependency>();
            NetworkDependencyHealthState = networkDependencyHealthState;
        }

        /// <summary> Initializes a new instance of <see cref="IntegrationServiceEnvironmentSubnetNetworkHealth"/>. </summary>
        /// <param name="outboundNetworkDependencies"> The outbound network dependencies. </param>
        /// <param name="outboundNetworkHealth"> The integration service environment network health. </param>
        /// <param name="networkDependencyHealthState"> The integration service environment network health state. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal IntegrationServiceEnvironmentSubnetNetworkHealth(IReadOnlyList<IntegrationServiceEnvironmentNetworkDependency> outboundNetworkDependencies, IntegrationServiceEnvironmentNetworkDependencyHealth outboundNetworkHealth, IntegrationServiceEnvironmentNetworkEndPointAccessibilityState networkDependencyHealthState, Dictionary<string, BinaryData> rawData)
        {
            OutboundNetworkDependencies = outboundNetworkDependencies;
            OutboundNetworkHealth = outboundNetworkHealth;
            NetworkDependencyHealthState = networkDependencyHealthState;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="IntegrationServiceEnvironmentSubnetNetworkHealth"/> for deserialization. </summary>
        internal IntegrationServiceEnvironmentSubnetNetworkHealth()
        {
        }

        /// <summary> The outbound network dependencies. </summary>
        public IReadOnlyList<IntegrationServiceEnvironmentNetworkDependency> OutboundNetworkDependencies { get; }
        /// <summary> The integration service environment network health. </summary>
        public IntegrationServiceEnvironmentNetworkDependencyHealth OutboundNetworkHealth { get; }
        /// <summary> The integration service environment network health state. </summary>
        public IntegrationServiceEnvironmentNetworkEndPointAccessibilityState NetworkDependencyHealthState { get; }
    }
}
