// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The integration service environment properties.
    /// Serialized Name: IntegrationServiceEnvironmentProperties
    /// </summary>
    public partial class IntegrationServiceEnvironmentProperties
    {
        /// <summary> Initializes a new instance of IntegrationServiceEnvironmentProperties. </summary>
        public IntegrationServiceEnvironmentProperties()
        {
        }

        /// <summary> Initializes a new instance of IntegrationServiceEnvironmentProperties. </summary>
        /// <param name="provisioningState">
        /// The provisioning state.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.provisioningState
        /// </param>
        /// <param name="state">
        /// The integration service environment state.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.state
        /// </param>
        /// <param name="integrationServiceEnvironmentId">
        /// Gets the tracking id.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.integrationServiceEnvironmentId
        /// </param>
        /// <param name="endpointsConfiguration">
        /// The endpoints configuration.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.endpointsConfiguration
        /// </param>
        /// <param name="networkConfiguration">
        /// The network configuration.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.networkConfiguration
        /// </param>
        /// <param name="encryptionConfiguration">
        /// The encryption configuration.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.encryptionConfiguration
        /// </param>
        internal IntegrationServiceEnvironmentProperties(LogicAppWorkflowProvisioningState? provisioningState, LogicAppWorkflowState? state, string integrationServiceEnvironmentId, FlowEndpointsConfiguration endpointsConfiguration, NetworkConfiguration networkConfiguration, IntegrationServiceEnvironmenEncryptionConfiguration encryptionConfiguration)
        {
            ProvisioningState = provisioningState;
            State = state;
            IntegrationServiceEnvironmentId = integrationServiceEnvironmentId;
            EndpointsConfiguration = endpointsConfiguration;
            NetworkConfiguration = networkConfiguration;
            EncryptionConfiguration = encryptionConfiguration;
        }

        /// <summary>
        /// The provisioning state.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.provisioningState
        /// </summary>
        public LogicAppWorkflowProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The integration service environment state.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.state
        /// </summary>
        public LogicAppWorkflowState? State { get; set; }
        /// <summary>
        /// Gets the tracking id.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.integrationServiceEnvironmentId
        /// </summary>
        public string IntegrationServiceEnvironmentId { get; set; }
        /// <summary>
        /// The endpoints configuration.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.endpointsConfiguration
        /// </summary>
        public FlowEndpointsConfiguration EndpointsConfiguration { get; set; }
        /// <summary>
        /// The network configuration.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.networkConfiguration
        /// </summary>
        public NetworkConfiguration NetworkConfiguration { get; set; }
        /// <summary>
        /// The encryption configuration.
        /// Serialized Name: IntegrationServiceEnvironmentProperties.encryptionConfiguration
        /// </summary>
        internal IntegrationServiceEnvironmenEncryptionConfiguration EncryptionConfiguration { get; set; }
        /// <summary>
        /// The encryption key reference.
        /// Serialized Name: IntegrationServiceEnvironmenEncryptionConfiguration.encryptionKeyReference
        /// </summary>
        public IntegrationServiceEnvironmenEncryptionKeyReference EncryptionKeyReference
        {
            get => EncryptionConfiguration is null ? default : EncryptionConfiguration.EncryptionKeyReference;
            set
            {
                if (EncryptionConfiguration is null)
                    EncryptionConfiguration = new IntegrationServiceEnvironmenEncryptionConfiguration();
                EncryptionConfiguration.EncryptionKeyReference = value;
            }
        }
    }
}
