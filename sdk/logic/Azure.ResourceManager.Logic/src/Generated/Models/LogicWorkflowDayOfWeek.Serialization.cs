// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Logic.Models
{
    internal static partial class LogicWorkflowDayOfWeekExtensions
    {
        public static string ToSerialString(this LogicWorkflowDayOfWeek value) => value switch
        {
            LogicWorkflowDayOfWeek.Sunday => "Sunday",
            LogicWorkflowDayOfWeek.Monday => "Monday",
            LogicWorkflowDayOfWeek.Tuesday => "Tuesday",
            LogicWorkflowDayOfWeek.Wednesday => "Wednesday",
            LogicWorkflowDayOfWeek.Thursday => "Thursday",
            LogicWorkflowDayOfWeek.Friday => "Friday",
            LogicWorkflowDayOfWeek.Saturday => "Saturday",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown LogicWorkflowDayOfWeek value.")
        };

        public static LogicWorkflowDayOfWeek ToLogicWorkflowDayOfWeek(this string value)
        {
            if (string.Equals(value, "Sunday", StringComparison.InvariantCultureIgnoreCase)) return LogicWorkflowDayOfWeek.Sunday;
            if (string.Equals(value, "Monday", StringComparison.InvariantCultureIgnoreCase)) return LogicWorkflowDayOfWeek.Monday;
            if (string.Equals(value, "Tuesday", StringComparison.InvariantCultureIgnoreCase)) return LogicWorkflowDayOfWeek.Tuesday;
            if (string.Equals(value, "Wednesday", StringComparison.InvariantCultureIgnoreCase)) return LogicWorkflowDayOfWeek.Wednesday;
            if (string.Equals(value, "Thursday", StringComparison.InvariantCultureIgnoreCase)) return LogicWorkflowDayOfWeek.Thursday;
            if (string.Equals(value, "Friday", StringComparison.InvariantCultureIgnoreCase)) return LogicWorkflowDayOfWeek.Friday;
            if (string.Equals(value, "Saturday", StringComparison.InvariantCultureIgnoreCase)) return LogicWorkflowDayOfWeek.Saturday;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown LogicWorkflowDayOfWeek value.");
        }
    }
}
