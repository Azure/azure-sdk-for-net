// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The Edifact agreement acknowledgement settings.
    /// Serialized Name: EdifactAcknowledgementSettings
    /// </summary>
    public partial class EdifactAcknowledgementSettings
    {
        /// <summary> Initializes a new instance of EdifactAcknowledgementSettings. </summary>
        /// <param name="needTechnicalAcknowledgement">
        /// The value indicating whether technical acknowledgement is needed.
        /// Serialized Name: EdifactAcknowledgementSettings.needTechnicalAcknowledgement
        /// </param>
        /// <param name="batchTechnicalAcknowledgements">
        /// The value indicating whether to batch the technical acknowledgements.
        /// Serialized Name: EdifactAcknowledgementSettings.batchTechnicalAcknowledgements
        /// </param>
        /// <param name="needFunctionalAcknowledgement">
        /// The value indicating whether functional acknowledgement is needed.
        /// Serialized Name: EdifactAcknowledgementSettings.needFunctionalAcknowledgement
        /// </param>
        /// <param name="batchFunctionalAcknowledgements">
        /// The value indicating whether to batch functional acknowledgements.
        /// Serialized Name: EdifactAcknowledgementSettings.batchFunctionalAcknowledgements
        /// </param>
        /// <param name="needLoopForValidMessages">
        /// The value indicating whether a loop is needed for valid messages.
        /// Serialized Name: EdifactAcknowledgementSettings.needLoopForValidMessages
        /// </param>
        /// <param name="sendSynchronousAcknowledgement">
        /// The value indicating whether to send synchronous acknowledgement.
        /// Serialized Name: EdifactAcknowledgementSettings.sendSynchronousAcknowledgement
        /// </param>
        /// <param name="acknowledgementControlNumberLowerBound">
        /// The acknowledgement control number lower bound.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberLowerBound
        /// </param>
        /// <param name="acknowledgementControlNumberUpperBound">
        /// The acknowledgement control number upper bound.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberUpperBound
        /// </param>
        /// <param name="rolloverAcknowledgementControlNumber">
        /// The value indicating whether to rollover acknowledgement control number.
        /// Serialized Name: EdifactAcknowledgementSettings.rolloverAcknowledgementControlNumber
        /// </param>
        public EdifactAcknowledgementSettings(bool needTechnicalAcknowledgement, bool batchTechnicalAcknowledgements, bool needFunctionalAcknowledgement, bool batchFunctionalAcknowledgements, bool needLoopForValidMessages, bool sendSynchronousAcknowledgement, int acknowledgementControlNumberLowerBound, int acknowledgementControlNumberUpperBound, bool rolloverAcknowledgementControlNumber)
        {
            NeedTechnicalAcknowledgement = needTechnicalAcknowledgement;
            BatchTechnicalAcknowledgements = batchTechnicalAcknowledgements;
            NeedFunctionalAcknowledgement = needFunctionalAcknowledgement;
            BatchFunctionalAcknowledgements = batchFunctionalAcknowledgements;
            NeedLoopForValidMessages = needLoopForValidMessages;
            SendSynchronousAcknowledgement = sendSynchronousAcknowledgement;
            AcknowledgementControlNumberLowerBound = acknowledgementControlNumberLowerBound;
            AcknowledgementControlNumberUpperBound = acknowledgementControlNumberUpperBound;
            RolloverAcknowledgementControlNumber = rolloverAcknowledgementControlNumber;
        }

        /// <summary> Initializes a new instance of EdifactAcknowledgementSettings. </summary>
        /// <param name="needTechnicalAcknowledgement">
        /// The value indicating whether technical acknowledgement is needed.
        /// Serialized Name: EdifactAcknowledgementSettings.needTechnicalAcknowledgement
        /// </param>
        /// <param name="batchTechnicalAcknowledgements">
        /// The value indicating whether to batch the technical acknowledgements.
        /// Serialized Name: EdifactAcknowledgementSettings.batchTechnicalAcknowledgements
        /// </param>
        /// <param name="needFunctionalAcknowledgement">
        /// The value indicating whether functional acknowledgement is needed.
        /// Serialized Name: EdifactAcknowledgementSettings.needFunctionalAcknowledgement
        /// </param>
        /// <param name="batchFunctionalAcknowledgements">
        /// The value indicating whether to batch functional acknowledgements.
        /// Serialized Name: EdifactAcknowledgementSettings.batchFunctionalAcknowledgements
        /// </param>
        /// <param name="needLoopForValidMessages">
        /// The value indicating whether a loop is needed for valid messages.
        /// Serialized Name: EdifactAcknowledgementSettings.needLoopForValidMessages
        /// </param>
        /// <param name="sendSynchronousAcknowledgement">
        /// The value indicating whether to send synchronous acknowledgement.
        /// Serialized Name: EdifactAcknowledgementSettings.sendSynchronousAcknowledgement
        /// </param>
        /// <param name="acknowledgementControlNumberPrefix">
        /// The acknowledgement control number prefix.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberPrefix
        /// </param>
        /// <param name="acknowledgementControlNumberSuffix">
        /// The acknowledgement control number suffix.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberSuffix
        /// </param>
        /// <param name="acknowledgementControlNumberLowerBound">
        /// The acknowledgement control number lower bound.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberLowerBound
        /// </param>
        /// <param name="acknowledgementControlNumberUpperBound">
        /// The acknowledgement control number upper bound.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberUpperBound
        /// </param>
        /// <param name="rolloverAcknowledgementControlNumber">
        /// The value indicating whether to rollover acknowledgement control number.
        /// Serialized Name: EdifactAcknowledgementSettings.rolloverAcknowledgementControlNumber
        /// </param>
        internal EdifactAcknowledgementSettings(bool needTechnicalAcknowledgement, bool batchTechnicalAcknowledgements, bool needFunctionalAcknowledgement, bool batchFunctionalAcknowledgements, bool needLoopForValidMessages, bool sendSynchronousAcknowledgement, string acknowledgementControlNumberPrefix, string acknowledgementControlNumberSuffix, int acknowledgementControlNumberLowerBound, int acknowledgementControlNumberUpperBound, bool rolloverAcknowledgementControlNumber)
        {
            NeedTechnicalAcknowledgement = needTechnicalAcknowledgement;
            BatchTechnicalAcknowledgements = batchTechnicalAcknowledgements;
            NeedFunctionalAcknowledgement = needFunctionalAcknowledgement;
            BatchFunctionalAcknowledgements = batchFunctionalAcknowledgements;
            NeedLoopForValidMessages = needLoopForValidMessages;
            SendSynchronousAcknowledgement = sendSynchronousAcknowledgement;
            AcknowledgementControlNumberPrefix = acknowledgementControlNumberPrefix;
            AcknowledgementControlNumberSuffix = acknowledgementControlNumberSuffix;
            AcknowledgementControlNumberLowerBound = acknowledgementControlNumberLowerBound;
            AcknowledgementControlNumberUpperBound = acknowledgementControlNumberUpperBound;
            RolloverAcknowledgementControlNumber = rolloverAcknowledgementControlNumber;
        }

        /// <summary>
        /// The value indicating whether technical acknowledgement is needed.
        /// Serialized Name: EdifactAcknowledgementSettings.needTechnicalAcknowledgement
        /// </summary>
        public bool NeedTechnicalAcknowledgement { get; set; }
        /// <summary>
        /// The value indicating whether to batch the technical acknowledgements.
        /// Serialized Name: EdifactAcknowledgementSettings.batchTechnicalAcknowledgements
        /// </summary>
        public bool BatchTechnicalAcknowledgements { get; set; }
        /// <summary>
        /// The value indicating whether functional acknowledgement is needed.
        /// Serialized Name: EdifactAcknowledgementSettings.needFunctionalAcknowledgement
        /// </summary>
        public bool NeedFunctionalAcknowledgement { get; set; }
        /// <summary>
        /// The value indicating whether to batch functional acknowledgements.
        /// Serialized Name: EdifactAcknowledgementSettings.batchFunctionalAcknowledgements
        /// </summary>
        public bool BatchFunctionalAcknowledgements { get; set; }
        /// <summary>
        /// The value indicating whether a loop is needed for valid messages.
        /// Serialized Name: EdifactAcknowledgementSettings.needLoopForValidMessages
        /// </summary>
        public bool NeedLoopForValidMessages { get; set; }
        /// <summary>
        /// The value indicating whether to send synchronous acknowledgement.
        /// Serialized Name: EdifactAcknowledgementSettings.sendSynchronousAcknowledgement
        /// </summary>
        public bool SendSynchronousAcknowledgement { get; set; }
        /// <summary>
        /// The acknowledgement control number prefix.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberPrefix
        /// </summary>
        public string AcknowledgementControlNumberPrefix { get; set; }
        /// <summary>
        /// The acknowledgement control number suffix.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberSuffix
        /// </summary>
        public string AcknowledgementControlNumberSuffix { get; set; }
        /// <summary>
        /// The acknowledgement control number lower bound.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberLowerBound
        /// </summary>
        public int AcknowledgementControlNumberLowerBound { get; set; }
        /// <summary>
        /// The acknowledgement control number upper bound.
        /// Serialized Name: EdifactAcknowledgementSettings.acknowledgementControlNumberUpperBound
        /// </summary>
        public int AcknowledgementControlNumberUpperBound { get; set; }
        /// <summary>
        /// The value indicating whether to rollover acknowledgement control number.
        /// Serialized Name: EdifactAcknowledgementSettings.rolloverAcknowledgementControlNumber
        /// </summary>
        public bool RolloverAcknowledgementControlNumber { get; set; }
    }
}
