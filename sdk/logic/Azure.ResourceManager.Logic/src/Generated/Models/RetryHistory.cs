// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary> The retry history. </summary>
    public partial class RetryHistory
    {
        /// <summary> Initializes a new instance of RetryHistory. </summary>
        public RetryHistory()
        {
        }

        /// <summary> Initializes a new instance of RetryHistory. </summary>
        /// <param name="startOn"> Gets the start time. </param>
        /// <param name="endOn"> Gets the end time. </param>
        /// <param name="code"> Gets the status code. </param>
        /// <param name="clientRequestId"> Gets the client request Id. </param>
        /// <param name="serviceRequestId"> Gets the service request Id. </param>
        /// <param name="errorResponse"> Gets the error response. </param>
        internal RetryHistory(DateTimeOffset? startOn, DateTimeOffset? endOn, string code, string clientRequestId, string serviceRequestId, ErrorResponse errorResponse)
        {
            StartOn = startOn;
            EndOn = endOn;
            Code = code;
            ClientRequestId = clientRequestId;
            ServiceRequestId = serviceRequestId;
            ErrorResponse = errorResponse;
        }

        /// <summary> Gets the start time. </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary> Gets the end time. </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary> Gets the status code. </summary>
        public string Code { get; set; }
        /// <summary> Gets the client request Id. </summary>
        public string ClientRequestId { get; set; }
        /// <summary> Gets the service request Id. </summary>
        public string ServiceRequestId { get; set; }
        /// <summary> Gets the error response. </summary>
        internal ErrorResponse ErrorResponse { get; set; }
        /// <summary> The error properties. </summary>
        public ErrorProperties Error
        {
            get => ErrorResponse is null ? default : ErrorResponse.Error;
            set
            {
                if (ErrorResponse is null)
                    ErrorResponse = new ErrorResponse();
                ErrorResponse.Error = value;
            }
        }
    }
}
