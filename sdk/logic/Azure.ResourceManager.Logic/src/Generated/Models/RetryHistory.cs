// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The retry history.
    /// Serialized Name: RetryHistory
    /// </summary>
    public partial class RetryHistory
    {
        /// <summary> Initializes a new instance of RetryHistory. </summary>
        public RetryHistory()
        {
        }

        /// <summary> Initializes a new instance of RetryHistory. </summary>
        /// <param name="startOn">
        /// Gets the start time.
        /// Serialized Name: RetryHistory.startTime
        /// </param>
        /// <param name="endOn">
        /// Gets the end time.
        /// Serialized Name: RetryHistory.endTime
        /// </param>
        /// <param name="code">
        /// Gets the status code.
        /// Serialized Name: RetryHistory.code
        /// </param>
        /// <param name="clientRequestId">
        /// Gets the client request Id.
        /// Serialized Name: RetryHistory.clientRequestId
        /// </param>
        /// <param name="serviceRequestId">
        /// Gets the service request Id.
        /// Serialized Name: RetryHistory.serviceRequestId
        /// </param>
        /// <param name="errorResponse">
        /// Gets the error response.
        /// Serialized Name: RetryHistory.error
        /// </param>
        internal RetryHistory(DateTimeOffset? startOn, DateTimeOffset? endOn, string code, string clientRequestId, string serviceRequestId, ErrorResponse errorResponse)
        {
            StartOn = startOn;
            EndOn = endOn;
            Code = code;
            ClientRequestId = clientRequestId;
            ServiceRequestId = serviceRequestId;
            ErrorResponse = errorResponse;
        }

        /// <summary>
        /// Gets the start time.
        /// Serialized Name: RetryHistory.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary>
        /// Gets the end time.
        /// Serialized Name: RetryHistory.endTime
        /// </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary>
        /// Gets the status code.
        /// Serialized Name: RetryHistory.code
        /// </summary>
        public string Code { get; set; }
        /// <summary>
        /// Gets the client request Id.
        /// Serialized Name: RetryHistory.clientRequestId
        /// </summary>
        public string ClientRequestId { get; set; }
        /// <summary>
        /// Gets the service request Id.
        /// Serialized Name: RetryHistory.serviceRequestId
        /// </summary>
        public string ServiceRequestId { get; set; }
        /// <summary>
        /// Gets the error response.
        /// Serialized Name: RetryHistory.error
        /// </summary>
        internal ErrorResponse ErrorResponse { get; set; }
        /// <summary>
        /// The error properties.
        /// Serialized Name: ErrorResponse.error
        /// </summary>
        public ErrorProperties Error
        {
            get => ErrorResponse is null ? default : ErrorResponse.Error;
            set
            {
                if (ErrorResponse is null)
                    ErrorResponse = new ErrorResponse();
                ErrorResponse.Error = value;
            }
        }
    }
}
