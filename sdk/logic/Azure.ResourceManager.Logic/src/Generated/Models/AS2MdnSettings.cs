// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The AS2 agreement mdn settings.
    /// Serialized Name: AS2MdnSettings
    /// </summary>
    public partial class AS2MdnSettings
    {
        /// <summary> Initializes a new instance of AS2MdnSettings. </summary>
        /// <param name="needMDN">
        /// The value indicating whether to send or request a MDN.
        /// Serialized Name: AS2MdnSettings.needMDN
        /// </param>
        /// <param name="signMDN">
        /// The value indicating whether the MDN needs to be signed or not.
        /// Serialized Name: AS2MdnSettings.signMDN
        /// </param>
        /// <param name="sendMDNAsynchronously">
        /// The value indicating whether to send the asynchronous MDN.
        /// Serialized Name: AS2MdnSettings.sendMDNAsynchronously
        /// </param>
        /// <param name="signOutboundMDNIfOptional">
        /// The value indicating whether to sign the outbound MDN if optional.
        /// Serialized Name: AS2MdnSettings.signOutboundMDNIfOptional
        /// </param>
        /// <param name="sendInboundMDNToMessageBox">
        /// The value indicating whether to send inbound MDN to message box.
        /// Serialized Name: AS2MdnSettings.sendInboundMDNToMessageBox
        /// </param>
        /// <param name="micHashingAlgorithm">
        /// The signing or hashing algorithm.
        /// Serialized Name: AS2MdnSettings.micHashingAlgorithm
        /// </param>
        public AS2MdnSettings(bool needMDN, bool signMDN, bool sendMDNAsynchronously, bool signOutboundMDNIfOptional, bool sendInboundMDNToMessageBox, HashingAlgorithm micHashingAlgorithm)
        {
            NeedMDN = needMDN;
            SignMDN = signMDN;
            SendMDNAsynchronously = sendMDNAsynchronously;
            SignOutboundMDNIfOptional = signOutboundMDNIfOptional;
            SendInboundMDNToMessageBox = sendInboundMDNToMessageBox;
            MicHashingAlgorithm = micHashingAlgorithm;
        }

        /// <summary> Initializes a new instance of AS2MdnSettings. </summary>
        /// <param name="needMDN">
        /// The value indicating whether to send or request a MDN.
        /// Serialized Name: AS2MdnSettings.needMDN
        /// </param>
        /// <param name="signMDN">
        /// The value indicating whether the MDN needs to be signed or not.
        /// Serialized Name: AS2MdnSettings.signMDN
        /// </param>
        /// <param name="sendMDNAsynchronously">
        /// The value indicating whether to send the asynchronous MDN.
        /// Serialized Name: AS2MdnSettings.sendMDNAsynchronously
        /// </param>
        /// <param name="receiptDeliveryUri">
        /// The receipt delivery URL.
        /// Serialized Name: AS2MdnSettings.receiptDeliveryUrl
        /// </param>
        /// <param name="dispositionNotificationTo">
        /// The disposition notification to header value.
        /// Serialized Name: AS2MdnSettings.dispositionNotificationTo
        /// </param>
        /// <param name="signOutboundMDNIfOptional">
        /// The value indicating whether to sign the outbound MDN if optional.
        /// Serialized Name: AS2MdnSettings.signOutboundMDNIfOptional
        /// </param>
        /// <param name="mdnText">
        /// The MDN text.
        /// Serialized Name: AS2MdnSettings.mdnText
        /// </param>
        /// <param name="sendInboundMDNToMessageBox">
        /// The value indicating whether to send inbound MDN to message box.
        /// Serialized Name: AS2MdnSettings.sendInboundMDNToMessageBox
        /// </param>
        /// <param name="micHashingAlgorithm">
        /// The signing or hashing algorithm.
        /// Serialized Name: AS2MdnSettings.micHashingAlgorithm
        /// </param>
        internal AS2MdnSettings(bool needMDN, bool signMDN, bool sendMDNAsynchronously, Uri receiptDeliveryUri, string dispositionNotificationTo, bool signOutboundMDNIfOptional, string mdnText, bool sendInboundMDNToMessageBox, HashingAlgorithm micHashingAlgorithm)
        {
            NeedMDN = needMDN;
            SignMDN = signMDN;
            SendMDNAsynchronously = sendMDNAsynchronously;
            ReceiptDeliveryUri = receiptDeliveryUri;
            DispositionNotificationTo = dispositionNotificationTo;
            SignOutboundMDNIfOptional = signOutboundMDNIfOptional;
            MdnText = mdnText;
            SendInboundMDNToMessageBox = sendInboundMDNToMessageBox;
            MicHashingAlgorithm = micHashingAlgorithm;
        }

        /// <summary>
        /// The value indicating whether to send or request a MDN.
        /// Serialized Name: AS2MdnSettings.needMDN
        /// </summary>
        public bool NeedMDN { get; set; }
        /// <summary>
        /// The value indicating whether the MDN needs to be signed or not.
        /// Serialized Name: AS2MdnSettings.signMDN
        /// </summary>
        public bool SignMDN { get; set; }
        /// <summary>
        /// The value indicating whether to send the asynchronous MDN.
        /// Serialized Name: AS2MdnSettings.sendMDNAsynchronously
        /// </summary>
        public bool SendMDNAsynchronously { get; set; }
        /// <summary>
        /// The receipt delivery URL.
        /// Serialized Name: AS2MdnSettings.receiptDeliveryUrl
        /// </summary>
        public Uri ReceiptDeliveryUri { get; set; }
        /// <summary>
        /// The disposition notification to header value.
        /// Serialized Name: AS2MdnSettings.dispositionNotificationTo
        /// </summary>
        public string DispositionNotificationTo { get; set; }
        /// <summary>
        /// The value indicating whether to sign the outbound MDN if optional.
        /// Serialized Name: AS2MdnSettings.signOutboundMDNIfOptional
        /// </summary>
        public bool SignOutboundMDNIfOptional { get; set; }
        /// <summary>
        /// The MDN text.
        /// Serialized Name: AS2MdnSettings.mdnText
        /// </summary>
        public string MdnText { get; set; }
        /// <summary>
        /// The value indicating whether to send inbound MDN to message box.
        /// Serialized Name: AS2MdnSettings.sendInboundMDNToMessageBox
        /// </summary>
        public bool SendInboundMDNToMessageBox { get; set; }
        /// <summary>
        /// The signing or hashing algorithm.
        /// Serialized Name: AS2MdnSettings.micHashingAlgorithm
        /// </summary>
        public HashingAlgorithm MicHashingAlgorithm { get; set; }
    }
}
