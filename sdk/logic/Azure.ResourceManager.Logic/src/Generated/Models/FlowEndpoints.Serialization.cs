// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Logic.Models
{
    public partial class FlowEndpoints : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(OutgoingIPAddresses))
            {
                writer.WritePropertyName("outgoingIpAddresses"u8);
                writer.WriteStartArray();
                foreach (var item in OutgoingIPAddresses)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(AccessEndpointIPAddresses))
            {
                writer.WritePropertyName("accessEndpointIpAddresses"u8);
                writer.WriteStartArray();
                foreach (var item in AccessEndpointIPAddresses)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static FlowEndpoints DeserializeFlowEndpoints(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<FlowEndpointIPAddress>> outgoingIPAddresses = default;
            Optional<IList<FlowEndpointIPAddress>> accessEndpointIPAddresses = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("outgoingIpAddresses"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<FlowEndpointIPAddress> array = new List<FlowEndpointIPAddress>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(FlowEndpointIPAddress.DeserializeFlowEndpointIPAddress(item));
                    }
                    outgoingIPAddresses = array;
                    continue;
                }
                if (property.NameEquals("accessEndpointIpAddresses"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<FlowEndpointIPAddress> array = new List<FlowEndpointIPAddress>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(FlowEndpointIPAddress.DeserializeFlowEndpointIPAddress(item));
                    }
                    accessEndpointIPAddresses = array;
                    continue;
                }
            }
            return new FlowEndpoints(Optional.ToList(outgoingIPAddresses), Optional.ToList(accessEndpointIPAddresses));
        }
    }
}
