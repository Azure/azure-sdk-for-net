// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary> The error response code. </summary>
    public readonly partial struct ErrorResponseCode : IEquatable<ErrorResponseCode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ErrorResponseCode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ErrorResponseCode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotSpecifiedValue = "NotSpecified";
        private const string IntegrationServiceEnvironmentNotFoundValue = "IntegrationServiceEnvironmentNotFound";
        private const string InternalServerErrorValue = "InternalServerError";
        private const string InvalidOperationIdValue = "InvalidOperationId";

        /// <summary> NotSpecified. </summary>
        public static ErrorResponseCode NotSpecified { get; } = new ErrorResponseCode(NotSpecifiedValue);
        /// <summary> IntegrationServiceEnvironmentNotFound. </summary>
        public static ErrorResponseCode IntegrationServiceEnvironmentNotFound { get; } = new ErrorResponseCode(IntegrationServiceEnvironmentNotFoundValue);
        /// <summary> InternalServerError. </summary>
        public static ErrorResponseCode InternalServerError { get; } = new ErrorResponseCode(InternalServerErrorValue);
        /// <summary> InvalidOperationId. </summary>
        public static ErrorResponseCode InvalidOperationId { get; } = new ErrorResponseCode(InvalidOperationIdValue);
        /// <summary> Determines if two <see cref="ErrorResponseCode"/> values are the same. </summary>
        public static bool operator ==(ErrorResponseCode left, ErrorResponseCode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ErrorResponseCode"/> values are not the same. </summary>
        public static bool operator !=(ErrorResponseCode left, ErrorResponseCode right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ErrorResponseCode"/>. </summary>
        public static implicit operator ErrorResponseCode(string value) => new ErrorResponseCode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ErrorResponseCode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ErrorResponseCode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
