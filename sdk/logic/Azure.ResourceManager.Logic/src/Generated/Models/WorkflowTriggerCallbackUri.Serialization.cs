// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Logic.Models
{
    public partial class WorkflowTriggerCallbackUri
    {
        internal static WorkflowTriggerCallbackUri DeserializeWorkflowTriggerCallbackUri(JsonElement element)
        {
            Optional<string> value = default;
            Optional<string> method = default;
            Optional<string> basePath = default;
            Optional<string> relativePath = default;
            Optional<IReadOnlyList<string>> relativePathParameters = default;
            Optional<WorkflowTriggerListCallbackUrlQueries> queries = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("value"))
                {
                    value = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("method"))
                {
                    method = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("basePath"))
                {
                    basePath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("relativePath"))
                {
                    relativePath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("relativePathParameters"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    relativePathParameters = array;
                    continue;
                }
                if (property.NameEquals("queries"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    queries = WorkflowTriggerListCallbackUrlQueries.DeserializeWorkflowTriggerListCallbackUrlQueries(property.Value);
                    continue;
                }
            }
            return new WorkflowTriggerCallbackUri(value.Value, method.Value, basePath.Value, relativePath.Value, Optional.ToList(relativePathParameters), queries.Value);
        }
    }
}
