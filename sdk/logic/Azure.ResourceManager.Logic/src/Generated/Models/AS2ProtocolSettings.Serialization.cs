// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Logic.Models
{
    public partial class AS2ProtocolSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("messageConnectionSettings"u8);
            writer.WriteObjectValue(MessageConnectionSettings);
            writer.WritePropertyName("acknowledgementConnectionSettings"u8);
            writer.WriteObjectValue(AcknowledgementConnectionSettings);
            writer.WritePropertyName("mdnSettings"u8);
            writer.WriteObjectValue(MdnSettings);
            writer.WritePropertyName("securitySettings"u8);
            writer.WriteObjectValue(SecuritySettings);
            writer.WritePropertyName("validationSettings"u8);
            writer.WriteObjectValue(ValidationSettings);
            writer.WritePropertyName("envelopeSettings"u8);
            writer.WriteObjectValue(EnvelopeSettings);
            writer.WritePropertyName("errorSettings"u8);
            writer.WriteObjectValue(ErrorSettings);
            writer.WriteEndObject();
        }

        internal static AS2ProtocolSettings DeserializeAS2ProtocolSettings(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            AS2MessageConnectionSettings messageConnectionSettings = default;
            AS2AcknowledgementConnectionSettings acknowledgementConnectionSettings = default;
            AS2MdnSettings mdnSettings = default;
            AS2SecuritySettings securitySettings = default;
            AS2ValidationSettings validationSettings = default;
            AS2EnvelopeSettings envelopeSettings = default;
            AS2ErrorSettings errorSettings = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("messageConnectionSettings"u8))
                {
                    messageConnectionSettings = AS2MessageConnectionSettings.DeserializeAS2MessageConnectionSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("acknowledgementConnectionSettings"u8))
                {
                    acknowledgementConnectionSettings = AS2AcknowledgementConnectionSettings.DeserializeAS2AcknowledgementConnectionSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("mdnSettings"u8))
                {
                    mdnSettings = AS2MdnSettings.DeserializeAS2MdnSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("securitySettings"u8))
                {
                    securitySettings = AS2SecuritySettings.DeserializeAS2SecuritySettings(property.Value);
                    continue;
                }
                if (property.NameEquals("validationSettings"u8))
                {
                    validationSettings = AS2ValidationSettings.DeserializeAS2ValidationSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("envelopeSettings"u8))
                {
                    envelopeSettings = AS2EnvelopeSettings.DeserializeAS2EnvelopeSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("errorSettings"u8))
                {
                    errorSettings = AS2ErrorSettings.DeserializeAS2ErrorSettings(property.Value);
                    continue;
                }
            }
            return new AS2ProtocolSettings(messageConnectionSettings, acknowledgementConnectionSettings, mdnSettings, securitySettings, validationSettings, envelopeSettings, errorSettings);
        }
    }
}
