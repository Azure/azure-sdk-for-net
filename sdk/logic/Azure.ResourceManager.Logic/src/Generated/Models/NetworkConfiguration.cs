// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The network configuration.
    /// Serialized Name: NetworkConfiguration
    /// </summary>
    public partial class NetworkConfiguration
    {
        /// <summary> Initializes a new instance of NetworkConfiguration. </summary>
        public NetworkConfiguration()
        {
            Subnets = new ChangeTrackingList<ResourceReference>();
        }

        /// <summary> Initializes a new instance of NetworkConfiguration. </summary>
        /// <param name="virtualNetworkAddressSpace">
        /// Gets the virtual network address space.
        /// Serialized Name: NetworkConfiguration.virtualNetworkAddressSpace
        /// </param>
        /// <param name="accessEndpoint">
        /// The access endpoint.
        /// Serialized Name: NetworkConfiguration.accessEndpoint
        /// </param>
        /// <param name="subnets">
        /// The subnets.
        /// Serialized Name: NetworkConfiguration.subnets
        /// </param>
        internal NetworkConfiguration(string virtualNetworkAddressSpace, IntegrationServiceEnvironmentAccessEndpoint accessEndpoint, IList<ResourceReference> subnets)
        {
            VirtualNetworkAddressSpace = virtualNetworkAddressSpace;
            AccessEndpoint = accessEndpoint;
            Subnets = subnets;
        }

        /// <summary>
        /// Gets the virtual network address space.
        /// Serialized Name: NetworkConfiguration.virtualNetworkAddressSpace
        /// </summary>
        public string VirtualNetworkAddressSpace { get; set; }
        /// <summary>
        /// The access endpoint.
        /// Serialized Name: NetworkConfiguration.accessEndpoint
        /// </summary>
        internal IntegrationServiceEnvironmentAccessEndpoint AccessEndpoint { get; set; }
        /// <summary>
        /// The access endpoint type.
        /// Serialized Name: IntegrationServiceEnvironmentAccessEndpoint.type
        /// </summary>
        public IntegrationServiceEnvironmentAccessEndpointType? EndpointType
        {
            get => AccessEndpoint is null ? default : AccessEndpoint.EndpointType;
            set
            {
                if (AccessEndpoint is null)
                    AccessEndpoint = new IntegrationServiceEnvironmentAccessEndpoint();
                AccessEndpoint.EndpointType = value;
            }
        }

        /// <summary>
        /// The subnets.
        /// Serialized Name: NetworkConfiguration.subnets
        /// </summary>
        public IList<ResourceReference> Subnets { get; }
    }
}
