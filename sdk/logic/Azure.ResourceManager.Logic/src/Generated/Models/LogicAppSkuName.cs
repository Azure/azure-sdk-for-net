// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Logic.Models
{
    /// <summary>
    /// The sku name.
    /// Serialized Name: SkuName
    /// </summary>
    public readonly partial struct LogicAppSkuName : IEquatable<LogicAppSkuName>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="LogicAppSkuName"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public LogicAppSkuName(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotSpecifiedValue = "NotSpecified";
        private const string FreeValue = "Free";
        private const string SharedValue = "Shared";
        private const string BasicValue = "Basic";
        private const string StandardValue = "Standard";
        private const string PremiumValue = "Premium";

        /// <summary>
        /// NotSpecified
        /// Serialized Name: SkuName.NotSpecified
        /// </summary>
        public static LogicAppSkuName NotSpecified { get; } = new LogicAppSkuName(NotSpecifiedValue);
        /// <summary>
        /// Free
        /// Serialized Name: SkuName.Free
        /// </summary>
        public static LogicAppSkuName Free { get; } = new LogicAppSkuName(FreeValue);
        /// <summary>
        /// Shared
        /// Serialized Name: SkuName.Shared
        /// </summary>
        public static LogicAppSkuName Shared { get; } = new LogicAppSkuName(SharedValue);
        /// <summary>
        /// Basic
        /// Serialized Name: SkuName.Basic
        /// </summary>
        public static LogicAppSkuName Basic { get; } = new LogicAppSkuName(BasicValue);
        /// <summary>
        /// Standard
        /// Serialized Name: SkuName.Standard
        /// </summary>
        public static LogicAppSkuName Standard { get; } = new LogicAppSkuName(StandardValue);
        /// <summary>
        /// Premium
        /// Serialized Name: SkuName.Premium
        /// </summary>
        public static LogicAppSkuName Premium { get; } = new LogicAppSkuName(PremiumValue);
        /// <summary> Determines if two <see cref="LogicAppSkuName"/> values are the same. </summary>
        public static bool operator ==(LogicAppSkuName left, LogicAppSkuName right) => left.Equals(right);
        /// <summary> Determines if two <see cref="LogicAppSkuName"/> values are not the same. </summary>
        public static bool operator !=(LogicAppSkuName left, LogicAppSkuName right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="LogicAppSkuName"/>. </summary>
        public static implicit operator LogicAppSkuName(string value) => new LogicAppSkuName(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is LogicAppSkuName other && Equals(other);
        /// <inheritdoc />
        public bool Equals(LogicAppSkuName other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
