// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Logic.Models
{
    public partial class IntegrationAccountAgreementContent : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AS2))
            {
                writer.WritePropertyName("aS2"u8);
                writer.WriteObjectValue(AS2);
            }
            if (Optional.IsDefined(X12))
            {
                writer.WritePropertyName("x12"u8);
                writer.WriteObjectValue(X12);
            }
            if (Optional.IsDefined(Edifact))
            {
                writer.WritePropertyName("edifact"u8);
                writer.WriteObjectValue(Edifact);
            }
            writer.WriteEndObject();
        }

        internal static IntegrationAccountAgreementContent DeserializeIntegrationAccountAgreementContent(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<AS2AgreementContent> aS2 = default;
            Optional<X12AgreementContent> x12 = default;
            Optional<EdifactAgreementContent> edifact = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("aS2"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    aS2 = AS2AgreementContent.DeserializeAS2AgreementContent(property.Value);
                    continue;
                }
                if (property.NameEquals("x12"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    x12 = X12AgreementContent.DeserializeX12AgreementContent(property.Value);
                    continue;
                }
                if (property.NameEquals("edifact"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    edifact = EdifactAgreementContent.DeserializeEdifactAgreementContent(property.Value);
                    continue;
                }
            }
            return new IntegrationAccountAgreementContent(aS2.Value, x12.Value, edifact.Value);
        }
    }
}
