// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Logic.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Logic
{
    /// <summary> A class representing the IntegrationServiceEnvironmentManagedApi data model. </summary>
    public partial class IntegrationServiceEnvironmentManagedApiData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of IntegrationServiceEnvironmentManagedApiData. </summary>
        /// <param name="location"> The location. </param>
        public IntegrationServiceEnvironmentManagedApiData(AzureLocation location) : base(location)
        {
            ConnectionParameters = new ChangeTrackingDictionary<string, BinaryData>();
            RuntimeUrls = new ChangeTrackingList<string>();
            Capabilities = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of IntegrationServiceEnvironmentManagedApiData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="namePropertiesName">
        /// The name
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.name
        /// </param>
        /// <param name="connectionParameters">
        /// The connection parameters.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.connectionParameters
        /// </param>
        /// <param name="metadata">
        /// The metadata.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.metadata
        /// </param>
        /// <param name="runtimeUrls">
        /// The runtime urls.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.runtimeUrls
        /// </param>
        /// <param name="generalInformation">
        /// The api general information.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.generalInformation
        /// </param>
        /// <param name="capabilities">
        /// The capabilities.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.capabilities
        /// </param>
        /// <param name="backendService">
        /// The backend service.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.backendService
        /// </param>
        /// <param name="policies">
        /// The policies for the API.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.policies
        /// </param>
        /// <param name="apiDefinitionUri">
        /// The API definition.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.apiDefinitionUrl
        /// </param>
        /// <param name="apiDefinitions">
        /// The api definitions.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.apiDefinitions
        /// </param>
        /// <param name="integrationServiceEnvironment">
        /// The integration service environment reference.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.integrationServiceEnvironment
        /// </param>
        /// <param name="provisioningState">
        /// The provisioning state.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.provisioningState
        /// </param>
        /// <param name="category">
        /// The category.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.category
        /// </param>
        /// <param name="deploymentParameters">
        /// The integration service environment managed api deployment parameters.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.deploymentParameters
        /// </param>
        internal IntegrationServiceEnvironmentManagedApiData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, string namePropertiesName, IReadOnlyDictionary<string, BinaryData> connectionParameters, ApiResourceMetadata metadata, IReadOnlyList<string> runtimeUrls, ApiResourceGeneralInformation generalInformation, IReadOnlyList<string> capabilities, ApiResourceBackendService backendService, ApiResourcePolicies policies, Uri apiDefinitionUri, ApiResourceDefinitions apiDefinitions, ResourceReference integrationServiceEnvironment, LogicAppWorkflowProvisioningState? provisioningState, ApiTier? category, IntegrationServiceEnvironmentManagedApiDeploymentParameters deploymentParameters) : base(id, name, resourceType, systemData, tags, location)
        {
            NamePropertiesName = namePropertiesName;
            ConnectionParameters = connectionParameters;
            Metadata = metadata;
            RuntimeUrls = runtimeUrls;
            GeneralInformation = generalInformation;
            Capabilities = capabilities;
            BackendService = backendService;
            Policies = policies;
            ApiDefinitionUri = apiDefinitionUri;
            ApiDefinitions = apiDefinitions;
            IntegrationServiceEnvironment = integrationServiceEnvironment;
            ProvisioningState = provisioningState;
            Category = category;
            DeploymentParameters = deploymentParameters;
        }

        /// <summary>
        /// The name
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.name
        /// </summary>
        public string NamePropertiesName { get; }
        /// <summary>
        /// The connection parameters.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.connectionParameters
        /// </summary>
        public IReadOnlyDictionary<string, BinaryData> ConnectionParameters { get; }
        /// <summary>
        /// The metadata.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.metadata
        /// </summary>
        public ApiResourceMetadata Metadata { get; }
        /// <summary>
        /// The runtime urls.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.runtimeUrls
        /// </summary>
        public IReadOnlyList<string> RuntimeUrls { get; }
        /// <summary>
        /// The api general information.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.generalInformation
        /// </summary>
        public ApiResourceGeneralInformation GeneralInformation { get; }
        /// <summary>
        /// The capabilities.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.capabilities
        /// </summary>
        public IReadOnlyList<string> Capabilities { get; }
        /// <summary>
        /// The backend service.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.backendService
        /// </summary>
        internal ApiResourceBackendService BackendService { get; }
        /// <summary>
        /// The service URL.
        /// Serialized Name: ApiResourceBackendService.serviceUrl
        /// </summary>
        public Uri ServiceUri
        {
            get => BackendService?.ServiceUri;
        }

        /// <summary>
        /// The policies for the API.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.policies
        /// </summary>
        public ApiResourcePolicies Policies { get; }
        /// <summary>
        /// The API definition.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.apiDefinitionUrl
        /// </summary>
        public Uri ApiDefinitionUri { get; }
        /// <summary>
        /// The api definitions.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.apiDefinitions
        /// </summary>
        public ApiResourceDefinitions ApiDefinitions { get; }
        /// <summary>
        /// The integration service environment reference.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.integrationServiceEnvironment
        /// </summary>
        public ResourceReference IntegrationServiceEnvironment { get; set; }
        /// <summary>
        /// The provisioning state.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.provisioningState
        /// </summary>
        public LogicAppWorkflowProvisioningState? ProvisioningState { get; }
        /// <summary>
        /// The category.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.category
        /// </summary>
        public ApiTier? Category { get; }
        /// <summary>
        /// The integration service environment managed api deployment parameters.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApi.properties.deploymentParameters
        /// </summary>
        internal IntegrationServiceEnvironmentManagedApiDeploymentParameters DeploymentParameters { get; set; }
        /// <summary>
        /// The integration service environment managed api content link for deployment.
        /// Serialized Name: IntegrationServiceEnvironmentManagedApiDeploymentParameters.contentLinkDefinition
        /// </summary>
        public ContentLink DeploymentParametersContentLinkDefinition
        {
            get => DeploymentParameters is null ? default : DeploymentParameters.ContentLinkDefinition;
            set
            {
                if (DeploymentParameters is null)
                    DeploymentParameters = new IntegrationServiceEnvironmentManagedApiDeploymentParameters();
                DeploymentParameters.ContentLinkDefinition = value;
            }
        }
    }
}
