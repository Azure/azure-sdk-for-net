// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.DatabaseWatcher.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableDatabaseWatcherArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableDatabaseWatcherArmClient"/> class for mocking. </summary>
        protected MockableDatabaseWatcherArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableDatabaseWatcherArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableDatabaseWatcherArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableDatabaseWatcherArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="WatcherResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WatcherResource.CreateResourceIdentifier" /> to create a <see cref="WatcherResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WatcherResource"/> object. </returns>
        public virtual WatcherResource GetWatcherResource(ResourceIdentifier id)
        {
            WatcherResource.ValidateResourceId(id);
            return new WatcherResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AlertRuleResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AlertRuleResource.CreateResourceIdentifier" /> to create an <see cref="AlertRuleResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AlertRuleResource"/> object. </returns>
        public virtual AlertRuleResource GetAlertRuleResource(ResourceIdentifier id)
        {
            AlertRuleResource.ValidateResourceId(id);
            return new AlertRuleResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="HealthValidationResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="HealthValidationResource.CreateResourceIdentifier" /> to create a <see cref="HealthValidationResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HealthValidationResource"/> object. </returns>
        public virtual HealthValidationResource GetHealthValidationResource(ResourceIdentifier id)
        {
            HealthValidationResource.ValidateResourceId(id);
            return new HealthValidationResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="TargetResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TargetResource.CreateResourceIdentifier" /> to create a <see cref="TargetResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TargetResource"/> object. </returns>
        public virtual TargetResource GetTargetResource(ResourceIdentifier id)
        {
            TargetResource.ValidateResourceId(id);
            return new TargetResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SharedPrivateLinkResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SharedPrivateLinkResource.CreateResourceIdentifier" /> to create a <see cref="SharedPrivateLinkResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SharedPrivateLinkResource"/> object. </returns>
        public virtual SharedPrivateLinkResource GetSharedPrivateLinkResource(ResourceIdentifier id)
        {
            SharedPrivateLinkResource.ValidateResourceId(id);
            return new SharedPrivateLinkResource(Client, id);
        }
    }
}
