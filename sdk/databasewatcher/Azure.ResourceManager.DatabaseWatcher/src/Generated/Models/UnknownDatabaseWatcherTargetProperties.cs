// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DatabaseWatcher.Models
{
    /// <summary> Unknown version of DatabaseWatcherTargetProperties. </summary>
    internal partial class UnknownDatabaseWatcherTargetProperties : DatabaseWatcherTargetProperties
    {
        /// <summary> Initializes a new instance of <see cref="UnknownDatabaseWatcherTargetProperties"/>. </summary>
        /// <param name="targetType"> Discriminator property for DatabaseWatcherTargetProperties. </param>
        /// <param name="targetAuthenticationType"> The type of authentication to use when connecting to a target. </param>
        /// <param name="targetVault"> To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored. </param>
        /// <param name="connectionServerName"> The FQDN host name of the server to use in the connection string when connecting to a target. For example, for an Azure SQL logical server in the Azure commercial cloud, the value might be 'sql-logical-server-22092780.database.windows.net'; for an Azure SQL managed instance in the Azure commercial cloud, the value might be 'sql-mi-39441134.767d5869f605.database.windows.net'. Port number and instance name must be specified separately. </param>
        /// <param name="provisioningState"> The provisioning state of the resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal UnknownDatabaseWatcherTargetProperties(string targetType, TargetAuthenticationType targetAuthenticationType, TargetAuthenticationVaultSecret targetVault, string connectionServerName, DatabaseWatcherResourceProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(targetType, targetAuthenticationType, targetVault, connectionServerName, provisioningState, serializedAdditionalRawData)
        {
            TargetType = targetType ?? "Unknown";
        }

        /// <summary> Initializes a new instance of <see cref="UnknownDatabaseWatcherTargetProperties"/> for deserialization. </summary>
        internal UnknownDatabaseWatcherTargetProperties()
        {
        }
    }
}
