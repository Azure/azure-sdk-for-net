// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DatabaseWatcher.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DatabaseWatcher.Samples
{
    public partial class Sample_AlertRuleResourceCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_AlertRuleResourcesCreateOrUpdateMaximumSet()
        {
            // Generated from example definition: 2025-01-02/AlertRuleResources_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "AlertRuleResource_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WatcherResource created on azure
            // for more information of creating WatcherResource, please refer to the document of WatcherResource
            string subscriptionId = "A76F9850-996B-40B3-94D4-C98110A0EEC9";
            string resourceGroupName = "rgWatcher";
            string watcherName = "testWatcher";
            ResourceIdentifier watcherResourceId = WatcherResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, watcherName);
            WatcherResource watcher = client.GetWatcherResource(watcherResourceId);

            // get the collection of this AlertRuleResource
            AlertRuleResourceCollection collection = watcher.GetAlertRuleResources();

            // invoke the operation
            string alertRuleResourceName = "testAlert";
            AlertRuleResourceData data = new AlertRuleResourceData
            {
                Properties = new AlertRuleResourceProperties(new ResourceIdentifier("/subscriptions/469DD77C-C8DB-47B7-B9E1-72D29F8C878Be/resourceGroups/rgWatcher/providers/microsoft.insights/scheduledqueryrules/alerts-demo"), AlertRuleCreationProperty.CreatedWithActionGroup, DateTimeOffset.Parse("2024-07-25T15:38:47.798Z"), "someTemplateId", "1.0"),
            };
            ArmOperation<AlertRuleResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, alertRuleResourceName, data);
            AlertRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AlertRuleResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_AlertRuleResourcesGetMaximumSet()
        {
            // Generated from example definition: 2025-01-02/AlertRuleResources_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AlertRuleResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WatcherResource created on azure
            // for more information of creating WatcherResource, please refer to the document of WatcherResource
            string subscriptionId = "A76F9850-996B-40B3-94D4-C98110A0EEC9";
            string resourceGroupName = "rgWatcher";
            string watcherName = "testWatcher";
            ResourceIdentifier watcherResourceId = WatcherResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, watcherName);
            WatcherResource watcher = client.GetWatcherResource(watcherResourceId);

            // get the collection of this AlertRuleResource
            AlertRuleResourceCollection collection = watcher.GetAlertRuleResources();

            // invoke the operation
            string alertRuleResourceName = "testAlert";
            AlertRuleResource result = await collection.GetAsync(alertRuleResourceName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AlertRuleResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_AlertRuleResourcesListByParentMaximumSet()
        {
            // Generated from example definition: 2025-01-02/AlertRuleResources_ListByParent_MaximumSet_Gen.json
            // this example is just showing the usage of "AlertRuleResource_ListByParent" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WatcherResource created on azure
            // for more information of creating WatcherResource, please refer to the document of WatcherResource
            string subscriptionId = "A76F9850-996B-40B3-94D4-C98110A0EEC9";
            string resourceGroupName = "rgWatcher";
            string watcherName = "testWatcher";
            ResourceIdentifier watcherResourceId = WatcherResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, watcherName);
            WatcherResource watcher = client.GetWatcherResource(watcherResourceId);

            // get the collection of this AlertRuleResource
            AlertRuleResourceCollection collection = watcher.GetAlertRuleResources();

            // invoke the operation and iterate over the result
            await foreach (AlertRuleResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AlertRuleResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_AlertRuleResourcesGetMaximumSet()
        {
            // Generated from example definition: 2025-01-02/AlertRuleResources_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AlertRuleResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WatcherResource created on azure
            // for more information of creating WatcherResource, please refer to the document of WatcherResource
            string subscriptionId = "A76F9850-996B-40B3-94D4-C98110A0EEC9";
            string resourceGroupName = "rgWatcher";
            string watcherName = "testWatcher";
            ResourceIdentifier watcherResourceId = WatcherResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, watcherName);
            WatcherResource watcher = client.GetWatcherResource(watcherResourceId);

            // get the collection of this AlertRuleResource
            AlertRuleResourceCollection collection = watcher.GetAlertRuleResources();

            // invoke the operation
            string alertRuleResourceName = "testAlert";
            bool result = await collection.ExistsAsync(alertRuleResourceName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_AlertRuleResourcesGetMaximumSet()
        {
            // Generated from example definition: 2025-01-02/AlertRuleResources_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AlertRuleResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WatcherResource created on azure
            // for more information of creating WatcherResource, please refer to the document of WatcherResource
            string subscriptionId = "A76F9850-996B-40B3-94D4-C98110A0EEC9";
            string resourceGroupName = "rgWatcher";
            string watcherName = "testWatcher";
            ResourceIdentifier watcherResourceId = WatcherResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, watcherName);
            WatcherResource watcher = client.GetWatcherResource(watcherResourceId);

            // get the collection of this AlertRuleResource
            AlertRuleResourceCollection collection = watcher.GetAlertRuleResources();

            // invoke the operation
            string alertRuleResourceName = "testAlert";
            NullableResponse<AlertRuleResource> response = await collection.GetIfExistsAsync(alertRuleResourceName);
            AlertRuleResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AlertRuleResourceData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
