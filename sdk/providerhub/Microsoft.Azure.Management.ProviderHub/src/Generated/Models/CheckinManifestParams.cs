// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ProviderHub.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CheckinManifestParams
    {
        /// <summary>
        /// Initializes a new instance of the CheckinManifestParams class.
        /// </summary>
        public CheckinManifestParams()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CheckinManifestParams class.
        /// </summary>
        /// <param name="environment">The environment supplied to the checkin
        /// manifest operation.</param>
        /// <param name="baselineArmManifestLocation">The baseline ARM manifest
        /// location supplied to the checkin manifest operation.</param>
        public CheckinManifestParams(string environment, string baselineArmManifestLocation)
        {
            Environment = environment;
            BaselineArmManifestLocation = baselineArmManifestLocation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the environment supplied to the checkin manifest
        /// operation.
        /// </summary>
        [JsonProperty(PropertyName = "environment")]
        public string Environment { get; set; }

        /// <summary>
        /// Gets or sets the baseline ARM manifest location supplied to the
        /// checkin manifest operation.
        /// </summary>
        [JsonProperty(PropertyName = "baselineArmManifestLocation")]
        public string BaselineArmManifestLocation { get; set; }

    }
}
