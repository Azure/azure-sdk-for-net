// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ProviderHub.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ResourceType
    {
        /// <summary>
        /// Initializes a new instance of the ResourceType class.
        /// </summary>
        public ResourceType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceType class.
        /// </summary>
        /// <param name="routingType">Possible values include: 'Default',
        /// 'ProxyOnly', 'HostBased', 'Extension', 'Tenant', 'Fanout',
        /// 'LocationBased', 'Failover', 'CascadeExtension'</param>
        /// <param name="resourceValidation">Possible values include:
        /// 'NotSpecified', 'ReservedWords', 'ProfaneWords'</param>
        /// <param name="marketplaceType">Possible values include:
        /// 'NotSpecified', 'AddOn', 'Bypass', 'Store'</param>
        /// <param name="resourceDeletionPolicy">Possible values include:
        /// 'NotSpecified', 'Cascade', 'Force'</param>
        public ResourceType(string name = default(string), string routingType = default(string), string resourceValidation = default(string), IList<string> allowedUnauthorizedActions = default(IList<string>), IList<AuthorizationActionMapping> authorizationActionMappings = default(IList<AuthorizationActionMapping>), IList<LinkedAccessCheck> linkedAccessChecks = default(IList<LinkedAccessCheck>), string defaultApiVersion = default(string), IList<LoggingRule> loggingRules = default(IList<LoggingRule>), IList<ThrottlingRule> throttlingRules = default(IList<ThrottlingRule>), IList<ResourceProviderEndpoint> endpoints = default(IList<ResourceProviderEndpoint>), string marketplaceType = default(string), ResourceTypeIdentityManagement identityManagement = default(ResourceTypeIdentityManagement), object metadata = default(object), IList<string> requiredFeatures = default(IList<string>), ResourceTypeFeaturesRule featuresRule = default(ResourceTypeFeaturesRule), IList<SubscriptionStateRule> subscriptionStateRules = default(IList<SubscriptionStateRule>), IList<ServiceTreeInfo> serviceTreeInfos = default(IList<ServiceTreeInfo>), ResourceTypeRequestHeaderOptions requestHeaderOptions = default(ResourceTypeRequestHeaderOptions), string skuLink = default(string), IList<string> disallowedActionVerbs = default(IList<string>), ResourceTypeTemplateDeploymentPolicy templateDeploymentPolicy = default(ResourceTypeTemplateDeploymentPolicy), IList<ExtendedLocationOptions> extendedLocations = default(IList<ExtendedLocationOptions>), IList<LinkedOperationRule> linkedOperationRules = default(IList<LinkedOperationRule>), string resourceDeletionPolicy = default(string))
        {
            Name = name;
            RoutingType = routingType;
            ResourceValidation = resourceValidation;
            AllowedUnauthorizedActions = allowedUnauthorizedActions;
            AuthorizationActionMappings = authorizationActionMappings;
            LinkedAccessChecks = linkedAccessChecks;
            DefaultApiVersion = defaultApiVersion;
            LoggingRules = loggingRules;
            ThrottlingRules = throttlingRules;
            Endpoints = endpoints;
            MarketplaceType = marketplaceType;
            IdentityManagement = identityManagement;
            Metadata = metadata;
            RequiredFeatures = requiredFeatures;
            FeaturesRule = featuresRule;
            SubscriptionStateRules = subscriptionStateRules;
            ServiceTreeInfos = serviceTreeInfos;
            RequestHeaderOptions = requestHeaderOptions;
            SkuLink = skuLink;
            DisallowedActionVerbs = disallowedActionVerbs;
            TemplateDeploymentPolicy = templateDeploymentPolicy;
            ExtendedLocations = extendedLocations;
            LinkedOperationRules = linkedOperationRules;
            ResourceDeletionPolicy = resourceDeletionPolicy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Default', 'ProxyOnly',
        /// 'HostBased', 'Extension', 'Tenant', 'Fanout', 'LocationBased',
        /// 'Failover', 'CascadeExtension'
        /// </summary>
        [JsonProperty(PropertyName = "routingType")]
        public string RoutingType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified',
        /// 'ReservedWords', 'ProfaneWords'
        /// </summary>
        [JsonProperty(PropertyName = "resourceValidation")]
        public string ResourceValidation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allowedUnauthorizedActions")]
        public IList<string> AllowedUnauthorizedActions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "authorizationActionMappings")]
        public IList<AuthorizationActionMapping> AuthorizationActionMappings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "linkedAccessChecks")]
        public IList<LinkedAccessCheck> LinkedAccessChecks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultApiVersion")]
        public string DefaultApiVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "loggingRules")]
        public IList<LoggingRule> LoggingRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "throttlingRules")]
        public IList<ThrottlingRule> ThrottlingRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endpoints")]
        public IList<ResourceProviderEndpoint> Endpoints { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified', 'AddOn',
        /// 'Bypass', 'Store'
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceType")]
        public string MarketplaceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "identityManagement")]
        public ResourceTypeIdentityManagement IdentityManagement { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public object Metadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requiredFeatures")]
        public IList<string> RequiredFeatures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "featuresRule")]
        public ResourceTypeFeaturesRule FeaturesRule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionStateRules")]
        public IList<SubscriptionStateRule> SubscriptionStateRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "serviceTreeInfos")]
        public IList<ServiceTreeInfo> ServiceTreeInfos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestHeaderOptions")]
        public ResourceTypeRequestHeaderOptions RequestHeaderOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "skuLink")]
        public string SkuLink { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "disallowedActionVerbs")]
        public IList<string> DisallowedActionVerbs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "templateDeploymentPolicy")]
        public ResourceTypeTemplateDeploymentPolicy TemplateDeploymentPolicy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extendedLocations")]
        public IList<ExtendedLocationOptions> ExtendedLocations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "linkedOperationRules")]
        public IList<LinkedOperationRule> LinkedOperationRules { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified', 'Cascade',
        /// 'Force'
        /// </summary>
        [JsonProperty(PropertyName = "resourceDeletionPolicy")]
        public string ResourceDeletionPolicy { get; set; }

    }
}
