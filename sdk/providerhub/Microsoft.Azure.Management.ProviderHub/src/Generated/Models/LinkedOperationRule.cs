// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ProviderHub.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LinkedOperationRule
    {
        /// <summary>
        /// Initializes a new instance of the LinkedOperationRule class.
        /// </summary>
        public LinkedOperationRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinkedOperationRule class.
        /// </summary>
        /// <param name="linkedOperation">Possible values include: 'None',
        /// 'CrossResourceGroupResourceMove',
        /// 'CrossSubscriptionResourceMove'</param>
        /// <param name="linkedAction">Possible values include: 'NotSpecified',
        /// 'Blocked', 'Validate', 'Enabled'</param>
        public LinkedOperationRule(string linkedOperation, string linkedAction)
        {
            LinkedOperation = linkedOperation;
            LinkedAction = linkedAction;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'None',
        /// 'CrossResourceGroupResourceMove', 'CrossSubscriptionResourceMove'
        /// </summary>
        [JsonProperty(PropertyName = "linkedOperation")]
        public string LinkedOperation { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified', 'Blocked',
        /// 'Validate', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "linkedAction")]
        public string LinkedAction { get; set; }

    }
}
