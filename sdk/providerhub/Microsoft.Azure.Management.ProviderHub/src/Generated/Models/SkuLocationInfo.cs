// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ProviderHub.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SkuLocationInfo
    {
        /// <summary>
        /// Initializes a new instance of the SkuLocationInfo class.
        /// </summary>
        public SkuLocationInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SkuLocationInfo class.
        /// </summary>
        /// <param name="type">Possible values include: 'NotSpecified',
        /// 'EdgeZone', 'ArcZone'</param>
        public SkuLocationInfo(string location, IList<string> zones = default(IList<string>), IList<SkuZoneDetail> zoneDetails = default(IList<SkuZoneDetail>), IList<string> extendedLocations = default(IList<string>), string type = default(string))
        {
            Location = location;
            Zones = zones;
            ZoneDetails = zoneDetails;
            ExtendedLocations = extendedLocations;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "zones")]
        public IList<string> Zones { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "zoneDetails")]
        public IList<SkuZoneDetail> ZoneDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extendedLocations")]
        public IList<string> ExtendedLocations { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified', 'EdgeZone',
        /// 'ArcZone'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

    }
}
