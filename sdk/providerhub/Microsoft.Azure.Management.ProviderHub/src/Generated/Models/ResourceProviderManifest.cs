// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ProviderHub.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ResourceProviderManifest
    {
        /// <summary>
        /// Initializes a new instance of the ResourceProviderManifest class.
        /// </summary>
        public ResourceProviderManifest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceProviderManifest class.
        /// </summary>
        /// <param name="providerType">Possible values include: 'NotSpecified',
        /// 'Internal', 'External', 'Hidden', 'RegistrationFree',
        /// 'LegacyRegistrationRequired', 'TenantOnly',
        /// 'AuthorizationFree'</param>
        public ResourceProviderManifest(ResourceProviderManifestProviderAuthentication providerAuthentication = default(ResourceProviderManifestProviderAuthentication), IList<ResourceProviderAuthorization> providerAuthorizations = default(IList<ResourceProviderAuthorization>), string namespaceProperty = default(string), string providerVersion = default(string), string providerType = default(string), IList<string> requiredFeatures = default(IList<string>), ResourceProviderManifestFeaturesRule featuresRule = default(ResourceProviderManifestFeaturesRule), ResourceProviderManifestRequestHeaderOptions requestHeaderOptions = default(ResourceProviderManifestRequestHeaderOptions), IList<ResourceType> resourceTypes = default(IList<ResourceType>), ResourceProviderManifestManagement management = default(ResourceProviderManifestManagement), IList<ResourceProviderCapabilities> capabilities = default(IList<ResourceProviderCapabilities>), object metadata = default(object), IList<ResourceProviderEndpoint> globalNotificationEndpoints = default(IList<ResourceProviderEndpoint>), ResourceProviderManifestReRegisterSubscriptionMetadata reRegisterSubscriptionMetadata = default(ResourceProviderManifestReRegisterSubscriptionMetadata))
        {
            ProviderAuthentication = providerAuthentication;
            ProviderAuthorizations = providerAuthorizations;
            NamespaceProperty = namespaceProperty;
            ProviderVersion = providerVersion;
            ProviderType = providerType;
            RequiredFeatures = requiredFeatures;
            FeaturesRule = featuresRule;
            RequestHeaderOptions = requestHeaderOptions;
            ResourceTypes = resourceTypes;
            Management = management;
            Capabilities = capabilities;
            Metadata = metadata;
            GlobalNotificationEndpoints = globalNotificationEndpoints;
            ReRegisterSubscriptionMetadata = reRegisterSubscriptionMetadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerAuthentication")]
        public ResourceProviderManifestProviderAuthentication ProviderAuthentication { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerAuthorizations")]
        public IList<ResourceProviderAuthorization> ProviderAuthorizations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerVersion")]
        public string ProviderVersion { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified', 'Internal',
        /// 'External', 'Hidden', 'RegistrationFree',
        /// 'LegacyRegistrationRequired', 'TenantOnly', 'AuthorizationFree'
        /// </summary>
        [JsonProperty(PropertyName = "providerType")]
        public string ProviderType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requiredFeatures")]
        public IList<string> RequiredFeatures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "featuresRule")]
        public ResourceProviderManifestFeaturesRule FeaturesRule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestHeaderOptions")]
        public ResourceProviderManifestRequestHeaderOptions RequestHeaderOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resourceTypes")]
        public IList<ResourceType> ResourceTypes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "management")]
        public ResourceProviderManifestManagement Management { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IList<ResourceProviderCapabilities> Capabilities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public object Metadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "globalNotificationEndpoints")]
        public IList<ResourceProviderEndpoint> GlobalNotificationEndpoints { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reRegisterSubscriptionMetadata")]
        public ResourceProviderManifestReRegisterSubscriptionMetadata ReRegisterSubscriptionMetadata { get; set; }

    }
}
