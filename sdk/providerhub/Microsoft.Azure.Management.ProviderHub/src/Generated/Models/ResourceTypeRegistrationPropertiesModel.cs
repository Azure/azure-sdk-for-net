// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ProviderHub.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ResourceTypeRegistrationPropertiesModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ResourceTypeRegistrationPropertiesModel class.
        /// </summary>
        public ResourceTypeRegistrationPropertiesModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ResourceTypeRegistrationPropertiesModel class.
        /// </summary>
        /// <param name="routingType">Possible values include: 'Default',
        /// 'ProxyOnly', 'HostBased', 'Extension', 'Tenant', 'Fanout',
        /// 'LocationBased', 'Failover', 'CascadeExtension'</param>
        /// <param name="regionality">Possible values include: 'NotSpecified',
        /// 'Global', 'Regional'</param>
        /// <param name="marketplaceType">Possible values include:
        /// 'NotSpecified', 'AddOn', 'Bypass', 'Store'</param>
        /// <param name="provisioningState">Possible values include:
        /// 'NotSpecified', 'Accepted', 'Running', 'Creating', 'Created',
        /// 'Deleting', 'Deleted', 'Canceled', 'Failed', 'Succeeded',
        /// 'MovingResources', 'TransientFailure', 'RolloutInProgress'</param>
        /// <param name="resourceDeletionPolicy">Possible values include:
        /// 'NotSpecified', 'CascadeDeleteAll',
        /// 'CascadeDeleteProxyOnlyChildren'</param>
        public ResourceTypeRegistrationPropertiesModel(string routingType = default(string), string regionality = default(string), IList<ResourceTypeEndpoint> endpoints = default(IList<ResourceTypeEndpoint>), ResourceTypeRegistrationPropertiesExtensionOptions extensionOptions = default(ResourceTypeRegistrationPropertiesExtensionOptions), string marketplaceType = default(string), IList<SwaggerSpecification> swaggerSpecifications = default(IList<SwaggerSpecification>), IList<string> allowedUnauthorizedActions = default(IList<string>), IList<AuthorizationActionMapping> authorizationActionMappings = default(IList<AuthorizationActionMapping>), IList<LinkedAccessCheck> linkedAccessChecks = default(IList<LinkedAccessCheck>), string defaultApiVersion = default(string), IList<LoggingRule> loggingRules = default(IList<LoggingRule>), IList<ThrottlingRule> throttlingRules = default(IList<ThrottlingRule>), IList<string> requiredFeatures = default(IList<string>), ResourceTypeRegistrationPropertiesFeaturesRule featuresRule = default(ResourceTypeRegistrationPropertiesFeaturesRule), bool? enableAsyncOperation = default(bool?), string provisioningState = default(string), bool? enableThirdPartyS2S = default(bool?), ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications subscriptionLifecycleNotificationSpecifications = default(ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications), bool? isPureProxy = default(bool?), ResourceTypeRegistrationPropertiesIdentityManagement identityManagement = default(ResourceTypeRegistrationPropertiesIdentityManagement), ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications checkNameAvailabilitySpecifications = default(ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications), IList<string> disallowedActionVerbs = default(IList<string>), IList<ServiceTreeInfo> serviceTreeInfos = default(IList<ServiceTreeInfo>), ResourceTypeRegistrationPropertiesRequestHeaderOptions requestHeaderOptions = default(ResourceTypeRegistrationPropertiesRequestHeaderOptions), IList<SubscriptionStateRule> subscriptionStateRules = default(IList<SubscriptionStateRule>), ResourceTypeRegistrationPropertiesTemplateDeploymentOptions templateDeploymentOptions = default(ResourceTypeRegistrationPropertiesTemplateDeploymentOptions), IList<ExtendedLocationOptions> extendedLocations = default(IList<ExtendedLocationOptions>), ResourceTypeRegistrationPropertiesResourceMovePolicy resourceMovePolicy = default(ResourceTypeRegistrationPropertiesResourceMovePolicy), string resourceDeletionPolicy = default(string))
        {
            RoutingType = routingType;
            Regionality = regionality;
            Endpoints = endpoints;
            ExtensionOptions = extensionOptions;
            MarketplaceType = marketplaceType;
            SwaggerSpecifications = swaggerSpecifications;
            AllowedUnauthorizedActions = allowedUnauthorizedActions;
            AuthorizationActionMappings = authorizationActionMappings;
            LinkedAccessChecks = linkedAccessChecks;
            DefaultApiVersion = defaultApiVersion;
            LoggingRules = loggingRules;
            ThrottlingRules = throttlingRules;
            RequiredFeatures = requiredFeatures;
            FeaturesRule = featuresRule;
            EnableAsyncOperation = enableAsyncOperation;
            ProvisioningState = provisioningState;
            EnableThirdPartyS2S = enableThirdPartyS2S;
            SubscriptionLifecycleNotificationSpecifications = subscriptionLifecycleNotificationSpecifications;
            IsPureProxy = isPureProxy;
            IdentityManagement = identityManagement;
            CheckNameAvailabilitySpecifications = checkNameAvailabilitySpecifications;
            DisallowedActionVerbs = disallowedActionVerbs;
            ServiceTreeInfos = serviceTreeInfos;
            RequestHeaderOptions = requestHeaderOptions;
            SubscriptionStateRules = subscriptionStateRules;
            TemplateDeploymentOptions = templateDeploymentOptions;
            ExtendedLocations = extendedLocations;
            ResourceMovePolicy = resourceMovePolicy;
            ResourceDeletionPolicy = resourceDeletionPolicy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Default', 'ProxyOnly',
        /// 'HostBased', 'Extension', 'Tenant', 'Fanout', 'LocationBased',
        /// 'Failover', 'CascadeExtension'
        /// </summary>
        [JsonProperty(PropertyName = "routingType")]
        public string RoutingType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified', 'Global',
        /// 'Regional'
        /// </summary>
        [JsonProperty(PropertyName = "regionality")]
        public string Regionality { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endpoints")]
        public IList<ResourceTypeEndpoint> Endpoints { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extensionOptions")]
        public ResourceTypeRegistrationPropertiesExtensionOptions ExtensionOptions { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified', 'AddOn',
        /// 'Bypass', 'Store'
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceType")]
        public string MarketplaceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "swaggerSpecifications")]
        public IList<SwaggerSpecification> SwaggerSpecifications { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allowedUnauthorizedActions")]
        public IList<string> AllowedUnauthorizedActions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "authorizationActionMappings")]
        public IList<AuthorizationActionMapping> AuthorizationActionMappings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "linkedAccessChecks")]
        public IList<LinkedAccessCheck> LinkedAccessChecks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultApiVersion")]
        public string DefaultApiVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "loggingRules")]
        public IList<LoggingRule> LoggingRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "throttlingRules")]
        public IList<ThrottlingRule> ThrottlingRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requiredFeatures")]
        public IList<string> RequiredFeatures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "featuresRule")]
        public ResourceTypeRegistrationPropertiesFeaturesRule FeaturesRule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enableAsyncOperation")]
        public bool? EnableAsyncOperation { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified', 'Accepted',
        /// 'Running', 'Creating', 'Created', 'Deleting', 'Deleted',
        /// 'Canceled', 'Failed', 'Succeeded', 'MovingResources',
        /// 'TransientFailure', 'RolloutInProgress'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enableThirdPartyS2S")]
        public bool? EnableThirdPartyS2S { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionLifecycleNotificationSpecifications")]
        public ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications SubscriptionLifecycleNotificationSpecifications { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isPureProxy")]
        public bool? IsPureProxy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "identityManagement")]
        public ResourceTypeRegistrationPropertiesIdentityManagement IdentityManagement { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "checkNameAvailabilitySpecifications")]
        public ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications CheckNameAvailabilitySpecifications { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "disallowedActionVerbs")]
        public IList<string> DisallowedActionVerbs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "serviceTreeInfos")]
        public IList<ServiceTreeInfo> ServiceTreeInfos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestHeaderOptions")]
        public ResourceTypeRegistrationPropertiesRequestHeaderOptions RequestHeaderOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionStateRules")]
        public IList<SubscriptionStateRule> SubscriptionStateRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "templateDeploymentOptions")]
        public ResourceTypeRegistrationPropertiesTemplateDeploymentOptions TemplateDeploymentOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extendedLocations")]
        public IList<ExtendedLocationOptions> ExtendedLocations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resourceMovePolicy")]
        public ResourceTypeRegistrationPropertiesResourceMovePolicy ResourceMovePolicy { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotSpecified',
        /// 'CascadeDeleteAll', 'CascadeDeleteProxyOnlyChildren'
        /// </summary>
        [JsonProperty(PropertyName = "resourceDeletionPolicy")]
        public string ResourceDeletionPolicy { get; set; }

    }
}
