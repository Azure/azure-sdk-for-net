// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ProviderHub.Models
{
    /// <summary>
    /// The ResourceProviderManagement.
    /// Serialized Name: ResourceProviderManagement
    /// </summary>
    public partial class ResourceProviderManagement
    {
        /// <summary> Initializes a new instance of ResourceProviderManagement. </summary>
        public ResourceProviderManagement()
        {
            SchemaOwners = new ChangeTrackingList<string>();
            ManifestOwners = new ChangeTrackingList<string>();
            ServiceTreeInfos = new ChangeTrackingList<ServiceTreeInfo>();
            ResourceAccessRoles = new ChangeTrackingList<BinaryData>();
        }

        /// <summary> Initializes a new instance of ResourceProviderManagement. </summary>
        /// <param name="schemaOwners"> Serialized Name: ResourceProviderManagement.schemaOwners. </param>
        /// <param name="manifestOwners"> Serialized Name: ResourceProviderManagement.manifestOwners. </param>
        /// <param name="incidentRoutingService"> Serialized Name: ResourceProviderManagement.incidentRoutingService. </param>
        /// <param name="incidentRoutingTeam"> Serialized Name: ResourceProviderManagement.incidentRoutingTeam. </param>
        /// <param name="incidentContactEmail"> Serialized Name: ResourceProviderManagement.incidentContactEmail. </param>
        /// <param name="serviceTreeInfos"> Serialized Name: ResourceProviderManagement.serviceTreeInfos. </param>
        /// <param name="resourceAccessPolicy"> Serialized Name: ResourceProviderManagement.resourceAccessPolicy. </param>
        /// <param name="resourceAccessRoles"> Serialized Name: ResourceProviderManagement.resourceAccessRoles. </param>
        internal ResourceProviderManagement(IList<string> schemaOwners, IList<string> manifestOwners, string incidentRoutingService, string incidentRoutingTeam, string incidentContactEmail, IList<ServiceTreeInfo> serviceTreeInfos, ResourceProviderManagementResourceAccessPolicy? resourceAccessPolicy, IList<BinaryData> resourceAccessRoles)
        {
            SchemaOwners = schemaOwners;
            ManifestOwners = manifestOwners;
            IncidentRoutingService = incidentRoutingService;
            IncidentRoutingTeam = incidentRoutingTeam;
            IncidentContactEmail = incidentContactEmail;
            ServiceTreeInfos = serviceTreeInfos;
            ResourceAccessPolicy = resourceAccessPolicy;
            ResourceAccessRoles = resourceAccessRoles;
        }

        /// <summary> Serialized Name: ResourceProviderManagement.schemaOwners. </summary>
        public IList<string> SchemaOwners { get; }
        /// <summary> Serialized Name: ResourceProviderManagement.manifestOwners. </summary>
        public IList<string> ManifestOwners { get; }
        /// <summary> Serialized Name: ResourceProviderManagement.incidentRoutingService. </summary>
        public string IncidentRoutingService { get; set; }
        /// <summary> Serialized Name: ResourceProviderManagement.incidentRoutingTeam. </summary>
        public string IncidentRoutingTeam { get; set; }
        /// <summary> Serialized Name: ResourceProviderManagement.incidentContactEmail. </summary>
        public string IncidentContactEmail { get; set; }
        /// <summary> Serialized Name: ResourceProviderManagement.serviceTreeInfos. </summary>
        public IList<ServiceTreeInfo> ServiceTreeInfos { get; }
        /// <summary> Serialized Name: ResourceProviderManagement.resourceAccessPolicy. </summary>
        public ResourceProviderManagementResourceAccessPolicy? ResourceAccessPolicy { get; set; }
        /// <summary>
        /// Serialized Name: ResourceProviderManagement.resourceAccessRoles
        /// <para>
        /// To assign an object to the element of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IList<BinaryData> ResourceAccessRoles { get; }
    }
}
