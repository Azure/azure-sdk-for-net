// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ProviderHub.Models
{
    /// <summary>
    /// The ResourceType.
    /// Serialized Name: ResourceType
    /// </summary>
    public partial class ResourceType
    {
        /// <summary> Initializes a new instance of ResourceType. </summary>
        internal ResourceType()
        {
            AllowedUnauthorizedActions = new ChangeTrackingList<string>();
            AuthorizationActionMappings = new ChangeTrackingList<AuthorizationActionMapping>();
            LinkedAccessChecks = new ChangeTrackingList<LinkedAccessCheck>();
            LoggingRules = new ChangeTrackingList<LoggingRule>();
            ThrottlingRules = new ChangeTrackingList<ThrottlingRule>();
            Endpoints = new ChangeTrackingList<ResourceProviderEndpoint>();
            RequiredFeatures = new ChangeTrackingList<string>();
            SubscriptionStateRules = new ChangeTrackingList<SubscriptionStateRule>();
            ServiceTreeInfos = new ChangeTrackingList<ServiceTreeInfo>();
            DisallowedActionVerbs = new ChangeTrackingList<string>();
            ExtendedLocations = new ChangeTrackingList<ExtendedLocationOptions>();
            LinkedOperationRules = new ChangeTrackingList<LinkedOperationRule>();
        }

        /// <summary> Initializes a new instance of ResourceType. </summary>
        /// <param name="name"> Serialized Name: ResourceType.name. </param>
        /// <param name="routingType"> Serialized Name: ResourceType.routingType. </param>
        /// <param name="resourceValidation"> Serialized Name: ResourceType.resourceValidation. </param>
        /// <param name="allowedUnauthorizedActions"> Serialized Name: ResourceType.allowedUnauthorizedActions. </param>
        /// <param name="authorizationActionMappings"> Serialized Name: ResourceType.authorizationActionMappings. </param>
        /// <param name="linkedAccessChecks"> Serialized Name: ResourceType.linkedAccessChecks. </param>
        /// <param name="defaultApiVersion"> Serialized Name: ResourceType.defaultApiVersion. </param>
        /// <param name="loggingRules"> Serialized Name: ResourceType.loggingRules. </param>
        /// <param name="throttlingRules"> Serialized Name: ResourceType.throttlingRules. </param>
        /// <param name="endpoints"> Serialized Name: ResourceType.endpoints. </param>
        /// <param name="marketplaceType"> Serialized Name: ResourceType.marketplaceType. </param>
        /// <param name="identityManagement"> Serialized Name: ResourceType.identityManagement. </param>
        /// <param name="metadata">
        /// Anything
        /// Serialized Name: ResourceType.metadata
        /// </param>
        /// <param name="requiredFeatures"> Serialized Name: ResourceType.requiredFeatures. </param>
        /// <param name="featuresRule"> Serialized Name: ResourceType.featuresRule. </param>
        /// <param name="subscriptionStateRules"> Serialized Name: ResourceType.subscriptionStateRules. </param>
        /// <param name="serviceTreeInfos"> Serialized Name: ResourceType.serviceTreeInfos. </param>
        /// <param name="requestHeaderOptions"> Serialized Name: ResourceType.requestHeaderOptions. </param>
        /// <param name="skuLink"> Serialized Name: ResourceType.skuLink. </param>
        /// <param name="disallowedActionVerbs"> Serialized Name: ResourceType.disallowedActionVerbs. </param>
        /// <param name="templateDeploymentPolicy"> Serialized Name: ResourceType.templateDeploymentPolicy. </param>
        /// <param name="extendedLocations"> Serialized Name: ResourceType.extendedLocations. </param>
        /// <param name="linkedOperationRules"> Serialized Name: ResourceType.linkedOperationRules. </param>
        /// <param name="resourceDeletionPolicy"> Serialized Name: ResourceType.resourceDeletionPolicy. </param>
        internal ResourceType(string name, RoutingType? routingType, ResourceValidation? resourceValidation, IReadOnlyList<string> allowedUnauthorizedActions, IReadOnlyList<AuthorizationActionMapping> authorizationActionMappings, IReadOnlyList<LinkedAccessCheck> linkedAccessChecks, string defaultApiVersion, IReadOnlyList<LoggingRule> loggingRules, IReadOnlyList<ThrottlingRule> throttlingRules, IReadOnlyList<ResourceProviderEndpoint> endpoints, ResourceTypeMarketplaceType? marketplaceType, ResourceTypeIdentityManagement identityManagement, BinaryData metadata, IReadOnlyList<string> requiredFeatures, ResourceTypeFeaturesRule featuresRule, IReadOnlyList<SubscriptionStateRule> subscriptionStateRules, IReadOnlyList<ServiceTreeInfo> serviceTreeInfos, ResourceTypeRequestHeaderOptions requestHeaderOptions, string skuLink, IReadOnlyList<string> disallowedActionVerbs, ResourceTypeTemplateDeploymentPolicy templateDeploymentPolicy, IReadOnlyList<ExtendedLocationOptions> extendedLocations, IReadOnlyList<LinkedOperationRule> linkedOperationRules, ManifestResourceDeletionPolicy? resourceDeletionPolicy)
        {
            Name = name;
            RoutingType = routingType;
            ResourceValidation = resourceValidation;
            AllowedUnauthorizedActions = allowedUnauthorizedActions;
            AuthorizationActionMappings = authorizationActionMappings;
            LinkedAccessChecks = linkedAccessChecks;
            DefaultApiVersion = defaultApiVersion;
            LoggingRules = loggingRules;
            ThrottlingRules = throttlingRules;
            Endpoints = endpoints;
            MarketplaceType = marketplaceType;
            IdentityManagement = identityManagement;
            Metadata = metadata;
            RequiredFeatures = requiredFeatures;
            FeaturesRule = featuresRule;
            SubscriptionStateRules = subscriptionStateRules;
            ServiceTreeInfos = serviceTreeInfos;
            RequestHeaderOptions = requestHeaderOptions;
            SkuLink = skuLink;
            DisallowedActionVerbs = disallowedActionVerbs;
            TemplateDeploymentPolicy = templateDeploymentPolicy;
            ExtendedLocations = extendedLocations;
            LinkedOperationRules = linkedOperationRules;
            ResourceDeletionPolicy = resourceDeletionPolicy;
        }

        /// <summary> Serialized Name: ResourceType.name. </summary>
        public string Name { get; }
        /// <summary> Serialized Name: ResourceType.routingType. </summary>
        public RoutingType? RoutingType { get; }
        /// <summary> Serialized Name: ResourceType.resourceValidation. </summary>
        public ResourceValidation? ResourceValidation { get; }
        /// <summary> Serialized Name: ResourceType.allowedUnauthorizedActions. </summary>
        public IReadOnlyList<string> AllowedUnauthorizedActions { get; }
        /// <summary> Serialized Name: ResourceType.authorizationActionMappings. </summary>
        public IReadOnlyList<AuthorizationActionMapping> AuthorizationActionMappings { get; }
        /// <summary> Serialized Name: ResourceType.linkedAccessChecks. </summary>
        public IReadOnlyList<LinkedAccessCheck> LinkedAccessChecks { get; }
        /// <summary> Serialized Name: ResourceType.defaultApiVersion. </summary>
        public string DefaultApiVersion { get; }
        /// <summary> Serialized Name: ResourceType.loggingRules. </summary>
        public IReadOnlyList<LoggingRule> LoggingRules { get; }
        /// <summary> Serialized Name: ResourceType.throttlingRules. </summary>
        public IReadOnlyList<ThrottlingRule> ThrottlingRules { get; }
        /// <summary> Serialized Name: ResourceType.endpoints. </summary>
        public IReadOnlyList<ResourceProviderEndpoint> Endpoints { get; }
        /// <summary> Serialized Name: ResourceType.marketplaceType. </summary>
        public ResourceTypeMarketplaceType? MarketplaceType { get; }
        /// <summary> Serialized Name: ResourceType.identityManagement. </summary>
        internal ResourceTypeIdentityManagement IdentityManagement { get; }
        /// <summary> Serialized Name: IdentityManagement.type. </summary>
        public IdentityManagementType? ManagementType
        {
            get => IdentityManagement?.ManagementType;
        }

        /// <summary>
        /// Anything
        /// Serialized Name: ResourceType.metadata
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Metadata { get; }
        /// <summary> Serialized Name: ResourceType.requiredFeatures. </summary>
        public IReadOnlyList<string> RequiredFeatures { get; }
        /// <summary> Serialized Name: ResourceType.featuresRule. </summary>
        internal ResourceTypeFeaturesRule FeaturesRule { get; }
        /// <summary> Serialized Name: FeaturesRule.requiredFeaturesPolicy. </summary>
        public FeaturesPolicy? RequiredFeaturesPolicy
        {
            get => FeaturesRule?.RequiredFeaturesPolicy;
        }

        /// <summary> Serialized Name: ResourceType.subscriptionStateRules. </summary>
        public IReadOnlyList<SubscriptionStateRule> SubscriptionStateRules { get; }
        /// <summary> Serialized Name: ResourceType.serviceTreeInfos. </summary>
        public IReadOnlyList<ServiceTreeInfo> ServiceTreeInfos { get; }
        /// <summary> Serialized Name: ResourceType.requestHeaderOptions. </summary>
        internal ResourceTypeRequestHeaderOptions RequestHeaderOptions { get; }
        /// <summary> Serialized Name: RequestHeaderOptions.optInHeaders. </summary>
        public OptInHeaderType? OptInHeaders
        {
            get => RequestHeaderOptions?.OptInHeaders;
        }

        /// <summary> Serialized Name: ResourceType.skuLink. </summary>
        public string SkuLink { get; }
        /// <summary> Serialized Name: ResourceType.disallowedActionVerbs. </summary>
        public IReadOnlyList<string> DisallowedActionVerbs { get; }
        /// <summary> Serialized Name: ResourceType.templateDeploymentPolicy. </summary>
        public ResourceTypeTemplateDeploymentPolicy TemplateDeploymentPolicy { get; }
        /// <summary> Serialized Name: ResourceType.extendedLocations. </summary>
        public IReadOnlyList<ExtendedLocationOptions> ExtendedLocations { get; }
        /// <summary> Serialized Name: ResourceType.linkedOperationRules. </summary>
        public IReadOnlyList<LinkedOperationRule> LinkedOperationRules { get; }
        /// <summary> Serialized Name: ResourceType.resourceDeletionPolicy. </summary>
        public ManifestResourceDeletionPolicy? ResourceDeletionPolicy { get; }
    }
}
