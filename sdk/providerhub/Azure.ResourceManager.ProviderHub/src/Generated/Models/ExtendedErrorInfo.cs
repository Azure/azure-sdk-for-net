// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ProviderHub.Models
{
    /// <summary> The ExtendedErrorInfo. </summary>
    public partial class ExtendedErrorInfo
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ExtendedErrorInfo"/>. </summary>
        public ExtendedErrorInfo()
        {
            Details = new ChangeTrackingList<ExtendedErrorInfo>();
            AdditionalInfo = new ChangeTrackingList<TypedErrorInfo>();
        }

        /// <summary> Initializes a new instance of <see cref="ExtendedErrorInfo"/>. </summary>
        /// <param name="code"></param>
        /// <param name="target"></param>
        /// <param name="message"></param>
        /// <param name="details"></param>
        /// <param name="additionalInfo"></param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ExtendedErrorInfo(string code, string target, string message, IList<ExtendedErrorInfo> details, IList<TypedErrorInfo> additionalInfo, Dictionary<string, BinaryData> rawData)
        {
            Code = code;
            Target = target;
            Message = message;
            Details = details;
            AdditionalInfo = additionalInfo;
            _rawData = rawData;
        }

        /// <summary> Gets or sets the code. </summary>
        public string Code { get; set; }
        /// <summary> Gets or sets the target. </summary>
        public string Target { get; set; }
        /// <summary> Gets or sets the message. </summary>
        public string Message { get; set; }
        /// <summary> Gets the details. </summary>
        public IList<ExtendedErrorInfo> Details { get; }
        /// <summary> Gets the additional info. </summary>
        public IList<TypedErrorInfo> AdditionalInfo { get; }
    }
}
