// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ProviderHub.Models
{
    public partial class ResourceMovePolicy : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IsValidationRequired))
            {
                writer.WritePropertyName("validationRequired"u8);
                writer.WriteBooleanValue(IsValidationRequired.Value);
            }
            if (Optional.IsDefined(IsCrossResourceGroupMoveEnabled))
            {
                writer.WritePropertyName("crossResourceGroupMoveEnabled"u8);
                writer.WriteBooleanValue(IsCrossResourceGroupMoveEnabled.Value);
            }
            if (Optional.IsDefined(IsCrossSubscriptionMoveEnabled))
            {
                writer.WritePropertyName("crossSubscriptionMoveEnabled"u8);
                writer.WriteBooleanValue(IsCrossSubscriptionMoveEnabled.Value);
            }
            writer.WriteEndObject();
        }

        internal static ResourceMovePolicy DeserializeResourceMovePolicy(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> validationRequired = default;
            Optional<bool> crossResourceGroupMoveEnabled = default;
            Optional<bool> crossSubscriptionMoveEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("validationRequired"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    validationRequired = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("crossResourceGroupMoveEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    crossResourceGroupMoveEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("crossSubscriptionMoveEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    crossSubscriptionMoveEnabled = property.Value.GetBoolean();
                    continue;
                }
            }
            return new ResourceMovePolicy(Optional.ToNullable(validationRequired), Optional.ToNullable(crossResourceGroupMoveEnabled), Optional.ToNullable(crossSubscriptionMoveEnabled));
        }
    }
}
