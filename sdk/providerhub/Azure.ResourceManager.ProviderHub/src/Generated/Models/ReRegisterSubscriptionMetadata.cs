// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ProviderHub.Models
{
    /// <summary> The ReRegisterSubscriptionMetadata. </summary>
    public partial class ReRegisterSubscriptionMetadata
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ReRegisterSubscriptionMetadata"/>. </summary>
        /// <param name="isEnabled"></param>
        internal ReRegisterSubscriptionMetadata(bool isEnabled)
        {
            IsEnabled = isEnabled;
        }

        /// <summary> Initializes a new instance of <see cref="ReRegisterSubscriptionMetadata"/>. </summary>
        /// <param name="isEnabled"></param>
        /// <param name="concurrencyLimit"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ReRegisterSubscriptionMetadata(bool isEnabled, int? concurrencyLimit, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            IsEnabled = isEnabled;
            ConcurrencyLimit = concurrencyLimit;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ReRegisterSubscriptionMetadata"/> for deserialization. </summary>
        internal ReRegisterSubscriptionMetadata()
        {
        }

        /// <summary> Gets the is enabled. </summary>
        public bool IsEnabled { get; }
        /// <summary> Gets the concurrency limit. </summary>
        public int? ConcurrencyLimit { get; }
    }
}
