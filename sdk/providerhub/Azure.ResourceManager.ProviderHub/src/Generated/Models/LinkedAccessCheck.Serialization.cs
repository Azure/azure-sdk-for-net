// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ProviderHub.Models
{
    public partial class LinkedAccessCheck : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ActionName))
            {
                writer.WritePropertyName("actionName"u8);
                writer.WriteStringValue(ActionName);
            }
            if (Optional.IsDefined(LinkedProperty))
            {
                writer.WritePropertyName("linkedProperty"u8);
                writer.WriteStringValue(LinkedProperty);
            }
            if (Optional.IsDefined(LinkedAction))
            {
                writer.WritePropertyName("linkedAction"u8);
                writer.WriteStringValue(LinkedAction);
            }
            if (Optional.IsDefined(LinkedActionVerb))
            {
                writer.WritePropertyName("linkedActionVerb"u8);
                writer.WriteStringValue(LinkedActionVerb);
            }
            if (Optional.IsDefined(LinkedType))
            {
                writer.WritePropertyName("linkedType"u8);
                writer.WriteStringValue(LinkedType);
            }
            writer.WriteEndObject();
        }

        internal static LinkedAccessCheck DeserializeLinkedAccessCheck(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> actionName = default;
            Optional<string> linkedProperty = default;
            Optional<string> linkedAction = default;
            Optional<string> linkedActionVerb = default;
            Optional<string> linkedType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("actionName"u8))
                {
                    actionName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("linkedProperty"u8))
                {
                    linkedProperty = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("linkedAction"u8))
                {
                    linkedAction = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("linkedActionVerb"u8))
                {
                    linkedActionVerb = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("linkedType"u8))
                {
                    linkedType = property.Value.GetString();
                    continue;
                }
            }
            return new LinkedAccessCheck(actionName.Value, linkedProperty.Value, linkedAction.Value, linkedActionVerb.Value, linkedType.Value);
        }
    }
}
