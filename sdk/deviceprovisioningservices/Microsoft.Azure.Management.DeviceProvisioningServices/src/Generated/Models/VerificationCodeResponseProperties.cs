// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DeviceProvisioningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class VerificationCodeResponseProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// VerificationCodeResponseProperties class.
        /// </summary>
        public VerificationCodeResponseProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// VerificationCodeResponseProperties class.
        /// </summary>
        /// <param name="verificationCode">Verification code.</param>
        /// <param name="subject">Certificate subject.</param>
        /// <param name="expiry">Code expiry.</param>
        /// <param name="thumbprint">Certificate thumbprint.</param>
        /// <param name="isVerified">Indicate if the certificate is verified by
        /// owner of private key.</param>
        /// <param name="certificate">base-64 representation of X509
        /// certificate .cer file or just .pem file content.</param>
        /// <param name="created">Certificate created time.</param>
        /// <param name="updated">Certificate updated time.</param>
        public VerificationCodeResponseProperties(string verificationCode = default(string), string subject = default(string), string expiry = default(string), string thumbprint = default(string), bool? isVerified = default(bool?), byte[] certificate = default(byte[]), string created = default(string), string updated = default(string))
        {
            VerificationCode = verificationCode;
            Subject = subject;
            Expiry = expiry;
            Thumbprint = thumbprint;
            IsVerified = isVerified;
            Certificate = certificate;
            Created = created;
            Updated = updated;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets verification code.
        /// </summary>
        [JsonProperty(PropertyName = "verificationCode")]
        public string VerificationCode { get; set; }

        /// <summary>
        /// Gets or sets certificate subject.
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// Gets or sets code expiry.
        /// </summary>
        [JsonProperty(PropertyName = "expiry")]
        public string Expiry { get; set; }

        /// <summary>
        /// Gets or sets certificate thumbprint.
        /// </summary>
        [JsonProperty(PropertyName = "thumbprint")]
        public string Thumbprint { get; set; }

        /// <summary>
        /// Gets or sets indicate if the certificate is verified by owner of
        /// private key.
        /// </summary>
        [JsonProperty(PropertyName = "isVerified")]
        public bool? IsVerified { get; set; }

        /// <summary>
        /// Gets or sets base-64 representation of X509 certificate .cer file
        /// or just .pem file content.
        /// </summary>
        [JsonProperty(PropertyName = "certificate")]
        public byte[] Certificate { get; set; }

        /// <summary>
        /// Gets or sets certificate created time.
        /// </summary>
        [JsonProperty(PropertyName = "created")]
        public string Created { get; set; }

        /// <summary>
        /// Gets or sets certificate updated time.
        /// </summary>
        [JsonProperty(PropertyName = "updated")]
        public string Updated { get; set; }

    }
}
