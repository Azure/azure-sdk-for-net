// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DeviceProvisioningServices.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The IP filter rules for a provisioning Service.
    /// </summary>
    public partial class IpFilterRule
    {
        /// <summary>
        /// Initializes a new instance of the IpFilterRule class.
        /// </summary>
        public IpFilterRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IpFilterRule class.
        /// </summary>
        /// <param name="filterName">The name of the IP filter rule.</param>
        /// <param name="action">The desired action for requests captured by
        /// this rule. Possible values include: 'Accept', 'Reject'</param>
        /// <param name="ipMask">A string that contains the IP address range in
        /// CIDR notation for the rule.</param>
        /// <param name="target">Target for requests captured by this rule.
        /// Possible values include: 'all', 'serviceApi', 'deviceApi'</param>
        public IpFilterRule(string filterName, IpFilterActionType action, string ipMask, IpFilterTargetType? target = default(IpFilterTargetType?))
        {
            FilterName = filterName;
            Action = action;
            IpMask = ipMask;
            Target = target;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the IP filter rule.
        /// </summary>
        [JsonProperty(PropertyName = "filterName")]
        public string FilterName { get; set; }

        /// <summary>
        /// Gets or sets the desired action for requests captured by this rule.
        /// Possible values include: 'Accept', 'Reject'
        /// </summary>
        [JsonProperty(PropertyName = "action")]
        public IpFilterActionType Action { get; set; }

        /// <summary>
        /// Gets or sets a string that contains the IP address range in CIDR
        /// notation for the rule.
        /// </summary>
        [JsonProperty(PropertyName = "ipMask")]
        public string IpMask { get; set; }

        /// <summary>
        /// Gets or sets target for requests captured by this rule. Possible
        /// values include: 'all', 'serviceApi', 'deviceApi'
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public IpFilterTargetType? Target { get; set; }

    }
}
