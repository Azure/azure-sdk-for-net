// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DeviceProvisioningServices.Models
{
    /// <summary> The IP filter rules for a provisioning Service. </summary>
    public partial class DeviceProvisioningServicesIPFilterRule
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="DeviceProvisioningServicesIPFilterRule"/>. </summary>
        /// <param name="filterName"> The name of the IP filter rule. </param>
        /// <param name="action"> The desired action for requests captured by this rule. </param>
        /// <param name="ipMask"> A string that contains the IP address range in CIDR notation for the rule. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="filterName"/> or <paramref name="ipMask"/> is null. </exception>
        public DeviceProvisioningServicesIPFilterRule(string filterName, DeviceProvisioningServicesIPFilterActionType action, string ipMask)
        {
            Argument.AssertNotNull(filterName, nameof(filterName));
            Argument.AssertNotNull(ipMask, nameof(ipMask));

            FilterName = filterName;
            Action = action;
            IPMask = ipMask;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceProvisioningServicesIPFilterRule"/>. </summary>
        /// <param name="filterName"> The name of the IP filter rule. </param>
        /// <param name="action"> The desired action for requests captured by this rule. </param>
        /// <param name="ipMask"> A string that contains the IP address range in CIDR notation for the rule. </param>
        /// <param name="target"> Target for requests captured by this rule. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal DeviceProvisioningServicesIPFilterRule(string filterName, DeviceProvisioningServicesIPFilterActionType action, string ipMask, DeviceProvisioningServicesIPFilterTargetType? target, Dictionary<string, BinaryData> rawData)
        {
            FilterName = filterName;
            Action = action;
            IPMask = ipMask;
            Target = target;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="DeviceProvisioningServicesIPFilterRule"/> for deserialization. </summary>
        internal DeviceProvisioningServicesIPFilterRule()
        {
        }

        /// <summary> The name of the IP filter rule. </summary>
        public string FilterName { get; set; }
        /// <summary> The desired action for requests captured by this rule. </summary>
        public DeviceProvisioningServicesIPFilterActionType Action { get; set; }
        /// <summary> A string that contains the IP address range in CIDR notation for the rule. </summary>
        public string IPMask { get; set; }
        /// <summary> Target for requests captured by this rule. </summary>
        public DeviceProvisioningServicesIPFilterTargetType? Target { get; set; }
    }
}
