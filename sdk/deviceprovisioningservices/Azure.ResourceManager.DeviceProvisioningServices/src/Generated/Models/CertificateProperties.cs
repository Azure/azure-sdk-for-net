// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DeviceProvisioningServices.Models
{
    /// <summary> The description of an X509 CA Certificate. </summary>
    public partial class CertificateProperties
    {
        /// <summary> Initializes a new instance of CertificateProperties. </summary>
        public CertificateProperties()
        {
        }

        /// <summary> Initializes a new instance of CertificateProperties. </summary>
        /// <param name="subject"> The certificate&apos;s subject name. </param>
        /// <param name="expiry"> The certificate&apos;s expiration date and time. </param>
        /// <param name="thumbprint"> The certificate&apos;s thumbprint. </param>
        /// <param name="isVerified"> Determines whether certificate has been verified. </param>
        /// <param name="certificate"> base-64 representation of X509 certificate .cer file or just .pem file content. </param>
        /// <param name="created"> The certificate&apos;s creation date and time. </param>
        /// <param name="updated"> The certificate&apos;s last update date and time. </param>
        internal CertificateProperties(string subject, DateTimeOffset? expiry, string thumbprint, bool? isVerified, byte[] certificate, DateTimeOffset? created, DateTimeOffset? updated)
        {
            Subject = subject;
            Expiry = expiry;
            Thumbprint = thumbprint;
            IsVerified = isVerified;
            Certificate = certificate;
            Created = created;
            Updated = updated;
        }

        /// <summary> The certificate&apos;s subject name. </summary>
        public string Subject { get; }
        /// <summary> The certificate&apos;s expiration date and time. </summary>
        public DateTimeOffset? Expiry { get; }
        /// <summary> The certificate&apos;s thumbprint. </summary>
        public string Thumbprint { get; }
        /// <summary> Determines whether certificate has been verified. </summary>
        public bool? IsVerified { get; set; }
        /// <summary> base-64 representation of X509 certificate .cer file or just .pem file content. </summary>
        public byte[] Certificate { get; set; }
        /// <summary> The certificate&apos;s creation date and time. </summary>
        public DateTimeOffset? Created { get; }
        /// <summary> The certificate&apos;s last update date and time. </summary>
        public DateTimeOffset? Updated { get; }
    }
}
