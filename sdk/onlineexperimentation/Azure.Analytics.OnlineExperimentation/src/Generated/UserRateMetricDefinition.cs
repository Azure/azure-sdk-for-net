// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.OnlineExperimentation
{
    /// <summary> The definition of a UserRate metric definition. Calculates the percentage of users who encounter a start event and subsequently an end event. Users must encounter events in the specified order. </summary>
    public partial class UserRateMetricDefinition : ExperimentMetricDefinition
    {
        /// <summary> Initializes a new instance of <see cref="UserRateMetricDefinition"/>. </summary>
        /// <param name="startEvent"> The start event to observe as the rate denominator. </param>
        /// <param name="endEvent"> The end event to observe, which is a condition for the rate numerator. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="startEvent"/> or <paramref name="endEvent"/> is null. </exception>
        public UserRateMetricDefinition(ObservedEvent startEvent, ObservedEvent endEvent)
        {
            Argument.AssertNotNull(startEvent, nameof(startEvent));
            Argument.AssertNotNull(endEvent, nameof(endEvent));

            Type = ExperimentMetricType.UserRate;
            StartEvent = startEvent;
            EndEvent = endEvent;
        }

        /// <summary> Initializes a new instance of <see cref="UserRateMetricDefinition"/>. </summary>
        /// <param name="type"> Discriminator property for ExperimentMetricDefinition. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="startEvent"> The start event to observe as the rate denominator. </param>
        /// <param name="endEvent"> The end event to observe, which is a condition for the rate numerator. </param>
        internal UserRateMetricDefinition(ExperimentMetricType type, IDictionary<string, BinaryData> serializedAdditionalRawData, ObservedEvent startEvent, ObservedEvent endEvent) : base(type, serializedAdditionalRawData)
        {
            StartEvent = startEvent;
            EndEvent = endEvent;
        }

        /// <summary> Initializes a new instance of <see cref="UserRateMetricDefinition"/> for deserialization. </summary>
        internal UserRateMetricDefinition()
        {
        }

        /// <summary> The start event to observe as the rate denominator. </summary>
        public ObservedEvent StartEvent { get; set; }
        /// <summary> The end event to observe, which is a condition for the rate numerator. </summary>
        public ObservedEvent EndEvent { get; set; }
    }
}
