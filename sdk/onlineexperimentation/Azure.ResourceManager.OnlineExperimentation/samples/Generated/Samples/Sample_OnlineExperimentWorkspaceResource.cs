// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.OnlineExperimentation.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.OnlineExperimentation.Samples
{
    public partial class Sample_OnlineExperimentWorkspaceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetASingleOnlineExperimentWorkspace()
        {
            // Generated from example definition: 2025-05-31-preview/OnlineExperimentWorkspaces_Get.json
            // this example is just showing the usage of "OnlineExperimentWorkspace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OnlineExperimentWorkspaceResource created on azure
            // for more information of creating OnlineExperimentWorkspaceResource, please refer to the document of OnlineExperimentWorkspaceResource
            string subscriptionId = "fa5fc227-a624-475e-b696-cdd604c735bc";
            string resourceGroupName = "res9871";
            string workspaceName = "expworkspace3";
            ResourceIdentifier onlineExperimentWorkspaceResourceId = OnlineExperimentWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            OnlineExperimentWorkspaceResource onlineExperimentWorkspace = client.GetOnlineExperimentWorkspaceResource(onlineExperimentWorkspaceResourceId);

            // invoke the operation
            OnlineExperimentWorkspaceResource result = await onlineExperimentWorkspace.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OnlineExperimentWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteAnOnlineExperimentWorkspace()
        {
            // Generated from example definition: 2025-05-31-preview/OnlineExperimentWorkspaces_Delete.json
            // this example is just showing the usage of "OnlineExperimentWorkspace_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OnlineExperimentWorkspaceResource created on azure
            // for more information of creating OnlineExperimentWorkspaceResource, please refer to the document of OnlineExperimentWorkspaceResource
            string subscriptionId = "fa5fc227-a624-475e-b696-cdd604c735bc";
            string resourceGroupName = "res9871";
            string workspaceName = "expworkspace3";
            ResourceIdentifier onlineExperimentWorkspaceResourceId = OnlineExperimentWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            OnlineExperimentWorkspaceResource onlineExperimentWorkspace = client.GetOnlineExperimentWorkspaceResource(onlineExperimentWorkspaceResourceId);

            // invoke the operation
            await onlineExperimentWorkspace.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateAnOnlineExperimentWorkspace()
        {
            // Generated from example definition: 2025-05-31-preview/OnlineExperimentWorkspaces_Update.json
            // this example is just showing the usage of "OnlineExperimentWorkspace_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OnlineExperimentWorkspaceResource created on azure
            // for more information of creating OnlineExperimentWorkspaceResource, please refer to the document of OnlineExperimentWorkspaceResource
            string subscriptionId = "fa5fc227-a624-475e-b696-cdd604c735bc";
            string resourceGroupName = "res9871";
            string workspaceName = "expworkspace3";
            ResourceIdentifier onlineExperimentWorkspaceResourceId = OnlineExperimentWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            OnlineExperimentWorkspaceResource onlineExperimentWorkspace = client.GetOnlineExperimentWorkspaceResource(onlineExperimentWorkspaceResourceId);

            // invoke the operation
            OnlineExperimentWorkspacePatch patch = new OnlineExperimentWorkspacePatch
            {
                Identity = new ManagedServiceIdentity("UserAssigned")
                {
                    UserAssignedIdentities =
{
[new ResourceIdentifier("/subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/eu2cgroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1")] = new UserAssignedIdentity(),
[new ResourceIdentifier("/subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/eu2cgroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id2")] = new UserAssignedIdentity()
},
                },
                Tags =
{
["newKey"] = "newVal"
},
            };
            ArmOperation<OnlineExperimentWorkspaceResource> lro = await onlineExperimentWorkspace.UpdateAsync(WaitUntil.Completed, patch);
            OnlineExperimentWorkspaceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OnlineExperimentWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateAnOnlineExperimentWorkspaceWithCustomerManagedEncryptionKey()
        {
            // Generated from example definition: 2025-05-31-preview/OnlineExperimentWorkspaces_UpdateWithEncryption.json
            // this example is just showing the usage of "OnlineExperimentWorkspace_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OnlineExperimentWorkspaceResource created on azure
            // for more information of creating OnlineExperimentWorkspaceResource, please refer to the document of OnlineExperimentWorkspaceResource
            string subscriptionId = "fa5fc227-a624-475e-b696-cdd604c735bc";
            string resourceGroupName = "res9871";
            string workspaceName = "expworkspace3";
            ResourceIdentifier onlineExperimentWorkspaceResourceId = OnlineExperimentWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            OnlineExperimentWorkspaceResource onlineExperimentWorkspace = client.GetOnlineExperimentWorkspaceResource(onlineExperimentWorkspaceResourceId);

            // invoke the operation
            OnlineExperimentWorkspacePatch patch = new OnlineExperimentWorkspacePatch
            {
                Identity = new ManagedServiceIdentity("UserAssigned")
                {
                    UserAssignedIdentities =
{
[new ResourceIdentifier("/subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/eu2cgroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1")] = new UserAssignedIdentity(),
[new ResourceIdentifier("/subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/eu2cgroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id2")] = new UserAssignedIdentity()
},
                },
                Tags =
{
["newKey"] = "newVal"
},
                Properties = new OnlineExperimentWorkspacePatchProperties
                {
                    LogAnalyticsWorkspaceResourceId = new ResourceIdentifier("/subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/res9871/providers/Microsoft.OperationalInsights/workspaces/log9871"),
                    LogsExporterStorageAccountResourceId = new ResourceIdentifier("/subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/res9871/providers/Microsoft.Storage/storageAccounts/sto9871"),
                    CustomerManagedKeyEncryption = new CustomerManagedKeyEncryption
                    {
                        KeyEncryptionKeyIdentity = new KeyEncryptionKeyIdentity
                        {
                            IdentityType = KeyEncryptionKeyIdentityType.UserAssignedIdentity,
                            UserAssignedIdentityResourceId = new ResourceIdentifier("/subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/eu2cgroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1"),
                        },
                        KeyEncryptionKeyUri = new Uri("https://contosovault.vault.azure.net/keys/contosokek"),
                    },
                },
            };
            ArmOperation<OnlineExperimentWorkspaceResource> lro = await onlineExperimentWorkspace.UpdateAsync(WaitUntil.Completed, patch);
            OnlineExperimentWorkspaceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OnlineExperimentWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
