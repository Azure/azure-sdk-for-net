// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.OnlineExperimentation.Models
{
    /// <summary> The OnlineExperimentationWorkspacePatchProperties. </summary>
    public partial class OnlineExperimentationWorkspacePatchProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="OnlineExperimentationWorkspacePatchProperties"/>. </summary>
        public OnlineExperimentationWorkspacePatchProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="OnlineExperimentationWorkspacePatchProperties"/>. </summary>
        /// <param name="logAnalyticsWorkspaceResourceId"> The resource identifier of the Log Analytics workspace which online experimentation workspace uses for generating experiment analysis results. </param>
        /// <param name="logsExporterStorageAccountResourceId"> The resource identifier of storage account where logs are exported from Log Analytics workspace. online experimentation workspace uses it generating experiment analysis results. </param>
        /// <param name="encryption"> The encryption configuration for the online experimentation workspace resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal OnlineExperimentationWorkspacePatchProperties(ResourceIdentifier logAnalyticsWorkspaceResourceId, ResourceIdentifier logsExporterStorageAccountResourceId, ResourceEncryptionConfiguration encryption, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            LogAnalyticsWorkspaceResourceId = logAnalyticsWorkspaceResourceId;
            LogsExporterStorageAccountResourceId = logsExporterStorageAccountResourceId;
            Encryption = encryption;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The resource identifier of the Log Analytics workspace which online experimentation workspace uses for generating experiment analysis results. </summary>
        public ResourceIdentifier LogAnalyticsWorkspaceResourceId { get; set; }
        /// <summary> The resource identifier of storage account where logs are exported from Log Analytics workspace. online experimentation workspace uses it generating experiment analysis results. </summary>
        public ResourceIdentifier LogsExporterStorageAccountResourceId { get; set; }
        /// <summary> The encryption configuration for the online experimentation workspace resource. </summary>
        internal ResourceEncryptionConfiguration Encryption { get; set; }
        /// <summary> All Customer-managed key encryption properties for the resource. </summary>
        public CustomerManagedKeyEncryption CustomerManagedKeyEncryption
        {
            get => Encryption is null ? default : Encryption.CustomerManagedKeyEncryption;
            set
            {
                if (Encryption is null)
                    Encryption = new ResourceEncryptionConfiguration();
                Encryption.CustomerManagedKeyEncryption = value;
            }
        }
    }
}
