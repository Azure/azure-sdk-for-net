// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Relay.Models;

namespace Azure.ResourceManager.Relay
{
    public partial class WcfRelayData : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties"u8);
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(RelayType))
            {
                writer.WritePropertyName("relayType"u8);
                writer.WriteStringValue(RelayType.Value.ToSerialString());
            }
            if (Core.Optional.IsDefined(IsClientAuthorizationRequired))
            {
                writer.WritePropertyName("requiresClientAuthorization"u8);
                writer.WriteBooleanValue(IsClientAuthorizationRequired.Value);
            }
            if (Core.Optional.IsDefined(IsTransportSecurityRequired))
            {
                writer.WritePropertyName("requiresTransportSecurity"u8);
                writer.WriteBooleanValue(IsTransportSecurityRequired.Value);
            }
            if (Core.Optional.IsDefined(UserMetadata))
            {
                writer.WritePropertyName("userMetadata"u8);
                writer.WriteStringValue(UserMetadata);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static WcfRelayData DeserializeWcfRelayData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<AzureLocation> location = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Core.Optional<SystemData> systemData = default;
            Core.Optional<bool> isDynamic = default;
            Core.Optional<DateTimeOffset> createdAt = default;
            Core.Optional<DateTimeOffset> updatedAt = default;
            Core.Optional<int> listenerCount = default;
            Core.Optional<RelayType> relayType = default;
            Core.Optional<bool> requiresClientAuthorization = default;
            Core.Optional<bool> requiresTransportSecurity = default;
            Core.Optional<string> userMetadata = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("location"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    location = new AzureLocation(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("isDynamic"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            isDynamic = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("createdAt"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            createdAt = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("updatedAt"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            updatedAt = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("listenerCount"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            listenerCount = property0.Value.GetInt32();
                            continue;
                        }
                        if (property0.NameEquals("relayType"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            relayType = property0.Value.GetString().ToRelayType();
                            continue;
                        }
                        if (property0.NameEquals("requiresClientAuthorization"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            requiresClientAuthorization = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("requiresTransportSecurity"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            requiresTransportSecurity = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("userMetadata"u8))
                        {
                            userMetadata = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new WcfRelayData(id, name, type, systemData.Value, Core.Optional.ToNullable(isDynamic), Core.Optional.ToNullable(createdAt), Core.Optional.ToNullable(updatedAt), Core.Optional.ToNullable(listenerCount), Core.Optional.ToNullable(relayType), Core.Optional.ToNullable(requiresClientAuthorization), Core.Optional.ToNullable(requiresTransportSecurity), userMetadata.Value, Core.Optional.ToNullable(location));
        }
    }
}
