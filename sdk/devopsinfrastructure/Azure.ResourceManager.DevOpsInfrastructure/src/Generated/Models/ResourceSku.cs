// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DevOpsInfrastructure.Models
{
    /// <summary> A ResourceSku. </summary>
    public partial class ResourceSku : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ResourceSku"/>. </summary>
        public ResourceSku()
        {
            Locations = new ChangeTrackingList<string>();
            LocationInfo = new ChangeTrackingList<ResourceSkuLocationInfo>();
            Capabilities = new ChangeTrackingList<ResourceSkuCapabilities>();
            Restrictions = new ChangeTrackingList<ResourceSkuRestrictions>();
        }

        /// <summary> Initializes a new instance of <see cref="ResourceSku"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tier"> The tier of virtual machines in a scale set. </param>
        /// <param name="size"> The size of the SKU. </param>
        /// <param name="family"> The family of the SKU. </param>
        /// <param name="locations"> The set of locations that the SKU is available. </param>
        /// <param name="locationInfo"> A list of locations and availability zones in those locations where the SKU is available. </param>
        /// <param name="capabilities"> Name value pairs to describe the capability. </param>
        /// <param name="restrictions"> The restrictions of the SKU. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ResourceSku(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string tier, string size, string family, IList<string> locations, IList<ResourceSkuLocationInfo> locationInfo, IList<ResourceSkuCapabilities> capabilities, IList<ResourceSkuRestrictions> restrictions, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            Tier = tier;
            Size = size;
            Family = family;
            Locations = locations;
            LocationInfo = locationInfo;
            Capabilities = capabilities;
            Restrictions = restrictions;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The tier of virtual machines in a scale set. </summary>
        public string Tier { get; set; }
        /// <summary> The size of the SKU. </summary>
        public string Size { get; set; }
        /// <summary> The family of the SKU. </summary>
        public string Family { get; set; }
        /// <summary> The set of locations that the SKU is available. </summary>
        public IList<string> Locations { get; }
        /// <summary> A list of locations and availability zones in those locations where the SKU is available. </summary>
        public IList<ResourceSkuLocationInfo> LocationInfo { get; }
        /// <summary> Name value pairs to describe the capability. </summary>
        public IList<ResourceSkuCapabilities> Capabilities { get; }
        /// <summary> The restrictions of the SKU. </summary>
        public IList<ResourceSkuRestrictions> Restrictions { get; }
    }
}
