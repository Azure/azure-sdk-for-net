// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.ArcVm
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    internal partial class ResourceGroupResourceExtensionClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="ResourceGroupResourceExtensionClient"/> class for mocking. </summary>
        protected ResourceGroupResourceExtensionClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="ResourceGroupResourceExtensionClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal ResourceGroupResourceExtensionClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of GalleryImageResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of GalleryImageResources and their operations over a GalleryImageResource. </returns>
        public virtual GalleryImageCollection GetGalleryImages()
        {
            return GetCachedClient(Client => new GalleryImageCollection(Client, Id));
        }

        /// <summary> Gets a collection of LogicalNetworkResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of LogicalNetworkResources and their operations over a LogicalNetworkResource. </returns>
        public virtual LogicalNetworkCollection GetLogicalNetworks()
        {
            return GetCachedClient(Client => new LogicalNetworkCollection(Client, Id));
        }

        /// <summary> Gets a collection of MarketplaceGalleryImageResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of MarketplaceGalleryImageResources and their operations over a MarketplaceGalleryImageResource. </returns>
        public virtual MarketplaceGalleryImageCollection GetMarketplaceGalleryImages()
        {
            return GetCachedClient(Client => new MarketplaceGalleryImageCollection(Client, Id));
        }

        /// <summary> Gets a collection of NetworkInterfaceResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of NetworkInterfaceResources and their operations over a NetworkInterfaceResource. </returns>
        public virtual NetworkInterfaceCollection GetNetworkInterfaces()
        {
            return GetCachedClient(Client => new NetworkInterfaceCollection(Client, Id));
        }

        /// <summary> Gets a collection of StorageContainerResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of StorageContainerResources and their operations over a StorageContainerResource. </returns>
        public virtual StorageContainerCollection GetStorageContainers()
        {
            return GetCachedClient(Client => new StorageContainerCollection(Client, Id));
        }

        /// <summary> Gets a collection of VirtualHardDiskResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of VirtualHardDiskResources and their operations over a VirtualHardDiskResource. </returns>
        public virtual VirtualHardDiskCollection GetVirtualHardDisks()
        {
            return GetCachedClient(Client => new VirtualHardDiskCollection(Client, Id));
        }
    }
}
