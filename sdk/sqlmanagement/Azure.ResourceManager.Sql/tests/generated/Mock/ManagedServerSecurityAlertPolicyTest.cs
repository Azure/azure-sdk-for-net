// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedServerSecurityAlertPolicy. </summary>
    public partial class ManagedServerSecurityAlertPolicyMockTests : MockTestBase
    {
        public ManagedServerSecurityAlertPolicyMockTests(bool isAsync) : base(isAsync)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        public ManagedServerSecurityAlertPolicyMockTests() : this(false)
        {
        }

        private async Task<Sql.ManagedServerSecurityAlertPolicyCollection> GetManagedServerSecurityAlertPolicyCollectionAsync(string resourceGroupName, string managedInstanceName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ManagedInstanceCollection managedInstanceCollection = resourceGroup.GetManagedInstances();
            var managedInstanceOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(managedInstanceCollection, managedInstanceName);
            ManagedInstance managedInstance = managedInstanceOperation.Value;
            ManagedServerSecurityAlertPolicyCollection managedServerSecurityAlertPolicyCollection = managedInstance.GetManagedServerSecurityAlertPolicies();
            return managedServerSecurityAlertPolicyCollection;
        }

        private async Task<Sql.ManagedServerSecurityAlertPolicy> GetManagedServerSecurityAlertPolicyAsync()
        {
            var collection = await GetManagedServerSecurityAlertPolicyCollectionAsync("securityalert-4799", "securityalert-6440");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection);
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a managed server's threat detection policy
            var resource = await GetManagedServerSecurityAlertPolicyAsync();

            await resource.GetAsync();
        }
    }
}
