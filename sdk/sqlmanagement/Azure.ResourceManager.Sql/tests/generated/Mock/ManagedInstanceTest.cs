// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedInstance. </summary>
    public partial class ManagedInstanceMockTests : MockTestBase
    {
        public ManagedInstanceMockTests(bool isAsync) : base(isAsync)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        public ManagedInstanceMockTests() : this(false)
        {
        }

        private async Task<Sql.ManagedInstanceCollection> GetManagedInstanceCollectionAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ManagedInstanceCollection managedInstanceCollection = resourceGroup.GetManagedInstances();
            return managedInstanceCollection;
        }

        private async Task<Sql.ManagedInstance> GetManagedInstanceAsync()
        {
            var collection = await GetManagedInstanceCollectionAsync("testrg");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "testinstance");
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get managed instance
            var resource = await GetManagedInstanceAsync();
            string expand = null;

            await resource.GetAsync(expand);
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete managed instance
            var resource = await GetManagedInstanceAsync();

            await resource.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Remove maintenance policy from managed instance (select default maintenance policy)
            var resource = await GetManagedInstanceAsync();
            var parameters = new Sql.Models.ManagedInstanceUpdate()
            {
                MaintenanceConfigurationId = "/subscriptions/20d7082a-0fc7-4468-82bd-542694d5042b/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
            };

            await resource.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task GetInaccessibleByInstanceManagedDatabasesAsync()
        {
            // Example: List inaccessible managed databases by managed instances
            var resource = await GetManagedInstanceAsync();

            resource.GetInaccessibleByInstanceManagedDatabasesAsync();
        }

        [RecordedTest]
        public async Task GetByManagedInstanceAsync()
        {
            // Example: Obtain list of instance's top resource consuming queries.
            var resource = await GetManagedInstanceAsync();
            int? numberOfQueries = null;
            string databases = null;
            string startTime = null;
            string endTime = null;
            var interval = new Sql.Models.QueryTimeGrainType("PT1H");
            Sql.Models.AggregationFunctionType? aggregationFunction = null;
            var observationMetric = new Sql.Models.MetricType("duration");

            resource.GetByManagedInstanceAsync(numberOfQueries, databases, startTime, endTime, interval, aggregationFunction, observationMetric);
        }

        [RecordedTest]
        public async Task FailoverAsync()
        {
            // Example: Failover a managed instance.
            var resource = await GetManagedInstanceAsync();
            var replicaType = new Sql.Models.ReplicaType("Primary");

            await resource.FailoverAsync(replicaType);
        }

        [RecordedTest]
        public async Task CreateManagedInstanceTdeCertificateAsync()
        {
            // Example: Upload a TDE certificate
            var resource = await GetManagedInstanceAsync();
            var parameters = new Sql.Models.TdeCertificate()
            {
                PrivateBlob = "MIIXXXXXXXX",
            };

            await resource.CreateManagedInstanceTdeCertificateAsync(parameters);
        }

        [RecordedTest]
        public async Task GetServerTrustGroupsByInstanceAsync()
        {
            // Example: List server trust groups by managed instance
            var resource = await GetManagedInstanceAsync();

            resource.GetServerTrustGroupsByInstanceAsync();
        }

        [RecordedTest]
        public async Task SqlAgentConfigurationGetAsync()
        {
            // Example: Gets current instance sql agent configuration.
            var resource = await GetManagedInstanceAsync();
            var childResource = resource.GetSqlAgentConfiguration();

            await childResource.GetAsync();
        }
    }
}
