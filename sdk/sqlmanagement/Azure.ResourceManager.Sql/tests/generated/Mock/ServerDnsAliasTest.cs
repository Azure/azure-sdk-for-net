// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ServerDnsAlias. </summary>
    public partial class ServerDnsAliasMockTests : MockTestBase
    {
        public ServerDnsAliasMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        public ServerDnsAliasMockTests() : this(false)
        {
        }

        private async Task<Sql.ServerDnsAliasCollection> GetServerDnsAliasCollectionAsync(string resourceGroupName, string serverName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ServerCollection serverCollection = resourceGroup.GetServers();
            var serverOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(serverCollection, serverName);
            Server server = serverOperation.Value;
            ServerDnsAliasCollection serverDnsAliasCollection = server.GetServerDnsAliases();
            return serverDnsAliasCollection;
        }

        private async Task<Sql.ServerDnsAlias> GetServerDnsAliasAsync()
        {
            var collection = await GetServerDnsAliasCollectionAsync("Default", "dns-alias-server");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "dns-alias-name-1");
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get server DNS alias
            var resource = await GetServerDnsAliasAsync();

            await resource.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete server DNS alias
            var resource = await GetServerDnsAliasAsync();

            await resource.DeleteAsync();
        }

        [RecordedTest]
        public async Task AcquireAsync()
        {
            // Example: Acquire server DNS alias
            var resource = await GetServerDnsAliasAsync();
            var parameters = new Sql.Models.ServerDnsAliasAcquisition("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/servers/dns-alias-old-server/dnsAliases/dns-alias-name-1");

            await resource.AcquireAsync(parameters);
        }
    }
}
