// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for DatabaseVulnerabilityAssessment. </summary>
    public partial class ManagedInstanceDatabaseVulnerabilityAssessmentCollectionMockTests : MockTestBase
    {
        public ManagedInstanceDatabaseVulnerabilityAssessmentCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        public ManagedInstanceDatabaseVulnerabilityAssessmentCollectionMockTests() : this(false)
        {
        }

        private async Task<Sql.ManagedInstanceDatabaseVulnerabilityAssessmentCollection> GetManagedInstanceDatabaseVulnerabilityAssessmentCollectionAsync(string resourceGroupName, string managedInstanceName, string databaseName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ManagedInstanceCollection managedInstanceCollection = resourceGroup.GetManagedInstances();
            var managedInstanceOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(managedInstanceCollection, managedInstanceName);
            ManagedInstance managedInstance = managedInstanceOperation.Value;
            ManagedDatabaseCollection managedDatabaseCollection = managedInstance.GetManagedDatabases();
            var managedDatabaseOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(managedDatabaseCollection, databaseName);
            ManagedDatabase managedDatabase = managedDatabaseOperation.Value;
            ManagedInstanceDatabaseVulnerabilityAssessmentCollection managedInstanceDatabaseVulnerabilityAssessmentCollection = managedDatabase.GetManagedInstanceDatabaseVulnerabilityAssessments();
            return managedInstanceDatabaseVulnerabilityAssessmentCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create a database's vulnerability assessment with all parameters
            var collection = await GetManagedInstanceDatabaseVulnerabilityAssessmentCollectionAsync("vulnerabilityaseessmenttest-4799", "vulnerabilityaseessmenttest-6440", "testdb");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection);
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: Get a database's vulnerability assessments list
            var collection = await GetManagedInstanceDatabaseVulnerabilityAssessmentCollectionAsync("vulnerabilityaseessmenttest-4799", "vulnerabilityaseessmenttest-6440", "testdb");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
