// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedInstanceKey. </summary>
    public partial class ManagedInstanceKeyMockTests : MockTestBase
    {
        public ManagedInstanceKeyMockTests(bool isAsync) : base(isAsync)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        public ManagedInstanceKeyMockTests() : this(false)
        {
        }

        private async Task<Sql.ManagedInstanceKeyCollection> GetManagedInstanceKeyCollectionAsync(string resourceGroupName, string managedInstanceName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ManagedInstanceCollection managedInstanceCollection = resourceGroup.GetManagedInstances();
            var managedInstanceOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(managedInstanceCollection, managedInstanceName);
            ManagedInstance managedInstance = managedInstanceOperation.Value;
            ManagedInstanceKeyCollection managedInstanceKeyCollection = managedInstance.GetManagedInstanceKeys();
            return managedInstanceKeyCollection;
        }

        private async Task<Sql.ManagedInstanceKey> GetManagedInstanceKeyAsync()
        {
            var collection = await GetManagedInstanceKeyCollectionAsync("sqlcrudtest-7398", "sqlcrudtest-4645");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "someVault_someKey_01234567890123456789012345678901");
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get the managed instance key
            var resource = await GetManagedInstanceKeyAsync();

            await resource.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete the managed instance key
            var resource = await GetManagedInstanceKeyAsync();

            await resource.DeleteAsync();
        }
    }
}
