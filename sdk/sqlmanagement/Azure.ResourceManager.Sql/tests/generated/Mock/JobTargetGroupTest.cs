// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for JobTargetGroup. </summary>
    public partial class JobTargetGroupMockTests : MockTestBase
    {
        public JobTargetGroupMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Sql.JobTargetGroupCollection> GetJobTargetGroupCollectionAsync(string resourceGroupName, string serverName, string jobAgentName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ServerCollection serverCollection = resourceGroup.GetServers();
            var serverOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(serverCollection, serverName);
            Server server = serverOperation.Value;
            JobAgentCollection jobAgentCollection = server.GetJobAgents();
            var jobAgentOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(jobAgentCollection, jobAgentName);
            JobAgent jobAgent = jobAgentOperation.Value;
            JobTargetGroupCollection jobTargetGroupCollection = jobAgent.GetJobTargetGroups();
            return jobTargetGroupCollection;
        }

        private async Task<Sql.JobTargetGroup> GetJobTargetGroupAsync()
        {
            var collection = await GetJobTargetGroupCollectionAsync("group1", "server1", "agent1");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "targetGroup1");
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a target group.
            var jobTargetGroup = await GetJobTargetGroupAsync();

            await jobTargetGroup.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete a target group.
            var jobTargetGroup = await GetJobTargetGroupAsync();

            await jobTargetGroup.DeleteAsync();
        }
    }
}
