// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for DatabaseVulnerabilityAssessment. </summary>
    public partial class ServerDatabaseVulnerabilityAssessmentMockTests : MockTestBase
    {
        public ServerDatabaseVulnerabilityAssessmentMockTests(bool isAsync) : base(isAsync)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        public ServerDatabaseVulnerabilityAssessmentMockTests() : this(false)
        {
        }

        private async Task<Sql.ServerDatabaseVulnerabilityAssessmentCollection> GetServerDatabaseVulnerabilityAssessmentCollectionAsync(string resourceGroupName, string serverName, string databaseName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ServerCollection serverCollection = resourceGroup.GetServers();
            var serverOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(serverCollection, serverName);
            Server server = serverOperation.Value;
            DatabaseCollection databaseCollection = server.GetDatabases();
            var databaseOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(databaseCollection, databaseName);
            Database database = databaseOperation.Value;
            ServerDatabaseVulnerabilityAssessmentCollection serverDatabaseVulnerabilityAssessmentCollection = database.GetServerDatabaseVulnerabilityAssessments();
            return serverDatabaseVulnerabilityAssessmentCollection;
        }

        private async Task<Sql.ServerDatabaseVulnerabilityAssessment> GetServerDatabaseVulnerabilityAssessmentAsync()
        {
            var collection = await GetServerDatabaseVulnerabilityAssessmentCollectionAsync("vulnerabilityaseessmenttest-4799", "vulnerabilityaseessmenttest-6440", "testdb");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection);
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a database's vulnerability assessment
            var resource = await GetServerDatabaseVulnerabilityAssessmentAsync();

            await resource.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Remove a database's vulnerability assessment
            var resource = await GetServerDatabaseVulnerabilityAssessmentAsync();

            await resource.DeleteAsync();
        }
    }
}
