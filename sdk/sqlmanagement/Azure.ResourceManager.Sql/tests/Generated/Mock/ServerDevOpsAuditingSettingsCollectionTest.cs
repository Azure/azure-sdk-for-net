// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ServerDevOpsAuditingSettings. </summary>
    public partial class ServerDevOpsAuditingSettingsCollectionMockTests : MockTestBase
    {
        public ServerDevOpsAuditingSettingsCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Sql.ServerDevOpsAuditingSettingsCollection> GetServerDevOpsAuditingSettingsCollectionAsync(string resourceGroupName, string serverName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            SqlServerCollection sqlServerCollection = resourceGroup.GetSqlServers();
            var sqlServerOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(sqlServerCollection, serverName);
            SqlServer sqlServer = sqlServerOperation.Value;
            ServerDevOpsAuditingSettingsCollection serverDevOpsAuditingSettingsCollection = sqlServer.GetServerDevOpsAuditingSettings();
            return serverDevOpsAuditingSettingsCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Update a server's DevOps audit settings with all params
            var collection = await GetServerDevOpsAuditingSettingsCollectionAsync("devAuditTestRG", "devOpsAuditTestSvr");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "default");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: Update a server's DevOps audit settings with minimal input
            var collection = await GetServerDevOpsAuditingSettingsCollectionAsync("devAuditTestRG", "devOpsAuditTestSvr");
            string devOpsAuditingSettingsName = "default";
            Sql.ServerDevOpsAuditingSettingsData parameters = new Sql.ServerDevOpsAuditingSettingsData()
            {
                State = Sql.Models.BlobAuditingPolicyState.Enabled,
                StorageEndpoint = "https://mystorage.blob.core.windows.net",
                StorageAccountAccessKey = "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==",
            };

            await collection.CreateOrUpdateAsync(devOpsAuditingSettingsName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a server's DevOps audit settings
            var collection = await GetServerDevOpsAuditingSettingsCollectionAsync("devAuditTestRG", "devOpsAuditTestSvr");
            await TestHelper.GetExampleInstanceAsync(collection, "default");
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List DevOps audit settings of a server
            var collection = await GetServerDevOpsAuditingSettingsCollectionAsync("devAuditTestRG", "devOpsAuditTestSvr");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
