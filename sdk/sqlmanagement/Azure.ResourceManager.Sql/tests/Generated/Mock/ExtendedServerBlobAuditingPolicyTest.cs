// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ExtendedServerBlobAuditingPolicy. </summary>
    public partial class ExtendedServerBlobAuditingPolicyMockTests : MockTestBase
    {
        public ExtendedServerBlobAuditingPolicyMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Sql.ExtendedServerBlobAuditingPolicyCollection> GetExtendedServerBlobAuditingPolicyCollectionAsync(string resourceGroupName, string serverName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            SqlServerCollection sqlServerCollection = resourceGroup.GetSqlServers();
            var sqlServerOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(sqlServerCollection, serverName);
            SqlServer sqlServer = sqlServerOperation.Value;
            ExtendedServerBlobAuditingPolicyCollection extendedServerBlobAuditingPolicyCollection = sqlServer.GetExtendedServerBlobAuditingPolicies();
            return extendedServerBlobAuditingPolicyCollection;
        }

        private async Task<Sql.ExtendedServerBlobAuditingPolicy> GetExtendedServerBlobAuditingPolicyAsync()
        {
            var collection = await GetExtendedServerBlobAuditingPolicyCollectionAsync("blobauditingtest-4799", "blobauditingtest-6440");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection);
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a server's blob extended auditing policy
            var extendedServerBlobAuditingPolicy = await GetExtendedServerBlobAuditingPolicyAsync();

            await extendedServerBlobAuditingPolicy.GetAsync();
        }
    }
}
