// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedDatabase. </summary>
    public partial class ManagedDatabaseCollectionMockTests : MockTestBase
    {
        public ManagedDatabaseCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Sql.ManagedDatabaseCollection> GetManagedDatabaseCollectionAsync(string resourceGroupName, string managedInstanceName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ManagedInstanceCollection managedInstanceCollection = resourceGroup.GetManagedInstances();
            var managedInstanceOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(managedInstanceCollection, managedInstanceName);
            ManagedInstance managedInstance = managedInstanceOperation.Value;
            ManagedDatabaseCollection managedDatabaseCollection = managedInstance.GetManagedDatabases();
            return managedDatabaseCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Creates a new managed database by restoring from an external backup
            var collection = await GetManagedDatabaseCollectionAsync("Default-SQL-SouthEastAsia", "managedInstance");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "managedDatabase");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: Creates a new managed database from restoring a geo-replicated backup
            var collection = await GetManagedDatabaseCollectionAsync("Default-SQL-SouthEastAsia", "server1");
            string databaseName = "testdb_recovered";
            Sql.ManagedDatabaseData parameters = new Sql.ManagedDatabaseData("southeastasia")
            {
                CreateMode = new Sql.Models.ManagedDatabaseCreateMode("Recovery"),
                RecoverableDatabaseId = "/subscriptions/11111111-2222-3333-4444-555555555555/resourceGroups/Default-SQL-WestEurope/providers/Microsoft.Sql/managedInstances/testsvr/recoverableDatabases/testdb",
            };

            await collection.CreateOrUpdateAsync(databaseName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync3()
        {
            // Example: Creates a new managed database from restoring a long term retention backup
            var collection = await GetManagedDatabaseCollectionAsync("Default-SQL-SouthEastAsia", "managedInstance");
            string databaseName = "managedDatabase";
            Sql.ManagedDatabaseData parameters = new Sql.ManagedDatabaseData("southeastasia")
            {
                Collation = "SQL_Latin1_General_CP1_CI_AS",
                CreateMode = new Sql.Models.ManagedDatabaseCreateMode("RestoreExternalBackup"),
                StorageContainerUri = "https://myaccountname.blob.core.windows.net/backups",
                StorageContainerSasToken = "sv=2015-12-11&sr=c&sp=rl&sig=1234",
            };

            await collection.CreateOrUpdateAsync(databaseName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync4()
        {
            // Example: Creates a new managed database using point in time restore
            var collection = await GetManagedDatabaseCollectionAsync("Default-SQL-SouthEastAsia", "managedInstance");
            string databaseName = "managedDatabase";
            Sql.ManagedDatabaseData parameters = new Sql.ManagedDatabaseData("southeastasia")
            {
                RestorePointInTime = DateTimeOffset.Parse("2017-07-14T05:35:31.503Z"),
                CreateMode = new Sql.Models.ManagedDatabaseCreateMode("PointInTimeRestore"),
                SourceDatabaseId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/managedInstances/testsvr/databases/testdb",
            };

            await collection.CreateOrUpdateAsync(databaseName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync5()
        {
            // Example: Creates a new managed database with maximal properties
            var collection = await GetManagedDatabaseCollectionAsync("Default-SQL-SouthEastAsia", "managedInstance");
            string databaseName = "managedDatabase";
            Sql.ManagedDatabaseData parameters = new Sql.ManagedDatabaseData("southeastasia")
            {
            };
            parameters.Tags.ReplaceWith(new System.Collections.Generic.Dictionary<string, string>() { { "tagKey1", "TagValue1" }, });
            await collection.CreateOrUpdateAsync(databaseName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync6()
        {
            // Example: Creates a new managed database with minimal properties
            var collection = await GetManagedDatabaseCollectionAsync("Default-SQL-SouthEastAsia", "managedInstance");
            string databaseName = "managedDatabase";
            Sql.ManagedDatabaseData parameters = new Sql.ManagedDatabaseData("southeastasia");

            await collection.CreateOrUpdateAsync(databaseName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Gets a managed database
            var collection = await GetManagedDatabaseCollectionAsync("Test1", "managedInstance");
            await TestHelper.GetExampleInstanceAsync(collection, "managedDatabase");
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List databases by managed instances
            var collection = await GetManagedDatabaseCollectionAsync("Test1", "managedInstance");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
