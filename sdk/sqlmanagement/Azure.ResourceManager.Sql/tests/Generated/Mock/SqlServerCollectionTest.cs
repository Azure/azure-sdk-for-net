// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for SqlServer. </summary>
    public partial class SqlServerCollectionMockTests : MockTestBase
    {
        public SqlServerCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Sql.SqlServerCollection> GetSqlServerCollectionAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            SqlServerCollection sqlServerCollection = resourceGroup.GetSqlServers();
            return sqlServerCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create server
            var collection = await GetSqlServerCollectionAsync("sqlcrudtest-7398");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "sqlcrudtest-4645");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get server
            var collection = await GetSqlServerCollectionAsync("sqlcrudtest-7398");
            await TestHelper.GetExampleInstanceAsync(collection, "sqlcrudtest-4645");
        }

        [RecordedTest]
        public async Task GetAsync2()
        {
            // Example: Get server with $expand=administrators
            var collection = await GetSqlServerCollectionAsync("sqlcrudtest-7398");
            string serverName = "sqlcrudtest-4645";
            string expand = null;

            await collection.GetAsync(serverName, expand);
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List servers by resource group
            var collection = await GetSqlServerCollectionAsync("sqlcrudtest-7398");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }

        [RecordedTest]
        public async Task GetAllAsync2()
        {
            // Example: List servers by resource group with $expand=administrators
            var collection = await GetSqlServerCollectionAsync("sqlcrudtest-7398");
            string expand = null;

            collection.GetAllAsync(expand);
        }
    }
}
