// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for JobStep. </summary>
    public partial class ServerJobAgentJobStepCollectionMockTests : MockTestBase
    {
        public ServerJobAgentJobStepCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Sql.ServerJobAgentJobStepCollection> GetServerJobAgentJobStepCollectionAsync(string resourceGroupName, string serverName, string jobAgentName, string jobName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            SqlServerCollection sqlServerCollection = resourceGroup.GetSqlServers();
            var sqlServerOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(sqlServerCollection, serverName);
            SqlServer sqlServer = sqlServerOperation.Value;
            JobAgentCollection jobAgentCollection = sqlServer.GetJobAgents();
            var jobAgentOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(jobAgentCollection, jobAgentName);
            JobAgent jobAgent = jobAgentOperation.Value;
            SqlJobCollection sqlJobCollection = jobAgent.GetSqlJobs();
            var sqlJobOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(sqlJobCollection, jobName);
            SqlJob sqlJob = sqlJobOperation.Value;
            ServerJobAgentJobStepCollection serverJobAgentJobStepCollection = sqlJob.GetServerJobAgentJobSteps();
            return serverJobAgentJobStepCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a job step with all properties specified.
            var collection = await GetServerJobAgentJobStepCollectionAsync("group1", "server1", "agent1", "job1");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "step1");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: Create or update a job step with minimal properties specified.
            var collection = await GetServerJobAgentJobStepCollectionAsync("group1", "server1", "agent1", "job1");
            string stepName = "step1";
            Sql.JobStepData parameters = new Sql.JobStepData()
            {
                TargetGroup = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/targetGroups/targetGroup0",
                Credential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/cred0",
                Action = new Sql.Models.JobStepAction("select 1"),
            };

            await collection.CreateOrUpdateAsync(stepName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get the latest version of a job step.
            var collection = await GetServerJobAgentJobStepCollectionAsync("group1", "server1", "agent1", "job1");
            await TestHelper.GetExampleInstanceAsync(collection, "step1");
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List job steps for the latest version of a job.
            var collection = await GetServerJobAgentJobStepCollectionAsync("group1", "server1", "agent1", "job1");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
