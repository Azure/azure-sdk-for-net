// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedServerSecurityAlertPolicy. </summary>
    public partial class ManagedServerSecurityAlertPolicyCollectionMockTests : MockTestBase
    {
        public ManagedServerSecurityAlertPolicyCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Sql.ManagedServerSecurityAlertPolicyCollection> GetManagedServerSecurityAlertPolicyCollectionAsync(string resourceGroupName, string managedInstanceName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            ManagedInstanceCollection managedInstanceCollection = resourceGroup.GetManagedInstances();
            var managedInstanceOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(managedInstanceCollection, managedInstanceName);
            ManagedInstance managedInstance = managedInstanceOperation.Value;
            ManagedServerSecurityAlertPolicyCollection managedServerSecurityAlertPolicyCollection = managedInstance.GetManagedServerSecurityAlertPolicies();
            return managedServerSecurityAlertPolicyCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Update a managed server's threat detection policy with all parameters
            var collection = await GetManagedServerSecurityAlertPolicyCollectionAsync("securityalert-4799", "securityalert-6440");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: Update a managed server's threat detection policy with minimal parameters
            var collection = await GetManagedServerSecurityAlertPolicyCollectionAsync("securityalert-4799", "securityalert-6440");
            Sql.Models.SecurityAlertPolicyName securityAlertPolicyName = new Sql.Models.SecurityAlertPolicyName("Default");
            Sql.ManagedServerSecurityAlertPolicyData parameters = new Sql.ManagedServerSecurityAlertPolicyData()
            {
                State = Sql.Models.SecurityAlertsPolicyState.Enabled,
            };

            await collection.CreateOrUpdateAsync(securityAlertPolicyName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a managed server's threat detection policy
            var collection = await GetManagedServerSecurityAlertPolicyCollectionAsync("securityalert-4799", "securityalert-6440");
            await TestHelper.GetExampleInstanceAsync(collection);
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: Get the managed server's threat detection policies
            var collection = await GetManagedServerSecurityAlertPolicyCollectionAsync("securityalert-4799", "securityalert-6440");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
