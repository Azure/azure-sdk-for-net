// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for InstancePool. </summary>
    public partial class InstancePoolCollectionMockTests : MockTestBase
    {
        public InstancePoolCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Sql.InstancePoolCollection> GetInstancePoolCollectionAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            InstancePoolCollection instancePoolCollection = resourceGroup.GetInstancePools();
            return instancePoolCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create an instance pool with all properties.
            var collection = await GetInstancePoolCollectionAsync("group1");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "testIP");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: Create an instance pool with min properties.
            var collection = await GetInstancePoolCollectionAsync("group1");
            string instancePoolName = "testIP";
            Sql.InstancePoolData parameters = new Sql.InstancePoolData("japaneast")
            {
                Sku = new Sql.Models.Sku("GP_Gen5")
                {
                    Tier = "GeneralPurpose",
                    Family = "Gen5",
                },
                SubnetId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Network/virtualNetworks/myvnet/subnets/mysubnet1",
                VCores = 8,
                LicenseType = new Sql.Models.InstancePoolLicenseType("LicenseIncluded"),
            };

            await collection.CreateOrUpdateAsync(instancePoolName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get an instance pool
            var collection = await GetInstancePoolCollectionAsync("group1");
            await TestHelper.GetExampleInstanceAsync(collection, "testIP");
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List instance pools by resource group
            var collection = await GetInstancePoolCollectionAsync("group1");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
