// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary>
    /// A class representing the VirtualCluster data model.
    /// An Azure SQL virtual cluster.
    /// </summary>
    public partial class VirtualClusterData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="VirtualClusterData"/>. </summary>
        /// <param name="location"> The location. </param>
        public VirtualClusterData(AzureLocation location) : base(location)
        {
            ChildResources = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="VirtualClusterData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="subnetId"> Subnet resource ID for the virtual cluster. </param>
        /// <param name="version"> Virtual cluster version. </param>
        /// <param name="childResources"> List of resources in this virtual cluster. </param>
        internal VirtualClusterData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ResourceIdentifier subnetId, string version, IReadOnlyList<string> childResources) : base(id, name, resourceType, systemData, tags, location)
        {
            SubnetId = subnetId;
            Version = version;
            ChildResources = childResources;
        }

        /// <summary> Subnet resource ID for the virtual cluster. </summary>
        public ResourceIdentifier SubnetId { get; }
        /// <summary> Virtual cluster version. </summary>
        public string Version { get; set; }
        /// <summary> List of resources in this virtual cluster. </summary>
        public IReadOnlyList<string> ChildResources { get; }
    }
}
