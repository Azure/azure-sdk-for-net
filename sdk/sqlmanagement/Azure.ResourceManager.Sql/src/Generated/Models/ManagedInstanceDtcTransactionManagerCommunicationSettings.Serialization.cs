// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    public partial class ManagedInstanceDtcTransactionManagerCommunicationSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AllowInboundEnabled))
            {
                writer.WritePropertyName("allowInboundEnabled");
                writer.WriteBooleanValue(AllowInboundEnabled.Value);
            }
            if (Optional.IsDefined(AllowOutboundEnabled))
            {
                writer.WritePropertyName("allowOutboundEnabled");
                writer.WriteBooleanValue(AllowOutboundEnabled.Value);
            }
            if (Optional.IsDefined(Authentication))
            {
                writer.WritePropertyName("authentication");
                writer.WriteStringValue(Authentication);
            }
            writer.WriteEndObject();
        }

        internal static ManagedInstanceDtcTransactionManagerCommunicationSettings DeserializeManagedInstanceDtcTransactionManagerCommunicationSettings(JsonElement element)
        {
            Optional<bool> allowInboundEnabled = default;
            Optional<bool> allowOutboundEnabled = default;
            Optional<string> authentication = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("allowInboundEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    allowInboundEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("allowOutboundEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    allowOutboundEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("authentication"))
                {
                    authentication = property.Value.GetString();
                    continue;
                }
            }
            return new ManagedInstanceDtcTransactionManagerCommunicationSettings(Optional.ToNullable(allowInboundEnabled), Optional.ToNullable(allowOutboundEnabled), authentication.Value);
        }
    }
}
