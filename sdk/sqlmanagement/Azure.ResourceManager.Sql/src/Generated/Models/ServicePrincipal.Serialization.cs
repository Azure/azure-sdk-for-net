// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    public partial class ServicePrincipal : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PrincipalType))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(PrincipalType.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static ServicePrincipal DeserializeServicePrincipal(JsonElement element)
        {
            Optional<string> principalId = default;
            Optional<string> clientId = default;
            Optional<string> tenantId = default;
            Optional<ServicePrincipalType> type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("principalId"))
                {
                    principalId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("clientId"))
                {
                    clientId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tenantId"))
                {
                    tenantId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    type = new ServicePrincipalType(property.Value.GetString());
                    continue;
                }
            }
            return new ServicePrincipal(principalId.Value, clientId.Value, tenantId.Value, Optional.ToNullable(type));
        }
    }
}
