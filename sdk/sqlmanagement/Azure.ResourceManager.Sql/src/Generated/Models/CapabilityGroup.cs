// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> The CapabilityGroup. </summary>
    public readonly partial struct CapabilityGroup : IEquatable<CapabilityGroup>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="CapabilityGroup"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CapabilityGroup(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SupportedEditionsValue = "supportedEditions";
        private const string SupportedElasticPoolEditionsValue = "supportedElasticPoolEditions";
        private const string SupportedManagedInstanceVersionsValue = "supportedManagedInstanceVersions";
        private const string SupportedInstancePoolEditionsValue = "supportedInstancePoolEditions";
        private const string SupportedManagedInstanceEditionsValue = "supportedManagedInstanceEditions";

        /// <summary> supportedEditions. </summary>
        public static CapabilityGroup SupportedEditions { get; } = new CapabilityGroup(SupportedEditionsValue);
        /// <summary> supportedElasticPoolEditions. </summary>
        public static CapabilityGroup SupportedElasticPoolEditions { get; } = new CapabilityGroup(SupportedElasticPoolEditionsValue);
        /// <summary> supportedManagedInstanceVersions. </summary>
        public static CapabilityGroup SupportedManagedInstanceVersions { get; } = new CapabilityGroup(SupportedManagedInstanceVersionsValue);
        /// <summary> supportedInstancePoolEditions. </summary>
        public static CapabilityGroup SupportedInstancePoolEditions { get; } = new CapabilityGroup(SupportedInstancePoolEditionsValue);
        /// <summary> supportedManagedInstanceEditions. </summary>
        public static CapabilityGroup SupportedManagedInstanceEditions { get; } = new CapabilityGroup(SupportedManagedInstanceEditionsValue);
        /// <summary> Determines if two <see cref="CapabilityGroup"/> values are the same. </summary>
        public static bool operator ==(CapabilityGroup left, CapabilityGroup right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CapabilityGroup"/> values are not the same. </summary>
        public static bool operator !=(CapabilityGroup left, CapabilityGroup right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CapabilityGroup"/>. </summary>
        public static implicit operator CapabilityGroup(string value) => new CapabilityGroup(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CapabilityGroup other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CapabilityGroup other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
