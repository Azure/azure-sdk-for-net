// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> A recoverable database. </summary>
    public partial class RecoverableDatabase : ProxyResource
    {
        /// <summary> Initializes a new instance of RecoverableDatabase. </summary>
        public RecoverableDatabase()
        {
        }

        /// <summary> Initializes a new instance of RecoverableDatabase. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="edition"> The edition of the database. </param>
        /// <param name="serviceLevelObjective"> The service level objective name of the database. </param>
        /// <param name="elasticPoolName"> The elastic pool name of the database. </param>
        /// <param name="lastAvailableBackupDate"> The last available backup date of the database (ISO8601 format). </param>
        internal RecoverableDatabase(string id, string name, string type, string edition, string serviceLevelObjective, string elasticPoolName, DateTimeOffset? lastAvailableBackupDate) : base(id, name, type)
        {
            Edition = edition;
            ServiceLevelObjective = serviceLevelObjective;
            ElasticPoolName = elasticPoolName;
            LastAvailableBackupDate = lastAvailableBackupDate;
        }

        /// <summary> The edition of the database. </summary>
        public string Edition { get; }
        /// <summary> The service level objective name of the database. </summary>
        public string ServiceLevelObjective { get; }
        /// <summary> The elastic pool name of the database. </summary>
        public string ElasticPoolName { get; }
        /// <summary> The last available backup date of the database (ISO8601 format). </summary>
        public DateTimeOffset? LastAvailableBackupDate { get; }
    }
}
