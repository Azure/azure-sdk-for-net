// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> An Azure SQL virtual cluster. </summary>
    public partial class VirtualCluster : TrackedResource
    {
        /// <summary> Initializes a new instance of VirtualCluster. </summary>
        /// <param name="location"> Resource location. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public VirtualCluster(string location) : base(location)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }

            ChildResources = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of VirtualCluster. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="subnetId"> Subnet resource ID for the virtual cluster. </param>
        /// <param name="family"> If the service has different generations of hardware, for the same SKU, then that can be captured here. </param>
        /// <param name="childResources"> List of resources in this virtual cluster. </param>
        internal VirtualCluster(string id, string name, string type, string location, IDictionary<string, string> tags, string subnetId, string family, IReadOnlyList<string> childResources) : base(id, name, type, location, tags)
        {
            SubnetId = subnetId;
            Family = family;
            ChildResources = childResources;
        }

        /// <summary> Subnet resource ID for the virtual cluster. </summary>
        public string SubnetId { get; }
        /// <summary> If the service has different generations of hardware, for the same SKU, then that can be captured here. </summary>
        public string Family { get; set; }
        /// <summary> List of resources in this virtual cluster. </summary>
        public IReadOnlyList<string> ChildResources { get; }
    }
}
