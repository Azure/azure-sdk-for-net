// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    public partial class AutomaticTuningOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DesiredState))
            {
                writer.WritePropertyName("desiredState");
                writer.WriteStringValue(DesiredState.Value.ToSerialString());
            }
            writer.WriteEndObject();
        }

        internal static AutomaticTuningOptions DeserializeAutomaticTuningOptions(JsonElement element)
        {
            Optional<AutomaticTuningOptionModeDesired> desiredState = default;
            Optional<AutomaticTuningOptionModeActual> actualState = default;
            Optional<int> reasonCode = default;
            Optional<AutomaticTuningDisabledReason> reasonDesc = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("desiredState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    desiredState = property.Value.GetString().ToAutomaticTuningOptionModeDesired();
                    continue;
                }
                if (property.NameEquals("actualState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    actualState = property.Value.GetString().ToAutomaticTuningOptionModeActual();
                    continue;
                }
                if (property.NameEquals("reasonCode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    reasonCode = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("reasonDesc"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    reasonDesc = property.Value.GetString().ToAutomaticTuningDisabledReason();
                    continue;
                }
            }
            return new AutomaticTuningOptions(Optional.ToNullable(desiredState), Optional.ToNullable(actualState), Optional.ToNullable(reasonCode), Optional.ToNullable(reasonDesc));
        }
    }
}
