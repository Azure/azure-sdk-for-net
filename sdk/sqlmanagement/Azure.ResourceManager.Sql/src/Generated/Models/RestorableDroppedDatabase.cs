// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> A restorable dropped database. </summary>
    public partial class RestorableDroppedDatabase : ProxyResource
    {
        /// <summary> Initializes a new instance of RestorableDroppedDatabase. </summary>
        public RestorableDroppedDatabase()
        {
        }

        /// <summary> Initializes a new instance of RestorableDroppedDatabase. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="databaseName"> The name of the database. </param>
        /// <param name="edition"> The edition of the database. </param>
        /// <param name="maxSizeBytes"> The max size in bytes of the database. </param>
        /// <param name="serviceLevelObjective"> The service level objective name of the database. </param>
        /// <param name="elasticPoolName"> The elastic pool name of the database. </param>
        /// <param name="creationDate"> The creation date of the database (ISO8601 format). </param>
        /// <param name="deletionDate"> The deletion date of the database (ISO8601 format). </param>
        /// <param name="earliestRestoreDate"> The earliest restore date of the database (ISO8601 format). </param>
        internal RestorableDroppedDatabase(string id, string name, string type, string location, string databaseName, string edition, string maxSizeBytes, string serviceLevelObjective, string elasticPoolName, DateTimeOffset? creationDate, DateTimeOffset? deletionDate, DateTimeOffset? earliestRestoreDate) : base(id, name, type)
        {
            Location = location;
            DatabaseName = databaseName;
            Edition = edition;
            MaxSizeBytes = maxSizeBytes;
            ServiceLevelObjective = serviceLevelObjective;
            ElasticPoolName = elasticPoolName;
            CreationDate = creationDate;
            DeletionDate = deletionDate;
            EarliestRestoreDate = earliestRestoreDate;
        }

        /// <summary> The geo-location where the resource lives. </summary>
        public string Location { get; }
        /// <summary> The name of the database. </summary>
        public string DatabaseName { get; }
        /// <summary> The edition of the database. </summary>
        public string Edition { get; }
        /// <summary> The max size in bytes of the database. </summary>
        public string MaxSizeBytes { get; }
        /// <summary> The service level objective name of the database. </summary>
        public string ServiceLevelObjective { get; }
        /// <summary> The elastic pool name of the database. </summary>
        public string ElasticPoolName { get; }
        /// <summary> The creation date of the database (ISO8601 format). </summary>
        public DateTimeOffset? CreationDate { get; }
        /// <summary> The deletion date of the database (ISO8601 format). </summary>
        public DateTimeOffset? DeletionDate { get; }
        /// <summary> The earliest restore date of the database (ISO8601 format). </summary>
        public DateTimeOffset? EarliestRestoreDate { get; }
    }
}
