// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> Represents a database recommended index. </summary>
    public partial class RecommendedIndex : Resource
    {
        /// <summary> Initializes a new instance of RecommendedIndex. </summary>
        public RecommendedIndex()
        {
            Columns = new ChangeTrackingList<string>();
            IncludedColumns = new ChangeTrackingList<string>();
            EstimatedImpact = new ChangeTrackingList<OperationImpact>();
            ReportedImpact = new ChangeTrackingList<OperationImpact>();
        }

        /// <summary> Initializes a new instance of RecommendedIndex. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="action"> The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance. </param>
        /// <param name="state"> The current recommendation state. </param>
        /// <param name="created"> The UTC datetime showing when this resource was created (ISO8601 format). </param>
        /// <param name="lastModified"> The UTC datetime of when was this resource last changed (ISO8601 format). </param>
        /// <param name="indexType"> The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE). </param>
        /// <param name="schema"> The schema where table to build index over resides. </param>
        /// <param name="table"> The table on which to build index. </param>
        /// <param name="columns"> Columns over which to build index. </param>
        /// <param name="includedColumns"> The list of column names to be included in the index. </param>
        /// <param name="indexScript"> The full build index script. </param>
        /// <param name="estimatedImpact"> The estimated impact of doing recommended index action. </param>
        /// <param name="reportedImpact"> The values reported after index action is complete. </param>
        internal RecommendedIndex(string id, string name, string type, RecommendedIndexAction? action, RecommendedIndexState? state, DateTimeOffset? created, DateTimeOffset? lastModified, RecommendedIndexType? indexType, string schema, string table, IReadOnlyList<string> columns, IReadOnlyList<string> includedColumns, string indexScript, IReadOnlyList<OperationImpact> estimatedImpact, IReadOnlyList<OperationImpact> reportedImpact) : base(id, name, type)
        {
            Action = action;
            State = state;
            Created = created;
            LastModified = lastModified;
            IndexType = indexType;
            Schema = schema;
            Table = table;
            Columns = columns;
            IncludedColumns = includedColumns;
            IndexScript = indexScript;
            EstimatedImpact = estimatedImpact;
            ReportedImpact = reportedImpact;
        }

        /// <summary> The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance. </summary>
        public RecommendedIndexAction? Action { get; }
        /// <summary> The current recommendation state. </summary>
        public RecommendedIndexState? State { get; }
        /// <summary> The UTC datetime showing when this resource was created (ISO8601 format). </summary>
        public DateTimeOffset? Created { get; }
        /// <summary> The UTC datetime of when was this resource last changed (ISO8601 format). </summary>
        public DateTimeOffset? LastModified { get; }
        /// <summary> The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE). </summary>
        public RecommendedIndexType? IndexType { get; }
        /// <summary> The schema where table to build index over resides. </summary>
        public string Schema { get; }
        /// <summary> The table on which to build index. </summary>
        public string Table { get; }
        /// <summary> Columns over which to build index. </summary>
        public IReadOnlyList<string> Columns { get; }
        /// <summary> The list of column names to be included in the index. </summary>
        public IReadOnlyList<string> IncludedColumns { get; }
        /// <summary> The full build index script. </summary>
        public string IndexScript { get; }
        /// <summary> The estimated impact of doing recommended index action. </summary>
        public IReadOnlyList<OperationImpact> EstimatedImpact { get; }
        /// <summary> The values reported after index action is complete. </summary>
        public IReadOnlyList<OperationImpact> ReportedImpact { get; }
    }
}
