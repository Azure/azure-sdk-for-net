// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> An Azure SQL Database sync group. </summary>
    public partial class SyncGroup : ProxyResource
    {
        /// <summary> Initializes a new instance of SyncGroup. </summary>
        public SyncGroup()
        {
        }

        /// <summary> Initializes a new instance of SyncGroup. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="interval"> Sync interval of the sync group. </param>
        /// <param name="lastSyncTime"> Last sync time of the sync group. </param>
        /// <param name="conflictResolutionPolicy"> Conflict resolution policy of the sync group. </param>
        /// <param name="syncDatabaseId"> ARM resource id of the sync database in the sync group. </param>
        /// <param name="hubDatabaseUserName"> User name for the sync group hub database credential. </param>
        /// <param name="hubDatabasePassword"> Password for the sync group hub database credential. </param>
        /// <param name="syncState"> Sync state of the sync group. </param>
        /// <param name="schema"> Sync schema of the sync group. </param>
        /// <param name="usePrivateLinkConnection"> If use private link connection is enabled. </param>
        internal SyncGroup(string id, string name, string type, int? interval, DateTimeOffset? lastSyncTime, SyncConflictResolutionPolicy? conflictResolutionPolicy, string syncDatabaseId, string hubDatabaseUserName, string hubDatabasePassword, SyncGroupState? syncState, SyncGroupSchema schema, bool? usePrivateLinkConnection) : base(id, name, type)
        {
            Interval = interval;
            LastSyncTime = lastSyncTime;
            ConflictResolutionPolicy = conflictResolutionPolicy;
            SyncDatabaseId = syncDatabaseId;
            HubDatabaseUserName = hubDatabaseUserName;
            HubDatabasePassword = hubDatabasePassword;
            SyncState = syncState;
            Schema = schema;
            UsePrivateLinkConnection = usePrivateLinkConnection;
        }

        /// <summary> Sync interval of the sync group. </summary>
        public int? Interval { get; set; }
        /// <summary> Last sync time of the sync group. </summary>
        public DateTimeOffset? LastSyncTime { get; }
        /// <summary> Conflict resolution policy of the sync group. </summary>
        public SyncConflictResolutionPolicy? ConflictResolutionPolicy { get; set; }
        /// <summary> ARM resource id of the sync database in the sync group. </summary>
        public string SyncDatabaseId { get; set; }
        /// <summary> User name for the sync group hub database credential. </summary>
        public string HubDatabaseUserName { get; set; }
        /// <summary> Password for the sync group hub database credential. </summary>
        public string HubDatabasePassword { get; set; }
        /// <summary> Sync state of the sync group. </summary>
        public SyncGroupState? SyncState { get; }
        /// <summary> Sync schema of the sync group. </summary>
        public SyncGroupSchema Schema { get; set; }
        /// <summary> If use private link connection is enabled. </summary>
        public bool? UsePrivateLinkConnection { get; set; }
    }
}
