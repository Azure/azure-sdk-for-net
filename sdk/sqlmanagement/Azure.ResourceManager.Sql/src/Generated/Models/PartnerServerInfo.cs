// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> Partner server information for the failover group. </summary>
    public partial class PartnerServerInfo
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="PartnerServerInfo"/>. </summary>
        /// <param name="id"> Resource identifier of the partner server. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        public PartnerServerInfo(ResourceIdentifier id)
        {
            Argument.AssertNotNull(id, nameof(id));

            Id = id;
        }

        /// <summary> Initializes a new instance of <see cref="PartnerServerInfo"/>. </summary>
        /// <param name="id"> Resource identifier of the partner server. </param>
        /// <param name="location"> Geo location of the partner server. </param>
        /// <param name="replicationRole"> Replication role of the partner server. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal PartnerServerInfo(ResourceIdentifier id, AzureLocation? location, FailoverGroupReplicationRole? replicationRole, Dictionary<string, BinaryData> rawData)
        {
            Id = id;
            Location = location;
            ReplicationRole = replicationRole;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="PartnerServerInfo"/> for deserialization. </summary>
        internal PartnerServerInfo()
        {
        }

        /// <summary> Resource identifier of the partner server. </summary>
        public ResourceIdentifier Id { get; set; }
        /// <summary> Geo location of the partner server. </summary>
        public AzureLocation? Location { get; }
        /// <summary> Replication role of the partner server. </summary>
        public FailoverGroupReplicationRole? ReplicationRole { get; }
    }
}
