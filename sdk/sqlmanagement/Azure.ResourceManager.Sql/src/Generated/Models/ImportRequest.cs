// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> Import database parameters. </summary>
    public partial class ImportRequest : ExportRequest
    {
        /// <summary> Initializes a new instance of ImportRequest. </summary>
        /// <param name="storageKeyType"> The type of the storage key to use. </param>
        /// <param name="storageKey"> The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a &quot;?.&quot;. </param>
        /// <param name="storageUri"> The storage uri to use. </param>
        /// <param name="administratorLogin"> The name of the SQL administrator. </param>
        /// <param name="administratorLoginPassword"> The password of the SQL administrator. </param>
        /// <param name="databaseName"> The name of the database to import. </param>
        /// <param name="edition">
        /// The edition for the database being created.
        /// 
        /// 
        /// 
        /// The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
        /// 
        /// 
        /// 
        /// ```azurecli
        /// 
        /// az sql db list-editions -l &lt;location&gt; -o table
        /// 
        /// ````
        /// 
        /// 
        /// 
        /// ```powershell
        /// 
        /// Get-AzSqlServerServiceObjective -Location &lt;location&gt;
        /// 
        /// ````
        /// 
        /// .
        /// </param>
        /// <param name="serviceObjectiveName"> The name of the service objective to assign to the database. </param>
        /// <param name="maxSizeBytes"> The maximum size for the newly imported database. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="storageKey"/>, <paramref name="storageUri"/>, <paramref name="administratorLogin"/>, <paramref name="administratorLoginPassword"/>, <paramref name="databaseName"/>, or <paramref name="maxSizeBytes"/> is null. </exception>
        public ImportRequest(StorageKeyType storageKeyType, string storageKey, string storageUri, string administratorLogin, string administratorLoginPassword, string databaseName, DatabaseEdition edition, ServiceObjectiveName serviceObjectiveName, string maxSizeBytes) : base(storageKeyType, storageKey, storageUri, administratorLogin, administratorLoginPassword)
        {
            if (storageKey == null)
            {
                throw new ArgumentNullException(nameof(storageKey));
            }
            if (storageUri == null)
            {
                throw new ArgumentNullException(nameof(storageUri));
            }
            if (administratorLogin == null)
            {
                throw new ArgumentNullException(nameof(administratorLogin));
            }
            if (administratorLoginPassword == null)
            {
                throw new ArgumentNullException(nameof(administratorLoginPassword));
            }
            if (databaseName == null)
            {
                throw new ArgumentNullException(nameof(databaseName));
            }
            if (maxSizeBytes == null)
            {
                throw new ArgumentNullException(nameof(maxSizeBytes));
            }

            DatabaseName = databaseName;
            Edition = edition;
            ServiceObjectiveName = serviceObjectiveName;
            MaxSizeBytes = maxSizeBytes;
        }

        /// <summary> The name of the database to import. </summary>
        public string DatabaseName { get; }
        /// <summary>
        /// The edition for the database being created.
        /// 
        /// 
        /// 
        /// The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
        /// 
        /// 
        /// 
        /// ```azurecli
        /// 
        /// az sql db list-editions -l &lt;location&gt; -o table
        /// 
        /// ````
        /// 
        /// 
        /// 
        /// ```powershell
        /// 
        /// Get-AzSqlServerServiceObjective -Location &lt;location&gt;
        /// 
        /// ````
        /// 
        /// .
        /// </summary>
        public DatabaseEdition Edition { get; }
        /// <summary> The name of the service objective to assign to the database. </summary>
        public ServiceObjectiveName ServiceObjectiveName { get; }
        /// <summary> The maximum size for the newly imported database. </summary>
        public string MaxSizeBytes { get; }
    }
}
