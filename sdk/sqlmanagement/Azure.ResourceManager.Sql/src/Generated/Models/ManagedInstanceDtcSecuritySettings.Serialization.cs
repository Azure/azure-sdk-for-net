// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    public partial class ManagedInstanceDtcSecuritySettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(TransactionManagerCommunicationSettings))
            {
                writer.WritePropertyName("transactionManagerCommunicationSettings");
                writer.WriteObjectValue(TransactionManagerCommunicationSettings);
            }
            if (Optional.IsDefined(IsXATransactionsEnabled))
            {
                writer.WritePropertyName("xaTransactionsEnabled");
                writer.WriteBooleanValue(IsXATransactionsEnabled.Value);
            }
            if (Optional.IsDefined(SnaLu6Point2TransactionsEnabled))
            {
                writer.WritePropertyName("snaLu6point2TransactionsEnabled");
                writer.WriteBooleanValue(SnaLu6Point2TransactionsEnabled.Value);
            }
            if (Optional.IsDefined(XATransactionsDefaultTimeoutInSeconds))
            {
                writer.WritePropertyName("xaTransactionsDefaultTimeout");
                writer.WriteNumberValue(XATransactionsDefaultTimeoutInSeconds.Value);
            }
            if (Optional.IsDefined(XATransactionsMaximumTimeoutInSeconds))
            {
                writer.WritePropertyName("xaTransactionsMaximumTimeout");
                writer.WriteNumberValue(XATransactionsMaximumTimeoutInSeconds.Value);
            }
            writer.WriteEndObject();
        }

        internal static ManagedInstanceDtcSecuritySettings DeserializeManagedInstanceDtcSecuritySettings(JsonElement element)
        {
            Optional<ManagedInstanceDtcTransactionManagerCommunicationSettings> transactionManagerCommunicationSettings = default;
            Optional<bool> xaTransactionsEnabled = default;
            Optional<bool> snaLu6point2TransactionsEnabled = default;
            Optional<int> xaTransactionsDefaultTimeout = default;
            Optional<int> xaTransactionsMaximumTimeout = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("transactionManagerCommunicationSettings"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    transactionManagerCommunicationSettings = ManagedInstanceDtcTransactionManagerCommunicationSettings.DeserializeManagedInstanceDtcTransactionManagerCommunicationSettings(property.Value);
                    continue;
                }
                if (property.NameEquals("xaTransactionsEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    xaTransactionsEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("snaLu6point2TransactionsEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    snaLu6point2TransactionsEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("xaTransactionsDefaultTimeout"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    xaTransactionsDefaultTimeout = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("xaTransactionsMaximumTimeout"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    xaTransactionsMaximumTimeout = property.Value.GetInt32();
                    continue;
                }
            }
            return new ManagedInstanceDtcSecuritySettings(transactionManagerCommunicationSettings.Value, Optional.ToNullable(xaTransactionsEnabled), Optional.ToNullable(snaLu6point2TransactionsEnabled), Optional.ToNullable(xaTransactionsDefaultTimeout), Optional.ToNullable(xaTransactionsMaximumTimeout));
        }
    }
}
