// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> A restorable dropped managed database resource. </summary>
    public partial class RestorableDroppedManagedDatabase : TrackedResource
    {
        /// <summary> Initializes a new instance of RestorableDroppedManagedDatabase. </summary>
        /// <param name="location"> Resource location. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public RestorableDroppedManagedDatabase(string location) : base(location)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }
        }

        /// <summary> Initializes a new instance of RestorableDroppedManagedDatabase. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="databaseName"> The name of the database. </param>
        /// <param name="creationDate"> The creation date of the database (ISO8601 format). </param>
        /// <param name="deletionDate"> The deletion date of the database (ISO8601 format). </param>
        /// <param name="earliestRestoreDate"> The earliest restore date of the database (ISO8601 format). </param>
        internal RestorableDroppedManagedDatabase(string id, string name, string type, string location, IDictionary<string, string> tags, string databaseName, DateTimeOffset? creationDate, DateTimeOffset? deletionDate, DateTimeOffset? earliestRestoreDate) : base(id, name, type, location, tags)
        {
            DatabaseName = databaseName;
            CreationDate = creationDate;
            DeletionDate = deletionDate;
            EarliestRestoreDate = earliestRestoreDate;
        }

        /// <summary> The name of the database. </summary>
        public string DatabaseName { get; }
        /// <summary> The creation date of the database (ISO8601 format). </summary>
        public DateTimeOffset? CreationDate { get; }
        /// <summary> The deletion date of the database (ISO8601 format). </summary>
        public DateTimeOffset? DeletionDate { get; }
        /// <summary> The earliest restore date of the database (ISO8601 format). </summary>
        public DateTimeOffset? EarliestRestoreDate { get; }
    }
}
