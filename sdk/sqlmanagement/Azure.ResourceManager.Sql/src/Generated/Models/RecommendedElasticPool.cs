// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> Represents a recommended elastic pool. </summary>
    public partial class RecommendedElasticPool : ProxyResource
    {
        /// <summary> Initializes a new instance of RecommendedElasticPool. </summary>
        public RecommendedElasticPool()
        {
            Databases = new ChangeTrackingList<TrackedResource>();
            Metrics = new ChangeTrackingList<RecommendedElasticPoolMetric>();
        }

        /// <summary> Initializes a new instance of RecommendedElasticPool. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="databaseEdition"> The edition of the recommended elastic pool. The ElasticPoolEdition enumeration contains all the valid editions. </param>
        /// <param name="dtu"> The DTU for the recommended elastic pool. </param>
        /// <param name="databaseDtuMin"> The minimum DTU for the database. </param>
        /// <param name="databaseDtuMax"> The maximum DTU for the database. </param>
        /// <param name="storageMB"> Gets storage size in megabytes. </param>
        /// <param name="observationPeriodStart"> The observation period start (ISO8601 format). </param>
        /// <param name="observationPeriodEnd"> The observation period start (ISO8601 format). </param>
        /// <param name="maxObservedDtu"> Gets maximum observed DTU. </param>
        /// <param name="maxObservedStorageMB"> Gets maximum observed storage in megabytes. </param>
        /// <param name="databases"> The list of databases in this pool. Expanded property. </param>
        /// <param name="metrics"> The list of databases housed in the server. Expanded property. </param>
        internal RecommendedElasticPool(string id, string name, string type, ElasticPoolEdition? databaseEdition, double? dtu, double? databaseDtuMin, double? databaseDtuMax, double? storageMB, DateTimeOffset? observationPeriodStart, DateTimeOffset? observationPeriodEnd, double? maxObservedDtu, double? maxObservedStorageMB, IReadOnlyList<TrackedResource> databases, IReadOnlyList<RecommendedElasticPoolMetric> metrics) : base(id, name, type)
        {
            DatabaseEdition = databaseEdition;
            Dtu = dtu;
            DatabaseDtuMin = databaseDtuMin;
            DatabaseDtuMax = databaseDtuMax;
            StorageMB = storageMB;
            ObservationPeriodStart = observationPeriodStart;
            ObservationPeriodEnd = observationPeriodEnd;
            MaxObservedDtu = maxObservedDtu;
            MaxObservedStorageMB = maxObservedStorageMB;
            Databases = databases;
            Metrics = metrics;
        }

        /// <summary> The edition of the recommended elastic pool. The ElasticPoolEdition enumeration contains all the valid editions. </summary>
        public ElasticPoolEdition? DatabaseEdition { get; }
        /// <summary> The DTU for the recommended elastic pool. </summary>
        public double? Dtu { get; set; }
        /// <summary> The minimum DTU for the database. </summary>
        public double? DatabaseDtuMin { get; set; }
        /// <summary> The maximum DTU for the database. </summary>
        public double? DatabaseDtuMax { get; set; }
        /// <summary> Gets storage size in megabytes. </summary>
        public double? StorageMB { get; set; }
        /// <summary> The observation period start (ISO8601 format). </summary>
        public DateTimeOffset? ObservationPeriodStart { get; }
        /// <summary> The observation period start (ISO8601 format). </summary>
        public DateTimeOffset? ObservationPeriodEnd { get; }
        /// <summary> Gets maximum observed DTU. </summary>
        public double? MaxObservedDtu { get; }
        /// <summary> Gets maximum observed storage in megabytes. </summary>
        public double? MaxObservedStorageMB { get; }
        /// <summary> The list of databases in this pool. Expanded property. </summary>
        public IReadOnlyList<TrackedResource> Databases { get; }
        /// <summary> The list of databases housed in the server. Expanded property. </summary>
        public IReadOnlyList<RecommendedElasticPoolMetric> Metrics { get; }
    }
}
