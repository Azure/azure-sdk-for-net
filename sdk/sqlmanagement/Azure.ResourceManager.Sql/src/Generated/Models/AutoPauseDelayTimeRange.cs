// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> Supported auto pause delay time range. </summary>
    public partial class AutoPauseDelayTimeRange
    {
        /// <summary> Initializes a new instance of AutoPauseDelayTimeRange. </summary>
        internal AutoPauseDelayTimeRange()
        {
        }

        /// <summary> Initializes a new instance of AutoPauseDelayTimeRange. </summary>
        /// <param name="minValue"> Minimum value. </param>
        /// <param name="maxValue"> Maximum value. </param>
        /// <param name="stepSize"> Step value for discrete values between the minimum value and the maximum value. </param>
        /// <param name="default"> Default value is no value is provided. </param>
        /// <param name="unit"> Unit of time that delay is expressed in. </param>
        /// <param name="doNotPauseValue"> Value that is used to not pause (infinite delay before pause). </param>
        internal AutoPauseDelayTimeRange(int? minValue, int? maxValue, int? stepSize, int? @default, PauseDelayTimeUnit? unit, int? doNotPauseValue)
        {
            MinValue = minValue;
            MaxValue = maxValue;
            StepSize = stepSize;
            Default = @default;
            Unit = unit;
            DoNotPauseValue = doNotPauseValue;
        }

        /// <summary> Minimum value. </summary>
        public int? MinValue { get; }
        /// <summary> Maximum value. </summary>
        public int? MaxValue { get; }
        /// <summary> Step value for discrete values between the minimum value and the maximum value. </summary>
        public int? StepSize { get; }
        /// <summary> Default value is no value is provided. </summary>
        public int? Default { get; }
        /// <summary> Unit of time that delay is expressed in. </summary>
        public PauseDelayTimeUnit? Unit { get; }
        /// <summary> Value that is used to not pause (infinite delay before pause). </summary>
        public int? DoNotPauseValue { get; }
    }
}
