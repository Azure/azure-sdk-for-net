// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> The UpsertManagedServerOperationParameters. </summary>
    public partial class UpsertManagedServerOperationParameters
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="UpsertManagedServerOperationParameters"/>. </summary>
        internal UpsertManagedServerOperationParameters()
        {
        }

        /// <summary> Initializes a new instance of <see cref="UpsertManagedServerOperationParameters"/>. </summary>
        /// <param name="family"></param>
        /// <param name="tier"></param>
        /// <param name="vCores"></param>
        /// <param name="storageSizeInGB"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal UpsertManagedServerOperationParameters(string family, string tier, int? vCores, int? storageSizeInGB, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Family = family;
            Tier = tier;
            VCores = vCores;
            StorageSizeInGB = storageSizeInGB;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets the family. </summary>
        public string Family { get; }
        /// <summary> Gets the tier. </summary>
        public string Tier { get; }
        /// <summary> Gets the v cores. </summary>
        public int? VCores { get; }
        /// <summary> Gets the storage size in gb. </summary>
        public int? StorageSizeInGB { get; }
    }
}
