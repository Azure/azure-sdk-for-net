// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> A failover group. </summary>
    public partial class FailoverGroup : ProxyResource
    {
        /// <summary> Initializes a new instance of FailoverGroup. </summary>
        public FailoverGroup()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
            PartnerServers = new ChangeTrackingList<PartnerInfo>();
            Databases = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of FailoverGroup. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="readWriteEndpoint"> Read-write endpoint of the failover group instance. </param>
        /// <param name="readOnlyEndpoint"> Read-only endpoint of the failover group instance. </param>
        /// <param name="replicationRole"> Local replication role of the failover group instance. </param>
        /// <param name="replicationState"> Replication state of the failover group instance. </param>
        /// <param name="partnerServers"> List of partner server information for the failover group. </param>
        /// <param name="databases"> List of databases in the failover group. </param>
        internal FailoverGroup(string id, string name, string type, string location, IDictionary<string, string> tags, FailoverGroupReadWriteEndpoint readWriteEndpoint, FailoverGroupReadOnlyEndpoint readOnlyEndpoint, FailoverGroupReplicationRole? replicationRole, string replicationState, IList<PartnerInfo> partnerServers, IList<string> databases) : base(id, name, type)
        {
            Location = location;
            Tags = tags;
            ReadWriteEndpoint = readWriteEndpoint;
            ReadOnlyEndpoint = readOnlyEndpoint;
            ReplicationRole = replicationRole;
            ReplicationState = replicationState;
            PartnerServers = partnerServers;
            Databases = databases;
        }

        /// <summary> Resource location. </summary>
        public string Location { get; }
        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> Read-write endpoint of the failover group instance. </summary>
        public FailoverGroupReadWriteEndpoint ReadWriteEndpoint { get; set; }
        /// <summary> Read-only endpoint of the failover group instance. </summary>
        public FailoverGroupReadOnlyEndpoint ReadOnlyEndpoint { get; set; }
        /// <summary> Local replication role of the failover group instance. </summary>
        public FailoverGroupReplicationRole? ReplicationRole { get; }
        /// <summary> Replication state of the failover group instance. </summary>
        public string ReplicationState { get; }
        /// <summary> List of partner server information for the failover group. </summary>
        public IList<PartnerInfo> PartnerServers { get; }
        /// <summary> List of databases in the failover group. </summary>
        public IList<string> Databases { get; }
    }
}
