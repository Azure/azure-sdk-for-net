// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> Represents a database replication link. </summary>
    public partial class ReplicationLink : Resource
    {
        /// <summary> Initializes a new instance of ReplicationLink. </summary>
        public ReplicationLink()
        {
        }

        /// <summary> Initializes a new instance of ReplicationLink. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Location of the server that contains this firewall rule. </param>
        /// <param name="isTerminationAllowed"> Legacy value indicating whether termination is allowed.  Currently always returns true. </param>
        /// <param name="replicationMode"> Replication mode of this replication link. </param>
        /// <param name="partnerServer"> The name of the server hosting the partner database. </param>
        /// <param name="partnerDatabase"> The name of the partner database. </param>
        /// <param name="partnerLocation"> The Azure Region of the partner database. </param>
        /// <param name="role"> The role of the database in the replication link. </param>
        /// <param name="partnerRole"> The role of the partner database in the replication link. </param>
        /// <param name="startTime"> The start time for the replication link. </param>
        /// <param name="percentComplete"> The percentage of seeding complete for the replication link. </param>
        /// <param name="replicationState"> The replication state for the replication link. </param>
        internal ReplicationLink(string id, string name, string type, string location, bool? isTerminationAllowed, string replicationMode, string partnerServer, string partnerDatabase, string partnerLocation, ReplicationRole? role, ReplicationRole? partnerRole, DateTimeOffset? startTime, int? percentComplete, ReplicationState? replicationState) : base(id, name, type)
        {
            Location = location;
            IsTerminationAllowed = isTerminationAllowed;
            ReplicationMode = replicationMode;
            PartnerServer = partnerServer;
            PartnerDatabase = partnerDatabase;
            PartnerLocation = partnerLocation;
            Role = role;
            PartnerRole = partnerRole;
            StartTime = startTime;
            PercentComplete = percentComplete;
            ReplicationState = replicationState;
        }

        /// <summary> Location of the server that contains this firewall rule. </summary>
        public string Location { get; }
        /// <summary> Legacy value indicating whether termination is allowed.  Currently always returns true. </summary>
        public bool? IsTerminationAllowed { get; }
        /// <summary> Replication mode of this replication link. </summary>
        public string ReplicationMode { get; }
        /// <summary> The name of the server hosting the partner database. </summary>
        public string PartnerServer { get; }
        /// <summary> The name of the partner database. </summary>
        public string PartnerDatabase { get; }
        /// <summary> The Azure Region of the partner database. </summary>
        public string PartnerLocation { get; }
        /// <summary> The role of the database in the replication link. </summary>
        public ReplicationRole? Role { get; }
        /// <summary> The role of the partner database in the replication link. </summary>
        public ReplicationRole? PartnerRole { get; }
        /// <summary> The start time for the replication link. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> The percentage of seeding complete for the replication link. </summary>
        public int? PercentComplete { get; }
        /// <summary> The replication state for the replication link. </summary>
        public ReplicationState? ReplicationState { get; }
    }
}
