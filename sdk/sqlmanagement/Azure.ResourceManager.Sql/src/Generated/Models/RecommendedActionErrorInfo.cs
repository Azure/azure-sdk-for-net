// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary> Contains error information for an Azure SQL Database, Server or Elastic Pool Recommended Action. </summary>
    public partial class RecommendedActionErrorInfo
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="RecommendedActionErrorInfo"/>. </summary>
        internal RecommendedActionErrorInfo()
        {
        }

        /// <summary> Initializes a new instance of <see cref="RecommendedActionErrorInfo"/>. </summary>
        /// <param name="errorCode"> Gets the reason why the recommended action was put to error state. e.g., DatabaseHasQdsOff, IndexAlreadyExists. </param>
        /// <param name="isRetryable"> Gets whether the error could be ignored and recommended action could be retried. Possible values are: Yes/No. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal RecommendedActionErrorInfo(string errorCode, ActionRetryableState? isRetryable, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ErrorCode = errorCode;
            IsRetryable = isRetryable;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets the reason why the recommended action was put to error state. e.g., DatabaseHasQdsOff, IndexAlreadyExists. </summary>
        public string ErrorCode { get; }
        /// <summary> Gets whether the error could be ignored and recommended action could be retried. Possible values are: Yes/No. </summary>
        public ActionRetryableState? IsRetryable { get; }
    }
}
