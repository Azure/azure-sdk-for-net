// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Sql.Models
{
    /// <summary>
    /// Specifies the mode of database creation.
    /// 
    /// 
    /// 
    /// Default: regular database creation.
    /// 
    /// 
    /// 
    /// Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.
    /// 
    /// 
    /// 
    /// Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.
    /// 
    /// 
    /// 
    /// PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.
    /// 
    /// 
    /// 
    /// Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.
    /// 
    /// 
    /// 
    /// Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database&apos;s original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.
    /// 
    /// 
    /// 
    /// RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.
    /// 
    /// 
    /// 
    /// Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.
    /// </summary>
    public readonly partial struct CreateMode : IEquatable<CreateMode>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="CreateMode"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CreateMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DefaultValue = "Default";
        private const string CopyValue = "Copy";
        private const string SecondaryValue = "Secondary";
        private const string PointInTimeRestoreValue = "PointInTimeRestore";
        private const string RestoreValue = "Restore";
        private const string RecoveryValue = "Recovery";
        private const string RestoreExternalBackupValue = "RestoreExternalBackup";
        private const string RestoreExternalBackupSecondaryValue = "RestoreExternalBackupSecondary";
        private const string RestoreLongTermRetentionBackupValue = "RestoreLongTermRetentionBackup";
        private const string OnlineSecondaryValue = "OnlineSecondary";

        /// <summary> Default. </summary>
        public static CreateMode Default { get; } = new CreateMode(DefaultValue);
        /// <summary> Copy. </summary>
        public static CreateMode Copy { get; } = new CreateMode(CopyValue);
        /// <summary> Secondary. </summary>
        public static CreateMode Secondary { get; } = new CreateMode(SecondaryValue);
        /// <summary> PointInTimeRestore. </summary>
        public static CreateMode PointInTimeRestore { get; } = new CreateMode(PointInTimeRestoreValue);
        /// <summary> Restore. </summary>
        public static CreateMode Restore { get; } = new CreateMode(RestoreValue);
        /// <summary> Recovery. </summary>
        public static CreateMode Recovery { get; } = new CreateMode(RecoveryValue);
        /// <summary> RestoreExternalBackup. </summary>
        public static CreateMode RestoreExternalBackup { get; } = new CreateMode(RestoreExternalBackupValue);
        /// <summary> RestoreExternalBackupSecondary. </summary>
        public static CreateMode RestoreExternalBackupSecondary { get; } = new CreateMode(RestoreExternalBackupSecondaryValue);
        /// <summary> RestoreLongTermRetentionBackup. </summary>
        public static CreateMode RestoreLongTermRetentionBackup { get; } = new CreateMode(RestoreLongTermRetentionBackupValue);
        /// <summary> OnlineSecondary. </summary>
        public static CreateMode OnlineSecondary { get; } = new CreateMode(OnlineSecondaryValue);
        /// <summary> Determines if two <see cref="CreateMode"/> values are the same. </summary>
        public static bool operator ==(CreateMode left, CreateMode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CreateMode"/> values are not the same. </summary>
        public static bool operator !=(CreateMode left, CreateMode right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CreateMode"/>. </summary>
        public static implicit operator CreateMode(string value) => new CreateMode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CreateMode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CreateMode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
