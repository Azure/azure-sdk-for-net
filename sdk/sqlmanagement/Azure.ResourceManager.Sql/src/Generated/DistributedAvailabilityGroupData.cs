// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary>
    /// A class representing the DistributedAvailabilityGroup data model.
    /// Distributed availability group between box and Sql Managed Instance.
    /// </summary>
    public partial class DistributedAvailabilityGroupData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DistributedAvailabilityGroupData"/>. </summary>
        public DistributedAvailabilityGroupData()
        {
            Databases = new ChangeTrackingList<DistributedAvailabilityGroupDatabase>();
        }

        /// <summary> Initializes a new instance of <see cref="DistributedAvailabilityGroupData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="distributedAvailabilityGroupName"> Name of the distributed availability group. </param>
        /// <param name="distributedAvailabilityGroupId"> ID of the distributed availability group. </param>
        /// <param name="replicationMode"> Replication mode of the link. </param>
        /// <param name="partnerLinkRole"> SQL server side link role. </param>
        /// <param name="partnerAvailabilityGroupName"> SQL server side availability group name. </param>
        /// <param name="partnerEndpoint"> SQL server side endpoint - IP or DNS resolvable name. </param>
        /// <param name="instanceLinkRole"> Managed instance side link role. </param>
        /// <param name="instanceAvailabilityGroupName"> Managed instance side availability group name. </param>
        /// <param name="failoverMode"> The link failover mode - can be Manual if intended to be used for two-way failover with a supported SQL Server, or None for one-way failover to Azure. </param>
        /// <param name="seedingMode"> Database seeding mode – can be Automatic (default), or Manual for supported scenarios. </param>
        /// <param name="databases"> Databases in the distributed availability group. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DistributedAvailabilityGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string distributedAvailabilityGroupName, Guid? distributedAvailabilityGroupId, ReplicationModeType? replicationMode, LinkRole? partnerLinkRole, string partnerAvailabilityGroupName, string partnerEndpoint, LinkRole? instanceLinkRole, string instanceAvailabilityGroupName, FailoverModeType? failoverMode, SeedingModeType? seedingMode, IList<DistributedAvailabilityGroupDatabase> databases, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            DistributedAvailabilityGroupName = distributedAvailabilityGroupName;
            DistributedAvailabilityGroupId = distributedAvailabilityGroupId;
            ReplicationMode = replicationMode;
            PartnerLinkRole = partnerLinkRole;
            PartnerAvailabilityGroupName = partnerAvailabilityGroupName;
            PartnerEndpoint = partnerEndpoint;
            InstanceLinkRole = instanceLinkRole;
            InstanceAvailabilityGroupName = instanceAvailabilityGroupName;
            FailoverMode = failoverMode;
            SeedingMode = seedingMode;
            Databases = databases;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Name of the distributed availability group. </summary>
        [WirePath("properties.distributedAvailabilityGroupName")]
        public string DistributedAvailabilityGroupName { get; }
        /// <summary> ID of the distributed availability group. </summary>
        [WirePath("properties.distributedAvailabilityGroupId")]
        public Guid? DistributedAvailabilityGroupId { get; }
        /// <summary> Replication mode of the link. </summary>
        [WirePath("properties.replicationMode")]
        public ReplicationModeType? ReplicationMode { get; set; }
        /// <summary> SQL server side link role. </summary>
        [WirePath("properties.partnerLinkRole")]
        public LinkRole? PartnerLinkRole { get; }
        /// <summary> SQL server side availability group name. </summary>
        [WirePath("properties.partnerAvailabilityGroupName")]
        public string PartnerAvailabilityGroupName { get; set; }
        /// <summary> SQL server side endpoint - IP or DNS resolvable name. </summary>
        [WirePath("properties.partnerEndpoint")]
        public string PartnerEndpoint { get; set; }
        /// <summary> Managed instance side link role. </summary>
        [WirePath("properties.instanceLinkRole")]
        public LinkRole? InstanceLinkRole { get; set; }
        /// <summary> Managed instance side availability group name. </summary>
        [WirePath("properties.instanceAvailabilityGroupName")]
        public string InstanceAvailabilityGroupName { get; set; }
        /// <summary> The link failover mode - can be Manual if intended to be used for two-way failover with a supported SQL Server, or None for one-way failover to Azure. </summary>
        [WirePath("properties.failoverMode")]
        public FailoverModeType? FailoverMode { get; set; }
        /// <summary> Database seeding mode – can be Automatic (default), or Manual for supported scenarios. </summary>
        [WirePath("properties.seedingMode")]
        public SeedingModeType? SeedingMode { get; set; }
        /// <summary> Databases in the distributed availability group. </summary>
        [WirePath("properties.databases")]
        public IList<DistributedAvailabilityGroupDatabase> Databases { get; }
    }
}
