// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary> A class representing the VulnerabilityAssessmentScanRecord data model. </summary>
    public partial class VulnerabilityAssessmentScanRecordData : Resource
    {
        /// <summary> Initializes a new instance of VulnerabilityAssessmentScanRecordData. </summary>
        public VulnerabilityAssessmentScanRecordData()
        {
            Errors = new ChangeTrackingList<VulnerabilityAssessmentScanError>();
        }

        /// <summary> Initializes a new instance of VulnerabilityAssessmentScanRecordData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="scanId"> The scan ID. </param>
        /// <param name="triggerType"> The scan trigger type. </param>
        /// <param name="state"> The scan status. </param>
        /// <param name="startTime"> The scan start time (UTC). </param>
        /// <param name="endTime"> The scan end time (UTC). </param>
        /// <param name="errors"> The scan errors. </param>
        /// <param name="storageContainerPath"> The scan results storage container path. </param>
        /// <param name="numberOfFailedSecurityChecks"> The number of failed security checks. </param>
        internal VulnerabilityAssessmentScanRecordData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string scanId, VulnerabilityAssessmentScanTriggerType? triggerType, VulnerabilityAssessmentScanState? state, DateTimeOffset? startTime, DateTimeOffset? endTime, IReadOnlyList<VulnerabilityAssessmentScanError> errors, string storageContainerPath, int? numberOfFailedSecurityChecks) : base(id, name, type, systemData)
        {
            ScanId = scanId;
            TriggerType = triggerType;
            State = state;
            StartTime = startTime;
            EndTime = endTime;
            Errors = errors;
            StorageContainerPath = storageContainerPath;
            NumberOfFailedSecurityChecks = numberOfFailedSecurityChecks;
        }

        /// <summary> The scan ID. </summary>
        public string ScanId { get; }
        /// <summary> The scan trigger type. </summary>
        public VulnerabilityAssessmentScanTriggerType? TriggerType { get; }
        /// <summary> The scan status. </summary>
        public VulnerabilityAssessmentScanState? State { get; }
        /// <summary> The scan start time (UTC). </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> The scan end time (UTC). </summary>
        public DateTimeOffset? EndTime { get; }
        /// <summary> The scan errors. </summary>
        public IReadOnlyList<VulnerabilityAssessmentScanError> Errors { get; }
        /// <summary> The scan results storage container path. </summary>
        public string StorageContainerPath { get; }
        /// <summary> The number of failed security checks. </summary>
        public int? NumberOfFailedSecurityChecks { get; }
    }
}
