// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary> A class representing the ManagedDatabaseRestoreDetail data model. </summary>
    public partial class ManagedDatabaseRestoreDetailData : ResourceData
    {
        /// <summary> Initializes a new instance of ManagedDatabaseRestoreDetailData. </summary>
        public ManagedDatabaseRestoreDetailData()
        {
            FullBackupSets = new ChangeTrackingList<ManagedDatabaseRestoreDetailsBackupSetProperties>();
            DiffBackupSets = new ChangeTrackingList<ManagedDatabaseRestoreDetailsBackupSetProperties>();
            LogBackupSets = new ChangeTrackingList<ManagedDatabaseRestoreDetailsBackupSetProperties>();
            UnrestorableFileList = new ChangeTrackingList<ManagedDatabaseRestoreDetailsUnrestorableFileProperties>();
        }

        /// <summary> Initializes a new instance of ManagedDatabaseRestoreDetailData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="typePropertiesType"> Restore type. </param>
        /// <param name="status"> Restore status. </param>
        /// <param name="blockReason"> The reason why restore is in Blocked state. </param>
        /// <param name="lastUploadedFileName"> Last uploaded file name. </param>
        /// <param name="lastUploadedFileOn"> Last uploaded file time. </param>
        /// <param name="lastRestoredFileName"> Last restored file name. </param>
        /// <param name="lastRestoredFileOn"> Last restored file time. </param>
        /// <param name="completedPercent"> Percent completed. </param>
        /// <param name="currentRestoredSizeMB"> Current restored size MB. </param>
        /// <param name="currentRestorePlanSizeMB"> Current restore plan size MB. </param>
        /// <param name="currentBackupType"> Current backup type. </param>
        /// <param name="currentRestoringFileName"> Current restoring file name. </param>
        /// <param name="numberOfFilesFound"> Number of files detected. </param>
        /// <param name="numberOfFilesQueued"> Number of files queued. </param>
        /// <param name="numberOfFilesSkipped"> Number of files skipped. </param>
        /// <param name="numberOfFilesRestoring"> Number of files restoring. </param>
        /// <param name="numberOfFilesRestored"> Number of files restored. </param>
        /// <param name="numberOfFilesUnrestorable"> Number of files unrestorable. </param>
        /// <param name="fullBackupSets"> Full backup sets. </param>
        /// <param name="diffBackupSets"> Diff backup sets. </param>
        /// <param name="logBackupSets"> Log backup sets. </param>
        /// <param name="unrestorableFileList"> Unrestorable files. </param>
        internal ManagedDatabaseRestoreDetailData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string typePropertiesType, string status, string blockReason, string lastUploadedFileName, DateTimeOffset? lastUploadedFileOn, string lastRestoredFileName, DateTimeOffset? lastRestoredFileOn, int? completedPercent, int? currentRestoredSizeMB, int? currentRestorePlanSizeMB, string currentBackupType, string currentRestoringFileName, int? numberOfFilesFound, int? numberOfFilesQueued, int? numberOfFilesSkipped, int? numberOfFilesRestoring, int? numberOfFilesRestored, int? numberOfFilesUnrestorable, IReadOnlyList<ManagedDatabaseRestoreDetailsBackupSetProperties> fullBackupSets, IReadOnlyList<ManagedDatabaseRestoreDetailsBackupSetProperties> diffBackupSets, IReadOnlyList<ManagedDatabaseRestoreDetailsBackupSetProperties> logBackupSets, IReadOnlyList<ManagedDatabaseRestoreDetailsUnrestorableFileProperties> unrestorableFileList) : base(id, name, resourceType, systemData)
        {
            TypePropertiesType = typePropertiesType;
            Status = status;
            BlockReason = blockReason;
            LastUploadedFileName = lastUploadedFileName;
            LastUploadedFileOn = lastUploadedFileOn;
            LastRestoredFileName = lastRestoredFileName;
            LastRestoredFileOn = lastRestoredFileOn;
            CompletedPercent = completedPercent;
            CurrentRestoredSizeMB = currentRestoredSizeMB;
            CurrentRestorePlanSizeMB = currentRestorePlanSizeMB;
            CurrentBackupType = currentBackupType;
            CurrentRestoringFileName = currentRestoringFileName;
            NumberOfFilesFound = numberOfFilesFound;
            NumberOfFilesQueued = numberOfFilesQueued;
            NumberOfFilesSkipped = numberOfFilesSkipped;
            NumberOfFilesRestoring = numberOfFilesRestoring;
            NumberOfFilesRestored = numberOfFilesRestored;
            NumberOfFilesUnrestorable = numberOfFilesUnrestorable;
            FullBackupSets = fullBackupSets;
            DiffBackupSets = diffBackupSets;
            LogBackupSets = logBackupSets;
            UnrestorableFileList = unrestorableFileList;
        }

        /// <summary> Restore type. </summary>
        public string TypePropertiesType { get; }
        /// <summary> Restore status. </summary>
        public string Status { get; }
        /// <summary> The reason why restore is in Blocked state. </summary>
        public string BlockReason { get; }
        /// <summary> Last uploaded file name. </summary>
        public string LastUploadedFileName { get; }
        /// <summary> Last uploaded file time. </summary>
        public DateTimeOffset? LastUploadedFileOn { get; }
        /// <summary> Last restored file name. </summary>
        public string LastRestoredFileName { get; }
        /// <summary> Last restored file time. </summary>
        public DateTimeOffset? LastRestoredFileOn { get; }
        /// <summary> Percent completed. </summary>
        public int? CompletedPercent { get; }
        /// <summary> Current restored size MB. </summary>
        public int? CurrentRestoredSizeMB { get; }
        /// <summary> Current restore plan size MB. </summary>
        public int? CurrentRestorePlanSizeMB { get; }
        /// <summary> Current backup type. </summary>
        public string CurrentBackupType { get; }
        /// <summary> Current restoring file name. </summary>
        public string CurrentRestoringFileName { get; }
        /// <summary> Number of files detected. </summary>
        public int? NumberOfFilesFound { get; }
        /// <summary> Number of files queued. </summary>
        public int? NumberOfFilesQueued { get; }
        /// <summary> Number of files skipped. </summary>
        public int? NumberOfFilesSkipped { get; }
        /// <summary> Number of files restoring. </summary>
        public int? NumberOfFilesRestoring { get; }
        /// <summary> Number of files restored. </summary>
        public int? NumberOfFilesRestored { get; }
        /// <summary> Number of files unrestorable. </summary>
        public int? NumberOfFilesUnrestorable { get; }
        /// <summary> Full backup sets. </summary>
        public IReadOnlyList<ManagedDatabaseRestoreDetailsBackupSetProperties> FullBackupSets { get; }
        /// <summary> Diff backup sets. </summary>
        public IReadOnlyList<ManagedDatabaseRestoreDetailsBackupSetProperties> DiffBackupSets { get; }
        /// <summary> Log backup sets. </summary>
        public IReadOnlyList<ManagedDatabaseRestoreDetailsBackupSetProperties> LogBackupSets { get; }
        /// <summary> Unrestorable files. </summary>
        public IReadOnlyList<ManagedDatabaseRestoreDetailsUnrestorableFileProperties> UnrestorableFileList { get; }
    }
}
