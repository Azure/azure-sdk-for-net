// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary>
    /// A class representing the SqlServerTrustGroup data model.
    /// A server trust group.
    /// </summary>
    public partial class SqlServerTrustGroupData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="SqlServerTrustGroupData"/>. </summary>
        public SqlServerTrustGroupData()
        {
            GroupMembers = new ChangeTrackingList<ServerTrustGroupServerInfo>();
            TrustScopes = new ChangeTrackingList<ServerTrustGroupPropertiesTrustScopesItem>();
        }

        /// <summary> Initializes a new instance of <see cref="SqlServerTrustGroupData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="groupMembers"> Group members information for the server trust group. </param>
        /// <param name="trustScopes"> Trust scope of the server trust group. </param>
        internal SqlServerTrustGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IList<ServerTrustGroupServerInfo> groupMembers, IList<ServerTrustGroupPropertiesTrustScopesItem> trustScopes) : base(id, name, resourceType, systemData)
        {
            GroupMembers = groupMembers;
            TrustScopes = trustScopes;
        }

        /// <summary> Group members information for the server trust group. </summary>
        public IList<ServerTrustGroupServerInfo> GroupMembers { get; }
        /// <summary> Trust scope of the server trust group. </summary>
        public IList<ServerTrustGroupPropertiesTrustScopesItem> TrustScopes { get; }
    }
}
