// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary> A class representing the SqlVulnerabilityAssessmentScanResult data model. </summary>
    public partial class SqlVulnerabilityAssessmentScanResultData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="SqlVulnerabilityAssessmentScanResultData"/>. </summary>
        public SqlVulnerabilityAssessmentScanResultData()
        {
            QueryResults = new ChangeTrackingList<IList<string>>();
        }

        /// <summary> Initializes a new instance of <see cref="SqlVulnerabilityAssessmentScanResultData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="ruleId"> SQL Vulnerability Assessment rule Id. </param>
        /// <param name="status"> SQL Vulnerability Assessment rule result status. </param>
        /// <param name="errorMessage"> SQL Vulnerability Assessment error message. </param>
        /// <param name="isTrimmed"> SQL Vulnerability Assessment is the query results trimmed. </param>
        /// <param name="queryResults"> SQL Vulnerability Assessment query results that was run. </param>
        /// <param name="remediation"> SQL Vulnerability Assessment the remediation details. </param>
        /// <param name="baselineAdjustedResult"> SQL Vulnerability Assessment rule result adjusted with baseline. </param>
        /// <param name="ruleMetadata"> SQL Vulnerability Assessment rule metadata. </param>
        internal SqlVulnerabilityAssessmentScanResultData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string ruleId, SqlVulnerabilityAssessmentRuleStatus? status, string errorMessage, bool? isTrimmed, IReadOnlyList<IList<string>> queryResults, SqlVulnerabilityAssessmentRemediation remediation, SqlVulnerabilityAssessmentBaselineAdjustedResult baselineAdjustedResult, SqlVulnerabilityAssessmentRuleMetadata ruleMetadata) : base(id, name, resourceType, systemData)
        {
            RuleId = ruleId;
            Status = status;
            ErrorMessage = errorMessage;
            IsTrimmed = isTrimmed;
            QueryResults = queryResults;
            Remediation = remediation;
            BaselineAdjustedResult = baselineAdjustedResult;
            RuleMetadata = ruleMetadata;
        }

        /// <summary> SQL Vulnerability Assessment rule Id. </summary>
        public string RuleId { get; }
        /// <summary> SQL Vulnerability Assessment rule result status. </summary>
        public SqlVulnerabilityAssessmentRuleStatus? Status { get; }
        /// <summary> SQL Vulnerability Assessment error message. </summary>
        public string ErrorMessage { get; }
        /// <summary> SQL Vulnerability Assessment is the query results trimmed. </summary>
        public bool? IsTrimmed { get; }
        /// <summary> SQL Vulnerability Assessment query results that was run. </summary>
        public IReadOnlyList<IList<string>> QueryResults { get; }
        /// <summary> SQL Vulnerability Assessment the remediation details. </summary>
        public SqlVulnerabilityAssessmentRemediation Remediation { get; }
        /// <summary> SQL Vulnerability Assessment rule result adjusted with baseline. </summary>
        public SqlVulnerabilityAssessmentBaselineAdjustedResult BaselineAdjustedResult { get; }
        /// <summary> SQL Vulnerability Assessment rule metadata. </summary>
        public SqlVulnerabilityAssessmentRuleMetadata RuleMetadata { get; }
    }
}
