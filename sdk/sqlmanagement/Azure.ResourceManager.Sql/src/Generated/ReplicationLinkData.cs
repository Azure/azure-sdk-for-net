// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary> A class representing the ReplicationLink data model. </summary>
    public partial class ReplicationLinkData : Resource
    {
        /// <summary> Initializes a new instance of ReplicationLinkData. </summary>
        public ReplicationLinkData()
        {
        }

        /// <summary> Initializes a new instance of ReplicationLinkData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="partnerServer"> Resource partner server. </param>
        /// <param name="partnerDatabase"> Resource partner database. </param>
        /// <param name="partnerLocation"> Resource partner location. </param>
        /// <param name="role"> Local replication role. </param>
        /// <param name="partnerRole"> Partner replication role. </param>
        /// <param name="replicationMode"> Replication mode. </param>
        /// <param name="startTime"> Time at which the link was created. </param>
        /// <param name="percentComplete"> Seeding completion percentage for the link. </param>
        /// <param name="replicationState"> Replication state (PENDING, SEEDING, CATCHUP, SUSPENDED). </param>
        /// <param name="isTerminationAllowed"> Whether the user is currently allowed to terminate the link. </param>
        /// <param name="linkType"> Link type (GEO, NAMED). </param>
        internal ReplicationLinkData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string partnerServer, string partnerDatabase, string partnerLocation, ReplicationRole? role, ReplicationRole? partnerRole, string replicationMode, DateTimeOffset? startTime, int? percentComplete, ReplicationState? replicationState, bool? isTerminationAllowed, ReplicationLinkType? linkType) : base(id, name, type, systemData)
        {
            PartnerServer = partnerServer;
            PartnerDatabase = partnerDatabase;
            PartnerLocation = partnerLocation;
            Role = role;
            PartnerRole = partnerRole;
            ReplicationMode = replicationMode;
            StartTime = startTime;
            PercentComplete = percentComplete;
            ReplicationState = replicationState;
            IsTerminationAllowed = isTerminationAllowed;
            LinkType = linkType;
        }

        /// <summary> Resource partner server. </summary>
        public string PartnerServer { get; }
        /// <summary> Resource partner database. </summary>
        public string PartnerDatabase { get; }
        /// <summary> Resource partner location. </summary>
        public string PartnerLocation { get; }
        /// <summary> Local replication role. </summary>
        public ReplicationRole? Role { get; }
        /// <summary> Partner replication role. </summary>
        public ReplicationRole? PartnerRole { get; }
        /// <summary> Replication mode. </summary>
        public string ReplicationMode { get; }
        /// <summary> Time at which the link was created. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> Seeding completion percentage for the link. </summary>
        public int? PercentComplete { get; }
        /// <summary> Replication state (PENDING, SEEDING, CATCHUP, SUSPENDED). </summary>
        public ReplicationState? ReplicationState { get; }
        /// <summary> Whether the user is currently allowed to terminate the link. </summary>
        public bool? IsTerminationAllowed { get; }
        /// <summary> Link type (GEO, NAMED). </summary>
        public ReplicationLinkType? LinkType { get; }
    }
}
