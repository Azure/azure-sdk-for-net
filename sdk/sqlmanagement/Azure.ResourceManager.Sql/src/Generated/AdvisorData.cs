// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary> A class representing the Advisor data model. </summary>
    public partial class AdvisorData : Resource
    {
        /// <summary> Initializes a new instance of AdvisorData. </summary>
        public AdvisorData()
        {
            RecommendedActions = new ChangeTrackingList<RecommendedActionData>();
        }

        /// <summary> Initializes a new instance of AdvisorData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> Resource kind. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="advisorStatus"> Gets the status of availability of this advisor to customers. Possible values are &apos;GA&apos;, &apos;PublicPreview&apos;, &apos;LimitedPublicPreview&apos; and &apos;PrivatePreview&apos;. </param>
        /// <param name="autoExecuteStatus"> Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are &apos;Enabled&apos; and &apos;Disabled&apos;. </param>
        /// <param name="autoExecuteStatusInheritedFrom"> Gets the resource from which current value of auto-execute status is inherited. Auto-execute status can be set on (and inherited from) different levels in the resource hierarchy. Possible values are &apos;Subscription&apos;, &apos;Server&apos;, &apos;ElasticPool&apos;, &apos;Database&apos; and &apos;Default&apos; (when status is not explicitly set on any level). </param>
        /// <param name="recommendationsStatus"> Gets that status of recommendations for this advisor and reason for not having any recommendations. Possible values include, but are not limited to, &apos;Ok&apos; (Recommendations available),LowActivity (not enough workload to analyze), &apos;DbSeemsTuned&apos; (Database is doing well), etc. </param>
        /// <param name="lastChecked"> Gets the time when the current resource was analyzed for recommendations by this advisor. </param>
        /// <param name="recommendedActions"> Gets the recommended actions for this advisor. </param>
        internal AdvisorData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string kind, string location, AdvisorStatus? advisorStatus, AutoExecuteStatus? autoExecuteStatus, AutoExecuteStatusInheritedFrom? autoExecuteStatusInheritedFrom, string recommendationsStatus, DateTimeOffset? lastChecked, IReadOnlyList<RecommendedActionData> recommendedActions) : base(id, name, type, systemData)
        {
            Kind = kind;
            Location = location;
            AdvisorStatus = advisorStatus;
            AutoExecuteStatus = autoExecuteStatus;
            AutoExecuteStatusInheritedFrom = autoExecuteStatusInheritedFrom;
            RecommendationsStatus = recommendationsStatus;
            LastChecked = lastChecked;
            RecommendedActions = recommendedActions;
        }

        /// <summary> Resource kind. </summary>
        public string Kind { get; }
        /// <summary> Resource location. </summary>
        public string Location { get; }
        /// <summary> Gets the status of availability of this advisor to customers. Possible values are &apos;GA&apos;, &apos;PublicPreview&apos;, &apos;LimitedPublicPreview&apos; and &apos;PrivatePreview&apos;. </summary>
        public AdvisorStatus? AdvisorStatus { get; }
        /// <summary> Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are &apos;Enabled&apos; and &apos;Disabled&apos;. </summary>
        public AutoExecuteStatus? AutoExecuteStatus { get; set; }
        /// <summary> Gets the resource from which current value of auto-execute status is inherited. Auto-execute status can be set on (and inherited from) different levels in the resource hierarchy. Possible values are &apos;Subscription&apos;, &apos;Server&apos;, &apos;ElasticPool&apos;, &apos;Database&apos; and &apos;Default&apos; (when status is not explicitly set on any level). </summary>
        public AutoExecuteStatusInheritedFrom? AutoExecuteStatusInheritedFrom { get; }
        /// <summary> Gets that status of recommendations for this advisor and reason for not having any recommendations. Possible values include, but are not limited to, &apos;Ok&apos; (Recommendations available),LowActivity (not enough workload to analyze), &apos;DbSeemsTuned&apos; (Database is doing well), etc. </summary>
        public string RecommendationsStatus { get; }
        /// <summary> Gets the time when the current resource was analyzed for recommendations by this advisor. </summary>
        public DateTimeOffset? LastChecked { get; }
        /// <summary> Gets the recommended actions for this advisor. </summary>
        public IReadOnlyList<RecommendedActionData> RecommendedActions { get; }
    }
}
