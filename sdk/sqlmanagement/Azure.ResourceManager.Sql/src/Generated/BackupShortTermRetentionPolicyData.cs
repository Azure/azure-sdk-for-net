// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary>
    /// A class representing the BackupShortTermRetentionPolicy data model.
    /// A short term retention policy.
    /// </summary>
    public partial class BackupShortTermRetentionPolicyData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="BackupShortTermRetentionPolicyData"/>. </summary>
        public BackupShortTermRetentionPolicyData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="BackupShortTermRetentionPolicyData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="retentionDays"> The backup retention period in days. This is how many days Point-in-Time Restore will be supported. </param>
        /// <param name="diffBackupIntervalInHours"> The differential backup interval in hours. This is how many interval hours between each differential backup will be supported. This is only applicable to live databases but not dropped databases. </param>
        internal BackupShortTermRetentionPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, int? retentionDays, DiffBackupIntervalInHours? diffBackupIntervalInHours) : base(id, name, resourceType, systemData)
        {
            RetentionDays = retentionDays;
            DiffBackupIntervalInHours = diffBackupIntervalInHours;
        }

        /// <summary> The backup retention period in days. This is how many days Point-in-Time Restore will be supported. </summary>
        public int? RetentionDays { get; set; }
        /// <summary> The differential backup interval in hours. This is how many interval hours between each differential backup will be supported. This is only applicable to live databases but not dropped databases. </summary>
        public DiffBackupIntervalInHours? DiffBackupIntervalInHours { get; set; }
    }
}
