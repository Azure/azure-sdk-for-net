// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using Azure.Core;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Sql.Models;

namespace Azure.ResourceManager.Sql
{
    /// <summary>
    /// A Class representing a ManagedInstance along with the instance operations that can be performed on it.
    /// If you have a <see cref="ResourceIdentifier" /> you can construct a <see cref="ManagedInstanceResource" />
    /// from an instance of <see cref="ArmClient" /> using the GetManagedInstanceResource method.
    /// Otherwise you can get one from its parent resource <see cref="ResourceGroupResource" /> using the GetManagedInstance method.
    /// </summary>
    public partial class ManagedInstanceResource : ArmResource
    {
        /// <summary>
        /// Get top resource consuming queries of a managed instance.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries
        /// Operation Id: ManagedInstances_ListByManagedInstance
        /// </summary>
        /// <param name="numberOfQueries"> How many &apos;top queries&apos; to return. Default is 5. </param>
        /// <param name="databases"> Comma separated list of databases to be included into search. All DB&apos;s are included if this parameter is not specified. </param>
        /// <param name="startTime"> Start time for observed period. </param>
        /// <param name="endTime"> End time for observed period. </param>
        /// <param name="interval"> The time step to be used to summarize the metric values. Default value is PT1H. </param>
        /// <param name="aggregationFunction"> Aggregation function to be used, default value is &apos;sum&apos;. </param>
        /// <param name="observationMetric"> Metric to be used for ranking top queries. Default is &apos;cpu&apos;. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="TopQueries" /> that may take multiple service requests to iterate over. </returns>
        [ForwardsClientCalls]
        public virtual AsyncPageable<TopQueries> GetTopQueriesAsync(int? numberOfQueries = null, string databases = null, string startTime = null, string endTime = null, QueryTimeGrainType? interval = null, AggregationFunctionType? aggregationFunction = null, SqlMetricType? observationMetric = null, CancellationToken cancellationToken = default) =>
            GetTopQueriesAsync(new ManagedInstanceResourceGetTopQueriesOptions
            {
                NumberOfQueries = numberOfQueries,
                Databases = databases,
                StartTime = startTime,
                EndTime = endTime,
                Interval = interval,
                AggregationFunction = aggregationFunction,
                ObservationMetric = observationMetric
            }, cancellationToken);

        /// <summary>
        /// Get top resource consuming queries of a managed instance.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries
        /// Operation Id: ManagedInstances_ListByManagedInstance
        /// </summary>
        /// <param name="numberOfQueries"> How many &apos;top queries&apos; to return. Default is 5. </param>
        /// <param name="databases"> Comma separated list of databases to be included into search. All DB&apos;s are included if this parameter is not specified. </param>
        /// <param name="startTime"> Start time for observed period. </param>
        /// <param name="endTime"> End time for observed period. </param>
        /// <param name="interval"> The time step to be used to summarize the metric values. Default value is PT1H. </param>
        /// <param name="aggregationFunction"> Aggregation function to be used, default value is &apos;sum&apos;. </param>
        /// <param name="observationMetric"> Metric to be used for ranking top queries. Default is &apos;cpu&apos;. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="TopQueries" /> that may take multiple service requests to iterate over. </returns>
        [ForwardsClientCalls]
        public virtual Pageable<TopQueries> GetTopQueries(int? numberOfQueries = null, string databases = null, string startTime = null, string endTime = null, QueryTimeGrainType? interval = null, AggregationFunctionType? aggregationFunction = null, SqlMetricType? observationMetric = null, CancellationToken cancellationToken = default) =>
            GetTopQueries(new ManagedInstanceResourceGetTopQueriesOptions
            {
                NumberOfQueries = numberOfQueries,
                Databases = databases,
                StartTime = startTime,
                EndTime = endTime,
                Interval = interval,
                AggregationFunction = aggregationFunction,
                ObservationMetric = observationMetric
            }, cancellationToken);
    }
}
