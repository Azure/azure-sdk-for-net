// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ServerTrustGroupsOperations.
    /// </summary>
    public static partial class ServerTrustGroupsOperationsExtensions
    {
            /// <summary>
            /// Gets a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            public static ServerTrustGroup Get(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName)
            {
                return operations.GetAsync(resourceGroupName, locationName, serverTrustGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServerTrustGroup> GetAsync(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, locationName, serverTrustGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            /// <param name='parameters'>
            /// The server trust group parameters.
            /// </param>
            public static ServerTrustGroup CreateOrUpdate(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName, ServerTrustGroup parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, locationName, serverTrustGroupName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            /// <param name='parameters'>
            /// The server trust group parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServerTrustGroup> CreateOrUpdateAsync(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName, ServerTrustGroup parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, locationName, serverTrustGroupName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            public static void Delete(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName)
            {
                operations.DeleteAsync(resourceGroupName, locationName, serverTrustGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, locationName, serverTrustGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            public static IPage<ServerTrustGroup> ListByLocation(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName)
            {
                return operations.ListByLocationAsync(resourceGroupName, locationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServerTrustGroup>> ListByLocationAsync(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByLocationWithHttpMessagesAsync(resourceGroupName, locationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a server trust groups by instance name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='managedInstanceName'>
            /// The name of the managed instance.
            /// </param>
            public static IPage<ServerTrustGroup> ListByInstance(this IServerTrustGroupsOperations operations, string resourceGroupName, string managedInstanceName)
            {
                return operations.ListByInstanceAsync(resourceGroupName, managedInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a server trust groups by instance name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='managedInstanceName'>
            /// The name of the managed instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServerTrustGroup>> ListByInstanceAsync(this IServerTrustGroupsOperations operations, string resourceGroupName, string managedInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByInstanceWithHttpMessagesAsync(resourceGroupName, managedInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            /// <param name='parameters'>
            /// The server trust group parameters.
            /// </param>
            public static ServerTrustGroup BeginCreateOrUpdate(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName, ServerTrustGroup parameters)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, locationName, serverTrustGroupName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            /// <param name='parameters'>
            /// The server trust group parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServerTrustGroup> BeginCreateOrUpdateAsync(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName, ServerTrustGroup parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, locationName, serverTrustGroupName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            public static void BeginDelete(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName)
            {
                operations.BeginDeleteAsync(resourceGroupName, locationName, serverTrustGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='locationName'>
            /// The name of the region where the resource is located.
            /// </param>
            /// <param name='serverTrustGroupName'>
            /// The name of the server trust group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IServerTrustGroupsOperations operations, string resourceGroupName, string locationName, string serverTrustGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, locationName, serverTrustGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ServerTrustGroup> ListByLocationNext(this IServerTrustGroupsOperations operations, string nextPageLink)
            {
                return operations.ListByLocationNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists a server trust group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServerTrustGroup>> ListByLocationNextAsync(this IServerTrustGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByLocationNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a server trust groups by instance name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ServerTrustGroup> ListByInstanceNext(this IServerTrustGroupsOperations operations, string nextPageLink)
            {
                return operations.ListByInstanceNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a server trust groups by instance name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServerTrustGroup>> ListByInstanceNextAsync(this IServerTrustGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByInstanceNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
