// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A restorable dropped managed database resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class RestorableDroppedManagedDatabase : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the RestorableDroppedManagedDatabase
        /// class.
        /// </summary>
        public RestorableDroppedManagedDatabase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestorableDroppedManagedDatabase
        /// class.
        /// </summary>
        /// <param name="location">Resource location.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="databaseName">The name of the database.</param>
        /// <param name="creationDate">The creation date of the database
        /// (ISO8601 format).</param>
        /// <param name="deletionDate">The deletion date of the database
        /// (ISO8601 format).</param>
        /// <param name="earliestRestoreDate">The earliest restore date of the
        /// database (ISO8601 format).</param>
        public RestorableDroppedManagedDatabase(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string databaseName = default(string), System.DateTime? creationDate = default(System.DateTime?), System.DateTime? deletionDate = default(System.DateTime?), System.DateTime? earliestRestoreDate = default(System.DateTime?))
            : base(location, id, name, type, tags)
        {
            DatabaseName = databaseName;
            CreationDate = creationDate;
            DeletionDate = deletionDate;
            EarliestRestoreDate = earliestRestoreDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the name of the database.
        /// </summary>
        [JsonProperty(PropertyName = "properties.databaseName")]
        public string DatabaseName { get; private set; }

        /// <summary>
        /// Gets the creation date of the database (ISO8601 format).
        /// </summary>
        [JsonProperty(PropertyName = "properties.creationDate")]
        public System.DateTime? CreationDate { get; private set; }

        /// <summary>
        /// Gets the deletion date of the database (ISO8601 format).
        /// </summary>
        [JsonProperty(PropertyName = "properties.deletionDate")]
        public System.DateTime? DeletionDate { get; private set; }

        /// <summary>
        /// Gets the earliest restore date of the database (ISO8601 format).
        /// </summary>
        [JsonProperty(PropertyName = "properties.earliestRestoreDate")]
        public System.DateTime? EarliestRestoreDate { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
