// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The execution options of a job step.
    /// </summary>
    public partial class JobStepExecutionOptions
    {
        /// <summary>
        /// Initializes a new instance of the JobStepExecutionOptions class.
        /// </summary>
        public JobStepExecutionOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobStepExecutionOptions class.
        /// </summary>
        /// <param name="timeoutSeconds">Execution timeout for the job
        /// step.</param>
        /// <param name="retryAttempts">Maximum number of times the job step
        /// will be reattempted if the first attempt fails.</param>
        /// <param name="initialRetryIntervalSeconds">Initial delay between
        /// retries for job step execution.</param>
        /// <param name="maximumRetryIntervalSeconds">The maximum amount of
        /// time to wait between retries for job step execution.</param>
        /// <param name="retryIntervalBackoffMultiplier">The backoff multiplier
        /// for the time between retries.</param>
        public JobStepExecutionOptions(int? timeoutSeconds = default(int?), int? retryAttempts = default(int?), int? initialRetryIntervalSeconds = default(int?), int? maximumRetryIntervalSeconds = default(int?), double? retryIntervalBackoffMultiplier = default(double?))
        {
            TimeoutSeconds = timeoutSeconds;
            RetryAttempts = retryAttempts;
            InitialRetryIntervalSeconds = initialRetryIntervalSeconds;
            MaximumRetryIntervalSeconds = maximumRetryIntervalSeconds;
            RetryIntervalBackoffMultiplier = retryIntervalBackoffMultiplier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets execution timeout for the job step.
        /// </summary>
        [JsonProperty(PropertyName = "timeoutSeconds")]
        public int? TimeoutSeconds { get; set; }

        /// <summary>
        /// Gets or sets maximum number of times the job step will be
        /// reattempted if the first attempt fails.
        /// </summary>
        [JsonProperty(PropertyName = "retryAttempts")]
        public int? RetryAttempts { get; set; }

        /// <summary>
        /// Gets or sets initial delay between retries for job step execution.
        /// </summary>
        [JsonProperty(PropertyName = "initialRetryIntervalSeconds")]
        public int? InitialRetryIntervalSeconds { get; set; }

        /// <summary>
        /// Gets or sets the maximum amount of time to wait between retries for
        /// job step execution.
        /// </summary>
        [JsonProperty(PropertyName = "maximumRetryIntervalSeconds")]
        public int? MaximumRetryIntervalSeconds { get; set; }

        /// <summary>
        /// Gets or sets the backoff multiplier for the time between retries.
        /// </summary>
        [JsonProperty(PropertyName = "retryIntervalBackoffMultiplier")]
        public double? RetryIntervalBackoffMultiplier { get; set; }

    }
}
