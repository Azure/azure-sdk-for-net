// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Workload group operations for a data warehouse
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkloadGroup : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the WorkloadGroup class.
        /// </summary>
        public WorkloadGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkloadGroup class.
        /// </summary>
        /// <param name="minResourcePercent">The workload group minimum
        /// percentage resource.</param>
        /// <param name="maxResourcePercent">The workload group cap percentage
        /// resource.</param>
        /// <param name="minResourcePercentPerRequest">The workload group
        /// request minimum grant percentage.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="maxResourcePercentPerRequest">The workload group
        /// request maximum grant percentage.</param>
        /// <param name="importance">The workload group importance
        /// level.</param>
        /// <param name="queryExecutionTimeout">The workload group query
        /// execution timeout.</param>
        public WorkloadGroup(int minResourcePercent, int maxResourcePercent, double minResourcePercentPerRequest, string id = default(string), string name = default(string), string type = default(string), double? maxResourcePercentPerRequest = default(double?), string importance = default(string), int? queryExecutionTimeout = default(int?))
            : base(id, name, type)
        {
            MinResourcePercent = minResourcePercent;
            MaxResourcePercent = maxResourcePercent;
            MinResourcePercentPerRequest = minResourcePercentPerRequest;
            MaxResourcePercentPerRequest = maxResourcePercentPerRequest;
            Importance = importance;
            QueryExecutionTimeout = queryExecutionTimeout;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the workload group minimum percentage resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.minResourcePercent")]
        public int MinResourcePercent { get; set; }

        /// <summary>
        /// Gets or sets the workload group cap percentage resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxResourcePercent")]
        public int MaxResourcePercent { get; set; }

        /// <summary>
        /// Gets or sets the workload group request minimum grant percentage.
        /// </summary>
        [JsonProperty(PropertyName = "properties.minResourcePercentPerRequest")]
        public double MinResourcePercentPerRequest { get; set; }

        /// <summary>
        /// Gets or sets the workload group request maximum grant percentage.
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxResourcePercentPerRequest")]
        public double? MaxResourcePercentPerRequest { get; set; }

        /// <summary>
        /// Gets or sets the workload group importance level.
        /// </summary>
        [JsonProperty(PropertyName = "properties.importance")]
        public string Importance { get; set; }

        /// <summary>
        /// Gets or sets the workload group query execution timeout.
        /// </summary>
        [JsonProperty(PropertyName = "properties.queryExecutionTimeout")]
        public int? QueryExecutionTimeout { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
