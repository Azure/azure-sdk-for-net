// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An Azure SQL managed instance administrator.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ManagedInstanceAdministrator : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ManagedInstanceAdministrator
        /// class.
        /// </summary>
        public ManagedInstanceAdministrator()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedInstanceAdministrator
        /// class.
        /// </summary>
        /// <param name="login">Login name of the managed instance
        /// administrator.</param>
        /// <param name="sid">SID (object ID) of the managed instance
        /// administrator.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tenantId">Tenant ID of the managed instance
        /// administrator.</param>
        public ManagedInstanceAdministrator(string login, System.Guid sid, string id = default(string), string name = default(string), string type = default(string), System.Guid? tenantId = default(System.Guid?))
            : base(id, name, type)
        {
            Login = login;
            Sid = sid;
            TenantId = tenantId;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for ManagedInstanceAdministrator class.
        /// </summary>
        static ManagedInstanceAdministrator()
        {
            AdministratorType = "ActiveDirectory";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets login name of the managed instance administrator.
        /// </summary>
        [JsonProperty(PropertyName = "properties.login")]
        public string Login { get; set; }

        /// <summary>
        /// Gets or sets SID (object ID) of the managed instance administrator.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sid")]
        public System.Guid Sid { get; set; }

        /// <summary>
        /// Gets or sets tenant ID of the managed instance administrator.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantId")]
        public System.Guid? TenantId { get; set; }

        /// <summary>
        /// Type of the managed instance administrator.
        /// </summary>
        [JsonProperty(PropertyName = "properties.administratorType")]
        public static string AdministratorType { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Login == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Login");
            }
        }
    }
}
