// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The storage account type capability.
    /// </summary>
    public partial class StorageCapability
    {
        /// <summary>
        /// Initializes a new instance of the StorageCapability class.
        /// </summary>
        public StorageCapability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageCapability class.
        /// </summary>
        /// <param name="storageAccountType">The storage account type for the
        /// database's backups. Possible values include: 'GRS', 'LRS',
        /// 'ZRS'</param>
        /// <param name="status">The status of the capability. Possible values
        /// include: 'Visible', 'Available', 'Default', 'Disabled'</param>
        /// <param name="reason">The reason for the capability not being
        /// available.</param>
        public StorageCapability(string storageAccountType = default(string), CapabilityStatus? status = default(CapabilityStatus?), string reason = default(string))
        {
            StorageAccountType = storageAccountType;
            Status = status;
            Reason = reason;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the storage account type for the database's backups. Possible
        /// values include: 'GRS', 'LRS', 'ZRS'
        /// </summary>
        [JsonProperty(PropertyName = "storageAccountType")]
        public string StorageAccountType { get; private set; }

        /// <summary>
        /// Gets the status of the capability. Possible values include:
        /// 'Visible', 'Available', 'Default', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public CapabilityStatus? Status { get; private set; }

        /// <summary>
        /// Gets or sets the reason for the capability not being available.
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

    }
}
