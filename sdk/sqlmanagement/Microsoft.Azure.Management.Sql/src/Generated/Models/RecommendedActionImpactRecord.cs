// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Contains information of estimated or observed impact on various metrics
    /// for an Azure SQL Database, Server or Elastic Pool Recommended Action.
    /// </summary>
    public partial class RecommendedActionImpactRecord
    {
        /// <summary>
        /// Initializes a new instance of the RecommendedActionImpactRecord
        /// class.
        /// </summary>
        public RecommendedActionImpactRecord()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecommendedActionImpactRecord
        /// class.
        /// </summary>
        /// <param name="dimensionName">Gets the name of the impact dimension.
        /// e.g., CPUChange, DiskSpaceChange, NumberOfQueriesAffected.</param>
        /// <param name="unit">Gets the name of the impact dimension. e.g.,
        /// CPUChange, DiskSpaceChange, NumberOfQueriesAffected.</param>
        /// <param name="absoluteValue">Gets the absolute value of this
        /// dimension if applicable. e.g., Number of Queries affected</param>
        /// <param name="changeValueAbsolute">Gets the absolute change in the
        /// value of this dimension. e.g., Absolute Disk space change in
        /// Megabytes</param>
        /// <param name="changeValueRelative">Gets the relative change in the
        /// value of this dimension. e.g., Relative Disk space change in
        /// Percentage</param>
        public RecommendedActionImpactRecord(string dimensionName = default(string), string unit = default(string), double? absoluteValue = default(double?), double? changeValueAbsolute = default(double?), double? changeValueRelative = default(double?))
        {
            DimensionName = dimensionName;
            Unit = unit;
            AbsoluteValue = absoluteValue;
            ChangeValueAbsolute = changeValueAbsolute;
            ChangeValueRelative = changeValueRelative;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the name of the impact dimension. e.g., CPUChange,
        /// DiskSpaceChange, NumberOfQueriesAffected.
        /// </summary>
        [JsonProperty(PropertyName = "dimensionName")]
        public string DimensionName { get; private set; }

        /// <summary>
        /// Gets the name of the impact dimension. e.g., CPUChange,
        /// DiskSpaceChange, NumberOfQueriesAffected.
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; private set; }

        /// <summary>
        /// Gets the absolute value of this dimension if applicable. e.g.,
        /// Number of Queries affected
        /// </summary>
        [JsonProperty(PropertyName = "absoluteValue")]
        public double? AbsoluteValue { get; private set; }

        /// <summary>
        /// Gets the absolute change in the value of this dimension. e.g.,
        /// Absolute Disk space change in Megabytes
        /// </summary>
        [JsonProperty(PropertyName = "changeValueAbsolute")]
        public double? ChangeValueAbsolute { get; private set; }

        /// <summary>
        /// Gets the relative change in the value of this dimension. e.g.,
        /// Relative Disk space change in Percentage
        /// </summary>
        [JsonProperty(PropertyName = "changeValueRelative")]
        public double? ChangeValueRelative { get; private set; }

    }
}
