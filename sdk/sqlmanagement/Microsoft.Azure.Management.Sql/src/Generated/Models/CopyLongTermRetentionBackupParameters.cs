// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Contains the information necessary to perform long term retention
    /// backup copy operation.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CopyLongTermRetentionBackupParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CopyLongTermRetentionBackupParameters class.
        /// </summary>
        public CopyLongTermRetentionBackupParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CopyLongTermRetentionBackupParameters class.
        /// </summary>
        /// <param name="targetSubscriptionId">The subscription that owns the
        /// target server</param>
        /// <param name="targetResourceGroup">The resource group that owns the
        /// target server</param>
        /// <param name="targetServerResourceId">The resource Id of the target
        /// server that owns the database</param>
        /// <param name="targetServerFullyQualifiedDomainName">The fully
        /// qualified domain name of the target server</param>
        /// <param name="targetDatabaseName">The name of the database owns the
        /// copied backup.</param>
        /// <param name="targetBackupStorageRedundancy">The storage redundancy
        /// type of the copied backup. Possible values include: 'Geo', 'Local',
        /// 'Zone'</param>
        public CopyLongTermRetentionBackupParameters(string targetSubscriptionId = default(string), string targetResourceGroup = default(string), string targetServerResourceId = default(string), string targetServerFullyQualifiedDomainName = default(string), string targetDatabaseName = default(string), string targetBackupStorageRedundancy = default(string))
        {
            TargetSubscriptionId = targetSubscriptionId;
            TargetResourceGroup = targetResourceGroup;
            TargetServerResourceId = targetServerResourceId;
            TargetServerFullyQualifiedDomainName = targetServerFullyQualifiedDomainName;
            TargetDatabaseName = targetDatabaseName;
            TargetBackupStorageRedundancy = targetBackupStorageRedundancy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the subscription that owns the target server
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetSubscriptionId")]
        public string TargetSubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets the resource group that owns the target server
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetResourceGroup")]
        public string TargetResourceGroup { get; set; }

        /// <summary>
        /// Gets or sets the resource Id of the target server that owns the
        /// database
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetServerResourceId")]
        public string TargetServerResourceId { get; set; }

        /// <summary>
        /// Gets or sets the fully qualified domain name of the target server
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetServerFullyQualifiedDomainName")]
        public string TargetServerFullyQualifiedDomainName { get; set; }

        /// <summary>
        /// Gets or sets the name of the database owns the copied backup.
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetDatabaseName")]
        public string TargetDatabaseName { get; set; }

        /// <summary>
        /// Gets or sets the storage redundancy type of the copied backup.
        /// Possible values include: 'Geo', 'Local', 'Zone'
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetBackupStorageRedundancy")]
        public string TargetBackupStorageRedundancy { get; set; }

    }
}
