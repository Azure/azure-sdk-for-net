// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A job step.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class JobStep : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the JobStep class.
        /// </summary>
        public JobStep()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobStep class.
        /// </summary>
        /// <param name="targetGroup">The resource ID of the target group that
        /// the job step will be executed on.</param>
        /// <param name="credential">The resource ID of the job credential that
        /// will be used to connect to the targets.</param>
        /// <param name="action">The action payload of the job step.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="stepId">The job step's index within the job. If not
        /// specified when creating the job step, it will be created as the
        /// last step. If not specified when updating the job step, the step id
        /// is not modified.</param>
        /// <param name="output">Output destination properties of the job
        /// step.</param>
        /// <param name="executionOptions">Execution options for the job
        /// step.</param>
        public JobStep(string targetGroup, string credential, JobStepAction action, string id = default(string), string name = default(string), string type = default(string), int? stepId = default(int?), JobStepOutput output = default(JobStepOutput), JobStepExecutionOptions executionOptions = default(JobStepExecutionOptions))
            : base(id, name, type)
        {
            StepId = stepId;
            TargetGroup = targetGroup;
            Credential = credential;
            Action = action;
            Output = output;
            ExecutionOptions = executionOptions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the job step's index within the job. If not specified
        /// when creating the job step, it will be created as the last step. If
        /// not specified when updating the job step, the step id is not
        /// modified.
        /// </summary>
        [JsonProperty(PropertyName = "properties.stepId")]
        public int? StepId { get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the target group that the job step
        /// will be executed on.
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetGroup")]
        public string TargetGroup { get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the job credential that will be
        /// used to connect to the targets.
        /// </summary>
        [JsonProperty(PropertyName = "properties.credential")]
        public string Credential { get; set; }

        /// <summary>
        /// Gets or sets the action payload of the job step.
        /// </summary>
        [JsonProperty(PropertyName = "properties.action")]
        public JobStepAction Action { get; set; }

        /// <summary>
        /// Gets or sets output destination properties of the job step.
        /// </summary>
        [JsonProperty(PropertyName = "properties.output")]
        public JobStepOutput Output { get; set; }

        /// <summary>
        /// Gets or sets execution options for the job step.
        /// </summary>
        [JsonProperty(PropertyName = "properties.executionOptions")]
        public JobStepExecutionOptions ExecutionOptions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetGroup == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetGroup");
            }
            if (Credential == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Credential");
            }
            if (Action == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Action");
            }
            if (Action != null)
            {
                Action.Validate();
            }
            if (Output != null)
            {
                Output.Validate();
            }
        }
    }
}
