// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Contains the information necessary to perform a managed database move.
    /// </summary>
    public partial class ManagedDatabaseMoveDefinition
    {
        /// <summary>
        /// Initializes a new instance of the ManagedDatabaseMoveDefinition
        /// class.
        /// </summary>
        public ManagedDatabaseMoveDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedDatabaseMoveDefinition
        /// class.
        /// </summary>
        /// <param name="destinationManagedDatabaseId">The destination managed
        /// database ID</param>
        public ManagedDatabaseMoveDefinition(string destinationManagedDatabaseId)
        {
            DestinationManagedDatabaseId = destinationManagedDatabaseId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the destination managed database ID
        /// </summary>
        [JsonProperty(PropertyName = "destinationManagedDatabaseId")]
        public string DestinationManagedDatabaseId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DestinationManagedDatabaseId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DestinationManagedDatabaseId");
            }
        }
    }
}
