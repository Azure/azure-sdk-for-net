// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of an Azure SQL Database sync group log.
    /// </summary>
    public partial class SyncGroupLogProperties
    {
        /// <summary>
        /// Initializes a new instance of the SyncGroupLogProperties class.
        /// </summary>
        public SyncGroupLogProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SyncGroupLogProperties class.
        /// </summary>
        /// <param name="timestamp">Timestamp of the sync group log.</param>
        /// <param name="type">Type of the sync group log. Possible values
        /// include: 'All', 'Error', 'Warning', 'Success'</param>
        /// <param name="source">Source of the sync group log.</param>
        /// <param name="details">Details of the sync group log.</param>
        /// <param name="tracingId">TracingId of the sync group log.</param>
        /// <param name="operationStatus">OperationStatus of the sync group
        /// log.</param>
        public SyncGroupLogProperties(System.DateTime? timestamp = default(System.DateTime?), string type = default(string), string source = default(string), string details = default(string), System.Guid? tracingId = default(System.Guid?), string operationStatus = default(string))
        {
            Timestamp = timestamp;
            Type = type;
            Source = source;
            Details = details;
            TracingId = tracingId;
            OperationStatus = operationStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets timestamp of the sync group log.
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; private set; }

        /// <summary>
        /// Gets type of the sync group log. Possible values include: 'All',
        /// 'Error', 'Warning', 'Success'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets source of the sync group log.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; private set; }

        /// <summary>
        /// Gets details of the sync group log.
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public string Details { get; private set; }

        /// <summary>
        /// Gets tracingId of the sync group log.
        /// </summary>
        [JsonProperty(PropertyName = "tracingId")]
        public System.Guid? TracingId { get; private set; }

        /// <summary>
        /// Gets operationStatus of the sync group log.
        /// </summary>
        [JsonProperty(PropertyName = "operationStatus")]
        public string OperationStatus { get; private set; }

    }
}
