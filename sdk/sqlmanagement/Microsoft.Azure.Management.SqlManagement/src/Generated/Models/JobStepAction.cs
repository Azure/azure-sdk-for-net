// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The action to be executed by a job step.
    /// </summary>
    public partial class JobStepAction
    {
        /// <summary>
        /// Initializes a new instance of the JobStepAction class.
        /// </summary>
        public JobStepAction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobStepAction class.
        /// </summary>
        /// <param name="value">The action value, for example the text of the
        /// T-SQL script to execute.</param>
        /// <param name="type">Type of action being executed by the job step.
        /// Possible values include: 'TSql'</param>
        /// <param name="source">The source of the action to execute. Possible
        /// values include: 'Inline'</param>
        public JobStepAction(string value, string type = default(string), string source = default(string))
        {
            Type = type;
            Source = source;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of action being executed by the job step.
        /// Possible values include: 'TSql'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the source of the action to execute. Possible values
        /// include: 'Inline'
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets the action value, for example the text of the T-SQL
        /// script to execute.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Value == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Value");
            }
        }
    }
}
