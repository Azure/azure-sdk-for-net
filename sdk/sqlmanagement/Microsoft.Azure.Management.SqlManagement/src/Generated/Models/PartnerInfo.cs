// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Partner server information for the failover group.
    /// </summary>
    public partial class PartnerInfo
    {
        /// <summary>
        /// Initializes a new instance of the PartnerInfo class.
        /// </summary>
        public PartnerInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PartnerInfo class.
        /// </summary>
        /// <param name="id">Resource identifier of the partner server.</param>
        /// <param name="location">Geo location of the partner server.</param>
        /// <param name="replicationRole">Replication role of the partner
        /// server. Possible values include: 'Primary', 'Secondary'</param>
        public PartnerInfo(string id, string location = default(string), string replicationRole = default(string))
        {
            Id = id;
            Location = location;
            ReplicationRole = replicationRole;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource identifier of the partner server.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets geo location of the partner server.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; private set; }

        /// <summary>
        /// Gets replication role of the partner server. Possible values
        /// include: 'Primary', 'Secondary'
        /// </summary>
        [JsonProperty(PropertyName = "replicationRole")]
        public string ReplicationRole { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
