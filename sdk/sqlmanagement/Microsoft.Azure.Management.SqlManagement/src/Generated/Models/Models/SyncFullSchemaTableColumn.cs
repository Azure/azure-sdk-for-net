// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of the column in the table of database full schema.
    /// </summary>
    public partial class SyncFullSchemaTableColumn
    {
        /// <summary>
        /// Initializes a new instance of the SyncFullSchemaTableColumn class.
        /// </summary>
        public SyncFullSchemaTableColumn()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SyncFullSchemaTableColumn class.
        /// </summary>
        /// <param name="dataSize">Data size of the column.</param>
        /// <param name="dataType">Data type of the column.</param>
        /// <param name="errorId">Error id of the column.</param>
        /// <param name="hasError">If there is error in the table.</param>
        /// <param name="isPrimaryKey">If it is the primary key of the
        /// table.</param>
        /// <param name="name">Name of the column.</param>
        /// <param name="quotedName">Quoted name of the column.</param>
        public SyncFullSchemaTableColumn(string dataSize = default(string), string dataType = default(string), string errorId = default(string), bool? hasError = default(bool?), bool? isPrimaryKey = default(bool?), string name = default(string), string quotedName = default(string))
        {
            DataSize = dataSize;
            DataType = dataType;
            ErrorId = errorId;
            HasError = hasError;
            IsPrimaryKey = isPrimaryKey;
            Name = name;
            QuotedName = quotedName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets data size of the column.
        /// </summary>
        [JsonProperty(PropertyName = "dataSize")]
        public string DataSize { get; private set; }

        /// <summary>
        /// Gets data type of the column.
        /// </summary>
        [JsonProperty(PropertyName = "dataType")]
        public string DataType { get; private set; }

        /// <summary>
        /// Gets error id of the column.
        /// </summary>
        [JsonProperty(PropertyName = "errorId")]
        public string ErrorId { get; private set; }

        /// <summary>
        /// Gets if there is error in the table.
        /// </summary>
        [JsonProperty(PropertyName = "hasError")]
        public bool? HasError { get; private set; }

        /// <summary>
        /// Gets if it is the primary key of the table.
        /// </summary>
        [JsonProperty(PropertyName = "isPrimaryKey")]
        public bool? IsPrimaryKey { get; private set; }

        /// <summary>
        /// Gets name of the column.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets quoted name of the column.
        /// </summary>
        [JsonProperty(PropertyName = "quotedName")]
        public string QuotedName { get; private set; }

    }
}
