// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.AI.Vision.ImageAnalysis
{
    // Data plane generated client.
    /// <summary> The ImageAnalysis service client. </summary>
    public partial class ImageAnalysisClient
    {
        /// <summary> Performs a single Image Analysis operation. </summary>
        /// <param name="imageContent"> The image to be analyzed. </param>
        /// <param name="visualFeatures"> A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Tags, Caption, DenseCaptions, Objects, Read, SmartCrops, People. At least one visual feature must be specified for Image Analysis. </param>
        /// <param name="language"> The desired language for output generation. If this parameter is not specified, the default value is "en". See https://aka.ms/cv-languages for a list of supported languages. </param>
        /// <param name="genderNeutralCaption"> Boolean flag for enabling gender-neutral captioning for caption and denseCaptions features. If this parameter is not specified, the default value is "false". </param>
        /// <param name="smartCropsAspectRatios"> A list of aspect ratios to use for smartCrops feature. Aspect ratios are calculated by dividing the target crop width by the height. Supported values are between 0.75 and 1.8 (inclusive). Multiple values should be comma-separated. If this parameter is not specified, the service will return one crop suggestion with an aspect ratio it sees fit between 0.5 and 2.0 (inclusive). </param>
        /// <param name="modelName"> The name of the custom trained model. This parameter needs to be specified if the parameter "features" is not specified. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageContent"/> is null. </exception>
        [ForwardsClientCalls]
        public virtual Task<Response<ImageAnalysisResult>> AnalyzeAsync(BinaryData imageContent, IEnumerable<VisualFeatures> visualFeatures = null, string language = null, bool? genderNeutralCaption = null, IEnumerable<float> smartCropsAspectRatios = null, string modelName = null, CancellationToken cancellationToken = default)
            => AnalyzeFromStreamAsync(imageContent, visualFeatures, language, genderNeutralCaption, smartCropsAspectRatios, modelName, cancellationToken);

        /// <summary> Performs a single Image Analysis operation. </summary>
        /// <param name="imageContent"> The image to be analyzed. </param>
        /// <param name="visualFeatures"> A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Tags, Caption, DenseCaptions, Objects, Read, SmartCrops, People. At least one visual feature must be specified for Image Analysis. </param>
        /// <param name="language"> The desired language for output generation. If this parameter is not specified, the default value is "en". See https://aka.ms/cv-languages for a list of supported languages. </param>
        /// <param name="genderNeutralCaption"> Boolean flag for enabling gender-neutral captioning for caption and denseCaptions features. If this parameter is not specified, the default value is "false". </param>
        /// <param name="smartCropsAspectRatios"> A list of aspect ratios to use for smartCrops feature. Aspect ratios are calculated by dividing the target crop width by the height. Supported values are between 0.75 and 1.8 (inclusive). Multiple values should be comma-separated. If this parameter is not specified, the service will return one crop suggestion with an aspect ratio it sees fit between 0.5 and 2.0 (inclusive). </param>
        /// <param name="modelName"> The name of the custom trained model. This parameter needs to be specified if the parameter "features" is not specified. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageContent"/> is null. </exception>
        [ForwardsClientCalls]
        public virtual Response<ImageAnalysisResult> Analyze(BinaryData imageContent, IEnumerable<VisualFeatures> visualFeatures = null, string language = null, bool? genderNeutralCaption = null, IEnumerable<float> smartCropsAspectRatios = null, string modelName = null, CancellationToken cancellationToken = default)
            => AnalyzeFromStream(imageContent, visualFeatures, language, genderNeutralCaption, smartCropsAspectRatios, modelName, cancellationToken);

        /// <summary> Performs a single Image Analysis operation. </summary>
        /// <param name="imageContent"> The image to be analyzed. </param>
        /// <param name="visualFeatures"> A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Tags, Caption, DenseCaptions, Objects, Read, SmartCrops, People. At least one visual feature must be specified for Image Analysis. </param>
        /// <param name="language"> The desired language for output generation. If this parameter is not specified, the default value is "en". See https://aka.ms/cv-languages for a list of supported languages. </param>
        /// <param name="genderNeutralCaption"> Boolean flag for enabling gender-neutral captioning for caption and denseCaptions features. If this parameter is not specified, the default value is "false". </param>
        /// <param name="smartCropsAspectRatios"> A list of aspect ratios to use for smartCrops feature. Aspect ratios are calculated by dividing the target crop width by the height. Supported values are between 0.75 and 1.8 (inclusive). Multiple values should be comma-separated. If this parameter is not specified, the service will return one crop suggestion with an aspect ratio it sees fit between 0.5 and 2.0 (inclusive). </param>
        /// <param name="modelName"> The name of the custom trained model. This parameter needs to be specified if the parameter "features" is not specified. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageContent"/> is null. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<ImageAnalysisResult>> AnalyzeAsync(ImageUrl imageContent, IEnumerable<VisualFeatures> visualFeatures = null, string language = null, bool? genderNeutralCaption = null, IEnumerable<float> smartCropsAspectRatios = null, string modelName = null, CancellationToken cancellationToken = default)
            => await AnalyzeFromUrlAsync(imageContent, visualFeatures, language, genderNeutralCaption, smartCropsAspectRatios, modelName, cancellationToken).ConfigureAwait(false);

        /// <summary> Performs a single Image Analysis operation. </summary>
        /// <param name="imageContent"> The image to be analyzed. </param>
        /// <param name="visualFeatures"> A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Tags, Caption, DenseCaptions, Objects, Read, SmartCrops, People. At least one visual feature must be specified for Image Analysis. </param>
        /// <param name="language"> The desired language for output generation. If this parameter is not specified, the default value is "en". See https://aka.ms/cv-languages for a list of supported languages. </param>
        /// <param name="genderNeutralCaption"> Boolean flag for enabling gender-neutral captioning for caption and denseCaptions features. If this parameter is not specified, the default value is "false". </param>
        /// <param name="smartCropsAspectRatios"> A list of aspect ratios to use for smartCrops feature. Aspect ratios are calculated by dividing the target crop width by the height. Supported values are between 0.75 and 1.8 (inclusive). Multiple values should be comma-separated. If this parameter is not specified, the service will return one crop suggestion with an aspect ratio it sees fit between 0.5 and 2.0 (inclusive). </param>
        /// <param name="modelName"> The name of the custom trained model. This parameter needs to be specified if the parameter "features" is not specified. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageContent"/> is null. </exception>
        [ForwardsClientCalls]
        public virtual Response<ImageAnalysisResult> Analyze(ImageUrl imageContent, IEnumerable<VisualFeatures> visualFeatures = null, string language = null, bool? genderNeutralCaption = null, IEnumerable<float> smartCropsAspectRatios = null, string modelName = null, CancellationToken cancellationToken = default)
            => AnalyzeFromUrl(imageContent, visualFeatures, language, genderNeutralCaption, smartCropsAspectRatios, modelName, cancellationToken);

        /// <summary> Segment the input image. An image stream of content type 'image/png' is returned, where the pixel values depend on the analysis mode. The returned image has the same dimensions as the input image for modes: foregroundMatting. The returned image has the same aspect ratio and same dimensions as the input image up to a limit of 16 megapixels for modes: backgroundRemoval. </summary>
        /// <param name="mode"> The type of segmentation to perform. </param>
        /// <param name="imageContent"> The image to be analyzed. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageContent"/> is null. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<BinaryData>> SegmentAsync(SegmentationMode mode, ImageUrl imageContent, CancellationToken cancellationToken = default)
            => await SegmentFromUrlAsync(mode, imageContent, cancellationToken).ConfigureAwait(false);

        /// <summary> Segment the input image. An image stream of content type 'image/png' is returned, where the pixel values depend on the analysis mode. The returned image has the same dimensions as the input image for modes: foregroundMatting. The returned image has the same aspect ratio and same dimensions as the input image up to a limit of 16 megapixels for modes: backgroundRemoval. </summary>
        /// <param name="mode"> The type of segmentation to perform. </param>
        /// <param name="imageContent"> The image to be analyzed. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageContent"/> is null. </exception>
        [ForwardsClientCalls]
        public virtual Response<BinaryData> Segment(SegmentationMode mode, ImageUrl imageContent, CancellationToken cancellationToken = default)
            => SegmentFromUrl(mode, imageContent, cancellationToken);

        /// <summary> Segment the input image. An image stream of content type 'image/png' is returned, where the pixel values depend on the analysis mode. The returned image has the same dimensions as the input image for modes: foregroundMatting. The returned image has the same aspect ratio and same dimensions as the input image up to a limit of 16 megapixels for modes: backgroundRemoval. </summary>
        /// <param name="mode"> The type of segmentation to perform. </param>
        /// <param name="imageContent"> The image to be analyzed. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageContent"/> is null. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<BinaryData>> SegmentAsync(SegmentationMode mode, BinaryData imageContent, CancellationToken cancellationToken = default)
            => await SegmentFromStreamAsync(mode, imageContent, cancellationToken).ConfigureAwait(false);

        /// <summary> Segment the input image. An image stream of content type 'image/png' is returned, where the pixel values depend on the analysis mode. The returned image has the same dimensions as the input image for modes: foregroundMatting. The returned image has the same aspect ratio and same dimensions as the input image up to a limit of 16 megapixels for modes: backgroundRemoval. </summary>
        /// <param name="mode"> The type of segmentation to perform. </param>
        /// <param name="imageContent"> The image to be analyzed. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageContent"/> is null. </exception>
        [ForwardsClientCalls]
        public virtual Response<BinaryData> Segment(SegmentationMode mode, BinaryData imageContent, CancellationToken cancellationToken = default)
            => SegmentFromStream(mode, imageContent, cancellationToken);
    }
}
