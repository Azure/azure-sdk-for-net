// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.Vision.ImageAnalysis
{
    /// <summary> Describe the combined results of different types of image analysis. </summary>
    public partial class ImageAnalysisResult
    {
        /// <summary> Initializes a new instance of ImageAnalysisResult. </summary>
        /// <param name="metadata"> The model used for the analysis. </param>
        /// <param name="modelVersion"> The model used for the analysis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="metadata"/> or <paramref name="modelVersion"/> is null. </exception>
        internal ImageAnalysisResult(ImageMetadata metadata, string modelVersion)
        {
            Argument.AssertNotNull(metadata, nameof(metadata));
            Argument.AssertNotNull(modelVersion, nameof(modelVersion));

            Metadata = metadata;
            ModelVersion = modelVersion;
        }

        /// <summary> Initializes a new instance of ImageAnalysisResult. </summary>
        /// <param name="caption"> A CaptionResult for the image. </param>
        /// <param name="denseCaptions"> A denseCaptionsResult for the image. </param>
        /// <param name="metadata"> The model used for the analysis. </param>
        /// <param name="modelVersion"> The model used for the analysis. </param>
        /// <param name="objects"> A list of objects for the image. </param>
        /// <param name="people"> A list of people for the image. </param>
        /// <param name="read"> A readResult for the image. </param>
        /// <param name="smartCrops"> A list of regions for the image. </param>
        /// <param name="tags"> A list of tags for the image. </param>
        internal ImageAnalysisResult(CaptionResult caption, DenseCaptionsResult denseCaptions, ImageMetadata metadata, string modelVersion, ObjectsResult objects, PeopleResult people, ReadResult read, SmartCropsResult smartCrops, TagsResult tags)
        {
            Caption = caption;
            DenseCaptions = denseCaptions;
            Metadata = metadata;
            ModelVersion = modelVersion;
            Objects = objects;
            People = people;
            Read = read;
            SmartCrops = smartCrops;
            Tags = tags;
        }

        /// <summary> A CaptionResult for the image. </summary>
        public CaptionResult Caption { get; }
        /// <summary> A denseCaptionsResult for the image. </summary>
        public DenseCaptionsResult DenseCaptions { get; }
        /// <summary> The model used for the analysis. </summary>
        public ImageMetadata Metadata { get; }
        /// <summary> The model used for the analysis. </summary>
        public string ModelVersion { get; }
        /// <summary> A list of objects for the image. </summary>
        public ObjectsResult Objects { get; }
        /// <summary> A list of people for the image. </summary>
        public PeopleResult People { get; }
        /// <summary> A readResult for the image. </summary>
        public ReadResult Read { get; }
        /// <summary> A list of regions for the image. </summary>
        public SmartCropsResult SmartCrops { get; }
        /// <summary> A list of tags for the image. </summary>
        public TagsResult Tags { get; }
    }
}
