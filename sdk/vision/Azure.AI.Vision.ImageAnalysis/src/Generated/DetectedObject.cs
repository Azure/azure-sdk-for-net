// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Vision.ImageAnalysis
{
    /// <summary> Represents a physical object detected in an image. </summary>
    public partial class DetectedObject
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DetectedObject"/>. </summary>
        /// <param name="boundingBox"> A rectangular boundary where the object was detected. </param>
        /// <param name="tags"> A single-item list containing the object information. </param>
        internal DetectedObject(ImageBoundingBox boundingBox, IEnumerable<DetectedTag> tags)
        {
            BoundingBox = boundingBox;
            Tags = tags.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="DetectedObject"/>. </summary>
        /// <param name="boundingBox"> A rectangular boundary where the object was detected. </param>
        /// <param name="tags"> A single-item list containing the object information. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DetectedObject(ImageBoundingBox boundingBox, IReadOnlyList<DetectedTag> tags, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            BoundingBox = boundingBox;
            Tags = tags;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> A rectangular boundary where the object was detected. </summary>
        public ImageBoundingBox BoundingBox { get; }

        /// <summary> A single-item list containing the object information. </summary>
        public IReadOnlyList<DetectedTag> Tags { get; }
    }
}
