// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Vision.ImageAnalysis
{
    /// <summary> Represents a single line of text in the image. </summary>
    public partial class DetectedTextLine
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DetectedTextLine"/>. </summary>
        /// <param name="text"> Text content of the detected text line. </param>
        /// <param name="boundingPolygon"> A bounding polygon around the text line. At the moment only quadrilaterals are supported (represented by 4 image points). </param>
        /// <param name="words"> A list of words in this line. </param>
        internal DetectedTextLine(string text, IEnumerable<ImagePoint> boundingPolygon, IEnumerable<DetectedTextWord> words)
        {
            Text = text;
            BoundingPolygon = boundingPolygon.ToList();
            Words = words.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="DetectedTextLine"/>. </summary>
        /// <param name="text"> Text content of the detected text line. </param>
        /// <param name="boundingPolygon"> A bounding polygon around the text line. At the moment only quadrilaterals are supported (represented by 4 image points). </param>
        /// <param name="words"> A list of words in this line. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DetectedTextLine(string text, IReadOnlyList<ImagePoint> boundingPolygon, IReadOnlyList<DetectedTextWord> words, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Text = text;
            BoundingPolygon = boundingPolygon;
            Words = words;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Text content of the detected text line. </summary>
        public string Text { get; }

        /// <summary> A bounding polygon around the text line. At the moment only quadrilaterals are supported (represented by 4 image points). </summary>
        public IReadOnlyList<ImagePoint> BoundingPolygon { get; }

        /// <summary> A list of words in this line. </summary>
        public IReadOnlyList<DetectedTextWord> Words { get; }
    }
}
