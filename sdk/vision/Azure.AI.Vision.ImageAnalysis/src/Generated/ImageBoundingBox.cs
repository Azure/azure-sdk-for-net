// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Vision.ImageAnalysis
{
    /// <summary> A basic rectangle specifying a sub-region of the image. </summary>
    public partial class ImageBoundingBox
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ImageBoundingBox"/>. </summary>
        /// <param name="x"> X-coordinate of the top left point of the area, in pixels. </param>
        /// <param name="y"> Y-coordinate of the top left point of the area, in pixels. </param>
        /// <param name="width"> Width of the area, in pixels. </param>
        /// <param name="height"> Height of the area, in pixels. </param>
        internal ImageBoundingBox(int x, int y, int width, int height)
        {
            X = x;
            Y = y;
            Width = width;
            Height = height;
        }

        /// <summary> Initializes a new instance of <see cref="ImageBoundingBox"/>. </summary>
        /// <param name="x"> X-coordinate of the top left point of the area, in pixels. </param>
        /// <param name="y"> Y-coordinate of the top left point of the area, in pixels. </param>
        /// <param name="width"> Width of the area, in pixels. </param>
        /// <param name="height"> Height of the area, in pixels. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ImageBoundingBox(int x, int y, int width, int height, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            X = x;
            Y = y;
            Width = width;
            Height = height;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> X-coordinate of the top left point of the area, in pixels. </summary>
        public int X { get; }

        /// <summary> Y-coordinate of the top left point of the area, in pixels. </summary>
        public int Y { get; }

        /// <summary> Width of the area, in pixels. </summary>
        public int Width { get; }

        /// <summary> Height of the area, in pixels. </summary>
        public int Height { get; }
    }
}
