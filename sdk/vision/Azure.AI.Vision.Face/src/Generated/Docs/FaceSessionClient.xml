<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateLivenessSessionAsync(CreateLivenessSessionContent,CancellationToken)">
      <example>
This sample shows how to call CreateLivenessSessionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

CreateLivenessSessionContent createLivenessSessionContent = new CreateLivenessSessionContent(LivenessOperationMode.Passive);
Response<CreateLivenessSessionResult> response = await client.CreateLivenessSessionAsync(createLivenessSessionContent);
]]></code>
This sample shows how to call CreateLivenessSessionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

CreateLivenessSessionContent createLivenessSessionContent = new CreateLivenessSessionContent(LivenessOperationMode.Passive)
{
    SendResultsToClient = true,
    DeviceCorrelationIdSetInClient = true,
    DeviceCorrelationId = "<deviceCorrelationId>",
    AuthTokenTimeToLiveInSeconds = 1234,
};
Response<CreateLivenessSessionResult> response = await client.CreateLivenessSessionAsync(createLivenessSessionContent);
]]></code></example>
    </member>
    <member name="CreateLivenessSession(CreateLivenessSessionContent,CancellationToken)">
      <example>
This sample shows how to call CreateLivenessSession.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

CreateLivenessSessionContent createLivenessSessionContent = new CreateLivenessSessionContent(LivenessOperationMode.Passive);
Response<CreateLivenessSessionResult> response = client.CreateLivenessSession(createLivenessSessionContent);
]]></code>
This sample shows how to call CreateLivenessSession with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

CreateLivenessSessionContent createLivenessSessionContent = new CreateLivenessSessionContent(LivenessOperationMode.Passive)
{
    SendResultsToClient = true,
    DeviceCorrelationIdSetInClient = true,
    DeviceCorrelationId = "<deviceCorrelationId>",
    AuthTokenTimeToLiveInSeconds = 1234,
};
Response<CreateLivenessSessionResult> response = client.CreateLivenessSession(createLivenessSessionContent);
]]></code></example>
    </member>
    <member name="CreateLivenessSessionAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLivenessSessionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    livenessOperationMode = "Passive",
});
Response response = await client.CreateLivenessSessionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code>
This sample shows how to call CreateLivenessSessionAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    livenessOperationMode = "Passive",
    sendResultsToClient = true,
    deviceCorrelationIdSetInClient = true,
    deviceCorrelationId = "<deviceCorrelationId>",
    authTokenTimeToLiveInSeconds = 1234,
});
Response response = await client.CreateLivenessSessionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code></example>
    </member>
    <member name="CreateLivenessSession(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLivenessSession and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    livenessOperationMode = "Passive",
});
Response response = client.CreateLivenessSession(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code>
This sample shows how to call CreateLivenessSession with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    livenessOperationMode = "Passive",
    sendResultsToClient = true,
    deviceCorrelationIdSetInClient = true,
    deviceCorrelationId = "<deviceCorrelationId>",
    authTokenTimeToLiveInSeconds = 1234,
});
Response response = client.CreateLivenessSession(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code></example>
    </member>
    <member name="DeleteLivenessSessionAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteLivenessSessionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.DeleteLivenessSessionAsync("<sessionId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteLivenessSessionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.DeleteLivenessSessionAsync("<sessionId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteLivenessSession(string,RequestContext)">
      <example>
This sample shows how to call DeleteLivenessSession.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.DeleteLivenessSession("<sessionId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteLivenessSession with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.DeleteLivenessSession("<sessionId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLivenessSessionResultAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionResultAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<LivenessSession> response = await client.GetLivenessSessionResultAsync("<sessionId>");
]]></code>
This sample shows how to call GetLivenessSessionResultAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<LivenessSession> response = await client.GetLivenessSessionResultAsync("<sessionId>");
]]></code></example>
    </member>
    <member name="GetLivenessSessionResult(string,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionResult.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<LivenessSession> response = client.GetLivenessSessionResult("<sessionId>");
]]></code>
This sample shows how to call GetLivenessSessionResult with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<LivenessSession> response = client.GetLivenessSessionResult("<sessionId>");
]]></code></example>
    </member>
    <member name="GetLivenessSessionResultAsync(string,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionResultAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionResultAsync("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetLivenessSessionResultAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionResultAsync("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("livenessDecision").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("fileName").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("timeOffsetWithinFile").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("imageType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("modelVersionUsed").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("qualityForRecognition").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("matchConfidence").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("isIdentical").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessionResult(string,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionResult and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessSessionResult("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetLivenessSessionResult with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessSessionResult("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("livenessDecision").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("fileName").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("timeOffsetWithinFile").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("imageType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("modelVersionUsed").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("qualityForRecognition").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("matchConfidence").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("isIdentical").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessionsAsync(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessSessionsAsync();
]]></code>
This sample shows how to call GetLivenessSessionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessSessionsAsync(start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessSessions(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessions.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessSessions();
]]></code>
This sample shows how to call GetLivenessSessions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessSessions(start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessSessionsAsync(string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionsAsync(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
]]></code>
This sample shows how to call GetLivenessSessionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionsAsync("<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessions(string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessSessions(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
]]></code>
This sample shows how to call GetLivenessSessions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessSessions("<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessionAuditEntriesAsync(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionAuditEntriesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>");
]]></code>
This sample shows how to call GetLivenessSessionAuditEntriesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessSessionAuditEntries(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionAuditEntries.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessSessionAuditEntries("<sessionId>");
]]></code>
This sample shows how to call GetLivenessSessionAuditEntries with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessSessionAuditEntries("<sessionId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessSessionAuditEntriesAsync(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionAuditEntriesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code>
This sample shows how to call GetLivenessSessionAuditEntriesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("livenessDecision").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("fileName").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("timeOffsetWithinFile").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("imageType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("modelVersionUsed").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("qualityForRecognition").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("matchConfidence").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("isIdentical").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessionAuditEntries(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionAuditEntries and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessSessionAuditEntries("<sessionId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code>
This sample shows how to call GetLivenessSessionAuditEntries with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessSessionAuditEntries("<sessionId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("livenessDecision").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("fileName").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("timeOffsetWithinFile").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("imageType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("modelVersionUsed").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("qualityForRecognition").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("matchConfidence").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("isIdentical").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="DeleteLivenessWithVerifySessionAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteLivenessWithVerifySessionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.DeleteLivenessWithVerifySessionAsync("<sessionId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteLivenessWithVerifySessionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.DeleteLivenessWithVerifySessionAsync("<sessionId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteLivenessWithVerifySession(string,RequestContext)">
      <example>
This sample shows how to call DeleteLivenessWithVerifySession.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.DeleteLivenessWithVerifySession("<sessionId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteLivenessWithVerifySession with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.DeleteLivenessWithVerifySession("<sessionId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionResultAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionResultAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<LivenessWithVerifySession> response = await client.GetLivenessWithVerifySessionResultAsync("<sessionId>");
]]></code>
This sample shows how to call GetLivenessWithVerifySessionResultAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<LivenessWithVerifySession> response = await client.GetLivenessWithVerifySessionResultAsync("<sessionId>");
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionResult(string,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionResult.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<LivenessWithVerifySession> response = client.GetLivenessWithVerifySessionResult("<sessionId>");
]]></code>
This sample shows how to call GetLivenessWithVerifySessionResult with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<LivenessWithVerifySession> response = client.GetLivenessWithVerifySessionResult("<sessionId>");
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionResultAsync(string,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionResultAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionResultAsync("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionResultAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionResultAsync("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("livenessDecision").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("fileName").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("timeOffsetWithinFile").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("imageType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("modelVersionUsed").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("qualityForRecognition").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("matchConfidence").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("isIdentical").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionResult(string,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionResult and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessionResult("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionResult with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessionResult("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("livenessDecision").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("fileName").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("timeOffsetWithinFile").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("imageType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("modelVersionUsed").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("qualityForRecognition").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("matchConfidence").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("isIdentical").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionsAsync(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessWithVerifySessionsAsync();
]]></code>
This sample shows how to call GetLivenessWithVerifySessionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessWithVerifySessionsAsync(start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessions(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessions.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessWithVerifySessions();
]]></code>
This sample shows how to call GetLivenessWithVerifySessions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessWithVerifySessions(start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionsAsync(string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionsAsync(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionsAsync("<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessions(string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessions(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessions("<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAuditEntriesAsync(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAuditEntriesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>");
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAuditEntriesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAuditEntries(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAuditEntries.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>");
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAuditEntries with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAuditEntriesAsync(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAuditEntriesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAuditEntriesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("livenessDecision").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("fileName").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("timeOffsetWithinFile").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("imageType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("modelVersionUsed").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("qualityForRecognition").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("matchConfidence").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("isIdentical").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAuditEntries(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAuditEntries and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAuditEntries with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FaceSessionClient client = new FaceSessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("livenessDecision").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("fileName").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("timeOffsetWithinFile").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("target").GetProperty("imageType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("modelVersionUsed").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("top").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("left").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("width").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("faceRectangle").GetProperty("height").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("verifyImage").GetProperty("qualityForRecognition").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("matchConfidence").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("verifyResult").GetProperty("isIdentical").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code></example>
    </member>
  </members>
</doc>