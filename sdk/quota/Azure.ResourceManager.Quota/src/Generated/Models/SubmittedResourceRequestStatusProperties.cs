// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Quota.Models
{
    /// <summary> The SubmittedResourceRequestStatusProperties. </summary>
    public partial class SubmittedResourceRequestStatusProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SubmittedResourceRequestStatusProperties"/>. </summary>
        public SubmittedResourceRequestStatusProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SubmittedResourceRequestStatusProperties"/>. </summary>
        /// <param name="requestedResource"> Requested Resource. </param>
        /// <param name="requestSubmitOn"> The request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="provisioningState"> Request status. </param>
        /// <param name="faultCode"> Details of the failure. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SubmittedResourceRequestStatusProperties(GroupQuotaRequestBase requestedResource, DateTimeOffset? requestSubmitOn, RequestState? provisioningState, string faultCode, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            RequestedResource = requestedResource;
            RequestSubmitOn = requestSubmitOn;
            ProvisioningState = provisioningState;
            FaultCode = faultCode;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Requested Resource. </summary>
        internal GroupQuotaRequestBase RequestedResource { get; set; }
        /// <summary> Gets or sets the requested resource properties. </summary>
        public GroupQuotaRequestBaseProperties RequestedResourceProperties
        {
            get => RequestedResource is null ? default : RequestedResource.Properties;
            set
            {
                if (RequestedResource is null)
                    RequestedResource = new GroupQuotaRequestBase();
                RequestedResource.Properties = value;
            }
        }

        /// <summary> The request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset? RequestSubmitOn { get; }
        /// <summary> Request status. </summary>
        public RequestState? ProvisioningState { get; }
        /// <summary> Details of the failure. </summary>
        public string FaultCode { get; }
    }
}
