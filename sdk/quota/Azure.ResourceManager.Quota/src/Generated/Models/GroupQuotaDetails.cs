// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Quota.Models
{
    /// <summary> Group Quota details. </summary>
    public partial class GroupQuotaDetails
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="GroupQuotaDetails"/>. </summary>
        public GroupQuotaDetails()
        {
        }

        /// <summary> Initializes a new instance of <see cref="GroupQuotaDetails"/>. </summary>
        /// <param name="resourceName"> The resource name, such as SKU name. </param>
        /// <param name="limit"> The current Group Quota Limit at the parentId level. </param>
        /// <param name="comment"> Any comment related to quota request. </param>
        /// <param name="unit"> The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation. </param>
        /// <param name="name"> Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response. </param>
        /// <param name="availableLimit"> The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s). </param>
        /// <param name="allocatedToSubscriptions"> Quota allocated to subscriptions. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal GroupQuotaDetails(string resourceName, long? limit, string comment, string unit, GroupQuotaDetailsName name, long? availableLimit, AllocatedQuotaToSubscriptionList allocatedToSubscriptions, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ResourceName = resourceName;
            Limit = limit;
            Comment = comment;
            Unit = unit;
            Name = name;
            AvailableLimit = availableLimit;
            AllocatedToSubscriptions = allocatedToSubscriptions;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The resource name, such as SKU name. </summary>
        public string ResourceName { get; set; }

        /// <summary> The current Group Quota Limit at the parentId level. </summary>
        public long? Limit { get; set; }

        /// <summary> Any comment related to quota request. </summary>
        public string Comment { get; set; }

        /// <summary> The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation. </summary>
        public string Unit { get; }

        /// <summary> Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response. </summary>
        internal GroupQuotaDetailsName Name { get; }

        /// <summary> The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s). </summary>
        public long? AvailableLimit { get; }

        /// <summary> Quota allocated to subscriptions. </summary>
        internal AllocatedQuotaToSubscriptionList AllocatedToSubscriptions { get; }

        /// <summary> Resource name. </summary>
        public string Value
        {
            get
            {
                return Name.Value;
            }
        }

        /// <summary> Resource display name. </summary>
        public string LocalizedValue
        {
            get
            {
                return Name.LocalizedValue;
            }
        }

        /// <summary> List of Group Quota Limit allocated to subscriptions. </summary>
        public IList<SubscriptionAllocatedQuota> AllocatedToSubscriptionsValue
        {
            get
            {
                return AllocatedToSubscriptions.Value;
            }
        }
    }
}
