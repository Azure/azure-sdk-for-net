// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Quota.Models
{
    /// <summary> Resource details with usages and GroupQuota. </summary>
    public partial class GroupQuotaUsagesBase
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="GroupQuotaUsagesBase"/>. </summary>
        internal GroupQuotaUsagesBase()
        {
        }

        /// <summary> Initializes a new instance of <see cref="GroupQuotaUsagesBase"/>. </summary>
        /// <param name="name"> Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response. </param>
        /// <param name="limit"> Quota/limits for the resource. </param>
        /// <param name="usages"> Usages for the resource. </param>
        /// <param name="unit"> Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal GroupQuotaUsagesBase(GroupQuotaUsagesBaseName name, long? limit, long? usages, string unit, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Limit = limit;
            Usages = usages;
            Unit = unit;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response. </summary>
        internal GroupQuotaUsagesBaseName Name { get; }

        /// <summary> Quota/limits for the resource. </summary>
        public long? Limit { get; }

        /// <summary> Usages for the resource. </summary>
        public long? Usages { get; }

        /// <summary> Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values. </summary>
        public string Unit { get; }

        /// <summary> Resource name. </summary>
        public string Value
        {
            get
            {
                return Name.Value;
            }
        }

        /// <summary> Resource display name. </summary>
        public string LocalizedValue
        {
            get
            {
                return Name.LocalizedValue;
            }
        }
    }
}
