// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Quota.Models
{
    /// <summary> The new quota request allocated to subscription. </summary>
    public partial class QuotaAllocationRequestBase
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="QuotaAllocationRequestBase"/>. </summary>
        public QuotaAllocationRequestBase()
        {
        }

        /// <summary> Initializes a new instance of <see cref="QuotaAllocationRequestBase"/>. </summary>
        /// <param name="properties"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal QuotaAllocationRequestBase(QuotaAllocationRequestBaseProperties properties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Properties = properties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets or sets the Properties. </summary>
        internal QuotaAllocationRequestBaseProperties Properties { get; set; }

        /// <summary> The new quota limit for the subscription. The incremental quota will be allocated from pre-approved group quota. </summary>
        public long? Limit
        {
            get
            {
                return Properties is null ? default : Properties.Limit;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new QuotaAllocationRequestBaseProperties();
                }
                Properties.Limit = value.Value;
            }
        }

        /// <summary> The location for which the subscription is allocated. </summary>
        public string Region
        {
            get
            {
                return Properties is null ? default : Properties.Region;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new QuotaAllocationRequestBaseProperties();
                }
                Properties.Region = value;
            }
        }

        /// <summary> Resource name. </summary>
        public string Value
        {
            get
            {
                return Properties is null ? default : Properties.Value;
            }
        }

        /// <summary> Resource display name. </summary>
        public string LocalizedValue
        {
            get
            {
                return Properties is null ? default : Properties.LocalizedValue;
            }
        }
    }
}
