// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Quota
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// QuotaOperations operations.
    /// </summary>
    public partial interface IQuotaOperations
    {
        /// <summary>
        /// Get the quota limit of a resource. The response can be used to
        /// determine the remaining quota to calculate a new quota limit that
        /// can be submitted with a PUT request.
        /// </summary>
        /// <param name='resourceName'>
        /// Resource name for a given resource provider. For example:
        /// - SKU name for Microsoft.Compute
        /// - SKU or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// For Microsoft.Network PublicIPAddresses.
        /// </param>
        /// <param name='scope'>
        /// The target Azure resource URI. For example,
        /// `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
        /// This is the target Azure resource URI for the List GET operation.
        /// If a `{resourceName}` is added after `/quotas`, then it's the
        /// target Azure resource URI in the GET operation for the specific
        /// resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<CurrentQuotaLimitBase,QuotaGetHeaders>> GetWithHttpMessagesAsync(string resourceName, string scope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create or update the quota limit for the specified resource with
        /// the requested value. To update the quota, follow these steps:
        /// 1. Use the GET operation for quotas and usages to determine how
        /// much quota remains for the specific resource and to calculate the
        /// new quota limit. These steps are detailed in [this
        /// example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).
        /// 2. Use this PUT operation to update the quota limit. Please check
        /// the URI in location header for the detailed status of the request.
        /// </summary>
        /// <param name='resourceName'>
        /// Resource name for a given resource provider. For example:
        /// - SKU name for Microsoft.Compute
        /// - SKU or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// For Microsoft.Network PublicIPAddresses.
        /// </param>
        /// <param name='scope'>
        /// The target Azure resource URI. For example,
        /// `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
        /// This is the target Azure resource URI for the List GET operation.
        /// If a `{resourceName}` is added after `/quotas`, then it's the
        /// target Azure resource URI in the GET operation for the specific
        /// resource.
        /// </param>
        /// <param name='properties'>
        /// Quota properties for the specified resource, based on the API
        /// called, Quotas or Usages.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<CurrentQuotaLimitBase>> CreateOrUpdateWithHttpMessagesAsync(string resourceName, string scope, QuotaProperties properties = default(QuotaProperties), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the quota limit for a specific resource to the specified
        /// value:
        /// 1. Use the Usages-GET and Quota-GET operations to determine the
        /// remaining quota for the specific resource and to calculate the new
        /// quota limit. These steps are detailed in [this
        /// example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).
        /// 2. Use this PUT operation to update the quota limit. Please check
        /// the URI in location header for the detailed status of the request.
        /// </summary>
        /// <param name='resourceName'>
        /// Resource name for a given resource provider. For example:
        /// - SKU name for Microsoft.Compute
        /// - SKU or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// For Microsoft.Network PublicIPAddresses.
        /// </param>
        /// <param name='scope'>
        /// The target Azure resource URI. For example,
        /// `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
        /// This is the target Azure resource URI for the List GET operation.
        /// If a `{resourceName}` is added after `/quotas`, then it's the
        /// target Azure resource URI in the GET operation for the specific
        /// resource.
        /// </param>
        /// <param name='properties'>
        /// Quota properties for the specified resource, based on the API
        /// called, Quotas or Usages.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<CurrentQuotaLimitBase>> UpdateWithHttpMessagesAsync(string resourceName, string scope, QuotaProperties properties = default(QuotaProperties), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a list of current quota limits of all resources for the
        /// specified scope. The response from this GET operation can be
        /// leveraged to submit requests to update a quota.
        /// </summary>
        /// <param name='scope'>
        /// The target Azure resource URI. For example,
        /// `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
        /// This is the target Azure resource URI for the List GET operation.
        /// If a `{resourceName}` is added after `/quotas`, then it's the
        /// target Azure resource URI in the GET operation for the specific
        /// resource.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<CurrentQuotaLimitBase>,QuotaListHeaders>> ListWithHttpMessagesAsync(string scope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create or update the quota limit for the specified resource with
        /// the requested value. To update the quota, follow these steps:
        /// 1. Use the GET operation for quotas and usages to determine how
        /// much quota remains for the specific resource and to calculate the
        /// new quota limit. These steps are detailed in [this
        /// example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).
        /// 2. Use this PUT operation to update the quota limit. Please check
        /// the URI in location header for the detailed status of the request.
        /// </summary>
        /// <param name='resourceName'>
        /// Resource name for a given resource provider. For example:
        /// - SKU name for Microsoft.Compute
        /// - SKU or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// For Microsoft.Network PublicIPAddresses.
        /// </param>
        /// <param name='scope'>
        /// The target Azure resource URI. For example,
        /// `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
        /// This is the target Azure resource URI for the List GET operation.
        /// If a `{resourceName}` is added after `/quotas`, then it's the
        /// target Azure resource URI in the GET operation for the specific
        /// resource.
        /// </param>
        /// <param name='properties'>
        /// Quota properties for the specified resource, based on the API
        /// called, Quotas or Usages.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<CurrentQuotaLimitBase>> BeginCreateOrUpdateWithHttpMessagesAsync(string resourceName, string scope, QuotaProperties properties = default(QuotaProperties), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the quota limit for a specific resource to the specified
        /// value:
        /// 1. Use the Usages-GET and Quota-GET operations to determine the
        /// remaining quota for the specific resource and to calculate the new
        /// quota limit. These steps are detailed in [this
        /// example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).
        /// 2. Use this PUT operation to update the quota limit. Please check
        /// the URI in location header for the detailed status of the request.
        /// </summary>
        /// <param name='resourceName'>
        /// Resource name for a given resource provider. For example:
        /// - SKU name for Microsoft.Compute
        /// - SKU or TotalLowPriorityCores for
        /// Microsoft.MachineLearningServices
        /// For Microsoft.Network PublicIPAddresses.
        /// </param>
        /// <param name='scope'>
        /// The target Azure resource URI. For example,
        /// `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
        /// This is the target Azure resource URI for the List GET operation.
        /// If a `{resourceName}` is added after `/quotas`, then it's the
        /// target Azure resource URI in the GET operation for the specific
        /// resource.
        /// </param>
        /// <param name='properties'>
        /// Quota properties for the specified resource, based on the API
        /// called, Quotas or Usages.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<CurrentQuotaLimitBase>> BeginUpdateWithHttpMessagesAsync(string resourceName, string scope, QuotaProperties properties = default(QuotaProperties), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a list of current quota limits of all resources for the
        /// specified scope. The response from this GET operation can be
        /// leveraged to submit requests to update a quota.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ExceptionResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<CurrentQuotaLimitBase>,QuotaListHeaders>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
