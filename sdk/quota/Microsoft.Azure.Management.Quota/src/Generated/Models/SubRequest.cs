// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Quota.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Request property.
    /// </summary>
    public partial class SubRequest
    {
        /// <summary>
        /// Initializes a new instance of the SubRequest class.
        /// </summary>
        public SubRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubRequest class.
        /// </summary>
        /// <param name="name">Resource name.</param>
        /// <param name="resourceType">Resource type for which the quota
        /// properties were requested.</param>
        /// <param name="unit"> Quota limit units, such as Count and Bytes.
        /// When requesting quota, use the **unit** value returned in the GET
        /// response in the request body of your PUT operation.</param>
        /// <param name="provisioningState">The quota request status. Possible
        /// values include: 'Accepted', 'Invalid', 'Succeeded', 'Failed',
        /// 'InProgress'</param>
        /// <param name="message">User-friendly status message.</param>
        /// <param name="subRequestId">Quota request ID.</param>
        /// <param name="limit">Resource quota limit properties.</param>
        public SubRequest(ResourceName name = default(ResourceName), string resourceType = default(string), string unit = default(string), string provisioningState = default(string), string message = default(string), string subRequestId = default(string), LimitJsonObject limit = default(LimitJsonObject))
        {
            Name = name;
            ResourceType = resourceType;
            Unit = unit;
            ProvisioningState = provisioningState;
            Message = message;
            SubRequestId = subRequestId;
            Limit = limit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public ResourceName Name { get; set; }

        /// <summary>
        /// Gets resource type for which the quota properties were requested.
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; private set; }

        /// <summary>
        /// Gets or sets  Quota limit units, such as Count and Bytes. When
        /// requesting quota, use the **unit** value returned in the GET
        /// response in the request body of your PUT operation.
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets the quota request status. Possible values include:
        /// 'Accepted', 'Invalid', 'Succeeded', 'Failed', 'InProgress'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets user-friendly status message.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; private set; }

        /// <summary>
        /// Gets quota request ID.
        /// </summary>
        [JsonProperty(PropertyName = "subRequestId")]
        public string SubRequestId { get; private set; }

        /// <summary>
        /// Gets or sets resource quota limit properties.
        /// </summary>
        [JsonProperty(PropertyName = "limit")]
        public LimitJsonObject Limit { get; set; }

    }
}
