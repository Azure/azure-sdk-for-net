// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridCompute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the properties of a Hybrid Compute Operation Value Display.
    /// </summary>
    public partial class OperationValueDisplayModel
    {
        /// <summary>
        /// Initializes a new instance of the OperationValueDisplayModel class.
        /// </summary>
        public OperationValueDisplayModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationValueDisplayModel class.
        /// </summary>
        /// <param name="operation">The display name of the compute
        /// operation.</param>
        /// <param name="resource">The display name of the resource the
        /// operation applies to.</param>
        /// <param name="description">The description of the operation.</param>
        /// <param name="provider">The resource provider for the
        /// operation.</param>
        public OperationValueDisplayModel(string operation = default(string), string resource = default(string), string description = default(string), string provider = default(string))
        {
            Operation = operation;
            Resource = resource;
            Description = description;
            Provider = provider;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the display name of the compute operation.
        /// </summary>
        [JsonProperty(PropertyName = "operation")]
        public string Operation { get; private set; }

        /// <summary>
        /// Gets the display name of the resource the operation applies to.
        /// </summary>
        [JsonProperty(PropertyName = "resource")]
        public string Resource { get; private set; }

        /// <summary>
        /// Gets the description of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets the resource provider for the operation.
        /// </summary>
        [JsonProperty(PropertyName = "provider")]
        public string Provider { get; private set; }

    }
}
