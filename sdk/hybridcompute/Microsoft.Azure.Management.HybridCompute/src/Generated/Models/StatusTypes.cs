// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridCompute.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for StatusTypes.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StatusTypes
    {
        [EnumMember(Value = "Connected")]
        Connected,
        [EnumMember(Value = "Disconnected")]
        Disconnected,
        [EnumMember(Value = "Error")]
        Error
    }
    internal static class StatusTypesEnumExtension
    {
        internal static string ToSerializedValue(this StatusTypes? value)
        {
            return value == null ? null : ((StatusTypes)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this StatusTypes value)
        {
            switch( value )
            {
                case StatusTypes.Connected:
                    return "Connected";
                case StatusTypes.Disconnected:
                    return "Disconnected";
                case StatusTypes.Error:
                    return "Error";
            }
            return null;
        }

        internal static StatusTypes? ParseStatusTypes(this string value)
        {
            switch( value )
            {
                case "Connected":
                    return StatusTypes.Connected;
                case "Disconnected":
                    return StatusTypes.Disconnected;
                case "Error":
                    return StatusTypes.Error;
            }
            return null;
        }
    }
}
