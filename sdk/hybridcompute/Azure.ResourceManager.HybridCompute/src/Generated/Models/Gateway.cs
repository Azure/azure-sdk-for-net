// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.HybridCompute.Models
{
    /// <summary> Describes an Arc Gateway. </summary>
    public partial class Gateway : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="Gateway"/>. </summary>
        /// <param name="location"> The geo-location where the resource lives. </param>
        internal Gateway(AzureLocation location)
        {
            AllowedFeatures = new ChangeTrackingList<string>();
            Tags = new ChangeTrackingDictionary<string, string>();
            Location = location;
        }

        /// <summary> Initializes a new instance of <see cref="Gateway"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        /// <param name="gatewayId"> A unique, immutable, identifier for the Gateway. </param>
        /// <param name="gatewayType"> The type of the Gateway resource. </param>
        /// <param name="gatewayEndpoint"> The endpoint fqdn for the Gateway. </param>
        /// <param name="allowedFeatures"> Specifies the list of features that are enabled for this Gateway. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal Gateway(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, HybridComputeProvisioningState? provisioningState, string gatewayId, GatewayType? gatewayType, string gatewayEndpoint, IReadOnlyList<string> allowedFeatures, IReadOnlyDictionary<string, string> tags, AzureLocation location, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            GatewayId = gatewayId;
            GatewayType = gatewayType;
            GatewayEndpoint = gatewayEndpoint;
            AllowedFeatures = allowedFeatures;
            Tags = tags;
            Location = location;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="Gateway"/> for deserialization. </summary>
        internal Gateway()
        {
        }

        /// <summary> The provisioning state, which only appears in the response. </summary>
        public HybridComputeProvisioningState? ProvisioningState { get; }
        /// <summary> A unique, immutable, identifier for the Gateway. </summary>
        public string GatewayId { get; }
        /// <summary> The type of the Gateway resource. </summary>
        public GatewayType? GatewayType { get; }
        /// <summary> The endpoint fqdn for the Gateway. </summary>
        public string GatewayEndpoint { get; }
        /// <summary> Specifies the list of features that are enabled for this Gateway. </summary>
        public IReadOnlyList<string> AllowedFeatures { get; }
        /// <summary> Resource tags. </summary>
        public IReadOnlyDictionary<string, string> Tags { get; }
        /// <summary> The geo-location where the resource lives. </summary>
        public AzureLocation Location { get; }
    }
}
