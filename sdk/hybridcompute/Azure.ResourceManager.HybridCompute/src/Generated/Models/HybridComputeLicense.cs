// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.HybridCompute.Models
{
    /// <summary> Describes a license in a hybrid machine. </summary>
    public partial class HybridComputeLicense : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="HybridComputeLicense"/>. </summary>
        /// <param name="location"> The location. </param>
        public HybridComputeLicense(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of <see cref="HybridComputeLicense"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        /// <param name="tenantId"> Describes the tenant id. </param>
        /// <param name="licenseType"> The type of the license resource. </param>
        /// <param name="licenseDetails"> Describes the properties of a License. </param>
        internal HybridComputeLicense(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, HybridComputeProvisioningState? provisioningState, Guid? tenantId, HybridComputeLicenseType? licenseType, HybridComputeLicenseDetails licenseDetails) : base(id, name, resourceType, systemData, tags, location)
        {
            ProvisioningState = provisioningState;
            TenantId = tenantId;
            LicenseType = licenseType;
            LicenseDetails = licenseDetails;
        }

        /// <summary> The provisioning state, which only appears in the response. </summary>
        public HybridComputeProvisioningState? ProvisioningState { get; }
        /// <summary> Describes the tenant id. </summary>
        public Guid? TenantId { get; set; }
        /// <summary> The type of the license resource. </summary>
        public HybridComputeLicenseType? LicenseType { get; set; }
        /// <summary> Describes the properties of a License. </summary>
        public HybridComputeLicenseDetails LicenseDetails { get; set; }
    }
}
