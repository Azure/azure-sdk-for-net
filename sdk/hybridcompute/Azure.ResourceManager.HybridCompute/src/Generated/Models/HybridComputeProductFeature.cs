// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.HybridCompute.Models
{
    /// <summary> Product Feature. </summary>
    public partial class HybridComputeProductFeature
    {
        /// <summary> Initializes a new instance of <see cref="HybridComputeProductFeature"/>. </summary>
        public HybridComputeProductFeature()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HybridComputeProductFeature"/>. </summary>
        /// <param name="name"> Product feature name. </param>
        /// <param name="subscriptionStatus"> Indicates the current status of the product features. </param>
        /// <param name="billingStartOn"> The timestamp in UTC when the billing starts. </param>
        /// <param name="enrollmentOn"> The timestamp in UTC when the user enrolls the feature. </param>
        /// <param name="disenrollmentOn"> The timestamp in UTC when the user disenrolled the feature. </param>
        internal HybridComputeProductFeature(string name, LicenseProfileSubscriptionStatus? subscriptionStatus, DateTimeOffset? billingStartOn, DateTimeOffset? enrollmentOn, DateTimeOffset? disenrollmentOn)
        {
            Name = name;
            SubscriptionStatus = subscriptionStatus;
            BillingStartOn = billingStartOn;
            EnrollmentOn = enrollmentOn;
            DisenrollmentOn = disenrollmentOn;
        }

        /// <summary> Product feature name. </summary>
        public string Name { get; set; }
        /// <summary> Indicates the current status of the product features. </summary>
        public LicenseProfileSubscriptionStatus? SubscriptionStatus { get; set; }
        /// <summary> The timestamp in UTC when the billing starts. </summary>
        public DateTimeOffset? BillingStartOn { get; }
        /// <summary> The timestamp in UTC when the user enrolls the feature. </summary>
        public DateTimeOffset? EnrollmentOn { get; }
        /// <summary> The timestamp in UTC when the user disenrolled the feature. </summary>
        public DateTimeOffset? DisenrollmentOn { get; }
    }
}
