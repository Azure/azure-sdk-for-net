// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HybridCompute.Models
{
    public partial class AgentUpgrade : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DesiredVersion))
            {
                writer.WritePropertyName("desiredVersion"u8);
                writer.WriteStringValue(DesiredVersion);
            }
            if (Optional.IsDefined(CorrelationId))
            {
                writer.WritePropertyName("correlationId"u8);
                writer.WriteStringValue(CorrelationId);
            }
            if (Optional.IsDefined(EnableAutomaticUpgrade))
            {
                writer.WritePropertyName("enableAutomaticUpgrade"u8);
                writer.WriteBooleanValue(EnableAutomaticUpgrade.Value);
            }
            writer.WriteEndObject();
        }

        internal static AgentUpgrade DeserializeAgentUpgrade(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> desiredVersion = default;
            Optional<string> correlationId = default;
            Optional<bool> enableAutomaticUpgrade = default;
            Optional<string> lastAttemptTimestamp = default;
            Optional<LastAttemptStatusEnum> lastAttemptStatus = default;
            Optional<string> lastAttemptMessage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("desiredVersion"u8))
                {
                    desiredVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("correlationId"u8))
                {
                    correlationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("enableAutomaticUpgrade"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    enableAutomaticUpgrade = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("lastAttemptTimestamp"u8))
                {
                    lastAttemptTimestamp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastAttemptStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastAttemptStatus = new LastAttemptStatusEnum(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("lastAttemptMessage"u8))
                {
                    lastAttemptMessage = property.Value.GetString();
                    continue;
                }
            }
            return new AgentUpgrade(desiredVersion.Value, correlationId.Value, Optional.ToNullable(enableAutomaticUpgrade), lastAttemptTimestamp.Value, Optional.ToNullable(lastAttemptStatus), lastAttemptMessage.Value);
        }
    }
}
