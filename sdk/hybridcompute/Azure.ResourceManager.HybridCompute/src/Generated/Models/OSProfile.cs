// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.HybridCompute.Models
{
    /// <summary> Specifies the operating system settings for the hybrid machine. </summary>
    public partial class OSProfile
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="OSProfile"/>. </summary>
        public OSProfile()
        {
        }

        /// <summary> Initializes a new instance of <see cref="OSProfile"/>. </summary>
        /// <param name="computerName"> Specifies the host OS name of the hybrid machine. </param>
        /// <param name="windowsConfiguration"> Specifies the windows configuration for update management. </param>
        /// <param name="linuxConfiguration"> Specifies the linux configuration for update management. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal OSProfile(string computerName, OSProfileWindowsConfiguration windowsConfiguration, OSProfileLinuxConfiguration linuxConfiguration, Dictionary<string, BinaryData> rawData)
        {
            ComputerName = computerName;
            WindowsConfiguration = windowsConfiguration;
            LinuxConfiguration = linuxConfiguration;
            _rawData = rawData;
        }

        /// <summary> Specifies the host OS name of the hybrid machine. </summary>
        public string ComputerName { get; }
        /// <summary> Specifies the windows configuration for update management. </summary>
        public OSProfileWindowsConfiguration WindowsConfiguration { get; set; }
        /// <summary> Specifies the linux configuration for update management. </summary>
        public OSProfileLinuxConfiguration LinuxConfiguration { get; set; }
    }
}
