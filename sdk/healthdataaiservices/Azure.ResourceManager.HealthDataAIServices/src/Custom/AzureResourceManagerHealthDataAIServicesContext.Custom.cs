// <auto-generated/>

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using Azure.ResourceManager.HealthDataAIServices;
using Azure.ResourceManager.HealthDataAIServices.Models;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.HealthDataAIServices;

[ModelReaderWriterBuildable(typeof(DeidServiceData))]
[ModelReaderWriterBuildable(typeof(DeidServiceResource))]
[ModelReaderWriterBuildable(typeof(HealthDataAIServicesPrivateEndpointConnectionResource))]
[ModelReaderWriterBuildable(typeof(HealthDataAIServicesPrivateEndpointConnectionResourceData))]
[ModelReaderWriterBuildable(typeof(DeidServicePatch))]
[ModelReaderWriterBuildable(typeof(DeidPropertiesUpdate))]
[ModelReaderWriterBuildable(typeof(DeidServiceListResult))]
[ModelReaderWriterBuildable(typeof(DeidServiceProperties))]
[ModelReaderWriterBuildable(typeof(HealthDataAIServicesPrivateEndpointConnection))]
[ModelReaderWriterBuildable(typeof(HealthDataAIServicesPrivateLinkResourceData))]
[ModelReaderWriterBuildable(typeof(HealthDataAIServicesPrivateLinkResourceListResult))]
[ModelReaderWriterBuildable(typeof(HealthDataAIServicesPrivateLinkResourceProperties))]
[ModelReaderWriterBuildable(typeof(HealthDataAIServicesPrivateLinkServiceConnectionState))]
[ModelReaderWriterBuildable(typeof(PrivateEndpointConnectionProperties))]
[ModelReaderWriterBuildable(typeof(PrivateEndpointConnectionResourceListResult))]
public partial class AzureResourceManagerHealthDataAIServicesContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(SubResource), () => ArmContext.GetTypeBuilder(typeof(SubResource)));
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
    }
}
