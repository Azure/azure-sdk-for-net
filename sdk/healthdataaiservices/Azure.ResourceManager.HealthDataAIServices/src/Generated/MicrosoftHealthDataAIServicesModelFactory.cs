// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Microsoft.HealthDataAIServices;

namespace Microsoft.HealthDataAIServices.Models
{
    /// <summary> A factory class for creating instances of the models for mocking. </summary>
    public static partial class MicrosoftHealthDataAIServicesModelFactory
    {

        /// <summary> A HealthDataAIServicesProviderHub resource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="type"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="name"> The name of the deid service. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        /// <returns> A new <see cref="Models.DeidServiceData"/> instance for mocking. </returns>
        public static DeidServiceData DeidServiceData(ResourceIdentifier id = default, string @type = default, SystemData systemData = default, IDictionary<string, string> tags = default, string location = default, DeidServiceProperties properties = default, string name = default, ManagedServiceIdentity identity = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new DeidServiceData(
                id,
                @type,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties,
                name,
                identity);
        }

        /// <summary> Details of the HealthDataAIServices DeidService. </summary>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="serviceUrl"> Deid service url. </param>
        /// <param name="privateEndpointConnections"> List of private endpoint connections. </param>
        /// <param name="publicNetworkAccess"> Gets or sets allow or disallow public network access to resource. </param>
        /// <returns> A new <see cref="Models.DeidServiceProperties"/> instance for mocking. </returns>
        public static DeidServiceProperties DeidServiceProperties(HealthDataAIServicesProvisioningState? provisioningState = default, string serviceUrl = default, IEnumerable<PrivateEndpointConnection> privateEndpointConnections = default, HealthDataAIServicesPublicNetworkAccess? publicNetworkAccess = default)
        {
            privateEndpointConnections ??= new ChangeTrackingList<PrivateEndpointConnection>();

            return new DeidServiceProperties(provisioningState, serviceUrl, privateEndpointConnections?.ToList(), publicNetworkAccess, additionalBinaryDataProperties: null);
        }

        /// <summary> The private endpoint connection resource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The private endpoint connection properties. </param>
        /// <returns> A new <see cref="Models.PrivateEndpointConnection"/> instance for mocking. </returns>
        public static PrivateEndpointConnection PrivateEndpointConnection(ResourceIdentifier id = default, string name = default, string @type = default, SystemData systemData = default, PrivateEndpointConnectionProperties properties = default)
        {
            return new PrivateEndpointConnection(
                id,
                name,
                @type,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> Properties of the private endpoint connection. </summary>
        /// <param name="groupIds"> The group ids for the private endpoint resource. </param>
        /// <param name="privateEndpoint"> The private endpoint resource. </param>
        /// <param name="privateLinkServiceConnectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        /// <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
        /// <returns> A new <see cref="Models.PrivateEndpointConnectionProperties"/> instance for mocking. </returns>
        public static PrivateEndpointConnectionProperties PrivateEndpointConnectionProperties(IEnumerable<string> groupIds = default, PrivateEndpoint privateEndpoint = default, PrivateLinkServiceConnectionState privateLinkServiceConnectionState = default, PrivateEndpointConnectionProvisioningState? provisioningState = default)
        {
            groupIds ??= new ChangeTrackingList<string>();

            return new PrivateEndpointConnectionProperties(groupIds?.ToList(), privateEndpoint, privateLinkServiceConnectionState, provisioningState, additionalBinaryDataProperties: null);
        }

        /// <summary> The private endpoint resource. </summary>
        /// <param name="id"> The resource identifier of the private endpoint. </param>
        /// <returns> A new <see cref="Models.PrivateEndpoint"/> instance for mocking. </returns>
        public static PrivateEndpoint PrivateEndpoint(ResourceIdentifier id = default)
        {
            return new PrivateEndpoint(id, additionalBinaryDataProperties: null);
        }

        /// <summary> A collection of information about the state of the connection between service consumer and provider. </summary>
        /// <param name="status"> Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. </param>
        /// <param name="description"> The reason for approval/rejection of the connection. </param>
        /// <param name="actionsRequired"> A message indicating if changes on the service provider require any updates on the consumer. </param>
        /// <returns> A new <see cref="Models.PrivateLinkServiceConnectionState"/> instance for mocking. </returns>
        public static PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState(PrivateEndpointServiceConnectionStatus? status = default, string description = default, string actionsRequired = default)
        {
            return new PrivateLinkServiceConnectionState(status, description, actionsRequired, additionalBinaryDataProperties: null);
        }

        /// <summary> Holder for private endpoint connections. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="type"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="name"> The name of the private endpoint connection associated with the Azure resource. </param>
        /// <returns> A new <see cref="Models.HealthDataAIServicesPrivateEndpointConnectionResourceData"/> instance for mocking. </returns>
        public static HealthDataAIServicesPrivateEndpointConnectionResourceData HealthDataAIServicesPrivateEndpointConnectionResourceData(ResourceIdentifier id = default, string @type = default, SystemData systemData = default, PrivateEndpointConnectionProperties properties = default, string name = default)
        {
            return new HealthDataAIServicesPrivateEndpointConnectionResourceData(
                id,
                @type,
                systemData,
                additionalBinaryDataProperties: null,
                properties,
                name);
        }
    }
}
