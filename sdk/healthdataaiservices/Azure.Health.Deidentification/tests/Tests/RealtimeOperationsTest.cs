// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Health.Deidentification.Tests
{
    public class RealtimeOperationsTest : DeidentificationTestBase
    {
        public RealtimeOperationsTest(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        public async Task Realtime_ValidArguments_ReturnsExcepted()
        {
            DeidentificationClient client = GetDeidClient();

            string input = "Hello, my name is John Smith.";
            // TODO: Defaults should be set for these.
            DeidentificationContent content = new(input, DocumentDataType.PlainText, OperationType.Surrogate, StringIndexType.TextElementV8);

            // TODO: body should be changed to config
            DeidentificationResult result = await client.DeidentifyAsync(content);

            Assert.IsNull(result.TaggerResult, "On Surrogate Operation, expect TaggerResult to be null.");
            Assert.IsNotNull(result.OutputText, "On Surrogate Operation, expect OutputText to be not null.");
            Assert.IsTrue(result.OutputText.Length > 21, "Expected output text to be longer than the tag and a single character for each name token.");
            Assert.AreNotEqual(input, result.OutputText, "Expected output text to be different from input text.");
        }
    }
}
