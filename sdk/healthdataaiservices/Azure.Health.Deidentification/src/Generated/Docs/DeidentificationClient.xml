<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetJobAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentificationJob> response = await client.GetJobAsync("documents_smith_1");
]]></code></example>
    </member>
    <member name="GetJob(string,CancellationToken)">
      <example>
This sample shows how to call GetJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentificationJob> response = client.GetJob("documents_smith_1");
]]></code></example>
    </member>
    <member name="GetJobAsync(string,RequestContext)">
      <example>
This sample shows how to call GetJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.GetJobAsync("documents_smith_1", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="GetJob(string,RequestContext)">
      <example>
This sample shows how to call GetJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.GetJob("documents_smith_1", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="CancelJobAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentificationJob> response = await client.CancelJobAsync("documents_smith_1");
]]></code></example>
    </member>
    <member name="CancelJob(string,CancellationToken)">
      <example>
This sample shows how to call CancelJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentificationJob> response = client.CancelJob("documents_smith_1");
]]></code></example>
    </member>
    <member name="CancelJobAsync(string,RequestContext)">
      <example>
This sample shows how to call CancelJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.CancelJobAsync("documents_smith_1", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="CancelJob(string,RequestContext)">
      <example>
This sample shows how to call CancelJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.CancelJob("documents_smith_1", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="DeleteJobAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.DeleteJobAsync("documents_smith_1");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteJob(string,RequestContext)">
      <example>
This sample shows how to call DeleteJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.DeleteJob("documents_smith_1");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeidentifyAsync(DeidentificationContent,CancellationToken)">
      <example>
This sample shows how to call DeidentifyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentificationContent body = new DeidentificationContent("Hello my name is John Smith.")
{
    Operation = OperationType.Redact,
    DataType = DocumentDataType.Plaintext,
    RedactionFormat = "[{type}]",
};
Response<DeidentificationResult> response = await client.DeidentifyAsync(body);
]]></code></example>
    </member>
    <member name="Deidentify(DeidentificationContent,CancellationToken)">
      <example>
This sample shows how to call Deidentify.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentificationContent body = new DeidentificationContent("Hello my name is John Smith.")
{
    Operation = OperationType.Redact,
    DataType = DocumentDataType.Plaintext,
    RedactionFormat = "[{type}]",
};
Response<DeidentificationResult> response = client.Deidentify(body);
]]></code></example>
    </member>
    <member name="DeidentifyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call DeidentifyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    inputText = "Hello my name is John Smith.",
    operation = "Redact",
    dataType = "Plaintext",
    redactionFormat = "[{type}]",
});
Response response = await client.DeidentifyAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="Deidentify(RequestContent,RequestContext)">
      <example>
This sample shows how to call Deidentify and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    inputText = "Hello my name is John Smith.",
    operation = "Redact",
    dataType = "Plaintext",
    redactionFormat = "[{type}]",
});
Response response = client.Deidentify(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetJobsAsync(int?,string,CancellationToken)">
      <example>
This sample shows how to call GetJobsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (DeidentificationJob item in client.GetJobsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetJobs(int?,string,CancellationToken)">
      <example>
This sample shows how to call GetJobs.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (DeidentificationJob item in client.GetJobs())
{
}
]]></code></example>
    </member>
    <member name="GetJobsAsync(int?,string,RequestContext)">
      <example>
This sample shows how to call GetJobsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobsAsync(10, "K1JJRDpzOEtaQWZabUQrQUNBQUFBQUFBQUFBQT09I1JUOjEjVFJDOjEwI0ZQQzpBZ0VBQUFBTUFDUUFBQUFBQUE9PQ==", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobs(int?,string,RequestContext)">
      <example>
This sample shows how to call GetJobs and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (BinaryData item in client.GetJobs(10, "K1JJRDpzOEtaQWZabUQrQUNBQUFBQUFBQUFBQT09I1JUOjEjVFJDOjEwI0ZQQzpBZ0VBQUFBTUFDUUFBQUFBQUE9PQ==", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobDocumentsAsync(string,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetJobDocumentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (DocumentDetails item in client.GetJobDocumentsAsync("documents_smith_1"))
{
}
]]></code></example>
    </member>
    <member name="GetJobDocuments(string,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetJobDocuments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (DocumentDetails item in client.GetJobDocuments("documents_smith_1"))
{
}
]]></code></example>
    </member>
    <member name="GetJobDocumentsAsync(string,int?,string,RequestContext)">
      <example>
This sample shows how to call GetJobDocumentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobDocumentsAsync("documents_smith_1", 10, "K1JJRDpzOEtaQWZabUQrQUNBQUFBQUFBQUFBQT09I1JUOjEjVFJDOjEwI0ZQQzpBZ0VBQUFBTUFDUUFBQUFBQUE9PQ==", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("etag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobDocuments(string,int?,string,RequestContext)">
      <example>
This sample shows how to call GetJobDocuments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (BinaryData item in client.GetJobDocuments("documents_smith_1", 10, "K1JJRDpzOEtaQWZabUQrQUNBQUFBQUFBQUFBQT09I1JUOjEjVFJDOjEwI0ZQQzpBZ0VBQUFBTUFDUUFBQUFBQUE9PQ==", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("etag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code></example>
    </member>
    <member name="CreateJobAsync(WaitUntil,string,DeidentificationJob,CancellationToken)">
      <example>
This sample shows how to call CreateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentificationJob resource = new DeidentificationJob(new SourceStorageLocation(new Uri("https://blobtest.blob.core.windows.net/container?sp=r&st=2024-01-24T18:11:10Z&se=2024-01-25T02:11:10Z&spr=https&sv=2022-11-02&sr=c&sig=signature%3D"), "/documents")
{
    Extensions = { "*" },
}, new TargetStorageLocation(new Uri("https://blobtest.blob.core.windows.net/container?sp=r&st=2024-01-24T18:11:10Z&se=2024-01-25T02:11:10Z&spr=https&sv=2022-11-02&sr=c&sig=signature%3D"), "/documents"))
{
    Operation = OperationType.Redact,
    DataType = DocumentDataType.Plaintext,
    RedactionFormat = "[{type}]",
};
Operation<DeidentificationJob> operation = await client.CreateJobAsync(WaitUntil.Completed, "documents_smith_1", resource);
DeidentificationJob responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CreateJob(WaitUntil,string,DeidentificationJob,CancellationToken)">
      <example>
This sample shows how to call CreateJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentificationJob resource = new DeidentificationJob(new SourceStorageLocation(new Uri("https://blobtest.blob.core.windows.net/container?sp=r&st=2024-01-24T18:11:10Z&se=2024-01-25T02:11:10Z&spr=https&sv=2022-11-02&sr=c&sig=signature%3D"), "/documents")
{
    Extensions = { "*" },
}, new TargetStorageLocation(new Uri("https://blobtest.blob.core.windows.net/container?sp=r&st=2024-01-24T18:11:10Z&se=2024-01-25T02:11:10Z&spr=https&sv=2022-11-02&sr=c&sig=signature%3D"), "/documents"))
{
    Operation = OperationType.Redact,
    DataType = DocumentDataType.Plaintext,
    RedactionFormat = "[{type}]",
};
Operation<DeidentificationJob> operation = client.CreateJob(WaitUntil.Completed, "documents_smith_1", resource);
DeidentificationJob responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CreateJobAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sourceLocation = new
    {
        location = "https://blobtest.blob.core.windows.net/container?sp=r&st=2024-01-24T18:11:10Z&se=2024-01-25T02:11:10Z&spr=https&sv=2022-11-02&sr=c&sig=signature%3D",
        prefix = "/documents",
        extensions = new object[]
        {
            "*"
        },
    },
    targetLocation = new
    {
        location = "https://blobtest.blob.core.windows.net/container?sp=r&st=2024-01-24T18:11:10Z&se=2024-01-25T02:11:10Z&spr=https&sv=2022-11-02&sr=c&sig=signature%3D",
        prefix = "/documents",
    },
    operation = "Redact",
    dataType = "Plaintext",
    redactionFormat = "[{type}]",
    status = "NotStarted",
});
Operation<BinaryData> operation = await client.CreateJobAsync(WaitUntil.Completed, "documents_smith_1", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="CreateJob(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sourceLocation = new
    {
        location = "https://blobtest.blob.core.windows.net/container?sp=r&st=2024-01-24T18:11:10Z&se=2024-01-25T02:11:10Z&spr=https&sv=2022-11-02&sr=c&sig=signature%3D",
        prefix = "/documents",
        extensions = new object[]
        {
            "*"
        },
    },
    targetLocation = new
    {
        location = "https://blobtest.blob.core.windows.net/container?sp=r&st=2024-01-24T18:11:10Z&se=2024-01-25T02:11:10Z&spr=https&sv=2022-11-02&sr=c&sig=signature%3D",
        prefix = "/documents",
    },
    operation = "Redact",
    dataType = "Plaintext",
    redactionFormat = "[{type}]",
    status = "NotStarted",
});
Operation<BinaryData> operation = client.CreateJob(WaitUntil.Completed, "documents_smith_1", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
  </members>
</doc>