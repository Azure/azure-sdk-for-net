<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetJobAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentifyJob> response = await client.GetJobAsync("<name>");
]]></code>
This sample shows how to call GetJobAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentifyJob> response = await client.GetJobAsync("<name>");
]]></code></example>
    </member>
    <member name="GetJob(string,CancellationToken)">
      <example>
This sample shows how to call GetJob.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentifyJob> response = client.GetJob("<name>");
]]></code>
This sample shows how to call GetJob with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentifyJob> response = client.GetJob("<name>");
]]></code></example>
    </member>
    <member name="GetJobAsync(string,RequestContext)">
      <example>
This sample shows how to call GetJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.GetJobAsync("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code>
This sample shows how to call GetJobAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.GetJobAsync("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("redactionFormat").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("successful").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("canceled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("bytesProcessed").ToString());
]]></code></example>
    </member>
    <member name="GetJob(string,RequestContext)">
      <example>
This sample shows how to call GetJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.GetJob("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code>
This sample shows how to call GetJob with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.GetJob("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("redactionFormat").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("successful").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("canceled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("bytesProcessed").ToString());
]]></code></example>
    </member>
    <member name="CancelJobAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentifyJob> response = await client.CancelJobAsync("<name>");
]]></code>
This sample shows how to call CancelJobAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentifyJob> response = await client.CancelJobAsync("<name>");
]]></code></example>
    </member>
    <member name="CancelJob(string,CancellationToken)">
      <example>
This sample shows how to call CancelJob.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentifyJob> response = client.CancelJob("<name>");
]]></code>
This sample shows how to call CancelJob with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentifyJob> response = client.CancelJob("<name>");
]]></code></example>
    </member>
    <member name="CancelJobAsync(string,RequestContext)">
      <example>
This sample shows how to call CancelJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.CancelJobAsync("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code>
This sample shows how to call CancelJobAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.CancelJobAsync("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("redactionFormat").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("successful").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("canceled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("bytesProcessed").ToString());
]]></code></example>
    </member>
    <member name="CancelJob(string,RequestContext)">
      <example>
This sample shows how to call CancelJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.CancelJob("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code>
This sample shows how to call CancelJob with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.CancelJob("<name>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("redactionFormat").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("successful").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("canceled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("bytesProcessed").ToString());
]]></code></example>
    </member>
    <member name="DeleteJobAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.DeleteJobAsync("<name>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteJobAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.DeleteJobAsync("<name>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteJob(string,RequestContext)">
      <example>
This sample shows how to call DeleteJob.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.DeleteJob("<name>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteJob with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.DeleteJob("<name>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeidentifyAsync(DeidentifyConfig,CancellationToken)">
      <example>
This sample shows how to call DeidentifyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentifyConfig body = new DeidentifyConfig("<inputText>", DocumentDataType.PlainText, OperationType.Redact, StringIndexType.TextElementV8);
Response<DeidentifyResult> response = await client.DeidentifyAsync(body);
]]></code>
This sample shows how to call DeidentifyAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentifyConfig body = new DeidentifyConfig("<inputText>", DocumentDataType.PlainText, OperationType.Redact, StringIndexType.TextElementV8)
{
    RedactionFormat = "<redactionFormat>",
};
Response<DeidentifyResult> response = await client.DeidentifyAsync(body);
]]></code></example>
    </member>
    <member name="Deidentify(DeidentifyConfig,CancellationToken)">
      <example>
This sample shows how to call Deidentify.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentifyConfig body = new DeidentifyConfig("<inputText>", DocumentDataType.PlainText, OperationType.Redact, StringIndexType.TextElementV8);
Response<DeidentifyResult> response = client.Deidentify(body);
]]></code>
This sample shows how to call Deidentify with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentifyConfig body = new DeidentifyConfig("<inputText>", DocumentDataType.PlainText, OperationType.Redact, StringIndexType.TextElementV8)
{
    RedactionFormat = "<redactionFormat>",
};
Response<DeidentifyResult> response = client.Deidentify(body);
]]></code></example>
    </member>
    <member name="DeidentifyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call DeidentifyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    inputText = "<inputText>",
    dataType = "PlainText",
    operation = "Redact",
    stringIndexType = "TextElement_v8",
});
Response response = await client.DeidentifyAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call DeidentifyAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    inputText = "<inputText>",
    dataType = "PlainText",
    operation = "Redact",
    stringIndexType = "TextElement_v8",
    redactionFormat = "<redactionFormat>",
});
Response response = await client.DeidentifyAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("outputText").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("confidenceScore").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("stringIndexType").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("path").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="Deidentify(RequestContent,RequestContext)">
      <example>
This sample shows how to call Deidentify and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    inputText = "<inputText>",
    dataType = "PlainText",
    operation = "Redact",
    stringIndexType = "TextElement_v8",
});
Response response = client.Deidentify(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Deidentify with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    inputText = "<inputText>",
    dataType = "PlainText",
    operation = "Redact",
    stringIndexType = "TextElement_v8",
    redactionFormat = "<redactionFormat>",
});
Response response = client.Deidentify(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("outputText").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("offset").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("length").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("text").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("entities")[0].GetProperty("confidenceScore").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("stringIndexType").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("path").ToString());
Console.WriteLine(result.GetProperty("taggerResult").GetProperty("etag").ToString());
]]></code></example>
    </member>
    <member name="GetJobsAsync(int?,string,CancellationToken)">
      <example>
This sample shows how to call GetJobsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (DeidentifyJob item in client.GetJobsAsync())
{
}
]]></code>
This sample shows how to call GetJobsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (DeidentifyJob item in client.GetJobsAsync(maxpagesize: 1234, continuationToken: "<continuationToken>"))
{
}
]]></code></example>
    </member>
    <member name="GetJobs(int?,string,CancellationToken)">
      <example>
This sample shows how to call GetJobs.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (DeidentifyJob item in client.GetJobs())
{
}
]]></code>
This sample shows how to call GetJobs with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (DeidentifyJob item in client.GetJobs(maxpagesize: 1234, continuationToken: "<continuationToken>"))
{
}
]]></code></example>
    </member>
    <member name="GetJobsAsync(int?,string,RequestContext)">
      <example>
This sample shows how to call GetJobsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobsAsync(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("dataType").ToString());
    Console.WriteLine(result.GetProperty("operation").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
}
]]></code>
This sample shows how to call GetJobsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobsAsync(1234, "<continuationToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("dataType").ToString());
    Console.WriteLine(result.GetProperty("operation").ToString());
    Console.WriteLine(result.GetProperty("redactionFormat").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("startedAt").ToString());
    Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("successful").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("canceled").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("bytesProcessed").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobs(int?,string,RequestContext)">
      <example>
This sample shows how to call GetJobs and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (BinaryData item in client.GetJobs(null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("dataType").ToString());
    Console.WriteLine(result.GetProperty("operation").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
}
]]></code>
This sample shows how to call GetJobs with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (BinaryData item in client.GetJobs(1234, "<continuationToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
    Console.WriteLine(result.GetProperty("dataType").ToString());
    Console.WriteLine(result.GetProperty("operation").ToString());
    Console.WriteLine(result.GetProperty("redactionFormat").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("startedAt").ToString());
    Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("successful").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("canceled").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
    Console.WriteLine(result.GetProperty("summary").GetProperty("bytesProcessed").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobFilesAsync(string,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetJobFilesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (HealthFileDetails item in client.GetJobFilesAsync("<name>"))
{
}
]]></code>
This sample shows how to call GetJobFilesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (HealthFileDetails item in client.GetJobFilesAsync("<name>", maxpagesize: 1234, continuationToken: "<continuationToken>"))
{
}
]]></code></example>
    </member>
    <member name="GetJobFiles(string,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetJobFiles.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (HealthFileDetails item in client.GetJobFiles("<name>"))
{
}
]]></code>
This sample shows how to call GetJobFiles with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (HealthFileDetails item in client.GetJobFiles("<name>", maxpagesize: 1234, continuationToken: "<continuationToken>"))
{
}
]]></code></example>
    </member>
    <member name="GetJobFilesAsync(string,int?,string,RequestContext)">
      <example>
This sample shows how to call GetJobFilesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobFilesAsync("<name>", null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("etag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code>
This sample shows how to call GetJobFilesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobFilesAsync("<name>", 1234, "<continuationToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("etag").ToString());
    Console.WriteLine(result.GetProperty("output").GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("output").GetProperty("etag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobFiles(string,int?,string,RequestContext)">
      <example>
This sample shows how to call GetJobFiles and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (BinaryData item in client.GetJobFiles("<name>", null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("etag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code>
This sample shows how to call GetJobFiles with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

foreach (BinaryData item in client.GetJobFiles("<name>", 1234, "<continuationToken>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("input").GetProperty("etag").ToString());
    Console.WriteLine(result.GetProperty("output").GetProperty("path").ToString());
    Console.WriteLine(result.GetProperty("output").GetProperty("etag").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
}
]]></code></example>
    </member>
    <member name="CreateJobAsync(WaitUntil,string,DeidentifyJob,CancellationToken)">
      <example>
This sample shows how to call CreateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentifyJob resource = new DeidentifyJob(new SourceStorageLocation(new Uri("http://localhost:3000"), "<prefix>", new string[] { "<extensions>" }), new TargetStorageLocation(new Uri("http://localhost:3000"), "<prefix>"), DocumentDataType.PlainText, OperationType.Redact);
Operation<DeidentifyJob> operation = await client.CreateJobAsync(WaitUntil.Completed, "<name>", resource);
DeidentifyJob responseData = operation.Value;
]]></code>
This sample shows how to call CreateJobAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentifyJob resource = new DeidentifyJob(new SourceStorageLocation(new Uri("http://localhost:3000"), "<prefix>", new string[] { "<extensions>" }), new TargetStorageLocation(new Uri("http://localhost:3000"), "<prefix>"), DocumentDataType.PlainText, OperationType.Redact)
{
    RedactionFormat = "<redactionFormat>",
};
Operation<DeidentifyJob> operation = await client.CreateJobAsync(WaitUntil.Completed, "<name>", resource);
DeidentifyJob responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CreateJob(WaitUntil,string,DeidentifyJob,CancellationToken)">
      <example>
This sample shows how to call CreateJob.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentifyJob resource = new DeidentifyJob(new SourceStorageLocation(new Uri("http://localhost:3000"), "<prefix>", new string[] { "<extensions>" }), new TargetStorageLocation(new Uri("http://localhost:3000"), "<prefix>"), DocumentDataType.PlainText, OperationType.Redact);
Operation<DeidentifyJob> operation = client.CreateJob(WaitUntil.Completed, "<name>", resource);
DeidentifyJob responseData = operation.Value;
]]></code>
This sample shows how to call CreateJob with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentifyJob resource = new DeidentifyJob(new SourceStorageLocation(new Uri("http://localhost:3000"), "<prefix>", new string[] { "<extensions>" }), new TargetStorageLocation(new Uri("http://localhost:3000"), "<prefix>"), DocumentDataType.PlainText, OperationType.Redact)
{
    RedactionFormat = "<redactionFormat>",
};
Operation<DeidentifyJob> operation = client.CreateJob(WaitUntil.Completed, "<name>", resource);
DeidentifyJob responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CreateJobAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sourceLocation = new
    {
        location = "http://localhost:3000",
        prefix = "<prefix>",
        extensions = new object[]
        {
            "<extensions>"
        },
    },
    targetLocation = new
    {
        location = "http://localhost:3000",
        prefix = "<prefix>",
    },
    dataType = "PlainText",
    operation = "Redact",
});
Operation<BinaryData> operation = await client.CreateJobAsync(WaitUntil.Completed, "<name>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code>
This sample shows how to call CreateJobAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sourceLocation = new
    {
        location = "http://localhost:3000",
        prefix = "<prefix>",
        extensions = new object[]
        {
            "<extensions>"
        },
    },
    targetLocation = new
    {
        location = "http://localhost:3000",
        prefix = "<prefix>",
    },
    dataType = "PlainText",
    operation = "Redact",
    redactionFormat = "<redactionFormat>",
});
Operation<BinaryData> operation = await client.CreateJobAsync(WaitUntil.Completed, "<name>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("redactionFormat").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("successful").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("canceled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("bytesProcessed").ToString());
]]></code></example>
    </member>
    <member name="CreateJob(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sourceLocation = new
    {
        location = "http://localhost:3000",
        prefix = "<prefix>",
        extensions = new object[]
        {
            "<extensions>"
        },
    },
    targetLocation = new
    {
        location = "http://localhost:3000",
        prefix = "<prefix>",
    },
    dataType = "PlainText",
    operation = "Redact",
});
Operation<BinaryData> operation = client.CreateJob(WaitUntil.Completed, "<name>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code>
This sample shows how to call CreateJob with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    sourceLocation = new
    {
        location = "http://localhost:3000",
        prefix = "<prefix>",
        extensions = new object[]
        {
            "<extensions>"
        },
    },
    targetLocation = new
    {
        location = "http://localhost:3000",
        prefix = "<prefix>",
    },
    dataType = "PlainText",
    operation = "Redact",
    redactionFormat = "<redactionFormat>",
});
Operation<BinaryData> operation = client.CreateJob(WaitUntil.Completed, "<name>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("extensions")[0].ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("dataType").ToString());
Console.WriteLine(result.GetProperty("operation").ToString());
Console.WriteLine(result.GetProperty("redactionFormat").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("startedAt").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("successful").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("canceled").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("total").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("bytesProcessed").ToString());
]]></code></example>
    </member>
  </members>
</doc>