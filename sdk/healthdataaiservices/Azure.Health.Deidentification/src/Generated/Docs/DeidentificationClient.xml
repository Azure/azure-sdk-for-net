<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetJobAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentificationJob> response = await client.GetJobAsync("documents_smith_1");
]]></code></example>
    </member>
    <member name="GetJob(string,CancellationToken)">
      <example>
This sample shows how to call GetJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentificationJob> response = client.GetJob("documents_smith_1");
]]></code></example>
    </member>
    <member name="GetJobAsync(string,RequestContext)">
      <example>
This sample shows how to call GetJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.GetJobAsync("documents_smith_1", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="GetJob(string,RequestContext)">
      <example>
This sample shows how to call GetJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.GetJob("documents_smith_1", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="CancelJobAsync(string,CancellationToken)">
      <example>
This sample shows how to call CancelJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentificationJob> response = await client.CancelJobAsync("documents_smith_1");
]]></code></example>
    </member>
    <member name="CancelJob(string,CancellationToken)">
      <example>
This sample shows how to call CancelJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response<DeidentificationJob> response = client.CancelJob("documents_smith_1");
]]></code></example>
    </member>
    <member name="CancelJobAsync(string,RequestContext)">
      <example>
This sample shows how to call CancelJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.CancelJobAsync("documents_smith_1", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="CancelJob(string,RequestContext)">
      <example>
This sample shows how to call CancelJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.CancelJob("documents_smith_1", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="DeleteJobAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = await client.DeleteJobAsync("documents_smith_1");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteJob(string,RequestContext)">
      <example>
This sample shows how to call DeleteJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

Response response = client.DeleteJob("documents_smith_1");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeidentifyTextAsync(DeidentificationContent,CancellationToken)">
      <example>
This sample shows how to call DeidentifyTextAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentificationContent content = new DeidentificationContent("Hello my name is John Smith.")
{
    Operation = OperationType.Redact,
    Customizations = new CustomizationOptions
    {
        RedactionFormat = "[{type}]",
        SurrogateLocale = "en-US",
    },
};
Response<DeidentificationResult> response = await client.DeidentifyTextAsync(content);
]]></code></example>
    </member>
    <member name="DeidentifyText(DeidentificationContent,CancellationToken)">
      <example>
This sample shows how to call DeidentifyText.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentificationContent content = new DeidentificationContent("Hello my name is John Smith.")
{
    Operation = OperationType.Redact,
    Customizations = new CustomizationOptions
    {
        RedactionFormat = "[{type}]",
        SurrogateLocale = "en-US",
    },
};
Response<DeidentificationResult> response = client.DeidentifyText(content);
]]></code></example>
    </member>
    <member name="DeidentifyTextAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call DeidentifyTextAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    inputText = "Hello my name is John Smith.",
    operation = "Redact",
    customizations = new
    {
        redactionFormat = "[{type}]",
        surrogateLocale = "en-US",
    },
});
Response response = await client.DeidentifyTextAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="DeidentifyText(RequestContent,RequestContext)">
      <example>
This sample shows how to call DeidentifyText and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    inputText = "Hello my name is John Smith.",
    operation = "Redact",
    customizations = new
    {
        redactionFormat = "[{type}]",
        surrogateLocale = "en-US",
    },
});
Response response = client.DeidentifyText(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="DeidentifyDocumentsAsync(WaitUntil,string,DeidentificationJob,CancellationToken)">
      <example>
This sample shows how to call DeidentifyDocumentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentificationJob resource = new DeidentificationJob(new SourceStorageLocation(new Uri("https://blobtest.blob.core.windows.net/container"), "/documents")
{
    Extensions = { "*" },
}, new TargetStorageLocation(new Uri("https://blobtest.blob.core.windows.net/container"), "/documents")
{
    Overwrite = true,
})
{
    Operation = OperationType.Redact,
    Customizations = new JobCustomizationOptions
    {
        RedactionFormat = "[{type}]",
        SurrogateLocale = "en-US",
    },
};
Operation<DeidentificationJob> operation = await client.DeidentifyDocumentsAsync(WaitUntil.Completed, "documents_smith_1", resource);
DeidentificationJob responseData = operation.Value;
]]></code></example>
    </member>
    <member name="DeidentifyDocuments(WaitUntil,string,DeidentificationJob,CancellationToken)">
      <example>
This sample shows how to call DeidentifyDocuments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

DeidentificationJob resource = new DeidentificationJob(new SourceStorageLocation(new Uri("https://blobtest.blob.core.windows.net/container"), "/documents")
{
    Extensions = { "*" },
}, new TargetStorageLocation(new Uri("https://blobtest.blob.core.windows.net/container"), "/documents")
{
    Overwrite = true,
})
{
    Operation = OperationType.Redact,
    Customizations = new JobCustomizationOptions
    {
        RedactionFormat = "[{type}]",
        SurrogateLocale = "en-US",
    },
};
Operation<DeidentificationJob> operation = client.DeidentifyDocuments(WaitUntil.Completed, "documents_smith_1", resource);
DeidentificationJob responseData = operation.Value;
]]></code></example>
    </member>
    <member name="DeidentifyDocumentsAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeidentifyDocumentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    operation = "Redact",
    sourceLocation = new
    {
        location = "https://blobtest.blob.core.windows.net/container",
        prefix = "/documents",
        extensions = new object[]
        {
            "*"
        },
    },
    targetLocation = new
    {
        location = "https://blobtest.blob.core.windows.net/container",
        prefix = "/documents",
        overwrite = true,
    },
    customizations = new
    {
        redactionFormat = "[{type}]",
        surrogateLocale = "en-US",
    },
    status = "NotStarted",
    error = new
    {
        code = "FileNotFound",
        message = "File was moved after job started.",
        target = "SourceFile",
        details = Array.Empty<object>(),
    },
    summary = new
    {
        successful = 10,
        failed = 0,
        canceled = 0,
        total = 10,
        bytesProcessed = 4096L,
    },
});
Operation<BinaryData> operation = await client.DeidentifyDocumentsAsync(WaitUntil.Completed, "documents_smith_1", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
    <member name="DeidentifyDocuments(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeidentifyDocuments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeidentificationClient client = new DeidentificationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    operation = "Redact",
    sourceLocation = new
    {
        location = "https://blobtest.blob.core.windows.net/container",
        prefix = "/documents",
        extensions = new object[]
        {
            "*"
        },
    },
    targetLocation = new
    {
        location = "https://blobtest.blob.core.windows.net/container",
        prefix = "/documents",
        overwrite = true,
    },
    customizations = new
    {
        redactionFormat = "[{type}]",
        surrogateLocale = "en-US",
    },
    status = "NotStarted",
    error = new
    {
        code = "FileNotFound",
        message = "File was moved after job started.",
        target = "SourceFile",
        details = Array.Empty<object>(),
    },
    summary = new
    {
        successful = 10,
        failed = 0,
        canceled = 0,
        total = 10,
        bytesProcessed = 4096L,
    },
});
Operation<BinaryData> operation = client.DeidentifyDocuments(WaitUntil.Completed, "documents_smith_1", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("sourceLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("targetLocation").GetProperty("prefix").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedAt").ToString());
Console.WriteLine(result.GetProperty("createdAt").ToString());
]]></code></example>
    </member>
  </members>
</doc>