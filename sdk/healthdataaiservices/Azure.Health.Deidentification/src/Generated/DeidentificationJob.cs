// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;

namespace Azure.Health.Deidentification
{
    /// <summary> A job containing a batch of documents to de-identify. </summary>
    public partial class DeidentificationJob
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeidentificationJob"/>. </summary>
        /// <param name="sourceLocation"> Storage location to perform the operation on. </param>
        /// <param name="targetLocation"> Target location to store output of operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceLocation"/> or <paramref name="targetLocation"/> is null. </exception>
        public DeidentificationJob(SourceStorageLocation sourceLocation, TargetStorageLocation targetLocation)
        {
            Argument.AssertNotNull(sourceLocation, nameof(sourceLocation));
            Argument.AssertNotNull(targetLocation, nameof(targetLocation));

            SourceLocation = sourceLocation;
            TargetLocation = targetLocation;
        }

        /// <summary> Initializes a new instance of <see cref="DeidentificationJob"/>. </summary>
        /// <param name="jobName"> The name of a job. </param>
        /// <param name="operationType"> Operation to perform on the input documents. </param>
        /// <param name="sourceLocation"> Storage location to perform the operation on. </param>
        /// <param name="targetLocation"> Target location to store output of operation. </param>
        /// <param name="customizations"> Customization parameters to override default service behaviors. </param>
        /// <param name="status"> Current status of a job. </param>
        /// <param name="error"> Error when job fails in it's entirety. </param>
        /// <param name="lastUpdatedAt">
        /// Date and time when the job was completed.
        /// 
        /// If the job is canceled, this is the time when the job was canceled.
        /// 
        /// If the job failed, this is the time when the job failed.
        /// </param>
        /// <param name="createdAt"> Date and time when the job was created. </param>
        /// <param name="startedAt"> Date and time when the job was started. </param>
        /// <param name="summary"> Summary of a job. Exists only when the job is completed. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeidentificationJob(string jobName, DeidentificationOperationType? operationType, SourceStorageLocation sourceLocation, TargetStorageLocation targetLocation, DeidentificationJobCustomizationOptions customizations, OperationStatus status, ResponseError error, DateTimeOffset lastUpdatedAt, DateTimeOffset createdAt, DateTimeOffset? startedAt, DeidentificationJobSummary summary, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            JobName = jobName;
            OperationType = operationType;
            SourceLocation = sourceLocation;
            TargetLocation = targetLocation;
            Customizations = customizations;
            Status = status;
            Error = error;
            LastUpdatedAt = lastUpdatedAt;
            CreatedAt = createdAt;
            StartedAt = startedAt;
            Summary = summary;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of a job. </summary>
        public string JobName { get; }

        /// <summary> Operation to perform on the input documents. </summary>
        public DeidentificationOperationType? OperationType { get; set; }

        /// <summary> Storage location to perform the operation on. </summary>
        public SourceStorageLocation SourceLocation { get; set; }

        /// <summary> Target location to store output of operation. </summary>
        public TargetStorageLocation TargetLocation { get; set; }

        /// <summary> Customization parameters to override default service behaviors. </summary>
        public DeidentificationJobCustomizationOptions Customizations { get; set; }

        /// <summary> Current status of a job. </summary>
        public OperationStatus Status { get; }

        /// <summary> Error when job fails in it's entirety. </summary>
        public ResponseError Error { get; }

        /// <summary>
        /// Date and time when the job was completed.
        /// 
        /// If the job is canceled, this is the time when the job was canceled.
        /// 
        /// If the job failed, this is the time when the job failed.
        /// </summary>
        public DateTimeOffset LastUpdatedAt { get; }

        /// <summary> Date and time when the job was created. </summary>
        public DateTimeOffset CreatedAt { get; }

        /// <summary> Date and time when the job was started. </summary>
        public DateTimeOffset? StartedAt { get; }

        /// <summary> Summary of a job. Exists only when the job is completed. </summary>
        public DeidentificationJobSummary Summary { get; }
    }
}
