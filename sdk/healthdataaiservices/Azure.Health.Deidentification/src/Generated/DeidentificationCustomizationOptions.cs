// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Health.Deidentification
{
    /// <summary> Customizations options to override default service behaviors for synchronous usage. </summary>
    public partial class DeidentificationCustomizationOptions
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DeidentificationCustomizationOptions"/>. </summary>
        public DeidentificationCustomizationOptions()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DeidentificationCustomizationOptions"/>. </summary>
        /// <param name="redactionFormat">
        /// Format of the redacted output. Only valid when Operation is Redact. 
        /// Please refer to https://learn.microsoft.com/azure/healthcare-apis/deidentification/redaction-format for more details.
        /// </param>
        /// <param name="surrogateLocale"> Locale in which the output surrogates are written. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DeidentificationCustomizationOptions(string redactionFormat, string surrogateLocale, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            RedactionFormat = redactionFormat;
            SurrogateLocale = surrogateLocale;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary>
        /// Format of the redacted output. Only valid when Operation is Redact. 
        /// Please refer to https://learn.microsoft.com/azure/healthcare-apis/deidentification/redaction-format for more details.
        /// </summary>
        public string RedactionFormat { get; set; }

        /// <summary> Locale in which the output surrogates are written. </summary>
        public string SurrogateLocale { get; set; }
    }
}
