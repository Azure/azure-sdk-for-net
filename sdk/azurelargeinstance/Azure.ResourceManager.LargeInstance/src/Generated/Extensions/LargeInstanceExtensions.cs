// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.LargeInstance.Mocking;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.LargeInstance
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.LargeInstance. </summary>
    public static partial class LargeInstanceExtensions
    {
        private static MockableLargeInstanceArmClient GetMockableLargeInstanceArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableLargeInstanceArmClient(client0));
        }

        private static MockableLargeInstanceResourceGroupResource GetMockableLargeInstanceResourceGroupResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableLargeInstanceResourceGroupResource(client, resource.Id));
        }

        private static MockableLargeInstanceSubscriptionResource GetMockableLargeInstanceSubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableLargeInstanceSubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Gets an object representing an <see cref="AzureLargeInstanceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AzureLargeInstanceResource.CreateResourceIdentifier" /> to create an <see cref="AzureLargeInstanceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceArmClient.GetAzureLargeInstanceResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AzureLargeInstanceResource" /> object. </returns>
        public static AzureLargeInstanceResource GetAzureLargeInstanceResource(this ArmClient client, ResourceIdentifier id)
        {
            return GetMockableLargeInstanceArmClient(client).GetAzureLargeInstanceResource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AzureLargeStorageInstanceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AzureLargeStorageInstanceResource.CreateResourceIdentifier" /> to create an <see cref="AzureLargeStorageInstanceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceArmClient.GetAzureLargeStorageInstanceResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AzureLargeStorageInstanceResource" /> object. </returns>
        public static AzureLargeStorageInstanceResource GetAzureLargeStorageInstanceResource(this ArmClient client, ResourceIdentifier id)
        {
            return GetMockableLargeInstanceArmClient(client).GetAzureLargeStorageInstanceResource(id);
        }

        /// <summary>
        /// Gets a collection of AzureLargeInstanceResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceResourceGroupResource.GetAzureLargeInstances()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of AzureLargeInstanceResources and their operations over a AzureLargeInstanceResource. </returns>
        public static AzureLargeInstanceCollection GetAzureLargeInstances(this ResourceGroupResource resourceGroupResource)
        {
            return GetMockableLargeInstanceResourceGroupResource(resourceGroupResource).GetAzureLargeInstances();
        }

        /// <summary>
        /// Gets an Azure Large Instance for the specified subscription, resource group, and instance name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeInstances/{azureLargeInstanceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureLargeInstance_Get</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceResourceGroupResource.GetAzureLargeInstanceAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="azureLargeInstanceName"> Name of the AzureLargeInstance. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureLargeInstanceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="azureLargeInstanceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<AzureLargeInstanceResource>> GetAzureLargeInstanceAsync(this ResourceGroupResource resourceGroupResource, string azureLargeInstanceName, CancellationToken cancellationToken = default)
        {
            return await GetMockableLargeInstanceResourceGroupResource(resourceGroupResource).GetAzureLargeInstanceAsync(azureLargeInstanceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets an Azure Large Instance for the specified subscription, resource group, and instance name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeInstances/{azureLargeInstanceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureLargeInstance_Get</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceResourceGroupResource.GetAzureLargeInstance(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="azureLargeInstanceName"> Name of the AzureLargeInstance. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureLargeInstanceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="azureLargeInstanceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<AzureLargeInstanceResource> GetAzureLargeInstance(this ResourceGroupResource resourceGroupResource, string azureLargeInstanceName, CancellationToken cancellationToken = default)
        {
            return GetMockableLargeInstanceResourceGroupResource(resourceGroupResource).GetAzureLargeInstance(azureLargeInstanceName, cancellationToken);
        }

        /// <summary>
        /// Gets a collection of AzureLargeStorageInstanceResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceResourceGroupResource.GetAzureLargeStorageInstances()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of AzureLargeStorageInstanceResources and their operations over a AzureLargeStorageInstanceResource. </returns>
        public static AzureLargeStorageInstanceCollection GetAzureLargeStorageInstances(this ResourceGroupResource resourceGroupResource)
        {
            return GetMockableLargeInstanceResourceGroupResource(resourceGroupResource).GetAzureLargeStorageInstances();
        }

        /// <summary>
        /// Gets an Azure Large Storage instance for the specified subscription, resource group, and instance name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureLargeStorageInstance_Get</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceResourceGroupResource.GetAzureLargeStorageInstanceAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="azureLargeStorageInstanceName"> Name of the AzureLargeStorageInstance. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureLargeStorageInstanceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="azureLargeStorageInstanceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<AzureLargeStorageInstanceResource>> GetAzureLargeStorageInstanceAsync(this ResourceGroupResource resourceGroupResource, string azureLargeStorageInstanceName, CancellationToken cancellationToken = default)
        {
            return await GetMockableLargeInstanceResourceGroupResource(resourceGroupResource).GetAzureLargeStorageInstanceAsync(azureLargeStorageInstanceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets an Azure Large Storage instance for the specified subscription, resource group, and instance name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureLargeStorageInstance_Get</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceResourceGroupResource.GetAzureLargeStorageInstance(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="azureLargeStorageInstanceName"> Name of the AzureLargeStorageInstance. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureLargeStorageInstanceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="azureLargeStorageInstanceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<AzureLargeStorageInstanceResource> GetAzureLargeStorageInstance(this ResourceGroupResource resourceGroupResource, string azureLargeStorageInstanceName, CancellationToken cancellationToken = default)
        {
            return GetMockableLargeInstanceResourceGroupResource(resourceGroupResource).GetAzureLargeStorageInstance(azureLargeStorageInstanceName, cancellationToken);
        }

        /// <summary>
        /// Gets a list of Azure Large Instances in the specified subscription. The operations returns various properties of each Azure Large Instance.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureLargeInstance/azureLargeInstances</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureLargeInstance_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceSubscriptionResource.GetAzureLargeInstances(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="AzureLargeInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<AzureLargeInstanceResource> GetAzureLargeInstancesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetMockableLargeInstanceSubscriptionResource(subscriptionResource).GetAzureLargeInstancesAsync(cancellationToken);
        }

        /// <summary>
        /// Gets a list of Azure Large Instances in the specified subscription. The operations returns various properties of each Azure Large Instance.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureLargeInstance/azureLargeInstances</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureLargeInstance_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceSubscriptionResource.GetAzureLargeInstances(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="AzureLargeInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<AzureLargeInstanceResource> GetAzureLargeInstances(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetMockableLargeInstanceSubscriptionResource(subscriptionResource).GetAzureLargeInstances(cancellationToken);
        }

        /// <summary>
        /// Gets a list of AzureLargeStorageInstances in the specified subscription. The operations returns various properties of each Azure LargeStorage instance.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureLargeStorageInstance_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceSubscriptionResource.GetAzureLargeStorageInstances(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="AzureLargeStorageInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<AzureLargeStorageInstanceResource> GetAzureLargeStorageInstancesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetMockableLargeInstanceSubscriptionResource(subscriptionResource).GetAzureLargeStorageInstancesAsync(cancellationToken);
        }

        /// <summary>
        /// Gets a list of AzureLargeStorageInstances in the specified subscription. The operations returns various properties of each Azure LargeStorage instance.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureLargeStorageInstance_ListBySubscription</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableLargeInstanceSubscriptionResource.GetAzureLargeStorageInstances(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="AzureLargeStorageInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<AzureLargeStorageInstanceResource> GetAzureLargeStorageInstances(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetMockableLargeInstanceSubscriptionResource(subscriptionResource).GetAzureLargeStorageInstances(cancellationToken);
        }
    }
}
