// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.WeightsAndBiases.Mocking;

namespace Azure.ResourceManager.WeightsAndBiases
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.WeightsAndBiases. </summary>
    public static partial class WeightsAndBiasesExtensions
    {
        /// <param name="client"></param>
        private static MockableWeightsAndBiasesArmClient GetMockableWeightsAndBiasesArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableWeightsAndBiasesArmClient(client0, ResourceIdentifier.Root));
        }

        /// <param name="resourceGroupResource"></param>
        private static MockableWeightsAndBiasesResourceGroupResource GetMockableWeightsAndBiasesResourceGroupResource(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient(client => new MockableWeightsAndBiasesResourceGroupResource(client, resourceGroupResource.Id));
        }

        /// <param name="subscriptionResource"></param>
        private static MockableWeightsAndBiasesSubscriptionResource GetMockableWeightsAndBiasesSubscriptionResource(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient(client => new MockableWeightsAndBiasesSubscriptionResource(client, subscriptionResource.Id));
        }

        /// <summary> Gets an object representing a <see cref="WeightsAndBiasesInstanceResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient"/> the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="WeightsAndBiasesInstanceResource"/> object. </returns>
        public static WeightsAndBiasesInstanceResource GetWeightsAndBiasesInstanceResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableWeightsAndBiasesArmClient(client).GetWeightsAndBiasesInstanceResource(id);
        }

        /// <summary> Gets a collection of WeightsAndBiasesInstances in the <see cref="ResourceGroupResource"/>. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource"/> the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        /// <returns> An object representing collection of WeightsAndBiasesInstances and their operations over a WeightsAndBiasesInstanceResource. </returns>
        public static WeightsAndBiasesInstanceCollection GetWeightsAndBiasesInstances(this ResourceGroupResource resourceGroupResource)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableWeightsAndBiasesResourceGroupResource(resourceGroupResource).GetWeightsAndBiasesInstances();
        }

        /// <summary> Get a InstanceResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource"/> the method will execute against. </param>
        /// <param name="instancename"> Name of the Instance resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<WeightsAndBiasesInstanceResource>> GetWeightsAndBiasesInstanceAsync(this ResourceGroupResource resourceGroupResource, string instancename, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return await GetMockableWeightsAndBiasesResourceGroupResource(resourceGroupResource).GetWeightsAndBiasesInstanceAsync(instancename, cancellationToken).ConfigureAwait(false);
        }

        /// <summary> Get a InstanceResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource"/> the method will execute against. </param>
        /// <param name="instancename"> Name of the Instance resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<WeightsAndBiasesInstanceResource> GetWeightsAndBiasesInstance(this ResourceGroupResource resourceGroupResource, string instancename, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableWeightsAndBiasesResourceGroupResource(resourceGroupResource).GetWeightsAndBiasesInstance(instancename, cancellationToken);
        }

        /// <summary> List InstanceResource resources by subscription ID. </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource"/> the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="WeightsAndBiasesInstanceResource"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<WeightsAndBiasesInstanceResource> GetWeightsAndBiasesInstancesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableWeightsAndBiasesSubscriptionResource(subscriptionResource).GetWeightsAndBiasesInstancesAsync(cancellationToken);
        }

        /// <summary> List InstanceResource resources by subscription ID. </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource"/> the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="WeightsAndBiasesInstanceResource"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<WeightsAndBiasesInstanceResource> GetWeightsAndBiasesInstances(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableWeightsAndBiasesSubscriptionResource(subscriptionResource).GetWeightsAndBiasesInstances(cancellationToken);
        }
    }
}
