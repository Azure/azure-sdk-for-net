// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.CosmosDB
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region DatabaseAccount
        /// <summary> Gets an object representing a DatabaseAccount along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccount" /> object. </returns>
        public static DatabaseAccount GetDatabaseAccount(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccount.ValidateResourceId(id);
            return new DatabaseAccount(armClient, id);
        }
        #endregion

        #region SqlDatabase
        /// <summary> Gets an object representing a SqlDatabase along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlDatabase" /> object. </returns>
        public static SqlDatabase GetSqlDatabase(this ArmClient armClient, ResourceIdentifier id)
        {
            SqlDatabase.ValidateResourceId(id);
            return new SqlDatabase(armClient, id);
        }
        #endregion

        #region DatabaseAccountSqlDatabaseThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountSqlDatabaseThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountSqlDatabaseThroughputSetting" /> object. </returns>
        public static DatabaseAccountSqlDatabaseThroughputSetting GetDatabaseAccountSqlDatabaseThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountSqlDatabaseThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountSqlDatabaseThroughputSetting(armClient, id);
        }
        #endregion

        #region DatabaseAccountSqlDatabaseContainerThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountSqlDatabaseContainerThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountSqlDatabaseContainerThroughputSetting" /> object. </returns>
        public static DatabaseAccountSqlDatabaseContainerThroughputSetting GetDatabaseAccountSqlDatabaseContainerThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountSqlDatabaseContainerThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountSqlDatabaseContainerThroughputSetting(armClient, id);
        }
        #endregion

        #region DatabaseAccountMongodbDatabaseThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountMongodbDatabaseThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountMongodbDatabaseThroughputSetting" /> object. </returns>
        public static DatabaseAccountMongodbDatabaseThroughputSetting GetDatabaseAccountMongodbDatabaseThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountMongodbDatabaseThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountMongodbDatabaseThroughputSetting(armClient, id);
        }
        #endregion

        #region DatabaseAccountMongodbDatabaseCollectionThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountMongodbDatabaseCollectionThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountMongodbDatabaseCollectionThroughputSetting" /> object. </returns>
        public static DatabaseAccountMongodbDatabaseCollectionThroughputSetting GetDatabaseAccountMongodbDatabaseCollectionThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountMongodbDatabaseCollectionThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountMongodbDatabaseCollectionThroughputSetting(armClient, id);
        }
        #endregion

        #region DatabaseAccountTableThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountTableThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountTableThroughputSetting" /> object. </returns>
        public static DatabaseAccountTableThroughputSetting GetDatabaseAccountTableThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountTableThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountTableThroughputSetting(armClient, id);
        }
        #endregion

        #region DatabaseAccountCassandraKeyspaceThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountCassandraKeyspaceThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountCassandraKeyspaceThroughputSetting" /> object. </returns>
        public static DatabaseAccountCassandraKeyspaceThroughputSetting GetDatabaseAccountCassandraKeyspaceThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountCassandraKeyspaceThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountCassandraKeyspaceThroughputSetting(armClient, id);
        }
        #endregion

        #region DatabaseAccountCassandraKeyspaceTableThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountCassandraKeyspaceTableThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountCassandraKeyspaceTableThroughputSetting" /> object. </returns>
        public static DatabaseAccountCassandraKeyspaceTableThroughputSetting GetDatabaseAccountCassandraKeyspaceTableThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountCassandraKeyspaceTableThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountCassandraKeyspaceTableThroughputSetting(armClient, id);
        }
        #endregion

        #region DatabaseAccountGremlinDatabaseThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountGremlinDatabaseThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountGremlinDatabaseThroughputSetting" /> object. </returns>
        public static DatabaseAccountGremlinDatabaseThroughputSetting GetDatabaseAccountGremlinDatabaseThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountGremlinDatabaseThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountGremlinDatabaseThroughputSetting(armClient, id);
        }
        #endregion

        #region DatabaseAccountGremlinDatabaseGraphThroughputSetting
        /// <summary> Gets an object representing a DatabaseAccountGremlinDatabaseGraphThroughputSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseAccountGremlinDatabaseGraphThroughputSetting" /> object. </returns>
        public static DatabaseAccountGremlinDatabaseGraphThroughputSetting GetDatabaseAccountGremlinDatabaseGraphThroughputSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            DatabaseAccountGremlinDatabaseGraphThroughputSetting.ValidateResourceId(id);
            return new DatabaseAccountGremlinDatabaseGraphThroughputSetting(armClient, id);
        }
        #endregion

        #region SqlContainer
        /// <summary> Gets an object representing a SqlContainer along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlContainer" /> object. </returns>
        public static SqlContainer GetSqlContainer(this ArmClient armClient, ResourceIdentifier id)
        {
            SqlContainer.ValidateResourceId(id);
            return new SqlContainer(armClient, id);
        }
        #endregion

        #region SqlStoredProcedure
        /// <summary> Gets an object representing a SqlStoredProcedure along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlStoredProcedure" /> object. </returns>
        public static SqlStoredProcedure GetSqlStoredProcedure(this ArmClient armClient, ResourceIdentifier id)
        {
            SqlStoredProcedure.ValidateResourceId(id);
            return new SqlStoredProcedure(armClient, id);
        }
        #endregion

        #region SqlUserDefinedFunction
        /// <summary> Gets an object representing a SqlUserDefinedFunction along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlUserDefinedFunction" /> object. </returns>
        public static SqlUserDefinedFunction GetSqlUserDefinedFunction(this ArmClient armClient, ResourceIdentifier id)
        {
            SqlUserDefinedFunction.ValidateResourceId(id);
            return new SqlUserDefinedFunction(armClient, id);
        }
        #endregion

        #region SqlTrigger
        /// <summary> Gets an object representing a SqlTrigger along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlTrigger" /> object. </returns>
        public static SqlTrigger GetSqlTrigger(this ArmClient armClient, ResourceIdentifier id)
        {
            SqlTrigger.ValidateResourceId(id);
            return new SqlTrigger(armClient, id);
        }
        #endregion

        #region MongoDBDatabase
        /// <summary> Gets an object representing a MongoDBDatabase along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MongoDBDatabase" /> object. </returns>
        public static MongoDBDatabase GetMongoDBDatabase(this ArmClient armClient, ResourceIdentifier id)
        {
            MongoDBDatabase.ValidateResourceId(id);
            return new MongoDBDatabase(armClient, id);
        }
        #endregion

        #region MongoDBCollection
        /// <summary> Gets an object representing a MongoDBCollection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MongoDBCollection" /> object. </returns>
        public static MongoDBCollection GetMongoDBCollection(this ArmClient armClient, ResourceIdentifier id)
        {
            MongoDBCollection.ValidateResourceId(id);
            return new MongoDBCollection(armClient, id);
        }
        #endregion

        #region CosmosTable
        /// <summary> Gets an object representing a CosmosTable along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CosmosTable" /> object. </returns>
        public static CosmosTable GetCosmosTable(this ArmClient armClient, ResourceIdentifier id)
        {
            CosmosTable.ValidateResourceId(id);
            return new CosmosTable(armClient, id);
        }
        #endregion

        #region CassandraKeyspace
        /// <summary> Gets an object representing a CassandraKeyspace along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CassandraKeyspace" /> object. </returns>
        public static CassandraKeyspace GetCassandraKeyspace(this ArmClient armClient, ResourceIdentifier id)
        {
            CassandraKeyspace.ValidateResourceId(id);
            return new CassandraKeyspace(armClient, id);
        }
        #endregion

        #region CassandraTable
        /// <summary> Gets an object representing a CassandraTable along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CassandraTable" /> object. </returns>
        public static CassandraTable GetCassandraTable(this ArmClient armClient, ResourceIdentifier id)
        {
            CassandraTable.ValidateResourceId(id);
            return new CassandraTable(armClient, id);
        }
        #endregion

        #region GremlinDatabase
        /// <summary> Gets an object representing a GremlinDatabase along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GremlinDatabase" /> object. </returns>
        public static GremlinDatabase GetGremlinDatabase(this ArmClient armClient, ResourceIdentifier id)
        {
            GremlinDatabase.ValidateResourceId(id);
            return new GremlinDatabase(armClient, id);
        }
        #endregion

        #region GremlinGraph
        /// <summary> Gets an object representing a GremlinGraph along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GremlinGraph" /> object. </returns>
        public static GremlinGraph GetGremlinGraph(this ArmClient armClient, ResourceIdentifier id)
        {
            GremlinGraph.ValidateResourceId(id);
            return new GremlinGraph(armClient, id);
        }
        #endregion

        #region PrivateEndpointConnection
        /// <summary> Gets an object representing a PrivateEndpointConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnection" /> object. </returns>
        public static PrivateEndpointConnection GetPrivateEndpointConnection(this ArmClient armClient, ResourceIdentifier id)
        {
            PrivateEndpointConnection.ValidateResourceId(id);
            return new PrivateEndpointConnection(armClient, id);
        }
        #endregion

        #region PrivateLinkResource
        /// <summary> Gets an object representing a PrivateLinkResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateLinkResource" /> object. </returns>
        public static PrivateLinkResource GetPrivateLinkResource(this ArmClient armClient, ResourceIdentifier id)
        {
            PrivateLinkResource.ValidateResourceId(id);
            return new PrivateLinkResource(armClient, id);
        }
        #endregion

        #region RestorableDatabaseAccount
        /// <summary> Gets an object representing a RestorableDatabaseAccount along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RestorableDatabaseAccount" /> object. </returns>
        public static RestorableDatabaseAccount GetRestorableDatabaseAccount(this ArmClient armClient, ResourceIdentifier id)
        {
            RestorableDatabaseAccount.ValidateResourceId(id);
            return new RestorableDatabaseAccount(armClient, id);
        }
        #endregion
    }
}
