// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> Cosmos DB Cassandra keyspace resource object. </summary>
    public partial class CassandraKeyspaceResourceInfo
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        protected internal Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CassandraKeyspaceResourceInfo"/>. </summary>
        /// <param name="keyspaceName"> Name of the Cosmos DB Cassandra keyspace. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyspaceName"/> is null. </exception>
        public CassandraKeyspaceResourceInfo(string keyspaceName)
        {
            Argument.AssertNotNull(keyspaceName, nameof(keyspaceName));

            KeyspaceName = keyspaceName;
        }

        /// <summary> Initializes a new instance of <see cref="CassandraKeyspaceResourceInfo"/>. </summary>
        /// <param name="keyspaceName"> Name of the Cosmos DB Cassandra keyspace. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CassandraKeyspaceResourceInfo(string keyspaceName, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            KeyspaceName = keyspaceName;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CassandraKeyspaceResourceInfo"/> for deserialization. </summary>
        internal CassandraKeyspaceResourceInfo()
        {
        }

        /// <summary> Name of the Cosmos DB Cassandra keyspace. </summary>
        public string KeyspaceName { get; set; }
    }
}
