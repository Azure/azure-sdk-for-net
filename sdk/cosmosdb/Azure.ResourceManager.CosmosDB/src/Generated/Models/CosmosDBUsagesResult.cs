// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The response to a list usage request. </summary>
    internal partial class CosmosDBUsagesResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CosmosDBUsagesResult"/>. </summary>
        internal CosmosDBUsagesResult()
        {
            Value = new ChangeTrackingList<CosmosDBBaseUsage>();
        }

        /// <summary> Initializes a new instance of <see cref="CosmosDBUsagesResult"/>. </summary>
        /// <param name="value"> The list of usages for the database. A usage is a point in time metric. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CosmosDBUsagesResult(IReadOnlyList<CosmosDBBaseUsage> value, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Value = value;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The list of usages for the database. A usage is a point in time metric. </summary>
        public IReadOnlyList<CosmosDBBaseUsage> Value { get; }
    }
}
