// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The failover policy for a given region of a database account. </summary>
    public partial class FailoverPolicy
    {
        /// <summary> Initializes a new instance of FailoverPolicy. </summary>
        public FailoverPolicy()
        {
        }

        /// <summary> Initializes a new instance of FailoverPolicy. </summary>
        /// <param name="id"> The unique identifier of the region in which the database account replicates to. Example: &amp;lt;accountName&amp;gt;-&amp;lt;locationName&amp;gt;. </param>
        /// <param name="locationName"> The name of the region in which the database account exists. </param>
        /// <param name="failoverPriority"> The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. </param>
        internal FailoverPolicy(string id, string locationName, int? failoverPriority)
        {
            Id = id;
            LocationName = locationName;
            FailoverPriority = failoverPriority;
        }

        /// <summary> The unique identifier of the region in which the database account replicates to. Example: &amp;lt;accountName&amp;gt;-&amp;lt;locationName&amp;gt;. </summary>
        public string Id { get; }
        /// <summary> The name of the region in which the database account exists. </summary>
        public string LocationName { get; set; }
        /// <summary> The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. </summary>
        public int? FailoverPriority { get; set; }
    }
}
