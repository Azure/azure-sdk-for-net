// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The kind of connection error that occurred. </summary>
    public readonly partial struct ConnectionState : IEquatable<ConnectionState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ConnectionState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ConnectionState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string OKValue = "OK";
        private const string OperatorToDataCenterNetworkErrorValue = "OperatorToDataCenterNetworkError";
        private const string DatacenterToDatacenterNetworkErrorValue = "DatacenterToDatacenterNetworkError";
        private const string InternalOperatorToDataCenterCertificateErrorValue = "InternalOperatorToDataCenterCertificateError";
        private const string InternalErrorValue = "InternalError";

        /// <summary> Unknown. </summary>
        public static ConnectionState Unknown { get; } = new ConnectionState(UnknownValue);
        /// <summary> OK. </summary>
        public static ConnectionState OK { get; } = new ConnectionState(OKValue);
        /// <summary> OperatorToDataCenterNetworkError. </summary>
        public static ConnectionState OperatorToDataCenterNetworkError { get; } = new ConnectionState(OperatorToDataCenterNetworkErrorValue);
        /// <summary> DatacenterToDatacenterNetworkError. </summary>
        public static ConnectionState DatacenterToDatacenterNetworkError { get; } = new ConnectionState(DatacenterToDatacenterNetworkErrorValue);
        /// <summary> InternalOperatorToDataCenterCertificateError. </summary>
        public static ConnectionState InternalOperatorToDataCenterCertificateError { get; } = new ConnectionState(InternalOperatorToDataCenterCertificateErrorValue);
        /// <summary> InternalError. </summary>
        public static ConnectionState InternalError { get; } = new ConnectionState(InternalErrorValue);
        /// <summary> Determines if two <see cref="ConnectionState"/> values are the same. </summary>
        public static bool operator ==(ConnectionState left, ConnectionState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ConnectionState"/> values are not the same. </summary>
        public static bool operator !=(ConnectionState left, ConnectionState right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ConnectionState"/>. </summary>
        public static implicit operator ConnectionState(string value) => new ConnectionState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ConnectionState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ConnectionState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
