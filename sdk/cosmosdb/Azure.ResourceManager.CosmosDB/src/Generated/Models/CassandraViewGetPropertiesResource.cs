// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The CassandraViewGetPropertiesResource. </summary>
    public partial class CassandraViewGetPropertiesResource : CassandraViewResource
    {
        /// <summary> Initializes a new instance of <see cref="CassandraViewGetPropertiesResource"/>. </summary>
        /// <param name="id"> Name of the Cosmos DB Cassandra view. </param>
        /// <param name="viewDefinition"> View Definition of the Cosmos DB Cassandra view. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="viewDefinition"/> is null. </exception>
        public CassandraViewGetPropertiesResource(string id, string viewDefinition) : base(id, viewDefinition)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(viewDefinition, nameof(viewDefinition));
        }

        /// <summary> Initializes a new instance of <see cref="CassandraViewGetPropertiesResource"/>. </summary>
        /// <param name="id"> Name of the Cosmos DB Cassandra view. </param>
        /// <param name="viewDefinition"> View Definition of the Cosmos DB Cassandra view. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CassandraViewGetPropertiesResource(string id, string viewDefinition, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, viewDefinition, serializedAdditionalRawData)
        {
        }

        /// <summary> Initializes a new instance of <see cref="CassandraViewGetPropertiesResource"/> for deserialization. </summary>
        internal CassandraViewGetPropertiesResource()
        {
        }
    }
}
