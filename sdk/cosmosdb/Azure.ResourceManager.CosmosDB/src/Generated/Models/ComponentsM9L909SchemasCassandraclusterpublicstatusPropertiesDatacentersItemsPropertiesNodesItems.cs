// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems. </summary>
    public partial class ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems
    {
        /// <summary> Initializes a new instance of ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems. </summary>
        internal ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems()
        {
            Tokens = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems. </summary>
        /// <param name="address"> The node&apos;s IP address. </param>
        /// <param name="state"> The state of the node in Cassandra ring. </param>
        /// <param name="status"></param>
        /// <param name="load"> The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones) is counted. </param>
        /// <param name="tokens"> List of tokens this node covers. </param>
        /// <param name="size"></param>
        /// <param name="hostID"> The network ID of the node. </param>
        /// <param name="rack"> The rack this node is part of. </param>
        /// <param name="timestamp"> The timestamp when these statistics were captured. </param>
        /// <param name="diskUsedKB"> The amount of disk used, in kB, of the directory /var/lib/cassandra. </param>
        /// <param name="diskFreeKB"> The amount of disk free, in kB, of the directory /var/lib/cassandra. </param>
        /// <param name="memoryUsedKB"> Used memory (calculated as total - free - buffers - cache), in kB. </param>
        /// <param name="memoryBuffersAndCachedKB"> Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo), in kB. </param>
        /// <param name="memoryFreeKB"> Unused memory (MemFree and SwapFree in /proc/meminfo), in kB. </param>
        /// <param name="memoryTotalKB"> Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB. </param>
        /// <param name="cpuUsage"> A float representing the current system-wide CPU utilization as a percentage. </param>
        internal ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems(string address, NodeState? state, string status, string load, IReadOnlyList<string> tokens, int? size, string hostID, string rack, string timestamp, long? diskUsedKB, long? diskFreeKB, long? memoryUsedKB, long? memoryBuffersAndCachedKB, long? memoryFreeKB, long? memoryTotalKB, double? cpuUsage)
        {
            Address = address;
            State = state;
            Status = status;
            Load = load;
            Tokens = tokens;
            Size = size;
            HostID = hostID;
            Rack = rack;
            Timestamp = timestamp;
            DiskUsedKB = diskUsedKB;
            DiskFreeKB = diskFreeKB;
            MemoryUsedKB = memoryUsedKB;
            MemoryBuffersAndCachedKB = memoryBuffersAndCachedKB;
            MemoryFreeKB = memoryFreeKB;
            MemoryTotalKB = memoryTotalKB;
            CpuUsage = cpuUsage;
        }

        /// <summary> The node&apos;s IP address. </summary>
        public string Address { get; }
        /// <summary> The state of the node in Cassandra ring. </summary>
        public NodeState? State { get; }
        /// <summary> Gets the status. </summary>
        public string Status { get; }
        /// <summary> The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones) is counted. </summary>
        public string Load { get; }
        /// <summary> List of tokens this node covers. </summary>
        public IReadOnlyList<string> Tokens { get; }
        /// <summary> Gets the size. </summary>
        public int? Size { get; }
        /// <summary> The network ID of the node. </summary>
        public string HostID { get; }
        /// <summary> The rack this node is part of. </summary>
        public string Rack { get; }
        /// <summary> The timestamp when these statistics were captured. </summary>
        public string Timestamp { get; }
        /// <summary> The amount of disk used, in kB, of the directory /var/lib/cassandra. </summary>
        public long? DiskUsedKB { get; }
        /// <summary> The amount of disk free, in kB, of the directory /var/lib/cassandra. </summary>
        public long? DiskFreeKB { get; }
        /// <summary> Used memory (calculated as total - free - buffers - cache), in kB. </summary>
        public long? MemoryUsedKB { get; }
        /// <summary> Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo), in kB. </summary>
        public long? MemoryBuffersAndCachedKB { get; }
        /// <summary> Unused memory (MemFree and SwapFree in /proc/meminfo), in kB. </summary>
        public long? MemoryFreeKB { get; }
        /// <summary> Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB. </summary>
        public long? MemoryTotalKB { get; }
        /// <summary> A float representing the current system-wide CPU utilization as a percentage. </summary>
        public double? CpuUsage { get; }
    }
}
