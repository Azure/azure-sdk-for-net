// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents metrics values.
    /// </summary>
    public partial class MetricValue
    {
        /// <summary>
        /// Initializes a new instance of the MetricValue class.
        /// </summary>
        public MetricValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MetricValue class.
        /// </summary>
        /// <param name="_count">The number of values for the metric.</param>
        /// <param name="average">The average value of the metric.</param>
        /// <param name="maximum">The max value of the metric.</param>
        /// <param name="minimum">The min value of the metric.</param>
        /// <param name="timestamp">The metric timestamp (ISO-8601
        /// format).</param>
        /// <param name="total">The total value of the metric.</param>
        public MetricValue(double? _count = default(double?), double? average = default(double?), double? maximum = default(double?), double? minimum = default(double?), System.DateTime? timestamp = default(System.DateTime?), double? total = default(double?))
        {
            this._count = _count;
            Average = average;
            Maximum = maximum;
            Minimum = minimum;
            Timestamp = timestamp;
            Total = total;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the number of values for the metric.
        /// </summary>
        [JsonProperty(PropertyName = "_count")]
        public double? _count { get; private set; }

        /// <summary>
        /// Gets the average value of the metric.
        /// </summary>
        [JsonProperty(PropertyName = "average")]
        public double? Average { get; private set; }

        /// <summary>
        /// Gets the max value of the metric.
        /// </summary>
        [JsonProperty(PropertyName = "maximum")]
        public double? Maximum { get; private set; }

        /// <summary>
        /// Gets the min value of the metric.
        /// </summary>
        [JsonProperty(PropertyName = "minimum")]
        public double? Minimum { get; private set; }

        /// <summary>
        /// Gets the metric timestamp (ISO-8601 format).
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; private set; }

        /// <summary>
        /// Gets the total value of the metric.
        /// </summary>
        [JsonProperty(PropertyName = "total")]
        public double? Total { get; private set; }

    }
}
