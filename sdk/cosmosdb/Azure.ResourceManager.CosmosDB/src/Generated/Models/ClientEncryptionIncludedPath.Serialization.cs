// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class ClientEncryptionIncludedPath : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("path");
            writer.WriteStringValue(Path);
            writer.WritePropertyName("clientEncryptionKeyId");
            writer.WriteStringValue(ClientEncryptionKeyId);
            writer.WritePropertyName("encryptionType");
            writer.WriteStringValue(EncryptionType);
            writer.WritePropertyName("encryptionAlgorithm");
            writer.WriteStringValue(EncryptionAlgorithm);
            writer.WriteEndObject();
        }

        internal static ClientEncryptionIncludedPath DeserializeClientEncryptionIncludedPath(JsonElement element)
        {
            string path = default;
            string clientEncryptionKeyId = default;
            string encryptionType = default;
            string encryptionAlgorithm = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("path"))
                {
                    path = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("clientEncryptionKeyId"))
                {
                    clientEncryptionKeyId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("encryptionType"))
                {
                    encryptionType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("encryptionAlgorithm"))
                {
                    encryptionAlgorithm = property.Value.GetString();
                    continue;
                }
            }
            return new ClientEncryptionIncludedPath(path, clientEncryptionKeyId, encryptionType, encryptionAlgorithm);
        }
    }
}
