// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The form of AutoReplicate that is being used by this cluster. </summary>
    public readonly partial struct AutoReplicate : IEquatable<AutoReplicate>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AutoReplicate"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AutoReplicate(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string SystemKeyspacesValue = "SystemKeyspaces";
        private const string AllKeyspacesValue = "AllKeyspaces";

        /// <summary> None. </summary>
        public static AutoReplicate None { get; } = new AutoReplicate(NoneValue);
        /// <summary> SystemKeyspaces. </summary>
        public static AutoReplicate SystemKeyspaces { get; } = new AutoReplicate(SystemKeyspacesValue);
        /// <summary> AllKeyspaces. </summary>
        public static AutoReplicate AllKeyspaces { get; } = new AutoReplicate(AllKeyspacesValue);
        /// <summary> Determines if two <see cref="AutoReplicate"/> values are the same. </summary>
        public static bool operator ==(AutoReplicate left, AutoReplicate right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AutoReplicate"/> values are not the same. </summary>
        public static bool operator !=(AutoReplicate left, AutoReplicate right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AutoReplicate"/>. </summary>
        public static implicit operator AutoReplicate(string value) => new AutoReplicate(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AutoReplicate other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AutoReplicate other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
