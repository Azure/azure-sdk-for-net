// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The ExtendedMongoDBDatabaseResourceInfo. </summary>
    public partial class ExtendedMongoDBDatabaseResourceInfo : MongoDBDatabaseResourceInfo
    {
        /// <summary> Initializes a new instance of <see cref="ExtendedMongoDBDatabaseResourceInfo"/>. </summary>
        /// <param name="databaseName"> Name of the Cosmos DB MongoDB database. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="databaseName"/> is null. </exception>
        public ExtendedMongoDBDatabaseResourceInfo(string databaseName) : base(databaseName)
        {
            Argument.AssertNotNull(databaseName, nameof(databaseName));
        }

        /// <summary> Initializes a new instance of <see cref="ExtendedMongoDBDatabaseResourceInfo"/>. </summary>
        /// <param name="databaseName"> Name of the Cosmos DB MongoDB database. </param>
        /// <param name="restoreParameters"> Parameters to indicate the information about the restore. </param>
        /// <param name="createMode"> Enum to indicate the mode of resource creation. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ExtendedMongoDBDatabaseResourceInfo(string databaseName, ResourceRestoreParameters restoreParameters, CosmosDBAccountCreateMode? createMode, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(databaseName, restoreParameters, createMode, serializedAdditionalRawData)
        {
        }

        /// <summary> Initializes a new instance of <see cref="ExtendedMongoDBDatabaseResourceInfo"/> for deserialization. </summary>
        internal ExtendedMongoDBDatabaseResourceInfo()
        {
        }
    }
}
