// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> Represents a mongo cluster resource for updates. </summary>
    public partial class MongoClusterPatch
    {
        /// <summary> Initializes a new instance of MongoClusterPatch. </summary>
        public MongoClusterPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
            NodeGroupSpecs = new ChangeTrackingList<NodeGroupSpec>();
        }

        /// <summary> Application-specific metadata in the form of key-value pairs. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> The mode to create a mongo cluster. </summary>
        public CosmosDBAccountCreateMode? CreateMode { get; set; }
        /// <summary> Parameters used for restore operations. </summary>
        public MongoClusterRestoreParameters RestoreParameters { get; set; }
        /// <summary> The administrator's login for the mongo cluster. </summary>
        public string AdministratorLogin { get; set; }
        /// <summary> The password of the administrator login. </summary>
        public string AdministratorLoginPassword { get; set; }
        /// <summary> The Mongo DB server version. Defaults to the latest available version if not specified. </summary>
        public string ServerVersion { get; set; }
        /// <summary> The default mongo connection string for the cluster. </summary>
        public string ConnectionString { get; }
        /// <summary> Earliest restore timestamp in UTC ISO8601 format. </summary>
        public string EarliestRestoreTime { get; }
        /// <summary> A provisioning state of the mongo cluster. </summary>
        public CosmosDBProvisioningState? ProvisioningState { get; }
        /// <summary> A status of the mongo cluster. </summary>
        public MongoClusterStatus? ClusterStatus { get; }
        /// <summary> The list of node group specs in the cluster. </summary>
        public IList<NodeGroupSpec> NodeGroupSpecs { get; }
    }
}
