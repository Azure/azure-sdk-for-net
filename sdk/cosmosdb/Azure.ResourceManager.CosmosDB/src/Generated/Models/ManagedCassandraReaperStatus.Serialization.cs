// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class ManagedCassandraReaperStatus
    {
        internal static ManagedCassandraReaperStatus DeserializeManagedCassandraReaperStatus(JsonElement element)
        {
            Optional<bool> healthy = default;
            Optional<IReadOnlyDictionary<string, string>> repairRunIds = default;
            Optional<IReadOnlyDictionary<string, string>> repairSchedules = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("healthy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    healthy = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("repairRunIds"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    repairRunIds = dictionary;
                    continue;
                }
                if (property.NameEquals("repairSchedules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    repairSchedules = dictionary;
                    continue;
                }
            }
            return new ManagedCassandraReaperStatus(Optional.ToNullable(healthy), Optional.ToDictionary(repairRunIds), Optional.ToDictionary(repairSchedules));
        }
    }
}
