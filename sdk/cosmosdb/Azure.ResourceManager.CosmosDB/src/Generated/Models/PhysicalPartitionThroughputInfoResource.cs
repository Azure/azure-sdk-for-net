// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> PhysicalPartitionThroughputInfo object. </summary>
    public partial class PhysicalPartitionThroughputInfoResource
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="PhysicalPartitionThroughputInfoResource"/>. </summary>
        /// <param name="id"> Id of a physical partition. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        public PhysicalPartitionThroughputInfoResource(string id)
        {
            Argument.AssertNotNull(id, nameof(id));

            Id = id;
        }

        /// <summary> Initializes a new instance of <see cref="PhysicalPartitionThroughputInfoResource"/>. </summary>
        /// <param name="id"> Id of a physical partition. </param>
        /// <param name="throughput"> Throughput of a physical partition. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal PhysicalPartitionThroughputInfoResource(string id, double? throughput, Dictionary<string, BinaryData> rawData)
        {
            Id = id;
            Throughput = throughput;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="PhysicalPartitionThroughputInfoResource"/> for deserialization. </summary>
        internal PhysicalPartitionThroughputInfoResource()
        {
        }

        /// <summary> Id of a physical partition. </summary>
        public string Id { get; set; }
        /// <summary> Throughput of a physical partition. </summary>
        public double? Throughput { get; set; }
    }
}
