// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The usage data for a usage request. </summary>
    public partial class CosmosDBBaseUsage
    {
        protected internal Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="CosmosDBBaseUsage"/>. </summary>
        internal CosmosDBBaseUsage()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CosmosDBBaseUsage"/>. </summary>
        /// <param name="unit"> The unit of the metric. </param>
        /// <param name="name"> The name information for the metric. </param>
        /// <param name="quotaPeriod"> The quota period used to summarize the usage values. </param>
        /// <param name="limit"> Maximum value for this metric. </param>
        /// <param name="currentValue"> Current value for this metric. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal CosmosDBBaseUsage(CosmosDBMetricUnitType? unit, CosmosDBMetricName name, string quotaPeriod, long? limit, long? currentValue, Dictionary<string, BinaryData> rawData)
        {
            Unit = unit;
            Name = name;
            QuotaPeriod = quotaPeriod;
            Limit = limit;
            CurrentValue = currentValue;
            _rawData = rawData;
        }

        /// <summary> The unit of the metric. </summary>
        public CosmosDBMetricUnitType? Unit { get; }
        /// <summary> The name information for the metric. </summary>
        public CosmosDBMetricName Name { get; }
        /// <summary> The quota period used to summarize the usage values. </summary>
        public string QuotaPeriod { get; }
        /// <summary> Maximum value for this metric. </summary>
        public long? Limit { get; }
        /// <summary> Current value for this metric. </summary>
        public long? CurrentValue { get; }
    }
}
