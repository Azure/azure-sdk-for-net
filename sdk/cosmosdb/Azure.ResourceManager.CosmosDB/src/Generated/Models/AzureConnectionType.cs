// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> How to connect to the azure services needed for running the cluster. </summary>
    public readonly partial struct AzureConnectionType : IEquatable<AzureConnectionType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureConnectionType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureConnectionType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string VpnValue = "VPN";

        /// <summary> None. </summary>
        public static AzureConnectionType None { get; } = new AzureConnectionType(NoneValue);
        /// <summary> VPN. </summary>
        public static AzureConnectionType Vpn { get; } = new AzureConnectionType(VpnValue);
        /// <summary> Determines if two <see cref="AzureConnectionType"/> values are the same. </summary>
        public static bool operator ==(AzureConnectionType left, AzureConnectionType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureConnectionType"/> values are not the same. </summary>
        public static bool operator !=(AzureConnectionType left, AzureConnectionType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AzureConnectionType"/>. </summary>
        public static implicit operator AzureConnectionType(string value) => new AzureConnectionType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureConnectionType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureConnectionType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
