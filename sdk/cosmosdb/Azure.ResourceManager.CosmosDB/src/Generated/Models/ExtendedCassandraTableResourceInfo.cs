// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> The ExtendedCassandraTableResourceInfo. </summary>
    public partial class ExtendedCassandraTableResourceInfo : CassandraTableResourceInfo
    {
        /// <summary> Initializes a new instance of <see cref="ExtendedCassandraTableResourceInfo"/>. </summary>
        /// <param name="tableName"> Name of the Cosmos DB Cassandra table. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="tableName"/> is null. </exception>
        public ExtendedCassandraTableResourceInfo(string tableName) : base(tableName)
        {
            Argument.AssertNotNull(tableName, nameof(tableName));
        }

        /// <summary> Initializes a new instance of <see cref="ExtendedCassandraTableResourceInfo"/>. </summary>
        /// <param name="tableName"> Name of the Cosmos DB Cassandra table. </param>
        /// <param name="defaultTtl"> Time to live of the Cosmos DB Cassandra table. </param>
        /// <param name="schema"> Schema of the Cosmos DB Cassandra table. </param>
        /// <param name="analyticalStorageTtl"> Analytical TTL. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ExtendedCassandraTableResourceInfo(string tableName, int? defaultTtl, CassandraSchema schema, int? analyticalStorageTtl, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(tableName, defaultTtl, schema, analyticalStorageTtl, serializedAdditionalRawData)
        {
        }

        /// <summary> Initializes a new instance of <see cref="ExtendedCassandraTableResourceInfo"/> for deserialization. </summary>
        internal ExtendedCassandraTableResourceInfo()
        {
        }
    }
}
