// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> Cosmos DB client encryption policy. </summary>
    public partial class CosmosDBClientEncryptionPolicy
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="CosmosDBClientEncryptionPolicy"/>. </summary>
        /// <param name="includedPaths"> Paths of the item that need encryption along with path-specific settings. </param>
        /// <param name="policyFormatVersion"> Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="includedPaths"/> is null. </exception>
        public CosmosDBClientEncryptionPolicy(IEnumerable<CosmosDBClientEncryptionIncludedPath> includedPaths, int policyFormatVersion)
        {
            Argument.AssertNotNull(includedPaths, nameof(includedPaths));

            IncludedPaths = includedPaths.ToList();
            PolicyFormatVersion = policyFormatVersion;
        }

        /// <summary> Initializes a new instance of <see cref="CosmosDBClientEncryptionPolicy"/>. </summary>
        /// <param name="includedPaths"> Paths of the item that need encryption along with path-specific settings. </param>
        /// <param name="policyFormatVersion"> Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal CosmosDBClientEncryptionPolicy(IList<CosmosDBClientEncryptionIncludedPath> includedPaths, int policyFormatVersion, Dictionary<string, BinaryData> rawData)
        {
            IncludedPaths = includedPaths;
            PolicyFormatVersion = policyFormatVersion;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="CosmosDBClientEncryptionPolicy"/> for deserialization. </summary>
        internal CosmosDBClientEncryptionPolicy()
        {
        }

        /// <summary> Paths of the item that need encryption along with path-specific settings. </summary>
        public IList<CosmosDBClientEncryptionIncludedPath> IncludedPaths { get; }
        /// <summary> Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. </summary>
        public int PolicyFormatVersion { get; set; }
    }
}
