// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class CosmosDBAccountLocation : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(LocationName))
            {
                writer.WritePropertyName("locationName"u8);
                writer.WriteStringValue(LocationName.Value);
            }
            if (Core.Optional.IsDefined(FailoverPriority))
            {
                writer.WritePropertyName("failoverPriority"u8);
                writer.WriteNumberValue(FailoverPriority.Value);
            }
            if (Core.Optional.IsDefined(IsZoneRedundant))
            {
                writer.WritePropertyName("isZoneRedundant"u8);
                writer.WriteBooleanValue(IsZoneRedundant.Value);
            }
            writer.WriteEndObject();
        }

        internal static CosmosDBAccountLocation DeserializeCosmosDBAccountLocation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> id = default;
            Core.Optional<AzureLocation> locationName = default;
            Core.Optional<string> documentEndpoint = default;
            Core.Optional<string> provisioningState = default;
            Core.Optional<int> failoverPriority = default;
            Core.Optional<bool> isZoneRedundant = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("locationName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    locationName = new AzureLocation(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("documentEndpoint"u8))
                {
                    documentEndpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"u8))
                {
                    provisioningState = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("failoverPriority"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    failoverPriority = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("isZoneRedundant"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isZoneRedundant = property.Value.GetBoolean();
                    continue;
                }
            }
            return new CosmosDBAccountLocation(id.Value, Core.Optional.ToNullable(locationName), documentEndpoint.Value, provisioningState.Value, Core.Optional.ToNullable(failoverPriority), Core.Optional.ToNullable(isZoneRedundant));
        }
    }
}
