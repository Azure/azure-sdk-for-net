// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> Resource to redistribute throughput for Azure Cosmos DB resource. </summary>
    public partial class RedistributeThroughputPropertiesResource
    {
        /// <summary> Initializes a new instance of <see cref="RedistributeThroughputPropertiesResource"/>. </summary>
        /// <param name="throughputPolicy"> ThroughputPolicy to apply for throughput redistribution. </param>
        /// <param name="targetPhysicalPartitionThroughputInfo"> Array of PhysicalPartitionThroughputInfoResource objects. </param>
        /// <param name="sourcePhysicalPartitionThroughputInfo"> Array of PhysicalPartitionThroughputInfoResource objects. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="targetPhysicalPartitionThroughputInfo"/> or <paramref name="sourcePhysicalPartitionThroughputInfo"/> is null. </exception>
        public RedistributeThroughputPropertiesResource(ThroughputPolicyType throughputPolicy, IEnumerable<PhysicalPartitionThroughputInfoResource> targetPhysicalPartitionThroughputInfo, IEnumerable<PhysicalPartitionThroughputInfoResource> sourcePhysicalPartitionThroughputInfo)
        {
            Argument.AssertNotNull(targetPhysicalPartitionThroughputInfo, nameof(targetPhysicalPartitionThroughputInfo));
            Argument.AssertNotNull(sourcePhysicalPartitionThroughputInfo, nameof(sourcePhysicalPartitionThroughputInfo));

            ThroughputPolicy = throughputPolicy;
            TargetPhysicalPartitionThroughputInfo = targetPhysicalPartitionThroughputInfo.ToList();
            SourcePhysicalPartitionThroughputInfo = sourcePhysicalPartitionThroughputInfo.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="RedistributeThroughputPropertiesResource"/>. </summary>
        /// <param name="throughputPolicy"> ThroughputPolicy to apply for throughput redistribution. </param>
        /// <param name="targetPhysicalPartitionThroughputInfo"> Array of PhysicalPartitionThroughputInfoResource objects. </param>
        /// <param name="sourcePhysicalPartitionThroughputInfo"> Array of PhysicalPartitionThroughputInfoResource objects. </param>
        internal RedistributeThroughputPropertiesResource(ThroughputPolicyType throughputPolicy, IList<PhysicalPartitionThroughputInfoResource> targetPhysicalPartitionThroughputInfo, IList<PhysicalPartitionThroughputInfoResource> sourcePhysicalPartitionThroughputInfo)
        {
            ThroughputPolicy = throughputPolicy;
            TargetPhysicalPartitionThroughputInfo = targetPhysicalPartitionThroughputInfo;
            SourcePhysicalPartitionThroughputInfo = sourcePhysicalPartitionThroughputInfo;
        }

        /// <summary> ThroughputPolicy to apply for throughput redistribution. </summary>
        public ThroughputPolicyType ThroughputPolicy { get; set; }
        /// <summary> Array of PhysicalPartitionThroughputInfoResource objects. </summary>
        public IList<PhysicalPartitionThroughputInfoResource> TargetPhysicalPartitionThroughputInfo { get; }
        /// <summary> Array of PhysicalPartitionThroughputInfoResource objects. </summary>
        public IList<PhysicalPartitionThroughputInfoResource> SourcePhysicalPartitionThroughputInfo { get; }
    }
}
