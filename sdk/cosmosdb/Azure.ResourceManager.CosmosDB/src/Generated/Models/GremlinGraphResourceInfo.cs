// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDB.Models
{
    /// <summary> Cosmos DB Gremlin graph resource object. </summary>
    public partial class GremlinGraphResourceInfo
    {
        /// <summary> Initializes a new instance of GremlinGraphResourceInfo. </summary>
        /// <param name="graphName"> Name of the Cosmos DB Gremlin graph. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="graphName"/> is null. </exception>
        public GremlinGraphResourceInfo(string graphName)
        {
            if (graphName == null)
            {
                throw new ArgumentNullException(nameof(graphName));
            }

            GraphName = graphName;
        }

        /// <summary> Initializes a new instance of GremlinGraphResourceInfo. </summary>
        /// <param name="graphName"> Name of the Cosmos DB Gremlin graph. </param>
        /// <param name="indexingPolicy"> The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph. </param>
        /// <param name="partitionKey"> The configuration of the partition key to be used for partitioning data into multiple partitions. </param>
        /// <param name="defaultTtl"> Default time to live. </param>
        /// <param name="uniqueKeyPolicy"> The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service. </param>
        /// <param name="conflictResolutionPolicy"> The conflict resolution policy for the graph. </param>
        internal GremlinGraphResourceInfo(string graphName, CosmosDBIndexingPolicy indexingPolicy, CosmosDBContainerPartitionKey partitionKey, int? defaultTtl, CosmosDBUniqueKeyPolicy uniqueKeyPolicy, ConflictResolutionPolicy conflictResolutionPolicy)
        {
            GraphName = graphName;
            IndexingPolicy = indexingPolicy;
            PartitionKey = partitionKey;
            DefaultTtl = defaultTtl;
            UniqueKeyPolicy = uniqueKeyPolicy;
            ConflictResolutionPolicy = conflictResolutionPolicy;
        }

        /// <summary> Name of the Cosmos DB Gremlin graph. </summary>
        public string GraphName { get; set; }
        /// <summary> The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph. </summary>
        public CosmosDBIndexingPolicy IndexingPolicy { get; set; }
        /// <summary> The configuration of the partition key to be used for partitioning data into multiple partitions. </summary>
        public CosmosDBContainerPartitionKey PartitionKey { get; set; }
        /// <summary> Default time to live. </summary>
        public int? DefaultTtl { get; set; }
        /// <summary> The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service. </summary>
        internal CosmosDBUniqueKeyPolicy UniqueKeyPolicy { get; set; }
        /// <summary> List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service. </summary>
        public IList<CosmosDBUniqueKey> UniqueKeys
        {
            get
            {
                if (UniqueKeyPolicy is null)
                    UniqueKeyPolicy = new CosmosDBUniqueKeyPolicy();
                return UniqueKeyPolicy.UniqueKeys;
            }
        }

        /// <summary> The conflict resolution policy for the graph. </summary>
        public ConflictResolutionPolicy ConflictResolutionPolicy { get; set; }
    }
}
