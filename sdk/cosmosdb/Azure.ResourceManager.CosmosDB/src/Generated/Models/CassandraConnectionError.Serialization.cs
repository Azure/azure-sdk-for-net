// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class CassandraConnectionError
    {
        internal static CassandraConnectionError DeserializeCassandraConnectionError(JsonElement element)
        {
            Optional<CassandraConnectionState> connectionState = default;
            Optional<string> ipFrom = default;
            Optional<string> ipTo = default;
            Optional<int> port = default;
            Optional<string> exception = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("connectionState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    connectionState = new CassandraConnectionState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("iPFrom"))
                {
                    ipFrom = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("iPTo"))
                {
                    ipTo = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("port"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    port = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("exception"))
                {
                    exception = property.Value.GetString();
                    continue;
                }
            }
            return new CassandraConnectionError(Optional.ToNullable(connectionState), ipFrom.Value, ipTo.Value, Optional.ToNullable(port), exception.Value);
        }
    }
}
