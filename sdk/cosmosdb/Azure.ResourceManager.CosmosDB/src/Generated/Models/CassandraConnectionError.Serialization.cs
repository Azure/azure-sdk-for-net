// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class CassandraConnectionError
    {
        internal static CassandraConnectionError DeserializeCassandraConnectionError(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            CassandraConnectionState? connectionState = default;
            string ipFrom = default;
            string ipTo = default;
            int? port = default;
            string exception = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("connectionState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    connectionState = new CassandraConnectionState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("iPFrom"u8))
                {
                    ipFrom = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("iPTo"u8))
                {
                    ipTo = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("port"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    port = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("exception"u8))
                {
                    exception = property.Value.GetString();
                    continue;
                }
            }
            return new CassandraConnectionError(connectionState, ipFrom, ipTo, port, exception);
        }
    }
}
