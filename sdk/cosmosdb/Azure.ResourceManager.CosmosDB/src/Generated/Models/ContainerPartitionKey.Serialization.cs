// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class ContainerPartitionKey : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Paths))
            {
                writer.WritePropertyName("paths");
                writer.WriteStartArray();
                foreach (var item in Paths)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind.Value.ToString());
            }
            if (Optional.IsDefined(Version))
            {
                writer.WritePropertyName("version");
                writer.WriteNumberValue(Version.Value);
            }
            writer.WriteEndObject();
        }

        internal static ContainerPartitionKey DeserializeContainerPartitionKey(JsonElement element)
        {
            Optional<IList<string>> paths = default;
            Optional<PartitionKind> kind = default;
            Optional<int> version = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("paths"))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    paths = array;
                    continue;
                }
                if (property.NameEquals("kind"))
                {
                    kind = new PartitionKind(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("version"))
                {
                    version = property.Value.GetInt32();
                    continue;
                }
            }
            return new ContainerPartitionKey(Optional.ToList(paths), Optional.ToNullable(kind), Optional.ToNullable(version));
        }
    }
}
