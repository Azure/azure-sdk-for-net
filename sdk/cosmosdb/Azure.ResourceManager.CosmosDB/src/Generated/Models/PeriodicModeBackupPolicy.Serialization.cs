// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class PeriodicModeBackupPolicy : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PeriodicModeProperties))
            {
                writer.WritePropertyName("periodicModeProperties");
                writer.WriteObjectValue(PeriodicModeProperties);
            }
            writer.WritePropertyName("type");
            writer.WriteStringValue(Type.ToString());
            if (Optional.IsDefined(MigrationState))
            {
                writer.WritePropertyName("migrationState");
                writer.WriteObjectValue(MigrationState);
            }
            writer.WriteEndObject();
        }

        internal static PeriodicModeBackupPolicy DeserializePeriodicModeBackupPolicy(JsonElement element)
        {
            Optional<PeriodicModeProperties> periodicModeProperties = default;
            BackupPolicyType type = default;
            Optional<BackupPolicyMigrationState> migrationState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("periodicModeProperties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    periodicModeProperties = PeriodicModeProperties.DeserializePeriodicModeProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new BackupPolicyType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("migrationState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    migrationState = BackupPolicyMigrationState.DeserializeBackupPolicyMigrationState(property.Value);
                    continue;
                }
            }
            return new PeriodicModeBackupPolicy(type, migrationState.Value, periodicModeProperties.Value);
        }
    }
}
