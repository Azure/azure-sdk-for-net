// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class PercentileMetricValue
    {
        internal static PercentileMetricValue DeserializePercentileMetricValue(JsonElement element)
        {
            Optional<double> p10 = default;
            Optional<double> p25 = default;
            Optional<double> p50 = default;
            Optional<double> p75 = default;
            Optional<double> p90 = default;
            Optional<double> p95 = default;
            Optional<double> p99 = default;
            Optional<int> Count = default;
            Optional<double> average = default;
            Optional<double> maximum = default;
            Optional<double> minimum = default;
            Optional<DateTimeOffset> timestamp = default;
            Optional<double> total = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("P10"))
                {
                    p10 = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("P25"))
                {
                    p25 = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("P50"))
                {
                    p50 = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("P75"))
                {
                    p75 = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("P90"))
                {
                    p90 = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("P95"))
                {
                    p95 = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("P99"))
                {
                    p99 = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("_count"))
                {
                    Count = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("average"))
                {
                    average = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("maximum"))
                {
                    maximum = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("minimum"))
                {
                    minimum = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("timestamp"))
                {
                    timestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("total"))
                {
                    total = property.Value.GetDouble();
                    continue;
                }
            }
            return new PercentileMetricValue(Optional.ToNullable(Count), Optional.ToNullable(average), Optional.ToNullable(maximum), Optional.ToNullable(minimum), Optional.ToNullable(timestamp), Optional.ToNullable(total), Optional.ToNullable(p10), Optional.ToNullable(p25), Optional.ToNullable(p50), Optional.ToNullable(p75), Optional.ToNullable(p90), Optional.ToNullable(p95), Optional.ToNullable(p99));
        }
    }
}
