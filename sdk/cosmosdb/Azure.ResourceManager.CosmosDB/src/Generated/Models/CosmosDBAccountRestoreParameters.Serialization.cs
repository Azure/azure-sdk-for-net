// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDB.Models
{
    public partial class CosmosDBAccountRestoreParameters : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RestoreMode))
            {
                writer.WritePropertyName("restoreMode");
                writer.WriteStringValue(RestoreMode.Value.ToString());
            }
            if (Optional.IsDefined(RestoreSource))
            {
                writer.WritePropertyName("restoreSource");
                writer.WriteStringValue(RestoreSource);
            }
            if (Optional.IsDefined(RestoreTimestampInUtc))
            {
                writer.WritePropertyName("restoreTimestampInUtc");
                writer.WriteStringValue(RestoreTimestampInUtc.Value, "O");
            }
            if (Optional.IsCollectionDefined(DatabasesToRestore))
            {
                writer.WritePropertyName("databasesToRestore");
                writer.WriteStartArray();
                foreach (var item in DatabasesToRestore)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static CosmosDBAccountRestoreParameters DeserializeCosmosDBAccountRestoreParameters(JsonElement element)
        {
            Optional<CosmosDBAccountRestoreMode> restoreMode = default;
            Optional<string> restoreSource = default;
            Optional<DateTimeOffset> restoreTimestampInUtc = default;
            Optional<IList<DatabaseRestoreResourceInfo>> databasesToRestore = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("restoreMode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    restoreMode = new CosmosDBAccountRestoreMode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("restoreSource"))
                {
                    restoreSource = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("restoreTimestampInUtc"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    restoreTimestampInUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("databasesToRestore"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<DatabaseRestoreResourceInfo> array = new List<DatabaseRestoreResourceInfo>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DatabaseRestoreResourceInfo.DeserializeDatabaseRestoreResourceInfo(item));
                    }
                    databasesToRestore = array;
                    continue;
                }
            }
            return new CosmosDBAccountRestoreParameters(Optional.ToNullable(restoreMode), restoreSource.Value, Optional.ToNullable(restoreTimestampInUtc), Optional.ToList(databasesToRestore));
        }
    }
}
