// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.CosmosDB;

namespace Azure.ResourceManager.CosmosDB.Samples
{
    public partial class Sample_CosmosDBFirewallRuleResource
    {
        // Create a firewall rule of the mongo cluster
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreateAFirewallRuleOfTheMongoCluster()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2023-09-15-preview/examples/mongo-cluster/CosmosDBMongoClusterFirewallRuleCreate.json
            // this example is just showing the usage of "MongoClusters_CreateOrUpdateFirewallRule" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CosmosDBFirewallRuleResource created on azure
            // for more information of creating CosmosDBFirewallRuleResource, please refer to the document of CosmosDBFirewallRuleResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string mongoClusterName = "myMongoCluster";
            string firewallRuleName = "rule1";
            ResourceIdentifier cosmosDBFirewallRuleResourceId = CosmosDBFirewallRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, mongoClusterName, firewallRuleName);
            CosmosDBFirewallRuleResource cosmosDBFirewallRule = client.GetCosmosDBFirewallRuleResource(cosmosDBFirewallRuleResourceId);

            // invoke the operation
            CosmosDBFirewallRuleData data = new CosmosDBFirewallRuleData("0.0.0.0", "255.255.255.255");
            ArmOperation<CosmosDBFirewallRuleResource> lro = await cosmosDBFirewallRule.UpdateAsync(WaitUntil.Completed, data);
            CosmosDBFirewallRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CosmosDBFirewallRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete the firewall rule of the mongo cluster
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteTheFirewallRuleOfTheMongoCluster()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2023-09-15-preview/examples/mongo-cluster/CosmosDBMongoClusterFirewallRuleDelete.json
            // this example is just showing the usage of "MongoClusters_DeleteFirewallRule" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CosmosDBFirewallRuleResource created on azure
            // for more information of creating CosmosDBFirewallRuleResource, please refer to the document of CosmosDBFirewallRuleResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string mongoClusterName = "myMongoCluster";
            string firewallRuleName = "rule1";
            ResourceIdentifier cosmosDBFirewallRuleResourceId = CosmosDBFirewallRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, mongoClusterName, firewallRuleName);
            CosmosDBFirewallRuleResource cosmosDBFirewallRule = client.GetCosmosDBFirewallRuleResource(cosmosDBFirewallRuleResourceId);

            // invoke the operation
            await cosmosDBFirewallRule.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Get the firewall rule of the mongo cluster
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetTheFirewallRuleOfTheMongoCluster()
        {
            // Generated from example definition: specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2023-09-15-preview/examples/mongo-cluster/CosmosDBMongoClusterFirewallRuleGet.json
            // this example is just showing the usage of "MongoClusters_GetFirewallRule" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CosmosDBFirewallRuleResource created on azure
            // for more information of creating CosmosDBFirewallRuleResource, please refer to the document of CosmosDBFirewallRuleResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string mongoClusterName = "myMongoCluster";
            string firewallRuleName = "rule1";
            ResourceIdentifier cosmosDBFirewallRuleResourceId = CosmosDBFirewallRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, mongoClusterName, firewallRuleName);
            CosmosDBFirewallRuleResource cosmosDBFirewallRule = client.GetCosmosDBFirewallRuleResource(cosmosDBFirewallRuleResourceId);

            // invoke the operation
            CosmosDBFirewallRuleResource result = await cosmosDBFirewallRule.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CosmosDBFirewallRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
