// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GraphResourcesOperations.
    /// </summary>
    public static partial class GraphResourcesOperationsExtensions
    {
            /// <summary>
            /// Lists the graphs under an existing Azure Cosmos DB database account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            public static IEnumerable<GraphResourceGetResults> ListGraphs(this IGraphResourcesOperations operations, string resourceGroupName, string accountName)
            {
                return operations.ListGraphsAsync(resourceGroupName, accountName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the graphs under an existing Azure Cosmos DB database account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<GraphResourceGetResults>> ListGraphsAsync(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListGraphsWithHttpMessagesAsync(resourceGroupName, accountName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the Graph resource under an existing Azure Cosmos DB database account
            /// with the provided name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            public static GraphResourceGetResults GetGraph(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName)
            {
                return operations.GetGraphAsync(resourceGroupName, accountName, graphName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the Graph resource under an existing Azure Cosmos DB database account
            /// with the provided name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GraphResourceGetResults> GetGraphAsync(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetGraphWithHttpMessagesAsync(resourceGroupName, accountName, graphName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update an Azure Cosmos DB Graph.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            /// <param name='createUpdateGraphParameters'>
            /// The parameters to provide for the current graph.
            /// </param>
            public static GraphResourceGetResults CreateUpdateGraph(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName, GraphResourceCreateUpdateParameters createUpdateGraphParameters)
            {
                return operations.CreateUpdateGraphAsync(resourceGroupName, accountName, graphName, createUpdateGraphParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update an Azure Cosmos DB Graph.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            /// <param name='createUpdateGraphParameters'>
            /// The parameters to provide for the current graph.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GraphResourceGetResults> CreateUpdateGraphAsync(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName, GraphResourceCreateUpdateParameters createUpdateGraphParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateUpdateGraphWithHttpMessagesAsync(resourceGroupName, accountName, graphName, createUpdateGraphParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an existing Azure Cosmos DB Graph Resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            public static void DeleteGraphResource(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName)
            {
                operations.DeleteGraphResourceAsync(resourceGroupName, accountName, graphName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an existing Azure Cosmos DB Graph Resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteGraphResourceAsync(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteGraphResourceWithHttpMessagesAsync(resourceGroupName, accountName, graphName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create or update an Azure Cosmos DB Graph.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            /// <param name='createUpdateGraphParameters'>
            /// The parameters to provide for the current graph.
            /// </param>
            public static GraphResourceGetResults BeginCreateUpdateGraph(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName, GraphResourceCreateUpdateParameters createUpdateGraphParameters)
            {
                return operations.BeginCreateUpdateGraphAsync(resourceGroupName, accountName, graphName, createUpdateGraphParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update an Azure Cosmos DB Graph.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            /// <param name='createUpdateGraphParameters'>
            /// The parameters to provide for the current graph.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GraphResourceGetResults> BeginCreateUpdateGraphAsync(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName, GraphResourceCreateUpdateParameters createUpdateGraphParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateUpdateGraphWithHttpMessagesAsync(resourceGroupName, accountName, graphName, createUpdateGraphParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an existing Azure Cosmos DB Graph Resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            public static void BeginDeleteGraphResource(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName)
            {
                operations.BeginDeleteGraphResourceAsync(resourceGroupName, accountName, graphName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an existing Azure Cosmos DB Graph Resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='graphName'>
            /// Cosmos DB graph resource name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteGraphResourceAsync(this IGraphResourcesOperations operations, string resourceGroupName, string accountName, string graphName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteGraphResourceWithHttpMessagesAsync(resourceGroupName, accountName, graphName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
