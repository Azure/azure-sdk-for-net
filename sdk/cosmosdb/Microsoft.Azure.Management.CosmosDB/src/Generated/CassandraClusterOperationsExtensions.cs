// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CassandraClusterOperations.
    /// </summary>
    public static partial class CassandraClusterOperationsExtensions
    {
            /// <summary>
            /// Deallocate the Managed Cassandra Cluster and Associated Data Centers.
            /// Deallocation will deallocate the host virtual machine of this cluster, and
            /// reserved the data disk. This won't do anything on an already deallocated
            /// cluster. Use Start to restart the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// Managed Cassandra cluster name.
            /// </param>
            public static void Deallocate(this ICassandraClusterOperations operations, string resourceGroupName, string clusterName)
            {
                operations.DeallocateAsync(resourceGroupName, clusterName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deallocate the Managed Cassandra Cluster and Associated Data Centers.
            /// Deallocation will deallocate the host virtual machine of this cluster, and
            /// reserved the data disk. This won't do anything on an already deallocated
            /// cluster. Use Start to restart the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// Managed Cassandra cluster name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeallocateAsync(this ICassandraClusterOperations operations, string resourceGroupName, string clusterName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeallocateWithHttpMessagesAsync(resourceGroupName, clusterName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Start the Managed Cassandra Cluster and Associated Data Centers. Start will
            /// start the host virtual machine of this cluster with reserved data disk.
            /// This won't do anything on an already running cluster. Use Deallocate to
            /// deallocate the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// Managed Cassandra cluster name.
            /// </param>
            public static void Start(this ICassandraClusterOperations operations, string resourceGroupName, string clusterName)
            {
                operations.StartAsync(resourceGroupName, clusterName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Start the Managed Cassandra Cluster and Associated Data Centers. Start will
            /// start the host virtual machine of this cluster with reserved data disk.
            /// This won't do anything on an already running cluster. Use Deallocate to
            /// deallocate the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// Managed Cassandra cluster name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task StartAsync(this ICassandraClusterOperations operations, string resourceGroupName, string clusterName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.StartWithHttpMessagesAsync(resourceGroupName, clusterName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Deallocate the Managed Cassandra Cluster and Associated Data Centers.
            /// Deallocation will deallocate the host virtual machine of this cluster, and
            /// reserved the data disk. This won't do anything on an already deallocated
            /// cluster. Use Start to restart the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// Managed Cassandra cluster name.
            /// </param>
            public static void BeginDeallocate(this ICassandraClusterOperations operations, string resourceGroupName, string clusterName)
            {
                operations.BeginDeallocateAsync(resourceGroupName, clusterName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deallocate the Managed Cassandra Cluster and Associated Data Centers.
            /// Deallocation will deallocate the host virtual machine of this cluster, and
            /// reserved the data disk. This won't do anything on an already deallocated
            /// cluster. Use Start to restart the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// Managed Cassandra cluster name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeallocateAsync(this ICassandraClusterOperations operations, string resourceGroupName, string clusterName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeallocateWithHttpMessagesAsync(resourceGroupName, clusterName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Start the Managed Cassandra Cluster and Associated Data Centers. Start will
            /// start the host virtual machine of this cluster with reserved data disk.
            /// This won't do anything on an already running cluster. Use Deallocate to
            /// deallocate the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// Managed Cassandra cluster name.
            /// </param>
            public static void BeginStart(this ICassandraClusterOperations operations, string resourceGroupName, string clusterName)
            {
                operations.BeginStartAsync(resourceGroupName, clusterName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Start the Managed Cassandra Cluster and Associated Data Centers. Start will
            /// start the host virtual machine of this cluster with reserved data disk.
            /// This won't do anything on an already running cluster. Use Deallocate to
            /// deallocate the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// Managed Cassandra cluster name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginStartAsync(this ICassandraClusterOperations operations, string resourceGroupName, string clusterName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginStartWithHttpMessagesAsync(resourceGroupName, clusterName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
