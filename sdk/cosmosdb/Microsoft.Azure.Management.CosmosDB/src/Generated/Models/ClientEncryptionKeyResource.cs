// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Cosmos DB client encryption key resource object.
    /// </summary>
    public partial class ClientEncryptionKeyResource
    {
        /// <summary>
        /// Initializes a new instance of the ClientEncryptionKeyResource
        /// class.
        /// </summary>
        public ClientEncryptionKeyResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClientEncryptionKeyResource
        /// class.
        /// </summary>
        /// <param name="id">Name of the ClientEncryptionKey</param>
        /// <param name="encryptionAlgorithm">Encryption algorithm that will be
        /// used along with this client encryption key to encrypt/decrypt
        /// data.</param>
        /// <param name="wrappedDataEncryptionKey">Wrapped (encrypted) form of
        /// the key represented as a byte array.</param>
        /// <param name="keyWrapMetadata">Metadata for the wrapping provider
        /// that can be used to unwrap the wrapped client encryption
        /// key.</param>
        public ClientEncryptionKeyResource(string id = default(string), string encryptionAlgorithm = default(string), byte[] wrappedDataEncryptionKey = default(byte[]), KeyWrapMetadata keyWrapMetadata = default(KeyWrapMetadata))
        {
            Id = id;
            EncryptionAlgorithm = encryptionAlgorithm;
            WrappedDataEncryptionKey = wrappedDataEncryptionKey;
            KeyWrapMetadata = keyWrapMetadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the ClientEncryptionKey
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets encryption algorithm that will be used along with this
        /// client encryption key to encrypt/decrypt data.
        /// </summary>
        [JsonProperty(PropertyName = "encryptionAlgorithm")]
        public string EncryptionAlgorithm { get; set; }

        /// <summary>
        /// Gets or sets wrapped (encrypted) form of the key represented as a
        /// byte array.
        /// </summary>
        [JsonProperty(PropertyName = "wrappedDataEncryptionKey")]
        public byte[] WrappedDataEncryptionKey { get; set; }

        /// <summary>
        /// Gets or sets metadata for the wrapping provider that can be used to
        /// unwrap the wrapped client encryption key.
        /// </summary>
        [JsonProperty(PropertyName = "keyWrapMetadata")]
        public KeyWrapMetadata KeyWrapMetadata { get; set; }

    }
}
