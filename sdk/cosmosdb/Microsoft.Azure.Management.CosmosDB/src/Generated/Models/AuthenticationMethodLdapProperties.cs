// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Ldap authentication method properties. This feature is in preview.
    /// </summary>
    public partial class AuthenticationMethodLdapProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AuthenticationMethodLdapProperties class.
        /// </summary>
        public AuthenticationMethodLdapProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AuthenticationMethodLdapProperties class.
        /// </summary>
        /// <param name="serverHostname">Hostname of the LDAP server.</param>
        /// <param name="serverPort">Port of the LDAP server.</param>
        /// <param name="serviceUserDistinguishedName">Distinguished name of
        /// the look up user account, who can look up user details on
        /// authentication.</param>
        /// <param name="serviceUserPassword">Password of the look up
        /// user.</param>
        /// <param name="searchBaseDistinguishedName">Distinguished name of the
        /// object to start the recursive search of users from.</param>
        /// <param name="searchFilterTemplate">Template to use for searching.
        /// Defaults to (cn=%s) where %s will be replaced by the username used
        /// to login.</param>
        public AuthenticationMethodLdapProperties(string serverHostname = default(string), int? serverPort = default(int?), string serviceUserDistinguishedName = default(string), string serviceUserPassword = default(string), string searchBaseDistinguishedName = default(string), string searchFilterTemplate = default(string), IList<Certificate> serverCertificates = default(IList<Certificate>))
        {
            ServerHostname = serverHostname;
            ServerPort = serverPort;
            ServiceUserDistinguishedName = serviceUserDistinguishedName;
            ServiceUserPassword = serviceUserPassword;
            SearchBaseDistinguishedName = searchBaseDistinguishedName;
            SearchFilterTemplate = searchFilterTemplate;
            ServerCertificates = serverCertificates;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets hostname of the LDAP server.
        /// </summary>
        [JsonProperty(PropertyName = "serverHostname")]
        public string ServerHostname { get; set; }

        /// <summary>
        /// Gets or sets port of the LDAP server.
        /// </summary>
        [JsonProperty(PropertyName = "serverPort")]
        public int? ServerPort { get; set; }

        /// <summary>
        /// Gets or sets distinguished name of the look up user account, who
        /// can look up user details on authentication.
        /// </summary>
        [JsonProperty(PropertyName = "serviceUserDistinguishedName")]
        public string ServiceUserDistinguishedName { get; set; }

        /// <summary>
        /// Gets or sets password of the look up user.
        /// </summary>
        [JsonProperty(PropertyName = "serviceUserPassword")]
        public string ServiceUserPassword { get; set; }

        /// <summary>
        /// Gets or sets distinguished name of the object to start the
        /// recursive search of users from.
        /// </summary>
        [JsonProperty(PropertyName = "searchBaseDistinguishedName")]
        public string SearchBaseDistinguishedName { get; set; }

        /// <summary>
        /// Gets or sets template to use for searching. Defaults to (cn=%s)
        /// where %s will be replaced by the username used to login.
        /// </summary>
        [JsonProperty(PropertyName = "searchFilterTemplate")]
        public string SearchFilterTemplate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "serverCertificates")]
        public IList<Certificate> ServerCertificates { get; set; }

    }
}
