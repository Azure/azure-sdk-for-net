// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Virtual Network ACL Rule object
    /// </summary>
    public partial class VirtualNetworkRule
    {
        /// <summary>
        /// Initializes a new instance of the VirtualNetworkRule class.
        /// </summary>
        public VirtualNetworkRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualNetworkRule class.
        /// </summary>
        /// <param name="id">Resource ID of a subnet, for example:
        /// /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.</param>
        /// <param name="ignoreMissingVNetServiceEndpoint">Create firewall rule
        /// before the virtual network has vnet service endpoint
        /// enabled.</param>
        public VirtualNetworkRule(string id = default(string), bool? ignoreMissingVNetServiceEndpoint = default(bool?))
        {
            Id = id;
            IgnoreMissingVNetServiceEndpoint = ignoreMissingVNetServiceEndpoint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource ID of a subnet, for example:
        /// /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets create firewall rule before the virtual network has
        /// vnet service endpoint enabled.
        /// </summary>
        [JsonProperty(PropertyName = "ignoreMissingVNetServiceEndpoint")]
        public bool? IgnoreMissingVNetServiceEndpoint { get; set; }

    }
}
