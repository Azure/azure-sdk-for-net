// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// CreateUpdateOptions are a list of key-value pairs that describe the
    /// resource. Supported keys are "If-Match", "If-None-Match",
    /// "Session-Token" and "Throughput"
    /// </summary>
    public partial class CreateUpdateOptions
    {
        /// <summary>
        /// Initializes a new instance of the CreateUpdateOptions class.
        /// </summary>
        public CreateUpdateOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateUpdateOptions class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="throughput">Request Units per second. For example,
        /// "throughput": "10000".</param>
        public CreateUpdateOptions(IDictionary<string, string> additionalProperties = default(IDictionary<string, string>), string throughput = default(string))
        {
            AdditionalProperties = additionalProperties;
            Throughput = throughput;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        public IDictionary<string, string> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets request Units per second. For example, "throughput":
        /// "10000".
        /// </summary>
        [JsonProperty(PropertyName = "throughput")]
        public string Throughput { get; set; }

    }
}
