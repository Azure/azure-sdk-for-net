// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Configuration values for periodic mode backup
    /// </summary>
    public partial class PeriodicModeProperties
    {
        /// <summary>
        /// Initializes a new instance of the PeriodicModeProperties class.
        /// </summary>
        public PeriodicModeProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PeriodicModeProperties class.
        /// </summary>
        /// <param name="backupIntervalInMinutes">An integer representing the
        /// interval in minutes between two backups</param>
        /// <param name="backupRetentionIntervalInHours">An integer
        /// representing the time (in hours) that each backup is
        /// retained</param>
        /// <param name="backupStorageRedundancy">Enum to indicate type of
        /// backup residency. Possible values include: 'Geo', 'Local',
        /// 'Zone'</param>
        public PeriodicModeProperties(int? backupIntervalInMinutes = default(int?), int? backupRetentionIntervalInHours = default(int?), string backupStorageRedundancy = default(string))
        {
            BackupIntervalInMinutes = backupIntervalInMinutes;
            BackupRetentionIntervalInHours = backupRetentionIntervalInHours;
            BackupStorageRedundancy = backupStorageRedundancy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets an integer representing the interval in minutes
        /// between two backups
        /// </summary>
        [JsonProperty(PropertyName = "backupIntervalInMinutes")]
        public int? BackupIntervalInMinutes { get; set; }

        /// <summary>
        /// Gets or sets an integer representing the time (in hours) that each
        /// backup is retained
        /// </summary>
        [JsonProperty(PropertyName = "backupRetentionIntervalInHours")]
        public int? BackupRetentionIntervalInHours { get; set; }

        /// <summary>
        /// Gets or sets enum to indicate type of backup residency. Possible
        /// values include: 'Geo', 'Local', 'Zone'
        /// </summary>
        [JsonProperty(PropertyName = "backupStorageRedundancy")]
        public string BackupStorageRedundancy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BackupIntervalInMinutes < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "BackupIntervalInMinutes", 0);
            }
            if (BackupRetentionIntervalInHours < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "BackupRetentionIntervalInHours", 0);
            }
        }
    }
}
