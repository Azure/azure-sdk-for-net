// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ApiCenter.Models
{
    /// <summary> The type of environment server. </summary>
    public readonly partial struct EnvironmentServerType : IEquatable<EnvironmentServerType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="EnvironmentServerType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public EnvironmentServerType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AzureAPIManagementValue = "Azure API Management";
        private const string AzureComputeServiceValue = "Azure compute service";
        private const string ApigeeAPIManagementValue = "Apigee API Management";
        private const string AWSAPIGatewayValue = "AWS API Gateway";
        private const string KongAPIGatewayValue = "Kong API Gateway";
        private const string KubernetesValue = "Kubernetes";
        private const string MuleSoftAPIManagementValue = "MuleSoft API Management";

        /// <summary> Api Management Server. </summary>
        public static EnvironmentServerType AzureAPIManagement { get; } = new EnvironmentServerType(AzureAPIManagementValue);
        /// <summary> Compute server. </summary>
        public static EnvironmentServerType AzureComputeService { get; } = new EnvironmentServerType(AzureComputeServiceValue);
        /// <summary> Apigee server. </summary>
        public static EnvironmentServerType ApigeeAPIManagement { get; } = new EnvironmentServerType(ApigeeAPIManagementValue);
        /// <summary> AWS Api Gateway server. </summary>
        public static EnvironmentServerType AWSAPIGateway { get; } = new EnvironmentServerType(AWSAPIGatewayValue);
        /// <summary> Kong API Gateway server. </summary>
        public static EnvironmentServerType KongAPIGateway { get; } = new EnvironmentServerType(KongAPIGatewayValue);
        /// <summary> Kubernetes server. </summary>
        public static EnvironmentServerType Kubernetes { get; } = new EnvironmentServerType(KubernetesValue);
        /// <summary> Mulesoft Api Management server. </summary>
        public static EnvironmentServerType MuleSoftAPIManagement { get; } = new EnvironmentServerType(MuleSoftAPIManagementValue);
        /// <summary> Determines if two <see cref="EnvironmentServerType"/> values are the same. </summary>
        public static bool operator ==(EnvironmentServerType left, EnvironmentServerType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="EnvironmentServerType"/> values are not the same. </summary>
        public static bool operator !=(EnvironmentServerType left, EnvironmentServerType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="EnvironmentServerType"/>. </summary>
        public static implicit operator EnvironmentServerType(string value) => new EnvironmentServerType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is EnvironmentServerType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(EnvironmentServerType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
