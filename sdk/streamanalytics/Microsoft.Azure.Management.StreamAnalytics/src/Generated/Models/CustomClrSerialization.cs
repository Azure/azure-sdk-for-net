// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StreamAnalytics.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes how data from an input is serialized or how data is
    /// serialized when written to an output in custom format.
    /// </summary>
    [Newtonsoft.Json.JsonObject("CustomClr")]
    [Rest.Serialization.JsonTransformation]
    public partial class CustomClrSerialization : Serialization
    {
        /// <summary>
        /// Initializes a new instance of the CustomClrSerialization class.
        /// </summary>
        public CustomClrSerialization()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomClrSerialization class.
        /// </summary>
        /// <param name="serializationDllPath">The serialization library
        /// path.</param>
        /// <param name="serializationClassName">The serialization class
        /// name.</param>
        public CustomClrSerialization(string serializationDllPath = default(string), string serializationClassName = default(string))
        {
            SerializationDllPath = serializationDllPath;
            SerializationClassName = serializationClassName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the serialization library path.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serializationDllPath")]
        public string SerializationDllPath { get; set; }

        /// <summary>
        /// Gets or sets the serialization class name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serializationClassName")]
        public string SerializationClassName { get; set; }

    }
}
