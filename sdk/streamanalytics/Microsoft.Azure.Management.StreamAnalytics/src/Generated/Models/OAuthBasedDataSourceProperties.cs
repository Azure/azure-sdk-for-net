// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StreamAnalytics.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties that are associated with data sources that use OAuth as
    /// their authentication model.
    /// </summary>
    public partial class OAuthBasedDataSourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the OAuthBasedDataSourceProperties
        /// class.
        /// </summary>
        public OAuthBasedDataSourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OAuthBasedDataSourceProperties
        /// class.
        /// </summary>
        /// <param name="refreshToken">A refresh token that can be used to
        /// obtain a valid access token that can then be used to authenticate
        /// with the data source. A valid refresh token is currently only
        /// obtainable via the Azure Portal. It is recommended to put a dummy
        /// string value here when creating the data source and then going to
        /// the Azure Portal to authenticate the data source which will update
        /// this property with a valid refresh token. Required on PUT
        /// (CreateOrReplace) requests.</param>
        /// <param name="tokenUserPrincipalName">The user principal name (UPN)
        /// of the user that was used to obtain the refresh token. Use this
        /// property to help remember which user was used to obtain the refresh
        /// token.</param>
        /// <param name="tokenUserDisplayName">The user display name of the
        /// user that was used to obtain the refresh token. Use this property
        /// to help remember which user was used to obtain the refresh
        /// token.</param>
        public OAuthBasedDataSourceProperties(string refreshToken = default(string), string tokenUserPrincipalName = default(string), string tokenUserDisplayName = default(string))
        {
            RefreshToken = refreshToken;
            TokenUserPrincipalName = tokenUserPrincipalName;
            TokenUserDisplayName = tokenUserDisplayName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a refresh token that can be used to obtain a valid
        /// access token that can then be used to authenticate with the data
        /// source. A valid refresh token is currently only obtainable via the
        /// Azure Portal. It is recommended to put a dummy string value here
        /// when creating the data source and then going to the Azure Portal to
        /// authenticate the data source which will update this property with a
        /// valid refresh token. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        [JsonProperty(PropertyName = "refreshToken")]
        public string RefreshToken { get; set; }

        /// <summary>
        /// Gets or sets the user principal name (UPN) of the user that was
        /// used to obtain the refresh token. Use this property to help
        /// remember which user was used to obtain the refresh token.
        /// </summary>
        [JsonProperty(PropertyName = "tokenUserPrincipalName")]
        public string TokenUserPrincipalName { get; set; }

        /// <summary>
        /// Gets or sets the user display name of the user that was used to
        /// obtain the refresh token. Use this property to help remember which
        /// user was used to obtain the refresh token.
        /// </summary>
        [JsonProperty(PropertyName = "tokenUserDisplayName")]
        public string TokenUserDisplayName { get; set; }

    }
}
