// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StreamAnalytics
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// FunctionsOperations operations.
    /// </summary>
    public partial interface IFunctionsOperations
    {
        /// <summary>
        /// Creates a function or replaces an already existing function under
        /// an existing streaming job.
        /// </summary>
        /// <param name='function'>
        /// The definition of the function that will be used to create a new
        /// function or replace the existing one under the streaming job.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='jobName'>
        /// The name of the streaming job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the function. Omit this value to always overwrite the
        /// current function. Specify the last-seen ETag value to prevent
        /// accidentally overwriting concurrent changes.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// Set to '*' to allow a new function to be created, but to prevent
        /// updating an existing function. Other values will result in a 412
        /// Pre-condition Failed response.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<Function,FunctionsCreateOrReplaceHeaders>> CreateOrReplaceWithHttpMessagesAsync(Function function, string resourceGroupName, string jobName, string functionName, string ifMatch = default(string), string ifNoneMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates an existing function under an existing streaming job. This
        /// can be used to partially update (ie. update one or two properties)
        /// a function without affecting the rest the job or function
        /// definition.
        /// </summary>
        /// <param name='function'>
        /// A function object. The properties specified here will overwrite the
        /// corresponding properties in the existing function (ie. Those
        /// properties will be updated). Any properties that are set to null
        /// here will mean that the corresponding property in the existing
        /// function will remain the same and not change as a result of this
        /// PATCH operation.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='jobName'>
        /// The name of the streaming job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the function. Omit this value to always overwrite the
        /// current function. Specify the last-seen ETag value to prevent
        /// accidentally overwriting concurrent changes.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<Function,FunctionsUpdateHeaders>> UpdateWithHttpMessagesAsync(Function function, string resourceGroupName, string jobName, string functionName, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a function from the streaming job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='jobName'>
        /// The name of the streaming job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string jobName, string functionName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets details about the specified function.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='jobName'>
        /// The name of the streaming job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<Function,FunctionsGetHeaders>> GetWithHttpMessagesAsync(string resourceGroupName, string jobName, string functionName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all of the functions under the specified streaming job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='jobName'>
        /// The name of the streaming job.
        /// </param>
        /// <param name='select'>
        /// The $select OData query parameter. This is a comma-separated list
        /// of structural properties to include in the response, or "*" to
        /// include all properties. By default, all properties are returned
        /// except diagnostics. Currently only accepts '*' as a valid value.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<Function>>> ListByStreamingJobWithHttpMessagesAsync(string resourceGroupName, string jobName, string select = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Tests if the information provided for a function is valid. This can
        /// range from testing the connection to the underlying web service
        /// behind the function or making sure the function code provided is
        /// syntactically correct.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='jobName'>
        /// The name of the streaming job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function.
        /// </param>
        /// <param name='function'>
        /// If the function specified does not already exist, this parameter
        /// must contain the full function definition intended to be tested. If
        /// the function specified already exists, this parameter can be left
        /// null to test the existing function as is or if specified, the
        /// properties specified will overwrite the corresponding properties in
        /// the existing function (exactly like a PATCH operation) and the
        /// resulting function will be tested.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ResourceTestStatus>> TestWithHttpMessagesAsync(string resourceGroupName, string jobName, string functionName, Function function = default(Function), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the default definition of a function based on the
        /// parameters specified.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='jobName'>
        /// The name of the streaming job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function.
        /// </param>
        /// <param name='functionRetrieveDefaultDefinitionParameters'>
        /// Parameters used to specify the type of function to retrieve the
        /// default definition for.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<Function>> RetrieveDefaultDefinitionWithHttpMessagesAsync(string resourceGroupName, string jobName, string functionName, FunctionRetrieveDefaultDefinitionParameters functionRetrieveDefaultDefinitionParameters = default(FunctionRetrieveDefaultDefinitionParameters), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Tests if the information provided for a function is valid. This can
        /// range from testing the connection to the underlying web service
        /// behind the function or making sure the function code provided is
        /// syntactically correct.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='jobName'>
        /// The name of the streaming job.
        /// </param>
        /// <param name='functionName'>
        /// The name of the function.
        /// </param>
        /// <param name='function'>
        /// If the function specified does not already exist, this parameter
        /// must contain the full function definition intended to be tested. If
        /// the function specified already exists, this parameter can be left
        /// null to test the existing function as is or if specified, the
        /// properties specified will overwrite the corresponding properties in
        /// the existing function (exactly like a PATCH operation) and the
        /// resulting function will be tested.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ResourceTestStatus>> BeginTestWithHttpMessagesAsync(string resourceGroupName, string jobName, string functionName, Function function = default(Function), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all of the functions under the specified streaming job.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<Function>>> ListByStreamingJobNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
