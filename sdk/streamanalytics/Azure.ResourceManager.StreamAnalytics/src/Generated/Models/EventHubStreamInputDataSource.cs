// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.StreamAnalytics.Models
{
    /// <summary>
    /// Describes an Event Hub input data source that contains stream data.
    /// Serialized Name: EventHubStreamInputDataSource
    /// </summary>
    public partial class EventHubStreamInputDataSource : StreamInputDataSource
    {
        /// <summary> Initializes a new instance of EventHubStreamInputDataSource. </summary>
        public EventHubStreamInputDataSource()
        {
            StreamInputDataSourceType = "Microsoft.ServiceBus/EventHub";
        }

        /// <summary> Initializes a new instance of EventHubStreamInputDataSource. </summary>
        /// <param name="streamInputDataSourceType">
        /// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: StreamInputDataSource.type
        /// </param>
        /// <param name="serviceBusNamespace">
        /// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: EventHubStreamInputDataSource.properties.serviceBusNamespace
        /// </param>
        /// <param name="sharedAccessPolicyName">
        /// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: EventHubStreamInputDataSource.properties.sharedAccessPolicyName
        /// </param>
        /// <param name="sharedAccessPolicyKey">
        /// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: EventHubStreamInputDataSource.properties.sharedAccessPolicyKey
        /// </param>
        /// <param name="authenticationMode">
        /// Authentication Mode.
        /// Serialized Name: EventHubStreamInputDataSource.properties.authenticationMode
        /// </param>
        /// <param name="eventHubName">
        /// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: EventHubStreamInputDataSource.properties.eventHubName
        /// </param>
        /// <param name="partitionCount">
        /// The partition count of the event hub data source. Range 1 - 256.
        /// Serialized Name: EventHubStreamInputDataSource.properties.partitionCount
        /// </param>
        /// <param name="consumerGroupName">
        /// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
        /// Serialized Name: EventHubStreamInputDataSource.properties.consumerGroupName
        /// </param>
        /// <param name="prefetchCount">
        /// The number of messages that the message receiver can simultaneously request.
        /// Serialized Name: EventHubStreamInputDataSource.properties.prefetchCount
        /// </param>
        internal EventHubStreamInputDataSource(string streamInputDataSourceType, string serviceBusNamespace, string sharedAccessPolicyName, string sharedAccessPolicyKey, AuthenticationMode? authenticationMode, string eventHubName, int? partitionCount, string consumerGroupName, int? prefetchCount) : base(streamInputDataSourceType)
        {
            ServiceBusNamespace = serviceBusNamespace;
            SharedAccessPolicyName = sharedAccessPolicyName;
            SharedAccessPolicyKey = sharedAccessPolicyKey;
            AuthenticationMode = authenticationMode;
            EventHubName = eventHubName;
            PartitionCount = partitionCount;
            ConsumerGroupName = consumerGroupName;
            PrefetchCount = prefetchCount;
            StreamInputDataSourceType = streamInputDataSourceType ?? "Microsoft.ServiceBus/EventHub";
        }

        /// <summary>
        /// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: EventHubStreamInputDataSource.properties.serviceBusNamespace
        /// </summary>
        public string ServiceBusNamespace { get; set; }
        /// <summary>
        /// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: EventHubStreamInputDataSource.properties.sharedAccessPolicyName
        /// </summary>
        public string SharedAccessPolicyName { get; set; }
        /// <summary>
        /// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: EventHubStreamInputDataSource.properties.sharedAccessPolicyKey
        /// </summary>
        public string SharedAccessPolicyKey { get; set; }
        /// <summary>
        /// Authentication Mode.
        /// Serialized Name: EventHubStreamInputDataSource.properties.authenticationMode
        /// </summary>
        public AuthenticationMode? AuthenticationMode { get; set; }
        /// <summary>
        /// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
        /// Serialized Name: EventHubStreamInputDataSource.properties.eventHubName
        /// </summary>
        public string EventHubName { get; set; }
        /// <summary>
        /// The partition count of the event hub data source. Range 1 - 256.
        /// Serialized Name: EventHubStreamInputDataSource.properties.partitionCount
        /// </summary>
        public int? PartitionCount { get; set; }
        /// <summary>
        /// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
        /// Serialized Name: EventHubStreamInputDataSource.properties.consumerGroupName
        /// </summary>
        public string ConsumerGroupName { get; set; }
        /// <summary>
        /// The number of messages that the message receiver can simultaneously request.
        /// Serialized Name: EventHubStreamInputDataSource.properties.prefetchCount
        /// </summary>
        public int? PrefetchCount { get; set; }
    }
}
