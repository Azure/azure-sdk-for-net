// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.StreamAnalytics.Models
{
    /// <summary> The output watermark mode. </summary>
    public readonly partial struct OutputWatermarkMode : IEquatable<OutputWatermarkMode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="OutputWatermarkMode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public OutputWatermarkMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string SendCurrentPartitionWatermarkValue = "SendCurrentPartitionWatermark";
        private const string SendLowestWatermarkAcrossPartitionsValue = "SendLowestWatermarkAcrossPartitions";

        /// <summary> None. </summary>
        public static OutputWatermarkMode None { get; } = new OutputWatermarkMode(NoneValue);
        /// <summary> SendCurrentPartitionWatermark. </summary>
        public static OutputWatermarkMode SendCurrentPartitionWatermark { get; } = new OutputWatermarkMode(SendCurrentPartitionWatermarkValue);
        /// <summary> SendLowestWatermarkAcrossPartitions. </summary>
        public static OutputWatermarkMode SendLowestWatermarkAcrossPartitions { get; } = new OutputWatermarkMode(SendLowestWatermarkAcrossPartitionsValue);
        /// <summary> Determines if two <see cref="OutputWatermarkMode"/> values are the same. </summary>
        public static bool operator ==(OutputWatermarkMode left, OutputWatermarkMode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="OutputWatermarkMode"/> values are not the same. </summary>
        public static bool operator !=(OutputWatermarkMode left, OutputWatermarkMode right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="OutputWatermarkMode"/>. </summary>
        public static implicit operator OutputWatermarkMode(string value) => new OutputWatermarkMode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is OutputWatermarkMode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(OutputWatermarkMode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
