// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.StreamAnalytics.Models
{
    public partial class StreamingJobRefreshConfiguration : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(PathPattern))
            {
                writer.WritePropertyName("pathPattern"u8);
                writer.WriteStringValue(PathPattern);
            }
            if (Core.Optional.IsDefined(DateFormat))
            {
                writer.WritePropertyName("dateFormat"u8);
                writer.WriteStringValue(DateFormat);
            }
            if (Core.Optional.IsDefined(TimeFormat))
            {
                writer.WritePropertyName("timeFormat"u8);
                writer.WriteStringValue(TimeFormat);
            }
            if (Core.Optional.IsDefined(RefreshInterval))
            {
                writer.WritePropertyName("refreshInterval"u8);
                writer.WriteStringValue(RefreshInterval);
            }
            if (Core.Optional.IsDefined(RefreshType))
            {
                writer.WritePropertyName("refreshType"u8);
                writer.WriteStringValue(RefreshType.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static StreamingJobRefreshConfiguration DeserializeStreamingJobRefreshConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> pathPattern = default;
            Core.Optional<string> dateFormat = default;
            Core.Optional<string> timeFormat = default;
            Core.Optional<string> refreshInterval = default;
            Core.Optional<DataRefreshType> refreshType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("pathPattern"u8))
                {
                    pathPattern = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dateFormat"u8))
                {
                    dateFormat = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("timeFormat"u8))
                {
                    timeFormat = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("refreshInterval"u8))
                {
                    refreshInterval = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("refreshType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    refreshType = new DataRefreshType(property.Value.GetString());
                    continue;
                }
            }
            return new StreamingJobRefreshConfiguration(pathPattern.Value, dateFormat.Value, timeFormat.Value, refreshInterval.Value, Core.Optional.ToNullable(refreshType));
        }
    }
}
