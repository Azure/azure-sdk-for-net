// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.StreamAnalytics.Models
{
    /// <summary> Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size). </summary>
    public readonly partial struct OutputErrorPolicy : IEquatable<OutputErrorPolicy>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="OutputErrorPolicy"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public OutputErrorPolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string StopValue = "Stop";
        private const string DropValue = "Drop";

        /// <summary> Stop. </summary>
        public static OutputErrorPolicy Stop { get; } = new OutputErrorPolicy(StopValue);
        /// <summary> Drop. </summary>
        public static OutputErrorPolicy Drop { get; } = new OutputErrorPolicy(DropValue);
        /// <summary> Determines if two <see cref="OutputErrorPolicy"/> values are the same. </summary>
        public static bool operator ==(OutputErrorPolicy left, OutputErrorPolicy right) => left.Equals(right);
        /// <summary> Determines if two <see cref="OutputErrorPolicy"/> values are not the same. </summary>
        public static bool operator !=(OutputErrorPolicy left, OutputErrorPolicy right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="OutputErrorPolicy"/>. </summary>
        public static implicit operator OutputErrorPolicy(string value) => new OutputErrorPolicy(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is OutputErrorPolicy other && Equals(other);
        /// <inheritdoc />
        public bool Equals(OutputErrorPolicy other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
