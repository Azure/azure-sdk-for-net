// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.StreamAnalytics.Models
{
    public partial class SampleInputResult
    {
        internal static SampleInputResult DeserializeSampleInputResult(JsonElement element)
        {
            Optional<SampleInputResultStatus> status = default;
            Optional<IReadOnlyList<string>> diagnostics = default;
            Optional<Uri> eventsDownloadUrl = default;
            Optional<string> lastArrivalTime = default;
            Optional<ErrorError> error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new SampleInputResultStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("diagnostics"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    diagnostics = array;
                    continue;
                }
                if (property.NameEquals("eventsDownloadUrl"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        eventsDownloadUrl = null;
                        continue;
                    }
                    eventsDownloadUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("lastArrivalTime"))
                {
                    lastArrivalTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("error"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    error = ErrorError.DeserializeErrorError(property.Value);
                    continue;
                }
            }
            return new SampleInputResult(error.Value, Optional.ToNullable(status), Optional.ToList(diagnostics), eventsDownloadUrl.Value, lastArrivalTime.Value);
        }
    }
}
