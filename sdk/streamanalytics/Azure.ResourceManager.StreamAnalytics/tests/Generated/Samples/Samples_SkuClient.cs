// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace StreamAnalyticsManagementClient.Samples
{
    public partial class Samples_SkuClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSkus_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            SkuClient client = new SkuClient("<SubscriptionId>", credential);

            foreach (BinaryData item in client.GetSkus("<resourceGroupName>", "<jobName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSkus_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            SkuClient client = new SkuClient("<SubscriptionId>", credential);

            await foreach (BinaryData item in client.GetSkusAsync("<resourceGroupName>", "<jobName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSkus_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            SkuClient client = new SkuClient("<SubscriptionId>", credential);

            foreach (BinaryData item in client.GetSkus("<resourceGroupName>", "<jobName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("resourceType").ToString());
                Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("minimum").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("maximum").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("default").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("scaleType").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("allowedValues")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSkus_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            SkuClient client = new SkuClient("<SubscriptionId>", credential);

            await foreach (BinaryData item in client.GetSkusAsync("<resourceGroupName>", "<jobName>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("resourceType").ToString());
                Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("minimum").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("maximum").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("default").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("scaleType").ToString());
                Console.WriteLine(result.GetProperty("capacity").GetProperty("allowedValues")[0].ToString());
            }
        }
    }
}
