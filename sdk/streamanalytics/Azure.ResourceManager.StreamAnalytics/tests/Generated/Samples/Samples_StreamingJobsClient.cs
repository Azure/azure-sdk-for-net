// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace StreamAnalyticsManagementClient.Samples
{
    public partial class Samples_StreamingJobsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Update_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = client.Update("<resourceGroupName>", "<jobName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Update_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.UpdateAsync("<resourceGroupName>", "<jobName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Update_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                sku = new
                {
                    name = "Standard",
                    capacity = 1234,
                },
                properties = new
                {
                    jobType = "Cloud",
                    outputStartMode = "JobStartTime",
                    outputStartTime = "2022-05-10T18:57:31.2311892Z",
                    eventsOutOfOrderPolicy = "Adjust",
                    outputErrorPolicy = "Stop",
                    eventsOutOfOrderMaxDelayInSeconds = 1234,
                    eventsLateArrivalMaxDelayInSeconds = 1234,
                    dataLocale = "<dataLocale>",
                    compatibilityLevel = "1.0",
                    inputs = new object[]
            {
new
{
properties = new
{
datasource = new
{
properties = new
{
sourcePartitionCount = 1234,
storageAccounts = new object[]
{
new
{
accountName = "<accountName>",
accountKey = "<accountKey>",
authenticationMode = "Msi",
}
},
container = "<container>",
pathPattern = "<pathPattern>",
dateFormat = "<dateFormat>",
timeFormat = "<timeFormat>",
authenticationMode = "Msi",
},
type = "Microsoft.Storage/Blob",
},
type = "Stream",
serialization = new
{
properties = new
{
deltaTablePath = "<deltaTablePath>",
partitionColumns = new object[]
{
"<partitionColumns>"
},
},
type = "Delta",
},
compression = new
{
type = "None",
},
partitionKey = "<partitionKey>",
watermarkSettings = new
{
watermarkMode = "None",
},
messagingCatalogConfiguration = new
{
endpoint = "<endpoint>",
errorPolicy = "Drop",
messageGroups = new object[]
{
new
{
id = "<id>",
messages = new object[]
{
new
{
id = "<id>",
schemaVersion = "<schemaVersion>",
}
},
}
},
schemaGroups = new object[]
{
new
{
id = "<id>",
}
},
format = "NotSet",
protocol = "NotSet",
schemaFormat = "<schemaFormat>",
authenticationMode = "Msi",
accessToken = "<accessToken>",
refreshToken = "<refreshToken>",
},
},
name = "<name>",
}
            },
                    transformation = new
                    {
                        properties = new
                        {
                            streamingUnits = 1234,
                            validStreamingUnits = new object[]
            {
1234
            },
                            query = "<query>",
                        },
                        name = "<name>",
                    },
                    outputs = new object[]
            {
new
{
properties = new
{
datasource = new
{
properties = new
{
payloadUri = "<payloadUri>",
},
type = "Raw",
},
timeWindow = "<timeWindow>",
sizeWindow = 1234,
watermarkSettings = new
{
watermarkMode = "None",
maxWatermarkDifferenceAcrossPartitions = "<maxWatermarkDifferenceAcrossPartitions>",
},
payloadColumnName = "<payloadColumnName>",
cloudEventProperties = new
{
key = new object(),
},
},
name = "<name>",
}
            },
                    functions = new object[]
            {
new
{
properties = new
{
type = "Scalar",
properties = new
{
inputs = new object[]
{
new
{
dataType = "<dataType>",
isConfigurationParameter = true,
}
},
output = new
{
dataType = "<dataType>",
},
binding = new
{
properties = new
{
endpoint = "<endpoint>",
apiKey = "<apiKey>",
inputs = new
{
name = "<name>",
columnNames = new object[]
{
new
{
name = "<name>",
dataType = "<dataType>",
mapTo = 1234,
}
},
},
outputs = new object[]
{
new
{
name = "<name>",
dataType = "<dataType>",
}
},
batchSize = 1234,
},
type = "Microsoft.MachineLearning/WebService",
},
},
},
name = "<name>",
}
            },
                    jobStorageAccount = new
                    {
                        accountName = "<accountName>",
                        accountKey = "<accountKey>",
                        authenticationMode = "Msi",
                    },
                    contentStoragePolicy = "SystemAccount",
                    externals = new
                    {
                        container = "<container>",
                        path = "<path>",
                        refreshConfiguration = new
                        {
                            pathPattern = "<pathPattern>",
                            dateFormat = "<dateFormat>",
                            timeFormat = "<timeFormat>",
                            refreshInterval = "<refreshInterval>",
                            refreshType = "Blocking",
                        },
                    },
                    cluster = new
                    {
                        id = "<id>",
                    },
                    subnetResourceId = "<subnetResourceId>",
                },
                identity = new
                {
                    type = "<type>",
                    userAssignedIdentities = new
                    {
                        key = new object(),
                    },
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Response response = client.Update("<resourceGroupName>", "<jobName>", content, ifMatch: new ETag("<ifMatch>"));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Update_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                sku = new
                {
                    name = "Standard",
                    capacity = 1234,
                },
                properties = new
                {
                    jobType = "Cloud",
                    outputStartMode = "JobStartTime",
                    outputStartTime = "2022-05-10T18:57:31.2311892Z",
                    eventsOutOfOrderPolicy = "Adjust",
                    outputErrorPolicy = "Stop",
                    eventsOutOfOrderMaxDelayInSeconds = 1234,
                    eventsLateArrivalMaxDelayInSeconds = 1234,
                    dataLocale = "<dataLocale>",
                    compatibilityLevel = "1.0",
                    inputs = new object[]
            {
new
{
properties = new
{
datasource = new
{
properties = new
{
sourcePartitionCount = 1234,
storageAccounts = new object[]
{
new
{
accountName = "<accountName>",
accountKey = "<accountKey>",
authenticationMode = "Msi",
}
},
container = "<container>",
pathPattern = "<pathPattern>",
dateFormat = "<dateFormat>",
timeFormat = "<timeFormat>",
authenticationMode = "Msi",
},
type = "Microsoft.Storage/Blob",
},
type = "Stream",
serialization = new
{
properties = new
{
deltaTablePath = "<deltaTablePath>",
partitionColumns = new object[]
{
"<partitionColumns>"
},
},
type = "Delta",
},
compression = new
{
type = "None",
},
partitionKey = "<partitionKey>",
watermarkSettings = new
{
watermarkMode = "None",
},
messagingCatalogConfiguration = new
{
endpoint = "<endpoint>",
errorPolicy = "Drop",
messageGroups = new object[]
{
new
{
id = "<id>",
messages = new object[]
{
new
{
id = "<id>",
schemaVersion = "<schemaVersion>",
}
},
}
},
schemaGroups = new object[]
{
new
{
id = "<id>",
}
},
format = "NotSet",
protocol = "NotSet",
schemaFormat = "<schemaFormat>",
authenticationMode = "Msi",
accessToken = "<accessToken>",
refreshToken = "<refreshToken>",
},
},
name = "<name>",
}
            },
                    transformation = new
                    {
                        properties = new
                        {
                            streamingUnits = 1234,
                            validStreamingUnits = new object[]
            {
1234
            },
                            query = "<query>",
                        },
                        name = "<name>",
                    },
                    outputs = new object[]
            {
new
{
properties = new
{
datasource = new
{
properties = new
{
payloadUri = "<payloadUri>",
},
type = "Raw",
},
timeWindow = "<timeWindow>",
sizeWindow = 1234,
watermarkSettings = new
{
watermarkMode = "None",
maxWatermarkDifferenceAcrossPartitions = "<maxWatermarkDifferenceAcrossPartitions>",
},
payloadColumnName = "<payloadColumnName>",
cloudEventProperties = new
{
key = new object(),
},
},
name = "<name>",
}
            },
                    functions = new object[]
            {
new
{
properties = new
{
type = "Scalar",
properties = new
{
inputs = new object[]
{
new
{
dataType = "<dataType>",
isConfigurationParameter = true,
}
},
output = new
{
dataType = "<dataType>",
},
binding = new
{
properties = new
{
endpoint = "<endpoint>",
apiKey = "<apiKey>",
inputs = new
{
name = "<name>",
columnNames = new object[]
{
new
{
name = "<name>",
dataType = "<dataType>",
mapTo = 1234,
}
},
},
outputs = new object[]
{
new
{
name = "<name>",
dataType = "<dataType>",
}
},
batchSize = 1234,
},
type = "Microsoft.MachineLearning/WebService",
},
},
},
name = "<name>",
}
            },
                    jobStorageAccount = new
                    {
                        accountName = "<accountName>",
                        accountKey = "<accountKey>",
                        authenticationMode = "Msi",
                    },
                    contentStoragePolicy = "SystemAccount",
                    externals = new
                    {
                        container = "<container>",
                        path = "<path>",
                        refreshConfiguration = new
                        {
                            pathPattern = "<pathPattern>",
                            dateFormat = "<dateFormat>",
                            timeFormat = "<timeFormat>",
                            refreshInterval = "<refreshInterval>",
                            refreshType = "Blocking",
                        },
                    },
                    cluster = new
                    {
                        id = "<id>",
                    },
                    subnetResourceId = "<subnetResourceId>",
                },
                identity = new
                {
                    type = "<type>",
                    userAssignedIdentities = new
                    {
                        key = new object(),
                    },
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Response response = await client.UpdateAsync("<resourceGroupName>", "<jobName>", content, ifMatch: new ETag("<ifMatch>"));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetStreamingJob_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Response response = client.GetStreamingJob("<resourceGroupName>", "<jobName>", null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetStreamingJob_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Response response = await client.GetStreamingJobAsync("<resourceGroupName>", "<jobName>", null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetStreamingJob_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Response response = client.GetStreamingJob("<resourceGroupName>", "<jobName>", "<expand>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetStreamingJob_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Response response = await client.GetStreamingJobAsync("<resourceGroupName>", "<jobName>", "<expand>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetStreamingJobsByResourceGroup_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            foreach (BinaryData item in client.GetStreamingJobsByResourceGroup("<resourceGroupName>", null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetStreamingJobsByResourceGroup_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            await foreach (BinaryData item in client.GetStreamingJobsByResourceGroupAsync("<resourceGroupName>", null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetStreamingJobsByResourceGroup_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            foreach (BinaryData item in client.GetStreamingJobsByResourceGroup("<resourceGroupName>", "<expand>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("location").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetStreamingJobsByResourceGroup_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            await foreach (BinaryData item in client.GetStreamingJobsByResourceGroupAsync("<resourceGroupName>", "<expand>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("location").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetStreamingJobs_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            foreach (BinaryData item in client.GetStreamingJobs(null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetStreamingJobs_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            await foreach (BinaryData item in client.GetStreamingJobsAsync(null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetStreamingJobs_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            foreach (BinaryData item in client.GetStreamingJobs("<expand>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("location").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetStreamingJobs_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            await foreach (BinaryData item in client.GetStreamingJobsAsync("<expand>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
                Console.WriteLine(result.GetProperty("location").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrReplace_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new object());
            Operation<BinaryData> operation = client.CreateOrReplace(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrReplace_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new object());
            Operation<BinaryData> operation = await client.CreateOrReplaceAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrReplace_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                sku = new
                {
                    name = "Standard",
                    capacity = 1234,
                },
                properties = new
                {
                    jobType = "Cloud",
                    outputStartMode = "JobStartTime",
                    outputStartTime = "2022-05-10T18:57:31.2311892Z",
                    eventsOutOfOrderPolicy = "Adjust",
                    outputErrorPolicy = "Stop",
                    eventsOutOfOrderMaxDelayInSeconds = 1234,
                    eventsLateArrivalMaxDelayInSeconds = 1234,
                    dataLocale = "<dataLocale>",
                    compatibilityLevel = "1.0",
                    inputs = new object[]
            {
new
{
properties = new
{
datasource = new
{
properties = new
{
sourcePartitionCount = 1234,
storageAccounts = new object[]
{
new
{
accountName = "<accountName>",
accountKey = "<accountKey>",
authenticationMode = "Msi",
}
},
container = "<container>",
pathPattern = "<pathPattern>",
dateFormat = "<dateFormat>",
timeFormat = "<timeFormat>",
authenticationMode = "Msi",
},
type = "Microsoft.Storage/Blob",
},
type = "Stream",
serialization = new
{
properties = new
{
deltaTablePath = "<deltaTablePath>",
partitionColumns = new object[]
{
"<partitionColumns>"
},
},
type = "Delta",
},
compression = new
{
type = "None",
},
partitionKey = "<partitionKey>",
watermarkSettings = new
{
watermarkMode = "None",
},
messagingCatalogConfiguration = new
{
endpoint = "<endpoint>",
errorPolicy = "Drop",
messageGroups = new object[]
{
new
{
id = "<id>",
messages = new object[]
{
new
{
id = "<id>",
schemaVersion = "<schemaVersion>",
}
},
}
},
schemaGroups = new object[]
{
new
{
id = "<id>",
}
},
format = "NotSet",
protocol = "NotSet",
schemaFormat = "<schemaFormat>",
authenticationMode = "Msi",
accessToken = "<accessToken>",
refreshToken = "<refreshToken>",
},
},
name = "<name>",
}
            },
                    transformation = new
                    {
                        properties = new
                        {
                            streamingUnits = 1234,
                            validStreamingUnits = new object[]
            {
1234
            },
                            query = "<query>",
                        },
                        name = "<name>",
                    },
                    outputs = new object[]
            {
new
{
properties = new
{
datasource = new
{
properties = new
{
payloadUri = "<payloadUri>",
},
type = "Raw",
},
timeWindow = "<timeWindow>",
sizeWindow = 1234,
watermarkSettings = new
{
watermarkMode = "None",
maxWatermarkDifferenceAcrossPartitions = "<maxWatermarkDifferenceAcrossPartitions>",
},
payloadColumnName = "<payloadColumnName>",
cloudEventProperties = new
{
key = new object(),
},
},
name = "<name>",
}
            },
                    functions = new object[]
            {
new
{
properties = new
{
type = "Scalar",
properties = new
{
inputs = new object[]
{
new
{
dataType = "<dataType>",
isConfigurationParameter = true,
}
},
output = new
{
dataType = "<dataType>",
},
binding = new
{
properties = new
{
endpoint = "<endpoint>",
apiKey = "<apiKey>",
inputs = new
{
name = "<name>",
columnNames = new object[]
{
new
{
name = "<name>",
dataType = "<dataType>",
mapTo = 1234,
}
},
},
outputs = new object[]
{
new
{
name = "<name>",
dataType = "<dataType>",
}
},
batchSize = 1234,
},
type = "Microsoft.MachineLearning/WebService",
},
},
},
name = "<name>",
}
            },
                    jobStorageAccount = new
                    {
                        accountName = "<accountName>",
                        accountKey = "<accountKey>",
                        authenticationMode = "Msi",
                    },
                    contentStoragePolicy = "SystemAccount",
                    externals = new
                    {
                        container = "<container>",
                        path = "<path>",
                        refreshConfiguration = new
                        {
                            pathPattern = "<pathPattern>",
                            dateFormat = "<dateFormat>",
                            timeFormat = "<timeFormat>",
                            refreshInterval = "<refreshInterval>",
                            refreshType = "Blocking",
                        },
                    },
                    cluster = new
                    {
                        id = "<id>",
                    },
                    subnetResourceId = "<subnetResourceId>",
                },
                identity = new
                {
                    type = "<type>",
                    userAssignedIdentities = new
                    {
                        key = new object(),
                    },
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.CreateOrReplace(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content, matchConditions: null);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrReplace_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                sku = new
                {
                    name = "Standard",
                    capacity = 1234,
                },
                properties = new
                {
                    jobType = "Cloud",
                    outputStartMode = "JobStartTime",
                    outputStartTime = "2022-05-10T18:57:31.2311892Z",
                    eventsOutOfOrderPolicy = "Adjust",
                    outputErrorPolicy = "Stop",
                    eventsOutOfOrderMaxDelayInSeconds = 1234,
                    eventsLateArrivalMaxDelayInSeconds = 1234,
                    dataLocale = "<dataLocale>",
                    compatibilityLevel = "1.0",
                    inputs = new object[]
            {
new
{
properties = new
{
datasource = new
{
properties = new
{
sourcePartitionCount = 1234,
storageAccounts = new object[]
{
new
{
accountName = "<accountName>",
accountKey = "<accountKey>",
authenticationMode = "Msi",
}
},
container = "<container>",
pathPattern = "<pathPattern>",
dateFormat = "<dateFormat>",
timeFormat = "<timeFormat>",
authenticationMode = "Msi",
},
type = "Microsoft.Storage/Blob",
},
type = "Stream",
serialization = new
{
properties = new
{
deltaTablePath = "<deltaTablePath>",
partitionColumns = new object[]
{
"<partitionColumns>"
},
},
type = "Delta",
},
compression = new
{
type = "None",
},
partitionKey = "<partitionKey>",
watermarkSettings = new
{
watermarkMode = "None",
},
messagingCatalogConfiguration = new
{
endpoint = "<endpoint>",
errorPolicy = "Drop",
messageGroups = new object[]
{
new
{
id = "<id>",
messages = new object[]
{
new
{
id = "<id>",
schemaVersion = "<schemaVersion>",
}
},
}
},
schemaGroups = new object[]
{
new
{
id = "<id>",
}
},
format = "NotSet",
protocol = "NotSet",
schemaFormat = "<schemaFormat>",
authenticationMode = "Msi",
accessToken = "<accessToken>",
refreshToken = "<refreshToken>",
},
},
name = "<name>",
}
            },
                    transformation = new
                    {
                        properties = new
                        {
                            streamingUnits = 1234,
                            validStreamingUnits = new object[]
            {
1234
            },
                            query = "<query>",
                        },
                        name = "<name>",
                    },
                    outputs = new object[]
            {
new
{
properties = new
{
datasource = new
{
properties = new
{
payloadUri = "<payloadUri>",
},
type = "Raw",
},
timeWindow = "<timeWindow>",
sizeWindow = 1234,
watermarkSettings = new
{
watermarkMode = "None",
maxWatermarkDifferenceAcrossPartitions = "<maxWatermarkDifferenceAcrossPartitions>",
},
payloadColumnName = "<payloadColumnName>",
cloudEventProperties = new
{
key = new object(),
},
},
name = "<name>",
}
            },
                    functions = new object[]
            {
new
{
properties = new
{
type = "Scalar",
properties = new
{
inputs = new object[]
{
new
{
dataType = "<dataType>",
isConfigurationParameter = true,
}
},
output = new
{
dataType = "<dataType>",
},
binding = new
{
properties = new
{
endpoint = "<endpoint>",
apiKey = "<apiKey>",
inputs = new
{
name = "<name>",
columnNames = new object[]
{
new
{
name = "<name>",
dataType = "<dataType>",
mapTo = 1234,
}
},
},
outputs = new object[]
{
new
{
name = "<name>",
dataType = "<dataType>",
}
},
batchSize = 1234,
},
type = "Microsoft.MachineLearning/WebService",
},
},
},
name = "<name>",
}
            },
                    jobStorageAccount = new
                    {
                        accountName = "<accountName>",
                        accountKey = "<accountKey>",
                        authenticationMode = "Msi",
                    },
                    contentStoragePolicy = "SystemAccount",
                    externals = new
                    {
                        container = "<container>",
                        path = "<path>",
                        refreshConfiguration = new
                        {
                            pathPattern = "<pathPattern>",
                            dateFormat = "<dateFormat>",
                            timeFormat = "<timeFormat>",
                            refreshInterval = "<refreshInterval>",
                            refreshType = "Blocking",
                        },
                    },
                    cluster = new
                    {
                        id = "<id>",
                    },
                    subnetResourceId = "<subnetResourceId>",
                },
                identity = new
                {
                    type = "<type>",
                    userAssignedIdentities = new
                    {
                        key = new object(),
                    },
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.CreateOrReplaceAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content, matchConditions: null);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").GetProperty("capacity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputStartTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputErrorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsOutOfOrderMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("eventsLateArrivalMaxDelayInSeconds").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("dataLocale").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compatibilityLevel").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("createdDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("compression").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("partitionKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("properties").GetProperty("messagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("inputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("streamingUnits").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("validStreamingUnits")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("query").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("transformation").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("datasource").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("timeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("sizeWindow").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("serialization").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("since").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("diagnostics").GetProperty("conditions")[0].GetProperty("message").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastOutputEventTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("lastOutputEventTimestamps")[0].GetProperty("lastUpdateTime").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("watermarkMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("watermarkSettings").GetProperty("maxWatermarkDifferenceAcrossPartitions").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("payloadColumnName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("endpoint").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("errorPolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("messageGroups")[0].GetProperty("messages")[0].GetProperty("schemaVersion").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaGroups")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("format").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("protocol").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("schemaFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("accessToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("MessagingCatalogConfiguration").GetProperty("refreshToken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("properties").GetProperty("cloudEventProperties").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("outputs")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("inputs")[0].GetProperty("isConfigurationParameter").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("output").GetProperty("dataType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("properties").GetProperty("properties").GetProperty("binding").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("functions")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("etag").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("jobStorageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("contentStoragePolicy").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("accountKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("storageAccount").GetProperty("authenticationMode").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("container").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("path").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("pathPattern").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("dateFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("timeFormat").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshInterval").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("externals").GetProperty("refreshConfiguration").GetProperty("refreshType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("cluster").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subnetResourceId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("userAssignedIdentities").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Operation operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<jobName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Operation operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<jobName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Operation operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Start_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = null;
            Operation operation = client.Start(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Start_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = null;
            Operation operation = await client.StartAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Start_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                outputStartMode = "JobStartTime",
                outputStartTime = "2022-05-10T18:57:31.2311892Z",
            });
            Operation operation = client.Start(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Start_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                outputStartMode = "JobStartTime",
                outputStartTime = "2022-05-10T18:57:31.2311892Z",
            });
            Operation operation = await client.StartAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Stop_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Operation operation = client.Stop(WaitUntil.Completed, "<resourceGroupName>", "<jobName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Stop_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Operation operation = await client.StopAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Stop_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Operation operation = client.Stop(WaitUntil.Completed, "<resourceGroupName>", "<jobName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Stop_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            Operation operation = await client.StopAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Scale_ShortVersion()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = null;
            Operation operation = client.Scale(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Scale_ShortVersion_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = null;
            Operation operation = await client.ScaleAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Scale_AllParameters()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                streamingUnits = 1234,
            });
            Operation operation = client.Scale(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Scale_AllParameters_Async()
        {
            TokenCredential credential = new DefaultAzureCredential();
            StreamingJobsClient client = new StreamingJobsClient("<SubscriptionId>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                streamingUnits = 1234,
            });
            Operation operation = await client.ScaleAsync(WaitUntil.Completed, "<resourceGroupName>", "<jobName>", content);
        }
    }
}
