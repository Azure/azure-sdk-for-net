// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureStackHCI.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Cluster details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Cluster : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the Cluster class.
        /// </summary>
        public Cluster()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Cluster class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="aadClientId">App id of cluster AAD identity.</param>
        /// <param name="aadTenantId">Tenant id of cluster AAD
        /// identity.</param>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="provisioningState">Provisioning state. Possible values
        /// include: 'Succeeded', 'Failed', 'Canceled', 'Accepted',
        /// 'Provisioning'</param>
        /// <param name="status">Status of the cluster agent. Possible values
        /// include: 'NotYetRegistered', 'ConnectedRecently',
        /// 'NotConnectedRecently', 'Disconnected', 'Error'</param>
        /// <param name="cloudId">Unique, immutable resource id.</param>
        /// <param name="reportedProperties">Properties reported by cluster
        /// agent.</param>
        /// <param name="trialDaysRemaining">Number of days remaining in the
        /// trial period.</param>
        /// <param name="billingModel">Type of billing applied to the
        /// resource.</param>
        /// <param name="registrationTimestamp">First cluster sync
        /// timestamp.</param>
        /// <param name="lastSyncTimestamp">Most recent cluster sync
        /// timestamp.</param>
        /// <param name="lastBillingTimestamp">Most recent billing meter
        /// timestamp.</param>
        public Cluster(string location, string aadClientId, string aadTenantId, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string provisioningState = default(string), string status = default(string), string cloudId = default(string), ClusterReportedProperties reportedProperties = default(ClusterReportedProperties), double? trialDaysRemaining = default(double?), string billingModel = default(string), System.DateTime? registrationTimestamp = default(System.DateTime?), System.DateTime? lastSyncTimestamp = default(System.DateTime?), System.DateTime? lastBillingTimestamp = default(System.DateTime?))
            : base(location, id, name, type, tags)
        {
            ProvisioningState = provisioningState;
            Status = status;
            CloudId = cloudId;
            AadClientId = aadClientId;
            AadTenantId = aadTenantId;
            ReportedProperties = reportedProperties;
            TrialDaysRemaining = trialDaysRemaining;
            BillingModel = billingModel;
            RegistrationTimestamp = registrationTimestamp;
            LastSyncTimestamp = lastSyncTimestamp;
            LastBillingTimestamp = lastBillingTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets provisioning state. Possible values include: 'Succeeded',
        /// 'Failed', 'Canceled', 'Accepted', 'Provisioning'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets status of the cluster agent. Possible values include:
        /// 'NotYetRegistered', 'ConnectedRecently', 'NotConnectedRecently',
        /// 'Disconnected', 'Error'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets unique, immutable resource id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.cloudId")]
        public string CloudId { get; private set; }

        /// <summary>
        /// Gets or sets app id of cluster AAD identity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.aadClientId")]
        public string AadClientId { get; set; }

        /// <summary>
        /// Gets or sets tenant id of cluster AAD identity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.aadTenantId")]
        public string AadTenantId { get; set; }

        /// <summary>
        /// Gets or sets properties reported by cluster agent.
        /// </summary>
        [JsonProperty(PropertyName = "properties.reportedProperties")]
        public ClusterReportedProperties ReportedProperties { get; set; }

        /// <summary>
        /// Gets number of days remaining in the trial period.
        /// </summary>
        [JsonProperty(PropertyName = "properties.trialDaysRemaining")]
        public double? TrialDaysRemaining { get; private set; }

        /// <summary>
        /// Gets type of billing applied to the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.billingModel")]
        public string BillingModel { get; private set; }

        /// <summary>
        /// Gets first cluster sync timestamp.
        /// </summary>
        [JsonProperty(PropertyName = "properties.registrationTimestamp")]
        public System.DateTime? RegistrationTimestamp { get; private set; }

        /// <summary>
        /// Gets most recent cluster sync timestamp.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastSyncTimestamp")]
        public System.DateTime? LastSyncTimestamp { get; private set; }

        /// <summary>
        /// Gets most recent billing meter timestamp.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastBillingTimestamp")]
        public System.DateTime? LastBillingTimestamp { get; private set; }

    }
}
