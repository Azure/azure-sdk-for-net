// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Hci.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Hci
{
    /// <summary>
    /// A class representing the HciGuestAgent data model.
    /// Defines the GuestAgent.
    /// </summary>
    public partial class HciGuestAgentData : ResourceData
    {
        /// <summary> Initializes a new instance of HciGuestAgentData. </summary>
        public HciGuestAgentData()
        {
        }

        /// <summary> Initializes a new instance of HciGuestAgentData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="credentials"> Username / Password Credentials to provision guest agent. </param>
        /// <param name="httpProxyConfig"> HTTP Proxy configuration for the VM. </param>
        /// <param name="provisioningAction"> The guest agent provisioning action. </param>
        /// <param name="status"> The guest agent status. </param>
        /// <param name="provisioningState"> The provisioning state. </param>
        internal HciGuestAgentData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, HciGuestCredential credentials, HttpProxyConfiguration httpProxyConfig, HciAgentProvisioningAction? provisioningAction, string status, string provisioningState) : base(id, name, resourceType, systemData)
        {
            Credentials = credentials;
            HttpProxyConfig = httpProxyConfig;
            ProvisioningAction = provisioningAction;
            Status = status;
            ProvisioningState = provisioningState;
        }

        /// <summary> Username / Password Credentials to provision guest agent. </summary>
        public HciGuestCredential Credentials { get; set; }
        /// <summary> HTTP Proxy configuration for the VM. </summary>
        internal HttpProxyConfiguration HttpProxyConfig { get; set; }
        /// <summary> The httpsProxy url. </summary>
        public string HttpsProxy
        {
            get => HttpProxyConfig is null ? default : HttpProxyConfig.HttpsProxy;
            set
            {
                if (HttpProxyConfig is null)
                    HttpProxyConfig = new HttpProxyConfiguration();
                HttpProxyConfig.HttpsProxy = value;
            }
        }

        /// <summary> The guest agent provisioning action. </summary>
        public HciAgentProvisioningAction? ProvisioningAction { get; set; }
        /// <summary> The guest agent status. </summary>
        public string Status { get; }
        /// <summary> The provisioning state. </summary>
        public string ProvisioningState { get; }
    }
}
