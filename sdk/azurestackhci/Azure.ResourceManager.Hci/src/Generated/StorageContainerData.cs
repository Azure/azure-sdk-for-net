// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Hci.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Hci
{
    /// <summary>
    /// A class representing the StorageContainer data model.
    /// The storage container resource definition.
    /// </summary>
    public partial class StorageContainerData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="StorageContainerData"/>. </summary>
        /// <param name="location"> The location. </param>
        public StorageContainerData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of <see cref="StorageContainerData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="extendedLocation"> The extendedLocation of the resource. </param>
        /// <param name="path"> Path of the storage container on the disk. </param>
        /// <param name="provisioningState"> Provisioning state of the storage container. </param>
        /// <param name="status"> The observed state of storage containers. </param>
        internal StorageContainerData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ArcVmExtendedLocation extendedLocation, string path, ProvisioningStateEnum? provisioningState, StorageContainerStatus status) : base(id, name, resourceType, systemData, tags, location)
        {
            ExtendedLocation = extendedLocation;
            Path = path;
            ProvisioningState = provisioningState;
            Status = status;
        }

        /// <summary> The extendedLocation of the resource. </summary>
        public ArcVmExtendedLocation ExtendedLocation { get; set; }
        /// <summary> Path of the storage container on the disk. </summary>
        public string Path { get; set; }
        /// <summary> Provisioning state of the storage container. </summary>
        public ProvisioningStateEnum? ProvisioningState { get; }
        /// <summary> The observed state of storage containers. </summary>
        public StorageContainerStatus Status { get; }
    }
}
