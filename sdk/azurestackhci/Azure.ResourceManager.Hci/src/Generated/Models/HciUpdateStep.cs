// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Models
{
    /// <summary>
    /// Progress representation of the update run steps.
    /// Serialized Name: Step
    /// </summary>
    public partial class HciUpdateStep
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="HciUpdateStep"/>. </summary>
        public HciUpdateStep()
        {
            Steps = new ChangeTrackingList<HciUpdateStep>();
        }

        /// <summary> Initializes a new instance of <see cref="HciUpdateStep"/>. </summary>
        /// <param name="name">
        /// Name of the step.
        /// Serialized Name: Step.name
        /// </param>
        /// <param name="description">
        /// More detailed description of the step.
        /// Serialized Name: Step.description
        /// </param>
        /// <param name="errorMessage">
        /// Error message, specified if the step is in a failed state.
        /// Serialized Name: Step.errorMessage
        /// </param>
        /// <param name="status">
        /// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
        /// Serialized Name: Step.status
        /// </param>
        /// <param name="startTimeUtc">
        /// When the step started, or empty if it has not started executing.
        /// Serialized Name: Step.startTimeUtc
        /// </param>
        /// <param name="endTimeUtc">
        /// When the step reached a terminal state.
        /// Serialized Name: Step.endTimeUtc
        /// </param>
        /// <param name="lastUpdatedTimeUtc">
        /// Completion time of this step or the last completed sub-step.
        /// Serialized Name: Step.lastUpdatedTimeUtc
        /// </param>
        /// <param name="expectedExecutionTime">
        /// Expected execution time of a given step. This is optionally authored in the update action plan and can be empty.
        /// Serialized Name: Step.expectedExecutionTime
        /// </param>
        /// <param name="steps">
        /// Recursive model for child steps of this step.
        /// Serialized Name: Step.steps
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal HciUpdateStep(string name, string description, string errorMessage, string status, DateTimeOffset? startTimeUtc, DateTimeOffset? endTimeUtc, DateTimeOffset? lastUpdatedTimeUtc, string expectedExecutionTime, IList<HciUpdateStep> steps, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            Description = description;
            ErrorMessage = errorMessage;
            Status = status;
            StartTimeUtc = startTimeUtc;
            EndTimeUtc = endTimeUtc;
            LastUpdatedTimeUtc = lastUpdatedTimeUtc;
            ExpectedExecutionTime = expectedExecutionTime;
            Steps = steps;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Name of the step.
        /// Serialized Name: Step.name
        /// </summary>
        [WirePath("name")]
        public string Name { get; set; }
        /// <summary>
        /// More detailed description of the step.
        /// Serialized Name: Step.description
        /// </summary>
        [WirePath("description")]
        public string Description { get; set; }
        /// <summary>
        /// Error message, specified if the step is in a failed state.
        /// Serialized Name: Step.errorMessage
        /// </summary>
        [WirePath("errorMessage")]
        public string ErrorMessage { get; set; }
        /// <summary>
        /// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
        /// Serialized Name: Step.status
        /// </summary>
        [WirePath("status")]
        public string Status { get; set; }
        /// <summary>
        /// When the step started, or empty if it has not started executing.
        /// Serialized Name: Step.startTimeUtc
        /// </summary>
        [WirePath("startTimeUtc")]
        public DateTimeOffset? StartTimeUtc { get; set; }
        /// <summary>
        /// When the step reached a terminal state.
        /// Serialized Name: Step.endTimeUtc
        /// </summary>
        [WirePath("endTimeUtc")]
        public DateTimeOffset? EndTimeUtc { get; set; }
        /// <summary>
        /// Completion time of this step or the last completed sub-step.
        /// Serialized Name: Step.lastUpdatedTimeUtc
        /// </summary>
        [WirePath("lastUpdatedTimeUtc")]
        public DateTimeOffset? LastUpdatedTimeUtc { get; set; }
        /// <summary>
        /// Expected execution time of a given step. This is optionally authored in the update action plan and can be empty.
        /// Serialized Name: Step.expectedExecutionTime
        /// </summary>
        [WirePath("expectedExecutionTime")]
        public string ExpectedExecutionTime { get; set; }
        /// <summary>
        /// Recursive model for child steps of this step.
        /// Serialized Name: Step.steps
        /// </summary>
        [WirePath("steps")]
        public IList<HciUpdateStep> Steps { get; }
    }
}
