// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Hci.Models
{
    public partial class PackageVersionInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PackageType))
            {
                writer.WritePropertyName("packageType");
                writer.WriteStringValue(PackageType);
            }
            if (Optional.IsDefined(Version))
            {
                writer.WritePropertyName("version");
                writer.WriteStringValue(Version);
            }
            if (Optional.IsDefined(LastUpdated))
            {
                writer.WritePropertyName("lastUpdated");
                writer.WriteStringValue(LastUpdated.Value, "O");
            }
            writer.WriteEndObject();
        }

        internal static PackageVersionInfo DeserializePackageVersionInfo(JsonElement element)
        {
            Optional<string> packageType = default;
            Optional<string> version = default;
            Optional<DateTimeOffset> lastUpdated = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("packageType"))
                {
                    packageType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("version"))
                {
                    version = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastUpdated"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastUpdated = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new PackageVersionInfo(packageType.Value, version.Value, Optional.ToNullable(lastUpdated));
        }
    }
}
