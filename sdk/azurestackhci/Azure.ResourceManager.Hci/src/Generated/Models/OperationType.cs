// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Hci.Models
{
    /// <summary> The intended operation for a cluster. </summary>
    public readonly partial struct OperationType : IEquatable<OperationType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="OperationType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public OperationType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ClusterProvisioningValue = "ClusterProvisioning";
        private const string ClusterUpgradeValue = "ClusterUpgrade";

        /// <summary> Cluster provisioning operation. </summary>
        public static OperationType ClusterProvisioning { get; } = new OperationType(ClusterProvisioningValue);
        /// <summary> Cluster upgrade operation. </summary>
        public static OperationType ClusterUpgrade { get; } = new OperationType(ClusterUpgradeValue);
        /// <summary> Determines if two <see cref="OperationType"/> values are the same. </summary>
        public static bool operator ==(OperationType left, OperationType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="OperationType"/> values are not the same. </summary>
        public static bool operator !=(OperationType left, OperationType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="OperationType"/>. </summary>
        public static implicit operator OperationType(string value) => new OperationType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is OperationType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(OperationType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
