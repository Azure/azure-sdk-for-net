// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Models
{
    /// <summary>
    /// The Intents of a cluster.
    /// Serialized Name: Intents
    /// </summary>
    public partial class Intents
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="Intents"/>. </summary>
        public Intents()
        {
            TrafficType = new ChangeTrackingList<string>();
            Adapter = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="Intents"/>. </summary>
        /// <param name="name">
        /// Name of the network intent you wish to create.
        /// Serialized Name: Intents.name
        /// </param>
        /// <param name="trafficType">
        /// List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.
        /// Serialized Name: Intents.trafficType
        /// </param>
        /// <param name="adapter">
        /// Array of network interfaces used for the network intent.
        /// Serialized Name: Intents.adapter
        /// </param>
        /// <param name="overrideVirtualSwitchConfiguration">
        /// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        /// Serialized Name: Intents.overrideVirtualSwitchConfiguration
        /// </param>
        /// <param name="virtualSwitchConfigurationOverrides">
        /// Set virtualSwitch ConfigurationOverrides for cluster.
        /// Serialized Name: Intents.virtualSwitchConfigurationOverrides
        /// </param>
        /// <param name="overrideQosPolicy">
        /// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        /// Serialized Name: Intents.overrideQosPolicy
        /// </param>
        /// <param name="qosPolicyOverrides">
        /// Set QoS PolicyOverrides for cluster.
        /// Serialized Name: Intents.qosPolicyOverrides
        /// </param>
        /// <param name="overrideAdapterProperty">
        /// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        /// Serialized Name: Intents.overrideAdapterProperty
        /// </param>
        /// <param name="adapterPropertyOverrides">
        /// Set Adapter PropertyOverrides for cluster.
        /// Serialized Name: Intents.adapterPropertyOverrides
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal Intents(string name, IList<string> trafficType, IList<string> adapter, bool? overrideVirtualSwitchConfiguration, VirtualSwitchConfigurationOverrides virtualSwitchConfigurationOverrides, bool? overrideQosPolicy, QosPolicyOverrides qosPolicyOverrides, bool? overrideAdapterProperty, AdapterPropertyOverrides adapterPropertyOverrides, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            TrafficType = trafficType;
            Adapter = adapter;
            OverrideVirtualSwitchConfiguration = overrideVirtualSwitchConfiguration;
            VirtualSwitchConfigurationOverrides = virtualSwitchConfigurationOverrides;
            OverrideQosPolicy = overrideQosPolicy;
            QosPolicyOverrides = qosPolicyOverrides;
            OverrideAdapterProperty = overrideAdapterProperty;
            AdapterPropertyOverrides = adapterPropertyOverrides;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Name of the network intent you wish to create.
        /// Serialized Name: Intents.name
        /// </summary>
        [WirePath("name")]
        public string Name { get; set; }
        /// <summary>
        /// List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.
        /// Serialized Name: Intents.trafficType
        /// </summary>
        [WirePath("trafficType")]
        public IList<string> TrafficType { get; }
        /// <summary>
        /// Array of network interfaces used for the network intent.
        /// Serialized Name: Intents.adapter
        /// </summary>
        [WirePath("adapter")]
        public IList<string> Adapter { get; }
        /// <summary>
        /// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        /// Serialized Name: Intents.overrideVirtualSwitchConfiguration
        /// </summary>
        [WirePath("overrideVirtualSwitchConfiguration")]
        public bool? OverrideVirtualSwitchConfiguration { get; set; }
        /// <summary>
        /// Set virtualSwitch ConfigurationOverrides for cluster.
        /// Serialized Name: Intents.virtualSwitchConfigurationOverrides
        /// </summary>
        [WirePath("virtualSwitchConfigurationOverrides")]
        public VirtualSwitchConfigurationOverrides VirtualSwitchConfigurationOverrides { get; set; }
        /// <summary>
        /// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        /// Serialized Name: Intents.overrideQosPolicy
        /// </summary>
        [WirePath("overrideQosPolicy")]
        public bool? OverrideQosPolicy { get; set; }
        /// <summary>
        /// Set QoS PolicyOverrides for cluster.
        /// Serialized Name: Intents.qosPolicyOverrides
        /// </summary>
        [WirePath("qosPolicyOverrides")]
        public QosPolicyOverrides QosPolicyOverrides { get; set; }
        /// <summary>
        /// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
        /// Serialized Name: Intents.overrideAdapterProperty
        /// </summary>
        [WirePath("overrideAdapterProperty")]
        public bool? OverrideAdapterProperty { get; set; }
        /// <summary>
        /// Set Adapter PropertyOverrides for cluster.
        /// Serialized Name: Intents.adapterPropertyOverrides
        /// </summary>
        [WirePath("adapterPropertyOverrides")]
        public AdapterPropertyOverrides AdapterPropertyOverrides { get; set; }
    }
}
