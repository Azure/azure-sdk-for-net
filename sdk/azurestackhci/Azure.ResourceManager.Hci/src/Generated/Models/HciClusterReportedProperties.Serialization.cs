// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Hci.Models
{
    public partial class HciClusterReportedProperties
    {
        internal static HciClusterReportedProperties DeserializeHciClusterReportedProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> clusterName = default;
            Optional<Guid> clusterId = default;
            Optional<string> clusterVersion = default;
            Optional<IReadOnlyList<HciClusterNode>> nodes = default;
            Optional<DateTimeOffset> lastUpdated = default;
            Optional<ImdsAttestationState> imdsAttestation = default;
            Optional<HciClusterDiagnosticLevel> diagnosticLevel = default;
            Optional<IReadOnlyList<string>> supportedCapabilities = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("clusterName"u8))
                {
                    clusterName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("clusterId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("clusterVersion"u8))
                {
                    clusterVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nodes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<HciClusterNode> array = new List<HciClusterNode>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(HciClusterNode.DeserializeHciClusterNode(item));
                    }
                    nodes = array;
                    continue;
                }
                if (property.NameEquals("lastUpdated"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastUpdated = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("imdsAttestation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    imdsAttestation = new ImdsAttestationState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("diagnosticLevel"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    diagnosticLevel = new HciClusterDiagnosticLevel(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("supportedCapabilities"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    supportedCapabilities = array;
                    continue;
                }
            }
            return new HciClusterReportedProperties(clusterName.Value, Optional.ToNullable(clusterId), clusterVersion.Value, Optional.ToList(nodes), Optional.ToNullable(lastUpdated), Optional.ToNullable(imdsAttestation), Optional.ToNullable(diagnosticLevel), Optional.ToList(supportedCapabilities));
        }
    }
}
