// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Models
{
    /// <summary>
    /// The HostNetwork of a cluster.
    /// Serialized Name: HostNetwork
    /// </summary>
    public partial class HostNetwork
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="HostNetwork"/>. </summary>
        public HostNetwork()
        {
            Intents = new ChangeTrackingList<Intents>();
            StorageNetworks = new ChangeTrackingList<StorageNetworks>();
        }

        /// <summary> Initializes a new instance of <see cref="HostNetwork"/>. </summary>
        /// <param name="intents">
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// Serialized Name: HostNetwork.intents
        /// </param>
        /// <param name="storageNetworks">
        /// List of StorageNetworks config to deploy AzureStackHCI Cluster.
        /// Serialized Name: HostNetwork.storageNetworks
        /// </param>
        /// <param name="storageConnectivitySwitchless">
        /// Defines how the storage adapters between nodes are connected either switch or switch less..
        /// Serialized Name: HostNetwork.storageConnectivitySwitchless
        /// </param>
        /// <param name="enableStorageAutoIP">
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
        /// Serialized Name: HostNetwork.enableStorageAutoIp
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal HostNetwork(IList<Intents> intents, IList<StorageNetworks> storageNetworks, bool? storageConnectivitySwitchless, bool? enableStorageAutoIP, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Intents = intents;
            StorageNetworks = storageNetworks;
            StorageConnectivitySwitchless = storageConnectivitySwitchless;
            EnableStorageAutoIP = enableStorageAutoIP;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// Serialized Name: HostNetwork.intents
        /// </summary>
        [WirePath("intents")]
        public IList<Intents> Intents { get; }
        /// <summary>
        /// List of StorageNetworks config to deploy AzureStackHCI Cluster.
        /// Serialized Name: HostNetwork.storageNetworks
        /// </summary>
        [WirePath("storageNetworks")]
        public IList<StorageNetworks> StorageNetworks { get; }
        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less..
        /// Serialized Name: HostNetwork.storageConnectivitySwitchless
        /// </summary>
        [WirePath("storageConnectivitySwitchless")]
        public bool? StorageConnectivitySwitchless { get; set; }
        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
        /// Serialized Name: HostNetwork.enableStorageAutoIp
        /// </summary>
        [WirePath("enableStorageAutoIp")]
        public bool? EnableStorageAutoIP { get; set; }
    }
}
