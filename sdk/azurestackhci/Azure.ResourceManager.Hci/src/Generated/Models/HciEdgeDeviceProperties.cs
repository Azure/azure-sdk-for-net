// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Models
{
    /// <summary>
    /// properties for Arc-enabled edge device with HCI OS.
    /// Serialized Name: HciEdgeDeviceProperties
    /// </summary>
    public partial class HciEdgeDeviceProperties : EdgeDeviceProperties
    {
        /// <summary> Initializes a new instance of <see cref="HciEdgeDeviceProperties"/>. </summary>
        public HciEdgeDeviceProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciEdgeDeviceProperties"/>. </summary>
        /// <param name="deviceConfiguration">
        /// Device Configuration
        /// Serialized Name: EdgeDeviceProperties.deviceConfiguration
        /// </param>
        /// <param name="provisioningState">
        /// Provisioning state of edgeDevice resource
        /// Serialized Name: EdgeDeviceProperties.provisioningState
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="reportedProperties">
        /// The instance view of all current configurations on HCI device.
        /// Serialized Name: HciEdgeDeviceProperties.reportedProperties
        /// </param>
        internal HciEdgeDeviceProperties(DeviceConfiguration deviceConfiguration, HciProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData, HciReportedProperties reportedProperties) : base(deviceConfiguration, provisioningState, serializedAdditionalRawData)
        {
            ReportedProperties = reportedProperties;
        }

        /// <summary>
        /// The instance view of all current configurations on HCI device.
        /// Serialized Name: HciEdgeDeviceProperties.reportedProperties
        /// </summary>
        [WirePath("reportedProperties")]
        public HciReportedProperties ReportedProperties { get; }
    }
}
