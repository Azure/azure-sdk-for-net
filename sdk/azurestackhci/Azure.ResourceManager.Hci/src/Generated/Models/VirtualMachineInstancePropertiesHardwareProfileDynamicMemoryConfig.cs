// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Models
{
    /// <summary> The VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig. </summary>
    public partial class VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig"/>. </summary>
        public VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig()
        {
        }

        /// <summary> Initializes a new instance of <see cref="VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig"/>. </summary>
        /// <param name="maximumMemoryMB"></param>
        /// <param name="minimumMemoryMB"></param>
        /// <param name="targetMemoryBuffer"> Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig(long? maximumMemoryMB, long? minimumMemoryMB, int? targetMemoryBuffer, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MaximumMemoryMB = maximumMemoryMB;
            MinimumMemoryMB = minimumMemoryMB;
            TargetMemoryBuffer = targetMemoryBuffer;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the maximum memory mb. </summary>
        public long? MaximumMemoryMB { get; set; }
        /// <summary> Gets or sets the minimum memory mb. </summary>
        public long? MinimumMemoryMB { get; set; }
        /// <summary> Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000. </summary>
        public int? TargetMemoryBuffer { get; set; }
    }
}
