// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Hci.Models
{
    public partial class VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MaximumMemoryMB))
            {
                writer.WritePropertyName("maximumMemoryMB"u8);
                writer.WriteNumberValue(MaximumMemoryMB.Value);
            }
            if (Optional.IsDefined(MinimumMemoryMB))
            {
                writer.WritePropertyName("minimumMemoryMB"u8);
                writer.WriteNumberValue(MinimumMemoryMB.Value);
            }
            if (Optional.IsDefined(TargetMemoryBuffer))
            {
                writer.WritePropertyName("targetMemoryBuffer"u8);
                writer.WriteNumberValue(TargetMemoryBuffer.Value);
            }
            writer.WriteEndObject();
        }

        internal static VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig DeserializeVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<long> maximumMemoryMB = default;
            Optional<long> minimumMemoryMB = default;
            Optional<int> targetMemoryBuffer = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("maximumMemoryMB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maximumMemoryMB = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("minimumMemoryMB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    minimumMemoryMB = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("targetMemoryBuffer"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    targetMemoryBuffer = property.Value.GetInt32();
                    continue;
                }
            }
            return new VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig(Optional.ToNullable(maximumMemoryMB), Optional.ToNullable(minimumMemoryMB), Optional.ToNullable(targetMemoryBuffer));
        }
    }
}
