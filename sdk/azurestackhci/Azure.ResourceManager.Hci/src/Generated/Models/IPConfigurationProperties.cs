// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Hci.Models
{
    /// <summary> InterfaceIPConfigurationPropertiesFormat properties of IP configuration. </summary>
    public partial class IPConfigurationProperties
    {
        /// <summary> Initializes a new instance of <see cref="IPConfigurationProperties"/>. </summary>
        public IPConfigurationProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="IPConfigurationProperties"/>. </summary>
        /// <param name="gateway"> Gateway for network interface. </param>
        /// <param name="prefixLength"> prefixLength for network interface. </param>
        /// <param name="privateIPAddress"> PrivateIPAddress - Private IP address of the IP configuration. </param>
        /// <param name="subnet"> Subnet - Name of Subnet bound to the IP configuration. </param>
        internal IPConfigurationProperties(string gateway, string prefixLength, string privateIPAddress, WritableSubResource subnet)
        {
            Gateway = gateway;
            PrefixLength = prefixLength;
            PrivateIPAddress = privateIPAddress;
            Subnet = subnet;
        }

        /// <summary> Gateway for network interface. </summary>
        public string Gateway { get; }
        /// <summary> prefixLength for network interface. </summary>
        public string PrefixLength { get; }
        /// <summary> PrivateIPAddress - Private IP address of the IP configuration. </summary>
        public string PrivateIPAddress { get; set; }
        /// <summary> Subnet - Name of Subnet bound to the IP configuration. </summary>
        internal WritableSubResource Subnet { get; set; }
        /// <summary> Gets or sets Id. </summary>
        public ResourceIdentifier SubnetId
        {
            get => Subnet is null ? default : Subnet.Id;
            set
            {
                if (Subnet is null)
                    Subnet = new WritableSubResource();
                Subnet.Id = value;
            }
        }
    }
}
