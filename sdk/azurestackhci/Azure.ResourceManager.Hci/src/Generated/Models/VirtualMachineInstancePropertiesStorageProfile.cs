// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Hci.Models
{
    /// <summary> StorageProfile - contains information about the disks and storage information for the virtual machine instance. </summary>
    public partial class VirtualMachineInstancePropertiesStorageProfile
    {
        /// <summary> Initializes a new instance of <see cref="VirtualMachineInstancePropertiesStorageProfile"/>. </summary>
        public VirtualMachineInstancePropertiesStorageProfile()
        {
            DataDisks = new ChangeTrackingList<WritableSubResource>();
        }

        /// <summary> Initializes a new instance of <see cref="VirtualMachineInstancePropertiesStorageProfile"/>. </summary>
        /// <param name="dataDisks"> adds data disks to the virtual machine instance. </param>
        /// <param name="imageReference"> Which Image to use for the virtual machine instance. </param>
        /// <param name="osDisk"> VHD to attach as OS disk. </param>
        /// <param name="vmConfigStoragePathId"> Id of the storage container that hosts the VM configuration file. </param>
        internal VirtualMachineInstancePropertiesStorageProfile(IList<WritableSubResource> dataDisks, WritableSubResource imageReference, VirtualMachineInstancePropertiesStorageProfileOSDisk osDisk, ResourceIdentifier vmConfigStoragePathId)
        {
            DataDisks = dataDisks;
            ImageReference = imageReference;
            OSDisk = osDisk;
            VmConfigStoragePathId = vmConfigStoragePathId;
        }

        /// <summary> adds data disks to the virtual machine instance. </summary>
        public IList<WritableSubResource> DataDisks { get; }
        /// <summary> Which Image to use for the virtual machine instance. </summary>
        internal WritableSubResource ImageReference { get; set; }
        /// <summary> Gets or sets Id. </summary>
        public ResourceIdentifier ImageReferenceId
        {
            get => ImageReference is null ? default : ImageReference.Id;
            set
            {
                if (ImageReference is null)
                    ImageReference = new WritableSubResource();
                ImageReference.Id = value;
            }
        }

        /// <summary> VHD to attach as OS disk. </summary>
        public VirtualMachineInstancePropertiesStorageProfileOSDisk OSDisk { get; set; }
        /// <summary> Id of the storage container that hosts the VM configuration file. </summary>
        public ResourceIdentifier VmConfigStoragePathId { get; set; }
    }
}
