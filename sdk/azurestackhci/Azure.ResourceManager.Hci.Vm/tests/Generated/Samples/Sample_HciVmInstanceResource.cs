// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Hci.Vm.Models;
using Azure.ResourceManager.Resources.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Hci.Vm.Samples
{
    public partial class Sample_HciVmInstanceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetVirtualMachineInstance()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_Get.json
            // this example is just showing the usage of "VirtualMachineInstance_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            HciVmInstanceResource result = await hciVmInstance.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HciVmInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteVirtualMachine()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_Delete.json
            // this example is just showing the usage of "VirtualMachineInstance_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            await hciVmInstance.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateVirtualMachine()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_Update.json
            // this example is just showing the usage of "VirtualMachineInstance_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            HciVmInstancePatch patch = new HciVmInstancePatch
            {
                Properties = new HciVmInstancePatchProperties
                {
                    StorageDataDisks = {new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.AzureStackHCI/virtualHardDisks/test-vhd"),
}},
                },
            };
            ArmOperation<HciVmInstanceResource> lro = await hciVmInstance.UpdateAsync(WaitUntil.Completed, patch);
            HciVmInstanceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HciVmInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_PutVirtualMachineInstanceWithGalleryImage()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_CreateOrUpdate_Put_Virtual_Machine_Instance_With_Gallery_Image.json
            // this example is just showing the usage of "VirtualMachineInstance_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            HciVmInstanceData data = new HciVmInstanceData
            {
                Properties = new HciVmInstanceProperties
                {
                    HardwareProfile = new HciVmInstanceHardwareProfile
                    {
                        VmSize = HciVmSize.Default,
                    },
                    NetworkInterfaces = {new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/networkInterfaces/test-nic"),
}},
                    OSProfile = new HciVmInstanceOSProfile
                    {
                        AdminPassword = "password",
                        AdminUsername = "localadmin",
                        ComputerName = "luamaster",
                    },
                    SecurityProfile = new HciVmInstanceSecurityProfile
                    {
                        IsTpmEnabled = true,
                        SecureBootEnabled = true,
                    },
                    StorageProfile = new HciVmInstanceStorageProfile
                    {
                        ImageReferenceId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/galleryImages/test-gallery-image"),
                        VmConfigStoragePathId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/storageContainers/test-container"),
                    },
                },
                ExtendedLocation = new HciVmExtendedLocation
                {
                    Name = "/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.ExtendedLocation/customLocations/dogfood-location",
                    Type = HciVmExtendedLocationType.CustomLocation,
                },
            };
            ArmOperation<HciVmInstanceResource> lro = await hciVmInstance.CreateOrUpdateAsync(WaitUntil.Completed, data);
            HciVmInstanceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HciVmInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_PutVirtualMachineInstanceWithGpu()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_CreateOrUpdate_Put_Virtual_Machine_Instance_With_Gpu.json
            // this example is just showing the usage of "VirtualMachineInstance_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            HciVmInstanceData data = new HciVmInstanceData
            {
                Properties = new HciVmInstanceProperties
                {
                    HardwareProfile = new HciVmInstanceHardwareProfile
                    {
                        VmSize = HciVmSize.Default,
                        VirtualMachineGPUs = {new HciVmInstanceHardwareProfileGpuConfiguration(GpuAssignmentType.GpuDda)
{
PartitionSizeInMB = 0L,
}},
                    },
                    NetworkInterfaces = {new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/networkInterfaces/test-nic"),
}},
                    OSProfile = new HciVmInstanceOSProfile
                    {
                        AdminPassword = "password",
                        AdminUsername = "localadmin",
                        ComputerName = "luamaster",
                    },
                    SecurityProfile = new HciVmInstanceSecurityProfile
                    {
                        IsTpmEnabled = true,
                        SecureBootEnabled = true,
                    },
                    StorageProfile = new HciVmInstanceStorageProfile
                    {
                        ImageReferenceId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/galleryImages/test-gallery-image"),
                        VmConfigStoragePathId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/storageContainers/test-container"),
                    },
                },
                ExtendedLocation = new HciVmExtendedLocation
                {
                    Name = "/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.ExtendedLocation/customLocations/dogfood-location",
                    Type = HciVmExtendedLocationType.CustomLocation,
                },
            };
            ArmOperation<HciVmInstanceResource> lro = await hciVmInstance.CreateOrUpdateAsync(WaitUntil.Completed, data);
            HciVmInstanceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HciVmInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_PutVirtualMachineInstanceWithMarketplaceGalleryImage()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_CreateOrUpdate_Put_Virtual_Machine_Instance_With_Marketplace_Gallery_Image.json
            // this example is just showing the usage of "VirtualMachineInstance_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            HciVmInstanceData data = new HciVmInstanceData
            {
                Properties = new HciVmInstanceProperties
                {
                    HardwareProfile = new HciVmInstanceHardwareProfile
                    {
                        VmSize = HciVmSize.Default,
                    },
                    NetworkInterfaces = {new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/networkInterfaces/test-nic"),
}},
                    OSProfile = new HciVmInstanceOSProfile
                    {
                        AdminPassword = "password",
                        AdminUsername = "localadmin",
                        ComputerName = "luamaster",
                    },
                    SecurityProfile = new HciVmInstanceSecurityProfile
                    {
                        IsTpmEnabled = true,
                        SecureBootEnabled = true,
                    },
                    StorageProfile = new HciVmInstanceStorageProfile
                    {
                        ImageReferenceId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages/test-marketplace-gallery-image"),
                        VmConfigStoragePathId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/storageContainers/test-container"),
                    },
                },
                ExtendedLocation = new HciVmExtendedLocation
                {
                    Name = "/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.ExtendedLocation/customLocations/dogfood-location",
                    Type = HciVmExtendedLocationType.CustomLocation,
                },
            };
            ArmOperation<HciVmInstanceResource> lro = await hciVmInstance.CreateOrUpdateAsync(WaitUntil.Completed, data);
            HciVmInstanceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HciVmInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_PutVirtualMachineInstanceWithOsDisk()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_CreateOrUpdate_Put_Virtual_Machine_Instance_With_Os_Disk.json
            // this example is just showing the usage of "VirtualMachineInstance_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            HciVmInstanceData data = new HciVmInstanceData
            {
                Properties = new HciVmInstanceProperties
                {
                    HardwareProfile = new HciVmInstanceHardwareProfile
                    {
                        VmSize = HciVmSize.Default,
                    },
                    NetworkInterfaces = {new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/networkInterfaces/test-nic"),
}},
                    SecurityProfile = new HciVmInstanceSecurityProfile
                    {
                        IsTpmEnabled = true,
                        SecureBootEnabled = true,
                    },
                    StorageProfile = new HciVmInstanceStorageProfile
                    {
                        OSDisk = new HciVmInstanceStorageProfileOSDisk
                        {
                            Id = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/virtualHardDisks/test-vhd"),
                        },
                        VmConfigStoragePathId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/storageContainers/test-container"),
                    },
                },
                ExtendedLocation = new HciVmExtendedLocation
                {
                    Name = "/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.ExtendedLocation/customLocations/dogfood-location",
                    Type = HciVmExtendedLocationType.CustomLocation,
                },
            };
            ArmOperation<HciVmInstanceResource> lro = await hciVmInstance.CreateOrUpdateAsync(WaitUntil.Completed, data);
            HciVmInstanceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HciVmInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_PutVirtualMachineInstanceWithVMConfigAgent()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_CreateOrUpdate_Put_Virtual_Machine_Instance_With_Vm_Config_Agent.json
            // this example is just showing the usage of "VirtualMachineInstance_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            HciVmInstanceData data = new HciVmInstanceData
            {
                Properties = new HciVmInstanceProperties
                {
                    HardwareProfile = new HciVmInstanceHardwareProfile
                    {
                        VmSize = HciVmSize.Default,
                    },
                    NetworkInterfaces = {new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/networkInterfaces/test-nic"),
}},
                    OSProfile = new HciVmInstanceOSProfile
                    {
                        AdminPassword = "password",
                        AdminUsername = "localadmin",
                        ComputerName = "luamaster",
                        WindowsConfiguration = new HciVmInstanceOSProfileWindowsConfiguration
                        {
                            ProvisionVmConfigAgent = true,
                        },
                    },
                    SecurityProfile = new HciVmInstanceSecurityProfile
                    {
                        IsTpmEnabled = true,
                        SecureBootEnabled = true,
                    },
                    StorageProfile = new HciVmInstanceStorageProfile
                    {
                        ImageReferenceId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/galleryImages/test-gallery-image"),
                        VmConfigStoragePathId = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/storageContainers/test-container"),
                    },
                },
                ExtendedLocation = new HciVmExtendedLocation
                {
                    Name = "/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.ExtendedLocation/customLocations/dogfood-location",
                    Type = HciVmExtendedLocationType.CustomLocation,
                },
            };
            ArmOperation<HciVmInstanceResource> lro = await hciVmInstance.CreateOrUpdateAsync(WaitUntil.Completed, data);
            HciVmInstanceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HciVmInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_CreateVirtualMachineInstanceFromLocal()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances__CreateOrUpdate_CreateFromLocal.json
            // this example is just showing the usage of "VirtualMachineInstance_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            HciVmInstanceData data = new HciVmInstanceData
            {
                Properties = new HciVmInstanceProperties
                {
                    NetworkInterfaces = {new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.AzureStackHCI/networkInterfaces/test-nic"),
}},
                    StorageProfile = new HciVmInstanceStorageProfile
                    {
                        DataDisks = {new WritableSubResource
{
Id = new ResourceIdentifier("/subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.AzureStackHCI/virtualHardDisks/test-vhd"),
}},
                    },
                    IsCreatingFromLocal = true,
                },
                ExtendedLocation = new HciVmExtendedLocation
                {
                    Name = "/subscriptions/a95612cb-f1fa-4daa-a4fd-272844fa512c/resourceGroups/dogfoodarc/providers/Microsoft.ExtendedLocation/customLocations/dogfood-location",
                    Type = HciVmExtendedLocationType.CustomLocation,
                },
            };
            ArmOperation<HciVmInstanceResource> lro = await hciVmInstance.CreateOrUpdateAsync(WaitUntil.Completed, data);
            HciVmInstanceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HciVmInstanceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Start_StartVirtualMachine()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_Start.json
            // this example is just showing the usage of "VirtualMachineInstances_Start" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            await hciVmInstance.StartAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Stop_StopVirtualMachine()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_Stop.json
            // this example is just showing the usage of "VirtualMachineInstances_Stop" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            await hciVmInstance.StopAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Restart_RestartVirtualMachine()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_Restart.json
            // this example is just showing the usage of "VirtualMachineInstances_Restart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.HybridCompute/machines/DemoVM/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            await hciVmInstance.RestartAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Pause_PauseVirtualMachine()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_Pause.json
            // this example is just showing the usage of "VirtualMachineInstances_Pause" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/Microsoft.HybridCompute/machines/DemoVM/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            await hciVmInstance.PauseAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Save_SaveVirtualMachine()
        {
            // Generated from example definition: 2025-06-01-preview/VirtualMachineInstances_Save.json
            // this example is just showing the usage of "VirtualMachineInstances_Save" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HciVmInstanceResource created on azure
            // for more information of creating HciVmInstanceResource, please refer to the document of HciVmInstanceResource
            string resourceUri = "subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/Microsoft.HybridCompute/machines/DemoVM/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default";
            ResourceIdentifier hciVmInstanceResourceId = HciVmInstanceResource.CreateResourceIdentifier(resourceUri);
            HciVmInstanceResource hciVmInstance = client.GetHciVmInstanceResource(hciVmInstanceResourceId);

            // invoke the operation
            await hciVmInstance.SaveAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }
    }
}
