// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Hci.Vm.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Hci.Vm
{
    /// <summary> NetworkSecurityGroup resource. </summary>
    public partial class HciVmNetworkSecurityGroupData : TrackedResourceData
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkSecurityGroupData"/>. </summary>
        /// <param name="location"> The geo-location where the resource lives. </param>
        public HciVmNetworkSecurityGroupData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkSecurityGroupData"/>. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> The extendedLocation of the resource. </param>
        /// <param name="eTag"> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        internal HciVmNetworkSecurityGroupData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, BinaryData> additionalBinaryDataProperties, IDictionary<string, string> tags, AzureLocation location, HciVmNetworkSecurityGroupProperties properties, HciVmExtendedLocation extendedLocation, string eTag) : base(id, name, resourceType, systemData, tags, location)
        {
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
            Properties = properties;
            ExtendedLocation = extendedLocation;
            ETag = eTag;
        }

        /// <summary> The resource-specific properties for this resource. </summary>
        public HciVmNetworkSecurityGroupProperties Properties { get; set; }

        /// <summary> The extendedLocation of the resource. </summary>
        public HciVmExtendedLocation ExtendedLocation { get; set; }

        /// <summary> If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </summary>
        public string ETag { get; }
    }
}
