// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Hci.Vm;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> Properties under the network interface resource. </summary>
    public partial class HciVmNetworkInterfaceProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkInterfaceProperties"/>. </summary>
        public HciVmNetworkInterfaceProperties()
        {
            IPConfigurations = new ChangeTrackingList<HciVmIPConfiguration>();
        }

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkInterfaceProperties"/>. </summary>
        /// <param name="ipConfigurations"> IPConfigurations - A list of IPConfigurations of the network interface. </param>
        /// <param name="macAddress"> MacAddress - The MAC address of the network interface. </param>
        /// <param name="dnsSettings"> DNS Settings for the interface. </param>
        /// <param name="createFromLocal"> Boolean indicating whether this is a existing local network interface or if one should be created. </param>
        /// <param name="provisioningState"> Provisioning state of the network interface. </param>
        /// <param name="status"> The observed state of network interfaces. </param>
        /// <param name="networkSecurityGroup"> NetworkSecurityGroup - Network Security Group attached to the network interface. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmNetworkInterfaceProperties(IList<HciVmIPConfiguration> ipConfigurations, string macAddress, InterfaceDNSSettings dnsSettings, bool? createFromLocal, HciVmProvisioningState? provisioningState, HciVmNetworkInterfaceStatus status, NetworkSecurityGroupArmReference networkSecurityGroup, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            IPConfigurations = ipConfigurations;
            MacAddress = macAddress;
            DnsSettings = dnsSettings;
            CreateFromLocal = createFromLocal;
            ProvisioningState = provisioningState;
            Status = status;
            NetworkSecurityGroup = networkSecurityGroup;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> IPConfigurations - A list of IPConfigurations of the network interface. </summary>
        public IList<HciVmIPConfiguration> IPConfigurations { get; }

        /// <summary> MacAddress - The MAC address of the network interface. </summary>
        public string MacAddress { get; set; }

        /// <summary> DNS Settings for the interface. </summary>
        internal InterfaceDNSSettings DnsSettings { get; set; }

        /// <summary> Boolean indicating whether this is a existing local network interface or if one should be created. </summary>
        public bool? CreateFromLocal { get; set; }

        /// <summary> Provisioning state of the network interface. </summary>
        public HciVmProvisioningState? ProvisioningState { get; }

        /// <summary> The observed state of network interfaces. </summary>
        public HciVmNetworkInterfaceStatus Status { get; }

        /// <summary> NetworkSecurityGroup - Network Security Group attached to the network interface. </summary>
        internal NetworkSecurityGroupArmReference NetworkSecurityGroup { get; set; }

        /// <summary> List of DNS server IP Addresses for the interface. </summary>
        public IList<string> DnsServers
        {
            get
            {
                if (DnsSettings is null)
                {
                    DnsSettings = new InterfaceDNSSettings();
                }
                return DnsSettings.DnsServers;
            }
        }

        /// <summary> The ARM ID for a Network Security Group. </summary>
        public ResourceIdentifier NetworkSecurityGroupId
        {
            get
            {
                return NetworkSecurityGroup is null ? default : NetworkSecurityGroup.Id;
            }
            set
            {
                if (NetworkSecurityGroup is null)
                {
                    NetworkSecurityGroup = new NetworkSecurityGroupArmReference();
                }
                NetworkSecurityGroup.Id = value;
            }
        }
    }
}
