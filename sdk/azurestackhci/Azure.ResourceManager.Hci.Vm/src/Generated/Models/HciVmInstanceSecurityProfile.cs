// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> SecurityProfile - Specifies the security settings for the virtual machine instance. </summary>
    public partial class HciVmInstanceSecurityProfile
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmInstanceSecurityProfile"/>. </summary>
        public HciVmInstanceSecurityProfile()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciVmInstanceSecurityProfile"/>. </summary>
        /// <param name="isTpmEnabled"> Enable TPM flag. </param>
        /// <param name="uefiSettings"> Uefi settings of the virtual machine instance. </param>
        /// <param name="securityType"> Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmInstanceSecurityProfile(bool? isTpmEnabled, VirtualMachineInstancePropertiesSecurityProfileUefiSettings uefiSettings, HciVmSecurityType? securityType, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            IsTpmEnabled = isTpmEnabled;
            UefiSettings = uefiSettings;
            SecurityType = securityType;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Enable TPM flag. </summary>
        public bool? IsTpmEnabled { get; set; }

        /// <summary> Uefi settings of the virtual machine instance. </summary>
        internal VirtualMachineInstancePropertiesSecurityProfileUefiSettings UefiSettings { get; set; }

        /// <summary> Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function. </summary>
        public HciVmSecurityType? SecurityType { get; set; }

        /// <summary> Specifies whether secure boot should be enabled on the virtual machine instance. </summary>
        public bool? SecureBootEnabled
        {
            get
            {
                return UefiSettings is null ? default : UefiSettings.SecureBootEnabled;
            }
            set
            {
                if (UefiSettings is null)
                {
                    UefiSettings = new VirtualMachineInstancePropertiesSecurityProfileUefiSettings();
                }
                UefiSettings.SecureBootEnabled = value;
            }
        }
    }
}
