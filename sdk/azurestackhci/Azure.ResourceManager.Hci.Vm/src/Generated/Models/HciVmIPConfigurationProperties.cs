// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> InterfaceIPConfigurationPropertiesFormat properties of IP configuration. </summary>
    public partial class HciVmIPConfigurationProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmIPConfigurationProperties"/>. </summary>
        public HciVmIPConfigurationProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciVmIPConfigurationProperties"/>. </summary>
        /// <param name="gateway"> Gateway for network interface. </param>
        /// <param name="prefixLength"> prefixLength for network interface. </param>
        /// <param name="privateIPAddress"> PrivateIPAddress - Private IP address of the IP configuration. </param>
        /// <param name="subnet"> Subnet - Name of Subnet bound to the IP configuration. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmIPConfigurationProperties(string gateway, string prefixLength, string privateIPAddress, LogicalNetworkArmReference subnet, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Gateway = gateway;
            PrefixLength = prefixLength;
            PrivateIPAddress = privateIPAddress;
            Subnet = subnet;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gateway for network interface. </summary>
        public string Gateway { get; }

        /// <summary> prefixLength for network interface. </summary>
        public string PrefixLength { get; }

        /// <summary> PrivateIPAddress - Private IP address of the IP configuration. </summary>
        public string PrivateIPAddress { get; set; }

        /// <summary> Subnet - Name of Subnet bound to the IP configuration. </summary>
        internal LogicalNetworkArmReference Subnet { get; set; }

        /// <summary> The ARM ID for a Logical Network. </summary>
        public ResourceIdentifier SubnetId
        {
            get
            {
                return Subnet is null ? default : Subnet.Id;
            }
            set
            {
                if (Subnet is null)
                {
                    Subnet = new LogicalNetworkArmReference();
                }
                Subnet.Id = value;
            }
        }
    }
}
