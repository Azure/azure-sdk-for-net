// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> Defines the resource properties for the update. </summary>
    public partial class HciVmNetworkInterfacePatchProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkInterfacePatchProperties"/>. </summary>
        public HciVmNetworkInterfacePatchProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkInterfacePatchProperties"/>. </summary>
        /// <param name="networkSecurityGroup"> NetworkSecurityGroup - Network Security Group attached to the network interface. </param>
        /// <param name="dnsSettings"> DNS Settings for the interface. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmNetworkInterfacePatchProperties(NetworkSecurityGroupArmReference networkSecurityGroup, InterfaceDNSSettings dnsSettings, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            NetworkSecurityGroup = networkSecurityGroup;
            DnsSettings = dnsSettings;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> NetworkSecurityGroup - Network Security Group attached to the network interface. </summary>
        internal NetworkSecurityGroupArmReference NetworkSecurityGroup { get; set; }

        /// <summary> DNS Settings for the interface. </summary>
        internal InterfaceDNSSettings DnsSettings { get; set; }

        /// <summary> The ARM ID for a Network Security Group. </summary>
        public ResourceIdentifier NetworkSecurityGroupId
        {
            get
            {
                return NetworkSecurityGroup is null ? default : NetworkSecurityGroup.Id;
            }
            set
            {
                if (NetworkSecurityGroup is null)
                {
                    NetworkSecurityGroup = new NetworkSecurityGroupArmReference();
                }
                NetworkSecurityGroup.Id = value;
            }
        }

        /// <summary> List of DNS server IP Addresses for the interface. </summary>
        public IList<string> DnsServers
        {
            get
            {
                if (DnsSettings is null)
                {
                    DnsSettings = new InterfaceDNSSettings();
                }
                return DnsSettings.DnsServers;
            }
        }
    }
}
