// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> Route table resource. </summary>
    public partial class HciVmNetworkingRouteTable
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkingRouteTable"/>. </summary>
        public HciVmNetworkingRouteTable()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkingRouteTable"/>. </summary>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="properties"> Properties of the route table. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmNetworkingRouteTable(string etag, string name, string @type, RouteTableProperties properties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Etag = etag;
            Name = name;
            Type = @type;
            Properties = properties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }

        /// <summary> Resource name. </summary>
        public string Name { get; }

        /// <summary> Resource type. </summary>
        public string Type { get; }

        /// <summary> Properties of the route table. </summary>
        internal RouteTableProperties Properties { get; set; }

        /// <summary> Collection of routes contained within a route table. </summary>
        public IList<HciVmNetworkingRoute> Routes
        {
            get
            {
                if (Properties is null)
                {
                    Properties = new RouteTableProperties();
                }
                return Properties.Routes;
            }
        }
    }
}
