// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> Route - Route resource. </summary>
    public partial class HciVmNetworkingRoute
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkingRoute"/>. </summary>
        public HciVmNetworkingRoute()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciVmNetworkingRoute"/>. </summary>
        /// <param name="properties"> Properties of the route. </param>
        /// <param name="name"> Name - name of the subnet. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmNetworkingRoute(RouteProperties properties, string name, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Properties = properties;
            Name = name;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Properties of the route. </summary>
        internal RouteProperties Properties { get; set; }

        /// <summary> Name - name of the subnet. </summary>
        public string Name { get; set; }

        /// <summary> The destination CIDR to which the route applies. </summary>
        public string AddressPrefix
        {
            get
            {
                return Properties is null ? default : Properties.AddressPrefix;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new RouteProperties();
                }
                Properties.AddressPrefix = value;
            }
        }

        /// <summary> The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance. </summary>
        public string NextHopIpAddress
        {
            get
            {
                return Properties is null ? default : Properties.NextHopIpAddress;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new RouteProperties();
                }
                Properties.NextHopIpAddress = value;
            }
        }
    }
}
