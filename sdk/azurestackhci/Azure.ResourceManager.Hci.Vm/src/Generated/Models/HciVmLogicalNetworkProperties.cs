// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.Hci.Vm;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> Properties under the logical network resource. </summary>
    public partial class HciVmLogicalNetworkProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmLogicalNetworkProperties"/>. </summary>
        public HciVmLogicalNetworkProperties()
        {
            Subnets = new ChangeTrackingList<HciVmNetworkingSubnet>();
        }

        /// <summary> Initializes a new instance of <see cref="HciVmLogicalNetworkProperties"/>. </summary>
        /// <param name="dhcpOptions"> DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options. </param>
        /// <param name="subnets"> Subnet - list of subnets under the logical network. </param>
        /// <param name="provisioningState"> Provisioning state of the logical network. </param>
        /// <param name="vmSwitchName"> name of the network switch to be used for VMs. </param>
        /// <param name="status"> The observed state of logical networks. </param>
        /// <param name="networkType"> Type of the Logical Network. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmLogicalNetworkProperties(HciVmLogicalNetworkDhcpOptions dhcpOptions, IList<HciVmNetworkingSubnet> subnets, HciVmProvisioningState? provisioningState, string vmSwitchName, HciVmLogicalNetworkStatus status, HciVmLogicalNetworkType? networkType, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DhcpOptions = dhcpOptions;
            Subnets = subnets;
            ProvisioningState = provisioningState;
            VmSwitchName = vmSwitchName;
            Status = status;
            NetworkType = networkType;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options. </summary>
        internal HciVmLogicalNetworkDhcpOptions DhcpOptions { get; set; }

        /// <summary> Subnet - list of subnets under the logical network. </summary>
        public IList<HciVmNetworkingSubnet> Subnets { get; }

        /// <summary> Provisioning state of the logical network. </summary>
        public HciVmProvisioningState? ProvisioningState { get; }

        /// <summary> name of the network switch to be used for VMs. </summary>
        public string VmSwitchName { get; set; }

        /// <summary> The observed state of logical networks. </summary>
        public HciVmLogicalNetworkStatus Status { get; }

        /// <summary> Type of the Logical Network. </summary>
        public HciVmLogicalNetworkType? NetworkType { get; }

        /// <summary> The list of DNS servers IP addresses. </summary>
        public IList<string> DhcpOptionsDnsServers
        {
            get
            {
                if (DhcpOptions is null)
                {
                    DhcpOptions = new HciVmLogicalNetworkDhcpOptions();
                }
                return DhcpOptions.DnsServers;
            }
        }
    }
}
