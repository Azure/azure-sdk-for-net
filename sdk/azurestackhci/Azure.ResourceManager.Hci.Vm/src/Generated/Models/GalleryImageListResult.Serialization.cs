// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

<<<<<<<< HEAD:sdk/workloadorchestration/Azure.ResourceManager.WorkloadOrchestration/src/Generated/Models/SolutionVersionListResult.Serialization.cs
namespace Azure.ResourceManager.WorkloadOrchestration.Models
{
    internal partial class SolutionVersionListResult : IUtf8JsonSerializable, IJsonModel<SolutionVersionListResult>
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IJsonModel<SolutionVersionListResult>)this).Write(writer, ModelSerializationExtensions.WireOptions);

        void IJsonModel<SolutionVersionListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options)
========
namespace Azure.ResourceManager.Hci.Vm.Models
{
    internal partial class GalleryImageListResult : IUtf8JsonSerializable, IJsonModel<GalleryImageListResult>
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IJsonModel<GalleryImageListResult>)this).Write(writer, ModelSerializationExtensions.WireOptions);

        void IJsonModel<GalleryImageListResult>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options)
>>>>>>>> 55d5a2fdb94afd7949d951566821912afaacc538:sdk/azurestackhci/Azure.ResourceManager.Hci.Vm/src/Generated/Models/GalleryImageListResult.Serialization.cs
        {
            writer.WriteStartObject();
            JsonModelWriteCore(writer, options);
            writer.WriteEndObject();
        }

        /// <param name="writer"> The JSON writer. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        protected virtual void JsonModelWriteCore(Utf8JsonWriter writer, ModelReaderWriterOptions options)
        {
<<<<<<<< HEAD:sdk/workloadorchestration/Azure.ResourceManager.WorkloadOrchestration/src/Generated/Models/SolutionVersionListResult.Serialization.cs
            var format = options.Format == "W" ? ((IPersistableModel<SolutionVersionListResult>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(SolutionVersionListResult)} does not support writing '{format}' format.");
========
            var format = options.Format == "W" ? ((IPersistableModel<GalleryImageListResult>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(GalleryImageListResult)} does not support writing '{format}' format.");
>>>>>>>> 55d5a2fdb94afd7949d951566821912afaacc538:sdk/azurestackhci/Azure.ResourceManager.Hci.Vm/src/Generated/Models/GalleryImageListResult.Serialization.cs
            }

            writer.WritePropertyName("value"u8);
            writer.WriteStartArray();
            foreach (var item in Value)
            {
                writer.WriteObjectValue(item, options);
            }
            writer.WriteEndArray();
            if (Optional.IsDefined(NextLink))
            {
                writer.WritePropertyName("nextLink"u8);
                writer.WriteStringValue(NextLink.AbsoluteUri);
            }
            if (options.Format != "W" && _serializedAdditionalRawData != null)
            {
                foreach (var item in _serializedAdditionalRawData)
                {
                    writer.WritePropertyName(item.Key);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(item.Value);
#else
                    using (JsonDocument document = JsonDocument.Parse(item.Value, ModelSerializationExtensions.JsonDocumentOptions))
                    {
                        JsonSerializer.Serialize(writer, document.RootElement);
                    }
#endif
                }
            }
        }

<<<<<<<< HEAD:sdk/workloadorchestration/Azure.ResourceManager.WorkloadOrchestration/src/Generated/Models/SolutionVersionListResult.Serialization.cs
        SolutionVersionListResult IJsonModel<SolutionVersionListResult>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<SolutionVersionListResult>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(SolutionVersionListResult)} does not support reading '{format}' format.");
            }

            using JsonDocument document = JsonDocument.ParseValue(ref reader);
            return DeserializeSolutionVersionListResult(document.RootElement, options);
        }

        internal static SolutionVersionListResult DeserializeSolutionVersionListResult(JsonElement element, ModelReaderWriterOptions options = null)
========
        GalleryImageListResult IJsonModel<GalleryImageListResult>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<GalleryImageListResult>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(GalleryImageListResult)} does not support reading '{format}' format.");
            }

            using JsonDocument document = JsonDocument.ParseValue(ref reader);
            return DeserializeGalleryImageListResult(document.RootElement, options);
        }

        internal static GalleryImageListResult DeserializeGalleryImageListResult(JsonElement element, ModelReaderWriterOptions options = null)
>>>>>>>> 55d5a2fdb94afd7949d951566821912afaacc538:sdk/azurestackhci/Azure.ResourceManager.Hci.Vm/src/Generated/Models/GalleryImageListResult.Serialization.cs
        {
            options ??= ModelSerializationExtensions.WireOptions;

            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
<<<<<<<< HEAD:sdk/workloadorchestration/Azure.ResourceManager.WorkloadOrchestration/src/Generated/Models/SolutionVersionListResult.Serialization.cs
            IReadOnlyList<EdgeSolutionVersionData> value = default;
========
            IReadOnlyList<HciVmGalleryImageData> value = default;
>>>>>>>> 55d5a2fdb94afd7949d951566821912afaacc538:sdk/azurestackhci/Azure.ResourceManager.Hci.Vm/src/Generated/Models/GalleryImageListResult.Serialization.cs
            Uri nextLink = default;
            IDictionary<string, BinaryData> serializedAdditionalRawData = default;
            Dictionary<string, BinaryData> rawDataDictionary = new Dictionary<string, BinaryData>();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("value"u8))
                {
<<<<<<<< HEAD:sdk/workloadorchestration/Azure.ResourceManager.WorkloadOrchestration/src/Generated/Models/SolutionVersionListResult.Serialization.cs
                    List<EdgeSolutionVersionData> array = new List<EdgeSolutionVersionData>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(EdgeSolutionVersionData.DeserializeEdgeSolutionVersionData(item, options));
========
                    List<HciVmGalleryImageData> array = new List<HciVmGalleryImageData>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(HciVmGalleryImageData.DeserializeHciVmGalleryImageData(item, options));
>>>>>>>> 55d5a2fdb94afd7949d951566821912afaacc538:sdk/azurestackhci/Azure.ResourceManager.Hci.Vm/src/Generated/Models/GalleryImageListResult.Serialization.cs
                    }
                    value = array;
                    continue;
                }
                if (property.NameEquals("nextLink"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    nextLink = new Uri(property.Value.GetString());
                    continue;
                }
                if (options.Format != "W")
                {
                    rawDataDictionary.Add(property.Name, BinaryData.FromString(property.Value.GetRawText()));
                }
            }
            serializedAdditionalRawData = rawDataDictionary;
<<<<<<<< HEAD:sdk/workloadorchestration/Azure.ResourceManager.WorkloadOrchestration/src/Generated/Models/SolutionVersionListResult.Serialization.cs
            return new SolutionVersionListResult(value, nextLink, serializedAdditionalRawData);
        }

        BinaryData IPersistableModel<SolutionVersionListResult>.Write(ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<SolutionVersionListResult>)this).GetFormatFromOptions(options) : options.Format;
========
            return new GalleryImageListResult(value, nextLink, serializedAdditionalRawData);
        }

        BinaryData IPersistableModel<GalleryImageListResult>.Write(ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<GalleryImageListResult>)this).GetFormatFromOptions(options) : options.Format;
>>>>>>>> 55d5a2fdb94afd7949d951566821912afaacc538:sdk/azurestackhci/Azure.ResourceManager.Hci.Vm/src/Generated/Models/GalleryImageListResult.Serialization.cs

            switch (format)
            {
                case "J":
<<<<<<<< HEAD:sdk/workloadorchestration/Azure.ResourceManager.WorkloadOrchestration/src/Generated/Models/SolutionVersionListResult.Serialization.cs
                    return ModelReaderWriter.Write(this, options, AzureResourceManagerWorkloadOrchestrationContext.Default);
                default:
                    throw new FormatException($"The model {nameof(SolutionVersionListResult)} does not support writing '{options.Format}' format.");
            }
        }

        SolutionVersionListResult IPersistableModel<SolutionVersionListResult>.Create(BinaryData data, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<SolutionVersionListResult>)this).GetFormatFromOptions(options) : options.Format;
========
                    return ModelReaderWriter.Write(this, options, AzureResourceManagerHciVmContext.Default);
                default:
                    throw new FormatException($"The model {nameof(GalleryImageListResult)} does not support writing '{options.Format}' format.");
            }
        }

        GalleryImageListResult IPersistableModel<GalleryImageListResult>.Create(BinaryData data, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<GalleryImageListResult>)this).GetFormatFromOptions(options) : options.Format;
>>>>>>>> 55d5a2fdb94afd7949d951566821912afaacc538:sdk/azurestackhci/Azure.ResourceManager.Hci.Vm/src/Generated/Models/GalleryImageListResult.Serialization.cs

            switch (format)
            {
                case "J":
                    {
                        using JsonDocument document = JsonDocument.Parse(data, ModelSerializationExtensions.JsonDocumentOptions);
<<<<<<<< HEAD:sdk/workloadorchestration/Azure.ResourceManager.WorkloadOrchestration/src/Generated/Models/SolutionVersionListResult.Serialization.cs
                        return DeserializeSolutionVersionListResult(document.RootElement, options);
                    }
                default:
                    throw new FormatException($"The model {nameof(SolutionVersionListResult)} does not support reading '{options.Format}' format.");
            }
        }

        string IPersistableModel<SolutionVersionListResult>.GetFormatFromOptions(ModelReaderWriterOptions options) => "J";
========
                        return DeserializeGalleryImageListResult(document.RootElement, options);
                    }
                default:
                    throw new FormatException($"The model {nameof(GalleryImageListResult)} does not support reading '{options.Format}' format.");
            }
        }

        string IPersistableModel<GalleryImageListResult>.GetFormatFromOptions(ModelReaderWriterOptions options) => "J";
>>>>>>>> 55d5a2fdb94afd7949d951566821912afaacc538:sdk/azurestackhci/Azure.ResourceManager.Hci.Vm/src/Generated/Models/GalleryImageListResult.Serialization.cs
    }
}
