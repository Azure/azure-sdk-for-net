// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.Hci.Vm;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> Request for uploading virtual hard disk. </summary>
    public partial class HciVmVirtualHardDiskUploadContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmVirtualHardDiskUploadContent"/>. </summary>
        /// <param name="managedDiskUploadUri"> The Azure managed disk SAS URL to upload the virtual hard disk to. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="managedDiskUploadUri"/> is null. </exception>
        public HciVmVirtualHardDiskUploadContent(Uri managedDiskUploadUri)
        {
            Argument.AssertNotNull(managedDiskUploadUri, nameof(managedDiskUploadUri));

            ManagedDiskUploadUri = managedDiskUploadUri;
        }

        /// <summary> Initializes a new instance of <see cref="HciVmVirtualHardDiskUploadContent"/>. </summary>
        /// <param name="managedDiskUploadUri"> The Azure managed disk SAS URL to upload the virtual hard disk to. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmVirtualHardDiskUploadContent(Uri managedDiskUploadUri, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ManagedDiskUploadUri = managedDiskUploadUri;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The Azure managed disk SAS URL to upload the virtual hard disk to. </summary>
        public Uri ManagedDiskUploadUri { get; }
    }
}
