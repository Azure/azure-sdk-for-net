// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.Hci.Vm;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> Properties under the storage container resource. </summary>
    public partial class HciVmStorageContainerProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmStorageContainerProperties"/>. </summary>
        /// <param name="path"> Path of the storage container on the disk. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="path"/> is null. </exception>
        public HciVmStorageContainerProperties(string path)
        {
            Argument.AssertNotNull(path, nameof(path));

            Path = path;
        }

        /// <summary> Initializes a new instance of <see cref="HciVmStorageContainerProperties"/>. </summary>
        /// <param name="path"> Path of the storage container on the disk. </param>
        /// <param name="provisioningState"> Provisioning state of the storage container. </param>
        /// <param name="status"> The observed state of storage containers. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmStorageContainerProperties(string path, HciVmProvisioningState? provisioningState, HciVmStorageContainerStatus status, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Path = path;
            ProvisioningState = provisioningState;
            Status = status;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Path of the storage container on the disk. </summary>
        public string Path { get; set; }

        /// <summary> Provisioning state of the storage container. </summary>
        public HciVmProvisioningState? ProvisioningState { get; }

        /// <summary> The observed state of storage containers. </summary>
        public HciVmStorageContainerStatus Status { get; }
    }
}
