// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> VHD to attach as OS disk. </summary>
    public partial class HciVmInstanceStorageProfileOSDisk
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HciVmInstanceStorageProfileOSDisk"/>. </summary>
        public HciVmInstanceStorageProfileOSDisk()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciVmInstanceStorageProfileOSDisk"/>. </summary>
        /// <param name="id"> The ARM ID for a Virtual Hard Disk. </param>
        /// <param name="osType"> This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux. </param>
        /// <param name="managedDisk"> The managed disk parameters. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HciVmInstanceStorageProfileOSDisk(ResourceIdentifier id, HciVmOSType? osType, VirtualMachineInstanceManagedDiskParameters managedDisk, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            OsType = osType;
            ManagedDisk = managedDisk;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The ARM ID for a Virtual Hard Disk. </summary>
        public ResourceIdentifier Id { get; set; }

        /// <summary> This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux. </summary>
        public HciVmOSType? OsType { get; set; }

        /// <summary> The managed disk parameters. </summary>
        public VirtualMachineInstanceManagedDiskParameters ManagedDisk { get; set; }
    }
}
