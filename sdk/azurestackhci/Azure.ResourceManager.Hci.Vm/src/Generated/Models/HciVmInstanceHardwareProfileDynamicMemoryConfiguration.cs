// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Hci.Vm.Models
{
    /// <summary> Dynamic memory config. </summary>
    public partial class HciVmInstanceHardwareProfileDynamicMemoryConfiguration
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="HciVmInstanceHardwareProfileDynamicMemoryConfiguration"/>. </summary>
        public HciVmInstanceHardwareProfileDynamicMemoryConfiguration()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HciVmInstanceHardwareProfileDynamicMemoryConfiguration"/>. </summary>
        /// <param name="maximumMemoryInMB"> Maximum memory in MB. </param>
        /// <param name="minimumMemoryInMB"> Minimum memory in MB. </param>
        /// <param name="targetMemoryBuffer"> Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal HciVmInstanceHardwareProfileDynamicMemoryConfiguration(long? maximumMemoryInMB, long? minimumMemoryInMB, int? targetMemoryBuffer, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MaximumMemoryInMB = maximumMemoryInMB;
            MinimumMemoryInMB = minimumMemoryInMB;
            TargetMemoryBuffer = targetMemoryBuffer;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Maximum memory in MB. </summary>
        public long? MaximumMemoryInMB { get; set; }
        /// <summary> Minimum memory in MB. </summary>
        public long? MinimumMemoryInMB { get; set; }
        /// <summary> Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000. </summary>
        public int? TargetMemoryBuffer { get; set; }
    }
}
