// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Hci.Vm;

namespace Azure.ResourceManager.Hci.Vm.Mocking
{
    /// <summary> A class to add extension methods to <see cref="ArmClient"/>. </summary>
    public partial class MockableHciVmArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of MockableHciVmArmClient for mocking. </summary>
        protected MockableHciVmArmClient()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MockableHciVmArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableHciVmArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        /// <summary> Gets an object representing a <see cref="HciVmGalleryImageResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmGalleryImageResource"/> object. </returns>
        public virtual HciVmGalleryImageResource GetHciVmGalleryImageResource(ResourceIdentifier id)
        {
            HciVmGalleryImageResource.ValidateResourceId(id);
            return new HciVmGalleryImageResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmLogicalNetworkResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmLogicalNetworkResource"/> object. </returns>
        public virtual HciVmLogicalNetworkResource GetHciVmLogicalNetworkResource(ResourceIdentifier id)
        {
            HciVmLogicalNetworkResource.ValidateResourceId(id);
            return new HciVmLogicalNetworkResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmMarketplaceGalleryImageResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmMarketplaceGalleryImageResource"/> object. </returns>
        public virtual HciVmMarketplaceGalleryImageResource GetHciVmMarketplaceGalleryImageResource(ResourceIdentifier id)
        {
            HciVmMarketplaceGalleryImageResource.ValidateResourceId(id);
            return new HciVmMarketplaceGalleryImageResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmNetworkInterfaceResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmNetworkInterfaceResource"/> object. </returns>
        public virtual HciVmNetworkInterfaceResource GetHciVmNetworkInterfaceResource(ResourceIdentifier id)
        {
            HciVmNetworkInterfaceResource.ValidateResourceId(id);
            return new HciVmNetworkInterfaceResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmNetworkSecurityGroupResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmNetworkSecurityGroupResource"/> object. </returns>
        public virtual HciVmNetworkSecurityGroupResource GetHciVmNetworkSecurityGroupResource(ResourceIdentifier id)
        {
            HciVmNetworkSecurityGroupResource.ValidateResourceId(id);
            return new HciVmNetworkSecurityGroupResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmSecurityRuleResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmSecurityRuleResource"/> object. </returns>
        public virtual HciVmSecurityRuleResource GetHciVmSecurityRuleResource(ResourceIdentifier id)
        {
            HciVmSecurityRuleResource.ValidateResourceId(id);
            return new HciVmSecurityRuleResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmStorageContainerResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmStorageContainerResource"/> object. </returns>
        public virtual HciVmStorageContainerResource GetHciVmStorageContainerResource(ResourceIdentifier id)
        {
            HciVmStorageContainerResource.ValidateResourceId(id);
            return new HciVmStorageContainerResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmVirtualHardDiskResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmVirtualHardDiskResource"/> object. </returns>
        public virtual HciVmVirtualHardDiskResource GetHciVmVirtualHardDiskResource(ResourceIdentifier id)
        {
            HciVmVirtualHardDiskResource.ValidateResourceId(id);
            return new HciVmVirtualHardDiskResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmInstanceResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmInstanceResource"/> object. </returns>
        public virtual HciVmInstanceResource GetHciVmInstanceResource(ResourceIdentifier id)
        {
            HciVmInstanceResource.ValidateResourceId(id);
            return new HciVmInstanceResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmInstanceResource"/> along with the instance operations that can be performed on it in the ArmClient. </summary>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <returns> Returns a <see cref="HciVmInstanceResource"/> object. </returns>
        public virtual HciVmInstanceResource GetHciVmInstance(ResourceIdentifier scope)
        {
            return new HciVmInstanceResource(Client, scope.AppendProviderResource("Microsoft.AzureStackHCI", "virtualMachineInstances", "default"));
        }

        /// <summary> Gets an object representing a <see cref="HciVmHybridIdentityMetadataResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmHybridIdentityMetadataResource"/> object. </returns>
        public virtual HciVmHybridIdentityMetadataResource GetHciVmHybridIdentityMetadataResource(ResourceIdentifier id)
        {
            HciVmHybridIdentityMetadataResource.ValidateResourceId(id);
            return new HciVmHybridIdentityMetadataResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmHybridIdentityMetadataResource"/> along with the instance operations that can be performed on it in the ArmClient. </summary>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <returns> Returns a <see cref="HciVmHybridIdentityMetadataResource"/> object. </returns>
        public virtual HciVmHybridIdentityMetadataResource GetHciVmHybridIdentityMetadata(ResourceIdentifier scope)
        {
            return new HciVmHybridIdentityMetadataResource(Client, scope.AppendProviderResource("Microsoft.AzureStackHCI", "virtualMachineInstances", "default"));
        }

        /// <summary> Gets an object representing a <see cref="HciVmAttestationStatusResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmAttestationStatusResource"/> object. </returns>
        public virtual HciVmAttestationStatusResource GetHciVmAttestationStatusResource(ResourceIdentifier id)
        {
            HciVmAttestationStatusResource.ValidateResourceId(id);
            return new HciVmAttestationStatusResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmAttestationStatusResource"/> along with the instance operations that can be performed on it in the ArmClient. </summary>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <returns> Returns a <see cref="HciVmAttestationStatusResource"/> object. </returns>
        public virtual HciVmAttestationStatusResource GetHciVmAttestationStatus(ResourceIdentifier scope)
        {
            return new HciVmAttestationStatusResource(Client, scope.AppendProviderResource("Microsoft.AzureStackHCI", "virtualMachineInstances", "default"));
        }

        /// <summary> Gets an object representing a <see cref="HciVmGuestAgentResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HciVmGuestAgentResource"/> object. </returns>
        public virtual HciVmGuestAgentResource GetHciVmGuestAgentResource(ResourceIdentifier id)
        {
            HciVmGuestAgentResource.ValidateResourceId(id);
            return new HciVmGuestAgentResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="HciVmGuestAgentResource"/> along with the instance operations that can be performed on it in the ArmClient. </summary>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <returns> Returns a <see cref="HciVmGuestAgentResource"/> object. </returns>
        public virtual HciVmGuestAgentResource GetHciVmGuestAgent(ResourceIdentifier scope)
        {
            return new HciVmGuestAgentResource(Client, scope.AppendProviderResource("Microsoft.AzureStackHCI", "virtualMachineInstances", "default"));
        }
    }
}
