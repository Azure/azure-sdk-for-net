// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using Autorest.CSharp.Core;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.ResourceManager.Hci.Vm.Mocking
{
    /// <summary> A class to add extension methods to SubscriptionResource. </summary>
    public partial class MockableHciVmSubscriptionResource : ArmResource
    {
        private ClientDiagnostics _hciVmGalleryImageGalleryImagesClientDiagnostics;
        private GalleryImagesRestOperations _hciVmGalleryImageGalleryImagesRestClient;
        private ClientDiagnostics _hciVmLogicalNetworkLogicalNetworksClientDiagnostics;
        private LogicalNetworksRestOperations _hciVmLogicalNetworkLogicalNetworksRestClient;
        private ClientDiagnostics _hciVmMarketplaceGalleryImageMarketplaceGalleryImagesClientDiagnostics;
        private MarketplaceGalleryImagesRestOperations _hciVmMarketplaceGalleryImageMarketplaceGalleryImagesRestClient;
        private ClientDiagnostics _hciVmNetworkInterfaceNetworkInterfacesClientDiagnostics;
        private NetworkInterfacesRestOperations _hciVmNetworkInterfaceNetworkInterfacesRestClient;
        private ClientDiagnostics _hciVmNetworkSecurityGroupNetworkSecurityGroupsClientDiagnostics;
        private NetworkSecurityGroupsRestOperations _hciVmNetworkSecurityGroupNetworkSecurityGroupsRestClient;
        private ClientDiagnostics _hciVmStorageContainerStorageContainersClientDiagnostics;
        private StorageContainersRestOperations _hciVmStorageContainerStorageContainersRestClient;
        private ClientDiagnostics _hciVmVirtualHardDiskVirtualHardDisksClientDiagnostics;
        private VirtualHardDisksRestOperations _hciVmVirtualHardDiskVirtualHardDisksRestClient;

        /// <summary> Initializes a new instance of the <see cref="MockableHciVmSubscriptionResource"/> class for mocking. </summary>
        protected MockableHciVmSubscriptionResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableHciVmSubscriptionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableHciVmSubscriptionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics HciVmGalleryImageGalleryImagesClientDiagnostics => _hciVmGalleryImageGalleryImagesClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hci.Vm", HciVmGalleryImageResource.ResourceType.Namespace, Diagnostics);
        private GalleryImagesRestOperations HciVmGalleryImageGalleryImagesRestClient => _hciVmGalleryImageGalleryImagesRestClient ??= new GalleryImagesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(HciVmGalleryImageResource.ResourceType));
        private ClientDiagnostics HciVmLogicalNetworkLogicalNetworksClientDiagnostics => _hciVmLogicalNetworkLogicalNetworksClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hci.Vm", HciVmLogicalNetworkResource.ResourceType.Namespace, Diagnostics);
        private LogicalNetworksRestOperations HciVmLogicalNetworkLogicalNetworksRestClient => _hciVmLogicalNetworkLogicalNetworksRestClient ??= new LogicalNetworksRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(HciVmLogicalNetworkResource.ResourceType));
        private ClientDiagnostics HciVmMarketplaceGalleryImageMarketplaceGalleryImagesClientDiagnostics => _hciVmMarketplaceGalleryImageMarketplaceGalleryImagesClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hci.Vm", HciVmMarketplaceGalleryImageResource.ResourceType.Namespace, Diagnostics);
        private MarketplaceGalleryImagesRestOperations HciVmMarketplaceGalleryImageMarketplaceGalleryImagesRestClient => _hciVmMarketplaceGalleryImageMarketplaceGalleryImagesRestClient ??= new MarketplaceGalleryImagesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(HciVmMarketplaceGalleryImageResource.ResourceType));
        private ClientDiagnostics HciVmNetworkInterfaceNetworkInterfacesClientDiagnostics => _hciVmNetworkInterfaceNetworkInterfacesClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hci.Vm", HciVmNetworkInterfaceResource.ResourceType.Namespace, Diagnostics);
        private NetworkInterfacesRestOperations HciVmNetworkInterfaceNetworkInterfacesRestClient => _hciVmNetworkInterfaceNetworkInterfacesRestClient ??= new NetworkInterfacesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(HciVmNetworkInterfaceResource.ResourceType));
        private ClientDiagnostics HciVmNetworkSecurityGroupNetworkSecurityGroupsClientDiagnostics => _hciVmNetworkSecurityGroupNetworkSecurityGroupsClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hci.Vm", HciVmNetworkSecurityGroupResource.ResourceType.Namespace, Diagnostics);
        private NetworkSecurityGroupsRestOperations HciVmNetworkSecurityGroupNetworkSecurityGroupsRestClient => _hciVmNetworkSecurityGroupNetworkSecurityGroupsRestClient ??= new NetworkSecurityGroupsRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(HciVmNetworkSecurityGroupResource.ResourceType));
        private ClientDiagnostics HciVmStorageContainerStorageContainersClientDiagnostics => _hciVmStorageContainerStorageContainersClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hci.Vm", HciVmStorageContainerResource.ResourceType.Namespace, Diagnostics);
        private StorageContainersRestOperations HciVmStorageContainerStorageContainersRestClient => _hciVmStorageContainerStorageContainersRestClient ??= new StorageContainersRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(HciVmStorageContainerResource.ResourceType));
        private ClientDiagnostics HciVmVirtualHardDiskVirtualHardDisksClientDiagnostics => _hciVmVirtualHardDiskVirtualHardDisksClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.Hci.Vm", HciVmVirtualHardDiskResource.ResourceType.Namespace, Diagnostics);
        private VirtualHardDisksRestOperations HciVmVirtualHardDiskVirtualHardDisksRestClient => _hciVmVirtualHardDiskVirtualHardDisksRestClient ??= new VirtualHardDisksRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(HciVmVirtualHardDiskResource.ResourceType));

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get the next page of gallery images.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/galleryImages</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>GalleryImage_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmGalleryImageResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HciVmGalleryImageResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HciVmGalleryImageResource> GetHciVmGalleryImagesAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmGalleryImageGalleryImagesRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmGalleryImageGalleryImagesRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new HciVmGalleryImageResource(Client, HciVmGalleryImageData.DeserializeHciVmGalleryImageData(e)), HciVmGalleryImageGalleryImagesClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmGalleryImages", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get the next page of gallery images.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/galleryImages</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>GalleryImage_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmGalleryImageResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HciVmGalleryImageResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HciVmGalleryImageResource> GetHciVmGalleryImages(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmGalleryImageGalleryImagesRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmGalleryImageGalleryImagesRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new HciVmGalleryImageResource(Client, HciVmGalleryImageData.DeserializeHciVmGalleryImageData(e)), HciVmGalleryImageGalleryImagesClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmGalleryImages", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the logical networks in the specified subscription. Use the nextLink property in the response to get the next page of logical networks.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/logicalNetworks</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LogicalNetwork_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmLogicalNetworkResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HciVmLogicalNetworkResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HciVmLogicalNetworkResource> GetHciVmLogicalNetworksAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmLogicalNetworkLogicalNetworksRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmLogicalNetworkLogicalNetworksRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new HciVmLogicalNetworkResource(Client, HciVmLogicalNetworkData.DeserializeHciVmLogicalNetworkData(e)), HciVmLogicalNetworkLogicalNetworksClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmLogicalNetworks", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the logical networks in the specified subscription. Use the nextLink property in the response to get the next page of logical networks.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/logicalNetworks</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LogicalNetwork_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmLogicalNetworkResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HciVmLogicalNetworkResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HciVmLogicalNetworkResource> GetHciVmLogicalNetworks(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmLogicalNetworkLogicalNetworksRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmLogicalNetworkLogicalNetworksRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new HciVmLogicalNetworkResource(Client, HciVmLogicalNetworkData.DeserializeHciVmLogicalNetworkData(e)), HciVmLogicalNetworkLogicalNetworksClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmLogicalNetworks", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the marketplace gallery images in the specified subscription. Use the nextLink property in the response to get the next page of marketplace gallery images.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MarketplaceGalleryImage_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmMarketplaceGalleryImageResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HciVmMarketplaceGalleryImageResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HciVmMarketplaceGalleryImageResource> GetHciVmMarketplaceGalleryImagesAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmMarketplaceGalleryImageMarketplaceGalleryImagesRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmMarketplaceGalleryImageMarketplaceGalleryImagesRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new HciVmMarketplaceGalleryImageResource(Client, HciVmMarketplaceGalleryImageData.DeserializeHciVmMarketplaceGalleryImageData(e)), HciVmMarketplaceGalleryImageMarketplaceGalleryImagesClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmMarketplaceGalleryImages", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the marketplace gallery images in the specified subscription. Use the nextLink property in the response to get the next page of marketplace gallery images.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MarketplaceGalleryImage_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmMarketplaceGalleryImageResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HciVmMarketplaceGalleryImageResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HciVmMarketplaceGalleryImageResource> GetHciVmMarketplaceGalleryImages(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmMarketplaceGalleryImageMarketplaceGalleryImagesRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmMarketplaceGalleryImageMarketplaceGalleryImagesRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new HciVmMarketplaceGalleryImageResource(Client, HciVmMarketplaceGalleryImageData.DeserializeHciVmMarketplaceGalleryImageData(e)), HciVmMarketplaceGalleryImageMarketplaceGalleryImagesClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmMarketplaceGalleryImages", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the network interfaces in the specified subscription. Use the nextLink property in the response to get the next page of network interfaces.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/networkInterfaces</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NetworkInterface_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmNetworkInterfaceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HciVmNetworkInterfaceResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HciVmNetworkInterfaceResource> GetHciVmNetworkInterfacesAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmNetworkInterfaceNetworkInterfacesRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmNetworkInterfaceNetworkInterfacesRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new HciVmNetworkInterfaceResource(Client, HciVmNetworkInterfaceData.DeserializeHciVmNetworkInterfaceData(e)), HciVmNetworkInterfaceNetworkInterfacesClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmNetworkInterfaces", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the network interfaces in the specified subscription. Use the nextLink property in the response to get the next page of network interfaces.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/networkInterfaces</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NetworkInterface_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmNetworkInterfaceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HciVmNetworkInterfaceResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HciVmNetworkInterfaceResource> GetHciVmNetworkInterfaces(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmNetworkInterfaceNetworkInterfacesRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmNetworkInterfaceNetworkInterfacesRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new HciVmNetworkInterfaceResource(Client, HciVmNetworkInterfaceData.DeserializeHciVmNetworkInterfaceData(e)), HciVmNetworkInterfaceNetworkInterfacesClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmNetworkInterfaces", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Gets all network security groups in a subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/networkSecurityGroups</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NetworkSecurityGroup_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmNetworkSecurityGroupResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HciVmNetworkSecurityGroupResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HciVmNetworkSecurityGroupResource> GetHciVmNetworkSecurityGroupsAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmNetworkSecurityGroupNetworkSecurityGroupsRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmNetworkSecurityGroupNetworkSecurityGroupsRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new HciVmNetworkSecurityGroupResource(Client, HciVmNetworkSecurityGroupData.DeserializeHciVmNetworkSecurityGroupData(e)), HciVmNetworkSecurityGroupNetworkSecurityGroupsClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmNetworkSecurityGroups", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Gets all network security groups in a subscription.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/networkSecurityGroups</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NetworkSecurityGroup_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmNetworkSecurityGroupResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HciVmNetworkSecurityGroupResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HciVmNetworkSecurityGroupResource> GetHciVmNetworkSecurityGroups(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmNetworkSecurityGroupNetworkSecurityGroupsRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmNetworkSecurityGroupNetworkSecurityGroupsRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new HciVmNetworkSecurityGroupResource(Client, HciVmNetworkSecurityGroupData.DeserializeHciVmNetworkSecurityGroupData(e)), HciVmNetworkSecurityGroupNetworkSecurityGroupsClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmNetworkSecurityGroups", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the storage containers in the specified subscription. Use the nextLink property in the response to get the next page of storage containers.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/storageContainers</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>StorageContainer_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmStorageContainerResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HciVmStorageContainerResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HciVmStorageContainerResource> GetHciVmStorageContainersAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmStorageContainerStorageContainersRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmStorageContainerStorageContainersRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new HciVmStorageContainerResource(Client, HciVmStorageContainerData.DeserializeHciVmStorageContainerData(e)), HciVmStorageContainerStorageContainersClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmStorageContainers", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the storage containers in the specified subscription. Use the nextLink property in the response to get the next page of storage containers.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/storageContainers</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>StorageContainer_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmStorageContainerResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HciVmStorageContainerResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HciVmStorageContainerResource> GetHciVmStorageContainers(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmStorageContainerStorageContainersRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmStorageContainerStorageContainersRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new HciVmStorageContainerResource(Client, HciVmStorageContainerData.DeserializeHciVmStorageContainerData(e)), HciVmStorageContainerStorageContainersClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmStorageContainers", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the virtual hard disks in the specified subscription. Use the nextLink property in the response to get the next page of virtual hard disks.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/virtualHardDisks</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>VirtualHardDisk_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmVirtualHardDiskResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="HciVmVirtualHardDiskResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<HciVmVirtualHardDiskResource> GetHciVmVirtualHardDisksAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmVirtualHardDiskVirtualHardDisksRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmVirtualHardDiskVirtualHardDisksRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new HciVmVirtualHardDiskResource(Client, HciVmVirtualHardDiskData.DeserializeHciVmVirtualHardDiskData(e)), HciVmVirtualHardDiskVirtualHardDisksClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmVirtualHardDisks", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// Lists all of the virtual hard disks in the specified subscription. Use the nextLink property in the response to get the next page of virtual hard disks.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/virtualHardDisks</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>VirtualHardDisk_ListAll</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmVirtualHardDiskResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="HciVmVirtualHardDiskResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<HciVmVirtualHardDiskResource> GetHciVmVirtualHardDisks(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => HciVmVirtualHardDiskVirtualHardDisksRestClient.CreateListAllRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => HciVmVirtualHardDiskVirtualHardDisksRestClient.CreateListAllNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new HciVmVirtualHardDiskResource(Client, HciVmVirtualHardDiskData.DeserializeHciVmVirtualHardDiskData(e)), HciVmVirtualHardDiskVirtualHardDisksClientDiagnostics, Pipeline, "MockableHciVmSubscriptionResource.GetHciVmVirtualHardDisks", "value", "nextLink", cancellationToken);
        }
    }
}
