// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.Hci.Vm.Mocking
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    public partial class MockableHciVmResourceGroupResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableHciVmResourceGroupResource"/> class for mocking. </summary>
        protected MockableHciVmResourceGroupResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableHciVmResourceGroupResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableHciVmResourceGroupResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of HciVmGalleryImageResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of HciVmGalleryImageResources and their operations over a HciVmGalleryImageResource. </returns>
        public virtual HciVmGalleryImageCollection GetHciVmGalleryImages()
        {
            return GetCachedClient(client => new HciVmGalleryImageCollection(client, Id));
        }

        /// <summary>
        /// Gets a gallery image
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/galleryImages/{galleryImageName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>GalleryImage_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmGalleryImageResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="galleryImageName"> Name of the gallery image. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="galleryImageName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="galleryImageName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<HciVmGalleryImageResource>> GetHciVmGalleryImageAsync(string galleryImageName, CancellationToken cancellationToken = default)
        {
            return await GetHciVmGalleryImages().GetAsync(galleryImageName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a gallery image
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/galleryImages/{galleryImageName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>GalleryImage_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmGalleryImageResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="galleryImageName"> Name of the gallery image. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="galleryImageName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="galleryImageName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<HciVmGalleryImageResource> GetHciVmGalleryImage(string galleryImageName, CancellationToken cancellationToken = default)
        {
            return GetHciVmGalleryImages().Get(galleryImageName, cancellationToken);
        }

        /// <summary> Gets a collection of HciVmLogicalNetworkResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of HciVmLogicalNetworkResources and their operations over a HciVmLogicalNetworkResource. </returns>
        public virtual HciVmLogicalNetworkCollection GetHciVmLogicalNetworks()
        {
            return GetCachedClient(client => new HciVmLogicalNetworkCollection(client, Id));
        }

        /// <summary>
        /// The operation to get a logical network.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LogicalNetwork_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmLogicalNetworkResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="logicalNetworkName"> Name of the logical network. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="logicalNetworkName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="logicalNetworkName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<HciVmLogicalNetworkResource>> GetHciVmLogicalNetworkAsync(string logicalNetworkName, CancellationToken cancellationToken = default)
        {
            return await GetHciVmLogicalNetworks().GetAsync(logicalNetworkName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// The operation to get a logical network.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>LogicalNetwork_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmLogicalNetworkResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="logicalNetworkName"> Name of the logical network. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="logicalNetworkName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="logicalNetworkName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<HciVmLogicalNetworkResource> GetHciVmLogicalNetwork(string logicalNetworkName, CancellationToken cancellationToken = default)
        {
            return GetHciVmLogicalNetworks().Get(logicalNetworkName, cancellationToken);
        }

        /// <summary> Gets a collection of HciVmMarketplaceGalleryImageResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of HciVmMarketplaceGalleryImageResources and their operations over a HciVmMarketplaceGalleryImageResource. </returns>
        public virtual HciVmMarketplaceGalleryImageCollection GetHciVmMarketplaceGalleryImages()
        {
            return GetCachedClient(client => new HciVmMarketplaceGalleryImageCollection(client, Id));
        }

        /// <summary>
        /// Gets a marketplace gallery image
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages/{marketplaceGalleryImageName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MarketplaceGalleryImage_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmMarketplaceGalleryImageResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="marketplaceGalleryImageName"> Name of the marketplace gallery image. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="marketplaceGalleryImageName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="marketplaceGalleryImageName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<HciVmMarketplaceGalleryImageResource>> GetHciVmMarketplaceGalleryImageAsync(string marketplaceGalleryImageName, CancellationToken cancellationToken = default)
        {
            return await GetHciVmMarketplaceGalleryImages().GetAsync(marketplaceGalleryImageName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a marketplace gallery image
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages/{marketplaceGalleryImageName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MarketplaceGalleryImage_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmMarketplaceGalleryImageResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="marketplaceGalleryImageName"> Name of the marketplace gallery image. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="marketplaceGalleryImageName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="marketplaceGalleryImageName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<HciVmMarketplaceGalleryImageResource> GetHciVmMarketplaceGalleryImage(string marketplaceGalleryImageName, CancellationToken cancellationToken = default)
        {
            return GetHciVmMarketplaceGalleryImages().Get(marketplaceGalleryImageName, cancellationToken);
        }

        /// <summary> Gets a collection of HciVmNetworkInterfaceResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of HciVmNetworkInterfaceResources and their operations over a HciVmNetworkInterfaceResource. </returns>
        public virtual HciVmNetworkInterfaceCollection GetHciVmNetworkInterfaces()
        {
            return GetCachedClient(client => new HciVmNetworkInterfaceCollection(client, Id));
        }

        /// <summary>
        /// Gets a network interface
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/networkInterfaces/{networkInterfaceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NetworkInterface_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmNetworkInterfaceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="networkInterfaceName"> Name of the network interface. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkInterfaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="networkInterfaceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<HciVmNetworkInterfaceResource>> GetHciVmNetworkInterfaceAsync(string networkInterfaceName, CancellationToken cancellationToken = default)
        {
            return await GetHciVmNetworkInterfaces().GetAsync(networkInterfaceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a network interface
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/networkInterfaces/{networkInterfaceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NetworkInterface_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmNetworkInterfaceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="networkInterfaceName"> Name of the network interface. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkInterfaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="networkInterfaceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<HciVmNetworkInterfaceResource> GetHciVmNetworkInterface(string networkInterfaceName, CancellationToken cancellationToken = default)
        {
            return GetHciVmNetworkInterfaces().Get(networkInterfaceName, cancellationToken);
        }

        /// <summary> Gets a collection of HciVmNetworkSecurityGroupResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of HciVmNetworkSecurityGroupResources and their operations over a HciVmNetworkSecurityGroupResource. </returns>
        public virtual HciVmNetworkSecurityGroupCollection GetHciVmNetworkSecurityGroups()
        {
            return GetCachedClient(client => new HciVmNetworkSecurityGroupCollection(client, Id));
        }

        /// <summary>
        /// Gets the specified network security group.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/networkSecurityGroups/{networkSecurityGroupName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NetworkSecurityGroup_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmNetworkSecurityGroupResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="networkSecurityGroupName"> Name of the network security group. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkSecurityGroupName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="networkSecurityGroupName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<HciVmNetworkSecurityGroupResource>> GetHciVmNetworkSecurityGroupAsync(string networkSecurityGroupName, CancellationToken cancellationToken = default)
        {
            return await GetHciVmNetworkSecurityGroups().GetAsync(networkSecurityGroupName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the specified network security group.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/networkSecurityGroups/{networkSecurityGroupName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>NetworkSecurityGroup_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmNetworkSecurityGroupResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="networkSecurityGroupName"> Name of the network security group. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkSecurityGroupName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="networkSecurityGroupName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<HciVmNetworkSecurityGroupResource> GetHciVmNetworkSecurityGroup(string networkSecurityGroupName, CancellationToken cancellationToken = default)
        {
            return GetHciVmNetworkSecurityGroups().Get(networkSecurityGroupName, cancellationToken);
        }

        /// <summary> Gets a collection of HciVmStorageContainerResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of HciVmStorageContainerResources and their operations over a HciVmStorageContainerResource. </returns>
        public virtual HciVmStorageContainerCollection GetHciVmStorageContainers()
        {
            return GetCachedClient(client => new HciVmStorageContainerCollection(client, Id));
        }

        /// <summary>
        /// Gets a storage container
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/storageContainers/{storageContainerName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>StorageContainer_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmStorageContainerResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="storageContainerName"> Name of the storage container. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="storageContainerName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="storageContainerName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<HciVmStorageContainerResource>> GetHciVmStorageContainerAsync(string storageContainerName, CancellationToken cancellationToken = default)
        {
            return await GetHciVmStorageContainers().GetAsync(storageContainerName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a storage container
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/storageContainers/{storageContainerName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>StorageContainer_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmStorageContainerResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="storageContainerName"> Name of the storage container. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="storageContainerName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="storageContainerName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<HciVmStorageContainerResource> GetHciVmStorageContainer(string storageContainerName, CancellationToken cancellationToken = default)
        {
            return GetHciVmStorageContainers().Get(storageContainerName, cancellationToken);
        }

        /// <summary> Gets a collection of HciVmVirtualHardDiskResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of HciVmVirtualHardDiskResources and their operations over a HciVmVirtualHardDiskResource. </returns>
        public virtual HciVmVirtualHardDiskCollection GetHciVmVirtualHardDisks()
        {
            return GetCachedClient(client => new HciVmVirtualHardDiskCollection(client, Id));
        }

        /// <summary>
        /// Gets a virtual hard disk
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualHardDisks/{virtualHardDiskName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>VirtualHardDisk_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmVirtualHardDiskResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="virtualHardDiskName"> Name of the virtual hard disk. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="virtualHardDiskName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="virtualHardDiskName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<HciVmVirtualHardDiskResource>> GetHciVmVirtualHardDiskAsync(string virtualHardDiskName, CancellationToken cancellationToken = default)
        {
            return await GetHciVmVirtualHardDisks().GetAsync(virtualHardDiskName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a virtual hard disk
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualHardDisks/{virtualHardDiskName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>VirtualHardDisk_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="HciVmVirtualHardDiskResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="virtualHardDiskName"> Name of the virtual hard disk. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="virtualHardDiskName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="virtualHardDiskName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<HciVmVirtualHardDiskResource> GetHciVmVirtualHardDisk(string virtualHardDiskName, CancellationToken cancellationToken = default)
        {
            return GetHciVmVirtualHardDisks().Get(virtualHardDiskName, cancellationToken);
        }
    }
}
