// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.MixedReality.RemoteRendering.Models
{
    /// <summary> The CreatedByType. </summary>
    public readonly partial struct CreatedByType : IEquatable<CreatedByType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="CreatedByType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CreatedByType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotStartedValue = "NotStarted";
        private const string RunningValue = "Running";
        private const string CancelledValue = "Cancelled";
        private const string FailedValue = "Failed";
        private const string SucceededValue = "Succeeded";

        /// <summary> NotStarted. </summary>
        public static CreatedByType NotStarted { get; } = new CreatedByType(NotStartedValue);
        /// <summary> Running. </summary>
        public static CreatedByType Running { get; } = new CreatedByType(RunningValue);
        /// <summary> Cancelled. </summary>
        public static CreatedByType Cancelled { get; } = new CreatedByType(CancelledValue);
        /// <summary> Failed. </summary>
        public static CreatedByType Failed { get; } = new CreatedByType(FailedValue);
        /// <summary> Succeeded. </summary>
        public static CreatedByType Succeeded { get; } = new CreatedByType(SucceededValue);
        /// <summary> Determines if two <see cref="CreatedByType"/> values are the same. </summary>
        public static bool operator ==(CreatedByType left, CreatedByType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CreatedByType"/> values are not the same. </summary>
        public static bool operator !=(CreatedByType left, CreatedByType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CreatedByType"/>. </summary>
        public static implicit operator CreatedByType(string value) => new CreatedByType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CreatedByType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CreatedByType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
