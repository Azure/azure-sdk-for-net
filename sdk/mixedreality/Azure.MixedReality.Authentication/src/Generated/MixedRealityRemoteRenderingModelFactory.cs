// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.MixedReality.Authentication.Models
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class MixedRealityRemoteRenderingModelFactory
    {
        /// <summary> Initializes a new instance of Conversion. </summary>
        /// <param name="id"> The ID of the conversion supplied when the conversion was created. </param>
        /// <param name="settings"> Conversion settings describe the origin of input files and destination of output files. </param>
        /// <param name="output"> Information about the output of a successful conversion. Only present when the status of the conversion is &apos;Succeeded&apos;. </param>
        /// <param name="error"> The error object containing details about the conversion failure. </param>
        /// <param name="status"> The status of the conversion. Terminal states are &apos;Cancelled&apos;, &apos;Failed&apos;, and &apos;Succeeded&apos;. </param>
        /// <param name="creationTime"> The time when the conversion was created. Date and time in ISO 8601 format. </param>
        /// <returns> A new <see cref="Models.Conversion"/> instance for mocking. </returns>
        public static Conversion Conversion(string id = null, ConversionSettings settings = null, ConversionOutput output = null, Error error = null, ConversionStatus status = default, DateTimeOffset creationTime = default)
        {
            return new Conversion(id, settings, output, error, status, creationTime);
        }

        /// <summary> Initializes a new instance of ConversionOutput. </summary>
        /// <param name="outputAssetUri"> URI of the asset generated by the conversion process. </param>
        /// <returns> A new <see cref="Models.ConversionOutput"/> instance for mocking. </returns>
        public static ConversionOutput ConversionOutput(string outputAssetUri = null)
        {
            return new ConversionOutput(outputAssetUri);
        }

        /// <summary> Initializes a new instance of Error. </summary>
        /// <param name="code"> Error code. </param>
        /// <param name="message"> A human-readable representation of the error. </param>
        /// <param name="details"> An array of details about specific errors that led to this reported error. </param>
        /// <param name="target"> The target of the particular error (e.g., the name of the property in error). </param>
        /// <param name="innerError"> An object containing more specific information than the current object about the error. </param>
        /// <returns> A new <see cref="Models.Error"/> instance for mocking. </returns>
        public static Error Error(string code = null, string message = null, IEnumerable<Error> details = null, string target = null, Error innerError = null)
        {
            details ??= new List<Error>();

            return new Error(code, message, details?.ToList(), target, innerError);
        }

        /// <summary> Initializes a new instance of SessionProperties. </summary>
        /// <param name="id"> The ID of the session supplied when the session was created. </param>
        /// <param name="arrInspectorPort"> The TCP port at which the Azure Remote Rendering Inspector tool is hosted. </param>
        /// <param name="handshakePort"> The TCP port used for the handshake when establishing a connection. </param>
        /// <param name="elapsedTimeMinutes"> Amount of time in minutes the session is or was in the &apos;Ready&apos; state. Time is rounded down to a full minute. </param>
        /// <param name="hostname"> The hostname under which the rendering session is reachable. </param>
        /// <param name="maxLeaseTimeMinutes"> The time in minutes the session will run after reaching the &apos;Ready&apos; state. </param>
        /// <param name="size"> The size of the server used for the rendering session. The size impacts the number of polygons the server can render. Refer to https://docs.microsoft.com/azure/remote-rendering/reference/vm-sizes for details. </param>
        /// <param name="status"> The status of the rendering session. Terminal states are &apos;Error&apos;, &apos;Expired&apos;, and &apos;Stopped&apos;. </param>
        /// <param name="teraflops"> The computational power of the rendering session GPU measured in teraflops. </param>
        /// <param name="error"> The error object containing details about the rendering session startup failure. </param>
        /// <param name="creationTime"> The time when the rendering session was created. Date and time in ISO 8601 format. </param>
        /// <returns> A new <see cref="Models.SessionProperties"/> instance for mocking. </returns>
        public static SessionProperties SessionProperties(string id = null, int? arrInspectorPort = null, int? handshakePort = null, int? elapsedTimeMinutes = null, string hostname = null, int? maxLeaseTimeMinutes = null, SessionSize size = default, SessionStatus status = default, float? teraflops = null, Error error = null, DateTimeOffset? creationTime = null)
        {
            return new SessionProperties(id, arrInspectorPort, handshakePort, elapsedTimeMinutes, hostname, maxLeaseTimeMinutes, size, status, teraflops, error, creationTime);
        }
    }
}
