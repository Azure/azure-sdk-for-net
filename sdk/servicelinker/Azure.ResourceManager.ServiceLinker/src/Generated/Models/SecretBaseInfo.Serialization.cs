// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceLinker.Models
{
    public partial class SecretBaseInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("secretType");
            writer.WriteStringValue(SecretType.ToString());
            writer.WriteEndObject();
        }

        internal static SecretBaseInfo DeserializeSecretBaseInfo(JsonElement element)
        {
            if (element.TryGetProperty("secretType", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "keyVaultSecretReference": return KeyVaultSecretReferenceSecretInfo.DeserializeKeyVaultSecretReferenceSecretInfo(element);
                    case "keyVaultSecretUri": return KeyVaultSecretUriSecretInfo.DeserializeKeyVaultSecretUriSecretInfo(element);
                    case "rawValue": return RawValueSecretInfo.DeserializeRawValueSecretInfo(element);
                }
            }
            LinkerSecretType secretType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("secretType"))
                {
                    secretType = new LinkerSecretType(property.Value.GetString());
                    continue;
                }
            }
            return new UnknownSecretBaseInfo(secretType);
        }
    }
}
