// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceLinker.Models
{
    public partial class AzureResourceInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id"u8);
                writer.WriteStringValue(Id);
            }
            if (Optional.IsDefined(ResourceProperties))
            {
                if (ResourceProperties != null)
                {
                    writer.WritePropertyName("resourceProperties"u8);
                    writer.WriteObjectValue(ResourceProperties);
                }
                else
                {
                    writer.WriteNull("resourceProperties");
                }
            }
            writer.WritePropertyName("type"u8);
            writer.WriteStringValue(TargetServiceType.ToString());
            writer.WriteEndObject();
        }

        internal static AzureResourceInfo DeserializeAzureResourceInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ResourceIdentifier> id = default;
            Optional<AzureResourceBaseProperties> resourceProperties = default;
            TargetServiceType type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resourceProperties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        resourceProperties = null;
                        continue;
                    }
                    resourceProperties = AzureResourceBaseProperties.DeserializeAzureResourceBaseProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new TargetServiceType(property.Value.GetString());
                    continue;
                }
            }
            return new AzureResourceInfo(type, id.Value, resourceProperties.Value);
        }
    }
}
