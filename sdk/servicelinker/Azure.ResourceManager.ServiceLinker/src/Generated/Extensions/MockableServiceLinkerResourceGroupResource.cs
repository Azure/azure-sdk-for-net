// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.ServiceLinker.Mocking
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    public partial class MockableServiceLinkerResourceGroupResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableServiceLinkerResourceGroupResource"/> class for mocking. </summary>
        protected MockableServiceLinkerResourceGroupResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableServiceLinkerResourceGroupResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableServiceLinkerResourceGroupResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of LocationDryrunResources in the ResourceGroupResource. </summary>
        /// <param name="location"> The name of Azure region. </param>
        /// <returns> An object representing collection of LocationDryrunResources and their operations over a LocationDryrunResource. </returns>
        public virtual LocationDryrunCollection GetLocationDryruns(AzureLocation location)
        {
            return new LocationDryrunCollection(Client, Id, location);
        }

        /// <summary>
        /// get a dryrun job
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/dryruns/{dryrunName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Connector_GetDryrun</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-07-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LocationDryrunResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="location"> The name of Azure region. </param>
        /// <param name="dryrunName"> The name of the DryrunResource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dryrunName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="dryrunName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<LocationDryrunResource>> GetLocationDryrunAsync(AzureLocation location, string dryrunName, CancellationToken cancellationToken = default)
        {
            return await GetLocationDryruns(location).GetAsync(dryrunName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// get a dryrun job
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/dryruns/{dryrunName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Connector_GetDryrun</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-07-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LocationDryrunResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="location"> The name of Azure region. </param>
        /// <param name="dryrunName"> The name of the DryrunResource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dryrunName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="dryrunName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<LocationDryrunResource> GetLocationDryrun(AzureLocation location, string dryrunName, CancellationToken cancellationToken = default)
        {
            return GetLocationDryruns(location).Get(dryrunName, cancellationToken);
        }

        /// <summary> Gets a collection of LocationConnectorResources in the ResourceGroupResource. </summary>
        /// <param name="location"> The name of Azure region. </param>
        /// <returns> An object representing collection of LocationConnectorResources and their operations over a LocationConnectorResource. </returns>
        public virtual LocationConnectorCollection GetLocationConnectors(AzureLocation location)
        {
            return new LocationConnectorCollection(Client, Id, location);
        }

        /// <summary>
        /// Returns Connector resource for a given name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors/{connectorName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Connector_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-07-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LocationConnectorResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="location"> The name of Azure region. </param>
        /// <param name="connectorName"> The name of the LinkerResource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="connectorName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="connectorName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<LocationConnectorResource>> GetLocationConnectorAsync(AzureLocation location, string connectorName, CancellationToken cancellationToken = default)
        {
            return await GetLocationConnectors(location).GetAsync(connectorName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Returns Connector resource for a given name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors/{connectorName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Connector_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-07-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="LocationConnectorResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="location"> The name of Azure region. </param>
        /// <param name="connectorName"> The name of the LinkerResource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="connectorName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="connectorName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<LocationConnectorResource> GetLocationConnector(AzureLocation location, string connectorName, CancellationToken cancellationToken = default)
        {
            return GetLocationConnectors(location).Get(connectorName, cancellationToken);
        }
    }
}
