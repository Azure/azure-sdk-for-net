// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ServiceLinker.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ServiceLinker.Samples
{
    public partial class Sample_LocationConnectorResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_Connector()
        {
            // Generated from example definition: specification/servicelinker/resource-manager/Microsoft.ServiceLinker/preview/2024-07-01-preview/examples/Connectors.json
            // this example is just showing the usage of "Connector_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LocationConnectorResource created on azure
            // for more information of creating LocationConnectorResource, please refer to the document of LocationConnectorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "test-rg";
            AzureLocation location = new AzureLocation("westus");
            string connectorName = "connectorName";
            ResourceIdentifier locationConnectorResourceId = LocationConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, location, connectorName);
            LocationConnectorResource locationConnector = client.GetLocationConnectorResource(locationConnectorResourceId);

            // invoke the operation
            LocationConnectorResource result = await locationConnector.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LinkerResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteConnector()
        {
            // Generated from example definition: specification/servicelinker/resource-manager/Microsoft.ServiceLinker/preview/2024-07-01-preview/examples/DeleteConnector.json
            // this example is just showing the usage of "Connector_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LocationConnectorResource created on azure
            // for more information of creating LocationConnectorResource, please refer to the document of LocationConnectorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "test-rg";
            AzureLocation location = new AzureLocation("westus");
            string connectorName = "connectorName";
            ResourceIdentifier locationConnectorResourceId = LocationConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, location, connectorName);
            LocationConnectorResource locationConnector = client.GetLocationConnectorResource(locationConnectorResourceId);

            // invoke the operation
            await locationConnector.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_PatchConnector()
        {
            // Generated from example definition: specification/servicelinker/resource-manager/Microsoft.ServiceLinker/preview/2024-07-01-preview/examples/PatchConnector.json
            // this example is just showing the usage of "Connector_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LocationConnectorResource created on azure
            // for more information of creating LocationConnectorResource, please refer to the document of LocationConnectorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "test-rg";
            AzureLocation location = new AzureLocation("westus");
            string connectorName = "connectorName";
            ResourceIdentifier locationConnectorResourceId = LocationConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, location, connectorName);
            LocationConnectorResource locationConnector = client.GetLocationConnectorResource(locationConnectorResourceId);

            // invoke the operation
            LinkerResourcePatch patch = new LinkerResourcePatch
            {
                TargetService = new AzureResourceInfo
                {
                    Id = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.DocumentDb/databaseAccounts/test-acc/mongodbDatabases/test-db"),
                },
                AuthInfo = new ServicePrincipalSecretAuthInfo("name", Guid.Parse("id"), "secret"),
            };
            ArmOperation<LocationConnectorResource> lro = await locationConnector.UpdateAsync(WaitUntil.Completed, patch);
            LocationConnectorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LinkerResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GenerateConfigurations_GenerateConfiguration()
        {
            // Generated from example definition: specification/servicelinker/resource-manager/Microsoft.ServiceLinker/preview/2024-07-01-preview/examples/GenerateConfigurations.json
            // this example is just showing the usage of "Connector_GenerateConfigurations" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LocationConnectorResource created on azure
            // for more information of creating LocationConnectorResource, please refer to the document of LocationConnectorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "test-rg";
            AzureLocation location = new AzureLocation("westus");
            string connectorName = "connectorName";
            ResourceIdentifier locationConnectorResourceId = LocationConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, location, connectorName);
            LocationConnectorResource locationConnector = client.GetLocationConnectorResource(locationConnectorResourceId);

            // invoke the operation
            ConfigurationInfo info = new ConfigurationInfo
            {
                CustomizedKeys =
{
["ASL_DocumentDb_ConnectionString"] = "MyConnectionstring"
},
            };
            SourceConfigurationResult result = await locationConnector.GenerateConfigurationsAsync(info: info);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Validate_ValidateConnectorSuccess()
        {
            // Generated from example definition: specification/servicelinker/resource-manager/Microsoft.ServiceLinker/preview/2024-07-01-preview/examples/ValidateConnectorSuccess.json
            // this example is just showing the usage of "Connector_Validate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this LocationConnectorResource created on azure
            // for more information of creating LocationConnectorResource, please refer to the document of LocationConnectorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "test-rg";
            AzureLocation location = new AzureLocation("westus");
            string connectorName = "connectorName";
            ResourceIdentifier locationConnectorResourceId = LocationConnectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, location, connectorName);
            LocationConnectorResource locationConnector = client.GetLocationConnectorResource(locationConnectorResourceId);

            // invoke the operation
            ArmOperation<LinkerValidateOperationResult> lro = await locationConnector.ValidateAsync(WaitUntil.Completed);
            LinkerValidateOperationResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
