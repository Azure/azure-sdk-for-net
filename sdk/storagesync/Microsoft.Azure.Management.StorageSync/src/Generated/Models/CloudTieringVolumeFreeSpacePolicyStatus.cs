// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Status of the volume free space policy
    /// </summary>
    public partial class CloudTieringVolumeFreeSpacePolicyStatus
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CloudTieringVolumeFreeSpacePolicyStatus class.
        /// </summary>
        public CloudTieringVolumeFreeSpacePolicyStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CloudTieringVolumeFreeSpacePolicyStatus class.
        /// </summary>
        /// <param name="lastUpdatedTimestamp">Last updated timestamp</param>
        /// <param name="effectiveVolumeFreeSpacePolicy">In the case where
        /// multiple server endpoints are present in a volume, an effective
        /// free space policy is applied.</param>
        /// <param name="currentVolumeFreeSpacePercent">Current volume free
        /// space percentage.</param>
        public CloudTieringVolumeFreeSpacePolicyStatus(System.DateTime? lastUpdatedTimestamp = default(System.DateTime?), int? effectiveVolumeFreeSpacePolicy = default(int?), int? currentVolumeFreeSpacePercent = default(int?))
        {
            LastUpdatedTimestamp = lastUpdatedTimestamp;
            EffectiveVolumeFreeSpacePolicy = effectiveVolumeFreeSpacePolicy;
            CurrentVolumeFreeSpacePercent = currentVolumeFreeSpacePercent;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets last updated timestamp
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdatedTimestamp")]
        public System.DateTime? LastUpdatedTimestamp { get; private set; }

        /// <summary>
        /// Gets in the case where multiple server endpoints are present in a
        /// volume, an effective free space policy is applied.
        /// </summary>
        [JsonProperty(PropertyName = "effectiveVolumeFreeSpacePolicy")]
        public int? EffectiveVolumeFreeSpacePolicy { get; private set; }

        /// <summary>
        /// Gets current volume free space percentage.
        /// </summary>
        [JsonProperty(PropertyName = "currentVolumeFreeSpacePercent")]
        public int? CurrentVolumeFreeSpacePercent { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EffectiveVolumeFreeSpacePolicy > 100)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "EffectiveVolumeFreeSpacePolicy", 100);
            }
            if (EffectiveVolumeFreeSpacePolicy < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "EffectiveVolumeFreeSpacePolicy", 0);
            }
            if (CurrentVolumeFreeSpacePercent > 100)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "CurrentVolumeFreeSpacePercent", 100);
            }
            if (CurrentVolumeFreeSpacePercent < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "CurrentVolumeFreeSpacePercent", 0);
            }
        }
    }
}
