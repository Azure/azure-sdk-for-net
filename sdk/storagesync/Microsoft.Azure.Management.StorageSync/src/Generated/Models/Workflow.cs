// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Workflow resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Workflow : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the Workflow class.
        /// </summary>
        public Workflow()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Workflow class.
        /// </summary>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        /// <param name="lastStepName">last step name</param>
        /// <param name="status">workflow status. Possible values include:
        /// 'active', 'expired', 'succeeded', 'aborted', 'failed'</param>
        /// <param name="operation">operation direction. Possible values
        /// include: 'do', 'undo', 'cancel'</param>
        /// <param name="steps">workflow steps</param>
        /// <param name="lastOperationId">workflow last operation
        /// identifier.</param>
        public Workflow(string id = default(string), string name = default(string), string type = default(string), string lastStepName = default(string), string status = default(string), string operation = default(string), string steps = default(string), string lastOperationId = default(string))
            : base(id, name, type)
        {
            LastStepName = lastStepName;
            Status = status;
            Operation = operation;
            Steps = steps;
            LastOperationId = lastOperationId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets last step name
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastStepName")]
        public string LastStepName { get; set; }

        /// <summary>
        /// Gets or sets workflow status. Possible values include: 'active',
        /// 'expired', 'succeeded', 'aborted', 'failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets operation direction. Possible values include: 'do',
        /// 'undo', 'cancel'
        /// </summary>
        [JsonProperty(PropertyName = "properties.operation")]
        public string Operation { get; set; }

        /// <summary>
        /// Gets or sets workflow steps
        /// </summary>
        [JsonProperty(PropertyName = "properties.steps")]
        public string Steps { get; set; }

        /// <summary>
        /// Gets or sets workflow last operation identifier.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastOperationId")]
        public string LastOperationId { get; set; }

    }
}
