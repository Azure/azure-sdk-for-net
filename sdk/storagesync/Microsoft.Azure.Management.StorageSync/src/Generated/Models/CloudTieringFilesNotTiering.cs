// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorageSync.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Server endpoint cloud tiering status object.
    /// </summary>
    public partial class CloudTieringFilesNotTiering
    {
        /// <summary>
        /// Initializes a new instance of the CloudTieringFilesNotTiering
        /// class.
        /// </summary>
        public CloudTieringFilesNotTiering()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CloudTieringFilesNotTiering
        /// class.
        /// </summary>
        /// <param name="lastUpdatedTimestamp">Last updated timestamp</param>
        /// <param name="totalFileCount">Last cloud tiering result
        /// (HResult)</param>
        /// <param name="errors">Array of tiering errors</param>
        public CloudTieringFilesNotTiering(System.DateTime? lastUpdatedTimestamp = default(System.DateTime?), long? totalFileCount = default(long?), IList<FilesNotTieringError> errors = default(IList<FilesNotTieringError>))
        {
            LastUpdatedTimestamp = lastUpdatedTimestamp;
            TotalFileCount = totalFileCount;
            Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets last updated timestamp
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdatedTimestamp")]
        public System.DateTime? LastUpdatedTimestamp { get; private set; }

        /// <summary>
        /// Gets last cloud tiering result (HResult)
        /// </summary>
        [JsonProperty(PropertyName = "totalFileCount")]
        public long? TotalFileCount { get; private set; }

        /// <summary>
        /// Gets array of tiering errors
        /// </summary>
        [JsonProperty(PropertyName = "errors")]
        public IList<FilesNotTieringError> Errors { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TotalFileCount < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "TotalFileCount", 0);
            }
            if (Errors != null)
            {
                foreach (var element in Errors)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
