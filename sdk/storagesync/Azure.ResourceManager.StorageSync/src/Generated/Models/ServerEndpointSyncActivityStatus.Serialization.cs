// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.StorageSync.Models
{
    public partial class ServerEndpointSyncActivityStatus
    {
        internal static ServerEndpointSyncActivityStatus DeserializeServerEndpointSyncActivityStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<DateTimeOffset> timestamp = default;
            Core.Optional<long> perItemErrorCount = default;
            Core.Optional<long> appliedItemCount = default;
            Core.Optional<long> totalItemCount = default;
            Core.Optional<long> appliedBytes = default;
            Core.Optional<long> totalBytes = default;
            Core.Optional<ServerEndpointSyncMode> syncMode = default;
            Core.Optional<int> sessionMinutesRemaining = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("timestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    timestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("perItemErrorCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    perItemErrorCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("appliedItemCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    appliedItemCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("totalItemCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalItemCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("appliedBytes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    appliedBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("totalBytes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("syncMode"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    syncMode = new ServerEndpointSyncMode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sessionMinutesRemaining"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sessionMinutesRemaining = property.Value.GetInt32();
                    continue;
                }
            }
            return new ServerEndpointSyncActivityStatus(Core.Optional.ToNullable(timestamp), Core.Optional.ToNullable(perItemErrorCount), Core.Optional.ToNullable(appliedItemCount), Core.Optional.ToNullable(totalItemCount), Core.Optional.ToNullable(appliedBytes), Core.Optional.ToNullable(totalBytes), Core.Optional.ToNullable(syncMode), Core.Optional.ToNullable(sessionMinutesRemaining));
        }
    }
}
