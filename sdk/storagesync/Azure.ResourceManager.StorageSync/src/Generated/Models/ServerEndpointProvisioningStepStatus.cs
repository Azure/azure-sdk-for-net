// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.StorageSync.Models
{
    /// <summary> Server endpoint provisioning step status object. </summary>
    public partial class ServerEndpointProvisioningStepStatus
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ServerEndpointProvisioningStepStatus"/>. </summary>
        internal ServerEndpointProvisioningStepStatus()
        {
            AdditionalInformation = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="ServerEndpointProvisioningStepStatus"/>. </summary>
        /// <param name="name"> Name of the provisioning step. </param>
        /// <param name="status"> Status of the provisioning step. </param>
        /// <param name="startOn"> Start time of the provisioning step. </param>
        /// <param name="minutesLeft"> Estimated completion time of the provisioning step in minutes. </param>
        /// <param name="progressPercentage"> Estimated progress percentage. </param>
        /// <param name="endOn"> End time of the provisioning step. </param>
        /// <param name="errorCode"> Error code (HResult) for the provisioning step. </param>
        /// <param name="additionalInformation"> Additional information for the provisioning step. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ServerEndpointProvisioningStepStatus(string name, string status, DateTimeOffset? startOn, int? minutesLeft, int? progressPercentage, DateTimeOffset? endOn, int? errorCode, IReadOnlyDictionary<string, string> additionalInformation, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            Status = status;
            StartOn = startOn;
            MinutesLeft = minutesLeft;
            ProgressPercentage = progressPercentage;
            EndOn = endOn;
            ErrorCode = errorCode;
            AdditionalInformation = additionalInformation;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Name of the provisioning step. </summary>
        public string Name { get; }
        /// <summary> Status of the provisioning step. </summary>
        public string Status { get; }
        /// <summary> Start time of the provisioning step. </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary> Estimated completion time of the provisioning step in minutes. </summary>
        public int? MinutesLeft { get; }
        /// <summary> Estimated progress percentage. </summary>
        public int? ProgressPercentage { get; }
        /// <summary> End time of the provisioning step. </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary> Error code (HResult) for the provisioning step. </summary>
        public int? ErrorCode { get; }
        /// <summary> Additional information for the provisioning step. </summary>
        public IReadOnlyDictionary<string, string> AdditionalInformation { get; }
    }
}
