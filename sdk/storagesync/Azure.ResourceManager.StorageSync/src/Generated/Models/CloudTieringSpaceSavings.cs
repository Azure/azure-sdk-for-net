// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.StorageSync.Models
{
    /// <summary> Server endpoint cloud tiering status object. </summary>
    public partial class CloudTieringSpaceSavings
    {
        /// <summary> Initializes a new instance of CloudTieringSpaceSavings. </summary>
        internal CloudTieringSpaceSavings()
        {
        }

        /// <summary> Initializes a new instance of CloudTieringSpaceSavings. </summary>
        /// <param name="lastUpdatedTimestamp"> Last updated timestamp. </param>
        /// <param name="volumeSizeBytes"> Volume size. </param>
        /// <param name="totalSizeCloudBytes"> Total size of content in the azure file share. </param>
        /// <param name="cachedSizeBytes"> Cached content size on the server. </param>
        /// <param name="spaceSavingsPercent"> Percentage of cached size over total size. </param>
        /// <param name="spaceSavingsBytes"> Count of bytes saved on the server. </param>
        internal CloudTieringSpaceSavings(DateTimeOffset? lastUpdatedTimestamp, long? volumeSizeBytes, long? totalSizeCloudBytes, long? cachedSizeBytes, int? spaceSavingsPercent, long? spaceSavingsBytes)
        {
            LastUpdatedTimestamp = lastUpdatedTimestamp;
            VolumeSizeBytes = volumeSizeBytes;
            TotalSizeCloudBytes = totalSizeCloudBytes;
            CachedSizeBytes = cachedSizeBytes;
            SpaceSavingsPercent = spaceSavingsPercent;
            SpaceSavingsBytes = spaceSavingsBytes;
        }

        /// <summary> Last updated timestamp. </summary>
        public DateTimeOffset? LastUpdatedTimestamp { get; }
        /// <summary> Volume size. </summary>
        public long? VolumeSizeBytes { get; }
        /// <summary> Total size of content in the azure file share. </summary>
        public long? TotalSizeCloudBytes { get; }
        /// <summary> Cached content size on the server. </summary>
        public long? CachedSizeBytes { get; }
        /// <summary> Percentage of cached size over total size. </summary>
        public int? SpaceSavingsPercent { get; }
        /// <summary> Count of bytes saved on the server. </summary>
        public long? SpaceSavingsBytes { get; }
    }
}
