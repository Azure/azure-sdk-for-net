// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.StorageSync.Models
{
    public partial class ServerEndpointSyncSessionStatus
    {
        internal static ServerEndpointSyncSessionStatus DeserializeServerEndpointSyncSessionStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<int> lastSyncResult = default;
            Core.Optional<DateTimeOffset> lastSyncTimestamp = default;
            Core.Optional<DateTimeOffset> lastSyncSuccessTimestamp = default;
            Core.Optional<long> lastSyncPerItemErrorCount = default;
            Core.Optional<long> persistentFilesNotSyncingCount = default;
            Core.Optional<long> transientFilesNotSyncingCount = default;
            Core.Optional<IReadOnlyList<ServerEndpointFilesNotSyncingError>> filesNotSyncingErrors = default;
            Core.Optional<ServerEndpointSyncMode> lastSyncMode = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lastSyncResult"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSyncResult = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("lastSyncTimestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSyncTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastSyncSuccessTimestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSyncSuccessTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastSyncPerItemErrorCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSyncPerItemErrorCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("persistentFilesNotSyncingCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    persistentFilesNotSyncingCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("transientFilesNotSyncingCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    transientFilesNotSyncingCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("filesNotSyncingErrors"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ServerEndpointFilesNotSyncingError> array = new List<ServerEndpointFilesNotSyncingError>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ServerEndpointFilesNotSyncingError.DeserializeServerEndpointFilesNotSyncingError(item));
                    }
                    filesNotSyncingErrors = array;
                    continue;
                }
                if (property.NameEquals("lastSyncMode"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSyncMode = new ServerEndpointSyncMode(property.Value.GetString());
                    continue;
                }
            }
            return new ServerEndpointSyncSessionStatus(Core.Optional.ToNullable(lastSyncResult), Core.Optional.ToNullable(lastSyncTimestamp), Core.Optional.ToNullable(lastSyncSuccessTimestamp), Core.Optional.ToNullable(lastSyncPerItemErrorCount), Core.Optional.ToNullable(persistentFilesNotSyncingCount), Core.Optional.ToNullable(transientFilesNotSyncingCount), Core.Optional.ToList(filesNotSyncingErrors), Core.Optional.ToNullable(lastSyncMode));
        }
    }
}
