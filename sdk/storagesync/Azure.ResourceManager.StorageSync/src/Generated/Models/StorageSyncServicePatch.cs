// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.StorageSync.Models
{
    /// <summary> Parameters for updating an Storage sync service. </summary>
    public partial class StorageSyncServicePatch
    {
        /// <summary> Initializes a new instance of <see cref="StorageSyncServicePatch"/>. </summary>
        public StorageSyncServicePatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="StorageSyncServicePatch"/>. </summary>
        /// <param name="tags"> The user-specified tags associated with the storage sync service. </param>
        /// <param name="identity"> managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code. </param>
        /// <param name="incomingTrafficPolicy"> Incoming Traffic Policy. </param>
        /// <param name="useIdentity"> Use Identity authorization when customer have finished setup RBAC permissions. </param>
        internal StorageSyncServicePatch(IDictionary<string, string> tags, ManagedServiceIdentity identity, IncomingTrafficPolicy? incomingTrafficPolicy, bool? useIdentity)
        {
            Tags = tags;
            Identity = identity;
            IncomingTrafficPolicy = incomingTrafficPolicy;
            UseIdentity = useIdentity;
        }

        /// <summary> The user-specified tags associated with the storage sync service. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code. </summary>
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary> Incoming Traffic Policy. </summary>
        public IncomingTrafficPolicy? IncomingTrafficPolicy { get; set; }
        /// <summary> Use Identity authorization when customer have finished setup RBAC permissions. </summary>
        public bool? UseIdentity { get; set; }
    }
}
