// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.StorageSync.Models;

namespace Azure.ResourceManager.StorageSync
{
    public partial class StorageSyncRegisteredServerData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(ServerCertificate))
            {
                writer.WritePropertyName("serverCertificate");
#if NET6_0_OR_GREATER
				writer.WriteRawValue(ServerCertificate);
#else
                JsonSerializer.Serialize(writer, JsonDocument.Parse(ServerCertificate.ToString()).RootElement);
#endif
            }
            if (Optional.IsDefined(AgentVersion))
            {
                writer.WritePropertyName("agentVersion");
                writer.WriteStringValue(AgentVersion);
            }
            if (Optional.IsDefined(ServerOSVersion))
            {
                writer.WritePropertyName("serverOSVersion");
                writer.WriteStringValue(ServerOSVersion);
            }
            if (Optional.IsDefined(ServerManagementErrorCode))
            {
                writer.WritePropertyName("serverManagementErrorCode");
                writer.WriteNumberValue(ServerManagementErrorCode.Value);
            }
            if (Optional.IsDefined(LastHeartbeat))
            {
                writer.WritePropertyName("lastHeartBeat");
                writer.WriteStringValue(LastHeartbeat);
            }
            if (Optional.IsDefined(ProvisioningState))
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState);
            }
            if (Optional.IsDefined(ServerRole))
            {
                writer.WritePropertyName("serverRole");
                writer.WriteStringValue(ServerRole);
            }
            if (Optional.IsDefined(ClusterId))
            {
                writer.WritePropertyName("clusterId");
                writer.WriteStringValue(ClusterId.Value);
            }
            if (Optional.IsDefined(ClusterName))
            {
                writer.WritePropertyName("clusterName");
                writer.WriteStringValue(ClusterName);
            }
            if (Optional.IsDefined(ServerId))
            {
                writer.WritePropertyName("serverId");
                writer.WriteStringValue(ServerId.Value);
            }
            if (Optional.IsDefined(StorageSyncServiceUid))
            {
                writer.WritePropertyName("storageSyncServiceUid");
                writer.WriteStringValue(StorageSyncServiceUid.Value);
            }
            if (Optional.IsDefined(LastWorkflowId))
            {
                writer.WritePropertyName("lastWorkflowId");
                writer.WriteStringValue(LastWorkflowId);
            }
            if (Optional.IsDefined(LastOperationName))
            {
                writer.WritePropertyName("lastOperationName");
                writer.WriteStringValue(LastOperationName);
            }
            if (Optional.IsDefined(DiscoveryEndpointUri))
            {
                writer.WritePropertyName("discoveryEndpointUri");
                writer.WriteStringValue(DiscoveryEndpointUri.AbsoluteUri);
            }
            if (Optional.IsDefined(ResourceLocation))
            {
                writer.WritePropertyName("resourceLocation");
                writer.WriteStringValue(ResourceLocation.Value);
            }
            if (Optional.IsDefined(ServiceLocation))
            {
                writer.WritePropertyName("serviceLocation");
                writer.WriteStringValue(ServiceLocation.Value);
            }
            if (Optional.IsDefined(FriendlyName))
            {
                writer.WritePropertyName("friendlyName");
                writer.WriteStringValue(FriendlyName);
            }
            if (Optional.IsDefined(ManagementEndpointUri))
            {
                writer.WritePropertyName("managementEndpointUri");
                writer.WriteStringValue(ManagementEndpointUri.AbsoluteUri);
            }
            if (Optional.IsDefined(MonitoringEndpointUri))
            {
                writer.WritePropertyName("monitoringEndpointUri");
                writer.WriteStringValue(MonitoringEndpointUri.AbsoluteUri);
            }
            if (Optional.IsDefined(MonitoringConfiguration))
            {
                writer.WritePropertyName("monitoringConfiguration");
                writer.WriteStringValue(MonitoringConfiguration);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static StorageSyncRegisteredServerData DeserializeStorageSyncRegisteredServerData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<BinaryData> serverCertificate = default;
            Optional<string> agentVersion = default;
            Optional<RegisteredServerAgentVersionStatus> agentVersionStatus = default;
            Optional<DateTimeOffset> agentVersionExpirationDate = default;
            Optional<string> serverOSVersion = default;
            Optional<int> serverManagementErrorCode = default;
            Optional<string> lastHeartbeat = default;
            Optional<string> provisioningState = default;
            Optional<string> serverRole = default;
            Optional<Guid> clusterId = default;
            Optional<string> clusterName = default;
            Optional<Guid> serverId = default;
            Optional<Guid> storageSyncServiceUid = default;
            Optional<string> lastWorkflowId = default;
            Optional<string> lastOperationName = default;
            Optional<Uri> discoveryEndpointUri = default;
            Optional<AzureLocation> resourceLocation = default;
            Optional<AzureLocation> serviceLocation = default;
            Optional<string> friendlyName = default;
            Optional<Uri> managementEndpointUri = default;
            Optional<Uri> monitoringEndpointUri = default;
            Optional<string> monitoringConfiguration = default;
            Optional<string> serverName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("serverCertificate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            serverCertificate = BinaryData.FromString(property0.Value.GetRawText());
                            continue;
                        }
                        if (property0.NameEquals("agentVersion"))
                        {
                            agentVersion = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("agentVersionStatus"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            agentVersionStatus = new RegisteredServerAgentVersionStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("agentVersionExpirationDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            agentVersionExpirationDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("serverOSVersion"))
                        {
                            serverOSVersion = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("serverManagementErrorCode"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            serverManagementErrorCode = property0.Value.GetInt32();
                            continue;
                        }
                        if (property0.NameEquals("lastHeartBeat"))
                        {
                            lastHeartbeat = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("provisioningState"))
                        {
                            provisioningState = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("serverRole"))
                        {
                            serverRole = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("clusterId"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            clusterId = property0.Value.GetGuid();
                            continue;
                        }
                        if (property0.NameEquals("clusterName"))
                        {
                            clusterName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("serverId"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            serverId = property0.Value.GetGuid();
                            continue;
                        }
                        if (property0.NameEquals("storageSyncServiceUid"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            storageSyncServiceUid = property0.Value.GetGuid();
                            continue;
                        }
                        if (property0.NameEquals("lastWorkflowId"))
                        {
                            lastWorkflowId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("lastOperationName"))
                        {
                            lastOperationName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("discoveryEndpointUri"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                discoveryEndpointUri = null;
                                continue;
                            }
                            discoveryEndpointUri = new Uri(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("resourceLocation"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            resourceLocation = new AzureLocation(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("serviceLocation"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            serviceLocation = new AzureLocation(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("friendlyName"))
                        {
                            friendlyName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("managementEndpointUri"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                managementEndpointUri = null;
                                continue;
                            }
                            managementEndpointUri = new Uri(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("monitoringEndpointUri"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                monitoringEndpointUri = null;
                                continue;
                            }
                            monitoringEndpointUri = new Uri(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("monitoringConfiguration"))
                        {
                            monitoringConfiguration = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("serverName"))
                        {
                            serverName = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new StorageSyncRegisteredServerData(id, name, type, systemData.Value, serverCertificate.Value, agentVersion.Value, Optional.ToNullable(agentVersionStatus), Optional.ToNullable(agentVersionExpirationDate), serverOSVersion.Value, Optional.ToNullable(serverManagementErrorCode), lastHeartbeat.Value, provisioningState.Value, serverRole.Value, Optional.ToNullable(clusterId), clusterName.Value, Optional.ToNullable(serverId), Optional.ToNullable(storageSyncServiceUid), lastWorkflowId.Value, lastOperationName.Value, discoveryEndpointUri.Value, Optional.ToNullable(resourceLocation), Optional.ToNullable(serviceLocation), friendlyName.Value, managementEndpointUri.Value, monitoringEndpointUri.Value, monitoringConfiguration.Value, serverName.Value);
        }
    }
}
