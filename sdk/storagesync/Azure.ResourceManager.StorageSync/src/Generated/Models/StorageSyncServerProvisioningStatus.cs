// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.StorageSync.Models
{
    /// <summary> Server provisioning status. </summary>
    public readonly partial struct StorageSyncServerProvisioningStatus : IEquatable<StorageSyncServerProvisioningStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="StorageSyncServerProvisioningStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public StorageSyncServerProvisioningStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotStartedValue = "NotStarted";
        private const string InProgressValue = "InProgress";
        private const string ReadySyncNotFunctionalValue = "Ready_SyncNotFunctional";
        private const string ReadySyncFunctionalValue = "Ready_SyncFunctional";
        private const string ErrorValue = "Error";

        /// <summary> NotStarted. </summary>
        public static StorageSyncServerProvisioningStatus NotStarted { get; } = new StorageSyncServerProvisioningStatus(NotStartedValue);
        /// <summary> InProgress. </summary>
        public static StorageSyncServerProvisioningStatus InProgress { get; } = new StorageSyncServerProvisioningStatus(InProgressValue);
        /// <summary> Ready_SyncNotFunctional. </summary>
        public static StorageSyncServerProvisioningStatus ReadySyncNotFunctional { get; } = new StorageSyncServerProvisioningStatus(ReadySyncNotFunctionalValue);
        /// <summary> Ready_SyncFunctional. </summary>
        public static StorageSyncServerProvisioningStatus ReadySyncFunctional { get; } = new StorageSyncServerProvisioningStatus(ReadySyncFunctionalValue);
        /// <summary> Error. </summary>
        public static StorageSyncServerProvisioningStatus Error { get; } = new StorageSyncServerProvisioningStatus(ErrorValue);
        /// <summary> Determines if two <see cref="StorageSyncServerProvisioningStatus"/> values are the same. </summary>
        public static bool operator ==(StorageSyncServerProvisioningStatus left, StorageSyncServerProvisioningStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="StorageSyncServerProvisioningStatus"/> values are not the same. </summary>
        public static bool operator !=(StorageSyncServerProvisioningStatus left, StorageSyncServerProvisioningStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="StorageSyncServerProvisioningStatus"/>. </summary>
        public static implicit operator StorageSyncServerProvisioningStatus(string value) => new StorageSyncServerProvisioningStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is StorageSyncServerProvisioningStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(StorageSyncServerProvisioningStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
