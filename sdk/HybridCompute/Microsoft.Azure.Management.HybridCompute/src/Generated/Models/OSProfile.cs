// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridCompute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies the operating system settings for the hybrid machine.
    /// </summary>
    public partial class OSProfile
    {
        /// <summary>
        /// Initializes a new instance of the OSProfile class.
        /// </summary>
        public OSProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OSProfile class.
        /// </summary>
        /// <param name="computerName">Specifies the host OS name of the hybrid
        /// machine.</param>
        /// <param name="windowsConfiguration">Specifies the windows
        /// configuration for update management.</param>
        /// <param name="linuxConfiguration">Specifies the linux configuration
        /// for update management.</param>
        public OSProfile(string computerName = default(string), OSProfileWindowsConfiguration windowsConfiguration = default(OSProfileWindowsConfiguration), OSProfileLinuxConfiguration linuxConfiguration = default(OSProfileLinuxConfiguration))
        {
            ComputerName = computerName;
            WindowsConfiguration = windowsConfiguration;
            LinuxConfiguration = linuxConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets specifies the host OS name of the hybrid machine.
        /// </summary>
        [JsonProperty(PropertyName = "computerName")]
        public string ComputerName { get; private set; }

        /// <summary>
        /// Gets or sets specifies the windows configuration for update
        /// management.
        /// </summary>
        [JsonProperty(PropertyName = "windowsConfiguration")]
        public OSProfileWindowsConfiguration WindowsConfiguration { get; set; }

        /// <summary>
        /// Gets or sets specifies the linux configuration for update
        /// management.
        /// </summary>
        [JsonProperty(PropertyName = "linuxConfiguration")]
        public OSProfileLinuxConfiguration LinuxConfiguration { get; set; }

    }
}
