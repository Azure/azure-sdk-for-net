// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridCompute
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for PrivateLinkScopesOperations.
    /// </summary>
    public static partial class PrivateLinkScopesOperationsExtensions
    {
            /// <summary>
            /// Gets a list of all Azure Arc PrivateLinkScopes within a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<HybridComputePrivateLinkScope> List(this IPrivateLinkScopesOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of all Azure Arc PrivateLinkScopes within a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<HybridComputePrivateLinkScope>> ListAsync(this IPrivateLinkScopesOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of Azure Arc PrivateLinkScopes within a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            public static IPage<HybridComputePrivateLinkScope> ListByResourceGroup(this IPrivateLinkScopesOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of Azure Arc PrivateLinkScopes within a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<HybridComputePrivateLinkScope>> ListByResourceGroupAsync(this IPrivateLinkScopesOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a Azure Arc PrivateLinkScope.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            public static void Delete(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName)
            {
                operations.DeleteAsync(resourceGroupName, scopeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a Azure Arc PrivateLinkScope.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, scopeName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Returns a Azure Arc PrivateLinkScope.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            public static HybridComputePrivateLinkScope Get(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName)
            {
                return operations.GetAsync(resourceGroupName, scopeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a Azure Arc PrivateLinkScope.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HybridComputePrivateLinkScope> GetAsync(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, scopeName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates (or updates) a Azure Arc PrivateLinkScope. Note: You cannot specify
            /// a different value for InstrumentationKey nor AppId in the Put operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            /// <param name='parameters'>
            /// Properties that need to be specified to create or update a Azure Arc for
            /// Servers and Clusters PrivateLinkScope.
            /// </param>
            public static HybridComputePrivateLinkScope CreateOrUpdate(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName, HybridComputePrivateLinkScope parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, scopeName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates (or updates) a Azure Arc PrivateLinkScope. Note: You cannot specify
            /// a different value for InstrumentationKey nor AppId in the Put operation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            /// <param name='parameters'>
            /// Properties that need to be specified to create or update a Azure Arc for
            /// Servers and Clusters PrivateLinkScope.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HybridComputePrivateLinkScope> CreateOrUpdateAsync(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName, HybridComputePrivateLinkScope parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, scopeName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates an existing PrivateLinkScope's tags. To update other fields use the
            /// CreateOrUpdate method.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            /// <param name='privateLinkScopeTags'>
            /// Updated tag information to set into the PrivateLinkScope instance.
            /// </param>
            public static HybridComputePrivateLinkScope UpdateTags(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName, TagsResource privateLinkScopeTags)
            {
                return operations.UpdateTagsAsync(resourceGroupName, scopeName, privateLinkScopeTags).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates an existing PrivateLinkScope's tags. To update other fields use the
            /// CreateOrUpdate method.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            /// <param name='privateLinkScopeTags'>
            /// Updated tag information to set into the PrivateLinkScope instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HybridComputePrivateLinkScope> UpdateTagsAsync(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName, TagsResource privateLinkScopeTags, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateTagsWithHttpMessagesAsync(resourceGroupName, scopeName, privateLinkScopeTags, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns a Azure Arc PrivateLinkScope's validation details.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// The location of the target resource.
            /// </param>
            /// <param name='privateLinkScopeId'>
            /// The id (Guid) of the Azure Arc PrivateLinkScope resource.
            /// </param>
            public static PrivateLinkScopeValidationDetails GetValidationDetails(this IPrivateLinkScopesOperations operations, string location, string privateLinkScopeId)
            {
                return operations.GetValidationDetailsAsync(location, privateLinkScopeId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a Azure Arc PrivateLinkScope's validation details.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// The location of the target resource.
            /// </param>
            /// <param name='privateLinkScopeId'>
            /// The id (Guid) of the Azure Arc PrivateLinkScope resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PrivateLinkScopeValidationDetails> GetValidationDetailsAsync(this IPrivateLinkScopesOperations operations, string location, string privateLinkScopeId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetValidationDetailsWithHttpMessagesAsync(location, privateLinkScopeId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns a Azure Arc PrivateLinkScope's validation details for a given
            /// machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='machineName'>
            /// The name of the target machine to get the private link scope validation
            /// details for.
            /// </param>
            public static PrivateLinkScopeValidationDetails GetValidationDetailsForMachine(this IPrivateLinkScopesOperations operations, string resourceGroupName, string machineName)
            {
                return operations.GetValidationDetailsForMachineAsync(resourceGroupName, machineName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a Azure Arc PrivateLinkScope's validation details for a given
            /// machine.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='machineName'>
            /// The name of the target machine to get the private link scope validation
            /// details for.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PrivateLinkScopeValidationDetails> GetValidationDetailsForMachineAsync(this IPrivateLinkScopesOperations operations, string resourceGroupName, string machineName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetValidationDetailsForMachineWithHttpMessagesAsync(resourceGroupName, machineName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a Azure Arc PrivateLinkScope.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            public static void BeginDelete(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName)
            {
                operations.BeginDeleteAsync(resourceGroupName, scopeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a Azure Arc PrivateLinkScope.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='scopeName'>
            /// The name of the Azure Arc PrivateLinkScope resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IPrivateLinkScopesOperations operations, string resourceGroupName, string scopeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, scopeName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets a list of all Azure Arc PrivateLinkScopes within a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<HybridComputePrivateLinkScope> ListNext(this IPrivateLinkScopesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of all Azure Arc PrivateLinkScopes within a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<HybridComputePrivateLinkScope>> ListNextAsync(this IPrivateLinkScopesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of Azure Arc PrivateLinkScopes within a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<HybridComputePrivateLinkScope> ListByResourceGroupNext(this IPrivateLinkScopesOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of Azure Arc PrivateLinkScopes within a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<HybridComputePrivateLinkScope>> ListByResourceGroupNextAsync(this IPrivateLinkScopesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
