// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridCompute
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for HybridComputeManagementClient.
    /// </summary>
    public static partial class HybridComputeManagementClientExtensions
    {
            /// <summary>
            /// The operation to Upgrade Machine Extensions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='machineName'>
            /// The name of the hybrid machine.
            /// </param>
            /// <param name='extensionUpgradeParameters'>
            /// Parameters supplied to the Upgrade Extensions operation.
            /// </param>
            public static void UpgradeExtensions(this IHybridComputeManagementClient operations, string resourceGroupName, string machineName, MachineExtensionUpgrade extensionUpgradeParameters)
            {
                operations.UpgradeExtensionsAsync(resourceGroupName, machineName, extensionUpgradeParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The operation to Upgrade Machine Extensions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='machineName'>
            /// The name of the hybrid machine.
            /// </param>
            /// <param name='extensionUpgradeParameters'>
            /// Parameters supplied to the Upgrade Extensions operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpgradeExtensionsAsync(this IHybridComputeManagementClient operations, string resourceGroupName, string machineName, MachineExtensionUpgrade extensionUpgradeParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpgradeExtensionsWithHttpMessagesAsync(resourceGroupName, machineName, extensionUpgradeParameters, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// The operation to Upgrade Machine Extensions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='machineName'>
            /// The name of the hybrid machine.
            /// </param>
            /// <param name='extensionUpgradeParameters'>
            /// Parameters supplied to the Upgrade Extensions operation.
            /// </param>
            public static void BeginUpgradeExtensions(this IHybridComputeManagementClient operations, string resourceGroupName, string machineName, MachineExtensionUpgrade extensionUpgradeParameters)
            {
                operations.BeginUpgradeExtensionsAsync(resourceGroupName, machineName, extensionUpgradeParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The operation to Upgrade Machine Extensions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='machineName'>
            /// The name of the hybrid machine.
            /// </param>
            /// <param name='extensionUpgradeParameters'>
            /// Parameters supplied to the Upgrade Extensions operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginUpgradeExtensionsAsync(this IHybridComputeManagementClient operations, string resourceGroupName, string machineName, MachineExtensionUpgrade extensionUpgradeParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginUpgradeExtensionsWithHttpMessagesAsync(resourceGroupName, machineName, extensionUpgradeParameters, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
