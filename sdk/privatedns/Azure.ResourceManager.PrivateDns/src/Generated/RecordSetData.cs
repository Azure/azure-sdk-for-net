// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.PrivateDns.Models;

namespace Azure.ResourceManager.PrivateDns
{
    /// <summary> A class representing the RecordSet data model. </summary>
    public partial class RecordSetData : ResourceData
    {
        /// <summary> Initializes a new instance of RecordSetData. </summary>
        public RecordSetData()
        {
            Metadata = new ChangeTrackingDictionary<string, string>();
            ARecords = new ChangeTrackingList<ARecord>();
            AaaaRecords = new ChangeTrackingList<AaaaRecord>();
            MxRecords = new ChangeTrackingList<MxRecord>();
            PtrRecords = new ChangeTrackingList<PtrRecord>();
            SrvRecords = new ChangeTrackingList<SrvRecord>();
            TxtRecords = new ChangeTrackingList<TxtRecord>();
        }

        /// <summary> Initializes a new instance of RecordSetData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> The ETag of the record set. </param>
        /// <param name="metadata"> The metadata attached to the record set. </param>
        /// <param name="ttl"> The TTL (time-to-live) of the records in the record set. </param>
        /// <param name="fqdn"> Fully qualified domain name of the record set. </param>
        /// <param name="isAutoRegistered"> Is the record set auto-registered in the Private DNS zone through a virtual network link?. </param>
        /// <param name="aRecords"> The list of A records in the record set. </param>
        /// <param name="aaaaRecords"> The list of AAAA records in the record set. </param>
        /// <param name="cnameRecord"> The CNAME record in the record set. </param>
        /// <param name="mxRecords"> The list of MX records in the record set. </param>
        /// <param name="ptrRecords"> The list of PTR records in the record set. </param>
        /// <param name="soaRecord"> The SOA record in the record set. </param>
        /// <param name="srvRecords"> The list of SRV records in the record set. </param>
        /// <param name="txtRecords"> The list of TXT records in the record set. </param>
        internal RecordSetData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ETag? etag, IDictionary<string, string> metadata, long? ttl, string fqdn, bool? isAutoRegistered, IList<ARecord> aRecords, IList<AaaaRecord> aaaaRecords, CnameRecord cnameRecord, IList<MxRecord> mxRecords, IList<PtrRecord> ptrRecords, SoaRecord soaRecord, IList<SrvRecord> srvRecords, IList<TxtRecord> txtRecords) : base(id, name, resourceType, systemData)
        {
            ETag = etag;
            Metadata = metadata;
            Ttl = ttl;
            Fqdn = fqdn;
            IsAutoRegistered = isAutoRegistered;
            ARecords = aRecords;
            AaaaRecords = aaaaRecords;
            CnameRecord = cnameRecord;
            MxRecords = mxRecords;
            PtrRecords = ptrRecords;
            SoaRecord = soaRecord;
            SrvRecords = srvRecords;
            TxtRecords = txtRecords;
        }

        /// <summary> The ETag of the record set. </summary>
        public ETag? ETag { get; set; }
        /// <summary> The metadata attached to the record set. </summary>
        public IDictionary<string, string> Metadata { get; }
        /// <summary> The TTL (time-to-live) of the records in the record set. </summary>
        public long? Ttl { get; set; }
        /// <summary> Fully qualified domain name of the record set. </summary>
        public string Fqdn { get; }
        /// <summary> Is the record set auto-registered in the Private DNS zone through a virtual network link?. </summary>
        public bool? IsAutoRegistered { get; }
        /// <summary> The list of A records in the record set. </summary>
        public IList<ARecord> ARecords { get; }
        /// <summary> The list of AAAA records in the record set. </summary>
        public IList<AaaaRecord> AaaaRecords { get; }
        /// <summary> The CNAME record in the record set. </summary>
        internal CnameRecord CnameRecord { get; set; }
        /// <summary> The canonical name for this CNAME record. </summary>
        public string Cname
        {
            get => CnameRecord is null ? default : CnameRecord.Cname;
            set
            {
                if (CnameRecord is null)
                    CnameRecord = new CnameRecord();
                CnameRecord.Cname = value;
            }
        }

        /// <summary> The list of MX records in the record set. </summary>
        public IList<MxRecord> MxRecords { get; }
        /// <summary> The list of PTR records in the record set. </summary>
        public IList<PtrRecord> PtrRecords { get; }
        /// <summary> The SOA record in the record set. </summary>
        public SoaRecord SoaRecord { get; set; }
        /// <summary> The list of SRV records in the record set. </summary>
        public IList<SrvRecord> SrvRecords { get; }
        /// <summary> The list of TXT records in the record set. </summary>
        public IList<TxtRecord> TxtRecords { get; }
    }
}
