// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataShare.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A share data transfer object.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Share : ProxyDto
    {
        /// <summary>
        /// Initializes a new instance of the Share class.
        /// </summary>
        public Share()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Share class.
        /// </summary>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="createdAt">Time at which the share was
        /// created.</param>
        /// <param name="description">Share description.</param>
        /// <param name="provisioningState">Gets or sets the provisioning
        /// state. Possible values include: 'Succeeded', 'Creating',
        /// 'Deleting', 'Moving', 'Failed'</param>
        /// <param name="shareKind">Share kind. Possible values include:
        /// 'CopyBased', 'InPlace'</param>
        /// <param name="terms">Share terms.</param>
        /// <param name="userEmail">Email of the user who created the
        /// resource</param>
        /// <param name="userName">Name of the user who created the
        /// resource</param>
        public Share(string id = default(string), string name = default(string), string type = default(string), System.DateTime? createdAt = default(System.DateTime?), string description = default(string), string provisioningState = default(string), string shareKind = default(string), string terms = default(string), string userEmail = default(string), string userName = default(string))
            : base(id, name, type)
        {
            CreatedAt = createdAt;
            Description = description;
            ProvisioningState = provisioningState;
            ShareKind = shareKind;
            Terms = terms;
            UserEmail = userEmail;
            UserName = userName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets time at which the share was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdAt")]
        public System.DateTime? CreatedAt { get; private set; }

        /// <summary>
        /// Gets or sets share description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state. Possible values include:
        /// 'Succeeded', 'Creating', 'Deleting', 'Moving', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets share kind. Possible values include: 'CopyBased',
        /// 'InPlace'
        /// </summary>
        [JsonProperty(PropertyName = "properties.shareKind")]
        public string ShareKind { get; set; }

        /// <summary>
        /// Gets or sets share terms.
        /// </summary>
        [JsonProperty(PropertyName = "properties.terms")]
        public string Terms { get; set; }

        /// <summary>
        /// Gets email of the user who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.userEmail")]
        public string UserEmail { get; private set; }

        /// <summary>
        /// Gets name of the user who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.userName")]
        public string UserName { get; private set; }

    }
}
