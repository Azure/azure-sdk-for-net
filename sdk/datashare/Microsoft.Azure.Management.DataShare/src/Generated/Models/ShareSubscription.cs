// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataShare.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A share subscription data transfer object.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ShareSubscription : ProxyDto
    {
        /// <summary>
        /// Initializes a new instance of the ShareSubscription class.
        /// </summary>
        public ShareSubscription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ShareSubscription class.
        /// </summary>
        /// <param name="invitationId">The invitation id.</param>
        /// <param name="sourceShareLocation">Source share location.</param>
        /// <param name="id">The resource id of the azure resource</param>
        /// <param name="name">Name of the azure resource</param>
        /// <param name="type">Type of the azure resource</param>
        /// <param name="createdAt">Time at which the share subscription was
        /// created.</param>
        /// <param name="providerEmail">Email of the provider who created the
        /// resource</param>
        /// <param name="providerName">Name of the provider who created the
        /// resource</param>
        /// <param name="providerTenantName">Tenant name of the provider who
        /// created the resource</param>
        /// <param name="provisioningState">Provisioning state of the share
        /// subscription. Possible values include: 'Succeeded', 'Creating',
        /// 'Deleting', 'Moving', 'Failed'</param>
        /// <param name="shareDescription">Description of share</param>
        /// <param name="shareKind">Kind of share. Possible values include:
        /// 'CopyBased', 'InPlace'</param>
        /// <param name="shareName">Name of the share</param>
        /// <param name="shareSubscriptionStatus">Gets the current status of
        /// share subscription. Possible values include: 'Active', 'Revoked',
        /// 'SourceDeleted', 'Revoking'</param>
        /// <param name="shareTerms">Terms of a share</param>
        /// <param name="userEmail">Email of the user who created the
        /// resource</param>
        /// <param name="userName">Name of the user who created the
        /// resource</param>
        public ShareSubscription(string invitationId, string sourceShareLocation, string id = default(string), string name = default(string), string type = default(string), System.DateTime? createdAt = default(System.DateTime?), string providerEmail = default(string), string providerName = default(string), string providerTenantName = default(string), string provisioningState = default(string), string shareDescription = default(string), string shareKind = default(string), string shareName = default(string), string shareSubscriptionStatus = default(string), string shareTerms = default(string), string userEmail = default(string), string userName = default(string))
            : base(id, name, type)
        {
            CreatedAt = createdAt;
            InvitationId = invitationId;
            ProviderEmail = providerEmail;
            ProviderName = providerName;
            ProviderTenantName = providerTenantName;
            ProvisioningState = provisioningState;
            ShareDescription = shareDescription;
            ShareKind = shareKind;
            ShareName = shareName;
            ShareSubscriptionStatus = shareSubscriptionStatus;
            ShareTerms = shareTerms;
            SourceShareLocation = sourceShareLocation;
            UserEmail = userEmail;
            UserName = userName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets time at which the share subscription was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdAt")]
        public System.DateTime? CreatedAt { get; private set; }

        /// <summary>
        /// Gets or sets the invitation id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.invitationId")]
        public string InvitationId { get; set; }

        /// <summary>
        /// Gets email of the provider who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.providerEmail")]
        public string ProviderEmail { get; private set; }

        /// <summary>
        /// Gets name of the provider who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.providerName")]
        public string ProviderName { get; private set; }

        /// <summary>
        /// Gets tenant name of the provider who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.providerTenantName")]
        public string ProviderTenantName { get; private set; }

        /// <summary>
        /// Gets provisioning state of the share subscription. Possible values
        /// include: 'Succeeded', 'Creating', 'Deleting', 'Moving', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets description of share
        /// </summary>
        [JsonProperty(PropertyName = "properties.shareDescription")]
        public string ShareDescription { get; private set; }

        /// <summary>
        /// Gets kind of share. Possible values include: 'CopyBased', 'InPlace'
        /// </summary>
        [JsonProperty(PropertyName = "properties.shareKind")]
        public string ShareKind { get; private set; }

        /// <summary>
        /// Gets name of the share
        /// </summary>
        [JsonProperty(PropertyName = "properties.shareName")]
        public string ShareName { get; private set; }

        /// <summary>
        /// Gets the current status of share subscription. Possible values
        /// include: 'Active', 'Revoked', 'SourceDeleted', 'Revoking'
        /// </summary>
        [JsonProperty(PropertyName = "properties.shareSubscriptionStatus")]
        public string ShareSubscriptionStatus { get; private set; }

        /// <summary>
        /// Gets terms of a share
        /// </summary>
        [JsonProperty(PropertyName = "properties.shareTerms")]
        public string ShareTerms { get; private set; }

        /// <summary>
        /// Gets or sets source share location.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceShareLocation")]
        public string SourceShareLocation { get; set; }

        /// <summary>
        /// Gets email of the user who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.userEmail")]
        public string UserEmail { get; private set; }

        /// <summary>
        /// Gets name of the user who created the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.userName")]
        public string UserName { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (InvitationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InvitationId");
            }
            if (SourceShareLocation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceShareLocation");
            }
        }
    }
}
