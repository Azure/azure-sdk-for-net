// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DataShare.Models;
using Azure.ResourceManager.Resources;
using NUnit.Framework;

namespace Azure.ResourceManager.DataShare.Samples
{
    public partial class Sample_TenantResourceExtensions
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RejectConsumerInvitation_ConsumerInvitationsRejectInvitation()
        {
            // Generated from example definition: specification/datashare/resource-manager/Microsoft.DataShare/stable/2021-08-01/examples/ConsumerInvitations_RejectInvitation.json
            // this example is just showing the usage of "ConsumerInvitations_RejectInvitation" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            TenantResource tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // invoke the operation
            AzureLocation location = new AzureLocation("East US 2");
            DataShareConsumerInvitationData data = new DataShareConsumerInvitationData(Guid.Parse("dfbbc788-19eb-4607-a5a1-c74181bfff03"));
            DataShareConsumerInvitationResource result = await tenantResource.RejectConsumerInvitationAsync(location, data);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DataShareConsumerInvitationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task ActivateEmail_EmailRegistrationsActivateEmail()
        {
            // Generated from example definition: specification/datashare/resource-manager/Microsoft.DataShare/stable/2021-08-01/examples/EmailRegistrations_ActivateEmail.json
            // this example is just showing the usage of "EmailRegistrations_ActivateEmail" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            TenantResource tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // invoke the operation
            AzureLocation location = new AzureLocation("East US 2");
            DataShareEmailRegistration emailRegistration = new DataShareEmailRegistration
            {
                ActivationCode = "djsfhakj2lekowd3wepfklpwe9lpflcd",
            };
            DataShareEmailRegistration result = await tenantResource.ActivateEmailAsync(location, emailRegistration);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RegisterEmail_EmailRegistrationsRegisterEmail()
        {
            // Generated from example definition: specification/datashare/resource-manager/Microsoft.DataShare/stable/2021-08-01/examples/EmailRegistrations_RegisterEmail.json
            // this example is just showing the usage of "EmailRegistrations_RegisterEmail" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            TenantResource tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // invoke the operation
            AzureLocation location = new AzureLocation("East US 2");
            DataShareEmailRegistration result = await tenantResource.RegisterEmailAsync(location);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
