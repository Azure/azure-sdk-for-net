// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.DataShare;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DataShare.Models
{
    /// <summary> A Kusto database data set mapping. </summary>
    public partial class KustoDatabaseDataSetMapping : DataSetMappingData
    {
        /// <summary> Initializes a new instance of KustoDatabaseDataSetMapping. </summary>
        /// <param name="dataSetId"> The id of the source data set. </param>
        /// <param name="kustoClusterResourceId"> Resource id of the sink kusto cluster. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dataSetId"/> or <paramref name="kustoClusterResourceId"/> is null. </exception>
        public KustoDatabaseDataSetMapping(string dataSetId, string kustoClusterResourceId)
        {
            if (dataSetId == null)
            {
                throw new ArgumentNullException(nameof(dataSetId));
            }
            if (kustoClusterResourceId == null)
            {
                throw new ArgumentNullException(nameof(kustoClusterResourceId));
            }

            DataSetId = dataSetId;
            KustoClusterResourceId = kustoClusterResourceId;
            Kind = DataSetMappingKind.KustoDatabase;
        }

        /// <summary> Initializes a new instance of KustoDatabaseDataSetMapping. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> Kind of data set mapping. </param>
        /// <param name="dataSetId"> The id of the source data set. </param>
        /// <param name="dataSetMappingStatus"> Gets the status of the data set mapping. </param>
        /// <param name="kustoClusterResourceId"> Resource id of the sink kusto cluster. </param>
        /// <param name="location"> Location of the sink kusto cluster. </param>
        /// <param name="provisioningState"> Provisioning state of the data set mapping. </param>
        internal KustoDatabaseDataSetMapping(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DataSetMappingKind kind, string dataSetId, DataSetMappingStatus? dataSetMappingStatus, string kustoClusterResourceId, AzureLocation? location, ProvisioningState? provisioningState) : base(id, name, resourceType, systemData, kind)
        {
            DataSetId = dataSetId;
            DataSetMappingStatus = dataSetMappingStatus;
            KustoClusterResourceId = kustoClusterResourceId;
            Location = location;
            ProvisioningState = provisioningState;
            Kind = kind;
        }

        /// <summary> The id of the source data set. </summary>
        public string DataSetId { get; set; }
        /// <summary> Gets the status of the data set mapping. </summary>
        public DataSetMappingStatus? DataSetMappingStatus { get; }
        /// <summary> Resource id of the sink kusto cluster. </summary>
        public string KustoClusterResourceId { get; set; }
        /// <summary> Location of the sink kusto cluster. </summary>
        public AzureLocation? Location { get; }
        /// <summary> Provisioning state of the data set mapping. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
