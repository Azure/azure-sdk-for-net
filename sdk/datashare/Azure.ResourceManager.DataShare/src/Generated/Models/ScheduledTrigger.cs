// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.DataShare;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DataShare.Models
{
    /// <summary> A type of trigger based on schedule. </summary>
    public partial class ScheduledTrigger : TriggerData
    {
        /// <summary> Initializes a new instance of ScheduledTrigger. </summary>
        /// <param name="recurrenceInterval"> Recurrence Interval. </param>
        /// <param name="synchronizationOn"> Synchronization time. </param>
        public ScheduledTrigger(RecurrenceInterval recurrenceInterval, DateTimeOffset synchronizationOn)
        {
            RecurrenceInterval = recurrenceInterval;
            SynchronizationOn = synchronizationOn;
            Kind = TriggerKind.ScheduleBased;
        }

        /// <summary> Initializes a new instance of ScheduledTrigger. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> Kind of synchronization on trigger. </param>
        /// <param name="createdOn"> Time at which the trigger was created. </param>
        /// <param name="provisioningState"> Gets the provisioning state. </param>
        /// <param name="recurrenceInterval"> Recurrence Interval. </param>
        /// <param name="synchronizationMode"> Synchronization mode. </param>
        /// <param name="synchronizationOn"> Synchronization time. </param>
        /// <param name="triggerStatus"> Gets the trigger state. </param>
        /// <param name="userName"> Name of the user who created the trigger. </param>
        internal ScheduledTrigger(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, TriggerKind kind, DateTimeOffset? createdOn, ProvisioningState? provisioningState, RecurrenceInterval recurrenceInterval, SynchronizationMode? synchronizationMode, DateTimeOffset synchronizationOn, TriggerStatus? triggerStatus, string userName) : base(id, name, resourceType, systemData, kind)
        {
            CreatedOn = createdOn;
            ProvisioningState = provisioningState;
            RecurrenceInterval = recurrenceInterval;
            SynchronizationMode = synchronizationMode;
            SynchronizationOn = synchronizationOn;
            TriggerStatus = triggerStatus;
            UserName = userName;
            Kind = kind;
        }

        /// <summary> Time at which the trigger was created. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> Gets the provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Recurrence Interval. </summary>
        public RecurrenceInterval RecurrenceInterval { get; set; }
        /// <summary> Synchronization mode. </summary>
        public SynchronizationMode? SynchronizationMode { get; set; }
        /// <summary> Synchronization time. </summary>
        public DateTimeOffset SynchronizationOn { get; set; }
        /// <summary> Gets the trigger state. </summary>
        public TriggerStatus? TriggerStatus { get; }
        /// <summary> Name of the user who created the trigger. </summary>
        public string UserName { get; }
    }
}
