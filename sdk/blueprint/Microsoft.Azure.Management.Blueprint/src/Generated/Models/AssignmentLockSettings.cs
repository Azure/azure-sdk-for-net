// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Blueprint.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines how resources deployed by a blueprint assignment are locked.
    /// </summary>
    public partial class AssignmentLockSettings
    {
        /// <summary>
        /// Initializes a new instance of the AssignmentLockSettings class.
        /// </summary>
        public AssignmentLockSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssignmentLockSettings class.
        /// </summary>
        /// <param name="mode">Lock mode. Possible values include: 'None',
        /// 'AllResourcesReadOnly', 'AllResourcesDoNotDelete'</param>
        /// <param name="excludedPrincipals">List of AAD principals excluded
        /// from blueprint locks. Up to 5 principals are permitted.</param>
        /// <param name="excludedActions">List of management operations that
        /// are excluded from blueprint locks. Up to 200 actions are permitted.
        /// If the lock mode is set to 'AllResourcesReadOnly', then the
        /// following actions are automatically appended to 'excludedActions':
        /// '*/read', 'Microsoft.Network/virtualNetworks/subnets/join/action'
        /// and 'Microsoft.Authorization/locks/delete'. If the lock mode is set
        /// to 'AllResourcesDoNotDelete', then the following actions are
        /// automatically appended to 'excludedActions':
        /// 'Microsoft.Authorization/locks/delete'. Duplicate actions will get
        /// removed.</param>
        public AssignmentLockSettings(string mode = default(string), IList<string> excludedPrincipals = default(IList<string>), IList<string> excludedActions = default(IList<string>))
        {
            Mode = mode;
            ExcludedPrincipals = excludedPrincipals;
            ExcludedActions = excludedActions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets lock mode. Possible values include: 'None',
        /// 'AllResourcesReadOnly', 'AllResourcesDoNotDelete'
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Gets or sets list of AAD principals excluded from blueprint locks.
        /// Up to 5 principals are permitted.
        /// </summary>
        [JsonProperty(PropertyName = "excludedPrincipals")]
        public IList<string> ExcludedPrincipals { get; set; }

        /// <summary>
        /// Gets or sets list of management operations that are excluded from
        /// blueprint locks. Up to 200 actions are permitted. If the lock mode
        /// is set to 'AllResourcesReadOnly', then the following actions are
        /// automatically appended to 'excludedActions': '*/read',
        /// 'Microsoft.Network/virtualNetworks/subnets/join/action' and
        /// 'Microsoft.Authorization/locks/delete'. If the lock mode is set to
        /// 'AllResourcesDoNotDelete', then the following actions are
        /// automatically appended to 'excludedActions':
        /// 'Microsoft.Authorization/locks/delete'. Duplicate actions will get
        /// removed.
        /// </summary>
        [JsonProperty(PropertyName = "excludedActions")]
        public IList<string> ExcludedActions { get; set; }

    }
}
