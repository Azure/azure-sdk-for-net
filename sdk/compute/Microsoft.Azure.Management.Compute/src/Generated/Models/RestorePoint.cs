// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Restore Point details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class RestorePoint : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the RestorePoint class.
        /// </summary>
        public RestorePoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestorePoint class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="excludeDisks">List of disk resource ids that the
        /// customer wishes to exclude from the restore point. If no disks are
        /// specified, all disks will be included.</param>
        /// <param name="sourceMetadata">Gets the details of the VM captured at
        /// the time of the restore point creation.</param>
        /// <param name="provisioningState">Gets the provisioning state of the
        /// restore point.</param>
        /// <param name="consistencyMode">ConsistencyMode of the RestorePoint.
        /// Can be specified in the input while creating a restore point. For
        /// now, only CrashConsistent is accepted as a valid input. Please
        /// refer to https://aka.ms/RestorePoints for more details. Possible
        /// values include: 'CrashConsistent', 'FileSystemConsistent',
        /// 'ApplicationConsistent'</param>
        /// <param name="timeCreated">Gets the creation time of the restore
        /// point.</param>
        /// <param name="sourceRestorePoint">Resource Id of the source restore
        /// point from which a copy needs to be created.</param>
        /// <param name="instanceView">The restore point instance view.</param>
        public RestorePoint(string id = default(string), string name = default(string), string type = default(string), IList<ApiEntityReference> excludeDisks = default(IList<ApiEntityReference>), RestorePointSourceMetadata sourceMetadata = default(RestorePointSourceMetadata), string provisioningState = default(string), string consistencyMode = default(string), System.DateTime? timeCreated = default(System.DateTime?), ApiEntityReference sourceRestorePoint = default(ApiEntityReference), RestorePointInstanceView instanceView = default(RestorePointInstanceView))
            : base(id, name, type)
        {
            ExcludeDisks = excludeDisks;
            SourceMetadata = sourceMetadata;
            ProvisioningState = provisioningState;
            ConsistencyMode = consistencyMode;
            TimeCreated = timeCreated;
            SourceRestorePoint = sourceRestorePoint;
            InstanceView = instanceView;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of disk resource ids that the customer wishes to
        /// exclude from the restore point. If no disks are specified, all
        /// disks will be included.
        /// </summary>
        [JsonProperty(PropertyName = "properties.excludeDisks")]
        public IList<ApiEntityReference> ExcludeDisks { get; set; }

        /// <summary>
        /// Gets the details of the VM captured at the time of the restore
        /// point creation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceMetadata")]
        public RestorePointSourceMetadata SourceMetadata { get; set; }

        /// <summary>
        /// Gets the provisioning state of the restore point.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets consistencyMode of the RestorePoint. Can be specified
        /// in the input while creating a restore point. For now, only
        /// CrashConsistent is accepted as a valid input. Please refer to
        /// https://aka.ms/RestorePoints for more details. Possible values
        /// include: 'CrashConsistent', 'FileSystemConsistent',
        /// 'ApplicationConsistent'
        /// </summary>
        [JsonProperty(PropertyName = "properties.consistencyMode")]
        public string ConsistencyMode { get; set; }

        /// <summary>
        /// Gets the creation time of the restore point.
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeCreated")]
        public System.DateTime? TimeCreated { get; set; }

        /// <summary>
        /// Gets or sets resource Id of the source restore point from which a
        /// copy needs to be created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceRestorePoint")]
        public ApiEntityReference SourceRestorePoint { get; set; }

        /// <summary>
        /// Gets the restore point instance view.
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceView")]
        public RestorePointInstanceView InstanceView { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SourceMetadata != null)
            {
                SourceMetadata.Validate();
            }
        }
    }
}
