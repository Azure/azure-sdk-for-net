// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// This is the disk image base class.
    /// </summary>
    public partial class SharedGalleryDiskImage
    {
        /// <summary>
        /// Initializes a new instance of the SharedGalleryDiskImage class.
        /// </summary>
        public SharedGalleryDiskImage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SharedGalleryDiskImage class.
        /// </summary>
        /// <param name="diskSizeGB">This property indicates the size of the
        /// VHD to be created.</param>
        /// <param name="hostCaching">The host caching of the disk. Valid
        /// values are 'None', 'ReadOnly', and 'ReadWrite'. Possible values
        /// include: 'None', 'ReadOnly', 'ReadWrite'</param>
        public SharedGalleryDiskImage(int? diskSizeGB = default(int?), string hostCaching = default(string))
        {
            DiskSizeGB = diskSizeGB;
            HostCaching = hostCaching;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets this property indicates the size of the VHD to be created.
        /// </summary>
        [JsonProperty(PropertyName = "diskSizeGB")]
        public int? DiskSizeGB { get; private set; }

        /// <summary>
        /// Gets or sets the host caching of the disk. Valid values are 'None',
        /// 'ReadOnly', and 'ReadWrite'. Possible values include: 'None',
        /// 'ReadOnly', 'ReadWrite'
        /// </summary>
        [JsonProperty(PropertyName = "hostCaching")]
        public string HostCaching { get; set; }

    }
}
