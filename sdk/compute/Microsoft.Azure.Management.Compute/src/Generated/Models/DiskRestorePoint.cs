// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of disk restore point
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DiskRestorePoint : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the DiskRestorePoint class.
        /// </summary>
        public DiskRestorePoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiskRestorePoint class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="timeCreated">The timestamp of restorePoint
        /// creation</param>
        /// <param name="sourceResourceId">arm id of source disk</param>
        /// <param name="osType">The Operating System type. Possible values
        /// include: 'Windows', 'Linux'</param>
        /// <param name="hyperVGeneration">The hypervisor generation of the
        /// Virtual Machine. Applicable to OS disks only. Possible values
        /// include: 'V1', 'V2'</param>
        /// <param name="purchasePlan">Purchase plan information for the the
        /// image from which the OS disk was created.</param>
        /// <param name="familyId">id of the backing snapshot's MIS
        /// family</param>
        /// <param name="sourceUniqueId">unique incarnation id of the source
        /// disk</param>
        /// <param name="encryption">Encryption property can be used to encrypt
        /// data at rest with customer managed keys or platform managed
        /// keys.</param>
        public DiskRestorePoint(string id = default(string), string name = default(string), string type = default(string), System.DateTime? timeCreated = default(System.DateTime?), string sourceResourceId = default(string), OperatingSystemTypes? osType = default(OperatingSystemTypes?), string hyperVGeneration = default(string), PurchasePlan purchasePlan = default(PurchasePlan), string familyId = default(string), string sourceUniqueId = default(string), Encryption encryption = default(Encryption))
            : base(id, name, type)
        {
            TimeCreated = timeCreated;
            SourceResourceId = sourceResourceId;
            OsType = osType;
            HyperVGeneration = hyperVGeneration;
            PurchasePlan = purchasePlan;
            FamilyId = familyId;
            SourceUniqueId = sourceUniqueId;
            Encryption = encryption;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the timestamp of restorePoint creation
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeCreated")]
        public System.DateTime? TimeCreated { get; private set; }

        /// <summary>
        /// Gets arm id of source disk
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceResourceId")]
        public string SourceResourceId { get; private set; }

        /// <summary>
        /// Gets the Operating System type. Possible values include: 'Windows',
        /// 'Linux'
        /// </summary>
        [JsonProperty(PropertyName = "properties.osType")]
        public OperatingSystemTypes? OsType { get; private set; }

        /// <summary>
        /// Gets or sets the hypervisor generation of the Virtual Machine.
        /// Applicable to OS disks only. Possible values include: 'V1', 'V2'
        /// </summary>
        [JsonProperty(PropertyName = "properties.hyperVGeneration")]
        public string HyperVGeneration { get; set; }

        /// <summary>
        /// Gets or sets purchase plan information for the the image from which
        /// the OS disk was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.purchasePlan")]
        public PurchasePlan PurchasePlan { get; set; }

        /// <summary>
        /// Gets id of the backing snapshot's MIS family
        /// </summary>
        [JsonProperty(PropertyName = "properties.familyId")]
        public string FamilyId { get; private set; }

        /// <summary>
        /// Gets unique incarnation id of the source disk
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceUniqueId")]
        public string SourceUniqueId { get; private set; }

        /// <summary>
        /// Gets encryption property can be used to encrypt data at rest with
        /// customer managed keys or platform managed keys.
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryption")]
        public Encryption Encryption { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PurchasePlan != null)
            {
                PurchasePlan.Validate();
            }
        }
    }
}
