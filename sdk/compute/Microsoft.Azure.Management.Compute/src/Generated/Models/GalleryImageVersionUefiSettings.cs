// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Contains UEFI settings for the image version.
    /// </summary>
    public partial class GalleryImageVersionUefiSettings
    {
        /// <summary>
        /// Initializes a new instance of the GalleryImageVersionUefiSettings
        /// class.
        /// </summary>
        public GalleryImageVersionUefiSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GalleryImageVersionUefiSettings
        /// class.
        /// </summary>
        /// <param name="signatureTemplateNames">The name of the template(s)
        /// that contains default UEFI key signatures that will be added to the
        /// image.</param>
        public GalleryImageVersionUefiSettings(IList<string> signatureTemplateNames = default(IList<string>), UefiKeySignatures additionalSignatures = default(UefiKeySignatures))
        {
            SignatureTemplateNames = signatureTemplateNames;
            AdditionalSignatures = additionalSignatures;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the template(s) that contains default UEFI
        /// key signatures that will be added to the image.
        /// </summary>
        [JsonProperty(PropertyName = "signatureTemplateNames")]
        public IList<string> SignatureTemplateNames { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "additionalSignatures")]
        public UefiKeySignatures AdditionalSignatures { get; set; }

    }
}
