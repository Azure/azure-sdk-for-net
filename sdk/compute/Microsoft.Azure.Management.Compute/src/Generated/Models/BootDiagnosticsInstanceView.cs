// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The instance view of a virtual machine boot diagnostics.
    /// </summary>
    public partial class BootDiagnosticsInstanceView
    {
        /// <summary>
        /// Initializes a new instance of the BootDiagnosticsInstanceView
        /// class.
        /// </summary>
        public BootDiagnosticsInstanceView()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BootDiagnosticsInstanceView
        /// class.
        /// </summary>
        /// <param name="consoleScreenshotBlobUri">The console screenshot blob
        /// URI. &lt;br&gt;&lt;br&gt;NOTE: This will **not** be set if boot
        /// diagnostics is currently enabled with managed storage.</param>
        /// <param name="serialConsoleLogBlobUri">The serial console log blob
        /// Uri. &lt;br&gt;&lt;br&gt;NOTE: This will **not** be set if boot
        /// diagnostics is currently enabled with managed storage.</param>
        /// <param name="status">The boot diagnostics status information for
        /// the VM. &lt;br&gt;&lt;br&gt; NOTE: It will be set only if there are
        /// errors encountered in enabling boot diagnostics.</param>
        public BootDiagnosticsInstanceView(string consoleScreenshotBlobUri = default(string), string serialConsoleLogBlobUri = default(string), InstanceViewStatus status = default(InstanceViewStatus))
        {
            ConsoleScreenshotBlobUri = consoleScreenshotBlobUri;
            SerialConsoleLogBlobUri = serialConsoleLogBlobUri;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the console screenshot blob URI.
        /// &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;NOTE: This will **not** be set
        /// if boot diagnostics is currently enabled with managed storage.
        /// </summary>
        [JsonProperty(PropertyName = "consoleScreenshotBlobUri")]
        public string ConsoleScreenshotBlobUri { get; private set; }

        /// <summary>
        /// Gets the serial console log blob Uri.
        /// &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;NOTE: This will **not** be set
        /// if boot diagnostics is currently enabled with managed storage.
        /// </summary>
        [JsonProperty(PropertyName = "serialConsoleLogBlobUri")]
        public string SerialConsoleLogBlobUri { get; private set; }

        /// <summary>
        /// Gets the boot diagnostics status information for the VM.
        /// &amp;lt;br&amp;gt;&amp;lt;br&amp;gt; NOTE: It will be set only if
        /// there are errors encountered in enabling boot diagnostics.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public InstanceViewStatus Status { get; private set; }

    }
}
