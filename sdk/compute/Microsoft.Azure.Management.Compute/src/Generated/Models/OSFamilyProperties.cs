// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// OS family properties.
    /// </summary>
    public partial class OSFamilyProperties
    {
        /// <summary>
        /// Initializes a new instance of the OSFamilyProperties class.
        /// </summary>
        public OSFamilyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OSFamilyProperties class.
        /// </summary>
        /// <param name="name">The OS family name.</param>
        /// <param name="label">The OS family label.</param>
        /// <param name="versions">List of OS versions belonging to this
        /// family.</param>
        public OSFamilyProperties(string name = default(string), string label = default(string), IList<OSVersionPropertiesBase> versions = default(IList<OSVersionPropertiesBase>))
        {
            Name = name;
            Label = label;
            Versions = versions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the OS family name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the OS family label.
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; private set; }

        /// <summary>
        /// Gets list of OS versions belonging to this family.
        /// </summary>
        [JsonProperty(PropertyName = "versions")]
        public IList<OSVersionPropertiesBase> Versions { get; private set; }

    }
}
