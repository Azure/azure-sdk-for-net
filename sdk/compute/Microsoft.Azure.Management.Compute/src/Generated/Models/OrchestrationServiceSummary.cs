// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Summary for an orchestration service of a virtual machine scale set.
    /// </summary>
    public partial class OrchestrationServiceSummary
    {
        /// <summary>
        /// Initializes a new instance of the OrchestrationServiceSummary
        /// class.
        /// </summary>
        public OrchestrationServiceSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrchestrationServiceSummary
        /// class.
        /// </summary>
        /// <param name="serviceName">The name of the service. Possible values
        /// include: 'AutomaticRepairs',
        /// 'DummyOrchestrationServiceName'</param>
        /// <param name="serviceState">The current state of the service.
        /// Possible values include: 'NotRunning', 'Running',
        /// 'Suspended'</param>
        public OrchestrationServiceSummary(string serviceName = default(string), string serviceState = default(string))
        {
            ServiceName = serviceName;
            ServiceState = serviceState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the name of the service. Possible values include:
        /// 'AutomaticRepairs'
        /// </summary>
        [JsonProperty(PropertyName = "serviceName")]
        public string ServiceName { get; private set; }

        /// <summary>
        /// Gets the current state of the service. Possible values include:
        /// 'NotRunning', 'Running', 'Suspended'
        /// </summary>
        [JsonProperty(PropertyName = "serviceState")]
        public string ServiceState { get; private set; }

    }
}
