// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Specifies information about the gallery image definition that you want
    /// to create or update.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SharedGalleryImage : PirSharedGalleryResource
    {
        /// <summary>
        /// Initializes a new instance of the SharedGalleryImage class.
        /// </summary>
        public SharedGalleryImage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SharedGalleryImage class.
        /// </summary>
        /// <param name="osType">This property allows you to specify the type
        /// of the OS that is included in the disk when creating a VM from a
        /// managed image. &lt;br&gt;&lt;br&gt; Possible values are:
        /// &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**.
        /// Possible values include: 'Windows', 'Linux'</param>
        /// <param name="osState">This property allows the user to specify
        /// whether the virtual machines created under this image are
        /// 'Generalized' or 'Specialized'. Possible values include:
        /// 'Generalized', 'Specialized'</param>
        /// <param name="name">Resource name</param>
        /// <param name="location">Resource location</param>
        /// <param name="uniqueId">The unique id of this shared
        /// gallery.</param>
        /// <param name="endOfLifeDate">The end of life date of the gallery
        /// image definition. This property can be used for decommissioning
        /// purposes. This property is updatable.</param>
        /// <param name="hyperVGeneration">The hypervisor generation of the
        /// Virtual Machine. Applicable to OS disks only. Possible values
        /// include: 'V1', 'V2'</param>
        /// <param name="features">A list of gallery image features.</param>
        public SharedGalleryImage(OperatingSystemTypes osType, OperatingSystemStateTypes osState, GalleryImageIdentifier identifier, string name = default(string), string location = default(string), string uniqueId = default(string), System.DateTime? endOfLifeDate = default(System.DateTime?), RecommendedMachineConfiguration recommended = default(RecommendedMachineConfiguration), Disallowed disallowed = default(Disallowed), string hyperVGeneration = default(string), IList<GalleryImageFeature> features = default(IList<GalleryImageFeature>), ImagePurchasePlan purchasePlan = default(ImagePurchasePlan))
            : base(name, location, uniqueId)
        {
            OsType = osType;
            OsState = osState;
            EndOfLifeDate = endOfLifeDate;
            Identifier = identifier;
            Recommended = recommended;
            Disallowed = disallowed;
            HyperVGeneration = hyperVGeneration;
            Features = features;
            PurchasePlan = purchasePlan;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets this property allows you to specify the type of the OS
        /// that is included in the disk when creating a VM from a managed
        /// image. &amp;lt;br&amp;gt;&amp;lt;br&amp;gt; Possible values are:
        /// &amp;lt;br&amp;gt;&amp;lt;br&amp;gt; **Windows**
        /// &amp;lt;br&amp;gt;&amp;lt;br&amp;gt; **Linux**. Possible values
        /// include: 'Windows', 'Linux'
        /// </summary>
        [JsonProperty(PropertyName = "properties.osType")]
        public OperatingSystemTypes OsType { get; set; }

        /// <summary>
        /// Gets or sets this property allows the user to specify whether the
        /// virtual machines created under this image are 'Generalized' or
        /// 'Specialized'. Possible values include: 'Generalized',
        /// 'Specialized'
        /// </summary>
        [JsonProperty(PropertyName = "properties.osState")]
        public OperatingSystemStateTypes OsState { get; set; }

        /// <summary>
        /// Gets or sets the end of life date of the gallery image definition.
        /// This property can be used for decommissioning purposes. This
        /// property is updatable.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endOfLifeDate")]
        public System.DateTime? EndOfLifeDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.identifier")]
        public GalleryImageIdentifier Identifier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.recommended")]
        public RecommendedMachineConfiguration Recommended { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.disallowed")]
        public Disallowed Disallowed { get; set; }

        /// <summary>
        /// Gets or sets the hypervisor generation of the Virtual Machine.
        /// Applicable to OS disks only. Possible values include: 'V1', 'V2'
        /// </summary>
        [JsonProperty(PropertyName = "properties.hyperVGeneration")]
        public string HyperVGeneration { get; set; }

        /// <summary>
        /// Gets or sets a list of gallery image features.
        /// </summary>
        [JsonProperty(PropertyName = "properties.features")]
        public IList<GalleryImageFeature> Features { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.purchasePlan")]
        public ImagePurchasePlan PurchasePlan { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Identifier == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Identifier");
            }
            if (Identifier != null)
            {
                Identifier.Validate();
            }
        }
    }
}
