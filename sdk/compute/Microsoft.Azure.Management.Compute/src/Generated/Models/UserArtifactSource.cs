// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The source image from which the Image Version is going to be created.
    /// </summary>
    public partial class UserArtifactSource
    {
        /// <summary>
        /// Initializes a new instance of the UserArtifactSource class.
        /// </summary>
        public UserArtifactSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserArtifactSource class.
        /// </summary>
        /// <param name="mediaLink">Required. The mediaLink of the artifact,
        /// must be a readable storage page blob.</param>
        /// <param name="defaultConfigurationLink">Optional. The
        /// defaultConfigurationLink of the artifact, must be a readable
        /// storage page blob.</param>
        public UserArtifactSource(string mediaLink, string defaultConfigurationLink = default(string))
        {
            MediaLink = mediaLink;
            DefaultConfigurationLink = defaultConfigurationLink;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets required. The mediaLink of the artifact, must be a
        /// readable storage page blob.
        /// </summary>
        [JsonProperty(PropertyName = "mediaLink")]
        public string MediaLink { get; set; }

        /// <summary>
        /// Gets or sets optional. The defaultConfigurationLink of the
        /// artifact, must be a readable storage page blob.
        /// </summary>
        [JsonProperty(PropertyName = "defaultConfigurationLink")]
        public string DefaultConfigurationLink { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MediaLink == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MediaLink");
            }
        }
    }
}
