// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes a virtual machines network configuration's DNS settings.
    /// </summary>
    public partial class VirtualMachinePublicIPAddressDnsSettingsConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachinePublicIPAddressDnsSettingsConfiguration class.
        /// </summary>
        public VirtualMachinePublicIPAddressDnsSettingsConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachinePublicIPAddressDnsSettingsConfiguration class.
        /// </summary>
        /// <param name="domainNameLabel">The Domain name label prefix of the
        /// PublicIPAddress resources that will be created. The generated name
        /// label is the concatenation of the domain name label and vm network
        /// profile unique ID.</param>
        public VirtualMachinePublicIPAddressDnsSettingsConfiguration(string domainNameLabel)
        {
            DomainNameLabel = domainNameLabel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Domain name label prefix of the PublicIPAddress
        /// resources that will be created. The generated name label is the
        /// concatenation of the domain name label and vm network profile
        /// unique ID.
        /// </summary>
        [JsonProperty(PropertyName = "domainNameLabel")]
        public string DomainNameLabel { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DomainNameLabel == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DomainNameLabel");
            }
        }
    }
}
