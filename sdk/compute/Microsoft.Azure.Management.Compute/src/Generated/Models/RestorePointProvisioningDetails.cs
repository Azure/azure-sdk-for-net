// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class RestorePointProvisioningDetails
    {
        /// <summary>
        /// Initializes a new instance of the RestorePointProvisioningDetails
        /// class.
        /// </summary>
        public RestorePointProvisioningDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestorePointProvisioningDetails
        /// class.
        /// </summary>
        /// <param name="creationTime">Gets the creation time of the restore
        /// point.</param>
        /// <param name="totalUsedSizeInBytes">Gets the total size of the data
        /// in all the disks which are part of the restore point.</param>
        /// <param name="statusCode">Gets the status of the Create restore
        /// point operation.</param>
        /// <param name="statusMessage">Gets the status message of the Create
        /// restore point operation.</param>
        /// <param name="statusBlobSasUri">Read only SAS Uri of the status
        /// blob.</param>
        /// <param name="loggingBlobSasUri">Read only SAS Uri of the logging
        /// blob.</param>
        public RestorePointProvisioningDetails(System.DateTime? creationTime = default(System.DateTime?), long? totalUsedSizeInBytes = default(long?), int? statusCode = default(int?), string statusMessage = default(string), string statusBlobSasUri = default(string), string loggingBlobSasUri = default(string))
        {
            CreationTime = creationTime;
            TotalUsedSizeInBytes = totalUsedSizeInBytes;
            StatusCode = statusCode;
            StatusMessage = statusMessage;
            StatusBlobSasUri = statusBlobSasUri;
            LoggingBlobSasUri = loggingBlobSasUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the creation time of the restore point.
        /// </summary>
        [JsonProperty(PropertyName = "creationTime")]
        public System.DateTime? CreationTime { get; set; }

        /// <summary>
        /// Gets the total size of the data in all the disks which are part of
        /// the restore point.
        /// </summary>
        [JsonProperty(PropertyName = "totalUsedSizeInBytes")]
        public long? TotalUsedSizeInBytes { get; set; }

        /// <summary>
        /// Gets the status of the Create restore point operation.
        /// </summary>
        [JsonProperty(PropertyName = "statusCode")]
        public int? StatusCode { get; set; }

        /// <summary>
        /// Gets the status message of the Create restore point operation.
        /// </summary>
        [JsonProperty(PropertyName = "statusMessage")]
        public string StatusMessage { get; set; }

        /// <summary>
        /// Gets or sets read only SAS Uri of the status blob.
        /// </summary>
        [JsonProperty(PropertyName = "statusBlobSasUri")]
        public string StatusBlobSasUri { get; set; }

        /// <summary>
        /// Gets or sets read only SAS Uri of the logging blob.
        /// </summary>
        [JsonProperty(PropertyName = "loggingBlobSasUri")]
        public string LoggingBlobSasUri { get; set; }

    }
}
