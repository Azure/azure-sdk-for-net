// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes a virtual machine scale set operating system disk.
    /// </summary>
    public partial class VirtualMachineScaleSetOSDisk
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetOSDisk
        /// class.
        /// </summary>
        public VirtualMachineScaleSetOSDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineScaleSetOSDisk
        /// class.
        /// </summary>
        /// <param name="createOption">Specifies how the virtual machines in
        /// the scale set should be created. The only allowed value is:
        /// **FromImage.** This value is used when you are using an image to
        /// create the virtual machine. If you are using a platform image, you
        /// also use the imageReference element described above. If you are
        /// using a marketplace image, you  also use the plan element
        /// previously described. Possible values include: 'FromImage',
        /// 'Empty', 'Attach'</param>
        /// <param name="name">The disk name.</param>
        /// <param name="caching">Specifies the caching requirements. Possible
        /// values are: **None,** **ReadOnly,** **ReadWrite.** The default
        /// values are: **None for Standard storage. ReadOnly for Premium
        /// storage.**. Possible values include: 'None', 'ReadOnly',
        /// 'ReadWrite'</param>
        /// <param name="writeAcceleratorEnabled">Specifies whether
        /// writeAccelerator should be enabled or disabled on the disk.</param>
        /// <param name="diffDiskSettings">Specifies the ephemeral disk
        /// Settings for the operating system disk used by the virtual machine
        /// scale set.</param>
        /// <param name="diskSizeGB">Specifies the size of an empty data disk
        /// in gigabytes. This element can be used to overwrite the size of the
        /// disk in a virtual machine image. The property 'diskSizeGB' is the
        /// number of bytes x 1024^3 for the disk and the value cannot be
        /// larger than 1023.</param>
        /// <param name="osType">This property allows you to specify the type
        /// of the OS that is included in the disk if creating a VM from
        /// user-image or a specialized VHD. Possible values are: **Windows,**
        /// **Linux.**. Possible values include: 'Windows', 'Linux'</param>
        /// <param name="image">Specifies information about the unmanaged user
        /// image to base the scale set on.</param>
        /// <param name="vhdContainers">Specifies the container urls that are
        /// used to store operating system disks for the scale set.</param>
        /// <param name="managedDisk">The managed disk parameters.</param>
        /// <param name="deleteOption">Specifies whether OS Disk should be
        /// deleted or detached upon VMSS Flex deletion (This feature is
        /// available for VMSS with Flexible OrchestrationMode only).
        /// &lt;br&gt;&lt;br&gt; Possible values: &lt;br&gt;&lt;br&gt;
        /// **Delete** If this value is used, the OS disk is deleted when VMSS
        /// Flex VM is deleted.&lt;br&gt;&lt;br&gt; **Detach** If this value is
        /// used, the OS disk is retained after VMSS Flex VM is deleted.
        /// &lt;br&gt;&lt;br&gt; The default value is set to **Delete**. For an
        /// Ephemeral OS Disk, the default value is set to **Delete**. User
        /// cannot change the delete option for Ephemeral OS Disk. Possible
        /// values include: 'Delete', 'Detach'</param>
        public VirtualMachineScaleSetOSDisk(string createOption, string name = default(string), CachingTypes? caching = default(CachingTypes?), bool? writeAcceleratorEnabled = default(bool?), DiffDiskSettings diffDiskSettings = default(DiffDiskSettings), int? diskSizeGB = default(int?), OperatingSystemTypes? osType = default(OperatingSystemTypes?), VirtualHardDisk image = default(VirtualHardDisk), IList<string> vhdContainers = default(IList<string>), VirtualMachineScaleSetManagedDiskParameters managedDisk = default(VirtualMachineScaleSetManagedDiskParameters), string deleteOption = default(string))
        {
            Name = name;
            Caching = caching;
            WriteAcceleratorEnabled = writeAcceleratorEnabled;
            CreateOption = createOption;
            DiffDiskSettings = diffDiskSettings;
            DiskSizeGB = diskSizeGB;
            OsType = osType;
            Image = image;
            VhdContainers = vhdContainers;
            ManagedDisk = managedDisk;
            DeleteOption = deleteOption;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the disk name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets specifies the caching requirements. Possible values
        /// are: **None,** **ReadOnly,** **ReadWrite.** The default values are:
        /// **None for Standard storage. ReadOnly for Premium storage.**.
        /// Possible values include: 'None', 'ReadOnly', 'ReadWrite'
        /// </summary>
        [JsonProperty(PropertyName = "caching")]
        public CachingTypes? Caching { get; set; }

        /// <summary>
        /// Gets or sets specifies whether writeAccelerator should be enabled
        /// or disabled on the disk.
        /// </summary>
        [JsonProperty(PropertyName = "writeAcceleratorEnabled")]
        public bool? WriteAcceleratorEnabled { get; set; }

        /// <summary>
        /// Gets or sets specifies how the virtual machines in the scale set
        /// should be created. The only allowed value is: **FromImage.** This
        /// value is used when you are using an image to create the virtual
        /// machine. If you are using a platform image, you also use the
        /// imageReference element described above. If you are using a
        /// marketplace image, you  also use the plan element previously
        /// described. Possible values include: 'FromImage', 'Empty', 'Attach'
        /// </summary>
        [JsonProperty(PropertyName = "createOption")]
        public string CreateOption { get; set; }

        /// <summary>
        /// Gets or sets specifies the ephemeral disk Settings for the
        /// operating system disk used by the virtual machine scale set.
        /// </summary>
        [JsonProperty(PropertyName = "diffDiskSettings")]
        public DiffDiskSettings DiffDiskSettings { get; set; }

        /// <summary>
        /// Gets or sets specifies the size of an empty data disk in gigabytes.
        /// This element can be used to overwrite the size of the disk in a
        /// virtual machine image. The property 'diskSizeGB' is the number of
        /// bytes x 1024^3 for the disk and the value cannot be larger than
        /// 1023.
        /// </summary>
        [JsonProperty(PropertyName = "diskSizeGB")]
        public int? DiskSizeGB { get; set; }

        /// <summary>
        /// Gets or sets this property allows you to specify the type of the OS
        /// that is included in the disk if creating a VM from user-image or a
        /// specialized VHD. Possible values are: **Windows,** **Linux.**.
        /// Possible values include: 'Windows', 'Linux'
        /// </summary>
        [JsonProperty(PropertyName = "osType")]
        public OperatingSystemTypes? OsType { get; set; }

        /// <summary>
        /// Gets or sets specifies information about the unmanaged user image
        /// to base the scale set on.
        /// </summary>
        [JsonProperty(PropertyName = "image")]
        public VirtualHardDisk Image { get; set; }

        /// <summary>
        /// Gets or sets specifies the container urls that are used to store
        /// operating system disks for the scale set.
        /// </summary>
        [JsonProperty(PropertyName = "vhdContainers")]
        public IList<string> VhdContainers { get; set; }

        /// <summary>
        /// Gets or sets the managed disk parameters.
        /// </summary>
        [JsonProperty(PropertyName = "managedDisk")]
        public VirtualMachineScaleSetManagedDiskParameters ManagedDisk { get; set; }

        /// <summary>
        /// Gets or sets specifies whether OS Disk should be deleted or
        /// detached upon VMSS Flex deletion (This feature is available for
        /// VMSS with Flexible OrchestrationMode only).
        /// &amp;lt;br&amp;gt;&amp;lt;br&amp;gt; Possible values:
        /// &amp;lt;br&amp;gt;&amp;lt;br&amp;gt; **Delete** If this value is
        /// used, the OS disk is deleted when VMSS Flex VM is
        /// deleted.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt; **Detach** If this
        /// value is used, the OS disk is retained after VMSS Flex VM is
        /// deleted. &amp;lt;br&amp;gt;&amp;lt;br&amp;gt; The default value is
        /// set to **Delete**. For an Ephemeral OS Disk, the default value is
        /// set to **Delete**. User cannot change the delete option for
        /// Ephemeral OS Disk. Possible values include: 'Delete', 'Detach'
        /// </summary>
        [JsonProperty(PropertyName = "deleteOption")]
        public string DeleteOption { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CreateOption == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CreateOption");
            }
        }
    }
}
