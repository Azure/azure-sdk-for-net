// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Api input base class for LogAnalytics Api.
    /// </summary>
    public partial class LogAnalyticsInputBase
    {
        /// <summary>
        /// Initializes a new instance of the LogAnalyticsInputBase class.
        /// </summary>
        public LogAnalyticsInputBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogAnalyticsInputBase class.
        /// </summary>
        /// <param name="blobContainerSasUri">SAS Uri of the logging blob
        /// container to which LogAnalytics Api writes output logs to.</param>
        /// <param name="fromTime">From time of the query</param>
        /// <param name="toTime">To time of the query</param>
        /// <param name="groupByThrottlePolicy">Group query result by Throttle
        /// Policy applied.</param>
        /// <param name="groupByOperationName">Group query result by Operation
        /// Name.</param>
        /// <param name="groupByResourceName">Group query result by Resource
        /// Name.</param>
        /// <param name="groupByClientApplicationId">Group query result by
        /// Client Application ID.</param>
        /// <param name="groupByUserAgent">Group query result by User
        /// Agent.</param>
        public LogAnalyticsInputBase(string blobContainerSasUri, System.DateTime fromTime, System.DateTime toTime, bool? groupByThrottlePolicy = default(bool?), bool? groupByOperationName = default(bool?), bool? groupByResourceName = default(bool?), bool? groupByClientApplicationId = default(bool?), bool? groupByUserAgent = default(bool?))
        {
            BlobContainerSasUri = blobContainerSasUri;
            FromTime = fromTime;
            ToTime = toTime;
            GroupByThrottlePolicy = groupByThrottlePolicy;
            GroupByOperationName = groupByOperationName;
            GroupByResourceName = groupByResourceName;
            GroupByClientApplicationId = groupByClientApplicationId;
            GroupByUserAgent = groupByUserAgent;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets SAS Uri of the logging blob container to which
        /// LogAnalytics Api writes output logs to.
        /// </summary>
        [JsonProperty(PropertyName = "blobContainerSasUri")]
        public string BlobContainerSasUri { get; set; }

        /// <summary>
        /// Gets or sets from time of the query
        /// </summary>
        [JsonProperty(PropertyName = "fromTime")]
        public System.DateTime FromTime { get; set; }

        /// <summary>
        /// Gets or sets to time of the query
        /// </summary>
        [JsonProperty(PropertyName = "toTime")]
        public System.DateTime ToTime { get; set; }

        /// <summary>
        /// Gets or sets group query result by Throttle Policy applied.
        /// </summary>
        [JsonProperty(PropertyName = "groupByThrottlePolicy")]
        public bool? GroupByThrottlePolicy { get; set; }

        /// <summary>
        /// Gets or sets group query result by Operation Name.
        /// </summary>
        [JsonProperty(PropertyName = "groupByOperationName")]
        public bool? GroupByOperationName { get; set; }

        /// <summary>
        /// Gets or sets group query result by Resource Name.
        /// </summary>
        [JsonProperty(PropertyName = "groupByResourceName")]
        public bool? GroupByResourceName { get; set; }

        /// <summary>
        /// Gets or sets group query result by Client Application ID.
        /// </summary>
        [JsonProperty(PropertyName = "groupByClientApplicationId")]
        public bool? GroupByClientApplicationId { get; set; }

        /// <summary>
        /// Gets or sets group query result by User Agent.
        /// </summary>
        [JsonProperty(PropertyName = "groupByUserAgent")]
        public bool? GroupByUserAgent { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BlobContainerSasUri == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BlobContainerSasUri");
            }
        }
    }
}
