// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies settings related to VM Guest Patching on Linux.
    /// </summary>
    public partial class LinuxPatchSettings
    {
        /// <summary>
        /// Initializes a new instance of the LinuxPatchSettings class.
        /// </summary>
        public LinuxPatchSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinuxPatchSettings class.
        /// </summary>
        /// <param name="patchMode">Specifies the mode of VM Guest Patching to
        /// IaaS virtual machine or virtual machines associated to virtual
        /// machine scale set with OrchestrationMode as Flexible.&lt;br
        /// /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt;
        /// **ImageDefault** - The virtual machine's default patching
        /// configuration is used. &lt;br /&gt;&lt;br /&gt;
        /// **AutomaticByPlatform** - The virtual machine will be automatically
        /// updated by the platform. The property provisionVMAgent must be
        /// true. Possible values include: 'ImageDefault',
        /// 'AutomaticByPlatform'</param>
        /// <param name="assessmentMode">Specifies the mode of VM Guest Patch
        /// Assessment for the IaaS virtual machine.&lt;br /&gt;&lt;br /&gt;
        /// Possible values are:&lt;br /&gt;&lt;br /&gt; **ImageDefault** - You
        /// control the timing of patch assessments on a virtual machine.
        /// &lt;br /&gt;&lt;br /&gt; **AutomaticByPlatform** - The platform
        /// will trigger periodic patch assessments. The property
        /// provisionVMAgent must be true. Possible values include:
        /// 'ImageDefault', 'AutomaticByPlatform'</param>
        public LinuxPatchSettings(string patchMode = default(string), string assessmentMode = default(string))
        {
            PatchMode = patchMode;
            AssessmentMode = assessmentMode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies the mode of VM Guest Patching to IaaS
        /// virtual machine or virtual machines associated to virtual machine
        /// scale set with OrchestrationMode as Flexible.&amp;lt;br
        /// /&amp;gt;&amp;lt;br /&amp;gt; Possible values are:&amp;lt;br
        /// /&amp;gt;&amp;lt;br /&amp;gt; **ImageDefault** - The virtual
        /// machine's default patching configuration is used. &amp;lt;br
        /// /&amp;gt;&amp;lt;br /&amp;gt; **AutomaticByPlatform** - The virtual
        /// machine will be automatically updated by the platform. The property
        /// provisionVMAgent must be true. Possible values include:
        /// 'ImageDefault', 'AutomaticByPlatform'
        /// </summary>
        [JsonProperty(PropertyName = "patchMode")]
        public string PatchMode { get; set; }

        /// <summary>
        /// Gets or sets specifies the mode of VM Guest Patch Assessment for
        /// the IaaS virtual machine.&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;
        /// Possible values are:&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;
        /// **ImageDefault** - You control the timing of patch assessments on a
        /// virtual machine. &amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;
        /// **AutomaticByPlatform** - The platform will trigger periodic patch
        /// assessments. The property provisionVMAgent must be true. Possible
        /// values include: 'ImageDefault', 'AutomaticByPlatform'
        /// </summary>
        [JsonProperty(PropertyName = "assessmentMode")]
        public string AssessmentMode { get; set; }

    }
}
