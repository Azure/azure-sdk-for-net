// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ConfidentialVMEncryptionType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ConfidentialVMEncryptionType
    {
        [EnumMember(Value = "EncryptedVMGuestStateOnlyWithPmk")]
        EncryptedVMGuestStateOnlyWithPmk,
        [EnumMember(Value = "EncryptedWithPmk")]
        EncryptedWithPmk,
        [EnumMember(Value = "EncryptedWithCmk")]
        EncryptedWithCmk
    }
    internal static class ConfidentialVMEncryptionTypeEnumExtension
    {
        internal static string ToSerializedValue(this ConfidentialVMEncryptionType? value)
        {
            return value == null ? null : ((ConfidentialVMEncryptionType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ConfidentialVMEncryptionType value)
        {
            switch( value )
            {
                case ConfidentialVMEncryptionType.EncryptedVMGuestStateOnlyWithPmk:
                    return "EncryptedVMGuestStateOnlyWithPmk";
                case ConfidentialVMEncryptionType.EncryptedWithPmk:
                    return "EncryptedWithPmk";
                case ConfidentialVMEncryptionType.EncryptedWithCmk:
                    return "EncryptedWithCmk";
            }
            return null;
        }

        internal static ConfidentialVMEncryptionType? ParseConfidentialVMEncryptionType(this string value)
        {
            switch( value )
            {
                case "EncryptedVMGuestStateOnlyWithPmk":
                    return ConfidentialVMEncryptionType.EncryptedVMGuestStateOnlyWithPmk;
                case "EncryptedWithPmk":
                    return ConfidentialVMEncryptionType.EncryptedWithPmk;
                case "EncryptedWithCmk":
                    return ConfidentialVMEncryptionType.EncryptedWithCmk;
            }
            return null;
        }
    }
}
