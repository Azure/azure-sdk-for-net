// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CloudServiceRolesOperations.
    /// </summary>
    public static partial class CloudServiceRolesOperationsExtensions
    {
            /// <summary>
            /// Gets a role from a cloud service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='roleName'>
            /// Name of the role.
            /// </param>
            /// <param name='resourceGroupName'>
            /// </param>
            /// <param name='cloudServiceName'>
            /// </param>
            public static CloudServiceRole Get(this ICloudServiceRolesOperations operations, string roleName, string resourceGroupName, string cloudServiceName)
            {
                return operations.GetAsync(roleName, resourceGroupName, cloudServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a role from a cloud service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='roleName'>
            /// Name of the role.
            /// </param>
            /// <param name='resourceGroupName'>
            /// </param>
            /// <param name='cloudServiceName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudServiceRole> GetAsync(this ICloudServiceRolesOperations operations, string roleName, string resourceGroupName, string cloudServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(roleName, resourceGroupName, cloudServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of all roles in a cloud service. Use nextLink property in the
            /// response to get the next page of roles. Do this till nextLink is null to
            /// fetch all the roles.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// </param>
            /// <param name='cloudServiceName'>
            /// </param>
            public static IPage<CloudServiceRole> List(this ICloudServiceRolesOperations operations, string resourceGroupName, string cloudServiceName)
            {
                return operations.ListAsync(resourceGroupName, cloudServiceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of all roles in a cloud service. Use nextLink property in the
            /// response to get the next page of roles. Do this till nextLink is null to
            /// fetch all the roles.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// </param>
            /// <param name='cloudServiceName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<CloudServiceRole>> ListAsync(this ICloudServiceRolesOperations operations, string resourceGroupName, string cloudServiceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, cloudServiceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of all roles in a cloud service. Use nextLink property in the
            /// response to get the next page of roles. Do this till nextLink is null to
            /// fetch all the roles.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<CloudServiceRole> ListNext(this ICloudServiceRolesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of all roles in a cloud service. Use nextLink property in the
            /// response to get the next page of roles. Do this till nextLink is null to
            /// fetch all the roles.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<CloudServiceRole>> ListNextAsync(this ICloudServiceRolesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
