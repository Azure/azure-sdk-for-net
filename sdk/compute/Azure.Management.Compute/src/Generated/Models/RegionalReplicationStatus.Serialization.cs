// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.Compute.Models
{
    public partial class RegionalReplicationStatus : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Region != null)
            {
                writer.WritePropertyName("region");
                writer.WriteStringValue(Region);
            }
            if (State != null)
            {
                writer.WritePropertyName("state");
                writer.WriteStringValue(State.Value.ToString());
            }
            if (Details != null)
            {
                writer.WritePropertyName("details");
                writer.WriteStringValue(Details);
            }
            if (Progress != null)
            {
                writer.WritePropertyName("progress");
                writer.WriteNumberValue(Progress.Value);
            }
            writer.WriteEndObject();
        }

        internal static RegionalReplicationStatus DeserializeRegionalReplicationStatus(JsonElement element)
        {
            string region = default;
            ReplicationState? state = default;
            string details = default;
            int? progress = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("region"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    region = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("state"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    state = new ReplicationState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("details"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    details = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("progress"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    progress = property.Value.GetInt32();
                    continue;
                }
            }
            return new RegionalReplicationStatus(region, state, details, progress);
        }
    }
}
