// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.Compute.Models
{
    public partial class WindowsConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (ProvisionVMAgent != null)
            {
                writer.WritePropertyName("provisionVMAgent");
                writer.WriteBooleanValue(ProvisionVMAgent.Value);
            }
            if (EnableAutomaticUpdates != null)
            {
                writer.WritePropertyName("enableAutomaticUpdates");
                writer.WriteBooleanValue(EnableAutomaticUpdates.Value);
            }
            if (TimeZone != null)
            {
                writer.WritePropertyName("timeZone");
                writer.WriteStringValue(TimeZone);
            }
            if (AdditionalUnattendContent != null)
            {
                writer.WritePropertyName("additionalUnattendContent");
                writer.WriteStartArray();
                foreach (var item in AdditionalUnattendContent)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (WinRM != null)
            {
                writer.WritePropertyName("winRM");
                writer.WriteObjectValue(WinRM);
            }
            writer.WriteEndObject();
        }

        internal static WindowsConfiguration DeserializeWindowsConfiguration(JsonElement element)
        {
            bool? provisionVMAgent = default;
            bool? enableAutomaticUpdates = default;
            string timeZone = default;
            IList<AdditionalUnattendContent> additionalUnattendContent = default;
            WinRMConfiguration winRM = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisionVMAgent"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    provisionVMAgent = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("enableAutomaticUpdates"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    enableAutomaticUpdates = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("timeZone"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    timeZone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("additionalUnattendContent"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<AdditionalUnattendContent> array = new List<AdditionalUnattendContent>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(Models.AdditionalUnattendContent.DeserializeAdditionalUnattendContent(item));
                        }
                    }
                    additionalUnattendContent = array;
                    continue;
                }
                if (property.NameEquals("winRM"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    winRM = WinRMConfiguration.DeserializeWinRMConfiguration(property.Value);
                    continue;
                }
            }
            return new WindowsConfiguration(provisionVMAgent, enableAutomaticUpdates, timeZone, additionalUnattendContent, winRM);
        }
    }
}
