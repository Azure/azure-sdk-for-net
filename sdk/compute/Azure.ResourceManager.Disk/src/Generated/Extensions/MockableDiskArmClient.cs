// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.Disk.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableDiskArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableDiskArmClient"/> class for mocking. </summary>
        protected MockableDiskArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableDiskArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableDiskArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableDiskArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="ManagedDiskResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ManagedDiskResource.CreateResourceIdentifier" /> to create a <see cref="ManagedDiskResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedDiskResource"/> object. </returns>
        public virtual ManagedDiskResource GetManagedDiskResource(ResourceIdentifier id)
        {
            ManagedDiskResource.ValidateResourceId(id);
            return new ManagedDiskResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="DiskAccessResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DiskAccessResource.CreateResourceIdentifier" /> to create a <see cref="DiskAccessResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DiskAccessResource"/> object. </returns>
        public virtual DiskAccessResource GetDiskAccessResource(ResourceIdentifier id)
        {
            DiskAccessResource.ValidateResourceId(id);
            return new DiskAccessResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="DiskPrivateEndpointConnectionResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DiskPrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create a <see cref="DiskPrivateEndpointConnectionResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DiskPrivateEndpointConnectionResource"/> object. </returns>
        public virtual DiskPrivateEndpointConnectionResource GetDiskPrivateEndpointConnectionResource(ResourceIdentifier id)
        {
            DiskPrivateEndpointConnectionResource.ValidateResourceId(id);
            return new DiskPrivateEndpointConnectionResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="DiskEncryptionSetResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DiskEncryptionSetResource.CreateResourceIdentifier" /> to create a <see cref="DiskEncryptionSetResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DiskEncryptionSetResource"/> object. </returns>
        public virtual DiskEncryptionSetResource GetDiskEncryptionSetResource(ResourceIdentifier id)
        {
            DiskEncryptionSetResource.ValidateResourceId(id);
            return new DiskEncryptionSetResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="DiskRestorePointResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DiskRestorePointResource.CreateResourceIdentifier" /> to create a <see cref="DiskRestorePointResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DiskRestorePointResource"/> object. </returns>
        public virtual DiskRestorePointResource GetDiskRestorePointResource(ResourceIdentifier id)
        {
            DiskRestorePointResource.ValidateResourceId(id);
            return new DiskRestorePointResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SnapshotResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SnapshotResource.CreateResourceIdentifier" /> to create a <see cref="SnapshotResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SnapshotResource"/> object. </returns>
        public virtual SnapshotResource GetSnapshotResource(ResourceIdentifier id)
        {
            SnapshotResource.ValidateResourceId(id);
            return new SnapshotResource(Client, id);
        }
    }
}
