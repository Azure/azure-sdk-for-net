// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.ComputeRecommender.Mocking
{
    /// <summary> A class to add extension methods to SubscriptionResource. </summary>
    public partial class MockableComputeRecommenderSubscriptionResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableComputeRecommenderSubscriptionResource"/> class for mocking. </summary>
        protected MockableComputeRecommenderSubscriptionResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableComputeRecommenderSubscriptionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableComputeRecommenderSubscriptionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of ComputeDiagnosticBaseResources in the SubscriptionResource. </summary>
        /// <returns> An object representing collection of ComputeDiagnosticBaseResources and their operations over a ComputeDiagnosticBaseResource. </returns>
        public virtual ComputeDiagnosticBaseCollection GetComputeDiagnosticBases()
        {
            return GetCachedClient(client => new ComputeDiagnosticBaseCollection(client, Id));
        }

        /// <summary>
        /// Gets Spot Placement Scores metadata.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/placementScores/spot</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComputeDiagnosticBase_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-05</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="ComputeDiagnosticBaseResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="location"> The name of the Azure region. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        [ForwardsClientCalls]
        public virtual async Task<Response<ComputeDiagnosticBaseResource>> GetComputeDiagnosticBaseAsync(AzureLocation location, CancellationToken cancellationToken = default)
        {
            return await GetComputeDiagnosticBases().GetAsync(location, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets Spot Placement Scores metadata.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/placementScores/spot</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ComputeDiagnosticBase_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-05</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="ComputeDiagnosticBaseResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="location"> The name of the Azure region. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        [ForwardsClientCalls]
        public virtual Response<ComputeDiagnosticBaseResource> GetComputeDiagnosticBase(AzureLocation location, CancellationToken cancellationToken = default)
        {
            return GetComputeDiagnosticBases().Get(location, cancellationToken);
        }
    }
}
