<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSharedGalleryImageAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetSharedGalleryImageAsync and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
SharedGalleryImagesClient client = new SharedGalleryImagesClient("<SubscriptionId>", credential);

Response response = await client.GetSharedGalleryImageAsync("<location>", "<galleryUniqueName>", "<galleryImageName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSharedGalleryImageAsync with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
SharedGalleryImagesClient client = new SharedGalleryImagesClient("<SubscriptionId>", credential);

Response response = await client.GetSharedGalleryImageAsync("<location>", "<galleryUniqueName>", "<galleryImageName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("osType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("osState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endOfLifeDate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("publisher").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("offer").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("sku").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("vCPUs").GetProperty("min").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("vCPUs").GetProperty("max").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("memory").GetProperty("min").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("memory").GetProperty("max").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("disallowed").GetProperty("diskTypes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hyperVGeneration").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("features")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("features")[0].GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("publisher").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("architecture").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("privacyStatementUri").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("eula").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("artifactTags").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("identifier").GetProperty("uniqueId").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
]]></code></example>
    </member>
    <member name="GetSharedGalleryImage(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetSharedGalleryImage and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
SharedGalleryImagesClient client = new SharedGalleryImagesClient("<SubscriptionId>", credential);

Response response = client.GetSharedGalleryImage("<location>", "<galleryUniqueName>", "<galleryImageName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSharedGalleryImage with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
SharedGalleryImagesClient client = new SharedGalleryImagesClient("<SubscriptionId>", credential);

Response response = client.GetSharedGalleryImage("<location>", "<galleryUniqueName>", "<galleryImageName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("osType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("osState").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("endOfLifeDate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("publisher").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("offer").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("sku").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("vCPUs").GetProperty("min").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("vCPUs").GetProperty("max").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("memory").GetProperty("min").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("memory").GetProperty("max").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("disallowed").GetProperty("diskTypes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hyperVGeneration").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("features")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("features")[0].GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("publisher").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("product").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("architecture").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("privacyStatementUri").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("eula").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("artifactTags").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("identifier").GetProperty("uniqueId").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
]]></code></example>
    </member>
    <member name="GetSharedGalleryImagesAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetSharedGalleryImagesAsync and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
SharedGalleryImagesClient client = new SharedGalleryImagesClient("<SubscriptionId>", credential);

await foreach (BinaryData item in client.GetSharedGalleryImagesAsync("<location>", "<galleryUniqueName>", null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSharedGalleryImagesAsync with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
SharedGalleryImagesClient client = new SharedGalleryImagesClient("<SubscriptionId>", credential);

await foreach (BinaryData item in client.GetSharedGalleryImagesAsync("<location>", "<galleryUniqueName>", "tenant", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("osType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("osState").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("endOfLifeDate").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("publisher").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("offer").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("sku").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("vCPUs").GetProperty("min").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("vCPUs").GetProperty("max").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("memory").GetProperty("min").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("memory").GetProperty("max").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("disallowed").GetProperty("diskTypes")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hyperVGeneration").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("features")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("features")[0].GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("publisher").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("architecture").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("privacyStatementUri").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("eula").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("artifactTags").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("identifier").GetProperty("uniqueId").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("location").ToString());
}
]]></code></example>
    </member>
    <member name="GetSharedGalleryImages(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetSharedGalleryImages and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
SharedGalleryImagesClient client = new SharedGalleryImagesClient("<SubscriptionId>", credential);

foreach (BinaryData item in client.GetSharedGalleryImages("<location>", "<galleryUniqueName>", null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSharedGalleryImages with all parameters and parse the result.
<code><![CDATA[
TokenCredential credential = new DefaultAzureCredential();
SharedGalleryImagesClient client = new SharedGalleryImagesClient("<SubscriptionId>", credential);

foreach (BinaryData item in client.GetSharedGalleryImages("<location>", "<galleryUniqueName>", "tenant", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("osType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("osState").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("endOfLifeDate").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("publisher").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("offer").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("identifier").GetProperty("sku").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("vCPUs").GetProperty("min").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("vCPUs").GetProperty("max").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("memory").GetProperty("min").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommended").GetProperty("memory").GetProperty("max").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("disallowed").GetProperty("diskTypes")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hyperVGeneration").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("features")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("features")[0].GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("publisher").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("purchasePlan").GetProperty("product").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("architecture").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("privacyStatementUri").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("eula").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("artifactTags").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("identifier").GetProperty("uniqueId").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("location").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>