// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute.Models;

namespace Azure.ResourceManager.Compute
{
    public partial class Sample_SshPublicKeyResource_GenerateKeyPair_GenerateAnSSHKeyPair
    {
        // Generate an SSH key pair.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GenerateKeyPair()
        {
            // Generated from example definition: 
            // this example is just showing the usage of "SshPublicKeys_GenerateKeyPair" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this SshPublicKeyResource created on azure
            // for more information of creating SshPublicKeyResource, please refer to the document of SshPublicKeyResource
            string subscriptionId = "{subscription-id}";
            string resourceGroupName = "myResourceGroup";
            string sshPublicKeyName = "mySshPublicKeyName";
            ResourceIdentifier sshPublicKeyResourceId = Compute.SshPublicKeyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, sshPublicKeyName);
            Compute.SshPublicKeyResource sshPublicKey = client.GetSshPublicKeyResource(sshPublicKeyResourceId);

            // invoke the operation
            Compute.Models.SshPublicKeyGenerateKeyPairResult result = await sshPublicKey.GenerateKeyPairAsync();

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
