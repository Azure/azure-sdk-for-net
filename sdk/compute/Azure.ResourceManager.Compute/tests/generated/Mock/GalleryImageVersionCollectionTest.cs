// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for GalleryImageVersion. </summary>
    public partial class GalleryImageVersionCollectionMockTests : MockTestBase
    {
        public GalleryImageVersionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Compute.GalleryImageVersionCollection> GetGalleryImageVersionCollectionAsync(string resourceGroupName, string galleryName, string galleryImageName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            GalleryCollection galleryCollection = resourceGroup.GetGalleries();
            var galleryOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(galleryCollection, galleryName);
            Gallery gallery = galleryOperation.Value;
            GalleryImageCollection galleryImageCollection = gallery.GetGalleryImages();
            var galleryImageOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(galleryImageCollection, galleryImageName);
            GalleryImage galleryImage = galleryImageOperation.Value;
            GalleryImageVersionCollection galleryImageVersionCollection = galleryImage.GetGalleryImageVersions();
            return galleryImageVersionCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a simple Gallery Image Version using VM as source.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "1.0.0");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: Create or update a simple Gallery Image Version using managed image as source.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            string galleryImageVersionName = "1.0.0";
            Compute.GalleryImageVersionData galleryImageVersion = new Compute.GalleryImageVersionData("West US")
            {
                PublishingProfile = new Compute.Models.GalleryImageVersionPublishingProfile(),
                StorageProfile = new Compute.Models.GalleryImageVersionStorageProfile()
                {
                    Source = new Compute.Models.GalleryArtifactVersionSource()
                    {
                        Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}",
                    },
                },
            };

            await collection.CreateOrUpdateAsync(galleryImageVersionName, galleryImageVersion);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync3()
        {
            // Example: Create or update a simple Gallery Image Version using mix of disks and snapshots as a source.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            string galleryImageVersionName = "1.0.0";
            Compute.GalleryImageVersionData galleryImageVersion = new Compute.GalleryImageVersionData("West US")
            {
                PublishingProfile = new Compute.Models.GalleryImageVersionPublishingProfile(),
                StorageProfile = new Compute.Models.GalleryImageVersionStorageProfile()
                {
                    OsDiskImage = new Compute.Models.GalleryOSDiskImage()
                    {
                        HostCaching = Compute.Models.HostCaching.ReadOnly,
                        Source = new Compute.Models.GalleryArtifactVersionSource()
                        {
                            Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/snapshots/{osSnapshotName}",
                        },
                    },
                },
            };

            await collection.CreateOrUpdateAsync(galleryImageVersionName, galleryImageVersion);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync4()
        {
            // Example: Create or update a simple Gallery Image Version using shared image as source.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            string galleryImageVersionName = "1.0.0";
            Compute.GalleryImageVersionData galleryImageVersion = new Compute.GalleryImageVersionData("West US")
            {
                PublishingProfile = new Compute.Models.GalleryImageVersionPublishingProfile(),
                StorageProfile = new Compute.Models.GalleryImageVersionStorageProfile()
                {
                    Source = new Compute.Models.GalleryArtifactVersionSource()
                    {
                        Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionName}",
                    },
                },
            };

            await collection.CreateOrUpdateAsync(galleryImageVersionName, galleryImageVersion);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync5()
        {
            // Example: Create or update a simple Gallery Image Version using snapshots as a source.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            string galleryImageVersionName = "1.0.0";
            Compute.GalleryImageVersionData galleryImageVersion = new Compute.GalleryImageVersionData("West US")
            {
                PublishingProfile = new Compute.Models.GalleryImageVersionPublishingProfile(),
                StorageProfile = new Compute.Models.GalleryImageVersionStorageProfile()
                {
                    OsDiskImage = new Compute.Models.GalleryOSDiskImage()
                    {
                        HostCaching = Compute.Models.HostCaching.ReadOnly,
                        Source = new Compute.Models.GalleryArtifactVersionSource()
                        {
                            Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/snapshots/{osSnapshotName}",
                        },
                    },
                },
            };

            await collection.CreateOrUpdateAsync(galleryImageVersionName, galleryImageVersion);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync6()
        {
            // Example: Create or update a simple Gallery Image Version using vhd as a source.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            string galleryImageVersionName = "1.0.0";
            Compute.GalleryImageVersionData galleryImageVersion = new Compute.GalleryImageVersionData("West US")
            {
                PublishingProfile = new Compute.Models.GalleryImageVersionPublishingProfile(),
                StorageProfile = new Compute.Models.GalleryImageVersionStorageProfile()
                {
                    OsDiskImage = new Compute.Models.GalleryOSDiskImage()
                    {
                        HostCaching = Compute.Models.HostCaching.ReadOnly,
                        Source = new Compute.Models.GalleryArtifactVersionSource()
                        {
                            Id = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/{storageAccount}",
                            Uri = "https://gallerysourcencus.blob.core.windows.net/myvhds/Windows-Server-2012-R2-20171216-en.us-128GB.vhd",
                        },
                    },
                },
            };

            await collection.CreateOrUpdateAsync(galleryImageVersionName, galleryImageVersion);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a gallery image version with replication status.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            await TestHelper.GetExampleInstanceAsync(collection, "1.0.0");
        }

        [RecordedTest]
        public async Task GetAsync2()
        {
            // Example: Get a gallery image version with snapshots as a source.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            string galleryImageVersionName = "1.0.0";
            Compute.Models.ReplicationStatusTypes? expand = null;

            await collection.GetAsync(galleryImageVersionName, expand);
        }

        [RecordedTest]
        public async Task GetAsync3()
        {
            // Example: Get a gallery image version with vhd as a source.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            string galleryImageVersionName = "1.0.0";
            Compute.Models.ReplicationStatusTypes? expand = null;

            await collection.GetAsync(galleryImageVersionName, expand);
        }

        [RecordedTest]
        public async Task GetAsync4()
        {
            // Example: Get a gallery image version.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            string galleryImageVersionName = "1.0.0";
            Compute.Models.ReplicationStatusTypes? expand = null;

            await collection.GetAsync(galleryImageVersionName, expand);
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List gallery image versions in a gallery image definition.
            var collection = await GetGalleryImageVersionCollectionAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
