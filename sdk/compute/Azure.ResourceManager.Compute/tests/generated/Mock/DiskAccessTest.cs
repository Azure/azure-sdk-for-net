// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for DiskAccess. </summary>
    public partial class DiskAccessMockTests : MockTestBase
    {
        public DiskAccessMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Compute.DiskAccessCollection> GetDiskAccessCollectionAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            DiskAccessCollection diskAccessCollection = resourceGroup.GetDiskAccesses();
            return diskAccessCollection;
        }

        private async Task<Compute.DiskAccess> GetDiskAccessAsync()
        {
            var collection = await GetDiskAccessCollectionAsync("myResourceGroup");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "myDiskAccess");
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get information about a disk access resource with private endpoints.
            var diskAccess = await GetDiskAccessAsync();

            await diskAccess.GetAsync();
        }

        [RecordedTest]
        public async Task GetAsync2()
        {
            // Example: Get information about a disk access resource.
            var diskAccess = await GetDiskAccessAsync();

            await diskAccess.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete a disk access resource.
            var diskAccess = await GetDiskAccessAsync();

            await diskAccess.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Update a disk access resource.
            var diskAccess = await GetDiskAccessAsync();
            Compute.Models.DiskAccessUpdate diskAccess2 = new Compute.Models.DiskAccessUpdate();

            await diskAccess.UpdateAsync(diskAccess2);
        }

        [RecordedTest]
        public async Task GetPrivateLinkResourcesAsync()
        {
            // Example: List all possible private link resources under disk access resource.
            var diskAccess = await GetDiskAccessAsync();

            await diskAccess.GetPrivateLinkResourcesAsync();
        }
    }
}
