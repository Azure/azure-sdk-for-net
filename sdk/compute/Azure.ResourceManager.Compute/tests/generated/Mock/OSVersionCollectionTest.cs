// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for OSVersion. </summary>
    public partial class OSVersionCollectionMockTests : MockTestBase
    {
        public OSVersionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Compute.OSVersionCollection> GetOSVersionCollectionAsync()
        {
            OSVersionCollection oSVersionCollection = (await GetArmClient().GetDefaultSubscriptionAsync()).GetOSVersions();
            return await Task.FromResult(oSVersionCollection);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get Cloud Service OS Version
            var collection = await GetOSVersionCollectionAsync();
            await TestHelper.GetExampleInstanceAsync(collection, "westus2", "WA-GUEST-OS-3.90_202010-02");
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List Cloud Service OS Versions in a subscription
            var collection = await GetOSVersionCollectionAsync();
            TestHelper.GetAllExampleInstanceAsync(collection, "westus2").AsPages();
        }
    }
}
