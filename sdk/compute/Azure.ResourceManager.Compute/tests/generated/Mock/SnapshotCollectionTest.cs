// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for Snapshot. </summary>
    public partial class SnapshotCollectionMockTests : MockTestBase
    {
        public SnapshotCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Compute.SnapshotCollection> GetSnapshotCollectionAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            SnapshotCollection snapshotCollection = resourceGroup.GetSnapshots();
            return snapshotCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create a snapshot by importing an unmanaged blob from a different subscription.
            var collection = await GetSnapshotCollectionAsync("myResourceGroup");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "mySnapshot1");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: Create a snapshot by importing an unmanaged blob from the same subscription.
            var collection = await GetSnapshotCollectionAsync("myResourceGroup");
            string snapshotName = "mySnapshot1";
            Compute.SnapshotData snapshot = new Compute.SnapshotData("West US")
            {
                CreationData = new Compute.Models.CreationData(new Compute.Models.DiskCreateOption("Import"))
                {
                    SourceUri = "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
                },
            };

            await collection.CreateOrUpdateAsync(snapshotName, snapshot);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync3()
        {
            // Example: Create a snapshot from an existing snapshot in the same or a different subscription.
            var collection = await GetSnapshotCollectionAsync("myResourceGroup");
            string snapshotName = "mySnapshot2";
            Compute.SnapshotData snapshot = new Compute.SnapshotData("West US")
            {
                CreationData = new Compute.Models.CreationData(new Compute.Models.DiskCreateOption("Copy"))
                {
                    SourceResourceId = "subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot1",
                },
            };

            await collection.CreateOrUpdateAsync(snapshotName, snapshot);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get information about a snapshot.
            var collection = await GetSnapshotCollectionAsync("myResourceGroup");
            await TestHelper.GetExampleInstanceAsync(collection, "mySnapshot");
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List all snapshots in a resource group.
            var collection = await GetSnapshotCollectionAsync("myResourceGroup");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
