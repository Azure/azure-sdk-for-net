// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for Snapshot. </summary>
    public partial class SnapshotMockTests : MockTestBase
    {
        public SnapshotMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Compute.SnapshotCollection> GetSnapshotCollectionAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            SnapshotCollection snapshotCollection = resourceGroup.GetSnapshots();
            return snapshotCollection;
        }

        private async Task<Compute.Snapshot> GetSnapshotAsync()
        {
            var collection = await GetSnapshotCollectionAsync("myResourceGroup");
            var createOperation = await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "mySnapshot1");
            return createOperation.Value;
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get information about a snapshot.
            var snapshot = await GetSnapshotAsync();

            await snapshot.GetAsync();
        }
    }
}
