// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for DiskAccess. </summary>
    public partial class DiskAccessCollectionMockTests : MockTestBase
    {
        public DiskAccessCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            System.Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        private async Task<Compute.DiskAccessCollection> GetDiskAccessCollectionAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            DiskAccessCollection diskAccessCollection = resourceGroup.GetDiskAccesses();
            return diskAccessCollection;
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create a disk access resource.
            var collection = await GetDiskAccessCollectionAsync("myResourceGroup");
            await TestHelper.CreateOrUpdateExampleInstanceAsync(collection, "myDiskAccess");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get information about a disk access resource with private endpoints.
            var collection = await GetDiskAccessCollectionAsync("myResourceGroup");
            await TestHelper.GetExampleInstanceAsync(collection, "myDiskAccess");
        }

        [RecordedTest]
        public async Task GetAsync2()
        {
            // Example: Get information about a disk access resource.
            var collection = await GetDiskAccessCollectionAsync("myResourceGroup");
            string diskAccessName = "myDiskAccess";

            await collection.GetAsync(diskAccessName);
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List all disk access resources in a resource group.
            var collection = await GetDiskAccessCollectionAsync("myResourceGroup");
            TestHelper.GetAllExampleInstanceAsync(collection).AsPages();
        }
    }
}
