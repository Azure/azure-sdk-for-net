// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> The input for OrchestrationServiceState. </summary>
    public partial class OrchestrationServiceStateContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="OrchestrationServiceStateContent"/>. </summary>
        /// <param name="serviceName"> The name of the service. </param>
        /// <param name="action"> The action to be performed. </param>
        public OrchestrationServiceStateContent(OrchestrationServiceName serviceName, OrchestrationServiceStateAction action)
        {
            ServiceName = serviceName;
            Action = action;
        }

        /// <summary> Initializes a new instance of <see cref="OrchestrationServiceStateContent"/>. </summary>
        /// <param name="serviceName"> The name of the service. </param>
        /// <param name="action"> The action to be performed. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal OrchestrationServiceStateContent(OrchestrationServiceName serviceName, OrchestrationServiceStateAction action, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ServiceName = serviceName;
            Action = action;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="OrchestrationServiceStateContent"/> for deserialization. </summary>
        internal OrchestrationServiceStateContent()
        {
        }

        /// <summary> The name of the service. </summary>
        public OrchestrationServiceName ServiceName { get; }
        /// <summary> The action to be performed. </summary>
        public OrchestrationServiceStateAction Action { get; }
    }
}
