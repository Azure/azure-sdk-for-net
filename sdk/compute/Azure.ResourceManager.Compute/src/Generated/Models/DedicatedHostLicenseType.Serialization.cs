// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Compute.Models
{
    internal static partial class DedicatedHostLicenseTypeExtensions
    {
        public static string ToSerialString(this DedicatedHostLicenseType value) => value switch
        {
            DedicatedHostLicenseType.None => "None",
            DedicatedHostLicenseType.WindowsServerHybrid => "Windows_Server_Hybrid",
            DedicatedHostLicenseType.WindowsServerPerpetual => "Windows_Server_Perpetual",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DedicatedHostLicenseType value.")
        };

        public static DedicatedHostLicenseType ToDedicatedHostLicenseType(this string value)
        {
            if (string.Equals(value, "None", StringComparison.InvariantCultureIgnoreCase)) return DedicatedHostLicenseType.None;
            if (string.Equals(value, "Windows_Server_Hybrid", StringComparison.InvariantCultureIgnoreCase)) return DedicatedHostLicenseType.WindowsServerHybrid;
            if (string.Equals(value, "Windows_Server_Perpetual", StringComparison.InvariantCultureIgnoreCase)) return DedicatedHostLicenseType.WindowsServerPerpetual;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DedicatedHostLicenseType value.");
        }
    }
}
