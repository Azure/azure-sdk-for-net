// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys. </summary>
    public readonly partial struct DiskEncryptionSetIdentityType : IEquatable<DiskEncryptionSetIdentityType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="DiskEncryptionSetIdentityType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DiskEncryptionSetIdentityType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SystemAssignedValue = "SystemAssigned";
        private const string NoneValue = "None";

        /// <summary> SystemAssigned. </summary>
        public static DiskEncryptionSetIdentityType SystemAssigned { get; } = new DiskEncryptionSetIdentityType(SystemAssignedValue);
        /// <summary> None. </summary>
        public static DiskEncryptionSetIdentityType None { get; } = new DiskEncryptionSetIdentityType(NoneValue);
        /// <summary> Determines if two <see cref="DiskEncryptionSetIdentityType"/> values are the same. </summary>
        public static bool operator ==(DiskEncryptionSetIdentityType left, DiskEncryptionSetIdentityType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DiskEncryptionSetIdentityType"/> values are not the same. </summary>
        public static bool operator !=(DiskEncryptionSetIdentityType left, DiskEncryptionSetIdentityType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DiskEncryptionSetIdentityType"/>. </summary>
        public static implicit operator DiskEncryptionSetIdentityType(string value) => new DiskEncryptionSetIdentityType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DiskEncryptionSetIdentityType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DiskEncryptionSetIdentityType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
