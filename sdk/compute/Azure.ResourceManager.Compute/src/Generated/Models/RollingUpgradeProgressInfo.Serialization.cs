// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Compute.Models
{
    public partial class RollingUpgradeProgressInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (SuccessfulInstanceCount != null)
            {
                writer.WritePropertyName("successfulInstanceCount");
                writer.WriteNumberValue(SuccessfulInstanceCount.Value);
            }
            if (FailedInstanceCount != null)
            {
                writer.WritePropertyName("failedInstanceCount");
                writer.WriteNumberValue(FailedInstanceCount.Value);
            }
            if (InProgressInstanceCount != null)
            {
                writer.WritePropertyName("inProgressInstanceCount");
                writer.WriteNumberValue(InProgressInstanceCount.Value);
            }
            if (PendingInstanceCount != null)
            {
                writer.WritePropertyName("pendingInstanceCount");
                writer.WriteNumberValue(PendingInstanceCount.Value);
            }
            writer.WriteEndObject();
        }

        internal static RollingUpgradeProgressInfo DeserializeRollingUpgradeProgressInfo(JsonElement element)
        {
            int? successfulInstanceCount = default;
            int? failedInstanceCount = default;
            int? inProgressInstanceCount = default;
            int? pendingInstanceCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("successfulInstanceCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    successfulInstanceCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("failedInstanceCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    failedInstanceCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("inProgressInstanceCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    inProgressInstanceCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("pendingInstanceCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    pendingInstanceCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new RollingUpgradeProgressInfo(successfulInstanceCount, failedInstanceCount, inProgressInstanceCount, pendingInstanceCount);
        }
    }
}
