// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> Defines when it is acceptable to reboot a VM during a software update operation. </summary>
    public readonly partial struct VirtualMachineGuestPatchRebootSetting : IEquatable<VirtualMachineGuestPatchRebootSetting>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="VirtualMachineGuestPatchRebootSetting"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public VirtualMachineGuestPatchRebootSetting(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string IfRequiredValue = "IfRequired";
        private const string NeverValue = "Never";
        private const string AlwaysValue = "Always";

        /// <summary> IfRequired. </summary>
        public static VirtualMachineGuestPatchRebootSetting IfRequired { get; } = new VirtualMachineGuestPatchRebootSetting(IfRequiredValue);
        /// <summary> Never. </summary>
        public static VirtualMachineGuestPatchRebootSetting Never { get; } = new VirtualMachineGuestPatchRebootSetting(NeverValue);
        /// <summary> Always. </summary>
        public static VirtualMachineGuestPatchRebootSetting Always { get; } = new VirtualMachineGuestPatchRebootSetting(AlwaysValue);
        /// <summary> Determines if two <see cref="VirtualMachineGuestPatchRebootSetting"/> values are the same. </summary>
        public static bool operator ==(VirtualMachineGuestPatchRebootSetting left, VirtualMachineGuestPatchRebootSetting right) => left.Equals(right);
        /// <summary> Determines if two <see cref="VirtualMachineGuestPatchRebootSetting"/> values are not the same. </summary>
        public static bool operator !=(VirtualMachineGuestPatchRebootSetting left, VirtualMachineGuestPatchRebootSetting right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="VirtualMachineGuestPatchRebootSetting"/>. </summary>
        public static implicit operator VirtualMachineGuestPatchRebootSetting(string value) => new VirtualMachineGuestPatchRebootSetting(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is VirtualMachineGuestPatchRebootSetting other && Equals(other);
        /// <inheritdoc />
        public bool Equals(VirtualMachineGuestPatchRebootSetting other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
