// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> This property allows you to specify the operation type of gallery sharing update. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Add** &lt;br&gt;&lt;br&gt; **Remove** &lt;br&gt;&lt;br&gt; **Reset**. </summary>
    public readonly partial struct SharingUpdateOperationTypes : IEquatable<SharingUpdateOperationTypes>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="SharingUpdateOperationTypes"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public SharingUpdateOperationTypes(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AddValue = "Add";
        private const string RemoveValue = "Remove";
        private const string ResetValue = "Reset";

        /// <summary> Add. </summary>
        public static SharingUpdateOperationTypes Add { get; } = new SharingUpdateOperationTypes(AddValue);
        /// <summary> Remove. </summary>
        public static SharingUpdateOperationTypes Remove { get; } = new SharingUpdateOperationTypes(RemoveValue);
        /// <summary> Reset. </summary>
        public static SharingUpdateOperationTypes Reset { get; } = new SharingUpdateOperationTypes(ResetValue);
        /// <summary> Determines if two <see cref="SharingUpdateOperationTypes"/> values are the same. </summary>
        public static bool operator ==(SharingUpdateOperationTypes left, SharingUpdateOperationTypes right) => left.Equals(right);
        /// <summary> Determines if two <see cref="SharingUpdateOperationTypes"/> values are not the same. </summary>
        public static bool operator !=(SharingUpdateOperationTypes left, SharingUpdateOperationTypes right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="SharingUpdateOperationTypes"/>. </summary>
        public static implicit operator SharingUpdateOperationTypes(string value) => new SharingUpdateOperationTypes(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is SharingUpdateOperationTypes other && Equals(other);
        /// <inheritdoc />
        public bool Equals(SharingUpdateOperationTypes other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
