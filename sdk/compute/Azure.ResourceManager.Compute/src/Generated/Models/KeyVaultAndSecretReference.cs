// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> Key Vault Secret Url and vault id of the encryption key. </summary>
    public partial class KeyVaultAndSecretReference
    {
        /// <summary> Initializes a new instance of KeyVaultAndSecretReference. </summary>
        /// <param name="sourceVault"> Resource id of the KeyVault containing the key or secret. </param>
        /// <param name="secretUrl"> Url pointing to a key or secret in KeyVault. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceVault"/> or <paramref name="secretUrl"/> is null. </exception>
        public KeyVaultAndSecretReference(WritableSubResource sourceVault, string secretUrl)
        {
            if (sourceVault == null)
            {
                throw new ArgumentNullException(nameof(sourceVault));
            }
            if (secretUrl == null)
            {
                throw new ArgumentNullException(nameof(secretUrl));
            }

            SourceVault = sourceVault;
            SecretUrl = secretUrl;
        }

        /// <summary> Resource id of the KeyVault containing the key or secret. </summary>
        internal WritableSubResource SourceVault { get; set; }
        /// <summary> Gets or sets Id. </summary>
        public ResourceIdentifier SourceVaultId
        {
            get => SourceVault is null ? default : SourceVault.Id;
            set
            {
                if (SourceVault is null)
                    SourceVault = new WritableSubResource();
                SourceVault.Id = value;
            }
        }

        /// <summary> Url pointing to a key or secret in KeyVault. </summary>
        public string SecretUrl { get; set; }
    }
}
