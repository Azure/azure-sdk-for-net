// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> This property allows you to specify the permission of sharing gallery. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Private** &lt;br&gt;&lt;br&gt; **Groups**. </summary>
    public readonly partial struct GallerySharingPermissionTypes : IEquatable<GallerySharingPermissionTypes>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="GallerySharingPermissionTypes"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public GallerySharingPermissionTypes(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string PrivateValue = "Private";
        private const string GroupsValue = "Groups";

        /// <summary> Private. </summary>
        public static GallerySharingPermissionTypes Private { get; } = new GallerySharingPermissionTypes(PrivateValue);
        /// <summary> Groups. </summary>
        public static GallerySharingPermissionTypes Groups { get; } = new GallerySharingPermissionTypes(GroupsValue);
        /// <summary> Determines if two <see cref="GallerySharingPermissionTypes"/> values are the same. </summary>
        public static bool operator ==(GallerySharingPermissionTypes left, GallerySharingPermissionTypes right) => left.Equals(right);
        /// <summary> Determines if two <see cref="GallerySharingPermissionTypes"/> values are not the same. </summary>
        public static bool operator !=(GallerySharingPermissionTypes left, GallerySharingPermissionTypes right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="GallerySharingPermissionTypes"/>. </summary>
        public static implicit operator GallerySharingPermissionTypes(string value) => new GallerySharingPermissionTypes(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is GallerySharingPermissionTypes other && Equals(other);
        /// <inheritdoc />
        public bool Equals(GallerySharingPermissionTypes other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
