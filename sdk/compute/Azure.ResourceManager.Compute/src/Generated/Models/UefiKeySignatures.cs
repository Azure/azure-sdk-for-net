// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> Additional UEFI key signatures that will be added to the image in addition to the signature templates. </summary>
    public partial class UefiKeySignatures
    {
        /// <summary> Initializes a new instance of <see cref="UefiKeySignatures"/>. </summary>
        public UefiKeySignatures()
        {
            Kek = new ChangeTrackingList<UefiKey>();
            Db = new ChangeTrackingList<UefiKey>();
            Dbx = new ChangeTrackingList<UefiKey>();
        }

        /// <summary> Initializes a new instance of <see cref="UefiKeySignatures"/>. </summary>
        /// <param name="pk"> The Platform Key of this image version. </param>
        /// <param name="kek"> The Key Encryption Keys of this image version. </param>
        /// <param name="db"> The database of UEFI keys for this image version. </param>
        /// <param name="dbx"> The database of revoked UEFI keys for this image version. </param>
        internal UefiKeySignatures(UefiKey pk, IList<UefiKey> kek, IList<UefiKey> db, IList<UefiKey> dbx)
        {
            Pk = pk;
            Kek = kek;
            Db = db;
            Dbx = dbx;
        }

        /// <summary> The Platform Key of this image version. </summary>
        public UefiKey Pk { get; set; }
        /// <summary> The Key Encryption Keys of this image version. </summary>
        public IList<UefiKey> Kek { get; }
        /// <summary> The database of UEFI keys for this image version. </summary>
        public IList<UefiKey> Db { get; }
        /// <summary> The database of revoked UEFI keys for this image version. </summary>
        public IList<UefiKey> Dbx { get; }
    }
}
