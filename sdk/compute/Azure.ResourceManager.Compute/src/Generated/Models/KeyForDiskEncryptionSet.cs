// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> Key Vault Key Url to be used for server side encryption of Managed Disks and Snapshots. </summary>
    public partial class KeyForDiskEncryptionSet
    {
        /// <summary> Initializes a new instance of KeyForDiskEncryptionSet. </summary>
        /// <param name="keyUrl"> Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required regardless of rotationToLatestKeyVersionEnabled value. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyUrl"/> is null. </exception>
        public KeyForDiskEncryptionSet(string keyUrl)
        {
            if (keyUrl == null)
            {
                throw new ArgumentNullException(nameof(keyUrl));
            }

            KeyUrl = keyUrl;
        }

        /// <summary> Initializes a new instance of KeyForDiskEncryptionSet. </summary>
        /// <param name="sourceVault"> Resource id of the KeyVault containing the key or secret. This property is optional and cannot be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription. </param>
        /// <param name="keyUrl"> Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required regardless of rotationToLatestKeyVersionEnabled value. </param>
        internal KeyForDiskEncryptionSet(SourceVault sourceVault, string keyUrl)
        {
            SourceVault = sourceVault;
            KeyUrl = keyUrl;
        }

        /// <summary> Resource id of the KeyVault containing the key or secret. This property is optional and cannot be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription. </summary>
        public SourceVault SourceVault { get; set; }
        /// <summary> Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required regardless of rotationToLatestKeyVersionEnabled value. </summary>
        public string KeyUrl { get; set; }
    }
}
