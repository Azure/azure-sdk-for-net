// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Windows patch settings. </summary>
    public partial class WindowsVmGuestPatchAutomaticByPlatformSettings
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="WindowsVmGuestPatchAutomaticByPlatformSettings"/>. </summary>
        public WindowsVmGuestPatchAutomaticByPlatformSettings()
        {
        }

        /// <summary> Initializes a new instance of <see cref="WindowsVmGuestPatchAutomaticByPlatformSettings"/>. </summary>
        /// <param name="rebootSetting"> Specifies the reboot setting for all AutomaticByPlatform patch installation operations. </param>
        /// <param name="bypassPlatformSafetyChecksOnUserSchedule"> Enables customer to schedule patching without accidental upgrades. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal WindowsVmGuestPatchAutomaticByPlatformSettings(WindowsVmGuestPatchAutomaticByPlatformRebootSetting? rebootSetting, bool? bypassPlatformSafetyChecksOnUserSchedule, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            RebootSetting = rebootSetting;
            BypassPlatformSafetyChecksOnUserSchedule = bypassPlatformSafetyChecksOnUserSchedule;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Specifies the reboot setting for all AutomaticByPlatform patch installation operations. </summary>
        public WindowsVmGuestPatchAutomaticByPlatformRebootSetting? RebootSetting { get; set; }
        /// <summary> Enables customer to schedule patching without accidental upgrades. </summary>
        public bool? BypassPlatformSafetyChecksOnUserSchedule { get; set; }
    }
}
