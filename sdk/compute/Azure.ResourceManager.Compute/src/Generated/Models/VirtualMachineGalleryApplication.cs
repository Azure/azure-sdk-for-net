// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.Compute.Models
{
    /// <summary> Specifies the required information to reference a compute gallery application version. </summary>
    public partial class VirtualMachineGalleryApplication
    {
        /// <summary> Initializes a new instance of <see cref="VirtualMachineGalleryApplication"/>. </summary>
        /// <param name="packageReferenceId"> Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="packageReferenceId"/> is null. </exception>
        public VirtualMachineGalleryApplication(string packageReferenceId)
        {
            Argument.AssertNotNull(packageReferenceId, nameof(packageReferenceId));

            PackageReferenceId = packageReferenceId;
        }

        /// <summary> Initializes a new instance of <see cref="VirtualMachineGalleryApplication"/>. </summary>
        /// <param name="tags"> Optional, Specifies a passthrough value for more generic context. </param>
        /// <param name="order"> Optional, Specifies the order in which the packages have to be installed. </param>
        /// <param name="packageReferenceId"> Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}. </param>
        /// <param name="configurationReference"> Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided. </param>
        /// <param name="treatFailureAsDeploymentFailure"> Optional, If true, any failure for any operation in the VmApplication will fail the deployment. </param>
        /// <param name="enableAutomaticUpgrade"> If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS. </param>
        internal VirtualMachineGalleryApplication(string tags, int? order, string packageReferenceId, string configurationReference, bool? treatFailureAsDeploymentFailure, bool? enableAutomaticUpgrade)
        {
            Tags = tags;
            Order = order;
            PackageReferenceId = packageReferenceId;
            ConfigurationReference = configurationReference;
            TreatFailureAsDeploymentFailure = treatFailureAsDeploymentFailure;
            EnableAutomaticUpgrade = enableAutomaticUpgrade;
        }

        /// <summary> Optional, Specifies a passthrough value for more generic context. </summary>
        public string Tags { get; set; }
        /// <summary> Optional, Specifies the order in which the packages have to be installed. </summary>
        public int? Order { get; set; }
        /// <summary> Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}. </summary>
        public string PackageReferenceId { get; set; }
        /// <summary> Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided. </summary>
        public string ConfigurationReference { get; set; }
        /// <summary> Optional, If true, any failure for any operation in the VmApplication will fail the deployment. </summary>
        public bool? TreatFailureAsDeploymentFailure { get; set; }
        /// <summary> If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS. </summary>
        public bool? EnableAutomaticUpgrade { get; set; }
    }
}
