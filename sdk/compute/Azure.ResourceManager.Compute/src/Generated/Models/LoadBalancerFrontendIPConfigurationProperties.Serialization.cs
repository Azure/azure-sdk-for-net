// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Compute.Models
{
    public partial class LoadBalancerFrontendIPConfigurationProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PublicIPAddress))
            {
                writer.WritePropertyName("publicIPAddress");
                writer.WriteObjectValue(PublicIPAddress);
            }
            if (Optional.IsDefined(Subnet))
            {
                writer.WritePropertyName("subnet");
                writer.WriteObjectValue(Subnet);
            }
            if (Optional.IsDefined(PrivateIPAddress))
            {
                writer.WritePropertyName("privateIPAddress");
                writer.WriteStringValue(PrivateIPAddress);
            }
            writer.WriteEndObject();
        }

        internal static LoadBalancerFrontendIPConfigurationProperties DeserializeLoadBalancerFrontendIPConfigurationProperties(JsonElement element)
        {
            Optional<SubResource> publicIPAddress = default;
            Optional<SubResource> subnet = default;
            Optional<string> privateIPAddress = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("publicIPAddress"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    publicIPAddress = SubResource.DeserializeSubResource(property.Value);
                    continue;
                }
                if (property.NameEquals("subnet"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    subnet = SubResource.DeserializeSubResource(property.Value);
                    continue;
                }
                if (property.NameEquals("privateIPAddress"))
                {
                    privateIPAddress = property.Value.GetString();
                    continue;
                }
            }
            return new LoadBalancerFrontendIPConfigurationProperties(publicIPAddress.Value, subnet.Value, privateIPAddress.Value);
        }
    }
}
