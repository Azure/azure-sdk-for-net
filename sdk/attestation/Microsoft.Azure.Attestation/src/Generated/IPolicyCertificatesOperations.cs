// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Attestation
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// PolicyCertificatesOperations operations.
    /// </summary>
    public partial interface IPolicyCertificatesOperations
    {
        /// <summary>
        /// Retrieves the set of certificates used to express policy for the
        /// current tenant.
        /// </summary>
        /// <param name='tenantBaseUrl'>
        /// The tenant name, for example https://mytenant.attest.azure.net.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<object>> GetWithHttpMessagesAsync(string tenantBaseUrl, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Adds a new attestation policy certificate to the set of policy
        /// management certificates.
        /// </summary>
        /// <param name='tenantBaseUrl'>
        /// The tenant name, for example https://mytenant.attest.azure.net.
        /// </param>
        /// <param name='policyCertificateToAdd'>
        /// An RFC7519 JSON Web Token containing a claim named
        /// "aas-policyCertificate" whose value is an RFC7517 JSON Web Key
        /// which specifies a new key to add. The RFC7519 JWT must be signed
        /// with one of the existing signing certificates
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<object>> AddWithHttpMessagesAsync(string tenantBaseUrl, string policyCertificateToAdd, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the specified policy management certificate. Note that the
        /// final policy management certificate cannot be removed.
        /// </summary>
        /// <param name='tenantBaseUrl'>
        /// The tenant name, for example https://mytenant.attest.azure.net.
        /// </param>
        /// <param name='policyCertificateToRemove'>
        /// An RFC7519 JSON Web Token containing a claim named
        /// "aas-policyCertificate" whose value is an RFC7517 JSON Web Key
        /// which specifies a new key to update. The RFC7519 JWT must be signed
        /// with one of the existing signing certificates
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<object>> RemoveWithHttpMessagesAsync(string tenantBaseUrl, string policyCertificateToRemove, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
