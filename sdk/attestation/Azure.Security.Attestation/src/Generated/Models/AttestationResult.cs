// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Security.Cryptography.X509Certificates;

namespace Azure.Security.Attestation.Models
{
    /// <summary> A Microsoft Azure Attestation response token body - the body of a response token issued by MAA. </summary>
    public partial class AttestationResult
    {
        /// <summary> Initializes a new instance of AttestationResult. </summary>
        internal AttestationResult()
        {
        }

        /// <summary> Unique Identifier for the token. </summary>
        public string Jti { get; }
        /// <summary> The Principal who issued the token. </summary>
        public string Iss { get; }
        /// <summary> The time at which the token was issued, in the number of seconds since 1970-01-0T00:00:00Z UTC. </summary>
        public float? Iat { get; }
        /// <summary> The expiration time after which the token is no longer valid, in the number of seconds since 1970-01-0T00:00:00Z UTC. </summary>
        public float? Exp { get; }
        /// <summary> The not before time before which the token cannot be considered valid, in the number of seconds since 1970-01-0T00:00:00Z UTC. </summary>
        public float? Nbf { get; }
        /// <summary> An RFC 7800 Proof of Possession Key. </summary>
        public object Cnf { get; }
        /// <summary> The Nonce input to the attestation request, if provided. </summary>
        public string Nonce { get; }
        /// <summary> The Schema version of this structure. Current Value: 1.0. </summary>
        public string Version { get; }
        /// <summary> Runtime Claims. </summary>
        public object RuntimeClaims { get; }
        /// <summary> Inittime Claims. </summary>
        public object InittimeClaims { get; }
        /// <summary> Policy Generated Claims. </summary>
        public object PolicyClaims { get; }
        /// <summary> The Attestation type being attested. </summary>
        public string VerifierType { get; }
        /// <summary> The SHA256 hash of the BASE64URL encoded policy text used for attestation. </summary>
        public byte[] PolicyHash { get; }
        /// <summary> True if the enclave is debuggable, false otherwise. </summary>
        public bool? IsDebuggable { get; }
        /// <summary> The SGX Product ID for the enclave. </summary>
        public float? ProductId { get; }
        /// <summary> The HEX encoded SGX MRENCLAVE value for the enclave. </summary>
        public string MrEnclave { get; }
        /// <summary> The HEX encoded SGX MRSIGNER value for the enclave. </summary>
        public string MrSigner { get; }
        /// <summary> The SGX SVN value for the enclave. </summary>
        public float? Svn { get; }
        /// <summary> A copy of the RuntimeData specified as an input to the attest call. </summary>
        public byte[] EnclaveHeldData { get; }
        /// <summary> The SGX SVN value for the enclave. </summary>
        public object SgxCollateral { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-ver claim. </summary>
        public string DeprecatedVersion { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-sgx-is-debuggable claim. </summary>
        public bool? DeprecatedIsDebuggable { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-sgx-collateral claim. </summary>
        public object DeprecatedSgxCollateral { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-sgx-ehd claim. </summary>
        public byte[] DeprecatedEnclaveHeldData { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-sgx-ehd claim. </summary>
        public byte[] DeprecatedEnclaveHeldData2 { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-sgx-product-id. </summary>
        public float? DeprecatedProductId { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-sgx-mrenclave. </summary>
        public string DeprecatedMrEnclave { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-sgx-mrsigner. </summary>
        public string DeprecatedMrSigner { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-sgx-svn. </summary>
        public float? DeprecatedSvn { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-tee. </summary>
        public string DeprecatedTee { get; }
        /// <summary> DEPRECATED: Private Preview version of x-ms-policy-hash. </summary>
        public byte[] DeprecatedPolicyHash { get; }
        /// <summary> DEPRECATED: Private Preview version of nonce. </summary>
        public string DeprecatedRpData { get; }
    }
}
