// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.MongoDBAtlas.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.MongoDBAtlas.Samples
{
    public partial class Sample_OrganizationResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_OrganizationsGetMaximumSet()
        {
            // Generated from example definition: 2024-11-18-preview/Organizations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrganizationResource created on azure
            // for more information of creating OrganizationResource, please refer to the document of OrganizationResource
            string subscriptionId = "4AFC1287-D389-4265-B2D4-59B96A45CACC";
            string resourceGroupName = "rgopenapi";
            string organizationName = "U.1-:7";
            ResourceIdentifier organizationResourceId = OrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationName);
            OrganizationResource organizationResource = client.GetOrganizationResource(organizationResourceId);

            // invoke the operation
            OrganizationResource result = await organizationResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OrganizationResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_OrganizationsDeleteMaximumSet()
        {
            // Generated from example definition: 2024-11-18-preview/Organizations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrganizationResource created on azure
            // for more information of creating OrganizationResource, please refer to the document of OrganizationResource
            string subscriptionId = "4AFC1287-D389-4265-B2D4-59B96A45CACC";
            string resourceGroupName = "rgopenapi";
            string organizationName = "U.1-:7";
            ResourceIdentifier organizationResourceId = OrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationName);
            OrganizationResource organizationResource = client.GetOrganizationResource(organizationResourceId);

            // invoke the operation
            await organizationResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_OrganizationsUpdateMaximumSet()
        {
            // Generated from example definition: 2024-11-18-preview/Organizations_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrganizationResource created on azure
            // for more information of creating OrganizationResource, please refer to the document of OrganizationResource
            string subscriptionId = "422A4D59-A5BC-4DBB-8831-EC666633F64F";
            string resourceGroupName = "rgopenapi";
            string organizationName = "U.1-:7";
            ResourceIdentifier organizationResourceId = OrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationName);
            OrganizationResource organizationResource = client.GetOrganizationResource(organizationResourceId);

            // invoke the operation
            OrganizationResourceData data = new OrganizationResourceData(default)
            {
                Properties = new OrganizationProperties(null, new UserDetails("btyhwmlbzzihjfimviefebg", "xx", ".K_@e7N-g1.xjqnbPs")
                {
                    Upn = "mxtbogd",
                    PhoneNumber = "isvc",
                    CompanyName = "oztteysco",
                })
                {
                    PartnerProperties = new PartnerProperties("U.1-:7")
                    {
                        OrganizationId = "vugtqrobendjkinziswxlqueouo",
                        RedirectUri = "cbxwtehraetlluocdihfgchvjzockn",
                    },
                },
                Identity = new ManagedServiceIdentity("None")
                {
                    UserAssignedIdentities = { },
                },
                Tags = { },
            };
            ArmOperation<OrganizationResource> lro = await organizationResource.UpdateAsync(WaitUntil.Completed, data);
            OrganizationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OrganizationResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
