// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.MobileNetwork.Models
{
    public partial class PlatformConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("type");
            writer.WriteStringValue(PlatformType.ToString());
            if (Optional.IsDefined(AzureStackEdgeDevice))
            {
                writer.WritePropertyName("azureStackEdgeDevice");
                JsonSerializer.Serialize(writer, AzureStackEdgeDevice);
            }
            if (Optional.IsDefined(AzureStackHciCluster))
            {
                writer.WritePropertyName("azureStackHciCluster");
                JsonSerializer.Serialize(writer, AzureStackHciCluster);
            }
            if (Optional.IsDefined(ConnectedCluster))
            {
                writer.WritePropertyName("connectedCluster");
                JsonSerializer.Serialize(writer, ConnectedCluster);
            }
            if (Optional.IsDefined(CustomLocation))
            {
                writer.WritePropertyName("customLocation");
                JsonSerializer.Serialize(writer, CustomLocation);
            }
            writer.WriteEndObject();
        }

        internal static PlatformConfiguration DeserializePlatformConfiguration(JsonElement element)
        {
            PlatformType type = default;
            Optional<WritableSubResource> azureStackEdgeDevice = default;
            Optional<IReadOnlyList<WritableSubResource>> azureStackEdgeDevices = default;
            Optional<WritableSubResource> azureStackHciCluster = default;
            Optional<WritableSubResource> connectedCluster = default;
            Optional<WritableSubResource> customLocation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"))
                {
                    type = new PlatformType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("azureStackEdgeDevice"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureStackEdgeDevice = JsonSerializer.Deserialize<WritableSubResource>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("azureStackEdgeDevices"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<WritableSubResource> array = new List<WritableSubResource>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(JsonSerializer.Deserialize<WritableSubResource>(item.GetRawText()));
                    }
                    azureStackEdgeDevices = array;
                    continue;
                }
                if (property.NameEquals("azureStackHciCluster"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureStackHciCluster = JsonSerializer.Deserialize<WritableSubResource>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("connectedCluster"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    connectedCluster = JsonSerializer.Deserialize<WritableSubResource>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("customLocation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    customLocation = JsonSerializer.Deserialize<WritableSubResource>(property.Value.GetRawText());
                    continue;
                }
            }
            return new PlatformConfiguration(type, azureStackEdgeDevice, Optional.ToList(azureStackEdgeDevices), azureStackHciCluster, connectedCluster, customLocation);
        }
    }
}
