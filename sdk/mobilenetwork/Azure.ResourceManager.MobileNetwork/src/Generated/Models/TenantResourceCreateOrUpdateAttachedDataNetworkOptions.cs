// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.MobileNetwork.Models
{
    /// <summary> The TenantResourceCreateOrUpdateAttachedDataNetworkOptions. </summary>
    public partial class TenantResourceCreateOrUpdateAttachedDataNetworkOptions
    {
        /// <summary> Initializes a new instance of TenantResourceCreateOrUpdateAttachedDataNetworkOptions. </summary>
        /// <param name="subscriptionId"> The ID of the target subscription. The value must be an UUID. </param>
        /// <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        /// <param name="packetCoreControlPlaneName"> The name of the packet core control plane. </param>
        /// <param name="packetCoreDataPlaneName"> The name of the packet core data plane. </param>
        /// <param name="attachedDataNetworkName"> The name of the attached data network. </param>
        /// <param name="attachedDataNetwork"> Parameters supplied to the create or update attached data network operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupName"/>, <paramref name="packetCoreControlPlaneName"/>, <paramref name="packetCoreDataPlaneName"/>, <paramref name="attachedDataNetworkName"/> or <paramref name="attachedDataNetwork"/> is null. </exception>
        public TenantResourceCreateOrUpdateAttachedDataNetworkOptions(Guid subscriptionId, string resourceGroupName, string packetCoreControlPlaneName, string packetCoreDataPlaneName, string attachedDataNetworkName, AttachedDataNetwork attachedDataNetwork)
        {
            Argument.AssertNotNull(resourceGroupName, nameof(resourceGroupName));
            Argument.AssertNotNull(packetCoreControlPlaneName, nameof(packetCoreControlPlaneName));
            Argument.AssertNotNull(packetCoreDataPlaneName, nameof(packetCoreDataPlaneName));
            Argument.AssertNotNull(attachedDataNetworkName, nameof(attachedDataNetworkName));
            Argument.AssertNotNull(attachedDataNetwork, nameof(attachedDataNetwork));

            SubscriptionId = subscriptionId;
            ResourceGroupName = resourceGroupName;
            PacketCoreControlPlaneName = packetCoreControlPlaneName;
            PacketCoreDataPlaneName = packetCoreDataPlaneName;
            AttachedDataNetworkName = attachedDataNetworkName;
            AttachedDataNetwork = attachedDataNetwork;
        }

        /// <summary> The ID of the target subscription. The value must be an UUID. </summary>
        public Guid SubscriptionId { get; }
        /// <summary> The name of the resource group. The name is case insensitive. </summary>
        public string ResourceGroupName { get; }
        /// <summary> The name of the packet core control plane. </summary>
        public string PacketCoreControlPlaneName { get; }
        /// <summary> The name of the packet core data plane. </summary>
        public string PacketCoreDataPlaneName { get; }
        /// <summary> The name of the attached data network. </summary>
        public string AttachedDataNetworkName { get; }
        /// <summary> Parameters supplied to the create or update attached data network operation. </summary>
        public AttachedDataNetwork AttachedDataNetwork { get; }
    }
}
