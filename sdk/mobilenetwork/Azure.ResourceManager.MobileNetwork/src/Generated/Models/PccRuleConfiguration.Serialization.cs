// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MobileNetwork.Models
{
    public partial class PccRuleConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("ruleName"u8);
            writer.WriteStringValue(RuleName);
            writer.WritePropertyName("rulePrecedence"u8);
            writer.WriteNumberValue(RulePrecedence);
            if (Optional.IsDefined(RuleQosPolicy))
            {
                writer.WritePropertyName("ruleQosPolicy"u8);
                writer.WriteObjectValue(RuleQosPolicy);
            }
            if (Optional.IsDefined(TrafficControl))
            {
                writer.WritePropertyName("trafficControl"u8);
                writer.WriteStringValue(TrafficControl.Value.ToString());
            }
            writer.WritePropertyName("serviceDataFlowTemplates"u8);
            writer.WriteStartArray();
            foreach (var item in ServiceDataFlowTemplates)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            writer.WriteEndObject();
        }

        internal static PccRuleConfiguration DeserializePccRuleConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string ruleName = default;
            int rulePrecedence = default;
            Optional<PccRuleQosPolicy> ruleQosPolicy = default;
            Optional<MobileNetworkTrafficControlPermission> trafficControl = default;
            IList<MobileNetworkServiceDataFlowTemplate> serviceDataFlowTemplates = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("ruleName"u8))
                {
                    ruleName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rulePrecedence"u8))
                {
                    rulePrecedence = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("ruleQosPolicy"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ruleQosPolicy = PccRuleQosPolicy.DeserializePccRuleQosPolicy(property.Value);
                    continue;
                }
                if (property.NameEquals("trafficControl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    trafficControl = new MobileNetworkTrafficControlPermission(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("serviceDataFlowTemplates"u8))
                {
                    List<MobileNetworkServiceDataFlowTemplate> array = new List<MobileNetworkServiceDataFlowTemplate>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(MobileNetworkServiceDataFlowTemplate.DeserializeMobileNetworkServiceDataFlowTemplate(item));
                    }
                    serviceDataFlowTemplates = array;
                    continue;
                }
            }
            return new PccRuleConfiguration(ruleName, rulePrecedence, ruleQosPolicy.Value, Optional.ToNullable(trafficControl), serviceDataFlowTemplates);
        }
    }
}
