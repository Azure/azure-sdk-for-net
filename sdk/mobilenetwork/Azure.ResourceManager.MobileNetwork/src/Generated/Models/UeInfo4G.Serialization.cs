// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.MobileNetwork.Models
{
    public partial class UeInfo4G : IUtf8JsonSerializable, IJsonModel<UeInfo4G>
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IJsonModel<UeInfo4G>)this).Write(writer, new ModelReaderWriterOptions("W"));

        void IJsonModel<UeInfo4G>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<UeInfo4G>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(UeInfo4G)} does not support '{format}' format.");
            }

            writer.WriteStartObject();
            writer.WritePropertyName("ratType"u8);
            writer.WriteStringValue(RatType.ToString());
            if (LastReadOn.HasValue)
            {
                writer.WritePropertyName("lastReadAt"u8);
                writer.WriteStringValue(LastReadOn.Value, "O");
            }
            writer.WritePropertyName("info"u8);
            writer.WriteStartObject();
            writer.WritePropertyName("imsi"u8);
            writer.WriteStringValue(Imsi);
            if (Imei != null)
            {
                writer.WritePropertyName("imei"u8);
                writer.WriteStringValue(Imei);
            }
            if (Imeisv != null)
            {
                writer.WritePropertyName("imeisv"u8);
                writer.WriteStringValue(Imeisv);
            }
            if (!(SessionInfo is ChangeTrackingList<UeSessionInfo4G> collection && collection.IsUndefined))
            {
                writer.WritePropertyName("sessionInfo"u8);
                writer.WriteStartArray();
                foreach (var item in SessionInfo)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("connectionInfo"u8);
            writer.WriteStartObject();
            if (PerUeTnla != null)
            {
                writer.WritePropertyName("perUeTnla"u8);
                writer.WriteStringValue(PerUeTnla);
            }
            if (MmeS1ApId.HasValue)
            {
                writer.WritePropertyName("mmeS1apId"u8);
                writer.WriteNumberValue(MmeS1ApId.Value);
            }
            if (EnbS1ApId.HasValue)
            {
                writer.WritePropertyName("enbS1apId"u8);
                writer.WriteNumberValue(EnbS1ApId.Value);
            }
            if (LastVisitedTai != null)
            {
                writer.WritePropertyName("lastVisitedTai"u8);
                writer.WriteStringValue(LastVisitedTai);
            }
            if (UeState.HasValue)
            {
                writer.WritePropertyName("ueState"u8);
                writer.WriteStringValue(UeState.Value.ToString());
            }
            if (RrcEstablishmentCause.HasValue)
            {
                writer.WritePropertyName("rrcEstablishmentCause"u8);
                writer.WriteStringValue(RrcEstablishmentCause.Value.ToString());
            }
            if (UeUsageSetting.HasValue)
            {
                writer.WritePropertyName("ueUsageSetting"u8);
                writer.WriteStringValue(UeUsageSetting.Value.ToString());
            }
            if (LastActivityOn.HasValue)
            {
                writer.WritePropertyName("lastActivityTime"u8);
                writer.WriteStringValue(LastActivityOn.Value, "O");
            }
            writer.WritePropertyName("globalRanNodeId"u8);
            writer.WriteStartObject();
            if (NgeNbId != null)
            {
                writer.WritePropertyName("ngeNbId"u8);
                writer.WriteStringValue(NgeNbId);
            }
            if (ENbId != null)
            {
                writer.WritePropertyName("eNbId"u8);
                writer.WriteStringValue(ENbId);
            }
            if (N3IwfId != null)
            {
                writer.WritePropertyName("n3IwfId"u8);
                writer.WriteStringValue(N3IwfId);
            }
            if (WagfId != null)
            {
                writer.WritePropertyName("wagfId"u8);
                writer.WriteStringValue(WagfId);
            }
            if (TngfId != null)
            {
                writer.WritePropertyName("tngfId"u8);
                writer.WriteStringValue(TngfId);
            }
            if (Nid != null)
            {
                writer.WritePropertyName("nid"u8);
                writer.WriteStringValue(Nid);
            }
            writer.WritePropertyName("gNbId"u8);
            writer.WriteStartObject();
            if (BitLength.HasValue)
            {
                writer.WritePropertyName("bitLength"u8);
                writer.WriteNumberValue(BitLength.Value);
            }
            if (GNBValue != null)
            {
                writer.WritePropertyName("gNBValue"u8);
                writer.WriteStringValue(GNBValue);
            }
            writer.WriteEndObject();
            writer.WritePropertyName("plmnId"u8);
            writer.WriteStartObject();
            if (MccInfoConnectionInfoGlobalRanNodeIdPlmnIdMcc != null)
            {
                writer.WritePropertyName("mcc"u8);
                writer.WriteStringValue(MccInfoConnectionInfoGlobalRanNodeIdPlmnIdMcc);
            }
            if (MncInfoConnectionInfoGlobalRanNodeIdPlmnIdMnc != null)
            {
                writer.WritePropertyName("mnc"u8);
                writer.WriteStringValue(MncInfoConnectionInfoGlobalRanNodeIdPlmnIdMnc);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
            writer.WritePropertyName("locationInfo"u8);
            writer.WriteStartObject();
            if (LocationType != null)
            {
                writer.WritePropertyName("locationType"u8);
                writer.WriteStringValue(LocationType);
            }
            if (Tac != null)
            {
                writer.WritePropertyName("tac"u8);
                writer.WriteStringValue(Tac);
            }
            writer.WritePropertyName("plmn"u8);
            writer.WriteStartObject();
            if (MccInfoConnectionInfoLocationInfoPlmnMcc != null)
            {
                writer.WritePropertyName("mcc"u8);
                writer.WriteStringValue(MccInfoConnectionInfoLocationInfoPlmnMcc);
            }
            if (MncInfoConnectionInfoLocationInfoPlmnMnc != null)
            {
                writer.WritePropertyName("mnc"u8);
                writer.WriteStringValue(MncInfoConnectionInfoLocationInfoPlmnMnc);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
            writer.WriteEndObject();
            writer.WritePropertyName("guti"u8);
            writer.WriteStartObject();
            writer.WritePropertyName("mTmsi"u8);
            writer.WriteNumberValue(MTmsi);
            writer.WritePropertyName("mmeId"u8);
            writer.WriteStartObject();
            writer.WritePropertyName("groupId"u8);
            writer.WriteNumberValue(GroupId);
            writer.WritePropertyName("code"u8);
            writer.WriteNumberValue(Code);
            writer.WriteEndObject();
            writer.WritePropertyName("plmn"u8);
            writer.WriteStartObject();
            writer.WritePropertyName("mcc"u8);
            writer.WriteStringValue(MccInfoGutiPlmnMcc);
            writer.WritePropertyName("mnc"u8);
            writer.WriteStringValue(MncInfoGutiPlmnMnc);
            writer.WriteEndObject();
            writer.WriteEndObject();
            writer.WriteEndObject();
            if (options.Format != "W" && _serializedAdditionalRawData != null)
            {
                foreach (var item in _serializedAdditionalRawData)
                {
                    writer.WritePropertyName(item.Key);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(item.Value);
#else
                    using (JsonDocument document = JsonDocument.Parse(item.Value))
                    {
                        JsonSerializer.Serialize(writer, document.RootElement);
                    }
#endif
                }
            }
            writer.WriteEndObject();
        }

        UeInfo4G IJsonModel<UeInfo4G>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<UeInfo4G>)this).GetFormatFromOptions(options) : options.Format;
            if (format != "J")
            {
                throw new FormatException($"The model {nameof(UeInfo4G)} does not support '{format}' format.");
            }

            using JsonDocument document = JsonDocument.ParseValue(ref reader);
            return DeserializeUeInfo4G(document.RootElement, options);
        }

        internal static UeInfo4G DeserializeUeInfo4G(JsonElement element, ModelReaderWriterOptions options = null)
        {
            options ??= new ModelReaderWriterOptions("W");

            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            RatType ratType = default;
            Optional<DateTimeOffset> lastReadAt = default;
            string imsi = default;
            Optional<string> imei = default;
            Optional<string> imeisv = default;
            IList<UeSessionInfo4G> sessionInfo = default;
            Optional<string> perUeTnla = default;
            Optional<int> mmeS1apId = default;
            Optional<int> enbS1apId = default;
            Optional<string> lastVisitedTai = default;
            Optional<UeState> ueState = default;
            Optional<RrcEstablishmentCause> rrcEstablishmentCause = default;
            Optional<UeUsageSetting> ueUsageSetting = default;
            Optional<DateTimeOffset> lastActivityTime = default;
            Optional<string> ngeNbId = default;
            Optional<string> eNbId = default;
            Optional<string> n3IwfId = default;
            Optional<string> wagfId = default;
            Optional<string> tngfId = default;
            Optional<string> nid = default;
            Optional<int> bitLength = default;
            Optional<string> gnbValue = default;
            Optional<string> mcc = default;
            Optional<string> mnc = default;
            Optional<string> locationType = default;
            Optional<string> tac = default;
            Optional<string> mcc0 = default;
            Optional<string> mnc0 = default;
            int mTmsi = default;
            int groupId = default;
            int code = default;
            string mcc1 = default;
            string mnc1 = default;
            IDictionary<string, BinaryData> serializedAdditionalRawData = default;
            Dictionary<string, BinaryData> additionalPropertiesDictionary = new Dictionary<string, BinaryData>();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("ratType"u8))
                {
                    ratType = new RatType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("lastReadAt"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastReadAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("info"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("imsi"u8))
                        {
                            imsi = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("imei"u8))
                        {
                            imei = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("imeisv"u8))
                        {
                            imeisv = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("sessionInfo"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            List<UeSessionInfo4G> array = new List<UeSessionInfo4G>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(UeSessionInfo4G.DeserializeUeSessionInfo4G(item, options));
                            }
                            sessionInfo = array;
                            continue;
                        }
                        if (property0.NameEquals("connectionInfo"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            foreach (var property1 in property0.Value.EnumerateObject())
                            {
                                if (property1.NameEquals("perUeTnla"u8))
                                {
                                    perUeTnla = property1.Value.GetString();
                                    continue;
                                }
                                if (property1.NameEquals("mmeS1apId"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        continue;
                                    }
                                    mmeS1apId = property1.Value.GetInt32();
                                    continue;
                                }
                                if (property1.NameEquals("enbS1apId"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        continue;
                                    }
                                    enbS1apId = property1.Value.GetInt32();
                                    continue;
                                }
                                if (property1.NameEquals("lastVisitedTai"u8))
                                {
                                    lastVisitedTai = property1.Value.GetString();
                                    continue;
                                }
                                if (property1.NameEquals("ueState"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        continue;
                                    }
                                    ueState = new UeState(property1.Value.GetString());
                                    continue;
                                }
                                if (property1.NameEquals("rrcEstablishmentCause"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        continue;
                                    }
                                    rrcEstablishmentCause = new RrcEstablishmentCause(property1.Value.GetString());
                                    continue;
                                }
                                if (property1.NameEquals("ueUsageSetting"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        continue;
                                    }
                                    ueUsageSetting = new UeUsageSetting(property1.Value.GetString());
                                    continue;
                                }
                                if (property1.NameEquals("lastActivityTime"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        continue;
                                    }
                                    lastActivityTime = property1.Value.GetDateTimeOffset("O");
                                    continue;
                                }
                                if (property1.NameEquals("globalRanNodeId"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    foreach (var property2 in property1.Value.EnumerateObject())
                                    {
                                        if (property2.NameEquals("ngeNbId"u8))
                                        {
                                            ngeNbId = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("eNbId"u8))
                                        {
                                            eNbId = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("n3IwfId"u8))
                                        {
                                            n3IwfId = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("wagfId"u8))
                                        {
                                            wagfId = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("tngfId"u8))
                                        {
                                            tngfId = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("nid"u8))
                                        {
                                            nid = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("gNbId"u8))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            foreach (var property3 in property2.Value.EnumerateObject())
                                            {
                                                if (property3.NameEquals("bitLength"u8))
                                                {
                                                    if (property3.Value.ValueKind == JsonValueKind.Null)
                                                    {
                                                        continue;
                                                    }
                                                    bitLength = property3.Value.GetInt32();
                                                    continue;
                                                }
                                                if (property3.NameEquals("gNBValue"u8))
                                                {
                                                    gnbValue = property3.Value.GetString();
                                                    continue;
                                                }
                                            }
                                            continue;
                                        }
                                        if (property2.NameEquals("plmnId"u8))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            foreach (var property3 in property2.Value.EnumerateObject())
                                            {
                                                if (property3.NameEquals("mcc"u8))
                                                {
                                                    mcc = property3.Value.GetString();
                                                    continue;
                                                }
                                                if (property3.NameEquals("mnc"u8))
                                                {
                                                    mnc = property3.Value.GetString();
                                                    continue;
                                                }
                                            }
                                            continue;
                                        }
                                    }
                                    continue;
                                }
                                if (property1.NameEquals("locationInfo"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    foreach (var property2 in property1.Value.EnumerateObject())
                                    {
                                        if (property2.NameEquals("locationType"u8))
                                        {
                                            locationType = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("tac"u8))
                                        {
                                            tac = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("plmn"u8))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            foreach (var property3 in property2.Value.EnumerateObject())
                                            {
                                                if (property3.NameEquals("mcc"u8))
                                                {
                                                    mcc0 = property3.Value.GetString();
                                                    continue;
                                                }
                                                if (property3.NameEquals("mnc"u8))
                                                {
                                                    mnc0 = property3.Value.GetString();
                                                    continue;
                                                }
                                            }
                                            continue;
                                        }
                                    }
                                    continue;
                                }
                            }
                            continue;
                        }
                        if (property0.NameEquals("guti"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            foreach (var property1 in property0.Value.EnumerateObject())
                            {
                                if (property1.NameEquals("mTmsi"u8))
                                {
                                    mTmsi = property1.Value.GetInt32();
                                    continue;
                                }
                                if (property1.NameEquals("mmeId"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    foreach (var property2 in property1.Value.EnumerateObject())
                                    {
                                        if (property2.NameEquals("groupId"u8))
                                        {
                                            groupId = property2.Value.GetInt32();
                                            continue;
                                        }
                                        if (property2.NameEquals("code"u8))
                                        {
                                            code = property2.Value.GetInt32();
                                            continue;
                                        }
                                    }
                                    continue;
                                }
                                if (property1.NameEquals("plmn"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    foreach (var property2 in property1.Value.EnumerateObject())
                                    {
                                        if (property2.NameEquals("mcc"u8))
                                        {
                                            mcc1 = property2.Value.GetString();
                                            continue;
                                        }
                                        if (property2.NameEquals("mnc"u8))
                                        {
                                            mnc1 = property2.Value.GetString();
                                            continue;
                                        }
                                    }
                                    continue;
                                }
                            }
                            continue;
                        }
                    }
                    continue;
                }
                if (options.Format != "W")
                {
                    additionalPropertiesDictionary.Add(property.Name, BinaryData.FromString(property.Value.GetRawText()));
                }
            }
            serializedAdditionalRawData = additionalPropertiesDictionary;
            return new UeInfo4G(
                ratType,
                Optional.ToNullable(lastReadAt),
                serializedAdditionalRawData,
                imsi,
                imei.Value,
                imeisv.Value,
                sessionInfo ?? new ChangeTrackingList<UeSessionInfo4G>(),
                perUeTnla.Value,
                Optional.ToNullable(mmeS1apId),
                Optional.ToNullable(enbS1apId),
                lastVisitedTai.Value,
                Optional.ToNullable(ueState),
                Optional.ToNullable(rrcEstablishmentCause),
                Optional.ToNullable(ueUsageSetting),
                Optional.ToNullable(lastActivityTime),
                ngeNbId.Value,
                eNbId.Value,
                n3IwfId.Value,
                wagfId.Value,
                tngfId.Value,
                nid.Value,
                Optional.ToNullable(bitLength),
                gnbValue.Value,
                mcc.Value,
                mnc.Value,
                locationType.Value,
                tac.Value,
                mcc0.Value,
                mnc0.Value,
                mTmsi,
                groupId,
                code,
                mcc1,
                mnc1);
        }

        BinaryData IPersistableModel<UeInfo4G>.Write(ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<UeInfo4G>)this).GetFormatFromOptions(options) : options.Format;

            switch (format)
            {
                case "J":
                    return ModelReaderWriter.Write(this, options);
                default:
                    throw new FormatException($"The model {nameof(UeInfo4G)} does not support '{options.Format}' format.");
            }
        }

        UeInfo4G IPersistableModel<UeInfo4G>.Create(BinaryData data, ModelReaderWriterOptions options)
        {
            var format = options.Format == "W" ? ((IPersistableModel<UeInfo4G>)this).GetFormatFromOptions(options) : options.Format;

            switch (format)
            {
                case "J":
                    {
                        using JsonDocument document = JsonDocument.Parse(data);
                        return DeserializeUeInfo4G(document.RootElement, options);
                    }
                default:
                    throw new FormatException($"The model {nameof(UeInfo4G)} does not support '{options.Format}' format.");
            }
        }

        string IPersistableModel<UeInfo4G>.GetFormatFromOptions(ModelReaderWriterOptions options) => "J";
    }
}
