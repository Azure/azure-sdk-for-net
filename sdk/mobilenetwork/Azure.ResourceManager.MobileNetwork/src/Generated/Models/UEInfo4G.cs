// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.MobileNetwork.Models
{
    /// <summary> UE Information for 4G. </summary>
    public partial class UEInfo4G : ExtendedUEInfoProperties
    {
        /// <summary> Initializes a new instance of <see cref="UEInfo4G"/>. </summary>
        /// <param name="imsi"> International mobile subscriber identifier. </param>
        /// <param name="mTmsi"> MME Temporary Mobile Subscriber Identity. </param>
        /// <param name="groupId"> MME group identifier. </param>
        /// <param name="code"> MME code. </param>
        /// <param name="mccInfoGutiPlmnMcc"> Mobile country code (MCC). </param>
        /// <param name="mncInfoGutiPlmnMnc"> Mobile network code (MNC). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imsi"/>, <paramref name="mccInfoGutiPlmnMcc"/> or <paramref name="mncInfoGutiPlmnMnc"/> is null. </exception>
        public UEInfo4G(string imsi, int mTmsi, int groupId, int code, string mccInfoGutiPlmnMcc, string mncInfoGutiPlmnMnc)
        {
            Argument.AssertNotNull(imsi, nameof(imsi));
            Argument.AssertNotNull(mccInfoGutiPlmnMcc, nameof(mccInfoGutiPlmnMcc));
            Argument.AssertNotNull(mncInfoGutiPlmnMnc, nameof(mncInfoGutiPlmnMnc));

            Imsi = imsi;
            SessionInfo = new ChangeTrackingList<UESessionInfo4G>();
            MTmsi = mTmsi;
            GroupId = groupId;
            Code = code;
            MccInfoGutiPlmnMcc = mccInfoGutiPlmnMcc;
            MncInfoGutiPlmnMnc = mncInfoGutiPlmnMnc;
            RatType = RatType.FourG;
        }

        /// <summary> Initializes a new instance of <see cref="UEInfo4G"/>. </summary>
        /// <param name="ratType"> RAT Type. </param>
        /// <param name="lastReadOn"> The timestamp of last UE info read from the packet core (UTC). </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="imsi"> International mobile subscriber identifier. </param>
        /// <param name="imei"> International mobile equipment identity. </param>
        /// <param name="imeisv"> International mobile equipment identity – software version. </param>
        /// <param name="sessionInfo"></param>
        /// <param name="perUETnla"> Per-UE transport network layer association. </param>
        /// <param name="mmeS1ApId"> MME S1AP identifier. </param>
        /// <param name="enbS1ApId"> eNodeB S1AP identifier. </param>
        /// <param name="lastVisitedTai"> Last Visited TAI. </param>
        /// <param name="ueState"> State of the UE. </param>
        /// <param name="rrcEstablishmentCause"> Radio connection establishment cause. </param>
        /// <param name="ueUsageSetting"> The UE's usage setting. </param>
        /// <param name="lastActivityOn"> The timestamp of last activity of UE (UTC). </param>
        /// <param name="ngeNbId"> NG-eNodeB identifier. </param>
        /// <param name="eNbId"> eNodeB identifier. </param>
        /// <param name="n3IwfId"> N3 IWF identifier. </param>
        /// <param name="wagfId"> W-AGF identifier. </param>
        /// <param name="tngfId"> TNGF identifier. </param>
        /// <param name="nid"> Network identifier. </param>
        /// <param name="bitLength"></param>
        /// <param name="gnbValue"></param>
        /// <param name="mccInfoConnectionInfoGlobalRanNodeIdPlmnIdMcc"> Mobile country code (MCC). </param>
        /// <param name="mncInfoConnectionInfoGlobalRanNodeIdPlmnIdMnc"> Mobile network code (MNC). </param>
        /// <param name="locationType"> Location Type. </param>
        /// <param name="tac"> Type Allocation Code of UE. </param>
        /// <param name="mccInfoConnectionInfoLocationInfoPlmnMcc"> Mobile country code (MCC). </param>
        /// <param name="mncInfoConnectionInfoLocationInfoPlmnMnc"> Mobile network code (MNC). </param>
        /// <param name="mTmsi"> MME Temporary Mobile Subscriber Identity. </param>
        /// <param name="groupId"> MME group identifier. </param>
        /// <param name="code"> MME code. </param>
        /// <param name="mccInfoGutiPlmnMcc"> Mobile country code (MCC). </param>
        /// <param name="mncInfoGutiPlmnMnc"> Mobile network code (MNC). </param>
        internal UEInfo4G(RatType ratType, DateTimeOffset? lastReadOn, IDictionary<string, BinaryData> serializedAdditionalRawData, string imsi, string imei, string imeisv, IList<UESessionInfo4G> sessionInfo, string perUETnla, int? mmeS1ApId, int? enbS1ApId, string lastVisitedTai, UEState? ueState, RrcEstablishmentCause? rrcEstablishmentCause, UEUsageSetting? ueUsageSetting, DateTimeOffset? lastActivityOn, string ngeNbId, string eNbId, string n3IwfId, string wagfId, string tngfId, string nid, int? bitLength, string gnbValue, string mccInfoConnectionInfoGlobalRanNodeIdPlmnIdMcc, string mncInfoConnectionInfoGlobalRanNodeIdPlmnIdMnc, string locationType, string tac, string mccInfoConnectionInfoLocationInfoPlmnMcc, string mncInfoConnectionInfoLocationInfoPlmnMnc, int mTmsi, int groupId, int code, string mccInfoGutiPlmnMcc, string mncInfoGutiPlmnMnc) : base(ratType, lastReadOn, serializedAdditionalRawData)
        {
            Imsi = imsi;
            Imei = imei;
            Imeisv = imeisv;
            SessionInfo = sessionInfo;
            PerUETnla = perUETnla;
            MmeS1ApId = mmeS1ApId;
            EnbS1ApId = enbS1ApId;
            LastVisitedTai = lastVisitedTai;
            UEState = ueState;
            RrcEstablishmentCause = rrcEstablishmentCause;
            UEUsageSetting = ueUsageSetting;
            LastActivityOn = lastActivityOn;
            NgeNbId = ngeNbId;
            ENbId = eNbId;
            N3IwfId = n3IwfId;
            WagfId = wagfId;
            TngfId = tngfId;
            Nid = nid;
            BitLength = bitLength;
            GNBValue = gnbValue;
            MccInfoConnectionInfoGlobalRanNodeIdPlmnIdMcc = mccInfoConnectionInfoGlobalRanNodeIdPlmnIdMcc;
            MncInfoConnectionInfoGlobalRanNodeIdPlmnIdMnc = mncInfoConnectionInfoGlobalRanNodeIdPlmnIdMnc;
            LocationType = locationType;
            Tac = tac;
            MccInfoConnectionInfoLocationInfoPlmnMcc = mccInfoConnectionInfoLocationInfoPlmnMcc;
            MncInfoConnectionInfoLocationInfoPlmnMnc = mncInfoConnectionInfoLocationInfoPlmnMnc;
            MTmsi = mTmsi;
            GroupId = groupId;
            Code = code;
            MccInfoGutiPlmnMcc = mccInfoGutiPlmnMcc;
            MncInfoGutiPlmnMnc = mncInfoGutiPlmnMnc;
            RatType = ratType;
        }

        /// <summary> Initializes a new instance of <see cref="UEInfo4G"/> for deserialization. </summary>
        internal UEInfo4G()
        {
        }

        /// <summary> International mobile subscriber identifier. </summary>
        public string Imsi { get; set; }
        /// <summary> International mobile equipment identity. </summary>
        public string Imei { get; set; }
        /// <summary> International mobile equipment identity – software version. </summary>
        public string Imeisv { get; set; }
        /// <summary> Gets the session info. </summary>
        public IList<UESessionInfo4G> SessionInfo { get; }
        /// <summary> Per-UE transport network layer association. </summary>
        public string PerUETnla { get; set; }
        /// <summary> MME S1AP identifier. </summary>
        public int? MmeS1ApId { get; set; }
        /// <summary> eNodeB S1AP identifier. </summary>
        public int? EnbS1ApId { get; set; }
        /// <summary> Last Visited TAI. </summary>
        public string LastVisitedTai { get; set; }
        /// <summary> State of the UE. </summary>
        public UEState? UEState { get; set; }
        /// <summary> Radio connection establishment cause. </summary>
        public RrcEstablishmentCause? RrcEstablishmentCause { get; set; }
        /// <summary> The UE's usage setting. </summary>
        public UEUsageSetting? UEUsageSetting { get; set; }
        /// <summary> The timestamp of last activity of UE (UTC). </summary>
        public DateTimeOffset? LastActivityOn { get; set; }
        /// <summary> NG-eNodeB identifier. </summary>
        public string NgeNbId { get; set; }
        /// <summary> eNodeB identifier. </summary>
        public string ENbId { get; set; }
        /// <summary> N3 IWF identifier. </summary>
        public string N3IwfId { get; set; }
        /// <summary> W-AGF identifier. </summary>
        public string WagfId { get; set; }
        /// <summary> TNGF identifier. </summary>
        public string TngfId { get; set; }
        /// <summary> Network identifier. </summary>
        public string Nid { get; set; }
        /// <summary> Gets or sets the bit length. </summary>
        public int? BitLength { get; set; }
        /// <summary> Gets or sets the gnb value. </summary>
        public string GNBValue { get; set; }
        /// <summary> Mobile country code (MCC). </summary>
        public string MccInfoConnectionInfoGlobalRanNodeIdPlmnIdMcc { get; set; }
        /// <summary> Mobile network code (MNC). </summary>
        public string MncInfoConnectionInfoGlobalRanNodeIdPlmnIdMnc { get; set; }
        /// <summary> Location Type. </summary>
        public string LocationType { get; set; }
        /// <summary> Type Allocation Code of UE. </summary>
        public string Tac { get; set; }
        /// <summary> Mobile country code (MCC). </summary>
        public string MccInfoConnectionInfoLocationInfoPlmnMcc { get; set; }
        /// <summary> Mobile network code (MNC). </summary>
        public string MncInfoConnectionInfoLocationInfoPlmnMnc { get; set; }
        /// <summary> MME Temporary Mobile Subscriber Identity. </summary>
        public int MTmsi { get; set; }
        /// <summary> MME group identifier. </summary>
        public int GroupId { get; set; }
        /// <summary> MME code. </summary>
        public int Code { get; set; }
        /// <summary> Mobile country code (MCC). </summary>
        public string MccInfoGutiPlmnMcc { get; set; }
        /// <summary> Mobile network code (MNC). </summary>
        public string MncInfoGutiPlmnMnc { get; set; }
    }
}
