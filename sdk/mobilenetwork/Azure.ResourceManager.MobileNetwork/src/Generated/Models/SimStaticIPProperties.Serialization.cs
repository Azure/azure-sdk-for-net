// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.MobileNetwork.Models
{
    public partial class SimStaticIPProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(AttachedDataNetwork))
            {
                writer.WritePropertyName("attachedDataNetwork"u8);
                JsonSerializer.Serialize(writer, AttachedDataNetwork);
            }
            if (Core.Optional.IsDefined(Slice))
            {
                writer.WritePropertyName("slice"u8);
                JsonSerializer.Serialize(writer, Slice);
            }
            if (Core.Optional.IsDefined(StaticIP))
            {
                writer.WritePropertyName("staticIp"u8);
                writer.WriteObjectValue(StaticIP);
            }
            writer.WriteEndObject();
        }

        internal static SimStaticIPProperties DeserializeSimStaticIPProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<WritableSubResource> attachedDataNetwork = default;
            Core.Optional<WritableSubResource> slice = default;
            Core.Optional<SimStaticIPPropertiesStaticIP> staticIP = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("attachedDataNetwork"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    attachedDataNetwork = JsonSerializer.Deserialize<WritableSubResource>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("slice"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    slice = JsonSerializer.Deserialize<WritableSubResource>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("staticIp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    staticIP = SimStaticIPPropertiesStaticIP.DeserializeSimStaticIPPropertiesStaticIP(property.Value);
                    continue;
                }
            }
            return new SimStaticIPProperties(attachedDataNetwork, slice, staticIP.Value);
        }
    }
}
