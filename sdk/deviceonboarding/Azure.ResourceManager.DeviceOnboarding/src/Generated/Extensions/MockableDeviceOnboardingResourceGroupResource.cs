// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.DeviceOnboarding.Mocking
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    public partial class MockableDeviceOnboardingResourceGroupResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableDeviceOnboardingResourceGroupResource"/> class for mocking. </summary>
        protected MockableDeviceOnboardingResourceGroupResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableDeviceOnboardingResourceGroupResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableDeviceOnboardingResourceGroupResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of OnboardingServiceResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of OnboardingServiceResources and their operations over a OnboardingServiceResource. </returns>
        public virtual OnboardingServiceCollection GetOnboardingServices()
        {
            return GetCachedClient(client => new OnboardingServiceCollection(client, Id));
        }

        /// <summary>
        /// Get a OnboardingService
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceOnboarding/onboardingServices/{onboardingServiceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OnboardingService_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-12-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OnboardingServiceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="onboardingServiceName"> The name of the Provisioning Resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="onboardingServiceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="onboardingServiceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<OnboardingServiceResource>> GetOnboardingServiceAsync(string onboardingServiceName, CancellationToken cancellationToken = default)
        {
            return await GetOnboardingServices().GetAsync(onboardingServiceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a OnboardingService
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceOnboarding/onboardingServices/{onboardingServiceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OnboardingService_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-12-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OnboardingServiceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="onboardingServiceName"> The name of the Provisioning Resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="onboardingServiceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="onboardingServiceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<OnboardingServiceResource> GetOnboardingService(string onboardingServiceName, CancellationToken cancellationToken = default)
        {
            return GetOnboardingServices().Get(onboardingServiceName, cancellationToken);
        }

        /// <summary> Gets a collection of DiscoveryServiceResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of DiscoveryServiceResources and their operations over a DiscoveryServiceResource. </returns>
        public virtual DiscoveryServiceCollection GetDiscoveryServices()
        {
            return GetCachedClient(client => new DiscoveryServiceCollection(client, Id));
        }

        /// <summary>
        /// Get a DiscoveryService
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceOnboarding/discoveryServices/{discoveryServiceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoveryService_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-12-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="DiscoveryServiceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="discoveryServiceName"> The name of the Discovery Resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="discoveryServiceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="discoveryServiceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<DiscoveryServiceResource>> GetDiscoveryServiceAsync(string discoveryServiceName, CancellationToken cancellationToken = default)
        {
            return await GetDiscoveryServices().GetAsync(discoveryServiceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a DiscoveryService
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceOnboarding/discoveryServices/{discoveryServiceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoveryService_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-12-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="DiscoveryServiceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="discoveryServiceName"> The name of the Discovery Resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="discoveryServiceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="discoveryServiceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<DiscoveryServiceResource> GetDiscoveryService(string discoveryServiceName, CancellationToken cancellationToken = default)
        {
            return GetDiscoveryServices().Get(discoveryServiceName, cancellationToken);
        }
    }
}
