// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using Autorest.CSharp.Core;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.ResourceManager.DeviceOnboarding.Mocking
{
    /// <summary> A class to add extension methods to SubscriptionResource. </summary>
    public partial class MockableDeviceOnboardingSubscriptionResource : ArmResource
    {
        private ClientDiagnostics _onboardingServiceClientDiagnostics;
        private OnboardingServicesRestOperations _onboardingServiceRestClient;
        private ClientDiagnostics _discoveryServiceClientDiagnostics;
        private DiscoveryServicesRestOperations _discoveryServiceRestClient;

        /// <summary> Initializes a new instance of the <see cref="MockableDeviceOnboardingSubscriptionResource"/> class for mocking. </summary>
        protected MockableDeviceOnboardingSubscriptionResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableDeviceOnboardingSubscriptionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableDeviceOnboardingSubscriptionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics OnboardingServiceClientDiagnostics => _onboardingServiceClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.DeviceOnboarding", OnboardingServiceResource.ResourceType.Namespace, Diagnostics);
        private OnboardingServicesRestOperations OnboardingServiceRestClient => _onboardingServiceRestClient ??= new OnboardingServicesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(OnboardingServiceResource.ResourceType));
        private ClientDiagnostics DiscoveryServiceClientDiagnostics => _discoveryServiceClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.DeviceOnboarding", DiscoveryServiceResource.ResourceType.Namespace, Diagnostics);
        private DiscoveryServicesRestOperations DiscoveryServiceRestClient => _discoveryServiceRestClient ??= new DiscoveryServicesRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(DiscoveryServiceResource.ResourceType));

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// List OnboardingService resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.DeviceOnboarding/onboardingServices</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OnboardingService_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-12-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OnboardingServiceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="OnboardingServiceResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<OnboardingServiceResource> GetOnboardingServicesAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => OnboardingServiceRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => OnboardingServiceRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new OnboardingServiceResource(Client, OnboardingServiceData.DeserializeOnboardingServiceData(e)), OnboardingServiceClientDiagnostics, Pipeline, "MockableDeviceOnboardingSubscriptionResource.GetOnboardingServices", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List OnboardingService resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.DeviceOnboarding/onboardingServices</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OnboardingService_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-12-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OnboardingServiceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="OnboardingServiceResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<OnboardingServiceResource> GetOnboardingServices(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => OnboardingServiceRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => OnboardingServiceRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new OnboardingServiceResource(Client, OnboardingServiceData.DeserializeOnboardingServiceData(e)), OnboardingServiceClientDiagnostics, Pipeline, "MockableDeviceOnboardingSubscriptionResource.GetOnboardingServices", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List DiscoveryService resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.DeviceOnboarding/discoveryServices</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoveryService_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-12-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="DiscoveryServiceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="DiscoveryServiceResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<DiscoveryServiceResource> GetDiscoveryServicesAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => DiscoveryServiceRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => DiscoveryServiceRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new DiscoveryServiceResource(Client, DiscoveryServiceData.DeserializeDiscoveryServiceData(e)), DiscoveryServiceClientDiagnostics, Pipeline, "MockableDeviceOnboardingSubscriptionResource.GetDiscoveryServices", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List DiscoveryService resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.DeviceOnboarding/discoveryServices</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>DiscoveryService_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-12-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="DiscoveryServiceResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="DiscoveryServiceResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<DiscoveryServiceResource> GetDiscoveryServices(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => DiscoveryServiceRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => DiscoveryServiceRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new DiscoveryServiceResource(Client, DiscoveryServiceData.DeserializeDiscoveryServiceData(e)), DiscoveryServiceClientDiagnostics, Pipeline, "MockableDeviceOnboardingSubscriptionResource.GetDiscoveryServices", "value", "nextLink", cancellationToken);
        }
    }
}
