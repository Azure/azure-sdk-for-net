// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.DeviceOnboarding.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableDeviceOnboardingArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableDeviceOnboardingArmClient"/> class for mocking. </summary>
        protected MockableDeviceOnboardingArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableDeviceOnboardingArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableDeviceOnboardingArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableDeviceOnboardingArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets an object representing a DeviceStateResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        /// <param name="scope"> The scope that the resource will apply against. </param>
        /// <returns> Returns a <see cref="DeviceStateResource"/> object. </returns>
        public virtual DeviceStateResource GetDeviceState(ResourceIdentifier scope)
        {
            return new DeviceStateResource(Client, scope.AppendProviderResource("Microsoft.DeviceOnboarding", "deviceStates", "default"));
        }

        /// <summary>
        /// Gets an object representing an <see cref="OnboardingServiceResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OnboardingServiceResource.CreateResourceIdentifier" /> to create an <see cref="OnboardingServiceResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OnboardingServiceResource"/> object. </returns>
        public virtual OnboardingServiceResource GetOnboardingServiceResource(ResourceIdentifier id)
        {
            OnboardingServiceResource.ValidateResourceId(id);
            return new OnboardingServiceResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="PolicyResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PolicyResource.CreateResourceIdentifier" /> to create a <see cref="PolicyResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PolicyResource"/> object. </returns>
        public virtual PolicyResource GetPolicyResource(ResourceIdentifier id)
        {
            PolicyResource.ValidateResourceId(id);
            return new PolicyResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="DeviceStateResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DeviceStateResource.CreateResourceIdentifier" /> to create a <see cref="DeviceStateResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DeviceStateResource"/> object. </returns>
        public virtual DeviceStateResource GetDeviceStateResource(ResourceIdentifier id)
        {
            DeviceStateResource.ValidateResourceId(id);
            return new DeviceStateResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="DiscoveryServiceResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DiscoveryServiceResource.CreateResourceIdentifier" /> to create a <see cref="DiscoveryServiceResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DiscoveryServiceResource"/> object. </returns>
        public virtual DiscoveryServiceResource GetDiscoveryServiceResource(ResourceIdentifier id)
        {
            DiscoveryServiceResource.ValidateResourceId(id);
            return new DiscoveryServiceResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="OwnershipVoucherPublicKeyResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OwnershipVoucherPublicKeyResource.CreateResourceIdentifier" /> to create an <see cref="OwnershipVoucherPublicKeyResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OwnershipVoucherPublicKeyResource"/> object. </returns>
        public virtual OwnershipVoucherPublicKeyResource GetOwnershipVoucherPublicKeyResource(ResourceIdentifier id)
        {
            OwnershipVoucherPublicKeyResource.ValidateResourceId(id);
            return new OwnershipVoucherPublicKeyResource(Client, id);
        }
    }
}
