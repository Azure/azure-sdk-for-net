// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    /// <summary> The FDO-based authentication rule for bootstrapping. </summary>
    public partial class FdoBootstrapAuthenticationRule : BootstrapAuthenticationRule
    {
        /// <summary> Initializes a new instance of <see cref="FdoBootstrapAuthenticationRule"/>. </summary>
        public FdoBootstrapAuthenticationRule()
        {
            Type = BootstrapAuthenticationType.FDO;
        }

        /// <summary> Initializes a new instance of <see cref="FdoBootstrapAuthenticationRule"/>. </summary>
        /// <param name="type"> The type of authentication rule. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="publicKeys"> Per policy public key(s) to extend ownership voucher to the customer. </param>
        /// <param name="ownershipVoucherStorage">
        /// Ownership Voucher storage
        /// Please note <see cref="Models.OwnershipVoucherStorage"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="StorageAccountOwnershipVoucherStorage"/>.
        /// </param>
        /// <param name="rendezvousEndpoint"> Endpoint for the rendezvous service, e.g. https://contoso-rv1.contoso.com. </param>
        internal FdoBootstrapAuthenticationRule(BootstrapAuthenticationType type, IDictionary<string, BinaryData> serializedAdditionalRawData, FdoPublicKeys publicKeys, OwnershipVoucherStorage ownershipVoucherStorage, Uri rendezvousEndpoint) : base(type, serializedAdditionalRawData)
        {
            PublicKeys = publicKeys;
            OwnershipVoucherStorage = ownershipVoucherStorage;
            RendezvousEndpoint = rendezvousEndpoint;
            Type = type;
        }

        /// <summary> Per policy public key(s) to extend ownership voucher to the customer. </summary>
        internal FdoPublicKeys PublicKeys { get; }
        /// <summary> x5Chain representation of the public key. </summary>
        public IReadOnlyList<byte[]> Secp256R1Default
        {
            get => PublicKeys?.Secp256R1Default;
        }

        /// <summary>
        /// Ownership Voucher storage
        /// Please note <see cref="Models.OwnershipVoucherStorage"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="StorageAccountOwnershipVoucherStorage"/>.
        /// </summary>
        public OwnershipVoucherStorage OwnershipVoucherStorage { get; set; }
        /// <summary> Endpoint for the rendezvous service, e.g. https://contoso-rv1.contoso.com. </summary>
        public Uri RendezvousEndpoint { get; set; }
    }
}
