// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    /// <summary> The allocation rule for evenly distributed allocation type. </summary>
    public partial class PatchEvenlyDistributedAllocationRule : AllocationRulePatch
    {
        /// <summary> Initializes a new instance of <see cref="PatchEvenlyDistributedAllocationRule"/>. </summary>
        public PatchEvenlyDistributedAllocationRule()
        {
            Endpoints = new ChangeTrackingList<PatchAllocationEndpoint>();
            Type = AllocationType.EvenlyDistributed;
        }

        /// <summary> Initializes a new instance of <see cref="PatchEvenlyDistributedAllocationRule"/>. </summary>
        /// <param name="name"> Name of the allocation rule. </param>
        /// <param name="endpointType"> Type of endpoint. </param>
        /// <param name="type"> Type of the allocation rule. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="endpoints"> List of endpoints for evenly distributed allocation type. </param>
        internal PatchEvenlyDistributedAllocationRule(string name, EndpointType? endpointType, AllocationType type, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<PatchAllocationEndpoint> endpoints) : base(name, endpointType, type, serializedAdditionalRawData)
        {
            Endpoints = endpoints;
            Type = type;
        }

        /// <summary> List of endpoints for evenly distributed allocation type. </summary>
        public IList<PatchAllocationEndpoint> Endpoints { get; }
    }
}
