// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    /// <summary> The x509-based authentication rule for bootstrapping. </summary>
    public partial class X509BootstrapAuthenticationRule : BootstrapAuthenticationRule
    {
        /// <summary> Initializes a new instance of <see cref="X509BootstrapAuthenticationRule"/>. </summary>
        /// <param name="primaryCertificate"> The primary certificate. B64 x509 cert. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="primaryCertificate"/> is null. </exception>
        public X509BootstrapAuthenticationRule(X509Certificate primaryCertificate)
        {
            Argument.AssertNotNull(primaryCertificate, nameof(primaryCertificate));

            PrimaryCertificate = primaryCertificate;
            Type = BootstrapAuthenticationType.X509;
        }

        /// <summary> Initializes a new instance of <see cref="X509BootstrapAuthenticationRule"/>. </summary>
        /// <param name="type"> The type of authentication rule. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="primaryCertificate"> The primary certificate. B64 x509 cert. </param>
        /// <param name="secondaryCertificate"> The secondary certificate. </param>
        internal X509BootstrapAuthenticationRule(BootstrapAuthenticationType type, IDictionary<string, BinaryData> serializedAdditionalRawData, X509Certificate primaryCertificate, X509Certificate secondaryCertificate) : base(type, serializedAdditionalRawData)
        {
            PrimaryCertificate = primaryCertificate;
            SecondaryCertificate = secondaryCertificate;
            Type = type;
        }

        /// <summary> Initializes a new instance of <see cref="X509BootstrapAuthenticationRule"/> for deserialization. </summary>
        internal X509BootstrapAuthenticationRule()
        {
        }

        /// <summary> The primary certificate. B64 x509 cert. </summary>
        public X509Certificate PrimaryCertificate { get; set; }
        /// <summary> The secondary certificate. </summary>
        public X509Certificate SecondaryCertificate { get; set; }
    }
}
