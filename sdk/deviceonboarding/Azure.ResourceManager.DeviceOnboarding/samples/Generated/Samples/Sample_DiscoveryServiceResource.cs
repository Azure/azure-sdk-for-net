// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceOnboarding.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceOnboarding.Samples
{
    public partial class Sample_DiscoveryServiceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DiscoveryServicesGet()
        {
            // Generated from example definition: 2024-12-01-preview/DiscoveryServices_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DiscoveryService_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryServiceResource created on azure
            // for more information of creating DiscoveryServiceResource, please refer to the document of DiscoveryServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string discoveryServiceName = "98UG--NX244fNPL975f-c-9Oq68-Cl-T-08Ji812xl5--5SDo252F8";
            ResourceIdentifier discoveryServiceResourceId = DiscoveryServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveryServiceName);
            DiscoveryServiceResource discoveryService = client.GetDiscoveryServiceResource(discoveryServiceResourceId);

            // invoke the operation
            DiscoveryServiceResource result = await discoveryService.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DiscoveryServiceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DiscoveryServicesDelete()
        {
            // Generated from example definition: 2024-12-01-preview/DiscoveryServices_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "DiscoveryService_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryServiceResource created on azure
            // for more information of creating DiscoveryServiceResource, please refer to the document of DiscoveryServiceResource
            string subscriptionId = "C70979A1-0EDA-44D5-879E-FF6921310ED9";
            string resourceGroupName = "rgDeviceOnboarding";
            string discoveryServiceName = "discoveryServiceName";
            ResourceIdentifier discoveryServiceResourceId = DiscoveryServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveryServiceName);
            DiscoveryServiceResource discoveryService = client.GetDiscoveryServiceResource(discoveryServiceResourceId);

            // invoke the operation
            await discoveryService.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_DiscoveryServicesUpdate()
        {
            // Generated from example definition: 2024-12-01-preview/DiscoveryServices_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "DiscoveryService_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryServiceResource created on azure
            // for more information of creating DiscoveryServiceResource, please refer to the document of DiscoveryServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string discoveryServiceName = "14Jb97e";
            ResourceIdentifier discoveryServiceResourceId = DiscoveryServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveryServiceName);
            DiscoveryServiceResource discoveryService = client.GetDiscoveryServiceResource(discoveryServiceResourceId);

            // invoke the operation
            DiscoveryServiceData data = new DiscoveryServiceData(default)
            {
                Properties = new DiscoveryServiceProperties(),
                Tags =
{
["key6682"] = "vsuqfaifoynihslbsoals"
},
            };
            ArmOperation<DiscoveryServiceResource> lro = await discoveryService.UpdateAsync(WaitUntil.Completed, data);
            DiscoveryServiceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DiscoveryServiceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
