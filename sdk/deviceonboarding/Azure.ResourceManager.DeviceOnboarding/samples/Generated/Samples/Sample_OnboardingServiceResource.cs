// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceOnboarding.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceOnboarding.Samples
{
    public partial class Sample_OnboardingServiceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_OnboardingServicesGet()
        {
            // Generated from example definition: 2024-12-01-preview/OnboardingServices_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "OnboardingService_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OnboardingServiceResource created on azure
            // for more information of creating OnboardingServiceResource, please refer to the document of OnboardingServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string onboardingServiceName = "x-j4MQH";
            ResourceIdentifier onboardingServiceResourceId = OnboardingServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, onboardingServiceName);
            OnboardingServiceResource onboardingService = client.GetOnboardingServiceResource(onboardingServiceResourceId);

            // invoke the operation
            OnboardingServiceResource result = await onboardingService.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OnboardingServiceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_OnboardingServicesDelete()
        {
            // Generated from example definition: 2024-12-01-preview/OnboardingServices_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "OnboardingService_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OnboardingServiceResource created on azure
            // for more information of creating OnboardingServiceResource, please refer to the document of OnboardingServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string onboardingServiceName = "84J-jS7--48s1LYZ2HM5KEbXuvEJ75sS3D";
            ResourceIdentifier onboardingServiceResourceId = OnboardingServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, onboardingServiceName);
            OnboardingServiceResource onboardingService = client.GetOnboardingServiceResource(onboardingServiceResourceId);

            // invoke the operation
            await onboardingService.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_OnboardingServicesUpdate()
        {
            // Generated from example definition: 2024-12-01-preview/OnboardingServices_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "OnboardingService_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OnboardingServiceResource created on azure
            // for more information of creating OnboardingServiceResource, please refer to the document of OnboardingServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string onboardingServiceName = "-K8cXY-B";
            ResourceIdentifier onboardingServiceResourceId = OnboardingServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, onboardingServiceName);
            OnboardingServiceResource onboardingService = client.GetOnboardingServiceResource(onboardingServiceResourceId);

            // invoke the operation
            OnboardingServiceData data = new OnboardingServiceData(default)
            {
                Properties = new OnboardingServiceProperties(default)
                {
                    PublicNetworkAccess = PublicNetworkAccessOption.Enabled,
                },
                Tags =
{
["key286"] = "tlvmukslgwaaimysrkrzvc"
},
            };
            ArmOperation<OnboardingServiceResource> lro = await onboardingService.UpdateAsync(WaitUntil.Completed, data);
            OnboardingServiceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OnboardingServiceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
