// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceOnboarding.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceOnboarding.Samples
{
    public partial class Sample_OwnershipVoucherPublicKeyCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_OwnershipVoucherPublicKeysCreateOrUpdate()
        {
            // Generated from example definition: 2024-12-01-preview/OwnershipVoucherPublicKeys_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "OwnershipVoucherPublicKey_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryServiceResource created on azure
            // for more information of creating DiscoveryServiceResource, please refer to the document of DiscoveryServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string discoveryServiceName = "discoveryServiceName";
            ResourceIdentifier discoveryServiceResourceId = DiscoveryServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveryServiceName);
            DiscoveryServiceResource discoveryService = client.GetDiscoveryServiceResource(discoveryServiceResourceId);

            // get the collection of this OwnershipVoucherPublicKeyResource
            OwnershipVoucherPublicKeyCollection collection = discoveryService.GetOwnershipVoucherPublicKeys();

            // invoke the operation
            string ownershipVoucherPublicKeyName = "ownershipvoucherpublickeyname";
            OwnershipVoucherPublicKeyData data = new OwnershipVoucherPublicKeyData(new AzureLocation("wbaqrzbu"))
            {
                Properties = new OwnershipVoucherPublicKeyProperties(new X5ChainPublicKeyDetails(new byte[][] { Encoding.UTF8.GetBytes("MIIDJzCCAg+gAwIBAgIQbyvBvzFfda1ObB+5giLPlTANBgkqhkiG9w0BAQUFADAZMRcwFQYDVQQDDA55aWppbmdjZXJ0LmNvbTAeFw0yMzA3MjAwODE5MTFaFw0yNDA3MjAwODM5MTFaMBkxFzAVBgNVBAMMDnlpamluZ2NlcnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8X4RVhdq7Tm9uvg5lEErxiA2PNhAxJK0JGvGIxZPQ5ppXaDGiF3mNCwQWt7IexnNSX62JbiFUHvQEPDa9EyXCfXEIvnI1Co22mSahXKUpM7iXnnRydx7ZnoFZiUh0jZb1BrvivSzN9ahtXWw2jH0ntpy8e9RSL4zpIzJbWCXaQEAjP+RbmS/LpBo/BArfWs9FQfIKi+og5i0isy0Sf6PQnNV0uj2jiT+lZSyzbEvLHfHeMtEP8hnZ9e+RYDdntCoQEhhMCVUO94juPLP6Rr6VvLxf1PwzSAsIJcqhdSsym5KlgC6CCe742B9Xrj1prguBL9OSMaJ5g6ec1wqndMEOQIDAQABo2swaTAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBkGA1UdEQQSMBCCDnlpamluZ2NlcnQuY29tMB0GA1UdDgQWBBSsza5j/ZDk+TAEVbEaEaq7jK3O0zANBgkqhkiG9w0BAQUFAAOCAQEAScV0X0VX1q2OgeGqXAGP5NAyiiy7EepSPbT1U+LxUGnrZi9RoiPLT6Z5xaASTsBxibe+RUB6gJr1OIPlq5Dp21Ytq4YYG468wpYrEo7UxV93GGS8wYTBu57SD5Jc+SbLJ34B7SUff8VlgRqk5t2ExAJqhQPy1C3pX5YkegdHg7L2iNPsHOKRCqxhrVIqC8VqOwR9MN6z1J4EitSI/DylmnZpMsFOFXGJA+gXOVdd8tPQOiQW0cgfvjVhPqYMjQK6pouJyFINC4WTDleDGTu8IcDRxG+8WLHvB7avbhSyNmcfCtePxMht0/6PgEoVCbwTXAPWEjzsuuqKQT+cyAdvdw==") })),
                Tags =
{
["key8073"] = "btlbjprbskpohvkzagksq"
},
            };
            ArmOperation<OwnershipVoucherPublicKeyResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, ownershipVoucherPublicKeyName, data);
            OwnershipVoucherPublicKeyResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OwnershipVoucherPublicKeyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_OwnershipVoucherPublicKeysGet()
        {
            // Generated from example definition: 2024-12-01-preview/OwnershipVoucherPublicKeys_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "OwnershipVoucherPublicKey_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryServiceResource created on azure
            // for more information of creating DiscoveryServiceResource, please refer to the document of DiscoveryServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string discoveryServiceName = "discoveryServiceName";
            ResourceIdentifier discoveryServiceResourceId = DiscoveryServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveryServiceName);
            DiscoveryServiceResource discoveryService = client.GetDiscoveryServiceResource(discoveryServiceResourceId);

            // get the collection of this OwnershipVoucherPublicKeyResource
            OwnershipVoucherPublicKeyCollection collection = discoveryService.GetOwnershipVoucherPublicKeys();

            // invoke the operation
            string ownershipVoucherPublicKeyName = "ownershipVoucherPublicKeyName";
            OwnershipVoucherPublicKeyResource result = await collection.GetAsync(ownershipVoucherPublicKeyName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OwnershipVoucherPublicKeyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_OwnershipVoucherPublicKeysListByParent()
        {
            // Generated from example definition: 2024-12-01-preview/OwnershipVoucherPublicKeys_ListByParent_MaximumSet_Gen.json
            // this example is just showing the usage of "OwnershipVoucherPublicKey_ListByParent" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryServiceResource created on azure
            // for more information of creating DiscoveryServiceResource, please refer to the document of DiscoveryServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string discoveryServiceName = "r3xsP53--JBw5d2G3YR2--G2BO3q8E3-5ikW8oIHBQ-BK6-8W1S4Ve";
            ResourceIdentifier discoveryServiceResourceId = DiscoveryServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveryServiceName);
            DiscoveryServiceResource discoveryService = client.GetDiscoveryServiceResource(discoveryServiceResourceId);

            // get the collection of this OwnershipVoucherPublicKeyResource
            OwnershipVoucherPublicKeyCollection collection = discoveryService.GetOwnershipVoucherPublicKeys();

            // invoke the operation and iterate over the result
            await foreach (OwnershipVoucherPublicKeyResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                OwnershipVoucherPublicKeyData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_OwnershipVoucherPublicKeysGet()
        {
            // Generated from example definition: 2024-12-01-preview/OwnershipVoucherPublicKeys_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "OwnershipVoucherPublicKey_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryServiceResource created on azure
            // for more information of creating DiscoveryServiceResource, please refer to the document of DiscoveryServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string discoveryServiceName = "discoveryServiceName";
            ResourceIdentifier discoveryServiceResourceId = DiscoveryServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveryServiceName);
            DiscoveryServiceResource discoveryService = client.GetDiscoveryServiceResource(discoveryServiceResourceId);

            // get the collection of this OwnershipVoucherPublicKeyResource
            OwnershipVoucherPublicKeyCollection collection = discoveryService.GetOwnershipVoucherPublicKeys();

            // invoke the operation
            string ownershipVoucherPublicKeyName = "ownershipVoucherPublicKeyName";
            bool result = await collection.ExistsAsync(ownershipVoucherPublicKeyName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_OwnershipVoucherPublicKeysGet()
        {
            // Generated from example definition: 2024-12-01-preview/OwnershipVoucherPublicKeys_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "OwnershipVoucherPublicKey_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DiscoveryServiceResource created on azure
            // for more information of creating DiscoveryServiceResource, please refer to the document of DiscoveryServiceResource
            string subscriptionId = "A213D41A-DD8E-4F40-BDA8-2F007FE14CF7";
            string resourceGroupName = "rgopenapi";
            string discoveryServiceName = "discoveryServiceName";
            ResourceIdentifier discoveryServiceResourceId = DiscoveryServiceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, discoveryServiceName);
            DiscoveryServiceResource discoveryService = client.GetDiscoveryServiceResource(discoveryServiceResourceId);

            // get the collection of this OwnershipVoucherPublicKeyResource
            OwnershipVoucherPublicKeyCollection collection = discoveryService.GetOwnershipVoucherPublicKeys();

            // invoke the operation
            string ownershipVoucherPublicKeyName = "ownershipVoucherPublicKeyName";
            NullableResponse<OwnershipVoucherPublicKeyResource> response = await collection.GetIfExistsAsync(ownershipVoucherPublicKeyName);
            OwnershipVoucherPublicKeyResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                OwnershipVoucherPublicKeyData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
