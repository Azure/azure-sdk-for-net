// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Compute.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Managed Disk.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Disk : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Disk class.
        /// </summary>
        public Disk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Disk class.
        /// </summary>
        /// <param name="id">ID of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of Resource.</param>
        /// <param name="location">Location of the resource.</param>
        /// <param name="diskId">The disk id.</param>
        /// <param name="status">The disk status. Possible values include:
        /// 'Undefined', 'Unattached', 'Attached', 'Reserved', 'ActiveSAS',
        /// 'Unknown', 'All', 'Recommended', 'OfflineMigration',
        /// 'OnlineMigration'</param>
        /// <param name="sharePath">The disk share path.</param>
        /// <param name="actualSizeGB">The actual size of disk in GB.</param>
        /// <param name="provisionSizeGB">The provision size of disk in
        /// GB.</param>
        /// <param name="managedBy">Compute resource Uri which owns this
        /// disk.</param>
        /// <param name="userResourceId">The disk resource Uri from user
        /// view.</param>
        /// <param name="diskType">The type of the disk resource. Possible
        /// values include: 'Undefined', 'Disk', 'Snapshot', 'RestorePoint',
        /// 'ManagedBlob'</param>
        /// <param name="diskSku">the disk sku. Possible values include:
        /// 'Standard_LRS', 'Standard_ZRS', 'Standard_GRS', 'Standard_RAGRS',
        /// 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'</param>
        public Disk(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string diskId = default(string), string status = default(string), string sharePath = default(string), long? actualSizeGB = default(long?), long? provisionSizeGB = default(long?), string managedBy = default(string), string userResourceId = default(string), string diskType = default(string), string diskSku = default(string))
            : base(id, name, type, location)
        {
            DiskId = diskId;
            Status = status;
            SharePath = sharePath;
            ActualSizeGB = actualSizeGB;
            ProvisionSizeGB = provisionSizeGB;
            ManagedBy = managedBy;
            UserResourceId = userResourceId;
            DiskType = diskType;
            DiskSku = diskSku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the disk id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.diskId")]
        public string DiskId { get; set; }

        /// <summary>
        /// Gets or sets the disk status. Possible values include: 'Undefined',
        /// 'Unattached', 'Attached', 'Reserved', 'ActiveSAS', 'Unknown',
        /// 'All', 'Recommended', 'OfflineMigration', 'OnlineMigration'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the disk share path.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sharePath")]
        public string SharePath { get; set; }

        /// <summary>
        /// Gets the actual size of disk in GB.
        /// </summary>
        [JsonProperty(PropertyName = "properties.actualSizeGB")]
        public long? ActualSizeGB { get; private set; }

        /// <summary>
        /// Gets the provision size of disk in GB.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisionSizeGB")]
        public long? ProvisionSizeGB { get; private set; }

        /// <summary>
        /// Gets compute resource Uri which owns this disk.
        /// </summary>
        [JsonProperty(PropertyName = "properties.managedBy")]
        public string ManagedBy { get; private set; }

        /// <summary>
        /// Gets the disk resource Uri from user view.
        /// </summary>
        [JsonProperty(PropertyName = "properties.userResourceId")]
        public string UserResourceId { get; private set; }

        /// <summary>
        /// Gets the type of the disk resource. Possible values include:
        /// 'Undefined', 'Disk', 'Snapshot', 'RestorePoint', 'ManagedBlob'
        /// </summary>
        [JsonProperty(PropertyName = "properties.diskType")]
        public string DiskType { get; private set; }

        /// <summary>
        /// Gets the disk sku. Possible values include: 'Standard_LRS',
        /// 'Standard_ZRS', 'Standard_GRS', 'Standard_RAGRS', 'Premium_LRS',
        /// 'StandardSSD_LRS', 'UltraSSD_LRS'
        /// </summary>
        [JsonProperty(PropertyName = "properties.diskSku")]
        public string DiskSku { get; private set; }

    }
}
