// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Storage.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Storage encryption setting
    /// </summary>
    public partial class StorageEncryption
    {
        /// <summary>
        /// Initializes a new instance of the StorageEncryption class.
        /// </summary>
        public StorageEncryption()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageEncryption class.
        /// </summary>
        /// <param name="services">Services for which encryption setting is
        /// mentioned</param>
        /// <param name="keySource">Encryption keySource. Possible values
        /// include: 'Microsoft.Storage'</param>
        public StorageEncryption(StorageEncryptionServices services = default(StorageEncryptionServices), string keySource = default(string))
        {
            Services = services;
            KeySource = keySource;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets services for which encryption setting is mentioned
        /// </summary>
        [JsonProperty(PropertyName = "services")]
        public StorageEncryptionServices Services { get; private set; }

        /// <summary>
        /// Gets encryption keySource. Possible values include:
        /// 'Microsoft.Storage'
        /// </summary>
        [JsonProperty(PropertyName = "keySource")]
        public string KeySource { get; private set; }

    }
}
