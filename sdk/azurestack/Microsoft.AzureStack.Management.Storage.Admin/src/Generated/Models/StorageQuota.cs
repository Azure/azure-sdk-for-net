// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Storage.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Storage quota.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class StorageQuota : IResource
    {
        /// <summary>
        /// Initializes a new instance of the StorageQuota class.
        /// </summary>
        public StorageQuota()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageQuota class.
        /// </summary>
        /// <param name="numberOfStorageAccounts">Total number of storage
        /// accounts.</param>
        /// <param name="capacityInGb">Maximum capacity (GB).</param>
        /// <param name="name">quota name</param>
        /// <param name="location">location for the quota</param>
        /// <param name="id">id for the storage quota</param>
        /// <param name="type">resource type for storage quota</param>
        public StorageQuota(int? numberOfStorageAccounts = default(int?), int? capacityInGb = default(int?), string name = default(string), string location = default(string), string id = default(string), string type = default(string))
        {
            NumberOfStorageAccounts = numberOfStorageAccounts;
            CapacityInGb = capacityInGb;
            Name = name;
            Location = location;
            Id = id;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets total number of storage accounts.
        /// </summary>
        [JsonProperty(PropertyName = "properties.numberOfStorageAccounts")]
        public int? NumberOfStorageAccounts { get; set; }

        /// <summary>
        /// Gets or sets maximum capacity (GB).
        /// </summary>
        [JsonProperty(PropertyName = "properties.capacityInGb")]
        public int? CapacityInGb { get; set; }

        /// <summary>
        /// Gets quota name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets location for the quota
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; private set; }

        /// <summary>
        /// Gets id for the storage quota
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets resource type for storage quota
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
