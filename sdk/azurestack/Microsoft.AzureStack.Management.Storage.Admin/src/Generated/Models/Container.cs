// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Storage.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Container properties.
    /// </summary>
    public partial class Container
    {
        /// <summary>
        /// Initializes a new instance of the Container class.
        /// </summary>
        public Container()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Container class.
        /// </summary>
        /// <param name="sharename">The name of the share where the container
        /// locates.</param>
        /// <param name="accountname">The name of storage account where the
        /// container locates.</param>
        /// <param name="containername">Container name.</param>
        /// <param name="containerid">The container ID.</param>
        /// <param name="accountid">The ID of the storage account.</param>
        /// <param name="usedBytesInPrimaryVolume">The used space, in bytes, of
        /// the container in the primary volume.</param>
        /// <param name="containerState">The current state of the
        /// container.</param>
        public Container(string sharename = default(string), string accountname = default(string), string containername = default(string), long? containerid = default(long?), string accountid = default(string), long? usedBytesInPrimaryVolume = default(long?), string containerState = default(string))
        {
            Sharename = sharename;
            Accountname = accountname;
            Containername = containername;
            Containerid = containerid;
            Accountid = accountid;
            UsedBytesInPrimaryVolume = usedBytesInPrimaryVolume;
            ContainerState = containerState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the name of the share where the container locates.
        /// </summary>
        [JsonProperty(PropertyName = "sharename")]
        public string Sharename { get; private set; }

        /// <summary>
        /// Gets the name of storage account where the container locates.
        /// </summary>
        [JsonProperty(PropertyName = "accountname")]
        public string Accountname { get; private set; }

        /// <summary>
        /// Gets container name.
        /// </summary>
        [JsonProperty(PropertyName = "containername")]
        public string Containername { get; private set; }

        /// <summary>
        /// Gets the container ID.
        /// </summary>
        [JsonProperty(PropertyName = "containerid")]
        public long? Containerid { get; private set; }

        /// <summary>
        /// Gets the ID of the storage account.
        /// </summary>
        [JsonProperty(PropertyName = "accountid")]
        public string Accountid { get; private set; }

        /// <summary>
        /// Gets the used space, in bytes, of the container in the primary
        /// volume.
        /// </summary>
        [JsonProperty(PropertyName = "usedBytesInPrimaryVolume")]
        public long? UsedBytesInPrimaryVolume { get; private set; }

        /// <summary>
        /// Gets the current state of the container.
        /// </summary>
        [JsonProperty(PropertyName = "containerState")]
        public string ContainerState { get; private set; }

    }
}
