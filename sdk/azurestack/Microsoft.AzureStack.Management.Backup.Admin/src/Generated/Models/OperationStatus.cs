// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Backup.Admin.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OperationStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OperationStatus
    {
        [EnumMember(Value = "Creating")]
        Creating,
        [EnumMember(Value = "Queued")]
        Queued,
        [EnumMember(Value = "Running")]
        Running,
        [EnumMember(Value = "Deleted")]
        Deleted,
        [EnumMember(Value = "Failed")]
        Failed,
        [EnumMember(Value = "PartialSucceeded")]
        PartialSucceeded,
        [EnumMember(Value = "Succeeded")]
        Succeeded
    }
    internal static class OperationStatusEnumExtension
    {
        internal static string ToSerializedValue(this OperationStatus? value)
        {
            return value == null ? null : ((OperationStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OperationStatus value)
        {
            switch( value )
            {
                case OperationStatus.Creating:
                    return "Creating";
                case OperationStatus.Queued:
                    return "Queued";
                case OperationStatus.Running:
                    return "Running";
                case OperationStatus.Deleted:
                    return "Deleted";
                case OperationStatus.Failed:
                    return "Failed";
                case OperationStatus.PartialSucceeded:
                    return "PartialSucceeded";
                case OperationStatus.Succeeded:
                    return "Succeeded";
            }
            return null;
        }

        internal static OperationStatus? ParseOperationStatus(this string value)
        {
            switch( value )
            {
                case "Creating":
                    return OperationStatus.Creating;
                case "Queued":
                    return OperationStatus.Queued;
                case "Running":
                    return OperationStatus.Running;
                case "Deleted":
                    return OperationStatus.Deleted;
                case "Failed":
                    return OperationStatus.Failed;
                case "PartialSucceeded":
                    return OperationStatus.PartialSucceeded;
                case "Succeeded":
                    return OperationStatus.Succeeded;
            }
            return null;
        }
    }
}
