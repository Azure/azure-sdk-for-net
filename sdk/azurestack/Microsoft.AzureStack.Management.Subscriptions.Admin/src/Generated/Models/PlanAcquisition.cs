// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Subscriptions.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents the acquisition of an add-on plan for a subscription.
    /// </summary>
    public partial class PlanAcquisition
    {
        /// <summary>
        /// Initializes a new instance of the PlanAcquisition class.
        /// </summary>
        public PlanAcquisition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlanAcquisition class.
        /// </summary>
        /// <param name="acquisitionId">Acquisition identifier.</param>
        /// <param name="id">Identifier in the tenant subscription
        /// context.</param>
        /// <param name="planId">Plan identifier in the tenant subscription
        /// context.</param>
        /// <param name="externalReferenceId">External reference
        /// identifier.</param>
        /// <param name="provisioningState">State of the provisioning. Possible
        /// values include: 'NotSpecified', 'Accepted', 'Failed',
        /// 'Succeeded'</param>
        /// <param name="acquisitionTime">Acquisition time.</param>
        public PlanAcquisition(string acquisitionId = default(string), string id = default(string), string planId = default(string), string externalReferenceId = default(string), string provisioningState = default(string), System.DateTime? acquisitionTime = default(System.DateTime?))
        {
            AcquisitionId = acquisitionId;
            Id = id;
            PlanId = planId;
            ExternalReferenceId = externalReferenceId;
            ProvisioningState = provisioningState;
            AcquisitionTime = acquisitionTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets acquisition identifier.
        /// </summary>
        [JsonProperty(PropertyName = "acquisitionId")]
        public string AcquisitionId { get; set; }

        /// <summary>
        /// Gets or sets identifier in the tenant subscription context.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets plan identifier in the tenant subscription context.
        /// </summary>
        [JsonProperty(PropertyName = "planId")]
        public string PlanId { get; set; }

        /// <summary>
        /// Gets or sets external reference identifier.
        /// </summary>
        [JsonProperty(PropertyName = "externalReferenceId")]
        public string ExternalReferenceId { get; set; }

        /// <summary>
        /// Gets or sets state of the provisioning. Possible values include:
        /// 'NotSpecified', 'Accepted', 'Failed', 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets acquisition time.
        /// </summary>
        [JsonProperty(PropertyName = "acquisitionTime")]
        public System.DateTime? AcquisitionTime { get; set; }

    }
}
