// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Subscriptions.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The delegated provider offer.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DelegatedProviderOffer : Resource
    {
        /// <summary>
        /// Initializes a new instance of the DelegatedProviderOffer class.
        /// </summary>
        public DelegatedProviderOffer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DelegatedProviderOffer class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of resource.</param>
        /// <param name="location">Location of the resource</param>
        /// <param name="tags">List of key-value pairs.</param>
        /// <param name="delegatedOfferId">The delegated offer
        /// identifier.</param>
        /// <param name="displayName">Display name of offer.</param>
        /// <param name="description">Description of offer.</param>
        /// <param name="externalReferenceId">External reference
        /// identifier.</param>
        /// <param name="accessibilityState">Offer accessibility state.
        /// Possible values include: 'Private', 'Public',
        /// 'Decommissioned'</param>
        /// <param name="subscriptionCount">Current subscription count.</param>
        public DelegatedProviderOffer(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string delegatedOfferId = default(string), string displayName = default(string), string description = default(string), string externalReferenceId = default(string), string accessibilityState = default(string), int? subscriptionCount = default(int?))
            : base(id, name, type, location, tags)
        {
            DelegatedOfferId = delegatedOfferId;
            DisplayName = displayName;
            Description = description;
            ExternalReferenceId = externalReferenceId;
            AccessibilityState = accessibilityState;
            SubscriptionCount = subscriptionCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the delegated offer identifier.
        /// </summary>
        [JsonProperty(PropertyName = "properties.delegatedOfferId")]
        public string DelegatedOfferId { get; set; }

        /// <summary>
        /// Gets or sets display name of offer.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets description of offer.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets external reference identifier.
        /// </summary>
        [JsonProperty(PropertyName = "properties.externalReferenceId")]
        public string ExternalReferenceId { get; set; }

        /// <summary>
        /// Gets or sets offer accessibility state. Possible values include:
        /// 'Private', 'Public', 'Decommissioned'
        /// </summary>
        [JsonProperty(PropertyName = "properties.accessibilityState")]
        public string AccessibilityState { get; set; }

        /// <summary>
        /// Gets or sets current subscription count.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subscriptionCount")]
        public int? SubscriptionCount { get; set; }

    }
}
