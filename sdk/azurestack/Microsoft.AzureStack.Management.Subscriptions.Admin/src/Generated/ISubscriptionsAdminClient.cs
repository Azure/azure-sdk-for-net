// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Subscriptions.Admin
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Subscriptions Admin Client
    /// </summary>
    public partial interface ISubscriptionsAdminClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Credentials needed for the client to connect to Azure.
        /// </summary>
        ServiceClientCredentials Credentials { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify Microsoft Azure
        /// subscription.The subscription ID forms part of the URI for every
        /// service call.
        /// </summary>
        string SubscriptionId { get; set; }

        /// <summary>
        /// Client Api Version.
        /// </summary>
        string ApiVersion { get; }

        /// <summary>
        /// Gets or sets the preferred language for the response.
        /// </summary>
        string AcceptLanguage { get; set; }

        /// <summary>
        /// Gets or sets the retry timeout in seconds for Long Running
        /// Operations. Default value is 30.
        /// </summary>
        int? LongRunningOperationRetryTimeout { get; set; }

        /// <summary>
        /// When set to true a unique x-ms-client-request-id value is generated
        /// and included in each request. Default is true.
        /// </summary>
        bool? GenerateClientRequestId { get; set; }


        /// <summary>
        /// Gets the IOperations.
        /// </summary>
        IOperations Operations { get; }

        /// <summary>
        /// Gets the ISubscriptionsOperations.
        /// </summary>
        ISubscriptionsOperations Subscriptions { get; }

        /// <summary>
        /// Gets the IAcquiredPlansOperations.
        /// </summary>
        IAcquiredPlansOperations AcquiredPlans { get; }

        /// <summary>
        /// Gets the IDelegatedProvidersOperations.
        /// </summary>
        IDelegatedProvidersOperations DelegatedProviders { get; }

        /// <summary>
        /// Gets the IDelegatedProviderOffersOperations.
        /// </summary>
        IDelegatedProviderOffersOperations DelegatedProviderOffers { get; }

        /// <summary>
        /// Gets the IDirectoryTenantsOperations.
        /// </summary>
        IDirectoryTenantsOperations DirectoryTenants { get; }

        /// <summary>
        /// Gets the ILocationsOperations.
        /// </summary>
        ILocationsOperations Locations { get; }

        /// <summary>
        /// Gets the IOffersOperations.
        /// </summary>
        IOffersOperations Offers { get; }

        /// <summary>
        /// Gets the IOfferDelegationsOperations.
        /// </summary>
        IOfferDelegationsOperations OfferDelegations { get; }

        /// <summary>
        /// Gets the IPlansOperations.
        /// </summary>
        IPlansOperations Plans { get; }

        /// <summary>
        /// Gets the IQuotasOperations.
        /// </summary>
        IQuotasOperations Quotas { get; }

        /// <summary>
        /// Update the encryption settings.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> UpdateEncryptionWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Restores the data
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SubscriptionList>> RestoreDataWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
