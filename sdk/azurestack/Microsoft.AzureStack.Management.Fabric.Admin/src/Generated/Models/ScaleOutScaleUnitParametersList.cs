// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Fabric.Admin.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A list of input data that allows for adding a set of scale unit nodes.
    /// </summary>
    public partial class ScaleOutScaleUnitParametersList
    {
        /// <summary>
        /// Initializes a new instance of the ScaleOutScaleUnitParametersList
        /// class.
        /// </summary>
        public ScaleOutScaleUnitParametersList()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScaleOutScaleUnitParametersList
        /// class.
        /// </summary>
        /// <param name="nodeList">List of nodes in the scale unit.</param>
        /// <param name="awaitStorageConvergence">Flag indicates if the
        /// operation should wait for storage to converge before
        /// returning.</param>
        public ScaleOutScaleUnitParametersList(IList<ScaleOutScaleUnitParameters> nodeList = default(IList<ScaleOutScaleUnitParameters>), bool? awaitStorageConvergence = default(bool?))
        {
            NodeList = nodeList;
            AwaitStorageConvergence = awaitStorageConvergence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of nodes in the scale unit.
        /// </summary>
        [JsonProperty(PropertyName = "nodeList")]
        public IList<ScaleOutScaleUnitParameters> NodeList { get; set; }

        /// <summary>
        /// Gets or sets flag indicates if the operation should wait for
        /// storage to converge before returning.
        /// </summary>
        [JsonProperty(PropertyName = "awaitStorageConvergence")]
        public bool? AwaitStorageConvergence { get; set; }

    }
}
