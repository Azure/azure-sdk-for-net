// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Fabric.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Representation of a storage system resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class StorageSubSystem : Resource
    {
        /// <summary>
        /// Initializes a new instance of the StorageSubSystem class.
        /// </summary>
        public StorageSubSystem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageSubSystem class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of resource.</param>
        /// <param name="location">The region where the resource is
        /// located.</param>
        /// <param name="tags">List of key-value pairs.</param>
        /// <param name="totalCapacityGB">Total capacity in GB of the
        /// subsystem.</param>
        /// <param name="remainingCapacityGB">Remaining capacity in GB of the
        /// subsystem.</param>
        /// <param name="healthStatus">Health status of the subsystem.</param>
        /// <param name="operationalStatus">Operational status of the
        /// subsystem.</param>
        /// <param name="rebalanceStatus">Rebalance status of the
        /// subsystem.</param>
        public StorageSubSystem(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), int? totalCapacityGB = default(int?), int? remainingCapacityGB = default(int?), string healthStatus = default(string), string operationalStatus = default(string), string rebalanceStatus = default(string))
            : base(id, name, type, location, tags)
        {
            TotalCapacityGB = totalCapacityGB;
            RemainingCapacityGB = remainingCapacityGB;
            HealthStatus = healthStatus;
            OperationalStatus = operationalStatus;
            RebalanceStatus = rebalanceStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets total capacity in GB of the subsystem.
        /// </summary>
        [JsonProperty(PropertyName = "properties.totalCapacityGB")]
        public int? TotalCapacityGB { get; set; }

        /// <summary>
        /// Gets or sets remaining capacity in GB of the subsystem.
        /// </summary>
        [JsonProperty(PropertyName = "properties.remainingCapacityGB")]
        public int? RemainingCapacityGB { get; set; }

        /// <summary>
        /// Gets or sets health status of the subsystem.
        /// </summary>
        [JsonProperty(PropertyName = "properties.healthStatus")]
        public string HealthStatus { get; set; }

        /// <summary>
        /// Gets or sets operational status of the subsystem.
        /// </summary>
        [JsonProperty(PropertyName = "properties.operationalStatus")]
        public string OperationalStatus { get; set; }

        /// <summary>
        /// Gets or sets rebalance status of the subsystem.
        /// </summary>
        [JsonProperty(PropertyName = "properties.rebalanceStatus")]
        public string RebalanceStatus { get; set; }

    }
}
