// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Fabric.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Fabric Location resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class FabricLocation : Resource
    {
        /// <summary>
        /// Initializes a new instance of the FabricLocation class.
        /// </summary>
        public FabricLocation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FabricLocation class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of resource.</param>
        /// <param name="location">The region where the resource is
        /// located.</param>
        /// <param name="tags">List of key-value pairs.</param>
        /// <param name="pepIpAddresses">The IP addresses of the privileged
        /// endpoints.</param>
        /// <param name="timeServer">The IP address of the time server.</param>
        /// <param name="stampInformationId">The deployment id of the
        /// stamp.</param>
        /// <param name="externalDNSIPAddress01">First external IP address of
        /// the DNS server.</param>
        /// <param name="externalDNSIPAddress02">Second external IP Address of
        /// the DNS server.</param>
        /// <param name="exclusiveAdminOperationRunning">Value for whether an
        /// exclusive admin operation is running.</param>
        /// <param name="exclusiveAdminOperationName">Name of the running
        /// exclusive admin operation.</param>
        /// <param name="startUpActionPlanStartTime">Last known stamp start
        /// time for the start up action plan.</param>
        /// <param name="startUpActionPlanEndTime">Last known stamp stop time
        /// for the start up action plan.</param>
        /// <param name="shutDownActionPlanStartTime">Last known stamp start
        /// time for the shut down action plan</param>
        /// <param name="shutDownActionPlanEndTime">Last known stamp stop time
        /// for the shut down action plan.</param>
        public FabricLocation(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<string> pepIpAddresses = default(IList<string>), string timeServer = default(string), string stampInformationId = default(string), string externalDNSIPAddress01 = default(string), string externalDNSIPAddress02 = default(string), bool? exclusiveAdminOperationRunning = default(bool?), string exclusiveAdminOperationName = default(string), System.DateTime? startUpActionPlanStartTime = default(System.DateTime?), System.DateTime? startUpActionPlanEndTime = default(System.DateTime?), System.DateTime? shutDownActionPlanStartTime = default(System.DateTime?), System.DateTime? shutDownActionPlanEndTime = default(System.DateTime?))
            : base(id, name, type, location, tags)
        {
            PepIpAddresses = pepIpAddresses;
            TimeServer = timeServer;
            StampInformationId = stampInformationId;
            ExternalDNSIPAddress01 = externalDNSIPAddress01;
            ExternalDNSIPAddress02 = externalDNSIPAddress02;
            ExclusiveAdminOperationRunning = exclusiveAdminOperationRunning;
            ExclusiveAdminOperationName = exclusiveAdminOperationName;
            StartUpActionPlanStartTime = startUpActionPlanStartTime;
            StartUpActionPlanEndTime = startUpActionPlanEndTime;
            ShutDownActionPlanStartTime = shutDownActionPlanStartTime;
            ShutDownActionPlanEndTime = shutDownActionPlanEndTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the IP addresses of the privileged endpoints.
        /// </summary>
        [JsonProperty(PropertyName = "properties.pepIpAddresses")]
        public IList<string> PepIpAddresses { get; set; }

        /// <summary>
        /// Gets or sets the IP address of the time server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeServer")]
        public string TimeServer { get; set; }

        /// <summary>
        /// Gets or sets the deployment id of the stamp.
        /// </summary>
        [JsonProperty(PropertyName = "properties.stampInformationId")]
        public string StampInformationId { get; set; }

        /// <summary>
        /// Gets or sets first external IP address of the DNS server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.externalDNSIPAddress01")]
        public string ExternalDNSIPAddress01 { get; set; }

        /// <summary>
        /// Gets or sets second external IP Address of the DNS server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.externalDNSIPAddress02")]
        public string ExternalDNSIPAddress02 { get; set; }

        /// <summary>
        /// Gets or sets value for whether an exclusive admin operation is
        /// running.
        /// </summary>
        [JsonProperty(PropertyName = "properties.exclusiveAdminOperationRunning")]
        public bool? ExclusiveAdminOperationRunning { get; set; }

        /// <summary>
        /// Gets or sets name of the running exclusive admin operation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.exclusiveAdminOperationName")]
        public string ExclusiveAdminOperationName { get; set; }

        /// <summary>
        /// Gets or sets last known stamp start time for the start up action
        /// plan.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startUpActionPlanStartTime")]
        public System.DateTime? StartUpActionPlanStartTime { get; set; }

        /// <summary>
        /// Gets or sets last known stamp stop time for the start up action
        /// plan.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startUpActionPlanEndTime")]
        public System.DateTime? StartUpActionPlanEndTime { get; set; }

        /// <summary>
        /// Gets or sets last known stamp start time for the shut down action
        /// plan
        /// </summary>
        [JsonProperty(PropertyName = "properties.shutDownActionPlanStartTime")]
        public System.DateTime? ShutDownActionPlanStartTime { get; set; }

        /// <summary>
        /// Gets or sets last known stamp stop time for the shut down action
        /// plan.
        /// </summary>
        [JsonProperty(PropertyName = "properties.shutDownActionPlanEndTime")]
        public System.DateTime? ShutDownActionPlanEndTime { get; set; }

    }
}
