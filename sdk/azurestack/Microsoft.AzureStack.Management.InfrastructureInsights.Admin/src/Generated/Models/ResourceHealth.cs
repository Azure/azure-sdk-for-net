// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.InfrastructureInsights.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Health information related to a resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ResourceHealth : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the ResourceHealth class.
        /// </summary>
        public ResourceHealth()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceHealth class.
        /// </summary>
        /// <param name="id">Fully qualified resource Id for the
        /// resource</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="location">The Azure Region where the resource
        /// lives</param>
        /// <param name="alertSummary">Alert summary.</param>
        /// <param name="healthState">Health state.</param>
        /// <param name="namespaceProperty">Namespace of the health
        /// resource.</param>
        /// <param name="registrationId">Registration ID.</param>
        /// <param name="routePrefix">Route prefix.</param>
        /// <param name="resourceLocation">Resource location.</param>
        /// <param name="resourceName">Resource name.</param>
        /// <param name="resourceDisplayName">Resource display name.</param>
        /// <param name="resourceType">Resource type.</param>
        /// <param name="resourceURI">Gets or sets the resource URI.</param>
        /// <param name="rpRegistrationId">Gets or sets the resource provider
        /// registration ID.</param>
        /// <param name="usageMetrics">Usage metrics.</param>
        public ResourceHealth(string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string location = default(string), AlertSummary alertSummary = default(AlertSummary), string healthState = default(string), string namespaceProperty = default(string), string registrationId = default(string), string routePrefix = default(string), string resourceLocation = default(string), string resourceName = default(string), string resourceDisplayName = default(string), string resourceType = default(string), string resourceURI = default(string), string rpRegistrationId = default(string), IList<UsageMetrics> usageMetrics = default(IList<UsageMetrics>))
            : base(id, name, type, tags, location)
        {
            AlertSummary = alertSummary;
            HealthState = healthState;
            NamespaceProperty = namespaceProperty;
            RegistrationId = registrationId;
            RoutePrefix = routePrefix;
            ResourceLocation = resourceLocation;
            ResourceName = resourceName;
            ResourceDisplayName = resourceDisplayName;
            ResourceType = resourceType;
            ResourceURI = resourceURI;
            RpRegistrationId = rpRegistrationId;
            UsageMetrics = usageMetrics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets alert summary.
        /// </summary>
        [JsonProperty(PropertyName = "properties.alertSummary")]
        public AlertSummary AlertSummary { get; set; }

        /// <summary>
        /// Gets or sets health state.
        /// </summary>
        [JsonProperty(PropertyName = "properties.healthState")]
        public string HealthState { get; set; }

        /// <summary>
        /// Gets or sets namespace of the health resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets registration ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.registrationId")]
        public string RegistrationId { get; set; }

        /// <summary>
        /// Gets or sets route prefix.
        /// </summary>
        [JsonProperty(PropertyName = "properties.routePrefix")]
        public string RoutePrefix { get; set; }

        /// <summary>
        /// Gets or sets resource location.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceLocation")]
        public string ResourceLocation { get; set; }

        /// <summary>
        /// Gets or sets resource name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceName")]
        public string ResourceName { get; set; }

        /// <summary>
        /// Gets or sets resource display name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceDisplayName")]
        public string ResourceDisplayName { get; set; }

        /// <summary>
        /// Gets or sets resource type.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or sets the resource URI.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceURI")]
        public string ResourceURI { get; set; }

        /// <summary>
        /// Gets or sets the resource provider registration ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.rpRegistrationId")]
        public string RpRegistrationId { get; set; }

        /// <summary>
        /// Gets or sets usage metrics.
        /// </summary>
        [JsonProperty(PropertyName = "properties.usageMetrics")]
        public IList<UsageMetrics> UsageMetrics { get; set; }

    }
}
