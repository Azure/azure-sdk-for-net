// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureStack.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Customer subscription.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CustomerSubscription : Resource
    {
        /// <summary>
        /// Initializes a new instance of the CustomerSubscription class.
        /// </summary>
        public CustomerSubscription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomerSubscription class.
        /// </summary>
        /// <param name="id">ID of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of Resource.</param>
        /// <param name="etag">The entity tag used for optimistic concurrency
        /// when modifying the resource.</param>
        /// <param name="tenantId">Tenant Id.</param>
        public CustomerSubscription(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), string tenantId = default(string))
            : base(id, name, type, etag)
        {
            TenantId = tenantId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets tenant Id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantId")]
        public string TenantId { get; set; }

    }
}
