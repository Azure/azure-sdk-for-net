// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.StorageMover.Models
{
    internal static partial class ScheduleDayOfWeekExtensions
    {
        public static string ToSerialString(this ScheduleDayOfWeek value) => value switch
        {
            ScheduleDayOfWeek.Monday => "Monday",
            ScheduleDayOfWeek.Tuesday => "Tuesday",
            ScheduleDayOfWeek.Wednesday => "Wednesday",
            ScheduleDayOfWeek.Thursday => "Thursday",
            ScheduleDayOfWeek.Friday => "Friday",
            ScheduleDayOfWeek.Saturday => "Saturday",
            ScheduleDayOfWeek.Sunday => "Sunday",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ScheduleDayOfWeek value.")
        };

        public static ScheduleDayOfWeek ToScheduleDayOfWeek(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Monday")) return ScheduleDayOfWeek.Monday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Tuesday")) return ScheduleDayOfWeek.Tuesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Wednesday")) return ScheduleDayOfWeek.Wednesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Thursday")) return ScheduleDayOfWeek.Thursday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Friday")) return ScheduleDayOfWeek.Friday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Saturday")) return ScheduleDayOfWeek.Saturday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Sunday")) return ScheduleDayOfWeek.Sunday;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ScheduleDayOfWeek value.");
        }
    }
}
