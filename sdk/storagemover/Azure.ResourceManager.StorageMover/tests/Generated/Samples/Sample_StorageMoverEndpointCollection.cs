// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.StorageMover.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.StorageMover.Samples
{
    public partial class Sample_StorageMoverEndpointCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_EndpointsCreateOrUpdateAzureStorageBlobContainer()
        {
            // Generated from example definition: 2024-07-01/Endpoints_CreateOrUpdate_AzureStorageBlobContainer.json
            // this example is just showing the usage of "Endpoint_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointData data = new StorageMoverEndpointData(null);
            ArmOperation<StorageMoverEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointName, data);
            StorageMoverEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_EndpointsCreateOrUpdateAzureStorageSmbFileShare()
        {
            // Generated from example definition: 2024-07-01/Endpoints_CreateOrUpdate_AzureStorageSmbFileShare.json
            // this example is just showing the usage of "Endpoint_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointData data = new StorageMoverEndpointData(null);
            ArmOperation<StorageMoverEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointName, data);
            StorageMoverEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_EndpointsCreateOrUpdateNfsMount()
        {
            // Generated from example definition: 2024-07-01/Endpoints_CreateOrUpdate_NfsMount.json
            // this example is just showing the usage of "Endpoint_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointData data = new StorageMoverEndpointData(null);
            ArmOperation<StorageMoverEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointName, data);
            StorageMoverEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_EndpointsCreateOrUpdateSmbMount()
        {
            // Generated from example definition: 2024-07-01/Endpoints_CreateOrUpdate_SmbMount.json
            // this example is just showing the usage of "Endpoint_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointData data = new StorageMoverEndpointData(null);
            ArmOperation<StorageMoverEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointName, data);
            StorageMoverEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_EndpointsGetAzureStorageBlobContainer()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_AzureStorageBlobContainer.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointResource result = await collection.GetAsync(endpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_EndpointsGetAzureStorageSmbFileShare()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_AzureStorageSmbFileShare.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointResource result = await collection.GetAsync(endpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_EndpointsGetNfsMount()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_NfsMount.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointResource result = await collection.GetAsync(endpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_EndpointsGetSmbMount()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_SmbMount.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointResource result = await collection.GetAsync(endpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_EndpointsList()
        {
            // Generated from example definition: 2024-07-01/Endpoints_List.json
            // this example is just showing the usage of "Endpoint_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation and iterate over the result
            await foreach (StorageMoverEndpointResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageMoverEndpointData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_EndpointsGetAzureStorageBlobContainer()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_AzureStorageBlobContainer.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            bool result = await collection.ExistsAsync(endpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_EndpointsGetAzureStorageSmbFileShare()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_AzureStorageSmbFileShare.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            bool result = await collection.ExistsAsync(endpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_EndpointsGetNfsMount()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_NfsMount.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            bool result = await collection.ExistsAsync(endpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_EndpointsGetSmbMount()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_SmbMount.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            bool result = await collection.ExistsAsync(endpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_EndpointsGetAzureStorageBlobContainer()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_AzureStorageBlobContainer.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            NullableResponse<StorageMoverEndpointResource> response = await collection.GetIfExistsAsync(endpointName);
            StorageMoverEndpointResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageMoverEndpointData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_EndpointsGetAzureStorageSmbFileShare()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_AzureStorageSmbFileShare.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            NullableResponse<StorageMoverEndpointResource> response = await collection.GetIfExistsAsync(endpointName);
            StorageMoverEndpointResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageMoverEndpointData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_EndpointsGetNfsMount()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_NfsMount.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            NullableResponse<StorageMoverEndpointResource> response = await collection.GetIfExistsAsync(endpointName);
            StorageMoverEndpointResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageMoverEndpointData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_EndpointsGetSmbMount()
        {
            // Generated from example definition: 2024-07-01/Endpoints_Get_SmbMount.json
            // this example is just showing the usage of "Endpoint_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "60bcfc77-6589-4da2-b7fd-f9ec9322cf95";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            NullableResponse<StorageMoverEndpointResource> response = await collection.GetIfExistsAsync(endpointName);
            StorageMoverEndpointResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageMoverEndpointData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
