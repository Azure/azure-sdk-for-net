// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DatabaseFleetManager.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DatabaseFleetManager.Samples
{
    public partial class Sample_FirewallRuleCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_CreateOrUpdateFirewallRuleGeneratedByPolicy()
        {
            // Generated from example definition: 2025-02-01-preview/FirewallRules_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "FirewallRule_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FleetspaceResource created on azure
            // for more information of creating FleetspaceResource, please refer to the document of FleetspaceResource
            string subscriptionId = "a2b3c4d5-6789-0123-4567-89abcdef1234";
            string resourceGroupName = "rg-networking-operations";
            string fleetName = "data-fleet-01";
            string fleetspaceName = "prod-environment";
            ResourceIdentifier fleetspaceResourceId = FleetspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName);
            FleetspaceResource fleetspace = client.GetFleetspaceResource(fleetspaceResourceId);

            // get the collection of this FirewallRuleResource
            FirewallRuleCollection collection = fleetspace.GetFirewallRules();

            // invoke the operation
            string firewallRuleName = "allow-10-0-0-0-24-to-10-1-0-0-24";
            FirewallRuleData data = new FirewallRuleData
            {
                Properties = new FirewallRuleProperties
                {
                    StartIPAddress = "10.0.0.0",
                    EndIPAddress = "10.0.0.255",
                },
            };
            ArmOperation<FirewallRuleResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, firewallRuleName, data);
            FirewallRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            FirewallRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetFirewallRuleGeneratedByPolicy()
        {
            // Generated from example definition: 2025-02-01-preview/FirewallRules_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "FirewallRule_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FleetspaceResource created on azure
            // for more information of creating FleetspaceResource, please refer to the document of FleetspaceResource
            string subscriptionId = "a2b3c4d5-6789-0123-4567-89abcdef1234";
            string resourceGroupName = "rg-networking-operations";
            string fleetName = "data-fleet-01";
            string fleetspaceName = "prod-environment";
            ResourceIdentifier fleetspaceResourceId = FleetspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName);
            FleetspaceResource fleetspace = client.GetFleetspaceResource(fleetspaceResourceId);

            // get the collection of this FirewallRuleResource
            FirewallRuleCollection collection = fleetspace.GetFirewallRules();

            // invoke the operation
            string firewallRuleName = "allow-10-0-0-0-24-to-10-1-0-0-24";
            FirewallRuleResource result = await collection.GetAsync(firewallRuleName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            FirewallRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ListFirewallRulesByFleetspaceGeneratedByPolicy()
        {
            // Generated from example definition: 2025-02-01-preview/FirewallRules_ListByFleetspace_MaximumSet_Gen.json
            // this example is just showing the usage of "FirewallRule_ListByFleetspace" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FleetspaceResource created on azure
            // for more information of creating FleetspaceResource, please refer to the document of FleetspaceResource
            string subscriptionId = "a2b3c4d5-6789-0123-4567-89abcdef1234";
            string resourceGroupName = "rg-networking-operations";
            string fleetName = "data-fleet-01";
            string fleetspaceName = "prod-environment";
            ResourceIdentifier fleetspaceResourceId = FleetspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName);
            FleetspaceResource fleetspace = client.GetFleetspaceResource(fleetspaceResourceId);

            // get the collection of this FirewallRuleResource
            FirewallRuleCollection collection = fleetspace.GetFirewallRules();

            // invoke the operation and iterate over the result
            await foreach (FirewallRuleResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                FirewallRuleData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_GetFirewallRuleGeneratedByPolicy()
        {
            // Generated from example definition: 2025-02-01-preview/FirewallRules_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "FirewallRule_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FleetspaceResource created on azure
            // for more information of creating FleetspaceResource, please refer to the document of FleetspaceResource
            string subscriptionId = "a2b3c4d5-6789-0123-4567-89abcdef1234";
            string resourceGroupName = "rg-networking-operations";
            string fleetName = "data-fleet-01";
            string fleetspaceName = "prod-environment";
            ResourceIdentifier fleetspaceResourceId = FleetspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName);
            FleetspaceResource fleetspace = client.GetFleetspaceResource(fleetspaceResourceId);

            // get the collection of this FirewallRuleResource
            FirewallRuleCollection collection = fleetspace.GetFirewallRules();

            // invoke the operation
            string firewallRuleName = "allow-10-0-0-0-24-to-10-1-0-0-24";
            bool result = await collection.ExistsAsync(firewallRuleName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_GetFirewallRuleGeneratedByPolicy()
        {
            // Generated from example definition: 2025-02-01-preview/FirewallRules_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "FirewallRule_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FleetspaceResource created on azure
            // for more information of creating FleetspaceResource, please refer to the document of FleetspaceResource
            string subscriptionId = "a2b3c4d5-6789-0123-4567-89abcdef1234";
            string resourceGroupName = "rg-networking-operations";
            string fleetName = "data-fleet-01";
            string fleetspaceName = "prod-environment";
            ResourceIdentifier fleetspaceResourceId = FleetspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName);
            FleetspaceResource fleetspace = client.GetFleetspaceResource(fleetspaceResourceId);

            // get the collection of this FirewallRuleResource
            FirewallRuleCollection collection = fleetspace.GetFirewallRules();

            // invoke the operation
            string firewallRuleName = "allow-10-0-0-0-24-to-10-1-0-0-24";
            NullableResponse<FirewallRuleResource> response = await collection.GetIfExistsAsync(firewallRuleName);
            FirewallRuleResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                FirewallRuleData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
