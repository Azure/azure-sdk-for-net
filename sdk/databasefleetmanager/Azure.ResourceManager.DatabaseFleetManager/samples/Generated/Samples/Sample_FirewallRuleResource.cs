// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DatabaseFleetManager.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DatabaseFleetManager.Samples
{
    public partial class Sample_FirewallRuleResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetFirewallRuleGeneratedByPolicy()
        {
            // Generated from example definition: 2025-02-01-preview/FirewallRules_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "FirewallRule_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FirewallRuleResource created on azure
            // for more information of creating FirewallRuleResource, please refer to the document of FirewallRuleResource
            string subscriptionId = "a2b3c4d5-6789-0123-4567-89abcdef1234";
            string resourceGroupName = "rg-networking-operations";
            string fleetName = "data-fleet-01";
            string fleetspaceName = "prod-environment";
            string firewallRuleName = "allow-10-0-0-0-24-to-10-1-0-0-24";
            ResourceIdentifier firewallRuleResourceId = FirewallRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName, firewallRuleName);
            FirewallRuleResource firewallRule = client.GetFirewallRuleResource(firewallRuleResourceId);

            // invoke the operation
            FirewallRuleResource result = await firewallRule.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            FirewallRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteFirewallRuleGeneratedByPolicy()
        {
            // Generated from example definition: 2025-02-01-preview/FirewallRules_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "FirewallRule_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FirewallRuleResource created on azure
            // for more information of creating FirewallRuleResource, please refer to the document of FirewallRuleResource
            string subscriptionId = "a2b3c4d5-6789-0123-4567-89abcdef1234";
            string resourceGroupName = "rg-networking-operations";
            string fleetName = "data-fleet-01";
            string fleetspaceName = "prod-environment";
            string firewallRuleName = "allow-10-0-0-0-24-to-10-1-0-0-24";
            ResourceIdentifier firewallRuleResourceId = FirewallRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName, firewallRuleName);
            FirewallRuleResource firewallRule = client.GetFirewallRuleResource(firewallRuleResourceId);

            // invoke the operation
            await firewallRule.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_CreateOrUpdateFirewallRuleGeneratedByPolicy()
        {
            // Generated from example definition: 2025-02-01-preview/FirewallRules_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "FirewallRule_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this FirewallRuleResource created on azure
            // for more information of creating FirewallRuleResource, please refer to the document of FirewallRuleResource
            string subscriptionId = "a2b3c4d5-6789-0123-4567-89abcdef1234";
            string resourceGroupName = "rg-networking-operations";
            string fleetName = "data-fleet-01";
            string fleetspaceName = "prod-environment";
            string firewallRuleName = "allow-10-0-0-0-24-to-10-1-0-0-24";
            ResourceIdentifier firewallRuleResourceId = FirewallRuleResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, fleetspaceName, firewallRuleName);
            FirewallRuleResource firewallRule = client.GetFirewallRuleResource(firewallRuleResourceId);

            // invoke the operation
            FirewallRuleData data = new FirewallRuleData
            {
                Properties = new FirewallRuleProperties
                {
                    StartIPAddress = "10.0.0.0",
                    EndIPAddress = "10.0.0.255",
                },
            };
            ArmOperation<FirewallRuleResource> lro = await firewallRule.UpdateAsync(WaitUntil.Completed, data);
            FirewallRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            FirewallRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
