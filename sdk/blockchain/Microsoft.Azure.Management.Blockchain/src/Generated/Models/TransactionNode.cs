// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Blockchain.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Payload of the transaction node which is the request/response of the
    /// resource provider.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TransactionNode : Resource
    {
        /// <summary>
        /// Initializes a new instance of the TransactionNode class.
        /// </summary>
        public TransactionNode()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransactionNode class.
        /// </summary>
        /// <param name="id">Fully qualified resource Id of the
        /// resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the service - e.g.
        /// "Microsoft.Blockchain"</param>
        /// <param name="location">Gets or sets the transaction node
        /// location.</param>
        /// <param name="provisioningState">Gets or sets the blockchain member
        /// provision state. Possible values include: 'NotSpecified',
        /// 'Updating', 'Deleting', 'Succeeded', 'Failed'</param>
        /// <param name="dns">Gets or sets the transaction node dns
        /// endpoint.</param>
        /// <param name="publicKey">Gets or sets the transaction node public
        /// key.</param>
        /// <param name="userName">Gets or sets the transaction node dns
        /// endpoint basic auth user name.</param>
        /// <param name="password">Sets the transaction node dns endpoint basic
        /// auth password.</param>
        /// <param name="firewallRules">Gets or sets the firewall
        /// rules.</param>
        public TransactionNode(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string provisioningState = default(string), string dns = default(string), string publicKey = default(string), string userName = default(string), string password = default(string), IList<FirewallRule> firewallRules = default(IList<FirewallRule>))
            : base(id, name, type)
        {
            Location = location;
            ProvisioningState = provisioningState;
            Dns = dns;
            PublicKey = publicKey;
            UserName = userName;
            Password = password;
            FirewallRules = firewallRules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the transaction node location.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the blockchain member provision state. Possible values
        /// include: 'NotSpecified', 'Updating', 'Deleting', 'Succeeded',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the transaction node dns endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dns")]
        public string Dns { get; private set; }

        /// <summary>
        /// Gets or sets the transaction node public key.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicKey")]
        public string PublicKey { get; private set; }

        /// <summary>
        /// Gets or sets the transaction node dns endpoint basic auth user
        /// name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.userName")]
        public string UserName { get; private set; }

        /// <summary>
        /// Gets or sets sets the transaction node dns endpoint basic auth
        /// password.
        /// </summary>
        [JsonProperty(PropertyName = "properties.password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets the firewall rules.
        /// </summary>
        [JsonProperty(PropertyName = "properties.firewallRules")]
        public IList<FirewallRule> FirewallRules { get; set; }

    }
}
