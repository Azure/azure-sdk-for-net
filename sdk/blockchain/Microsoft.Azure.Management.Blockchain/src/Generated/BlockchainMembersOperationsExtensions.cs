// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Blockchain
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BlockchainMembersOperations.
    /// </summary>
    public static partial class BlockchainMembersOperationsExtensions
    {
            /// <summary>
            /// Get details about a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            public static BlockchainMember Get(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName)
            {
                return operations.GetAsync(blockchainMemberName, resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get details about a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BlockchainMember> GetAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='blockchainMember'>
            /// Payload to create a blockchain member.
            /// </param>
            public static BlockchainMember Create(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, BlockchainMember blockchainMember = default(BlockchainMember))
            {
                return operations.CreateAsync(blockchainMemberName, resourceGroupName, blockchainMember).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='blockchainMember'>
            /// Payload to create a blockchain member.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BlockchainMember> CreateAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, BlockchainMember blockchainMember = default(BlockchainMember), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, blockchainMember, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            public static void Delete(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName)
            {
                operations.DeleteAsync(blockchainMemberName, resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Update a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='blockchainMember'>
            /// Payload to update the blockchain member.
            /// </param>
            public static BlockchainMember Update(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, BlockchainMemberUpdate blockchainMember = default(BlockchainMemberUpdate))
            {
                return operations.UpdateAsync(blockchainMemberName, resourceGroupName, blockchainMember).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='blockchainMember'>
            /// Payload to update the blockchain member.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BlockchainMember> UpdateAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, BlockchainMemberUpdate blockchainMember = default(BlockchainMemberUpdate), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, blockchainMember, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the blockchain members for a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            public static IPage<BlockchainMember> List(this IBlockchainMembersOperations operations, string resourceGroupName)
            {
                return operations.ListAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the blockchain members for a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BlockchainMember>> ListAsync(this IBlockchainMembersOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the blockchain members for a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<BlockchainMember> ListAll(this IBlockchainMembersOperations operations)
            {
                return operations.ListAllAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the blockchain members for a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BlockchainMember>> ListAllAsync(this IBlockchainMembersOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListAllWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the consortium members for a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            public static IPage<ConsortiumMember> ListConsortiumMembers(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName)
            {
                return operations.ListConsortiumMembersAsync(blockchainMemberName, resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the consortium members for a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ConsortiumMember>> ListConsortiumMembersAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListConsortiumMembersWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the API keys for a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            public static ApiKeyCollection ListApiKeys(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName)
            {
                return operations.ListApiKeysAsync(blockchainMemberName, resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the API keys for a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApiKeyCollection> ListApiKeysAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListApiKeysWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Regenerate the API keys for a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='keyName'>
            /// Gets or sets the API key name.
            /// </param>
            /// <param name='value'>
            /// Gets or sets the API key value.
            /// </param>
            public static ApiKeyCollection ListRegenerateApiKeys(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, string keyName = default(string), string value = default(string))
            {
                return operations.ListRegenerateApiKeysAsync(blockchainMemberName, resourceGroupName, keyName, value).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Regenerate the API keys for a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='keyName'>
            /// Gets or sets the API key name.
            /// </param>
            /// <param name='value'>
            /// Gets or sets the API key value.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApiKeyCollection> ListRegenerateApiKeysAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, string keyName = default(string), string value = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListRegenerateApiKeysWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, keyName, value, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='blockchainMember'>
            /// Payload to create a blockchain member.
            /// </param>
            public static BlockchainMember BeginCreate(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, BlockchainMember blockchainMember = default(BlockchainMember))
            {
                return operations.BeginCreateAsync(blockchainMemberName, resourceGroupName, blockchainMember).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='blockchainMember'>
            /// Payload to create a blockchain member.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BlockchainMember> BeginCreateAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, BlockchainMember blockchainMember = default(BlockchainMember), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, blockchainMember, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            public static void BeginDelete(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName)
            {
                operations.BeginDeleteAsync(blockchainMemberName, resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='blockchainMemberName'>
            /// Blockchain member name
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the resource. You can obtain
            /// this value from the Azure Resource Manager API or the portal.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IBlockchainMembersOperations operations, string blockchainMemberName, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(blockchainMemberName, resourceGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists the blockchain members for a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BlockchainMember> ListNext(this IBlockchainMembersOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the blockchain members for a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BlockchainMember>> ListNextAsync(this IBlockchainMembersOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the blockchain members for a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BlockchainMember> ListAllNext(this IBlockchainMembersOperations operations, string nextPageLink)
            {
                return operations.ListAllNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the blockchain members for a subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BlockchainMember>> ListAllNextAsync(this IBlockchainMembersOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListAllNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the consortium members for a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ConsortiumMember> ListConsortiumMembersNext(this IBlockchainMembersOperations operations, string nextPageLink)
            {
                return operations.ListConsortiumMembersNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the consortium members for a blockchain member.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ConsortiumMember>> ListConsortiumMembersNextAsync(this IBlockchainMembersOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListConsortiumMembersNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
