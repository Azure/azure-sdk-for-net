// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SecretsStoreExtension.Models
{
    /// <summary> Properties defining the mapping between a cloud secret store object and a Kubernetes Secret. </summary>
    public partial class KubernetesSecretObjectMapping
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="KubernetesSecretObjectMapping"/>. </summary>
        /// <param name="sourcePath"> SourcePath is the identifier for the secret data as defined by the external secret provider. This is the key or path to the secret in the provider's system, which gets mounted to a specific path in the pod. The value should match the name of the secret as specified in the SecretProviderClass's objects array. </param>
        /// <param name="targetKey"> TargetKey is the key in the Kubernetes secret's data field where the secret value will be stored. This key is used to reference the secret data within Kubernetes, and it should be unique within the secret. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourcePath"/> or <paramref name="targetKey"/> is null. </exception>
        public KubernetesSecretObjectMapping(string sourcePath, string targetKey)
        {
            Argument.AssertNotNull(sourcePath, nameof(sourcePath));
            Argument.AssertNotNull(targetKey, nameof(targetKey));

            SourcePath = sourcePath;
            TargetKey = targetKey;
        }

        /// <summary> Initializes a new instance of <see cref="KubernetesSecretObjectMapping"/>. </summary>
        /// <param name="sourcePath"> SourcePath is the identifier for the secret data as defined by the external secret provider. This is the key or path to the secret in the provider's system, which gets mounted to a specific path in the pod. The value should match the name of the secret as specified in the SecretProviderClass's objects array. </param>
        /// <param name="targetKey"> TargetKey is the key in the Kubernetes secret's data field where the secret value will be stored. This key is used to reference the secret data within Kubernetes, and it should be unique within the secret. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal KubernetesSecretObjectMapping(string sourcePath, string targetKey, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            SourcePath = sourcePath;
            TargetKey = targetKey;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="KubernetesSecretObjectMapping"/> for deserialization. </summary>
        internal KubernetesSecretObjectMapping()
        {
        }

        /// <summary> SourcePath is the identifier for the secret data as defined by the external secret provider. This is the key or path to the secret in the provider's system, which gets mounted to a specific path in the pod. The value should match the name of the secret as specified in the SecretProviderClass's objects array. </summary>
        public string SourcePath { get; set; }
        /// <summary> TargetKey is the key in the Kubernetes secret's data field where the secret value will be stored. This key is used to reference the secret data within Kubernetes, and it should be unique within the secret. </summary>
        public string TargetKey { get; set; }
    }
}
