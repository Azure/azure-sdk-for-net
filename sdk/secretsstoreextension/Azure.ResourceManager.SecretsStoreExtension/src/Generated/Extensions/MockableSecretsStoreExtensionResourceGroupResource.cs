// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.SecretsStoreExtension.Mocking
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    public partial class MockableSecretsStoreExtensionResourceGroupResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableSecretsStoreExtensionResourceGroupResource"/> class for mocking. </summary>
        protected MockableSecretsStoreExtensionResourceGroupResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableSecretsStoreExtensionResourceGroupResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableSecretsStoreExtensionResourceGroupResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of KeyVaultSecretProviderClassResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of KeyVaultSecretProviderClassResources and their operations over a KeyVaultSecretProviderClassResource. </returns>
        public virtual KeyVaultSecretProviderClassCollection GetKeyVaultSecretProviderClasses()
        {
            return GetCachedClient(client => new KeyVaultSecretProviderClassCollection(client, Id));
        }

        /// <summary>
        /// Gets the properties of an AzureKeyVaultSecretProviderClass instance.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses/{azureKeyVaultSecretProviderClassName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureKeyVaultSecretProviderClass_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-08-21-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="KeyVaultSecretProviderClassResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="azureKeyVaultSecretProviderClassName"> The name of the AzureKeyVaultSecretProviderClass. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureKeyVaultSecretProviderClassName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="azureKeyVaultSecretProviderClassName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<KeyVaultSecretProviderClassResource>> GetKeyVaultSecretProviderClassAsync(string azureKeyVaultSecretProviderClassName, CancellationToken cancellationToken = default)
        {
            return await GetKeyVaultSecretProviderClasses().GetAsync(azureKeyVaultSecretProviderClassName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the properties of an AzureKeyVaultSecretProviderClass instance.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses/{azureKeyVaultSecretProviderClassName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AzureKeyVaultSecretProviderClass_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-08-21-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="KeyVaultSecretProviderClassResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="azureKeyVaultSecretProviderClassName"> The name of the AzureKeyVaultSecretProviderClass. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureKeyVaultSecretProviderClassName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="azureKeyVaultSecretProviderClassName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<KeyVaultSecretProviderClassResource> GetKeyVaultSecretProviderClass(string azureKeyVaultSecretProviderClassName, CancellationToken cancellationToken = default)
        {
            return GetKeyVaultSecretProviderClasses().Get(azureKeyVaultSecretProviderClassName, cancellationToken);
        }

        /// <summary> Gets a collection of SecretSyncResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of SecretSyncResources and their operations over a SecretSyncResource. </returns>
        public virtual SecretSyncCollection GetSecretSyncs()
        {
            return GetCachedClient(client => new SecretSyncCollection(client, Id));
        }

        /// <summary>
        /// Gets the properties of a SecretSync instance.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/secretSyncs/{secretSyncName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>SecretSync_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-08-21-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="SecretSyncResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="secretSyncName"> The name of the SecretSync. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="secretSyncName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="secretSyncName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<SecretSyncResource>> GetSecretSyncAsync(string secretSyncName, CancellationToken cancellationToken = default)
        {
            return await GetSecretSyncs().GetAsync(secretSyncName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the properties of a SecretSync instance.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/secretSyncs/{secretSyncName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>SecretSync_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-08-21-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="SecretSyncResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="secretSyncName"> The name of the SecretSync. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="secretSyncName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="secretSyncName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<SecretSyncResource> GetSecretSync(string secretSyncName, CancellationToken cancellationToken = default)
        {
            return GetSecretSyncs().Get(secretSyncName, cancellationToken);
        }
    }
}
