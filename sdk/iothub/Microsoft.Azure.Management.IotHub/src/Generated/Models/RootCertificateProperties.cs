// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.IotHub.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// This property store root certificate related information
    /// </summary>
    public partial class RootCertificateProperties
    {
        /// <summary>
        /// Initializes a new instance of the RootCertificateProperties class.
        /// </summary>
        public RootCertificateProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RootCertificateProperties class.
        /// </summary>
        /// <param name="enableRootCertificateV2">This property when set to
        /// true, hub will use G2 cert; while it's set to false, hub uses
        /// Baltimore Cert.</param>
        /// <param name="lastUpdatedTimeUtc">the last update time to root
        /// certificate flag.</param>
        public RootCertificateProperties(bool? enableRootCertificateV2 = default(bool?), System.DateTime? lastUpdatedTimeUtc = default(System.DateTime?))
        {
            EnableRootCertificateV2 = enableRootCertificateV2;
            LastUpdatedTimeUtc = lastUpdatedTimeUtc;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets this property when set to true, hub will use G2 cert;
        /// while it's set to false, hub uses Baltimore Cert.
        /// </summary>
        [JsonProperty(PropertyName = "enableRootCertificateV2")]
        public bool? EnableRootCertificateV2 { get; set; }

        /// <summary>
        /// Gets the last update time to root certificate flag.
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdatedTimeUtc")]
        public System.DateTime? LastUpdatedTimeUtc { get; private set; }

    }
}
