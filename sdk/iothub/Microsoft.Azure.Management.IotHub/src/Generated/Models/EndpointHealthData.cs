// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.IotHub.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The health data for an endpoint
    /// </summary>
    public partial class EndpointHealthData
    {
        /// <summary>
        /// Initializes a new instance of the EndpointHealthData class.
        /// </summary>
        public EndpointHealthData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointHealthData class.
        /// </summary>
        /// <param name="endpointId">Id of the endpoint</param>
        /// <param name="healthStatus">Health statuses have following meanings.
        /// The 'healthy' status shows that the endpoint is accepting messages
        /// as expected. The 'unhealthy' status shows that the endpoint is not
        /// accepting messages as expected and IoT Hub is retrying to send data
        /// to this endpoint. The status of an unhealthy endpoint will be
        /// updated to healthy when IoT Hub has established an eventually
        /// consistent state of health. The 'dead' status shows that the
        /// endpoint is not accepting messages, after IoT Hub retried sending
        /// messages for the retrial period. See IoT Hub metrics to identify
        /// errors and monitor issues with endpoints. The 'unknown' status
        /// shows that the IoT Hub has not established a connection with the
        /// endpoint. No messages have been delivered to or rejected from this
        /// endpoint. Possible values include: 'unknown', 'healthy',
        /// 'degraded', 'unhealthy', 'dead'</param>
        /// <param name="lastKnownError">Last error obtained when a message
        /// failed to be delivered to iot hub</param>
        /// <param name="lastKnownErrorTime">Time at which the last known error
        /// occurred</param>
        /// <param name="lastSuccessfulSendAttemptTime">Last time iot hub
        /// successfully sent a message to the endpoint</param>
        /// <param name="lastSendAttemptTime">Last time iot hub tried to send a
        /// message to the endpoint</param>
        public EndpointHealthData(string endpointId = default(string), string healthStatus = default(string), string lastKnownError = default(string), System.DateTime? lastKnownErrorTime = default(System.DateTime?), System.DateTime? lastSuccessfulSendAttemptTime = default(System.DateTime?), System.DateTime? lastSendAttemptTime = default(System.DateTime?))
        {
            EndpointId = endpointId;
            HealthStatus = healthStatus;
            LastKnownError = lastKnownError;
            LastKnownErrorTime = lastKnownErrorTime;
            LastSuccessfulSendAttemptTime = lastSuccessfulSendAttemptTime;
            LastSendAttemptTime = lastSendAttemptTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets id of the endpoint
        /// </summary>
        [JsonProperty(PropertyName = "endpointId")]
        public string EndpointId { get; set; }

        /// <summary>
        /// Gets or sets health statuses have following meanings. The 'healthy'
        /// status shows that the endpoint is accepting messages as expected.
        /// The 'unhealthy' status shows that the endpoint is not accepting
        /// messages as expected and IoT Hub is retrying to send data to this
        /// endpoint. The status of an unhealthy endpoint will be updated to
        /// healthy when IoT Hub has established an eventually consistent state
        /// of health. The 'dead' status shows that the endpoint is not
        /// accepting messages, after IoT Hub retried sending messages for the
        /// retrial period. See IoT Hub metrics to identify errors and monitor
        /// issues with endpoints. The 'unknown' status shows that the IoT Hub
        /// has not established a connection with the endpoint. No messages
        /// have been delivered to or rejected from this endpoint. Possible
        /// values include: 'unknown', 'healthy', 'degraded', 'unhealthy',
        /// 'dead'
        /// </summary>
        [JsonProperty(PropertyName = "healthStatus")]
        public string HealthStatus { get; set; }

        /// <summary>
        /// Gets or sets last error obtained when a message failed to be
        /// delivered to iot hub
        /// </summary>
        [JsonProperty(PropertyName = "lastKnownError")]
        public string LastKnownError { get; set; }

        /// <summary>
        /// Gets or sets time at which the last known error occurred
        /// </summary>
        [JsonConverter(typeof(DateTimeRfc1123JsonConverter))]
        [JsonProperty(PropertyName = "lastKnownErrorTime")]
        public System.DateTime? LastKnownErrorTime { get; set; }

        /// <summary>
        /// Gets or sets last time iot hub successfully sent a message to the
        /// endpoint
        /// </summary>
        [JsonConverter(typeof(DateTimeRfc1123JsonConverter))]
        [JsonProperty(PropertyName = "lastSuccessfulSendAttemptTime")]
        public System.DateTime? LastSuccessfulSendAttemptTime { get; set; }

        /// <summary>
        /// Gets or sets last time iot hub tried to send a message to the
        /// endpoint
        /// </summary>
        [JsonConverter(typeof(DateTimeRfc1123JsonConverter))]
        [JsonProperty(PropertyName = "lastSendAttemptTime")]
        public System.DateTime? LastSendAttemptTime { get; set; }

    }
}
