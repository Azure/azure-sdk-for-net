// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.IotHub.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties related to a cosmos DB sql collection endpoint.
    /// </summary>
    public partial class RoutingCosmosDBSqlApiProperties
    {
        /// <summary>
        /// Initializes a new instance of the RoutingCosmosDBSqlApiProperties
        /// class.
        /// </summary>
        public RoutingCosmosDBSqlApiProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoutingCosmosDBSqlApiProperties
        /// class.
        /// </summary>
        /// <param name="name">The name that identifies this endpoint. The name
        /// can only include alphanumeric characters, periods, underscores,
        /// hyphens and has a maximum length of 64 characters. The following
        /// names are reserved:  events, fileNotifications, $default. Endpoint
        /// names must be unique across endpoint types.</param>
        /// <param name="endpointUri">The url of the cosmos DB account. It must
        /// include the protocol https://</param>
        /// <param name="databaseName">The name of the cosmos DB database in
        /// the cosmos DB account.</param>
        /// <param name="collectionName">The name of the cosmos DB sql
        /// collection in the cosmos DB database.</param>
        /// <param name="id">Id of the cosmos DB sql collection
        /// endpoint</param>
        /// <param name="subscriptionId">The subscription identifier of the
        /// cosmos DB account.</param>
        /// <param name="resourceGroup">The name of the resource group of the
        /// cosmos DB account.</param>
        /// <param name="authenticationType">Method used to authenticate
        /// against the cosmos DB sql collection endpoint. Possible values
        /// include: 'keyBased', 'identityBased'</param>
        /// <param name="identity">Managed identity properties of routing
        /// cosmos DB collection endpoint.</param>
        /// <param name="primaryKey">The primary key of the cosmos DB
        /// account.</param>
        /// <param name="secondaryKey">The secondary key of the cosmos DB
        /// account.</param>
        /// <param name="partitionKeyName">The name of the partition key
        /// associated with this cosmos DB sql collection if one exists. This
        /// is an optional parameter.</param>
        /// <param name="partitionKeyTemplate">The template for generating a
        /// synthetic partition key value for use with this cosmos DB sql
        /// collection. The template must include at least one of the following
        /// placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one
        /// placeholder may be specified at most once, but order and
        /// non-placeholder components are arbitrary. This parameter is only
        /// required if PartitionKeyName is specified.</param>
        public RoutingCosmosDBSqlApiProperties(string name, string endpointUri, string databaseName, string collectionName, string id = default(string), string subscriptionId = default(string), string resourceGroup = default(string), string authenticationType = default(string), ManagedIdentity identity = default(ManagedIdentity), string primaryKey = default(string), string secondaryKey = default(string), string partitionKeyName = default(string), string partitionKeyTemplate = default(string))
        {
            Name = name;
            Id = id;
            SubscriptionId = subscriptionId;
            ResourceGroup = resourceGroup;
            EndpointUri = endpointUri;
            AuthenticationType = authenticationType;
            Identity = identity;
            PrimaryKey = primaryKey;
            SecondaryKey = secondaryKey;
            DatabaseName = databaseName;
            CollectionName = collectionName;
            PartitionKeyName = partitionKeyName;
            PartitionKeyTemplate = partitionKeyTemplate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name that identifies this endpoint. The name can
        /// only include alphanumeric characters, periods, underscores, hyphens
        /// and has a maximum length of 64 characters. The following names are
        /// reserved:  events, fileNotifications, $default. Endpoint names must
        /// be unique across endpoint types.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets id of the cosmos DB sql collection endpoint
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the subscription identifier of the cosmos DB account.
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets the name of the resource group of the cosmos DB
        /// account.
        /// </summary>
        [JsonProperty(PropertyName = "resourceGroup")]
        public string ResourceGroup { get; set; }

        /// <summary>
        /// Gets or sets the url of the cosmos DB account. It must include the
        /// protocol https://
        /// </summary>
        [JsonProperty(PropertyName = "endpointUri")]
        public string EndpointUri { get; set; }

        /// <summary>
        /// Gets or sets method used to authenticate against the cosmos DB sql
        /// collection endpoint. Possible values include: 'keyBased',
        /// 'identityBased'
        /// </summary>
        [JsonProperty(PropertyName = "authenticationType")]
        public string AuthenticationType { get; set; }

        /// <summary>
        /// Gets or sets managed identity properties of routing cosmos DB
        /// collection endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public ManagedIdentity Identity { get; set; }

        /// <summary>
        /// Gets or sets the primary key of the cosmos DB account.
        /// </summary>
        [JsonProperty(PropertyName = "primaryKey")]
        public string PrimaryKey { get; set; }

        /// <summary>
        /// Gets or sets the secondary key of the cosmos DB account.
        /// </summary>
        [JsonProperty(PropertyName = "secondaryKey")]
        public string SecondaryKey { get; set; }

        /// <summary>
        /// Gets or sets the name of the cosmos DB database in the cosmos DB
        /// account.
        /// </summary>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets or sets the name of the cosmos DB sql collection in the cosmos
        /// DB database.
        /// </summary>
        [JsonProperty(PropertyName = "collectionName")]
        public string CollectionName { get; set; }

        /// <summary>
        /// Gets or sets the name of the partition key associated with this
        /// cosmos DB sql collection if one exists. This is an optional
        /// parameter.
        /// </summary>
        [JsonProperty(PropertyName = "partitionKeyName")]
        public string PartitionKeyName { get; set; }

        /// <summary>
        /// Gets or sets the template for generating a synthetic partition key
        /// value for use with this cosmos DB sql collection. The template must
        /// include at least one of the following placeholders: {iothub},
        /// {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be
        /// specified at most once, but order and non-placeholder components
        /// are arbitrary. This parameter is only required if PartitionKeyName
        /// is specified.
        /// </summary>
        [JsonProperty(PropertyName = "partitionKeyTemplate")]
        public string PartitionKeyTemplate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (EndpointUri == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EndpointUri");
            }
            if (DatabaseName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DatabaseName");
            }
            if (CollectionName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CollectionName");
            }
            if (Name != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(Name, "^[A-Za-z0-9-._]{1,64}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Name", "^[A-Za-z0-9-._]{1,64}$");
                }
            }
        }
    }
}
