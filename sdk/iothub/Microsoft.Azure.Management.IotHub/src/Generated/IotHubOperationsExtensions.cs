// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.IotHub
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for IotHubOperations.
    /// </summary>
    public static partial class IotHubOperationsExtensions
    {
            /// <summary>
            /// Manually initiate a failover for the IoT Hub to its secondary region
            /// </summary>
            /// <remarks>
            /// Manually initiate a failover for the IoT Hub to its secondary region. To
            /// learn more, see https://aka.ms/manualfailover
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='iotHubName'>
            /// Name of the IoT hub to failover
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group containing the IoT hub resource
            /// </param>
            /// <param name='failoverRegion'>
            /// Region the hub will be failed over to
            /// </param>
            public static void ManualFailover(this IIotHubOperations operations, string iotHubName, string resourceGroupName, string failoverRegion)
            {
                operations.ManualFailoverAsync(iotHubName, resourceGroupName, failoverRegion).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Manually initiate a failover for the IoT Hub to its secondary region
            /// </summary>
            /// <remarks>
            /// Manually initiate a failover for the IoT Hub to its secondary region. To
            /// learn more, see https://aka.ms/manualfailover
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='iotHubName'>
            /// Name of the IoT hub to failover
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group containing the IoT hub resource
            /// </param>
            /// <param name='failoverRegion'>
            /// Region the hub will be failed over to
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ManualFailoverAsync(this IIotHubOperations operations, string iotHubName, string resourceGroupName, string failoverRegion, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ManualFailoverWithHttpMessagesAsync(iotHubName, resourceGroupName, failoverRegion, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Manually initiate a failover for the IoT Hub to its secondary region
            /// </summary>
            /// <remarks>
            /// Manually initiate a failover for the IoT Hub to its secondary region. To
            /// learn more, see https://aka.ms/manualfailover
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='iotHubName'>
            /// Name of the IoT hub to failover
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group containing the IoT hub resource
            /// </param>
            /// <param name='failoverRegion'>
            /// Region the hub will be failed over to
            /// </param>
            public static void BeginManualFailover(this IIotHubOperations operations, string iotHubName, string resourceGroupName, string failoverRegion)
            {
                operations.BeginManualFailoverAsync(iotHubName, resourceGroupName, failoverRegion).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Manually initiate a failover for the IoT Hub to its secondary region
            /// </summary>
            /// <remarks>
            /// Manually initiate a failover for the IoT Hub to its secondary region. To
            /// learn more, see https://aka.ms/manualfailover
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='iotHubName'>
            /// Name of the IoT hub to failover
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group containing the IoT hub resource
            /// </param>
            /// <param name='failoverRegion'>
            /// Region the hub will be failed over to
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginManualFailoverAsync(this IIotHubOperations operations, string iotHubName, string resourceGroupName, string failoverRegion, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginManualFailoverWithHttpMessagesAsync(iotHubName, resourceGroupName, failoverRegion, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
