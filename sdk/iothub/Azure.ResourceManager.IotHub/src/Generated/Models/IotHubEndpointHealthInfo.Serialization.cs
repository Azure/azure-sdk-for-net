// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IotHub.Models
{
    public partial class IotHubEndpointHealthInfo
    {
        internal static IotHubEndpointHealthInfo DeserializeIotHubEndpointHealthInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> endpointId = default;
            Core.Optional<IotHubEndpointHealthStatus> healthStatus = default;
            Core.Optional<string> lastKnownError = default;
            Core.Optional<DateTimeOffset> lastKnownErrorTime = default;
            Core.Optional<DateTimeOffset> lastSuccessfulSendAttemptTime = default;
            Core.Optional<DateTimeOffset> lastSendAttemptTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("endpointId"u8))
                {
                    endpointId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("healthStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    healthStatus = new IotHubEndpointHealthStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("lastKnownError"u8))
                {
                    lastKnownError = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastKnownErrorTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastKnownErrorTime = property.Value.GetDateTimeOffset("R");
                    continue;
                }
                if (property.NameEquals("lastSuccessfulSendAttemptTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSuccessfulSendAttemptTime = property.Value.GetDateTimeOffset("R");
                    continue;
                }
                if (property.NameEquals("lastSendAttemptTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastSendAttemptTime = property.Value.GetDateTimeOffset("R");
                    continue;
                }
            }
            return new IotHubEndpointHealthInfo(endpointId.Value, Core.Optional.ToNullable(healthStatus), lastKnownError.Value, Core.Optional.ToNullable(lastKnownErrorTime), Core.Optional.ToNullable(lastSuccessfulSendAttemptTime), Core.Optional.ToNullable(lastSendAttemptTime));
        }
    }
}
