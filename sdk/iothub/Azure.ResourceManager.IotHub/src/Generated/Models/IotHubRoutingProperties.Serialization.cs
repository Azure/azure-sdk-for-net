// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IotHub.Models
{
    public partial class IotHubRoutingProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Endpoints))
            {
                writer.WritePropertyName("endpoints");
                writer.WriteObjectValue(Endpoints);
            }
            if (Optional.IsCollectionDefined(Routes))
            {
                writer.WritePropertyName("routes");
                writer.WriteStartArray();
                foreach (var item in Routes)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(FallbackRoute))
            {
                writer.WritePropertyName("fallbackRoute");
                writer.WriteObjectValue(FallbackRoute);
            }
            if (Optional.IsCollectionDefined(Enrichments))
            {
                writer.WritePropertyName("enrichments");
                writer.WriteStartArray();
                foreach (var item in Enrichments)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static IotHubRoutingProperties DeserializeIotHubRoutingProperties(JsonElement element)
        {
            Optional<RoutingEndpoints> endpoints = default;
            Optional<IList<RoutingRuleProperties>> routes = default;
            Optional<IotHubFallbackRouteProperties> fallbackRoute = default;
            Optional<IList<IotHubEnrichmentProperties>> enrichments = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("endpoints"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endpoints = RoutingEndpoints.DeserializeRoutingEndpoints(property.Value);
                    continue;
                }
                if (property.NameEquals("routes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RoutingRuleProperties> array = new List<RoutingRuleProperties>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RoutingRuleProperties.DeserializeRoutingRuleProperties(item));
                    }
                    routes = array;
                    continue;
                }
                if (property.NameEquals("fallbackRoute"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    fallbackRoute = IotHubFallbackRouteProperties.DeserializeIotHubFallbackRouteProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("enrichments"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<IotHubEnrichmentProperties> array = new List<IotHubEnrichmentProperties>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(IotHubEnrichmentProperties.DeserializeIotHubEnrichmentProperties(item));
                    }
                    enrichments = array;
                    continue;
                }
            }
            return new IotHubRoutingProperties(endpoints.Value, Optional.ToList(routes), fallbackRoute.Value, Optional.ToList(enrichments));
        }
    }
}
