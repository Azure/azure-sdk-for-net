// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.IotHub.Models
{
    /// <summary> The properties of an enrichment that your IoT hub applies to messages delivered to endpoints. </summary>
    public partial class IotHubEnrichmentProperties
    {
        /// <summary> Initializes a new instance of IotHubEnrichmentProperties. </summary>
        /// <param name="key"> The key or name for the enrichment property. </param>
        /// <param name="value"> The value for the enrichment property. </param>
        /// <param name="endpointNames"> The list of endpoints for which the enrichment is applied to the message. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="key"/>, <paramref name="value"/> or <paramref name="endpointNames"/> is null. </exception>
        public IotHubEnrichmentProperties(string key, string value, IEnumerable<string> endpointNames)
        {
            if (key == null)
            {
                throw new ArgumentNullException(nameof(key));
            }
            if (value == null)
            {
                throw new ArgumentNullException(nameof(value));
            }
            if (endpointNames == null)
            {
                throw new ArgumentNullException(nameof(endpointNames));
            }

            Key = key;
            Value = value;
            EndpointNames = endpointNames.ToList();
        }

        /// <summary> Initializes a new instance of IotHubEnrichmentProperties. </summary>
        /// <param name="key"> The key or name for the enrichment property. </param>
        /// <param name="value"> The value for the enrichment property. </param>
        /// <param name="endpointNames"> The list of endpoints for which the enrichment is applied to the message. </param>
        internal IotHubEnrichmentProperties(string key, string value, IList<string> endpointNames)
        {
            Key = key;
            Value = value;
            EndpointNames = endpointNames;
        }

        /// <summary> The key or name for the enrichment property. </summary>
        public string Key { get; set; }
        /// <summary> The value for the enrichment property. </summary>
        public string Value { get; set; }
        /// <summary> The list of endpoints for which the enrichment is applied to the message. </summary>
        public IList<string> EndpointNames { get; }
    }
}
