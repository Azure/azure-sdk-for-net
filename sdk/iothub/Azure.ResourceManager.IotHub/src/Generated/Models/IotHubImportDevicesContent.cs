// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.IotHub.Models
{
    /// <summary>
    /// Use to provide parameters when requesting an import of all devices in the hub.
    /// Serialized Name: ImportDevicesRequest
    /// </summary>
    public partial class IotHubImportDevicesContent
    {
        /// <summary> Initializes a new instance of IotHubImportDevicesContent. </summary>
        /// <param name="inputBlobContainerUri">
        /// The input blob container URI.
        /// Serialized Name: ImportDevicesRequest.inputBlobContainerUri
        /// </param>
        /// <param name="outputBlobContainerUri">
        /// The output blob container URI.
        /// Serialized Name: ImportDevicesRequest.outputBlobContainerUri
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="inputBlobContainerUri"/> or <paramref name="outputBlobContainerUri"/> is null. </exception>
        public IotHubImportDevicesContent(Uri inputBlobContainerUri, Uri outputBlobContainerUri)
        {
            if (inputBlobContainerUri == null)
            {
                throw new ArgumentNullException(nameof(inputBlobContainerUri));
            }
            if (outputBlobContainerUri == null)
            {
                throw new ArgumentNullException(nameof(outputBlobContainerUri));
            }

            InputBlobContainerUri = inputBlobContainerUri;
            OutputBlobContainerUri = outputBlobContainerUri;
        }

        /// <summary>
        /// The input blob container URI.
        /// Serialized Name: ImportDevicesRequest.inputBlobContainerUri
        /// </summary>
        public Uri InputBlobContainerUri { get; }
        /// <summary>
        /// The output blob container URI.
        /// Serialized Name: ImportDevicesRequest.outputBlobContainerUri
        /// </summary>
        public Uri OutputBlobContainerUri { get; }
        /// <summary>
        /// The blob name to be used when importing from the provided input blob container.
        /// Serialized Name: ImportDevicesRequest.inputBlobName
        /// </summary>
        public string InputBlobName { get; set; }
        /// <summary>
        /// The blob name to use for storing the status of the import job.
        /// Serialized Name: ImportDevicesRequest.outputBlobName
        /// </summary>
        public string OutputBlobName { get; set; }
        /// <summary>
        /// Specifies authentication type being used for connecting to the storage account.
        /// Serialized Name: ImportDevicesRequest.authenticationType
        /// </summary>
        public IotHubAuthenticationType? AuthenticationType { get; set; }
        /// <summary>
        /// Managed identity properties of storage endpoint for import devices.
        /// Serialized Name: ImportDevicesRequest.identity
        /// </summary>
        internal ManagedIdentity Identity { get; set; }
        /// <summary>
        /// The user assigned identity.
        /// Serialized Name: ManagedIdentity.userAssignedIdentity
        /// </summary>
        public string UserAssignedIdentity
        {
            get => Identity is null ? default : Identity.UserAssignedIdentity;
            set
            {
                if (Identity is null)
                    Identity = new ManagedIdentity();
                Identity.UserAssignedIdentity = value;
            }
        }

        /// <summary>
        /// The value indicating whether configurations should be imported.
        /// Serialized Name: ImportDevicesRequest.includeConfigurations
        /// </summary>
        public bool? IncludeConfigurations { get; set; }
        /// <summary>
        /// The blob name to be used when importing configurations from the provided input blob container.
        /// Serialized Name: ImportDevicesRequest.configurationsBlobName
        /// </summary>
        public string ConfigurationsBlobName { get; set; }
    }
}
