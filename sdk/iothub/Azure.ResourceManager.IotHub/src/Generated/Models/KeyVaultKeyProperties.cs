// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.IotHub.Models
{
    /// <summary> The properties of the KeyVault key. </summary>
    public partial class KeyVaultKeyProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="KeyVaultKeyProperties"/>. </summary>
        public KeyVaultKeyProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="KeyVaultKeyProperties"/>. </summary>
        /// <param name="keyIdentifier"> The identifier of the key. </param>
        /// <param name="identity"> Managed identity properties of KeyVault Key. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal KeyVaultKeyProperties(string keyIdentifier, ManagedIdentity identity, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            KeyIdentifier = keyIdentifier;
            Identity = identity;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The identifier of the key. </summary>
        public string KeyIdentifier { get; set; }
        /// <summary> Managed identity properties of KeyVault Key. </summary>
        internal ManagedIdentity Identity { get; set; }
        /// <summary> The user assigned identity. </summary>
        public ResourceIdentifier UserAssignedIdentity
        {
            get => Identity is null ? default : Identity.UserAssignedIdentity;
            set
            {
                if (Identity is null)
                    Identity = new ManagedIdentity();
                Identity.UserAssignedIdentity = value;
            }
        }
    }
}
