// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IotHub.Models
{
    public partial class CloudToDeviceProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(MaxDeliveryCount))
            {
                writer.WritePropertyName("maxDeliveryCount"u8);
                writer.WriteNumberValue(MaxDeliveryCount.Value);
            }
            if (Core.Optional.IsDefined(DefaultTtlAsIso8601))
            {
                writer.WritePropertyName("defaultTtlAsIso8601"u8);
                writer.WriteStringValue(DefaultTtlAsIso8601.Value, "P");
            }
            if (Core.Optional.IsDefined(Feedback))
            {
                writer.WritePropertyName("feedback"u8);
                writer.WriteObjectValue(Feedback);
            }
            writer.WriteEndObject();
        }

        internal static CloudToDeviceProperties DeserializeCloudToDeviceProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<int> maxDeliveryCount = default;
            Core.Optional<TimeSpan> defaultTtlAsIso8601 = default;
            Core.Optional<CloudToDeviceFeedbackQueueProperties> feedback = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("maxDeliveryCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxDeliveryCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("defaultTtlAsIso8601"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    defaultTtlAsIso8601 = property.Value.GetTimeSpan("P");
                    continue;
                }
                if (property.NameEquals("feedback"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    feedback = CloudToDeviceFeedbackQueueProperties.DeserializeCloudToDeviceFeedbackQueueProperties(property.Value);
                    continue;
                }
            }
            return new CloudToDeviceProperties(Core.Optional.ToNullable(maxDeliveryCount), Core.Optional.ToNullable(defaultTtlAsIso8601), feedback.Value);
        }
    }
}
