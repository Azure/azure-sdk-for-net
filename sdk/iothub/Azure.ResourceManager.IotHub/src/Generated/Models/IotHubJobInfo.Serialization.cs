// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IotHub.Models
{
    public partial class IotHubJobInfo
    {
        internal static IotHubJobInfo DeserializeIotHubJobInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> jobId = default;
            Core.Optional<DateTimeOffset> startTimeUtc = default;
            Core.Optional<DateTimeOffset> endTimeUtc = default;
            Core.Optional<IotHubJobType> type = default;
            Core.Optional<IotHubJobStatus> status = default;
            Core.Optional<string> failureReason = default;
            Core.Optional<string> statusMessage = default;
            Core.Optional<string> parentJobId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("jobId"u8))
                {
                    jobId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startTimeUtc"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    startTimeUtc = property.Value.GetDateTimeOffset("R");
                    continue;
                }
                if (property.NameEquals("endTimeUtc"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    endTimeUtc = property.Value.GetDateTimeOffset("R");
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = new IotHubJobType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    status = property.Value.GetString().ToIotHubJobStatus();
                    continue;
                }
                if (property.NameEquals("failureReason"u8))
                {
                    failureReason = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("statusMessage"u8))
                {
                    statusMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("parentJobId"u8))
                {
                    parentJobId = property.Value.GetString();
                    continue;
                }
            }
            return new IotHubJobInfo(jobId.Value, Core.Optional.ToNullable(startTimeUtc), Core.Optional.ToNullable(endTimeUtc), Core.Optional.ToNullable(type), Core.Optional.ToNullable(status), failureReason.Value, statusMessage.Value, parentJobId.Value);
        }
    }
}
