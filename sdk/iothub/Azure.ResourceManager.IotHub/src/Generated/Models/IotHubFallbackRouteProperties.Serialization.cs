// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IotHub.Models
{
    public partial class IotHubFallbackRouteProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            writer.WritePropertyName("source");
            writer.WriteStringValue(Source.ToString());
            if (Optional.IsDefined(Condition))
            {
                writer.WritePropertyName("condition");
                writer.WriteStringValue(Condition);
            }
            writer.WritePropertyName("endpointNames");
            writer.WriteStartArray();
            foreach (var item in EndpointNames)
            {
                writer.WriteStringValue(item);
            }
            writer.WriteEndArray();
            writer.WritePropertyName("isEnabled");
            writer.WriteBooleanValue(IsEnabled);
            writer.WriteEndObject();
        }

        internal static IotHubFallbackRouteProperties DeserializeIotHubFallbackRouteProperties(JsonElement element)
        {
            Optional<string> name = default;
            IotHubRoutingSource source = default;
            Optional<string> condition = default;
            IList<string> endpointNames = default;
            bool isEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("source"))
                {
                    source = new IotHubRoutingSource(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("condition"))
                {
                    condition = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("endpointNames"))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    endpointNames = array;
                    continue;
                }
                if (property.NameEquals("isEnabled"))
                {
                    isEnabled = property.Value.GetBoolean();
                    continue;
                }
            }
            return new IotHubFallbackRouteProperties(name.Value, source, condition.Value, endpointNames, isEnabled);
        }
    }
}
