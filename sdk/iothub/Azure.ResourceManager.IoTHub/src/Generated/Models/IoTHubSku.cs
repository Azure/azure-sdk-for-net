// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IoTHub.Models
{
    /// <summary> The name of the SKU. </summary>
    public readonly partial struct IoTHubSku : IEquatable<IoTHubSku>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="IoTHubSku"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public IoTHubSku(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string F1Value = "F1";
        private const string S1Value = "S1";
        private const string S2Value = "S2";
        private const string S3Value = "S3";
        private const string B1Value = "B1";
        private const string B2Value = "B2";
        private const string B3Value = "B3";

        /// <summary> F1. </summary>
        public static IoTHubSku F1 { get; } = new IoTHubSku(F1Value);
        /// <summary> S1. </summary>
        public static IoTHubSku S1 { get; } = new IoTHubSku(S1Value);
        /// <summary> S2. </summary>
        public static IoTHubSku S2 { get; } = new IoTHubSku(S2Value);
        /// <summary> S3. </summary>
        public static IoTHubSku S3 { get; } = new IoTHubSku(S3Value);
        /// <summary> B1. </summary>
        public static IoTHubSku B1 { get; } = new IoTHubSku(B1Value);
        /// <summary> B2. </summary>
        public static IoTHubSku B2 { get; } = new IoTHubSku(B2Value);
        /// <summary> B3. </summary>
        public static IoTHubSku B3 { get; } = new IoTHubSku(B3Value);
        /// <summary> Determines if two <see cref="IoTHubSku"/> values are the same. </summary>
        public static bool operator ==(IoTHubSku left, IoTHubSku right) => left.Equals(right);
        /// <summary> Determines if two <see cref="IoTHubSku"/> values are not the same. </summary>
        public static bool operator !=(IoTHubSku left, IoTHubSku right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="IoTHubSku"/>. </summary>
        public static implicit operator IoTHubSku(string value) => new IoTHubSku(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is IoTHubSku other && Equals(other);
        /// <inheritdoc />
        public bool Equals(IoTHubSku other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
