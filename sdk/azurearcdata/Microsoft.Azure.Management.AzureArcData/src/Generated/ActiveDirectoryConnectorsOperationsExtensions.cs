// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ActiveDirectoryConnectorsOperations.
    /// </summary>
    public static partial class ActiveDirectoryConnectorsOperationsExtensions
    {
            /// <summary>
            /// List the active directory connectors associated with the given data
            /// controller.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            public static IPage<ActiveDirectoryConnectorResource> List(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName)
            {
                return operations.ListAsync(resourceGroupName, dataControllerName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List the active directory connectors associated with the given data
            /// controller.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ActiveDirectoryConnectorResource>> ListAsync(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, dataControllerName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or replaces an Active Directory connector resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            /// <param name='properties'>
            /// null
            /// </param>
            public static ActiveDirectoryConnectorResource Create(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName, ActiveDirectoryConnectorProperties properties)
            {
                return operations.CreateAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName, properties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or replaces an Active Directory connector resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            /// <param name='properties'>
            /// null
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ActiveDirectoryConnectorResource> CreateAsync(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName, ActiveDirectoryConnectorProperties properties, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName, properties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an Active Directory connector resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            public static void Delete(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName)
            {
                operations.DeleteAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an Active Directory connector resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieves an Active Directory connector resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            public static ActiveDirectoryConnectorResource Get(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName)
            {
                return operations.GetAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves an Active Directory connector resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ActiveDirectoryConnectorResource> GetAsync(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or replaces an Active Directory connector resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            /// <param name='properties'>
            /// null
            /// </param>
            public static ActiveDirectoryConnectorResource BeginCreate(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName, ActiveDirectoryConnectorProperties properties)
            {
                return operations.BeginCreateAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName, properties).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or replaces an Active Directory connector resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            /// <param name='properties'>
            /// null
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ActiveDirectoryConnectorResource> BeginCreateAsync(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName, ActiveDirectoryConnectorProperties properties, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName, properties, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an Active Directory connector resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            public static void BeginDelete(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName)
            {
                operations.BeginDeleteAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an Active Directory connector resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group
            /// </param>
            /// <param name='dataControllerName'>
            /// The name of the data controller
            /// </param>
            /// <param name='activeDirectoryConnectorName'>
            /// The name of the Active Directory connector instance
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IActiveDirectoryConnectorsOperations operations, string resourceGroupName, string dataControllerName, string activeDirectoryConnectorName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, dataControllerName, activeDirectoryConnectorName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List the active directory connectors associated with the given data
            /// controller.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ActiveDirectoryConnectorResource> ListNext(this IActiveDirectoryConnectorsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List the active directory connectors associated with the given data
            /// controller.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ActiveDirectoryConnectorResource>> ListNextAsync(this IActiveDirectoryConnectorsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
