// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Active Directory domain details
    /// </summary>
    public partial class ActiveDirectoryConnectorDomainDetails
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ActiveDirectoryConnectorDomainDetails class.
        /// </summary>
        public ActiveDirectoryConnectorDomainDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ActiveDirectoryConnectorDomainDetails class.
        /// </summary>
        /// <param name="realm">Name (uppercase) of the Active Directory domain
        /// that this AD connector will be associated with.</param>
        /// <param name="domainControllers">null</param>
        /// <param name="netbiosDomainName">NETBIOS name of the Active
        /// Directory domain.</param>
        /// <param name="serviceAccountProvisioning">The service account
        /// provisioning mode for this Active Directory connector. Possible
        /// values include: 'automatic', 'manual'</param>
        /// <param name="ouDistinguishedName">The distinguished name of the
        /// Active Directory Organizational Unit.</param>
        public ActiveDirectoryConnectorDomainDetails(string realm, ActiveDirectoryDomainControllers domainControllers, string netbiosDomainName = default(string), string serviceAccountProvisioning = default(string), string ouDistinguishedName = default(string))
        {
            Realm = realm;
            NetbiosDomainName = netbiosDomainName;
            ServiceAccountProvisioning = serviceAccountProvisioning;
            OuDistinguishedName = ouDistinguishedName;
            DomainControllers = domainControllers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name (uppercase) of the Active Directory domain that
        /// this AD connector will be associated with.
        /// </summary>
        [JsonProperty(PropertyName = "realm")]
        public string Realm { get; set; }

        /// <summary>
        /// Gets or sets NETBIOS name of the Active Directory domain.
        /// </summary>
        [JsonProperty(PropertyName = "netbiosDomainName")]
        public string NetbiosDomainName { get; set; }

        /// <summary>
        /// Gets or sets the service account provisioning mode for this Active
        /// Directory connector. Possible values include: 'automatic', 'manual'
        /// </summary>
        [JsonProperty(PropertyName = "serviceAccountProvisioning")]
        public string ServiceAccountProvisioning { get; set; }

        /// <summary>
        /// Gets or sets the distinguished name of the Active Directory
        /// Organizational Unit.
        /// </summary>
        [JsonProperty(PropertyName = "ouDistinguishedName")]
        public string OuDistinguishedName { get; set; }

        /// <summary>
        /// Gets or sets null
        /// </summary>
        [JsonProperty(PropertyName = "domainControllers")]
        public ActiveDirectoryDomainControllers DomainControllers { get; set; }

    }
}
