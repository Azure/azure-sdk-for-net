// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.StorageCache.Models
{
    /// <summary> The status of operation. </summary>
    public partial class AscOperation
    {
        /// <summary> Initializes a new instance of AscOperation. </summary>
        internal AscOperation()
        {
            Output = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of AscOperation. </summary>
        /// <param name="id"> The operation Id. </param>
        /// <param name="name"> The operation name. </param>
        /// <param name="startTime"> The start time of the operation. </param>
        /// <param name="endTime"> The end time of the operation. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="error"> The error detail of the operation if any. </param>
        /// <param name="output"> Additional operation-specific output. </param>
        internal AscOperation(string id, string name, string startTime, string endTime, string status, ErrorResponse error, IReadOnlyDictionary<string, BinaryData> output)
        {
            Id = id;
            Name = name;
            StartTime = startTime;
            EndTime = endTime;
            Status = status;
            Error = error;
            Output = output;
        }

        /// <summary> The operation Id. </summary>
        public string Id { get; }
        /// <summary> The operation name. </summary>
        public string Name { get; }
        /// <summary> The start time of the operation. </summary>
        public string StartTime { get; }
        /// <summary> The end time of the operation. </summary>
        public string EndTime { get; }
        /// <summary> The status of the operation. </summary>
        public string Status { get; }
        /// <summary> The error detail of the operation if any. </summary>
        public ErrorResponse Error { get; }
        /// <summary> Additional operation-specific output. </summary>
        public IReadOnlyDictionary<string, BinaryData> Output { get; }
    }
}
