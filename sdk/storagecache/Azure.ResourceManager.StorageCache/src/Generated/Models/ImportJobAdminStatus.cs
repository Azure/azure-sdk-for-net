// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.StorageCache.Models
{
    /// <summary> The administrative status of the import job. Possible values: 'Active', 'Cancel'. Passing in a value of 'Cancel' will cancel the current active import job. By default it is set to 'Active'. </summary>
    public readonly partial struct ImportJobAdminStatus : IEquatable<ImportJobAdminStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ImportJobAdminStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ImportJobAdminStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ActiveValue = "Active";
        private const string CancelValue = "Cancel";

        /// <summary> Active. </summary>
        public static ImportJobAdminStatus Active { get; } = new ImportJobAdminStatus(ActiveValue);
        /// <summary> Cancel. </summary>
        public static ImportJobAdminStatus Cancel { get; } = new ImportJobAdminStatus(CancelValue);
        /// <summary> Determines if two <see cref="ImportJobAdminStatus"/> values are the same. </summary>
        public static bool operator ==(ImportJobAdminStatus left, ImportJobAdminStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ImportJobAdminStatus"/> values are not the same. </summary>
        public static bool operator !=(ImportJobAdminStatus left, ImportJobAdminStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ImportJobAdminStatus"/>. </summary>
        public static implicit operator ImportJobAdminStatus(string value) => new ImportJobAdminStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ImportJobAdminStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ImportJobAdminStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
