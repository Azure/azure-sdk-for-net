// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.StorageCache.Models
{
    /// <summary> A namespace junction. </summary>
    public partial class NamespaceJunction
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NamespaceJunction"/>. </summary>
        public NamespaceJunction()
        {
        }

        /// <summary> Initializes a new instance of <see cref="NamespaceJunction"/>. </summary>
        /// <param name="namespacePath"> Namespace path on a cache for a Storage Target. </param>
        /// <param name="targetPath"> Path in Storage Target to which namespacePath points. </param>
        /// <param name="nfsExport"> NFS export where targetPath exists. </param>
        /// <param name="nfsAccessPolicy"> Name of the access policy applied to this junction. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NamespaceJunction(string namespacePath, string targetPath, string nfsExport, string nfsAccessPolicy, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            NamespacePath = namespacePath;
            TargetPath = targetPath;
            NfsExport = nfsExport;
            NfsAccessPolicy = nfsAccessPolicy;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Namespace path on a cache for a Storage Target. </summary>
        public string NamespacePath { get; set; }
        /// <summary> Path in Storage Target to which namespacePath points. </summary>
        public string TargetPath { get; set; }
        /// <summary> NFS export where targetPath exists. </summary>
        public string NfsExport { get; set; }
        /// <summary> Name of the access policy applied to this junction. </summary>
        public string NfsAccessPolicy { get; set; }
    }
}
