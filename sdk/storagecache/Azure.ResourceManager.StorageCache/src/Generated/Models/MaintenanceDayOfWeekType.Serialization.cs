// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.StorageCache.Models
{
    internal static partial class MaintenanceDayOfWeekTypeExtensions
    {
        public static string ToSerialString(this MaintenanceDayOfWeekType value) => value switch
        {
            MaintenanceDayOfWeekType.Monday => "Monday",
            MaintenanceDayOfWeekType.Tuesday => "Tuesday",
            MaintenanceDayOfWeekType.Wednesday => "Wednesday",
            MaintenanceDayOfWeekType.Thursday => "Thursday",
            MaintenanceDayOfWeekType.Friday => "Friday",
            MaintenanceDayOfWeekType.Saturday => "Saturday",
            MaintenanceDayOfWeekType.Sunday => "Sunday",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown MaintenanceDayOfWeekType value.")
        };

        public static MaintenanceDayOfWeekType ToMaintenanceDayOfWeekType(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Monday")) return MaintenanceDayOfWeekType.Monday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Tuesday")) return MaintenanceDayOfWeekType.Tuesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Wednesday")) return MaintenanceDayOfWeekType.Wednesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Thursday")) return MaintenanceDayOfWeekType.Thursday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Friday")) return MaintenanceDayOfWeekType.Friday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Saturday")) return MaintenanceDayOfWeekType.Saturday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Sunday")) return MaintenanceDayOfWeekType.Sunday;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown MaintenanceDayOfWeekType value.");
        }
    }
}
