// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.StorageCache.Models
{
    /// <summary>
    /// Properties describing the software upgrade state of the Cache.
    /// Serialized Name: CacheUpgradeStatus
    /// </summary>
    public partial class StorageCacheUpgradeStatus
    {
        /// <summary> Initializes a new instance of StorageCacheUpgradeStatus. </summary>
        internal StorageCacheUpgradeStatus()
        {
        }

        /// <summary> Initializes a new instance of StorageCacheUpgradeStatus. </summary>
        /// <param name="currentFirmwareVersion">
        /// Version string of the firmware currently installed on this Cache.
        /// Serialized Name: CacheUpgradeStatus.currentFirmwareVersion
        /// </param>
        /// <param name="firmwareUpdateStatus">
        /// True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
        /// Serialized Name: CacheUpgradeStatus.firmwareUpdateStatus
        /// </param>
        /// <param name="firmwareUpdateDeadline">
        /// Time at which the pending firmware update will automatically be installed on the Cache.
        /// Serialized Name: CacheUpgradeStatus.firmwareUpdateDeadline
        /// </param>
        /// <param name="lastFirmwareUpdate">
        /// Time of the last successful firmware update.
        /// Serialized Name: CacheUpgradeStatus.lastFirmwareUpdate
        /// </param>
        /// <param name="pendingFirmwareVersion">
        /// When firmwareUpdateAvailable is true, this field holds the version string for the update.
        /// Serialized Name: CacheUpgradeStatus.pendingFirmwareVersion
        /// </param>
        internal StorageCacheUpgradeStatus(string currentFirmwareVersion, StorageCacheFirmwareStatusType? firmwareUpdateStatus, DateTimeOffset? firmwareUpdateDeadline, DateTimeOffset? lastFirmwareUpdate, string pendingFirmwareVersion)
        {
            CurrentFirmwareVersion = currentFirmwareVersion;
            FirmwareUpdateStatus = firmwareUpdateStatus;
            FirmwareUpdateDeadline = firmwareUpdateDeadline;
            LastFirmwareUpdate = lastFirmwareUpdate;
            PendingFirmwareVersion = pendingFirmwareVersion;
        }

        /// <summary>
        /// Version string of the firmware currently installed on this Cache.
        /// Serialized Name: CacheUpgradeStatus.currentFirmwareVersion
        /// </summary>
        public string CurrentFirmwareVersion { get; }
        /// <summary>
        /// True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
        /// Serialized Name: CacheUpgradeStatus.firmwareUpdateStatus
        /// </summary>
        public StorageCacheFirmwareStatusType? FirmwareUpdateStatus { get; }
        /// <summary>
        /// Time at which the pending firmware update will automatically be installed on the Cache.
        /// Serialized Name: CacheUpgradeStatus.firmwareUpdateDeadline
        /// </summary>
        public DateTimeOffset? FirmwareUpdateDeadline { get; }
        /// <summary>
        /// Time of the last successful firmware update.
        /// Serialized Name: CacheUpgradeStatus.lastFirmwareUpdate
        /// </summary>
        public DateTimeOffset? LastFirmwareUpdate { get; }
        /// <summary>
        /// When firmwareUpdateAvailable is true, this field holds the version string for the update.
        /// Serialized Name: CacheUpgradeStatus.pendingFirmwareVersion
        /// </summary>
        public string PendingFirmwareVersion { get; }
    }
}
