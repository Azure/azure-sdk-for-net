// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple8000Series.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ISCSIAndCloudStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ISCSIAndCloudStatus
    {
        [EnumMember(Value = "Disabled")]
        Disabled,
        [EnumMember(Value = "IscsiEnabled")]
        IscsiEnabled,
        [EnumMember(Value = "CloudEnabled")]
        CloudEnabled,
        [EnumMember(Value = "IscsiAndCloudEnabled")]
        IscsiAndCloudEnabled
    }
    internal static class ISCSIAndCloudStatusEnumExtension
    {
        internal static string ToSerializedValue(this ISCSIAndCloudStatus? value)
        {
            return value == null ? null : ((ISCSIAndCloudStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ISCSIAndCloudStatus value)
        {
            switch( value )
            {
                case ISCSIAndCloudStatus.Disabled:
                    return "Disabled";
                case ISCSIAndCloudStatus.IscsiEnabled:
                    return "IscsiEnabled";
                case ISCSIAndCloudStatus.CloudEnabled:
                    return "CloudEnabled";
                case ISCSIAndCloudStatus.IscsiAndCloudEnabled:
                    return "IscsiAndCloudEnabled";
            }
            return null;
        }

        internal static ISCSIAndCloudStatus? ParseISCSIAndCloudStatus(this string value)
        {
            switch( value )
            {
                case "Disabled":
                    return ISCSIAndCloudStatus.Disabled;
                case "IscsiEnabled":
                    return ISCSIAndCloudStatus.IscsiEnabled;
                case "CloudEnabled":
                    return ISCSIAndCloudStatus.CloudEnabled;
                case "IscsiAndCloudEnabled":
                    return ISCSIAndCloudStatus.IscsiAndCloudEnabled;
            }
            return null;
        }
    }
}
