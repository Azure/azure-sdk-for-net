// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple8000Series.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for BackupJobCreationType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum BackupJobCreationType
    {
        [EnumMember(Value = "Adhoc")]
        Adhoc,
        [EnumMember(Value = "BySchedule")]
        BySchedule,
        [EnumMember(Value = "BySSM")]
        BySSM
    }
    internal static class BackupJobCreationTypeEnumExtension
    {
        internal static string ToSerializedValue(this BackupJobCreationType? value)
        {
            return value == null ? null : ((BackupJobCreationType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this BackupJobCreationType value)
        {
            switch( value )
            {
                case BackupJobCreationType.Adhoc:
                    return "Adhoc";
                case BackupJobCreationType.BySchedule:
                    return "BySchedule";
                case BackupJobCreationType.BySSM:
                    return "BySSM";
            }
            return null;
        }

        internal static BackupJobCreationType? ParseBackupJobCreationType(this string value)
        {
            switch( value )
            {
                case "Adhoc":
                    return BackupJobCreationType.Adhoc;
                case "BySchedule":
                    return BackupJobCreationType.BySchedule;
                case "BySSM":
                    return BackupJobCreationType.BySSM;
            }
            return null;
        }
    }
}
