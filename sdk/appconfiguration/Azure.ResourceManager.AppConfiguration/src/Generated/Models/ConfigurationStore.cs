// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppConfiguration.Models
{
    /// <summary> The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it. </summary>
    public partial class ConfigurationStore : Resource
    {
        /// <summary> Initializes a new instance of ConfigurationStore. </summary>
        /// <param name="location"> The location of the resource. This cannot be changed after the resource is created. </param>
        /// <param name="sku"> The sku of the configuration store. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> or <paramref name="sku"/> is null. </exception>
        public ConfigurationStore(string location, Sku sku) : base(location)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }
            if (sku == null)
            {
                throw new ArgumentNullException(nameof(sku));
            }

            Sku = sku;
            PrivateEndpointConnections = new ChangeTrackingList<PrivateEndpointConnectionReference>();
        }

        /// <summary> Initializes a new instance of ConfigurationStore. </summary>
        /// <param name="id"> The resource ID. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. </param>
        /// <param name="location"> The location of the resource. This cannot be changed after the resource is created. </param>
        /// <param name="tags"> The tags of the resource. </param>
        /// <param name="identity"> The managed identity information, if configured. </param>
        /// <param name="sku"> The sku of the configuration store. </param>
        /// <param name="provisioningState"> The provisioning state of the configuration store. </param>
        /// <param name="creationDate"> The creation date of configuration store. </param>
        /// <param name="endpoint"> The DNS endpoint where the configuration store API will be available. </param>
        /// <param name="encryption"> The encryption settings of the configuration store. </param>
        /// <param name="privateEndpointConnections"> The list of private endpoint connections that are set up for this resource. </param>
        /// <param name="publicNetworkAccess"> Control permission for data plane traffic coming from public networks while private endpoint is enabled. </param>
        internal ConfigurationStore(string id, string name, string type, string location, IDictionary<string, string> tags, ResourceIdentity identity, Sku sku, ProvisioningState? provisioningState, DateTimeOffset? creationDate, string endpoint, EncryptionProperties encryption, IReadOnlyList<PrivateEndpointConnectionReference> privateEndpointConnections, PublicNetworkAccess? publicNetworkAccess) : base(id, name, type, location, tags)
        {
            Identity = identity;
            Sku = sku;
            ProvisioningState = provisioningState;
            CreationDate = creationDate;
            Endpoint = endpoint;
            Encryption = encryption;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
        }

        /// <summary> The managed identity information, if configured. </summary>
        public ResourceIdentity Identity { get; set; }
        /// <summary> The sku of the configuration store. </summary>
        public Sku Sku { get; set; }
        /// <summary> The provisioning state of the configuration store. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> The creation date of configuration store. </summary>
        public DateTimeOffset? CreationDate { get; }
        /// <summary> The DNS endpoint where the configuration store API will be available. </summary>
        public string Endpoint { get; }
        /// <summary> The encryption settings of the configuration store. </summary>
        public EncryptionProperties Encryption { get; set; }
        /// <summary> The list of private endpoint connections that are set up for this resource. </summary>
        public IReadOnlyList<PrivateEndpointConnectionReference> PrivateEndpointConnections { get; }
        /// <summary> Control permission for data plane traffic coming from public networks while private endpoint is enabled. </summary>
        public PublicNetworkAccess? PublicNetworkAccess { get; set; }
    }
}
