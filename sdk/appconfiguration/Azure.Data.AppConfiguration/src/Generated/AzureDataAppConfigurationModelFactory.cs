// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Data.AppConfiguration
{
    /// <summary> A factory class for creating instances of the models for mocking. </summary>
    public static partial class AzureDataAppConfigurationModelFactory
    {

        /// <summary> A snapshot is a named, immutable subset of an App Configuration store's key-values. </summary>
        /// <param name="name"> The name of the snapshot. </param>
        /// <param name="status"> The current status of the snapshot. </param>
        /// <param name="filters"> A list of filters used to filter the key-values included in the snapshot. </param>
        /// <param name="compositionType">
        /// The composition type describes how the key-values within the snapshot are
        /// composed. The 'key' composition type ensures there are no two key-values
        /// containing the same key. The 'key_label' composition type ensures there are no
        /// two key-values containing the same key and label.
        /// </param>
        /// <param name="created"> The time that the snapshot was created. </param>
        /// <param name="expires"> The time that the snapshot will expire. </param>
        /// <param name="retentionPeriod">
        /// The amount of time, in seconds, that a snapshot will remain in the archived
        /// state before expiring. This property is only writable during the creation of a
        /// snapshot. If not specified, the default lifetime of key-value revisions will be
        /// used.
        /// </param>
        /// <param name="size"> The size in bytes of the snapshot. </param>
        /// <param name="itemsCount"> The amount of key-values in the snapshot. </param>
        /// <param name="tags"> The tags of the snapshot. </param>
        /// <param name="etag"> A value representing the current state of the snapshot. </param>
        /// <returns> A new <see cref="AppConfiguration.Snapshot"/> instance for mocking. </returns>
        public static Snapshot Snapshot(string name = default, ConfigurationSnapshotStatus? status = default, IEnumerable<KeyValueFilter> filters = default, CompositionType? compositionType = default, DateTimeOffset? created = default, DateTimeOffset? expires = default, long? retentionPeriod = default, long? size = default, long? itemsCount = default, IDictionary<string, string> tags = default, string etag = default)
        {
            filters ??= new ChangeTrackingList<KeyValueFilter>();
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new Snapshot(
                name,
                status,
                filters?.ToList(),
                compositionType,
                created,
                expires,
                retentionPeriod,
                size,
                itemsCount,
                tags,
                etag,
                additionalBinaryDataProperties: null);
        }

        /// <summary>
        /// Enables filtering of key-values. Syntax reference:
        /// https://aka.ms/azconfig/docs/restapisnapshots
        /// </summary>
        /// <param name="key"> Filters key-values by their key field. </param>
        /// <param name="label"> Filters key-values by their label field. </param>
        /// <param name="tags"> Filters key-values by their tags field. </param>
        /// <returns> A new <see cref="AppConfiguration.KeyValueFilter"/> instance for mocking. </returns>
        public static KeyValueFilter KeyValueFilter(string key = default, string label = default, IEnumerable<string> tags = default)
        {
            tags ??= new ChangeTrackingList<string>();

            return new KeyValueFilter(key, label, tags?.ToList(), additionalBinaryDataProperties: null);
        }
    }
}
