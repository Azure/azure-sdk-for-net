// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Data.AppConfiguration
{
    /// <summary> The conditions that must be met for the feature flag to be enabled. </summary>
    public partial class FeatureFlagConditions
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="FeatureFlagConditions"/>. </summary>
        public FeatureFlagConditions()
        {
            Filters = new ChangeTrackingList<FeatureFlagFilter>();
        }

        /// <summary> Initializes a new instance of <see cref="FeatureFlagConditions"/>. </summary>
        /// <param name="requirementType"> The requirement type for the conditions. </param>
        /// <param name="filters"> The filters that will conditionally enable or disable the flag. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal FeatureFlagConditions(RequirementType? requirementType, IList<FeatureFlagFilter> filters, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            RequirementType = requirementType;
            Filters = filters;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The requirement type for the conditions. </summary>
        public RequirementType? RequirementType { get; set; }

        /// <summary> The filters that will conditionally enable or disable the flag. </summary>
        public IList<FeatureFlagFilter> Filters { get; }
    }
}
