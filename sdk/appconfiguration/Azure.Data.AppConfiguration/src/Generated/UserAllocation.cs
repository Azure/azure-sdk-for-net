// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Data.AppConfiguration
{
    /// <summary> Feature Flag UserAllocation object. </summary>
    public partial class UserAllocation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="UserAllocation"/>. </summary>
        /// <param name="variant"> The variant to allocate these percentiles to. </param>
        /// <param name="users"> The users to get this variant. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="variant"/> or <paramref name="users"/> is null. </exception>
        public UserAllocation(string variant, IEnumerable<string> users)
        {
            Argument.AssertNotNull(variant, nameof(variant));
            Argument.AssertNotNull(users, nameof(users));

            Variant = variant;
            Users = users.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="UserAllocation"/>. </summary>
        /// <param name="variant"> The variant to allocate these percentiles to. </param>
        /// <param name="users"> The users to get this variant. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal UserAllocation(string variant, IList<string> users, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Variant = variant;
            Users = users;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The variant to allocate these percentiles to. </summary>
        public string Variant { get; set; }

        /// <summary> The users to get this variant. </summary>
        public IList<string> Users { get; }
    }
}
