// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Data.AppConfiguration
{
    /// <summary> Feature Flag Variants object. </summary>
    public partial class Variant
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="Variant"/>. </summary>
        /// <param name="name"> The name of the variant. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public Variant(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="Variant"/>. </summary>
        /// <param name="name"> The name of the variant. </param>
        /// <param name="configurationValue"> The value of the variant. </param>
        /// <param name="statusOverride"> Determines if the variant should override the status of the flag. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal Variant(string name, string configurationValue, StatusOverride? statusOverride, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            ConfigurationValue = configurationValue;
            StatusOverride = statusOverride;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of the variant. </summary>
        public string Name { get; set; }

        /// <summary> The value of the variant. </summary>
        public string ConfigurationValue { get; set; }

        /// <summary> Determines if the variant should override the status of the flag. </summary>
        public StatusOverride? StatusOverride { get; set; }
    }
}
