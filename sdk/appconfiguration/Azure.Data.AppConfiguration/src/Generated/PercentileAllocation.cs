// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Data.AppConfiguration
{
    /// <summary> Feature Flag PercentileAllocation object. </summary>
    public partial class PercentileAllocation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="PercentileAllocation"/>. </summary>
        /// <param name="variant"> The variant to allocate these percentiles to. </param>
        /// <param name="from"> The lower bounds for this percentile allocation. </param>
        /// <param name="to"> The upper bounds for this percentile allocation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="variant"/> is null. </exception>
        public PercentileAllocation(string variant, int @from, int to)
        {
            Argument.AssertNotNull(variant, nameof(variant));

            Variant = variant;
            From = @from;
            To = to;
        }

        /// <summary> Initializes a new instance of <see cref="PercentileAllocation"/>. </summary>
        /// <param name="variant"> The variant to allocate these percentiles to. </param>
        /// <param name="from"> The lower bounds for this percentile allocation. </param>
        /// <param name="to"> The upper bounds for this percentile allocation. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal PercentileAllocation(string variant, int @from, int to, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Variant = variant;
            From = @from;
            To = to;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The variant to allocate these percentiles to. </summary>
        public string Variant { get; set; }

        /// <summary> The lower bounds for this percentile allocation. </summary>
        public int From { get; set; }

        /// <summary> The upper bounds for this percentile allocation. </summary>
        public int To { get; set; }
    }
}
