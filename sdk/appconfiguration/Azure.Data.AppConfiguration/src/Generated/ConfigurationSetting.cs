// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Data.AppConfiguration
{
    /// <summary> A key-value pair representing application settings. </summary>
    public partial class ConfigurationSetting
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ConfigurationSetting"/>. </summary>
        /// <param name="locked"> Indicates whether the key-value is locked. </param>
        /// <param name="etag"> A value representing the current state of the resource. </param>
        /// <param name="key">
        /// The primary identifier of the configuration setting.
        ///     A  is used together with a  to uniquely identify a configuration setting.
        /// </param>
        /// <param name="label">
        /// A value used to group configuration settings.
        ///     A  is used together with a  to uniquely identify a configuration setting.
        /// </param>
        /// <param name="value"> The configuration setting's value. </param>
        /// <param name="contentType">
        /// The content type of the configuration setting's value.
        ///     Providing a proper content-type can enable transformations of values when they are retrieved by applications.
        /// </param>
        /// <param name="lastModified"> The last time a modifying operation was performed on the given configuration setting. </param>
        /// <param name="tags">
        /// A dictionary of tags used to assign additional properties to a configuration setting.
        ///     These can be used to indicate how a configuration setting may be applied.
        /// </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ConfigurationSetting(bool? locked, string etag, string key, string label, string value, string contentType, DateTimeOffset? lastModified, IDictionary<string, string> tags, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Locked = locked;
            Etag = etag;
            Key = key;
            Label = label;
            Value = value;
            ContentType = contentType;
            LastModified = lastModified;
            Tags = tags;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Indicates whether the key-value is locked. </summary>
        public bool? Locked { get; set; }

        /// <summary> A value representing the current state of the resource. </summary>
        public string Etag { get; set; }
    }
}
