// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Data.AppConfiguration
{
    /// <summary> Feature Flag GroupAllocation object. </summary>
    public partial class GroupAllocation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="GroupAllocation"/>. </summary>
        /// <param name="variant"> The variant to allocate these percentiles to. </param>
        /// <param name="groups"> The groups to get this variant. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="variant"/> or <paramref name="groups"/> is null. </exception>
        public GroupAllocation(string variant, IEnumerable<string> groups)
        {
            Argument.AssertNotNull(variant, nameof(variant));
            Argument.AssertNotNull(groups, nameof(groups));

            Variant = variant;
            Groups = groups.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="GroupAllocation"/>. </summary>
        /// <param name="variant"> The variant to allocate these percentiles to. </param>
        /// <param name="groups"> The groups to get this variant. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal GroupAllocation(string variant, IList<string> groups, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Variant = variant;
            Groups = groups;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The variant to allocate these percentiles to. </summary>
        public string Variant { get; set; }

        /// <summary> The groups to get this variant. </summary>
        public IList<string> Groups { get; }
    }
}
