// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ProgrammableConnectivity.Models
{
    /// <summary> Operator API Plan properties. </summary>
    public partial class OperatorApiPlanProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="OperatorApiPlanProperties"/>. </summary>
        internal OperatorApiPlanProperties()
        {
            SupportedLocations = new ChangeTrackingList<string>();
            OperatorRegions = new ChangeTrackingList<string>();
            Markets = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="OperatorApiPlanProperties"/>. </summary>
        /// <param name="operatorName"> Name of the Operator this plan belongs to. </param>
        /// <param name="camaraApiName"> Standardized Network API name defined by CAMARA specifications. </param>
        /// <param name="supportedLocations"> List of Azure regions where this offer is supported. </param>
        /// <param name="operatorRegions"> List of country/region names where this plan is being supported by the Operator. </param>
        /// <param name="markets"> List of country/region names where this plan is being supported by Azure Marketplace. </param>
        /// <param name="limits"> The limits, if any, will be imposed by the operator. </param>
        /// <param name="marketplaceProperties"> Azure marketplace properties for this plan. </param>
        /// <param name="provisioningState"> The status of the last operation on the Gateway resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal OperatorApiPlanProperties(string operatorName, string camaraApiName, IReadOnlyList<string> supportedLocations, IReadOnlyList<string> operatorRegions, IReadOnlyList<string> markets, string limits, MarketplaceProperties marketplaceProperties, ProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            OperatorName = operatorName;
            CamaraApiName = camaraApiName;
            SupportedLocations = supportedLocations;
            OperatorRegions = operatorRegions;
            Markets = markets;
            Limits = limits;
            MarketplaceProperties = marketplaceProperties;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Name of the Operator this plan belongs to. </summary>
        public string OperatorName { get; }
        /// <summary> Standardized Network API name defined by CAMARA specifications. </summary>
        public string CamaraApiName { get; }
        /// <summary> List of Azure regions where this offer is supported. </summary>
        public IReadOnlyList<string> SupportedLocations { get; }
        /// <summary> List of country/region names where this plan is being supported by the Operator. </summary>
        public IReadOnlyList<string> OperatorRegions { get; }
        /// <summary> List of country/region names where this plan is being supported by Azure Marketplace. </summary>
        public IReadOnlyList<string> Markets { get; }
        /// <summary> The limits, if any, will be imposed by the operator. </summary>
        public string Limits { get; }
        /// <summary> Azure marketplace properties for this plan. </summary>
        public MarketplaceProperties MarketplaceProperties { get; }
        /// <summary> The status of the last operation on the Gateway resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
