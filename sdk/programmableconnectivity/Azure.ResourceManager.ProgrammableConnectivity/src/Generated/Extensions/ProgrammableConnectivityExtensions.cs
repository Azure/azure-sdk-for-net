// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;
using Azure.ResourceManager.ProgrammableConnectivity.Mocking;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ProgrammableConnectivity
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ProgrammableConnectivity. </summary>
    public static partial class ProgrammableConnectivityExtensions
    {
        private static MockableProgrammableConnectivityArmClient GetMockableProgrammableConnectivityArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableProgrammableConnectivityArmClient(client0));
        }

        private static MockableProgrammableConnectivityResourceGroupResource GetMockableProgrammableConnectivityResourceGroupResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableProgrammableConnectivityResourceGroupResource(client, resource.Id));
        }

        private static MockableProgrammableConnectivitySubscriptionResource GetMockableProgrammableConnectivitySubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableProgrammableConnectivitySubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Gets an object representing a <see cref="GatewayResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GatewayResource.CreateResourceIdentifier" /> to create a <see cref="GatewayResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityArmClient.GetGatewayResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="GatewayResource"/> object. </returns>
        public static GatewayResource GetGatewayResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableProgrammableConnectivityArmClient(client).GetGatewayResource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="OperatorApiConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OperatorApiConnectionResource.CreateResourceIdentifier" /> to create an <see cref="OperatorApiConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityArmClient.GetOperatorApiConnectionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="OperatorApiConnectionResource"/> object. </returns>
        public static OperatorApiConnectionResource GetOperatorApiConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableProgrammableConnectivityArmClient(client).GetOperatorApiConnectionResource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="OperatorApiPlanResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OperatorApiPlanResource.CreateResourceIdentifier" /> to create an <see cref="OperatorApiPlanResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityArmClient.GetOperatorApiPlanResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="OperatorApiPlanResource"/> object. </returns>
        public static OperatorApiPlanResource GetOperatorApiPlanResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableProgrammableConnectivityArmClient(client).GetOperatorApiPlanResource(id);
        }

        /// <summary>
        /// Gets a collection of GatewayResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityResourceGroupResource.GetGateways()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        /// <returns> An object representing collection of GatewayResources and their operations over a GatewayResource. </returns>
        public static GatewayCollection GetGateways(this ResourceGroupResource resourceGroupResource)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableProgrammableConnectivityResourceGroupResource(resourceGroupResource).GetGateways();
        }

        /// <summary>
        /// Get a Gateway resource by name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ProgrammableConnectivity/gateways/{gatewayName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Gateway_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="GatewayResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityResourceGroupResource.GetGatewayAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="gatewayName"> Azure Programmable Connectivity Gateway Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="gatewayName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="gatewayName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<GatewayResource>> GetGatewayAsync(this ResourceGroupResource resourceGroupResource, string gatewayName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return await GetMockableProgrammableConnectivityResourceGroupResource(resourceGroupResource).GetGatewayAsync(gatewayName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a Gateway resource by name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ProgrammableConnectivity/gateways/{gatewayName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Gateway_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="GatewayResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityResourceGroupResource.GetGateway(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="gatewayName"> Azure Programmable Connectivity Gateway Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="gatewayName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="gatewayName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<GatewayResource> GetGateway(this ResourceGroupResource resourceGroupResource, string gatewayName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableProgrammableConnectivityResourceGroupResource(resourceGroupResource).GetGateway(gatewayName, cancellationToken);
        }

        /// <summary>
        /// Gets a collection of OperatorApiConnectionResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityResourceGroupResource.GetOperatorApiConnections()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        /// <returns> An object representing collection of OperatorApiConnectionResources and their operations over a OperatorApiConnectionResource. </returns>
        public static OperatorApiConnectionCollection GetOperatorApiConnections(this ResourceGroupResource resourceGroupResource)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableProgrammableConnectivityResourceGroupResource(resourceGroupResource).GetOperatorApiConnections();
        }

        /// <summary>
        /// Get an Operator API Connection.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ProgrammableConnectivity/operatorApiConnections/{operatorApiConnectionName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiConnection_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiConnectionResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityResourceGroupResource.GetOperatorApiConnectionAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="operatorApiConnectionName"> Azure Programmable Connectivity (APC) Operator API Connection Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="operatorApiConnectionName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="operatorApiConnectionName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<OperatorApiConnectionResource>> GetOperatorApiConnectionAsync(this ResourceGroupResource resourceGroupResource, string operatorApiConnectionName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return await GetMockableProgrammableConnectivityResourceGroupResource(resourceGroupResource).GetOperatorApiConnectionAsync(operatorApiConnectionName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get an Operator API Connection.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ProgrammableConnectivity/operatorApiConnections/{operatorApiConnectionName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiConnection_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiConnectionResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivityResourceGroupResource.GetOperatorApiConnection(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="operatorApiConnectionName"> Azure Programmable Connectivity (APC) Operator API Connection Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="operatorApiConnectionName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="operatorApiConnectionName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<OperatorApiConnectionResource> GetOperatorApiConnection(this ResourceGroupResource resourceGroupResource, string operatorApiConnectionName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableProgrammableConnectivityResourceGroupResource(resourceGroupResource).GetOperatorApiConnection(operatorApiConnectionName, cancellationToken);
        }

        /// <summary>
        /// Gets a collection of OperatorApiPlanResources in the SubscriptionResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivitySubscriptionResource.GetOperatorApiPlans()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> An object representing collection of OperatorApiPlanResources and their operations over a OperatorApiPlanResource. </returns>
        public static OperatorApiPlanCollection GetOperatorApiPlans(this SubscriptionResource subscriptionResource)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableProgrammableConnectivitySubscriptionResource(subscriptionResource).GetOperatorApiPlans();
        }

        /// <summary>
        /// Get an OperatorApiPlan resource by name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/operatorApiPlans/{operatorApiPlanName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiPlan_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiPlanResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivitySubscriptionResource.GetOperatorApiPlanAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="operatorApiPlanName"> APC Gateway Plan Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> or <paramref name="operatorApiPlanName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="operatorApiPlanName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<OperatorApiPlanResource>> GetOperatorApiPlanAsync(this SubscriptionResource subscriptionResource, string operatorApiPlanName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return await GetMockableProgrammableConnectivitySubscriptionResource(subscriptionResource).GetOperatorApiPlanAsync(operatorApiPlanName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get an OperatorApiPlan resource by name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/operatorApiPlans/{operatorApiPlanName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiPlan_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiPlanResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivitySubscriptionResource.GetOperatorApiPlan(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="operatorApiPlanName"> APC Gateway Plan Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> or <paramref name="operatorApiPlanName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="operatorApiPlanName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<OperatorApiPlanResource> GetOperatorApiPlan(this SubscriptionResource subscriptionResource, string operatorApiPlanName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableProgrammableConnectivitySubscriptionResource(subscriptionResource).GetOperatorApiPlan(operatorApiPlanName, cancellationToken);
        }

        /// <summary>
        /// List Gateway resources by subscription ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/gateways</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Gateway_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="GatewayResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivitySubscriptionResource.GetGateways(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> An async collection of <see cref="GatewayResource"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<GatewayResource> GetGatewaysAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableProgrammableConnectivitySubscriptionResource(subscriptionResource).GetGatewaysAsync(cancellationToken);
        }

        /// <summary>
        /// List Gateway resources by subscription ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/gateways</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Gateway_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="GatewayResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivitySubscriptionResource.GetGateways(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="GatewayResource"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<GatewayResource> GetGateways(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableProgrammableConnectivitySubscriptionResource(subscriptionResource).GetGateways(cancellationToken);
        }

        /// <summary>
        /// List OperatorApiConnection resources by subscription ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/operatorApiConnections</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiConnection_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiConnectionResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivitySubscriptionResource.GetOperatorApiConnections(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> An async collection of <see cref="OperatorApiConnectionResource"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<OperatorApiConnectionResource> GetOperatorApiConnectionsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableProgrammableConnectivitySubscriptionResource(subscriptionResource).GetOperatorApiConnectionsAsync(cancellationToken);
        }

        /// <summary>
        /// List OperatorApiConnection resources by subscription ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/operatorApiConnections</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiConnection_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiConnectionResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableProgrammableConnectivitySubscriptionResource.GetOperatorApiConnections(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="OperatorApiConnectionResource"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<OperatorApiConnectionResource> GetOperatorApiConnections(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableProgrammableConnectivitySubscriptionResource(subscriptionResource).GetOperatorApiConnections(cancellationToken);
        }
    }
}
