// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Autorest.CSharp.Core;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.ResourceManager.ProgrammableConnectivity.Mocking
{
    /// <summary> A class to add extension methods to SubscriptionResource. </summary>
    public partial class MockableProgrammableConnectivitySubscriptionResource : ArmResource
    {
        private ClientDiagnostics _gatewayClientDiagnostics;
        private GatewaysRestOperations _gatewayRestClient;
        private ClientDiagnostics _operatorApiConnectionClientDiagnostics;
        private OperatorApiConnectionsRestOperations _operatorApiConnectionRestClient;

        /// <summary> Initializes a new instance of the <see cref="MockableProgrammableConnectivitySubscriptionResource"/> class for mocking. </summary>
        protected MockableProgrammableConnectivitySubscriptionResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableProgrammableConnectivitySubscriptionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableProgrammableConnectivitySubscriptionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private ClientDiagnostics GatewayClientDiagnostics => _gatewayClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.ProgrammableConnectivity", GatewayResource.ResourceType.Namespace, Diagnostics);
        private GatewaysRestOperations GatewayRestClient => _gatewayRestClient ??= new GatewaysRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(GatewayResource.ResourceType));
        private ClientDiagnostics OperatorApiConnectionClientDiagnostics => _operatorApiConnectionClientDiagnostics ??= new ClientDiagnostics("Azure.ResourceManager.ProgrammableConnectivity", OperatorApiConnectionResource.ResourceType.Namespace, Diagnostics);
        private OperatorApiConnectionsRestOperations OperatorApiConnectionRestClient => _operatorApiConnectionRestClient ??= new OperatorApiConnectionsRestOperations(Pipeline, Diagnostics.ApplicationId, Endpoint, GetApiVersionOrNull(OperatorApiConnectionResource.ResourceType));

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of OperatorApiPlanResources in the SubscriptionResource. </summary>
        /// <returns> An object representing collection of OperatorApiPlanResources and their operations over a OperatorApiPlanResource. </returns>
        public virtual OperatorApiPlanCollection GetOperatorApiPlans()
        {
            return GetCachedClient(client => new OperatorApiPlanCollection(client, Id));
        }

        /// <summary>
        /// Get an OperatorApiPlan resource by name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/operatorApiPlans/{operatorApiPlanName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiPlan_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiPlanResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="operatorApiPlanName"> APC Gateway Plan Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="operatorApiPlanName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="operatorApiPlanName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<OperatorApiPlanResource>> GetOperatorApiPlanAsync(string operatorApiPlanName, CancellationToken cancellationToken = default)
        {
            return await GetOperatorApiPlans().GetAsync(operatorApiPlanName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get an OperatorApiPlan resource by name.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/operatorApiPlans/{operatorApiPlanName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiPlan_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiPlanResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="operatorApiPlanName"> APC Gateway Plan Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="operatorApiPlanName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="operatorApiPlanName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<OperatorApiPlanResource> GetOperatorApiPlan(string operatorApiPlanName, CancellationToken cancellationToken = default)
        {
            return GetOperatorApiPlans().Get(operatorApiPlanName, cancellationToken);
        }

        /// <summary>
        /// List Gateway resources by subscription ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/gateways</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Gateway_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="GatewayResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="GatewayResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<GatewayResource> GetGatewaysAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => GatewayRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => GatewayRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new GatewayResource(Client, GatewayData.DeserializeGatewayData(e)), GatewayClientDiagnostics, Pipeline, "MockableProgrammableConnectivitySubscriptionResource.GetGateways", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List Gateway resources by subscription ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/gateways</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Gateway_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="GatewayResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="GatewayResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<GatewayResource> GetGateways(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => GatewayRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => GatewayRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new GatewayResource(Client, GatewayData.DeserializeGatewayData(e)), GatewayClientDiagnostics, Pipeline, "MockableProgrammableConnectivitySubscriptionResource.GetGateways", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List OperatorApiConnection resources by subscription ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/operatorApiConnections</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiConnection_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiConnectionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="OperatorApiConnectionResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual AsyncPageable<OperatorApiConnectionResource> GetOperatorApiConnectionsAsync(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => OperatorApiConnectionRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => OperatorApiConnectionRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreateAsyncPageable(FirstPageRequest, NextPageRequest, e => new OperatorApiConnectionResource(Client, OperatorApiConnectionData.DeserializeOperatorApiConnectionData(e)), OperatorApiConnectionClientDiagnostics, Pipeline, "MockableProgrammableConnectivitySubscriptionResource.GetOperatorApiConnections", "value", "nextLink", cancellationToken);
        }

        /// <summary>
        /// List OperatorApiConnection resources by subscription ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ProgrammableConnectivity/operatorApiConnections</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>OperatorApiConnection_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-03-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="OperatorApiConnectionResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="OperatorApiConnectionResource"/> that may take multiple service requests to iterate over. </returns>
        public virtual Pageable<OperatorApiConnectionResource> GetOperatorApiConnections(CancellationToken cancellationToken = default)
        {
            HttpMessage FirstPageRequest(int? pageSizeHint) => OperatorApiConnectionRestClient.CreateListBySubscriptionRequest(Id.SubscriptionId);
            HttpMessage NextPageRequest(int? pageSizeHint, string nextLink) => OperatorApiConnectionRestClient.CreateListBySubscriptionNextPageRequest(nextLink, Id.SubscriptionId);
            return GeneratorPageableHelpers.CreatePageable(FirstPageRequest, NextPageRequest, e => new OperatorApiConnectionResource(Client, OperatorApiConnectionData.DeserializeOperatorApiConnectionData(e)), OperatorApiConnectionClientDiagnostics, Pipeline, "MockableProgrammableConnectivitySubscriptionResource.GetOperatorApiConnections", "value", "nextLink", cancellationToken);
        }
    }
}
