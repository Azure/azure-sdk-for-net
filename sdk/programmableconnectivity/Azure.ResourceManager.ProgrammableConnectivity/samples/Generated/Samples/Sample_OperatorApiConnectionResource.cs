// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ProgrammableConnectivity.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ProgrammableConnectivity.Samples
{
    public partial class Sample_OperatorApiConnectionResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_OperatorApiConnectionsGetMaximumSetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2025-03-30-preview/OperatorApiConnections_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "OperatorApiConnection_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OperatorApiConnectionResource created on azure
            // for more information of creating OperatorApiConnectionResource, please refer to the document of OperatorApiConnectionResource
            string subscriptionId = "93519EA0-206F-42A3-8126-A234F19328E0";
            string resourceGroupName = "rgopenapi";
            string operatorApiConnectionName = "operatorApiConnectionName";
            ResourceIdentifier operatorApiConnectionResourceId = OperatorApiConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, operatorApiConnectionName);
            OperatorApiConnectionResource operatorApiConnection = client.GetOperatorApiConnectionResource(operatorApiConnectionResourceId);

            // invoke the operation
            OperatorApiConnectionResource result = await operatorApiConnection.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OperatorApiConnectionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_OperatorApiConnectionsDeleteMaximumSetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2025-03-30-preview/OperatorApiConnections_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "OperatorApiConnection_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OperatorApiConnectionResource created on azure
            // for more information of creating OperatorApiConnectionResource, please refer to the document of OperatorApiConnectionResource
            string subscriptionId = "93519EA0-206F-42A3-8126-A234F19328E0";
            string resourceGroupName = "rgopenapi";
            string operatorApiConnectionName = "operatorApiConnectionName";
            ResourceIdentifier operatorApiConnectionResourceId = OperatorApiConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, operatorApiConnectionName);
            OperatorApiConnectionResource operatorApiConnection = client.GetOperatorApiConnectionResource(operatorApiConnectionResourceId);

            // invoke the operation
            await operatorApiConnection.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_OperatorApiConnectionsUpdateMaximumSetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2025-03-30-preview/OperatorApiConnections_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "OperatorApiConnection_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OperatorApiConnectionResource created on azure
            // for more information of creating OperatorApiConnectionResource, please refer to the document of OperatorApiConnectionResource
            string subscriptionId = "93519EA0-206F-42A3-8126-A234F19328E0";
            string resourceGroupName = "rgopenapi";
            string operatorApiConnectionName = "operatorApiConnectionName";
            ResourceIdentifier operatorApiConnectionResourceId = OperatorApiConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, operatorApiConnectionName);
            OperatorApiConnectionResource operatorApiConnection = client.GetOperatorApiConnectionResource(operatorApiConnectionResourceId);

            // invoke the operation
            OperatorApiConnectionPatch patch = new OperatorApiConnectionPatch
            {
                Tags = { },
                Properties = new OperatorApiConnectionUpdateProperties
                {
                    OperatorApiPlanId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-00000000000/providers/Microsoft.ProgrammableConnectivity/operatorApiPlans/livmzrh"),
                    PlanTermsAndConditionsAccepted = true,
                    Purposes = { new Purpose("Fraud Detection and Prevention") },
                    PurposeReason = "This application uses this API for this purpose because...",
                    DataProcessingList = {new DataProcessing(
    ProcessingOperation.Access,
    new Context[]{Context.AlgorithmicLogic},
    Duration.EndlessDuration,
    Frequency.ContinuousFrequency,
    new DataRegions[]
{
new DataRegions("AA", true, new Uri("https://www.dataprivacyframework.gov/participant/0"))
{
CommercialOrganization = "Contoso",
}
},
    new DataRegions[]
{
new DataRegions("AA", true, new Uri("https://www.dataprivacyframework.gov/participant/0"))
{
CommercialOrganization = "Contoso",
}
})},
                },
            };
            ArmOperation<OperatorApiConnectionResource> lro = await operatorApiConnection.UpdateAsync(WaitUntil.Completed, patch);
            OperatorApiConnectionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OperatorApiConnectionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
