// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Media.VideoAnalyzer.Edge.Models
{
    /// <summary> Properties of a live pipeline. </summary>
    public partial class LivePipelineProperties
    {
        /// <summary> Initializes a new instance of LivePipelineProperties. </summary>
        public LivePipelineProperties()
        {
            Parameters = new ChangeTrackingList<ParameterDefinition>();
        }

        /// <summary> Initializes a new instance of LivePipelineProperties. </summary>
        /// <param name="description"> An optional description for the live pipeline. </param>
        /// <param name="topologyName"> The name of the pipeline topology that this live pipeline will run. A pipeline topology with this name should already have been set in the Edge module. </param>
        /// <param name="parameters"> List of one or more live pipeline parameters. </param>
        /// <param name="state"> Allowed states for a live pipeline. </param>
        internal LivePipelineProperties(string description, string topologyName, IList<ParameterDefinition> parameters, LivePipelineState? state)
        {
            Description = description;
            TopologyName = topologyName;
            Parameters = parameters;
            State = state;
        }

        /// <summary> An optional description for the live pipeline. </summary>
        public string Description { get; set; }
        /// <summary> The name of the pipeline topology that this live pipeline will run. A pipeline topology with this name should already have been set in the Edge module. </summary>
        public string TopologyName { get; set; }
        /// <summary> List of one or more live pipeline parameters. </summary>
        public IList<ParameterDefinition> Parameters { get; }
        /// <summary> Allowed states for a live pipeline. </summary>
        public LivePipelineState? State { get; set; }
    }
}
