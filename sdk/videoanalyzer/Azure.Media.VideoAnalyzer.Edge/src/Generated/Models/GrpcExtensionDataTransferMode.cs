// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Media.VideoAnalyzer.Edge.Models
{
    /// <summary> Data transfer mode: embedded or sharedMemory. </summary>
    public readonly partial struct GrpcExtensionDataTransferMode : IEquatable<GrpcExtensionDataTransferMode>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="GrpcExtensionDataTransferMode"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public GrpcExtensionDataTransferMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string EmbeddedValue = "embedded";
        private const string SharedMemoryValue = "sharedMemory";

        /// <summary> Media samples are embedded into the gRPC messages. This mode is less efficient but it requires a simpler implementations and can be used with plugins which are not on the same node as the Video Analyzer module. </summary>
        public static GrpcExtensionDataTransferMode Embedded { get; } = new GrpcExtensionDataTransferMode(EmbeddedValue);
        /// <summary> Media samples are made available through shared memory. This mode enables efficient data transfers but it requires that the extension plugin to be co-located on the same node and sharing the same shared memory space. </summary>
        public static GrpcExtensionDataTransferMode SharedMemory { get; } = new GrpcExtensionDataTransferMode(SharedMemoryValue);
        /// <summary> Determines if two <see cref="GrpcExtensionDataTransferMode"/> values are the same. </summary>
        public static bool operator ==(GrpcExtensionDataTransferMode left, GrpcExtensionDataTransferMode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="GrpcExtensionDataTransferMode"/> values are not the same. </summary>
        public static bool operator !=(GrpcExtensionDataTransferMode left, GrpcExtensionDataTransferMode right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="GrpcExtensionDataTransferMode"/>. </summary>
        public static implicit operator GrpcExtensionDataTransferMode(string value) => new GrpcExtensionDataTransferMode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is GrpcExtensionDataTransferMode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(GrpcExtensionDataTransferMode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
