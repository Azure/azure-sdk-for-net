// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Media.VideoAnalyzer.Edge.Models
{
    /// <summary> Processor that allows for extensions outside of the Azure Video Analyzer Edge module to be integrated into the pipeline topology. It is the base class for various different kinds of extension processor types. </summary>
    public partial class ExtensionProcessorBase : ProcessorNodeBase
    {
        /// <summary> Initializes a new instance of ExtensionProcessorBase. </summary>
        /// <param name="name"> The name for this processor node. </param>
        /// <param name="inputs"> An array of the names of the other nodes in the topology, the outputs of which are used as input for this processor node. </param>
        /// <param name="endpoint"> Endpoint to which this processor should connect. </param>
        /// <param name="image"> Describes the parameters of the image that is sent as input to the endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="inputs"/>, <paramref name="endpoint"/>, or <paramref name="image"/> is null. </exception>
        public ExtensionProcessorBase(string name, IEnumerable<NodeInput> inputs, EndpointBase endpoint, ImageProperties image) : base(name, inputs)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (inputs == null)
            {
                throw new ArgumentNullException(nameof(inputs));
            }
            if (endpoint == null)
            {
                throw new ArgumentNullException(nameof(endpoint));
            }
            if (image == null)
            {
                throw new ArgumentNullException(nameof(image));
            }

            Endpoint = endpoint;
            Image = image;
            Type = "#Microsoft.VideoAnalyzer.ExtensionProcessorBase";
        }

        /// <summary> Initializes a new instance of ExtensionProcessorBase. </summary>
        /// <param name="type"> The discriminator for derived types. </param>
        /// <param name="name"> The name for this processor node. </param>
        /// <param name="inputs"> An array of the names of the other nodes in the topology, the outputs of which are used as input for this processor node. </param>
        /// <param name="endpoint"> Endpoint to which this processor should connect. </param>
        /// <param name="image"> Describes the parameters of the image that is sent as input to the endpoint. </param>
        /// <param name="samplingOptions"> Describes the sampling options to be applied when forwarding samples to the extension. </param>
        internal ExtensionProcessorBase(string type, string name, IList<NodeInput> inputs, EndpointBase endpoint, ImageProperties image, SamplingOptions samplingOptions) : base(type, name, inputs)
        {
            Endpoint = endpoint;
            Image = image;
            SamplingOptions = samplingOptions;
            Type = type ?? "#Microsoft.VideoAnalyzer.ExtensionProcessorBase";
        }

        /// <summary> Endpoint to which this processor should connect. </summary>
        public EndpointBase Endpoint { get; set; }
        /// <summary> Describes the parameters of the image that is sent as input to the endpoint. </summary>
        public ImageProperties Image { get; set; }
        /// <summary> Describes the sampling options to be applied when forwarding samples to the extension. </summary>
        public SamplingOptions SamplingOptions { get; set; }
    }
}
