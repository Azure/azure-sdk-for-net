// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Media.VideoAnalyzer.Edge.Models
{
    public partial class SpatialAnalysisTypedOperationBase : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Debug))
            {
                writer.WritePropertyName("debug");
                writer.WriteStringValue(Debug);
            }
            if (Optional.IsDefined(CameraConfiguration))
            {
                writer.WritePropertyName("cameraConfiguration");
                writer.WriteStringValue(CameraConfiguration);
            }
            if (Optional.IsDefined(DetectorNodeConfiguration))
            {
                writer.WritePropertyName("detectorNodeConfiguration");
                writer.WriteStringValue(DetectorNodeConfiguration);
            }
            if (Optional.IsDefined(EnableFaceMaskClassifier))
            {
                writer.WritePropertyName("enableFaceMaskClassifier");
                writer.WriteStringValue(EnableFaceMaskClassifier);
            }
            writer.WritePropertyName("@type");
            writer.WriteStringValue(Type);
            writer.WriteEndObject();
        }

        internal static SpatialAnalysisTypedOperationBase DeserializeSpatialAnalysisTypedOperationBase(JsonElement element)
        {
            if (element.TryGetProperty("@type", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "#Microsoft.VideoAnalyzer.SpatialAnalysisPersonCountOperation": return SpatialAnalysisPersonCountOperation.DeserializeSpatialAnalysisPersonCountOperation(element);
                    case "#Microsoft.VideoAnalyzer.SpatialAnalysisPersonDistanceOperation": return SpatialAnalysisPersonDistanceOperation.DeserializeSpatialAnalysisPersonDistanceOperation(element);
                    case "#Microsoft.VideoAnalyzer.SpatialAnalysisPersonLineCrossingOperation": return SpatialAnalysisPersonLineCrossingOperation.DeserializeSpatialAnalysisPersonLineCrossingOperation(element);
                    case "#Microsoft.VideoAnalyzer.SpatialAnalysisPersonZoneCrossingOperation": return SpatialAnalysisPersonZoneCrossingOperation.DeserializeSpatialAnalysisPersonZoneCrossingOperation(element);
                }
            }
            Optional<string> debug = default;
            Optional<string> cameraConfiguration = default;
            Optional<string> detectorNodeConfiguration = default;
            Optional<string> enableFaceMaskClassifier = default;
            string type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("debug"))
                {
                    debug = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cameraConfiguration"))
                {
                    cameraConfiguration = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("detectorNodeConfiguration"))
                {
                    detectorNodeConfiguration = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("enableFaceMaskClassifier"))
                {
                    enableFaceMaskClassifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("@type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
            }
            return new SpatialAnalysisTypedOperationBase(type, debug.Value, cameraConfiguration.Value, detectorNodeConfiguration.Value, enableFaceMaskClassifier.Value);
        }
    }
}
