// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Media.VideoAnalyzer.Edge.Models
{
    /// <summary> The SpatialAnalysisPersonLineCrossingLineEvents. </summary>
    public partial class SpatialAnalysisPersonLineCrossingLineEvents
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SpatialAnalysisPersonLineCrossingLineEvents"/>. </summary>
        /// <param name="line">
        /// The named line.
        /// Please note <see cref="NamedLineBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="NamedLineString"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="line"/> is null. </exception>
        public SpatialAnalysisPersonLineCrossingLineEvents(NamedLineBase line)
        {
            Argument.AssertNotNull(line, nameof(line));

            Line = line;
            Events = new ChangeTrackingList<SpatialAnalysisPersonLineCrossingEvent>();
        }

        /// <summary> Initializes a new instance of <see cref="SpatialAnalysisPersonLineCrossingLineEvents"/>. </summary>
        /// <param name="line">
        /// The named line.
        /// Please note <see cref="NamedLineBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="NamedLineString"/>.
        /// </param>
        /// <param name="events"> The event configuration. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SpatialAnalysisPersonLineCrossingLineEvents(NamedLineBase line, IList<SpatialAnalysisPersonLineCrossingEvent> events, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Line = line;
            Events = events;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SpatialAnalysisPersonLineCrossingLineEvents"/> for deserialization. </summary>
        internal SpatialAnalysisPersonLineCrossingLineEvents()
        {
        }

        /// <summary>
        /// The named line.
        /// Please note <see cref="NamedLineBase"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="NamedLineString"/>.
        /// </summary>
        public NamedLineBase Line { get; set; }
        /// <summary> The event configuration. </summary>
        public IList<SpatialAnalysisPersonLineCrossingEvent> Events { get; }
    }
}
