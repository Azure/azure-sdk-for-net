// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for VideosOperations.
    /// </summary>
    public static partial class VideosOperationsExtensions
    {
            /// <summary>
            /// List all existing video resources.
            /// </summary>
            /// <remarks>
            /// List all existing video resources in the specified account.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='top'>
            /// Specifies a non-negative integer n that limits the number of items returned
            /// from a collection. The service returns the number of available items up to
            /// but not greater than the specified value n.
            /// </param>
            public static IPage<VideoEntity> List(this IVideosOperations operations, string resourceGroupName, string accountName, int? top = default(int?))
            {
                return operations.ListAsync(resourceGroupName, accountName, top).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all existing video resources.
            /// </summary>
            /// <remarks>
            /// List all existing video resources in the specified account.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='top'>
            /// Specifies a non-negative integer n that limits the number of items returned
            /// from a collection. The service returns the number of available items up to
            /// but not greater than the specified value n.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<VideoEntity>> ListAsync(this IVideosOperations operations, string resourceGroupName, string accountName, int? top = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, accountName, top, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves a video resource.
            /// </summary>
            /// <remarks>
            /// Retrieves an existing video resource within an account with a given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to retrieve.
            /// </param>
            public static VideoEntity Get(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName)
            {
                return operations.GetAsync(resourceGroupName, accountName, videoName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves a video resource.
            /// </summary>
            /// <remarks>
            /// Retrieves an existing video resource within an account with a given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to retrieve.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VideoEntity> GetAsync(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, accountName, videoName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or updates a video resource.
            /// </summary>
            /// <remarks>
            /// Creates a new video resource or updates an existing one in an account.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to create or update.
            /// </param>
            /// <param name='title'>
            /// Optional video title provided by the user. Value can be up to 256
            /// characters long.
            /// </param>
            /// <param name='description'>
            /// Optional video description provided by the user. Value can be up to 2048
            /// characters long.
            /// </param>
            public static VideoEntity CreateOrUpdate(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName, string title = default(string), string description = default(string))
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, accountName, videoName, title, description).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or updates a video resource.
            /// </summary>
            /// <remarks>
            /// Creates a new video resource or updates an existing one in an account.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to create or update.
            /// </param>
            /// <param name='title'>
            /// Optional video title provided by the user. Value can be up to 256
            /// characters long.
            /// </param>
            /// <param name='description'>
            /// Optional video description provided by the user. Value can be up to 2048
            /// characters long.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VideoEntity> CreateOrUpdateAsync(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName, string title = default(string), string description = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, accountName, videoName, title, description, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a video resource.
            /// </summary>
            /// <remarks>
            /// Deletes an existing video resource and its underlying data. This operation
            /// is irreversible.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to delete.
            /// </param>
            public static void Delete(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName)
            {
                operations.DeleteAsync(resourceGroupName, accountName, videoName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a video resource.
            /// </summary>
            /// <remarks>
            /// Deletes an existing video resource and its underlying data. This operation
            /// is irreversible.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to delete.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, accountName, videoName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates the properties of a video resource.
            /// </summary>
            /// <remarks>
            /// Updates individual properties of an existing video resource.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to update.
            /// </param>
            /// <param name='title'>
            /// Optional video title provided by the user. Value can be up to 256
            /// characters long.
            /// </param>
            /// <param name='description'>
            /// Optional video description provided by the user. Value can be up to 2048
            /// characters long.
            /// </param>
            public static VideoEntity Update(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName, string title = default(string), string description = default(string))
            {
                return operations.UpdateAsync(resourceGroupName, accountName, videoName, title, description).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the properties of a video resource.
            /// </summary>
            /// <remarks>
            /// Updates individual properties of an existing video resource.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to update.
            /// </param>
            /// <param name='title'>
            /// Optional video title provided by the user. Value can be up to 256
            /// characters long.
            /// </param>
            /// <param name='description'>
            /// Optional video description provided by the user. Value can be up to 2048
            /// characters long.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VideoEntity> UpdateAsync(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName, string title = default(string), string description = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, accountName, videoName, title, description, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Generates a streaming token for video playback.
            /// </summary>
            /// <remarks>
            /// Generates a streaming token used for authenticating video playback.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to generate a token for playback.
            /// </param>
            public static VideoStreamingToken ListStreamingToken(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName)
            {
                return operations.ListStreamingTokenAsync(resourceGroupName, accountName, videoName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Generates a streaming token for video playback.
            /// </summary>
            /// <remarks>
            /// Generates a streaming token used for authenticating video playback.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='videoName'>
            /// The name of the video to generate a token for playback.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VideoStreamingToken> ListStreamingTokenAsync(this IVideosOperations operations, string resourceGroupName, string accountName, string videoName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListStreamingTokenWithHttpMessagesAsync(resourceGroupName, accountName, videoName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List all existing video resources.
            /// </summary>
            /// <remarks>
            /// List all existing video resources in the specified account.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<VideoEntity> ListNext(this IVideosOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all existing video resources.
            /// </summary>
            /// <remarks>
            /// List all existing video resources in the specified account.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<VideoEntity>> ListNextAsync(this IVideosOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
