// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for PipelineJobsOperations.
    /// </summary>
    public static partial class PipelineJobsOperationsExtensions
    {
            /// <summary>
            /// Retrieves a list of pipeline jobs.
            /// </summary>
            /// <remarks>
            /// Retrieves a list of all live pipelines that have been created, along with
            /// their JSON representations.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='filter'>
            /// Restricts the set of items returned.
            /// </param>
            /// <param name='top'>
            /// Specifies a non-negative integer n that limits the number of items returned
            /// from a collection. The service returns the number of available items up to
            /// but not greater than the specified value n.
            /// </param>
            public static IPage<PipelineJob> List(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string filter = default(string), int? top = default(int?))
            {
                return operations.ListAsync(resourceGroupName, accountName, filter, top).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves a list of pipeline jobs.
            /// </summary>
            /// <remarks>
            /// Retrieves a list of all live pipelines that have been created, along with
            /// their JSON representations.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='filter'>
            /// Restricts the set of items returned.
            /// </param>
            /// <param name='top'>
            /// Specifies a non-negative integer n that limits the number of items returned
            /// from a collection. The service returns the number of available items up to
            /// but not greater than the specified value n.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<PipelineJob>> ListAsync(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string filter = default(string), int? top = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, accountName, filter, top, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a specific pipeline job by name.
            /// </summary>
            /// <remarks>
            /// Retrieves a specific pipeline job by name. If a pipeline job with that name
            /// has been previously created, the call will return the JSON representation
            /// of that instance.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            public static PipelineJob Get(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName)
            {
                return operations.GetAsync(resourceGroupName, accountName, pipelineJobName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a specific pipeline job by name.
            /// </summary>
            /// <remarks>
            /// Retrieves a specific pipeline job by name. If a pipeline job with that name
            /// has been previously created, the call will return the JSON representation
            /// of that instance.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PipelineJob> GetAsync(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, accountName, pipelineJobName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a pipeline job.
            /// </summary>
            /// <remarks>
            /// Creates a new pipeline job or updates an existing one, with the given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            /// <param name='parameters'>
            /// The request parameters
            /// </param>
            public static PipelineJob CreateOrUpdate(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName, PipelineJob parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, accountName, pipelineJobName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a pipeline job.
            /// </summary>
            /// <remarks>
            /// Creates a new pipeline job or updates an existing one, with the given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            /// <param name='parameters'>
            /// The request parameters
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PipelineJob> CreateOrUpdateAsync(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName, PipelineJob parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, accountName, pipelineJobName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a pipeline job.
            /// </summary>
            /// <remarks>
            /// Deletes a pipeline job with the given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            public static void Delete(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName)
            {
                operations.DeleteAsync(resourceGroupName, accountName, pipelineJobName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a pipeline job.
            /// </summary>
            /// <remarks>
            /// Deletes a pipeline job with the given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, accountName, pipelineJobName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates an existing pipeline job.
            /// </summary>
            /// <remarks>
            /// Updates an existing pipeline job with the given name. Properties that can
            /// be updated include: description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            /// <param name='parameters'>
            /// The request parameters
            /// </param>
            public static PipelineJob Update(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName, PipelineJobUpdate parameters)
            {
                return operations.UpdateAsync(resourceGroupName, accountName, pipelineJobName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates an existing pipeline job.
            /// </summary>
            /// <remarks>
            /// Updates an existing pipeline job with the given name. Properties that can
            /// be updated include: description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            /// <param name='parameters'>
            /// The request parameters
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PipelineJob> UpdateAsync(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName, PipelineJobUpdate parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, accountName, pipelineJobName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Cancels a pipeline job.
            /// </summary>
            /// <remarks>
            /// Cancels a pipeline job with the given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            public static void Cancel(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName)
            {
                operations.CancelAsync(resourceGroupName, accountName, pipelineJobName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Cancels a pipeline job.
            /// </summary>
            /// <remarks>
            /// Cancels a pipeline job with the given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CancelAsync(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CancelWithHttpMessagesAsync(resourceGroupName, accountName, pipelineJobName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Cancels a pipeline job.
            /// </summary>
            /// <remarks>
            /// Cancels a pipeline job with the given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            public static void BeginCancel(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName)
            {
                operations.BeginCancelAsync(resourceGroupName, accountName, pipelineJobName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Cancels a pipeline job.
            /// </summary>
            /// <remarks>
            /// Cancels a pipeline job with the given name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// The Azure Video Analyzer account name.
            /// </param>
            /// <param name='pipelineJobName'>
            /// The pipeline job name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginCancelAsync(this IPipelineJobsOperations operations, string resourceGroupName, string accountName, string pipelineJobName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginCancelWithHttpMessagesAsync(resourceGroupName, accountName, pipelineJobName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieves a list of pipeline jobs.
            /// </summary>
            /// <remarks>
            /// Retrieves a list of all live pipelines that have been created, along with
            /// their JSON representations.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<PipelineJob> ListNext(this IPipelineJobsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves a list of pipeline jobs.
            /// </summary>
            /// <remarks>
            /// Retrieves a list of all live pipelines that have been created, along with
            /// their JSON representations.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<PipelineJob>> ListNextAsync(this IPipelineJobsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
