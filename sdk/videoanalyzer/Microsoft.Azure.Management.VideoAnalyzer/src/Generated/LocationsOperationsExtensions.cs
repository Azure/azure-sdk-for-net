// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for LocationsOperations.
    /// </summary>
    public static partial class LocationsOperationsExtensions
    {
            /// <summary>
            /// Check Name Availability
            /// </summary>
            /// <remarks>
            /// Checks whether the Video Analyzer resource name is available.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locationName'>
            /// The name of the location.
            /// </param>
            /// <param name='name'>
            /// The name of the resource for which availability needs to be checked.
            /// </param>
            /// <param name='type'>
            /// The resource type.
            /// </param>
            public static CheckNameAvailabilityResponse CheckNameAvailability(this ILocationsOperations operations, string locationName, string name = default(string), string type = default(string))
            {
                return operations.CheckNameAvailabilityAsync(locationName, name, type).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Check Name Availability
            /// </summary>
            /// <remarks>
            /// Checks whether the Video Analyzer resource name is available.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='locationName'>
            /// The name of the location.
            /// </param>
            /// <param name='name'>
            /// The name of the resource for which availability needs to be checked.
            /// </param>
            /// <param name='type'>
            /// The resource type.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckNameAvailabilityResponse> CheckNameAvailabilityAsync(this ILocationsOperations operations, string locationName, string name = default(string), string type = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckNameAvailabilityWithHttpMessagesAsync(locationName, name, type, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
