// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for EncoderSystemPresetType.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(EncoderSystemPresetTypeConverter))]
    public struct EncoderSystemPresetType : System.IEquatable<EncoderSystemPresetType>
    {
        private EncoderSystemPresetType(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// Produces an MP4 file where the video is encoded with H.264 codec at
        /// a picture height of 540 pixels, and at a maximum bitrate of 2000
        /// Kbps. Encoded video has the same average frame rate as the input.
        /// The aspect ratio of the input is preserved. If the input content
        /// has audio, then it is encoded with AAC-LC codec at 96 Kbps
        /// </summary>
        public static readonly EncoderSystemPresetType SingleLayer540pH264AAC = "SingleLayer_540p_H264_AAC";

        /// <summary>
        /// Produces an MP4 file where the video is encoded with H.264 codec at
        /// a picture height of 720 pixels, and at a maximum bitrate of 3500
        /// Kbps. Encoded video has the same average frame rate as the input.
        /// The aspect ratio of the input is preserved. If the input content
        /// has audio, then it is encoded with AAC-LC codec at 96 Kbps
        /// </summary>
        public static readonly EncoderSystemPresetType SingleLayer720pH264AAC = "SingleLayer_720p_H264_AAC";

        /// <summary>
        /// Produces an MP4 file where the video is encoded with H.264 codec at
        /// a picture height of 1080 pixels, and at a maximum bitrate of 6000
        /// Kbps. Encoded video has the same average frame rate as the input.
        /// The aspect ratio of the input is preserved. If the input content
        /// has audio, then it is encoded with AAC-LC codec at 128 Kbps
        /// </summary>
        public static readonly EncoderSystemPresetType SingleLayer1080pH264AAC = "SingleLayer_1080p_H264_AAC";

        /// <summary>
        /// Produces an MP4 file where the video is encoded with H.264 codec at
        /// a picture height of 2160 pixels, and at a maximum bitrate of 16000
        /// Kbps. Encoded video has the same average frame rate as the input.
        /// The aspect ratio of the input is preserved. If the input content
        /// has audio, then it is encoded with AAC-LC codec at 128 Kbps
        /// </summary>
        public static readonly EncoderSystemPresetType SingleLayer2160pH264AAC = "SingleLayer_2160p_H264_AAC";


        /// <summary>
        /// Underlying value of enum EncoderSystemPresetType
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for EncoderSystemPresetType
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type EncoderSystemPresetType
        /// </summary>
        public bool Equals(EncoderSystemPresetType e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to EncoderSystemPresetType
        /// </summary>
        public static implicit operator EncoderSystemPresetType(string value)
        {
            return new EncoderSystemPresetType(value);
        }

        /// <summary>
        /// Implicit operator to convert EncoderSystemPresetType to string
        /// </summary>
        public static implicit operator string(EncoderSystemPresetType e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum EncoderSystemPresetType
        /// </summary>
        public static bool operator == (EncoderSystemPresetType e1, EncoderSystemPresetType e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum EncoderSystemPresetType
        /// </summary>
        public static bool operator != (EncoderSystemPresetType e1, EncoderSystemPresetType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for EncoderSystemPresetType
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is EncoderSystemPresetType && Equals((EncoderSystemPresetType)obj);
        }

        /// <summary>
        /// Returns for hashCode EncoderSystemPresetType
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
