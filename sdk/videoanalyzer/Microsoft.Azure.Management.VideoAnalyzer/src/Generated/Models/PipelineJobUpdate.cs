// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Pipeline job represents a unique instance of a batch topology, used for
    /// offline processing of selected portions of archived content.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PipelineJobUpdate : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the PipelineJobUpdate class.
        /// </summary>
        public PipelineJobUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PipelineJobUpdate class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="topologyName">Reference to an existing pipeline
        /// topology. When activated, this pipeline job will process content
        /// according to the pipeline topology definition.</param>
        /// <param name="description">An optional description for the
        /// pipeline.</param>
        /// <param name="state">Current state of the pipeline (read-only).
        /// Possible values include: 'Processing', 'Canceled', 'Completed',
        /// 'Failed'</param>
        /// <param name="expiration">The date-time by when this pipeline job
        /// will be automatically deleted from your account.</param>
        /// <param name="error">Details about the error, in case the pipeline
        /// job fails.</param>
        /// <param name="parameters">List of the instance level parameter
        /// values for the user-defined topology parameters. A pipeline can
        /// only define or override parameters values for parameters which have
        /// been declared in the referenced topology. Topology parameters
        /// without a default value must be defined. Topology parameters with a
        /// default value can be optionally be overridden.</param>
        public PipelineJobUpdate(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string topologyName = default(string), string description = default(string), PipelineJobState state = default(PipelineJobState), System.DateTime expiration = default(System.DateTime), PipelineJobError error = default(PipelineJobError), IList<ParameterDefinition> parameters = default(IList<ParameterDefinition>))
            : base(id, name, type, systemData)
        {
            TopologyName = topologyName;
            Description = description;
            State = state;
            Expiration = expiration;
            Error = error;
            Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets reference to an existing pipeline topology. When
        /// activated, this pipeline job will process content according to the
        /// pipeline topology definition.
        /// </summary>
        [JsonProperty(PropertyName = "properties.topologyName")]
        public string TopologyName { get; set; }

        /// <summary>
        /// Gets or sets an optional description for the pipeline.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets current state of the pipeline (read-only). Possible values
        /// include: 'Processing', 'Canceled', 'Completed', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public PipelineJobState State { get; private set; }

        /// <summary>
        /// Gets the date-time by when this pipeline job will be automatically
        /// deleted from your account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.expiration")]
        public System.DateTime Expiration { get; private set; }

        /// <summary>
        /// Gets details about the error, in case the pipeline job fails.
        /// </summary>
        [JsonProperty(PropertyName = "properties.error")]
        public PipelineJobError Error { get; private set; }

        /// <summary>
        /// Gets or sets list of the instance level parameter values for the
        /// user-defined topology parameters. A pipeline can only define or
        /// override parameters values for parameters which have been declared
        /// in the referenced topology. Topology parameters without a default
        /// value must be defined. Topology parameters with a default value can
        /// be optionally be overridden.
        /// </summary>
        [JsonProperty(PropertyName = "properties.parameters")]
        public IList<ParameterDefinition> Parameters { get; set; }

    }
}
