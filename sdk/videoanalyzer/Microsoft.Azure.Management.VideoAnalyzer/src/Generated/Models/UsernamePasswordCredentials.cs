// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Username and password credentials.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.VideoAnalyzer.UsernamePasswordCredentials")]
    public partial class UsernamePasswordCredentials : CredentialsBase
    {
        /// <summary>
        /// Initializes a new instance of the UsernamePasswordCredentials
        /// class.
        /// </summary>
        public UsernamePasswordCredentials()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UsernamePasswordCredentials
        /// class.
        /// </summary>
        /// <param name="username">Username to be presented as part of the
        /// credentials.</param>
        /// <param name="password">Password to be presented as part of the
        /// credentials. It is recommended that this value is parameterized as
        /// a secret string in order to prevent this value to be returned as
        /// part of the resource on API requests.</param>
        public UsernamePasswordCredentials(string username, string password)
        {
            Username = username;
            Password = password;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets username to be presented as part of the credentials.
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Gets or sets password to be presented as part of the credentials.
        /// It is recommended that this value is parameterized as a secret
        /// string in order to prevent this value to be returned as part of the
        /// resource on API requests.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Username == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Username");
            }
            if (Password == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Password");
            }
        }
    }
}
