// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The input parameters to generate registration token for the Azure Video
    /// Analyzer IoT edge module.
    /// </summary>
    public partial class ListProvisioningTokenInput
    {
        /// <summary>
        /// Initializes a new instance of the ListProvisioningTokenInput class.
        /// </summary>
        public ListProvisioningTokenInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ListProvisioningTokenInput class.
        /// </summary>
        /// <param name="expirationDate">The desired expiration date of the
        /// registration token. The Azure Video Analyzer IoT edge module must
        /// be initialized and connected to the Internet prior to the token
        /// expiration date.</param>
        public ListProvisioningTokenInput(System.DateTime expirationDate)
        {
            ExpirationDate = expirationDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the desired expiration date of the registration token.
        /// The Azure Video Analyzer IoT edge module must be initialized and
        /// connected to the Internet prior to the token expiration date.
        /// </summary>
        [JsonProperty(PropertyName = "expirationDate")]
        public System.DateTime ExpirationDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
