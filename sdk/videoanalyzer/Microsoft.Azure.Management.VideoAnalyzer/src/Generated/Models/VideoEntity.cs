// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The representation of a single video in a Video Analyzer account.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VideoEntity : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the VideoEntity class.
        /// </summary>
        public VideoEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VideoEntity class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="title">Optional video title provided by the user.
        /// Value can be up to 256 characters long.</param>
        /// <param name="description">Optional video description provided by
        /// the user. Value can be up to 2048 characters long.</param>
        /// <param name="videoEntityType">Type of the video archive. Different
        /// archive formats provide different capabilities. Possible values
        /// include: 'Archive'</param>
        /// <param name="flags">Video flags contain information about the
        /// available video actions and its dynamic properties based on the
        /// current video state.</param>
        /// <param name="streaming">Video streaming holds information about
        /// video streaming URLs.</param>
        /// <param name="mediaInfo">Contains information about the video and
        /// audio content.</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource.</param>
        public VideoEntity(string id = default(string), string name = default(string), string type = default(string), string title = default(string), string description = default(string), VideoType videoEntityType = default(VideoType), VideoFlags flags = default(VideoFlags), VideoStreaming streaming = default(VideoStreaming), VideoMediaInfo mediaInfo = default(VideoMediaInfo), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            Title = title;
            Description = description;
            VideoEntityType = videoEntityType;
            Flags = flags;
            Streaming = streaming;
            MediaInfo = mediaInfo;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets optional video title provided by the user. Value can
        /// be up to 256 characters long.
        /// </summary>
        [JsonProperty(PropertyName = "properties.title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets optional video description provided by the user. Value
        /// can be up to 2048 characters long.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets type of the video archive. Different archive formats provide
        /// different capabilities. Possible values include: 'Archive'
        /// </summary>
        [JsonProperty(PropertyName = "properties.type")]
        public VideoType VideoEntityType { get; private set; }

        /// <summary>
        /// Gets video flags contain information about the available video
        /// actions and its dynamic properties based on the current video
        /// state.
        /// </summary>
        [JsonProperty(PropertyName = "properties.flags")]
        public VideoFlags Flags { get; private set; }

        /// <summary>
        /// Gets video streaming holds information about video streaming URLs.
        /// </summary>
        [JsonProperty(PropertyName = "properties.streaming")]
        public VideoStreaming Streaming { get; private set; }

        /// <summary>
        /// Gets contains information about the video and audio content.
        /// </summary>
        [JsonProperty(PropertyName = "properties.mediaInfo")]
        public VideoMediaInfo MediaInfo { get; private set; }

        /// <summary>
        /// Gets the system metadata relating to this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Flags != null)
            {
                Flags.Validate();
            }
        }
    }
}
