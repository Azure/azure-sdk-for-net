// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Used for tracking the status of an operation on the live pipeline.
    /// </summary>
    public partial class LivePipelineOperationStatus
    {
        /// <summary>
        /// Initializes a new instance of the LivePipelineOperationStatus
        /// class.
        /// </summary>
        public LivePipelineOperationStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LivePipelineOperationStatus
        /// class.
        /// </summary>
        /// <param name="name">The name of the live pipeline operation.</param>
        /// <param name="status">The status of the live pipeline
        /// operation.</param>
        /// <param name="error">The error details for the live pipeline
        /// operation.</param>
        public LivePipelineOperationStatus(string name = default(string), string status = default(string), ErrorDetail error = default(ErrorDetail))
        {
            Name = name;
            Status = status;
            Error = error;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the name of the live pipeline operation.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the status of the live pipeline operation.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets the error details for the live pipeline operation.
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ErrorDetail Error { get; private set; }

    }
}
