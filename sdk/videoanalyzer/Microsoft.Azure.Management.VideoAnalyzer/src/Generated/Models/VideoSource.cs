// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.VideoAnalyzer.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Video source allows for content from a Video Analyzer video resource to
    /// be ingested into a pipeline. Currently supported only with batch
    /// pipelines.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.VideoAnalyzer.VideoSource")]
    public partial class VideoSource : SourceNodeBase
    {
        /// <summary>
        /// Initializes a new instance of the VideoSource class.
        /// </summary>
        public VideoSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VideoSource class.
        /// </summary>
        /// <param name="name">Node name. Must be unique within the
        /// topology.</param>
        /// <param name="videoName">Name of the Video Analyzer video resource
        /// to be used as the source.</param>
        /// <param name="timeSequences">Describes a sequence of datetime
        /// ranges. The video source only picks up recorded media within these
        /// ranges.</param>
        public VideoSource(string name, string videoName, TimeSequenceBase timeSequences)
            : base(name)
        {
            VideoName = videoName;
            TimeSequences = timeSequences;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the Video Analyzer video resource to be used
        /// as the source.
        /// </summary>
        [JsonProperty(PropertyName = "videoName")]
        public string VideoName { get; set; }

        /// <summary>
        /// Gets or sets describes a sequence of datetime ranges. The video
        /// source only picks up recorded media within these ranges.
        /// </summary>
        [JsonProperty(PropertyName = "timeSequences")]
        public TimeSequenceBase TimeSequences { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (VideoName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VideoName");
            }
            if (TimeSequences == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TimeSequences");
            }
        }
    }
}
