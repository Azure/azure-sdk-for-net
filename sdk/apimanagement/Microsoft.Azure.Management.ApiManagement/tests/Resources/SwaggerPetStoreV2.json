{
    "x-comment": "This file was extended from /github.com/swagger-api/swagger-spec/blob/master/examples/v2.0/json/petstore-with-external-docs.json",
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Petstore Extensive",
        "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "name": "Wordnik API Team",
            "email": "foo@example.com",
            "url": "http://madskristensen.net"
        },
        "license": {
            "name": "MIT",
            "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
        }
    },
    "externalDocs": {
        "description": "find more info here",
        "url": "https://helloreverb.com/about"
    },
    "host": "petstore.swagger.wordnik.com",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/mySamplePath?willbeignored={willbeignored}": {
            "post": {
                "description": "Dummy desc",
                "operationId": "dummyid1",
                "parameters": [
                    {
                        "name": "dummyDateHeaderParam",
                        "in": "header",
                        "description": "dummyDateHeaderParam description",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "dummyReqQueryParam",
                        "in": "query",
                        "description": "dummyReqQueryParam description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dummyNotReqQueryParam",
                        "in": "query",
                        "description": "dummyNotReqQueryParam description",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dummyBodyParam",
                        "in": "body",
                        "description": "dummyBodyParam description",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/pet",
                            "example": {
                                "id": 2,
                                "name": "myreqpet"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pet"
                            }
                        },
                        "headers": {
                            "header1": {
                                "description": "sampleheader",
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "id": 3,
                                "name": "myresppet" 
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/resourceWithFormData": {
            "post": {
                "description": "resourceWithFormData desc",
                "operationId": "resourceWithFormDataPOST",
                "consumes": [ "multipart/form-data" ],
                "parameters": [
                    {
                        "name": "dummyFormDataParam",
                        "in": "formData",
                        "description": "dummyFormDataParam description",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dummyReqQueryParam",
                        "in": "query",
                        "description": "dummyReqQueryParam description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sample response"
                    }
                }
            }
        },
        "/mySamplePath2?definedQueryParam={definedQueryParam}": {
            "post": {
                "produces": [
                    "contenttype1",
                    "application/xml"
                ],
                "description": "Dummy desc",
                "operationId": "dummyid2",
                "parameters": [
                    {
                        "$ref": "#/parameters/dummyQueryParameterDef"
                    },
                    {
                        "$ref": "#/parameters/dummyBodyParameterDef"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/responses/dummyResponseDef"
                    }
                }
            }
        },
        "/pets2?dummyParam={dummyParam}": {
            "get": {
                "description": "Dummy description",
                "operationId": "dummyOperationId",
                "parameters": [
                    {
                        "name": "dummyParam",
                        "in": "query",
                        "description": "dummyParam desc",
                        "required": true,
                        "type": "string",
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/pets": {
            "get": {
                "description": "Returns all pets from the system that the user has access to",
                "operationId": "findPets",
                "externalDocs": {
                    "description": "find more info here",
                    "url": "https://helloreverb.com/about"
                },
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "consumes": [
                    "text/xml",
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "tags to filter by",
                        "required": false,
                        "type": "string",
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pet"
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new pet in the store.  Duplicates are allowed",
                "operationId": "addPet",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pet",
                        "in": "body",
                        "description": "Pet to add to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newPet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "$ref": "#/definitions/pet"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/pets/{id}": {
            "get": {
                "description": "Returns a user based on a single ID, if the user does not have access to the pet",
                "operationId": "findPetById",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/xml",
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of pet to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "$ref": "#/definitions/pet"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a single pet based on the ID supplied",
                "operationId": "deletePet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of pet to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "pet deleted"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pet": {
            "required": [
                "id",
                "name"
            ],
            "externalDocs": {
                "description": "find more info here",
                "url": "https://helloreverb.com/about"
            },
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "newPet": {
            "allOf": [
                {
                    "$ref": "#/definitions/pet"
                },
                {
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            ]
        },
        "errorModel": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "dummyBodyParameterDef": {
            "name": "definedBodyParam",
            "in": "body",
            "description": "definedBodyParam description",
            "required": true,
            "schema": {
                "title": "Example Schema",
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "age": {
                        "description": "Age in years",
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [ "firstName", "lastName" ]
            }
        },
        "dummyQueryParameterDef": {
            "name": "definedQueryParam",
            "in": "query",
            "description": "definedQueryParam description",
            "required": true,
            "type": "string",
            "format": "whateverformat"
        }
    },
    "responses": {
        "dummyResponseDef": {
            "description": "dummyResponseDef description",
            "schema": {
                "$ref":  "#/definitions/pet"
            },
            "headers": {
                "header1": {
                    "type": "integer"
                },
                "header2": {
                    "type": "integer"
                }
            },
            "examples": {
                "contenttype1": "contenttype1 example",
                "contenttype2": "contenttype2 example"
            }
        }
    }
}

