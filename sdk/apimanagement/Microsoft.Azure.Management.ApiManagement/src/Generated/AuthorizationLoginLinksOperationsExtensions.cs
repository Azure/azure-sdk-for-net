// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for AuthorizationLoginLinksOperations.
    /// </summary>
    public static partial class AuthorizationLoginLinksOperationsExtensions
    {
            /// <summary>
            /// Gets authorization login links.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='authorizationProviderId'>
            /// Identifier of the authorization provider.
            /// </param>
            /// <param name='authorizationId'>
            /// Identifier of the authorization.
            /// </param>
            /// <param name='parameters'>
            /// Create parameters.
            /// </param>
            public static AuthorizationLoginResponseContract Post(this IAuthorizationLoginLinksOperations operations, string resourceGroupName, string serviceName, string authorizationProviderId, string authorizationId, AuthorizationLoginRequestContract parameters)
            {
                return operations.PostAsync(resourceGroupName, serviceName, authorizationProviderId, authorizationId, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets authorization login links.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='authorizationProviderId'>
            /// Identifier of the authorization provider.
            /// </param>
            /// <param name='authorizationId'>
            /// Identifier of the authorization.
            /// </param>
            /// <param name='parameters'>
            /// Create parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AuthorizationLoginResponseContract> PostAsync(this IAuthorizationLoginLinksOperations operations, string resourceGroupName, string serviceName, string authorizationProviderId, string authorizationId, AuthorizationLoginRequestContract parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostWithHttpMessagesAsync(resourceGroupName, serviceName, authorizationProviderId, authorizationId, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
