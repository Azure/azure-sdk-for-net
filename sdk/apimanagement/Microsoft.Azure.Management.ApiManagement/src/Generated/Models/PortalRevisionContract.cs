// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Portal Revision's contract details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PortalRevisionContract : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the PortalRevisionContract class.
        /// </summary>
        public PortalRevisionContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PortalRevisionContract class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="description">Portal revision description.</param>
        /// <param name="statusDetails">Portal revision publishing status
        /// details.</param>
        /// <param name="status">Status of the portal's revision. Possible
        /// values include: 'pending', 'publishing', 'completed',
        /// 'failed'</param>
        /// <param name="isCurrent">Indicates if the portal's revision is
        /// public.</param>
        /// <param name="createdDateTime">Portal's revision creation date and
        /// time.</param>
        /// <param name="updatedDateTime">Last updated date and time.</param>
        public PortalRevisionContract(string id = default(string), string name = default(string), string type = default(string), string description = default(string), string statusDetails = default(string), string status = default(string), bool? isCurrent = default(bool?), System.DateTime? createdDateTime = default(System.DateTime?), System.DateTime? updatedDateTime = default(System.DateTime?))
            : base(id, name, type)
        {
            Description = description;
            StatusDetails = statusDetails;
            Status = status;
            IsCurrent = isCurrent;
            CreatedDateTime = createdDateTime;
            UpdatedDateTime = updatedDateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets portal revision description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets portal revision publishing status details.
        /// </summary>
        [JsonProperty(PropertyName = "properties.statusDetails")]
        public string StatusDetails { get; private set; }

        /// <summary>
        /// Gets status of the portal's revision. Possible values include:
        /// 'pending', 'publishing', 'completed', 'failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets or sets indicates if the portal's revision is public.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isCurrent")]
        public bool? IsCurrent { get; set; }

        /// <summary>
        /// Gets portal's revision creation date and time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdDateTime")]
        public System.DateTime? CreatedDateTime { get; private set; }

        /// <summary>
        /// Gets last updated date and time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.updatedDateTime")]
        public System.DateTime? UpdatedDateTime { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Description != null)
            {
                if (Description.Length > 2000)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Description", 2000);
                }
            }
            if (StatusDetails != null)
            {
                if (StatusDetails.Length > 2000)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "StatusDetails", 2000);
                }
            }
        }
    }
}
