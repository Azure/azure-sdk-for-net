// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for SubscriptionState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SubscriptionState
    {
        [EnumMember(Value = "suspended")]
        Suspended,
        [EnumMember(Value = "active")]
        Active,
        [EnumMember(Value = "expired")]
        Expired,
        [EnumMember(Value = "submitted")]
        Submitted,
        [EnumMember(Value = "rejected")]
        Rejected,
        [EnumMember(Value = "cancelled")]
        Cancelled
    }
    internal static class SubscriptionStateEnumExtension
    {
        internal static string ToSerializedValue(this SubscriptionState? value)
        {
            return value == null ? null : ((SubscriptionState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this SubscriptionState value)
        {
            switch( value )
            {
                case SubscriptionState.Suspended:
                    return "suspended";
                case SubscriptionState.Active:
                    return "active";
                case SubscriptionState.Expired:
                    return "expired";
                case SubscriptionState.Submitted:
                    return "submitted";
                case SubscriptionState.Rejected:
                    return "rejected";
                case SubscriptionState.Cancelled:
                    return "cancelled";
            }
            return null;
        }

        internal static SubscriptionState? ParseSubscriptionState(this string value)
        {
            switch( value )
            {
                case "suspended":
                    return SubscriptionState.Suspended;
                case "active":
                    return SubscriptionState.Active;
                case "expired":
                    return SubscriptionState.Expired;
                case "submitted":
                    return SubscriptionState.Submitted;
                case "rejected":
                    return SubscriptionState.Rejected;
                case "cancelled":
                    return SubscriptionState.Cancelled;
            }
            return null;
        }
    }
}
