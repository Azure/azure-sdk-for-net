// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The developer portal configuration contract.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PortalConfigContract : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the PortalConfigContract class.
        /// </summary>
        public PortalConfigContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PortalConfigContract class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="enableBasicAuth">Enable or disable Basic
        /// authentication method.</param>
        /// <param name="delegation">The developer portal delegation
        /// settings.</param>
        /// <param name="cors">The developer portal Cross-Origin Resource
        /// Sharing (CORS) settings.</param>
        /// <param name="csp">The developer portal Content Security Policy
        /// (CSP) settings.</param>
        public PortalConfigContract(string id = default(string), string name = default(string), string type = default(string), bool? enableBasicAuth = default(bool?), PortalConfigPropertiesSignin signin = default(PortalConfigPropertiesSignin), PortalConfigPropertiesSignup signup = default(PortalConfigPropertiesSignup), PortalConfigDelegationProperties delegation = default(PortalConfigDelegationProperties), PortalConfigCorsProperties cors = default(PortalConfigCorsProperties), PortalConfigCspProperties csp = default(PortalConfigCspProperties))
            : base(id, name, type)
        {
            EnableBasicAuth = enableBasicAuth;
            Signin = signin;
            Signup = signup;
            Delegation = delegation;
            Cors = cors;
            Csp = csp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets enable or disable Basic authentication method.
        /// </summary>
        [JsonProperty(PropertyName = "properties.enableBasicAuth")]
        public bool? EnableBasicAuth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.signin")]
        public PortalConfigPropertiesSignin Signin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.signup")]
        public PortalConfigPropertiesSignup Signup { get; set; }

        /// <summary>
        /// Gets or sets the developer portal delegation settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.delegation")]
        public PortalConfigDelegationProperties Delegation { get; set; }

        /// <summary>
        /// Gets or sets the developer portal Cross-Origin Resource Sharing
        /// (CORS) settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.cors")]
        public PortalConfigCorsProperties Cors { get; set; }

        /// <summary>
        /// Gets or sets the developer portal Content Security Policy (CSP)
        /// settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.csp")]
        public PortalConfigCspProperties Csp { get; set; }

    }
}
