// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Deploy Tenant Configuration Contract.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DeployConfigurationParameters
    {
        /// <summary>
        /// Initializes a new instance of the DeployConfigurationParameters
        /// class.
        /// </summary>
        public DeployConfigurationParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeployConfigurationParameters
        /// class.
        /// </summary>
        /// <param name="branch">The name of the Git branch from which the
        /// configuration is to be deployed to the configuration
        /// database.</param>
        /// <param name="force">The value enforcing deleting subscriptions to
        /// products that are deleted in this update.</param>
        public DeployConfigurationParameters(string branch, bool? force = default(bool?))
        {
            Branch = branch;
            Force = force;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the Git branch from which the
        /// configuration is to be deployed to the configuration database.
        /// </summary>
        [JsonProperty(PropertyName = "properties.branch")]
        public string Branch { get; set; }

        /// <summary>
        /// Gets or sets the value enforcing deleting subscriptions to products
        /// that are deleted in this update.
        /// </summary>
        [JsonProperty(PropertyName = "properties.force")]
        public bool? Force { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Branch == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Branch");
            }
        }
    }
}
