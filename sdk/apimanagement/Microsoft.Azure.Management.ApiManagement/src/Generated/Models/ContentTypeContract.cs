// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Content type contract details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ContentTypeContract : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ContentTypeContract class.
        /// </summary>
        public ContentTypeContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContentTypeContract class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type for API Management
        /// resource.</param>
        /// <param name="contentTypeContractId">Content type identifier</param>
        /// <param name="contentTypeContractName">Content type name. Must be 1
        /// to 250 characters long.</param>
        /// <param name="description">Content type description.</param>
        /// <param name="schema">Content type schema.</param>
        /// <param name="version">Content type version.</param>
        public ContentTypeContract(string id = default(string), string name = default(string), string type = default(string), string contentTypeContractId = default(string), string contentTypeContractName = default(string), string description = default(string), object schema = default(object), string version = default(string))
            : base(id, name, type)
        {
            ContentTypeContractId = contentTypeContractId;
            ContentTypeContractName = contentTypeContractName;
            Description = description;
            Schema = schema;
            Version = version;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets content type identifier
        /// </summary>
        [JsonProperty(PropertyName = "properties.id")]
        public string ContentTypeContractId { get; set; }

        /// <summary>
        /// Gets or sets content type name. Must be 1 to 250 characters long.
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string ContentTypeContractName { get; set; }

        /// <summary>
        /// Gets or sets content type description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets content type schema.
        /// </summary>
        [JsonProperty(PropertyName = "properties.schema")]
        public object Schema { get; set; }

        /// <summary>
        /// Gets or sets content type version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

    }
}
