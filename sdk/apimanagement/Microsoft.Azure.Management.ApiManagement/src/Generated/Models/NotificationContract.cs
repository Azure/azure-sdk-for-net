// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Notification details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NotificationContract : Resource
    {
        /// <summary>
        /// Initializes a new instance of the NotificationContract class.
        /// </summary>
        public NotificationContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotificationContract class.
        /// </summary>
        /// <param name="title">Title of the Notification.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type for API Management
        /// resource.</param>
        /// <param name="description">Description of the Notification.</param>
        /// <param name="recipients">Recipient Parameter values.</param>
        public NotificationContract(string title, string id = default(string), string name = default(string), string type = default(string), string description = default(string), RecipientsContractProperties recipients = default(RecipientsContractProperties))
            : base(id, name, type)
        {
            Title = title;
            Description = description;
            Recipients = recipients;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets title of the Notification.
        /// </summary>
        [JsonProperty(PropertyName = "properties.title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets description of the Notification.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets recipient Parameter values.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recipients")]
        public RecipientsContractProperties Recipients { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
        }
    }
}
