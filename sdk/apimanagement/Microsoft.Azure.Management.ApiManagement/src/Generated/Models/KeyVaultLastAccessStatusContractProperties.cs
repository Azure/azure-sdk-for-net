// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Issue contract Update Properties.
    /// </summary>
    public partial class KeyVaultLastAccessStatusContractProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// KeyVaultLastAccessStatusContractProperties class.
        /// </summary>
        public KeyVaultLastAccessStatusContractProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// KeyVaultLastAccessStatusContractProperties class.
        /// </summary>
        /// <param name="code">Last status code for sync and refresh of secret
        /// from key vault.</param>
        /// <param name="message">Details of the error else empty.</param>
        /// <param name="timeStampUtc">Last time secret was accessed. The date
        /// conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as
        /// specified by the ISO 8601 standard.
        /// </param>
        public KeyVaultLastAccessStatusContractProperties(string code = default(string), string message = default(string), System.DateTime? timeStampUtc = default(System.DateTime?))
        {
            Code = code;
            Message = message;
            TimeStampUtc = timeStampUtc;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets last status code for sync and refresh of secret from
        /// key vault.
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets details of the error else empty.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets last time secret was accessed. The date conforms to
        /// the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the
        /// ISO 8601 standard.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "timeStampUtc")]
        public System.DateTime? TimeStampUtc { get; set; }

    }
}
