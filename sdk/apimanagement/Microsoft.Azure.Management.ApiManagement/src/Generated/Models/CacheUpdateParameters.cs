// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Cache update details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CacheUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the CacheUpdateParameters class.
        /// </summary>
        public CacheUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CacheUpdateParameters class.
        /// </summary>
        /// <param name="description">Cache description</param>
        /// <param name="connectionString">Runtime connection string to
        /// cache</param>
        /// <param name="resourceId">Original uri of entity in external system
        /// cache points to</param>
        public CacheUpdateParameters(string description = default(string), string connectionString = default(string), string resourceId = default(string))
        {
            Description = description;
            ConnectionString = connectionString;
            ResourceId = resourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets cache description
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets runtime connection string to cache
        /// </summary>
        [JsonProperty(PropertyName = "properties.connectionString")]
        public string ConnectionString { get; set; }

        /// <summary>
        /// Gets or sets original uri of entity in external system cache points
        /// to
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceId")]
        public string ResourceId { get; set; }

    }
}
