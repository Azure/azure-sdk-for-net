// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes metadata for retrieving price info.
    /// </summary>
    public partial class ApiManagementSkuCosts
    {
        /// <summary>
        /// Initializes a new instance of the ApiManagementSkuCosts class.
        /// </summary>
        public ApiManagementSkuCosts()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiManagementSkuCosts class.
        /// </summary>
        /// <param name="meterID">Used for querying price from
        /// commerce.</param>
        /// <param name="quantity">The multiplier is needed to extend the base
        /// metered cost.</param>
        /// <param name="extendedUnit">An invariant to show the extended
        /// unit.</param>
        public ApiManagementSkuCosts(string meterID = default(string), long? quantity = default(long?), string extendedUnit = default(string))
        {
            MeterID = meterID;
            Quantity = quantity;
            ExtendedUnit = extendedUnit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets used for querying price from commerce.
        /// </summary>
        [JsonProperty(PropertyName = "meterID")]
        public string MeterID { get; private set; }

        /// <summary>
        /// Gets the multiplier is needed to extend the base metered cost.
        /// </summary>
        [JsonProperty(PropertyName = "quantity")]
        public long? Quantity { get; private set; }

        /// <summary>
        /// Gets an invariant to show the extended unit.
        /// </summary>
        [JsonProperty(PropertyName = "extendedUnit")]
        public string ExtendedUnit { get; private set; }

    }
}
