// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Region profile.
    /// </summary>
    public partial class RegionContract
    {
        /// <summary>
        /// Initializes a new instance of the RegionContract class.
        /// </summary>
        public RegionContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RegionContract class.
        /// </summary>
        /// <param name="name">Region name.</param>
        /// <param name="isMasterRegion">whether Region is the master
        /// region.</param>
        /// <param name="isDeleted">whether Region is deleted.</param>
        public RegionContract(string name = default(string), bool? isMasterRegion = default(bool?), bool? isDeleted = default(bool?))
        {
            Name = name;
            IsMasterRegion = isMasterRegion;
            IsDeleted = isDeleted;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets region name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets whether Region is the master region.
        /// </summary>
        [JsonProperty(PropertyName = "isMasterRegion")]
        public bool? IsMasterRegion { get; set; }

        /// <summary>
        /// Gets or sets whether Region is deleted.
        /// </summary>
        [JsonProperty(PropertyName = "isDeleted")]
        public bool? IsDeleted { get; set; }

    }
}
