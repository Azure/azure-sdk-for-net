// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// QuotaByCounterKeysOperations operations.
    /// </summary>
    public partial interface IQuotaByCounterKeysOperations
    {
        /// <summary>
        /// Lists a collection of current quota counter periods associated with
        /// the counter-key configured in the policy on the specified service
        /// instance. The api does not support paging yet.
        /// <see href="https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies" />
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='quotaCounterKey'>
        /// Quota counter key identifier.This is the result of expression
        /// defined in counter-key attribute of the quota-by-key policy.For
        /// Example, if you specify counter-key="boo" in the policy, then it’s
        /// accessible by "boo" counter key. But if it’s defined as
        /// counter-key="@("b"+"a")" then it will be accessible by "ba" key
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<QuotaCounterCollection>> ListByServiceWithHttpMessagesAsync(string resourceGroupName, string serviceName, string quotaCounterKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates all the quota counter values specified with the existing
        /// quota counter key to a value in the specified service instance.
        /// This should be used for reset of the quota counter values.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='quotaCounterKey'>
        /// Quota counter key identifier.This is the result of expression
        /// defined in counter-key attribute of the quota-by-key policy.For
        /// Example, if you specify counter-key="boo" in the policy, then it’s
        /// accessible by "boo" counter key. But if it’s defined as
        /// counter-key="@("b"+"a")" then it will be accessible by "ba" key
        /// </param>
        /// <param name='parameters'>
        /// The value of the quota counter to be applied to all quota counter
        /// periods.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<QuotaCounterCollection>> UpdateWithHttpMessagesAsync(string resourceGroupName, string serviceName, string quotaCounterKey, QuotaCounterValueUpdateContract parameters, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
