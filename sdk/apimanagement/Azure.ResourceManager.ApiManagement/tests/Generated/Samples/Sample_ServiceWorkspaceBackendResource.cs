// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ApiManagement.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ApiManagement.Samples
{
    public partial class Sample_ServiceWorkspaceBackendResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ApiManagementGetWorkspaceBackend()
        {
            // Generated from example definition: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2024-05-01/examples/ApiManagementGetWorkspaceBackend.json
            // this example is just showing the usage of "WorkspaceBackend_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServiceWorkspaceBackendResource created on azure
            // for more information of creating ServiceWorkspaceBackendResource, please refer to the document of ServiceWorkspaceBackendResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string serviceName = "apimService1";
            string workspaceId = "wks1";
            string backendId = "sfbackend";
            ResourceIdentifier serviceWorkspaceBackendResourceId = ServiceWorkspaceBackendResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, workspaceId, backendId);
            ServiceWorkspaceBackendResource serviceWorkspaceBackend = client.GetServiceWorkspaceBackendResource(serviceWorkspaceBackendResourceId);

            // invoke the operation
            ServiceWorkspaceBackendResource result = await serviceWorkspaceBackend.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ApiManagementBackendData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ApiManagementDeleteWorkspaceBackend()
        {
            // Generated from example definition: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2024-05-01/examples/ApiManagementDeleteWorkspaceBackend.json
            // this example is just showing the usage of "WorkspaceBackend_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServiceWorkspaceBackendResource created on azure
            // for more information of creating ServiceWorkspaceBackendResource, please refer to the document of ServiceWorkspaceBackendResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string serviceName = "apimService1";
            string workspaceId = "wks1";
            string backendId = "sfbackend";
            ResourceIdentifier serviceWorkspaceBackendResourceId = ServiceWorkspaceBackendResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, workspaceId, backendId);
            ServiceWorkspaceBackendResource serviceWorkspaceBackend = client.GetServiceWorkspaceBackendResource(serviceWorkspaceBackendResourceId);

            // invoke the operation
            ETag ifMatch = new ETag("*");
            await serviceWorkspaceBackend.DeleteAsync(WaitUntil.Completed, ifMatch);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ApiManagementUpdateWorkspaceBackend()
        {
            // Generated from example definition: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2024-05-01/examples/ApiManagementUpdateWorkspaceBackend.json
            // this example is just showing the usage of "WorkspaceBackend_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServiceWorkspaceBackendResource created on azure
            // for more information of creating ServiceWorkspaceBackendResource, please refer to the document of ServiceWorkspaceBackendResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string serviceName = "apimService1";
            string workspaceId = "wks1";
            string backendId = "proxybackend";
            ResourceIdentifier serviceWorkspaceBackendResourceId = ServiceWorkspaceBackendResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, workspaceId, backendId);
            ServiceWorkspaceBackendResource serviceWorkspaceBackend = client.GetServiceWorkspaceBackendResource(serviceWorkspaceBackendResourceId);

            // invoke the operation
            ETag ifMatch = new ETag("*");
            ApiManagementBackendPatch patch = new ApiManagementBackendPatch
            {
                Description = "description5308",
                Tls = new BackendTlsProperties
                {
                    ShouldValidateCertificateChain = false,
                    ShouldValidateCertificateName = true,
                },
            };
            ServiceWorkspaceBackendResource result = await serviceWorkspaceBackend.UpdateAsync(ifMatch, patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ApiManagementBackendData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetEntityTag_ApiManagementHeadWorkspaceBackend()
        {
            // Generated from example definition: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2024-05-01/examples/ApiManagementHeadWorkspaceBackend.json
            // this example is just showing the usage of "WorkspaceBackend_GetEntityTag" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServiceWorkspaceBackendResource created on azure
            // for more information of creating ServiceWorkspaceBackendResource, please refer to the document of ServiceWorkspaceBackendResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string serviceName = "apimService1";
            string workspaceId = "wks1";
            string backendId = "sfbackend";
            ResourceIdentifier serviceWorkspaceBackendResourceId = ServiceWorkspaceBackendResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serviceName, workspaceId, backendId);
            ServiceWorkspaceBackendResource serviceWorkspaceBackend = client.GetServiceWorkspaceBackendResource(serviceWorkspaceBackendResourceId);

            // invoke the operation
            bool result = await serviceWorkspaceBackend.GetEntityTagAsync();

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
