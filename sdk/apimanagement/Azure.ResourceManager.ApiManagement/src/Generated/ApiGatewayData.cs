// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ApiManagement.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ApiManagement
{
    /// <summary>
    /// A class representing the ApiGateway data model.
    /// A single API Management gateway resource in List or Get response.
    /// </summary>
    public partial class ApiGatewayData : TrackedResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ApiGatewayData"/>. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="sku"> SKU properties of the API Management gateway. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sku"/> is null. </exception>
        public ApiGatewayData(AzureLocation location, ApiManagementGatewaySkuProperties sku) : base(location)
        {
            Argument.AssertNotNull(sku, nameof(sku));

            Sku = sku;
        }

        /// <summary> Initializes a new instance of <see cref="ApiGatewayData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="sku"> SKU properties of the API Management gateway. </param>
        /// <param name="etag"> ETag of the resource. </param>
        /// <param name="provisioningState"> The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted. </param>
        /// <param name="targetProvisioningState"> The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway. </param>
        /// <param name="createdAtUtc"> Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. </param>
        /// <param name="frontend"> Information regarding how the gateway should be exposed. </param>
        /// <param name="backend"> Information regarding how the gateway should integrate with backend systems. </param>
        /// <param name="configurationApi"> Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU. </param>
        /// <param name="virtualNetworkType"> The type of VPN in which API Management gateway needs to be configured in. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ApiGatewayData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ApiManagementGatewaySkuProperties sku, ETag? etag, string provisioningState, string targetProvisioningState, DateTimeOffset? createdAtUtc, FrontendConfiguration frontend, BackendConfiguration backend, GatewayConfigurationApi configurationApi, VirtualNetworkType? virtualNetworkType, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData, tags, location)
        {
            Sku = sku;
            ETag = etag;
            ProvisioningState = provisioningState;
            TargetProvisioningState = targetProvisioningState;
            CreatedAtUtc = createdAtUtc;
            Frontend = frontend;
            Backend = backend;
            ConfigurationApi = configurationApi;
            VirtualNetworkType = virtualNetworkType;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ApiGatewayData"/> for deserialization. </summary>
        internal ApiGatewayData()
        {
        }

        /// <summary> SKU properties of the API Management gateway. </summary>
        [WirePath("sku")]
        public ApiManagementGatewaySkuProperties Sku { get; set; }
        /// <summary> ETag of the resource. </summary>
        [WirePath("etag")]
        public ETag? ETag { get; }
        /// <summary> The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted. </summary>
        [WirePath("properties.provisioningState")]
        public string ProvisioningState { get; }
        /// <summary> The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway. </summary>
        [WirePath("properties.targetProvisioningState")]
        public string TargetProvisioningState { get; }
        /// <summary> Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. </summary>
        [WirePath("properties.createdAtUtc")]
        public DateTimeOffset? CreatedAtUtc { get; }
        /// <summary> Information regarding how the gateway should be exposed. </summary>
        internal FrontendConfiguration Frontend { get; set; }
        /// <summary> The default hostname of the data-plane gateway to which requests can be sent. This is only applicable for API gateway with Standard SKU. </summary>
        [WirePath("properties.frontend.defaultHostname")]
        public string FrontendDefaultHostname
        {
            get => Frontend is null ? default : Frontend.DefaultHostname;
        }

        /// <summary> Information regarding how the gateway should integrate with backend systems. </summary>
        internal BackendConfiguration Backend { get; set; }
        /// <summary> Gets or sets Id. </summary>
        [WirePath("properties.backend.subnet.id")]
        public ResourceIdentifier SubnetId
        {
            get => Backend is null ? default : Backend.SubnetId;
            set
            {
                if (Backend is null)
                    Backend = new BackendConfiguration();
                Backend.SubnetId = value;
            }
        }

        /// <summary> Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU. </summary>
        internal GatewayConfigurationApi ConfigurationApi { get; set; }
        /// <summary> Hostname to which the agent connects to propagate configuration to the cloud. </summary>
        [WirePath("properties.configurationApi.hostname")]
        public string ConfigurationApiHostname
        {
            get => ConfigurationApi is null ? default : ConfigurationApi.Hostname;
        }

        /// <summary> The type of VPN in which API Management gateway needs to be configured in. </summary>
        [WirePath("properties.virtualNetworkType")]
        public VirtualNetworkType? VirtualNetworkType { get; set; }
    }
}
