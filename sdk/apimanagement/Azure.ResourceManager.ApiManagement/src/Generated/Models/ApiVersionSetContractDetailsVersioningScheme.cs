// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ApiManagement.Models
{
    /// <summary> An value that determines where the API Version identifier will be located in a HTTP request. </summary>
    public readonly partial struct ApiVersionSetContractDetailsVersioningScheme : IEquatable<ApiVersionSetContractDetailsVersioningScheme>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ApiVersionSetContractDetailsVersioningScheme"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ApiVersionSetContractDetailsVersioningScheme(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SegmentValue = "Segment";
        private const string QueryValue = "Query";
        private const string HeaderValue = "Header";

        /// <summary> Segment. </summary>
        public static ApiVersionSetContractDetailsVersioningScheme Segment { get; } = new ApiVersionSetContractDetailsVersioningScheme(SegmentValue);
        /// <summary> Query. </summary>
        public static ApiVersionSetContractDetailsVersioningScheme Query { get; } = new ApiVersionSetContractDetailsVersioningScheme(QueryValue);
        /// <summary> Header. </summary>
        public static ApiVersionSetContractDetailsVersioningScheme Header { get; } = new ApiVersionSetContractDetailsVersioningScheme(HeaderValue);
        /// <summary> Determines if two <see cref="ApiVersionSetContractDetailsVersioningScheme"/> values are the same. </summary>
        public static bool operator ==(ApiVersionSetContractDetailsVersioningScheme left, ApiVersionSetContractDetailsVersioningScheme right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ApiVersionSetContractDetailsVersioningScheme"/> values are not the same. </summary>
        public static bool operator !=(ApiVersionSetContractDetailsVersioningScheme left, ApiVersionSetContractDetailsVersioningScheme right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ApiVersionSetContractDetailsVersioningScheme"/>. </summary>
        public static implicit operator ApiVersionSetContractDetailsVersioningScheme(string value) => new ApiVersionSetContractDetailsVersioningScheme(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ApiVersionSetContractDetailsVersioningScheme other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ApiVersionSetContractDetailsVersioningScheme other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
