// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ApiManagement;

namespace Azure.ResourceManager.ApiManagement.Models
{
    /// <summary> The response of the list schema operation. </summary>
    internal partial class GlobalSchemaListResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="GlobalSchemaListResult"/>. </summary>
        internal GlobalSchemaListResult()
        {
            Value = new ChangeTrackingList<ApiManagementGlobalSchemaData>();
        }

        /// <summary> Initializes a new instance of <see cref="GlobalSchemaListResult"/>. </summary>
        /// <param name="value"> Global Schema Contract value. </param>
        /// <param name="count"> Total record count number. </param>
        /// <param name="nextLink"> Next page link if any. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal GlobalSchemaListResult(IReadOnlyList<ApiManagementGlobalSchemaData> value, long? count, string nextLink, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Value = value;
            Count = count;
            NextLink = nextLink;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Global Schema Contract value. </summary>
        public IReadOnlyList<ApiManagementGlobalSchemaData> Value { get; }
        /// <summary> Total record count number. </summary>
        public long? Count { get; }
        /// <summary> Next page link if any. </summary>
        public string NextLink { get; }
    }
}
