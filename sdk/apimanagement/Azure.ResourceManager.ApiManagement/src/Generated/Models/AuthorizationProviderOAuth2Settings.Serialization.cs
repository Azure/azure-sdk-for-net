// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    public partial class AuthorizationProviderOAuth2Settings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RedirectUri))
            {
                writer.WritePropertyName("redirectUrl"u8);
                writer.WriteStringValue(RedirectUri.AbsoluteUri);
            }
            if (Optional.IsDefined(GrantTypes))
            {
                writer.WritePropertyName("grantTypes"u8);
                writer.WriteObjectValue(GrantTypes);
            }
            writer.WriteEndObject();
        }

        internal static AuthorizationProviderOAuth2Settings DeserializeAuthorizationProviderOAuth2Settings(JsonElement element)
        {
            Optional<Uri> redirectUri = default;
            Optional<AuthorizationProviderOAuth2GrantTypes> grantTypes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("redirectUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        redirectUri = null;
                        continue;
                    }
                    redirectUri = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("grantTypes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    grantTypes = AuthorizationProviderOAuth2GrantTypes.DeserializeAuthorizationProviderOAuth2GrantTypes(property.Value);
                    continue;
                }
            }
            return new AuthorizationProviderOAuth2Settings(redirectUri.Value, grantTypes.Value);
        }
    }
}
