// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ApiManagement.Models
{
    /// <summary> Form of an authorization grant, which the client uses to request the access token. </summary>
    public readonly partial struct BearerTokenSendingMethods : IEquatable<BearerTokenSendingMethods>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="BearerTokenSendingMethods"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public BearerTokenSendingMethods(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AuthorizationHeaderValue = "authorizationHeader";
        private const string QueryValue = "query";

        /// <summary> Access token will be transmitted in the Authorization header using Bearer schema. </summary>
        public static BearerTokenSendingMethods AuthorizationHeader { get; } = new BearerTokenSendingMethods(AuthorizationHeaderValue);
        /// <summary> Access token will be transmitted as query parameters. </summary>
        public static BearerTokenSendingMethods Query { get; } = new BearerTokenSendingMethods(QueryValue);
        /// <summary> Determines if two <see cref="BearerTokenSendingMethods"/> values are the same. </summary>
        public static bool operator ==(BearerTokenSendingMethods left, BearerTokenSendingMethods right) => left.Equals(right);
        /// <summary> Determines if two <see cref="BearerTokenSendingMethods"/> values are not the same. </summary>
        public static bool operator !=(BearerTokenSendingMethods left, BearerTokenSendingMethods right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="BearerTokenSendingMethods"/>. </summary>
        public static implicit operator BearerTokenSendingMethods(string value) => new BearerTokenSendingMethods(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is BearerTokenSendingMethods other && Equals(other);
        /// <inheritdoc />
        public bool Equals(BearerTokenSendingMethods other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
