// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    public partial class BackendProperties : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ServiceFabricCluster))
            {
                writer.WritePropertyName("serviceFabricCluster");
                writer.WriteObjectValue(ServiceFabricCluster);
            }
            writer.WriteEndObject();
        }

        internal static BackendProperties DeserializeBackendProperties(JsonElement element)
        {
            Optional<BackendServiceFabricClusterProperties> serviceFabricCluster = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("serviceFabricCluster"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    serviceFabricCluster = BackendServiceFabricClusterProperties.DeserializeBackendServiceFabricClusterProperties(property.Value);
                    continue;
                }
            }
            return new BackendProperties(serviceFabricCluster.Value);
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "BackendProperties");
            if (Optional.IsDefined(ServiceFabricCluster))
            {
                writer.WriteObjectValue(ServiceFabricCluster, "serviceFabricCluster");
            }
            writer.WriteEndElement();
        }

        internal static BackendProperties DeserializeBackendProperties(XElement element)
        {
            BackendServiceFabricClusterProperties serviceFabricCluster = default;
            if (element.Element("serviceFabricCluster") is XElement serviceFabricClusterElement)
            {
                serviceFabricCluster = BackendServiceFabricClusterProperties.DeserializeBackendServiceFabricClusterProperties(serviceFabricClusterElement);
            }
            return new BackendProperties(serviceFabricCluster);
        }
    }
}
