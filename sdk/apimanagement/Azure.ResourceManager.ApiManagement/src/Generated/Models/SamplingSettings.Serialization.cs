// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    public partial class SamplingSettings : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SamplingType))
            {
                writer.WritePropertyName("samplingType");
                writer.WriteStringValue(SamplingType.Value.ToString());
            }
            if (Optional.IsDefined(Percentage))
            {
                writer.WritePropertyName("percentage");
                writer.WriteNumberValue(Percentage.Value);
            }
            writer.WriteEndObject();
        }

        internal static SamplingSettings DeserializeSamplingSettings(JsonElement element)
        {
            Optional<SamplingType> samplingType = default;
            Optional<double> percentage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("samplingType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    samplingType = new SamplingType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("percentage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    percentage = property.Value.GetDouble();
                    continue;
                }
            }
            return new SamplingSettings(Optional.ToNullable(samplingType), Optional.ToNullable(percentage));
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "SamplingSettings");
            if (Optional.IsDefined(SamplingType))
            {
                writer.WriteStartElement("samplingType");
                writer.WriteValue(SamplingType.Value.ToString());
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Percentage))
            {
                writer.WriteStartElement("percentage");
                writer.WriteValue(Percentage.Value);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        internal static SamplingSettings DeserializeSamplingSettings(XElement element)
        {
            SamplingType? samplingType = default;
            double? percentage = default;
            if (element.Element("samplingType") is XElement samplingTypeElement)
            {
                samplingType = new SamplingType(samplingTypeElement.Value);
            }
            if (element.Element("percentage") is XElement percentageElement)
            {
                percentage = (double?)percentageElement;
            }
            return new SamplingSettings(samplingType, percentage);
        }
    }
}
