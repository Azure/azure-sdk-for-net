// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.ResourceManager.ApiManagement.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ApiManagement
{
    public partial class ApiManagementServiceData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("sku");
            writer.WriteObjectValue(Sku);
            if (Optional.IsDefined(Identity))
            {
                writer.WritePropertyName("identity");
                JsonSerializer.Serialize(writer, Identity);
            }
            if (Optional.IsCollectionDefined(Zones))
            {
                if (Zones != null)
                {
                    writer.WritePropertyName("zones");
                    writer.WriteStartArray();
                    foreach (var item in Zones)
                    {
                        writer.WriteStringValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("zones");
                }
            }
            if (Optional.IsCollectionDefined(Tags))
            {
                writer.WritePropertyName("tags");
                writer.WriteStartObject();
                foreach (var item in Tags)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WritePropertyName("location");
            writer.WriteStringValue(Location);
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(NotificationSenderEmail))
            {
                writer.WritePropertyName("notificationSenderEmail");
                writer.WriteStringValue(NotificationSenderEmail);
            }
            if (Optional.IsCollectionDefined(HostnameConfigurations))
            {
                writer.WritePropertyName("hostnameConfigurations");
                writer.WriteStartArray();
                foreach (var item in HostnameConfigurations)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(PublicIPAddressId))
            {
                if (PublicIPAddressId != null)
                {
                    writer.WritePropertyName("publicIpAddressId");
                    writer.WriteStringValue(PublicIPAddressId);
                }
                else
                {
                    writer.WriteNull("publicIpAddressId");
                }
            }
            if (Optional.IsDefined(PublicNetworkAccess))
            {
                writer.WritePropertyName("publicNetworkAccess");
                writer.WriteStringValue(PublicNetworkAccess.Value.ToString());
            }
            if (Optional.IsDefined(VirtualNetworkConfiguration))
            {
                if (VirtualNetworkConfiguration != null)
                {
                    writer.WritePropertyName("virtualNetworkConfiguration");
                    writer.WriteObjectValue(VirtualNetworkConfiguration);
                }
                else
                {
                    writer.WriteNull("virtualNetworkConfiguration");
                }
            }
            if (Optional.IsCollectionDefined(AdditionalLocations))
            {
                if (AdditionalLocations != null)
                {
                    writer.WritePropertyName("additionalLocations");
                    writer.WriteStartArray();
                    foreach (var item in AdditionalLocations)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("additionalLocations");
                }
            }
            if (Optional.IsCollectionDefined(CustomProperties))
            {
                writer.WritePropertyName("customProperties");
                writer.WriteStartObject();
                foreach (var item in CustomProperties)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsCollectionDefined(Certificates))
            {
                if (Certificates != null)
                {
                    writer.WritePropertyName("certificates");
                    writer.WriteStartArray();
                    foreach (var item in Certificates)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("certificates");
                }
            }
            if (Optional.IsDefined(EnableClientCertificate))
            {
                writer.WritePropertyName("enableClientCertificate");
                writer.WriteBooleanValue(EnableClientCertificate.Value);
            }
            if (Optional.IsDefined(DisableGateway))
            {
                writer.WritePropertyName("disableGateway");
                writer.WriteBooleanValue(DisableGateway.Value);
            }
            if (Optional.IsDefined(VirtualNetworkType))
            {
                writer.WritePropertyName("virtualNetworkType");
                writer.WriteStringValue(VirtualNetworkType.Value.ToString());
            }
            if (Optional.IsDefined(ApiVersionConstraint))
            {
                writer.WritePropertyName("apiVersionConstraint");
                writer.WriteObjectValue(ApiVersionConstraint);
            }
            if (Optional.IsDefined(Restore))
            {
                writer.WritePropertyName("restore");
                writer.WriteBooleanValue(Restore.Value);
            }
            if (Optional.IsCollectionDefined(PrivateEndpointConnections))
            {
                if (PrivateEndpointConnections != null)
                {
                    writer.WritePropertyName("privateEndpointConnections");
                    writer.WriteStartArray();
                    foreach (var item in PrivateEndpointConnections)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("privateEndpointConnections");
                }
            }
            writer.WritePropertyName("publisherEmail");
            writer.WriteStringValue(PublisherEmail);
            writer.WritePropertyName("publisherName");
            writer.WriteStringValue(PublisherName);
            writer.WriteEndObject();
            writer.WriteEndObject();
        }
    }
}
