// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ApiManagement.Models
{
    /// <summary> Properties controlling TLS Certificate Validation. </summary>
    public partial class BackendTlsProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="BackendTlsProperties"/>. </summary>
        public BackendTlsProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="BackendTlsProperties"/>. </summary>
        /// <param name="shouldValidateCertificateChain"> Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host. </param>
        /// <param name="shouldValidateCertificateName"> Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal BackendTlsProperties(bool? shouldValidateCertificateChain, bool? shouldValidateCertificateName, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ShouldValidateCertificateChain = shouldValidateCertificateChain;
            ShouldValidateCertificateName = shouldValidateCertificateName;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host. </summary>
        public bool? ShouldValidateCertificateChain { get; set; }
        /// <summary> Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host. </summary>
        public bool? ShouldValidateCertificateName { get; set; }
    }
}
