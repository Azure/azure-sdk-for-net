// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.ApiManagement.Models
{
    /// <summary> Network Status details. </summary>
    public partial class NetworkStatusContract
    {
        /// <summary> Initializes a new instance of NetworkStatusContract. </summary>
        /// <param name="dnsServers"> Gets the list of DNS servers IPV4 addresses. </param>
        /// <param name="connectivityStatus"> Gets the list of Connectivity Status to the Resources on which the service depends upon. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dnsServers"/> or <paramref name="connectivityStatus"/> is null. </exception>
        internal NetworkStatusContract(IEnumerable<string> dnsServers, IEnumerable<ConnectivityStatusContract> connectivityStatus)
        {
            if (dnsServers == null)
            {
                throw new ArgumentNullException(nameof(dnsServers));
            }
            if (connectivityStatus == null)
            {
                throw new ArgumentNullException(nameof(connectivityStatus));
            }

            DnsServers = dnsServers.ToList();
            ConnectivityStatus = connectivityStatus.ToList();
        }

        /// <summary> Initializes a new instance of NetworkStatusContract. </summary>
        /// <param name="dnsServers"> Gets the list of DNS servers IPV4 addresses. </param>
        /// <param name="connectivityStatus"> Gets the list of Connectivity Status to the Resources on which the service depends upon. </param>
        internal NetworkStatusContract(IReadOnlyList<string> dnsServers, IReadOnlyList<ConnectivityStatusContract> connectivityStatus)
        {
            DnsServers = dnsServers;
            ConnectivityStatus = connectivityStatus;
        }

        /// <summary> Gets the list of DNS servers IPV4 addresses. </summary>
        public IReadOnlyList<string> DnsServers { get; }
        /// <summary> Gets the list of Connectivity Status to the Resources on which the service depends upon. </summary>
        public IReadOnlyList<ConnectivityStatusContract> ConnectivityStatus { get; }
    }
}
