// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    public partial class ParameterExampleContract : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Summary))
            {
                writer.WritePropertyName("summary");
                writer.WriteStringValue(Summary);
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(Value))
            {
                writer.WritePropertyName("value");
#if NET6_0_OR_GREATER
				writer.WriteRawValue(Value);
#else
                JsonSerializer.Serialize(writer, JsonDocument.Parse(Value.ToString()).RootElement);
#endif
            }
            if (Optional.IsDefined(ExternalValue))
            {
                writer.WritePropertyName("externalValue");
                writer.WriteStringValue(ExternalValue);
            }
            writer.WriteEndObject();
        }

        internal static ParameterExampleContract DeserializeParameterExampleContract(JsonElement element)
        {
            Optional<string> summary = default;
            Optional<string> description = default;
            Optional<BinaryData> value = default;
            Optional<string> externalValue = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("summary"))
                {
                    summary = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    value = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("externalValue"))
                {
                    externalValue = property.Value.GetString();
                    continue;
                }
            }
            return new ParameterExampleContract(summary.Value, description.Value, value.Value, externalValue.Value);
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "ParameterExampleContract");
            if (Optional.IsDefined(Summary))
            {
                writer.WriteStartElement("summary");
                writer.WriteValue(Summary);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Description))
            {
                writer.WriteStartElement("description");
                writer.WriteValue(Description);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Value))
            {
                writer.WriteStartElement("value");
                writer.WriteValue(Value);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(ExternalValue))
            {
                writer.WriteStartElement("externalValue");
                writer.WriteValue(ExternalValue);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        internal static ParameterExampleContract DeserializeParameterExampleContract(XElement element)
        {
            string summary = default;
            string description = default;
            BinaryData value = default;
            string externalValue = default;
            if (element.Element("summary") is XElement summaryElement)
            {
                summary = (string)summaryElement;
            }
            if (element.Element("description") is XElement descriptionElement)
            {
                description = (string)descriptionElement;
            }
            if (element.Element("value") is XElement valueElement)
            {
                value = valueElement.(null);
            }
            if (element.Element("externalValue") is XElement externalValueElement)
            {
                externalValue = (string)externalValueElement;
            }
            return new ParameterExampleContract(summary, description, value, externalValue);
        }
    }
}
