// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    public partial class ReportRecordContract
    {
        internal static ReportRecordContract DeserializeReportRecordContract(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> name = default;
            Core.Optional<DateTimeOffset> timestamp = default;
            Core.Optional<string> interval = default;
            Core.Optional<string> country = default;
            Core.Optional<string> region = default;
            Core.Optional<string> zip = default;
            Core.Optional<string> userId = default;
            Core.Optional<string> productId = default;
            Core.Optional<string> apiId = default;
            Core.Optional<string> operationId = default;
            Core.Optional<string> apiRegion = default;
            Core.Optional<ResourceIdentifier> subscriptionId = default;
            Core.Optional<int> callCountSuccess = default;
            Core.Optional<int> callCountBlocked = default;
            Core.Optional<int> callCountFailed = default;
            Core.Optional<int> callCountOther = default;
            Core.Optional<int> callCountTotal = default;
            Core.Optional<long> bandwidth = default;
            Core.Optional<int> cacheHitCount = default;
            Core.Optional<int> cacheMissCount = default;
            Core.Optional<double> apiTimeAvg = default;
            Core.Optional<double> apiTimeMin = default;
            Core.Optional<double> apiTimeMax = default;
            Core.Optional<double> serviceTimeAvg = default;
            Core.Optional<double> serviceTimeMin = default;
            Core.Optional<double> serviceTimeMax = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("timestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    timestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("interval"u8))
                {
                    interval = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"u8))
                {
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("region"u8))
                {
                    region = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("zip"u8))
                {
                    zip = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("userId"u8))
                {
                    userId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("productId"u8))
                {
                    productId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("apiId"u8))
                {
                    apiId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("operationId"u8))
                {
                    operationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("apiRegion"u8))
                {
                    apiRegion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subscriptionId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subscriptionId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("callCountSuccess"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    callCountSuccess = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("callCountBlocked"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    callCountBlocked = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("callCountFailed"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    callCountFailed = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("callCountOther"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    callCountOther = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("callCountTotal"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    callCountTotal = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("bandwidth"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    bandwidth = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("cacheHitCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    cacheHitCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("cacheMissCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    cacheMissCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("apiTimeAvg"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    apiTimeAvg = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("apiTimeMin"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    apiTimeMin = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("apiTimeMax"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    apiTimeMax = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("serviceTimeAvg"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    serviceTimeAvg = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("serviceTimeMin"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    serviceTimeMin = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("serviceTimeMax"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    serviceTimeMax = property.Value.GetDouble();
                    continue;
                }
            }
            return new ReportRecordContract(name.Value, Core.Optional.ToNullable(timestamp), interval.Value, country.Value, region.Value, zip.Value, userId.Value, productId.Value, apiId.Value, operationId.Value, apiRegion.Value, subscriptionId.Value, Core.Optional.ToNullable(callCountSuccess), Core.Optional.ToNullable(callCountBlocked), Core.Optional.ToNullable(callCountFailed), Core.Optional.ToNullable(callCountOther), Core.Optional.ToNullable(callCountTotal), Core.Optional.ToNullable(bandwidth), Core.Optional.ToNullable(cacheHitCount), Core.Optional.ToNullable(cacheMissCount), Core.Optional.ToNullable(apiTimeAvg), Core.Optional.ToNullable(apiTimeMin), Core.Optional.ToNullable(apiTimeMax), Core.Optional.ToNullable(serviceTimeAvg), Core.Optional.ToNullable(serviceTimeMin), Core.Optional.ToNullable(serviceTimeMax));
        }
    }
}
