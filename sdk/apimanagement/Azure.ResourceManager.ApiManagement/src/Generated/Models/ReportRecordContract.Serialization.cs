// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    public partial class ReportRecordContract
    {
        internal static ReportRecordContract DeserializeReportRecordContract(JsonElement element)
        {
            Optional<string> name = default;
            Optional<DateTimeOffset> timestamp = default;
            Optional<string> interval = default;
            Optional<string> country = default;
            Optional<string> region = default;
            Optional<string> zip = default;
            Optional<string> userId = default;
            Optional<string> productId = default;
            Optional<string> apiId = default;
            Optional<string> operationId = default;
            Optional<string> apiRegion = default;
            Optional<string> subscriptionId = default;
            Optional<int> callCountSuccess = default;
            Optional<int> callCountBlocked = default;
            Optional<int> callCountFailed = default;
            Optional<int> callCountOther = default;
            Optional<int> callCountTotal = default;
            Optional<long> bandwidth = default;
            Optional<int> cacheHitCount = default;
            Optional<int> cacheMissCount = default;
            Optional<double> apiTimeAvg = default;
            Optional<double> apiTimeMin = default;
            Optional<double> apiTimeMax = default;
            Optional<double> serviceTimeAvg = default;
            Optional<double> serviceTimeMin = default;
            Optional<double> serviceTimeMax = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("timestamp"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    timestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("interval"))
                {
                    interval = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("region"))
                {
                    region = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("zip"))
                {
                    zip = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("userId"))
                {
                    userId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("productId"))
                {
                    productId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("apiId"))
                {
                    apiId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("operationId"))
                {
                    operationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("apiRegion"))
                {
                    apiRegion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subscriptionId"))
                {
                    subscriptionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("callCountSuccess"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    callCountSuccess = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("callCountBlocked"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    callCountBlocked = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("callCountFailed"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    callCountFailed = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("callCountOther"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    callCountOther = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("callCountTotal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    callCountTotal = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("bandwidth"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    bandwidth = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("cacheHitCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cacheHitCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("cacheMissCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cacheMissCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("apiTimeAvg"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    apiTimeAvg = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("apiTimeMin"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    apiTimeMin = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("apiTimeMax"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    apiTimeMax = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("serviceTimeAvg"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    serviceTimeAvg = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("serviceTimeMin"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    serviceTimeMin = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("serviceTimeMax"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    serviceTimeMax = property.Value.GetDouble();
                    continue;
                }
            }
            return new ReportRecordContract(name.Value, Optional.ToNullable(timestamp), interval.Value, country.Value, region.Value, zip.Value, userId.Value, productId.Value, apiId.Value, operationId.Value, apiRegion.Value, subscriptionId.Value, Optional.ToNullable(callCountSuccess), Optional.ToNullable(callCountBlocked), Optional.ToNullable(callCountFailed), Optional.ToNullable(callCountOther), Optional.ToNullable(callCountTotal), Optional.ToNullable(bandwidth), Optional.ToNullable(cacheHitCount), Optional.ToNullable(cacheMissCount), Optional.ToNullable(apiTimeAvg), Optional.ToNullable(apiTimeMin), Optional.ToNullable(apiTimeMax), Optional.ToNullable(serviceTimeAvg), Optional.ToNullable(serviceTimeMin), Optional.ToNullable(serviceTimeMax));
        }
    }
}
