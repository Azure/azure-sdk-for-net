// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ApiManagement
{
    public partial class ApiManagementGatewayHostnameConfigurationData : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties"u8);
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Hostname))
            {
                writer.WritePropertyName("hostname"u8);
                writer.WriteStringValue(Hostname);
            }
            if (Core.Optional.IsDefined(CertificateId))
            {
                writer.WritePropertyName("certificateId"u8);
                writer.WriteStringValue(CertificateId);
            }
            if (Core.Optional.IsDefined(IsClientCertificateRequired))
            {
                writer.WritePropertyName("negotiateClientCertificate"u8);
                writer.WriteBooleanValue(IsClientCertificateRequired.Value);
            }
            if (Core.Optional.IsDefined(IsTls1_0Enabled))
            {
                writer.WritePropertyName("tls10Enabled"u8);
                writer.WriteBooleanValue(IsTls1_0Enabled.Value);
            }
            if (Core.Optional.IsDefined(IsTls1_1Enabled))
            {
                writer.WritePropertyName("tls11Enabled"u8);
                writer.WriteBooleanValue(IsTls1_1Enabled.Value);
            }
            if (Core.Optional.IsDefined(IsHttp2_0Enabled))
            {
                writer.WritePropertyName("http2Enabled"u8);
                writer.WriteBooleanValue(IsHttp2_0Enabled.Value);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static ApiManagementGatewayHostnameConfigurationData DeserializeApiManagementGatewayHostnameConfigurationData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Core.Optional<SystemData> systemData = default;
            Core.Optional<string> hostname = default;
            Core.Optional<string> certificateId = default;
            Core.Optional<bool> negotiateClientCertificate = default;
            Core.Optional<bool> tls10Enabled = default;
            Core.Optional<bool> tls11Enabled = default;
            Core.Optional<bool> http2Enabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("hostname"u8))
                        {
                            hostname = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("certificateId"u8))
                        {
                            certificateId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("negotiateClientCertificate"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            negotiateClientCertificate = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("tls10Enabled"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            tls10Enabled = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("tls11Enabled"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            tls11Enabled = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("http2Enabled"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            http2Enabled = property0.Value.GetBoolean();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new ApiManagementGatewayHostnameConfigurationData(id, name, type, systemData.Value, hostname.Value, certificateId.Value, Core.Optional.ToNullable(negotiateClientCertificate), Core.Optional.ToNullable(tls10Enabled), Core.Optional.ToNullable(tls11Enabled), Core.Optional.ToNullable(http2Enabled));
        }
    }
}
