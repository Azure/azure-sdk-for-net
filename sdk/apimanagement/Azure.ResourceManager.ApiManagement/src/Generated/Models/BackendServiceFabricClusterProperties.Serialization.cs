// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    public partial class BackendServiceFabricClusterProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(ClientCertificateId))
            {
                writer.WritePropertyName("clientCertificateId"u8);
                writer.WriteStringValue(ClientCertificateId);
            }
            if (Core.Optional.IsDefined(ClientCertificatethumbprint))
            {
                writer.WritePropertyName("clientCertificatethumbprint"u8);
                writer.WriteStringValue(ClientCertificatethumbprint);
            }
            if (Core.Optional.IsDefined(MaxPartitionResolutionRetries))
            {
                writer.WritePropertyName("maxPartitionResolutionRetries"u8);
                writer.WriteNumberValue(MaxPartitionResolutionRetries.Value);
            }
            writer.WritePropertyName("managementEndpoints"u8);
            writer.WriteStartArray();
            foreach (var item in ManagementEndpoints)
            {
                writer.WriteStringValue(item);
            }
            writer.WriteEndArray();
            if (Core.Optional.IsCollectionDefined(ServerCertificateThumbprints))
            {
                writer.WritePropertyName("serverCertificateThumbprints"u8);
                writer.WriteStartArray();
                foreach (var item in ServerCertificateThumbprints)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsCollectionDefined(ServerX509Names))
            {
                writer.WritePropertyName("serverX509Names"u8);
                writer.WriteStartArray();
                foreach (var item in ServerX509Names)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static BackendServiceFabricClusterProperties DeserializeBackendServiceFabricClusterProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> clientCertificateId = default;
            Core.Optional<string> clientCertificatethumbprint = default;
            Core.Optional<int> maxPartitionResolutionRetries = default;
            IList<string> managementEndpoints = default;
            Core.Optional<IList<string>> serverCertificateThumbprints = default;
            Core.Optional<IList<X509CertificateName>> serverX509Names = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("clientCertificateId"u8))
                {
                    clientCertificateId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("clientCertificatethumbprint"u8))
                {
                    clientCertificatethumbprint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("maxPartitionResolutionRetries"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxPartitionResolutionRetries = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("managementEndpoints"u8))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    managementEndpoints = array;
                    continue;
                }
                if (property.NameEquals("serverCertificateThumbprints"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    serverCertificateThumbprints = array;
                    continue;
                }
                if (property.NameEquals("serverX509Names"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<X509CertificateName> array = new List<X509CertificateName>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(X509CertificateName.DeserializeX509CertificateName(item));
                    }
                    serverX509Names = array;
                    continue;
                }
            }
            return new BackendServiceFabricClusterProperties(clientCertificateId.Value, clientCertificatethumbprint.Value, Core.Optional.ToNullable(maxPartitionResolutionRetries), managementEndpoints, Core.Optional.ToList(serverCertificateThumbprints), Core.Optional.ToList(serverX509Names));
        }
    }
}
