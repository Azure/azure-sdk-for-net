// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.ApiManagement.Models;

namespace Azure.ResourceManager.ApiManagement
{
    public partial class PortalRevisionContractData : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(IsCurrent))
            {
                writer.WritePropertyName("isCurrent");
                writer.WriteBooleanValue(IsCurrent.Value);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static PortalRevisionContractData DeserializePortalRevisionContractData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<string> description = default;
            Optional<string> statusDetails = default;
            Optional<PortalRevisionStatus> status = default;
            Optional<bool> isCurrent = default;
            Optional<DateTimeOffset> createdDateTime = default;
            Optional<DateTimeOffset> updatedDateTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("description"))
                        {
                            description = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("statusDetails"))
                        {
                            statusDetails = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("status"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            status = new PortalRevisionStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("isCurrent"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            isCurrent = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("createdDateTime"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            createdDateTime = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("updatedDateTime"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            updatedDateTime = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new PortalRevisionContractData(id, name, type, description.Value, statusDetails.Value, Optional.ToNullable(status), Optional.ToNullable(isCurrent), Optional.ToNullable(createdDateTime), Optional.ToNullable(updatedDateTime));
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "PortalRevisionContract");
            if (Optional.IsDefined(Description))
            {
                writer.WriteStartElement("description");
                writer.WriteValue(Description);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(StatusDetails))
            {
                writer.WriteStartElement("statusDetails");
                writer.WriteValue(StatusDetails);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Status))
            {
                writer.WriteStartElement("status");
                writer.WriteValue(Status.Value.ToString());
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(IsCurrent))
            {
                writer.WriteStartElement("isCurrent");
                writer.WriteValue(IsCurrent.Value);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(CreatedDateTime))
            {
                writer.WriteStartElement("createdDateTime");
                writer.WriteValue(CreatedDateTime.Value, "O");
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(UpdatedDateTime))
            {
                writer.WriteStartElement("updatedDateTime");
                writer.WriteValue(UpdatedDateTime.Value, "O");
                writer.WriteEndElement();
            }
            writer.WriteStartElement("id");
            writer.WriteValue(Id);
            writer.WriteEndElement();
            writer.WriteStartElement("name");
            writer.WriteValue(Name);
            writer.WriteEndElement();
            writer.WriteStartElement("type");
            writer.WriteValue(Type);
            writer.WriteEndElement();
            writer.WriteEndElement();
        }

        internal static PortalRevisionContractData DeserializePortalRevisionContractData(XElement element)
        {
            string description = default;
            string statusDetails = default;
            PortalRevisionStatus? status = default;
            bool? isCurrent = default;
            DateTimeOffset? createdDateTime = default;
            DateTimeOffset? updatedDateTime = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            if (element.Element("description") is XElement descriptionElement)
            {
                description = (string)descriptionElement;
            }
            if (element.Element("statusDetails") is XElement statusDetailsElement)
            {
                statusDetails = (string)statusDetailsElement;
            }
            if (element.Element("status") is XElement statusElement)
            {
                status = new PortalRevisionStatus(statusElement.Value);
            }
            if (element.Element("isCurrent") is XElement isCurrentElement)
            {
                isCurrent = (bool?)isCurrentElement;
            }
            if (element.Element("createdDateTime") is XElement createdDateTimeElement)
            {
                createdDateTime = createdDateTimeElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("updatedDateTime") is XElement updatedDateTimeElement)
            {
                updatedDateTime = updatedDateTimeElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("id") is XElement idElement)
            {
                id = new ResourceIdentifier((string)idElement);
            }
            if (element.Element("name") is XElement nameElement)
            {
                name = (string)nameElement;
            }
            if (element.Element("type") is XElement typeElement)
            {
                type = (string)typeElement;
            }
            return new PortalRevisionContractData(id, name, type, description, statusDetails, status, isCurrent, createdDateTime, updatedDateTime);
        }
    }
}
