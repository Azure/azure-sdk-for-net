// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    public partial class ApiVersionSetContractDetails : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(VersioningScheme))
            {
                writer.WritePropertyName("versioningScheme");
                writer.WriteStringValue(VersioningScheme.Value.ToString());
            }
            if (Optional.IsDefined(VersionQueryName))
            {
                writer.WritePropertyName("versionQueryName");
                writer.WriteStringValue(VersionQueryName);
            }
            if (Optional.IsDefined(VersionHeaderName))
            {
                writer.WritePropertyName("versionHeaderName");
                writer.WriteStringValue(VersionHeaderName);
            }
            writer.WriteEndObject();
        }

        internal static ApiVersionSetContractDetails DeserializeApiVersionSetContractDetails(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> description = default;
            Optional<ApiVersionSetContractDetailsVersioningScheme> versioningScheme = default;
            Optional<string> versionQueryName = default;
            Optional<string> versionHeaderName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("versioningScheme"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    versioningScheme = new ApiVersionSetContractDetailsVersioningScheme(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("versionQueryName"))
                {
                    versionQueryName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("versionHeaderName"))
                {
                    versionHeaderName = property.Value.GetString();
                    continue;
                }
            }
            return new ApiVersionSetContractDetails(id.Value, name.Value, description.Value, Optional.ToNullable(versioningScheme), versionQueryName.Value, versionHeaderName.Value);
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "ApiVersionSetContractDetails");
            if (Optional.IsDefined(Id))
            {
                writer.WriteStartElement("id");
                writer.WriteValue(Id);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Name))
            {
                writer.WriteStartElement("name");
                writer.WriteValue(Name);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Description))
            {
                writer.WriteStartElement("description");
                writer.WriteValue(Description);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(VersioningScheme))
            {
                writer.WriteStartElement("versioningScheme");
                writer.WriteValue(VersioningScheme.Value.ToString());
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(VersionQueryName))
            {
                writer.WriteStartElement("versionQueryName");
                writer.WriteValue(VersionQueryName);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(VersionHeaderName))
            {
                writer.WriteStartElement("versionHeaderName");
                writer.WriteValue(VersionHeaderName);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        internal static ApiVersionSetContractDetails DeserializeApiVersionSetContractDetails(XElement element)
        {
            string id = default;
            string name = default;
            string description = default;
            ApiVersionSetContractDetailsVersioningScheme? versioningScheme = default;
            string versionQueryName = default;
            string versionHeaderName = default;
            if (element.Element("id") is XElement idElement)
            {
                id = (string)idElement;
            }
            if (element.Element("name") is XElement nameElement)
            {
                name = (string)nameElement;
            }
            if (element.Element("description") is XElement descriptionElement)
            {
                description = (string)descriptionElement;
            }
            if (element.Element("versioningScheme") is XElement versioningSchemeElement)
            {
                versioningScheme = new ApiVersionSetContractDetailsVersioningScheme(versioningSchemeElement.Value);
            }
            if (element.Element("versionQueryName") is XElement versionQueryNameElement)
            {
                versionQueryName = (string)versionQueryNameElement;
            }
            if (element.Element("versionHeaderName") is XElement versionHeaderNameElement)
            {
                versionHeaderName = (string)versionHeaderNameElement;
            }
            return new ApiVersionSetContractDetails(id, name, description, versioningScheme, versionQueryName, versionHeaderName);
        }
    }
}
