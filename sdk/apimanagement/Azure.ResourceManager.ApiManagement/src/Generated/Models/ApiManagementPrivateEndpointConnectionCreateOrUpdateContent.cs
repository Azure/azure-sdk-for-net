// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ApiManagement.Models
{
    /// <summary> A request to approve or reject a private endpoint connection. </summary>
    public partial class ApiManagementPrivateEndpointConnectionCreateOrUpdateContent
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ApiManagementPrivateEndpointConnectionCreateOrUpdateContent"/>. </summary>
        public ApiManagementPrivateEndpointConnectionCreateOrUpdateContent()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ApiManagementPrivateEndpointConnectionCreateOrUpdateContent"/>. </summary>
        /// <param name="id"> Private Endpoint Connection Resource Id. </param>
        /// <param name="properties"> The connection state of the private endpoint connection. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ApiManagementPrivateEndpointConnectionCreateOrUpdateContent(ResourceIdentifier id, PrivateEndpointConnectionRequestProperties properties, Dictionary<string, BinaryData> rawData)
        {
            Id = id;
            Properties = properties;
            _rawData = rawData;
        }

        /// <summary> Private Endpoint Connection Resource Id. </summary>
        public ResourceIdentifier Id { get; set; }
        /// <summary> The connection state of the private endpoint connection. </summary>
        internal PrivateEndpointConnectionRequestProperties Properties { get; set; }
        /// <summary> A collection of information about the state of the connection between service consumer and provider. </summary>
        public ApiManagementPrivateLinkServiceConnectionState PrivateLinkServiceConnectionState
        {
            get => Properties is null ? default : Properties.PrivateLinkServiceConnectionState;
            set
            {
                if (Properties is null)
                    Properties = new PrivateEndpointConnectionRequestProperties();
                Properties.PrivateLinkServiceConnectionState = value;
            }
        }
    }
}
