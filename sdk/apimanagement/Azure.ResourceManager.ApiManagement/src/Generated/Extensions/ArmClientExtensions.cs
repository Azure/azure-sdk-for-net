// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.ResourceManager;

namespace Azure.ResourceManager.ApiManagement
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region ApiContract
        /// <summary> Gets an object representing a ApiContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiContract" /> object. </returns>
        public static ApiContract GetApiContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ApiContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ApiReleaseContract
        /// <summary> Gets an object representing a ApiReleaseContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiReleaseContract" /> object. </returns>
        public static ApiReleaseContract GetApiReleaseContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ApiReleaseContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region OperationContract
        /// <summary> Gets an object representing a OperationContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OperationContract" /> object. </returns>
        public static OperationContract GetOperationContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new OperationContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceApiOperationPolicy
        /// <summary> Gets an object representing a ServiceApiOperationPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiOperationPolicy" /> object. </returns>
        public static ServiceApiOperationPolicy GetServiceApiOperationPolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceApiOperationPolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceApiPolicy
        /// <summary> Gets an object representing a ServiceApiPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiPolicy" /> object. </returns>
        public static ServiceApiPolicy GetServiceApiPolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceApiPolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServicePolicy
        /// <summary> Gets an object representing a ServicePolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServicePolicy" /> object. </returns>
        public static ServicePolicy GetServicePolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServicePolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceProductPolicy
        /// <summary> Gets an object representing a ServiceProductPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceProductPolicy" /> object. </returns>
        public static ServiceProductPolicy GetServiceProductPolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceProductPolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceApiOperationTag
        /// <summary> Gets an object representing a ServiceApiOperationTag along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiOperationTag" /> object. </returns>
        public static ServiceApiOperationTag GetServiceApiOperationTag(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceApiOperationTag(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceApiTag
        /// <summary> Gets an object representing a ServiceApiTag along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiTag" /> object. </returns>
        public static ServiceApiTag GetServiceApiTag(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceApiTag(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceProductTag
        /// <summary> Gets an object representing a ServiceProductTag along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceProductTag" /> object. </returns>
        public static ServiceProductTag GetServiceProductTag(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceProductTag(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceTag
        /// <summary> Gets an object representing a ServiceTag along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceTag" /> object. </returns>
        public static ServiceTag GetServiceTag(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceTag(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region SchemaContract
        /// <summary> Gets an object representing a SchemaContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SchemaContract" /> object. </returns>
        public static SchemaContract GetSchemaContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new SchemaContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceApiDiagnostic
        /// <summary> Gets an object representing a ServiceApiDiagnostic along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiDiagnostic" /> object. </returns>
        public static ServiceApiDiagnostic GetServiceApiDiagnostic(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceApiDiagnostic(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceDiagnostic
        /// <summary> Gets an object representing a ServiceDiagnostic along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceDiagnostic" /> object. </returns>
        public static ServiceDiagnostic GetServiceDiagnostic(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceDiagnostic(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceApiIssue
        /// <summary> Gets an object representing a ServiceApiIssue along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiIssue" /> object. </returns>
        public static ServiceApiIssue GetServiceApiIssue(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceApiIssue(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceIssue
        /// <summary> Gets an object representing a ServiceIssue along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceIssue" /> object. </returns>
        public static ServiceIssue GetServiceIssue(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceIssue(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region IssueCommentContract
        /// <summary> Gets an object representing a IssueCommentContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IssueCommentContract" /> object. </returns>
        public static IssueCommentContract GetIssueCommentContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new IssueCommentContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region IssueAttachmentContract
        /// <summary> Gets an object representing a IssueAttachmentContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IssueAttachmentContract" /> object. </returns>
        public static IssueAttachmentContract GetIssueAttachmentContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new IssueAttachmentContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region TagDescriptionContract
        /// <summary> Gets an object representing a TagDescriptionContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TagDescriptionContract" /> object. </returns>
        public static TagDescriptionContract GetTagDescriptionContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new TagDescriptionContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ApiVersionSetContract
        /// <summary> Gets an object representing a ApiVersionSetContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiVersionSetContract" /> object. </returns>
        public static ApiVersionSetContract GetApiVersionSetContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ApiVersionSetContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AuthorizationServerContract
        /// <summary> Gets an object representing a AuthorizationServerContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AuthorizationServerContract" /> object. </returns>
        public static AuthorizationServerContract GetAuthorizationServerContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AuthorizationServerContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region BackendContract
        /// <summary> Gets an object representing a BackendContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BackendContract" /> object. </returns>
        public static BackendContract GetBackendContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new BackendContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region CacheContract
        /// <summary> Gets an object representing a CacheContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CacheContract" /> object. </returns>
        public static CacheContract GetCacheContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CacheContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region CertificateContract
        /// <summary> Gets an object representing a CertificateContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CertificateContract" /> object. </returns>
        public static CertificateContract GetCertificateContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CertificateContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ContentTypeContract
        /// <summary> Gets an object representing a ContentTypeContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ContentTypeContract" /> object. </returns>
        public static ContentTypeContract GetContentTypeContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ContentTypeContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ContentItemContract
        /// <summary> Gets an object representing a ContentItemContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ContentItemContract" /> object. </returns>
        public static ContentItemContract GetContentItemContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ContentItemContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DeletedServiceContract
        /// <summary> Gets an object representing a DeletedServiceContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DeletedServiceContract" /> object. </returns>
        public static DeletedServiceContract GetDeletedServiceContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DeletedServiceContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ApiManagementServiceResource
        /// <summary> Gets an object representing a ApiManagementServiceResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementServiceResource" /> object. </returns>
        public static ApiManagementServiceResource GetApiManagementServiceResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ApiManagementServiceResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region EmailTemplateContract
        /// <summary> Gets an object representing a EmailTemplateContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EmailTemplateContract" /> object. </returns>
        public static EmailTemplateContract GetEmailTemplateContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new EmailTemplateContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region GatewayContract
        /// <summary> Gets an object representing a GatewayContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GatewayContract" /> object. </returns>
        public static GatewayContract GetGatewayContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new GatewayContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region GatewayHostnameConfigurationContract
        /// <summary> Gets an object representing a GatewayHostnameConfigurationContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GatewayHostnameConfigurationContract" /> object. </returns>
        public static GatewayHostnameConfigurationContract GetGatewayHostnameConfigurationContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new GatewayHostnameConfigurationContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region GatewayCertificateAuthorityContract
        /// <summary> Gets an object representing a GatewayCertificateAuthorityContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GatewayCertificateAuthorityContract" /> object. </returns>
        public static GatewayCertificateAuthorityContract GetGatewayCertificateAuthorityContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new GatewayCertificateAuthorityContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region GroupContract
        /// <summary> Gets an object representing a GroupContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GroupContract" /> object. </returns>
        public static GroupContract GetGroupContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new GroupContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region IdentityProviderContract
        /// <summary> Gets an object representing a IdentityProviderContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IdentityProviderContract" /> object. </returns>
        public static IdentityProviderContract GetIdentityProviderContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new IdentityProviderContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region LoggerContract
        /// <summary> Gets an object representing a LoggerContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LoggerContract" /> object. </returns>
        public static LoggerContract GetLoggerContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new LoggerContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region NamedValueContract
        /// <summary> Gets an object representing a NamedValueContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NamedValueContract" /> object. </returns>
        public static NamedValueContract GetNamedValueContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new NamedValueContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region NotificationContract
        /// <summary> Gets an object representing a NotificationContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NotificationContract" /> object. </returns>
        public static NotificationContract GetNotificationContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new NotificationContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region OpenidConnectProviderContract
        /// <summary> Gets an object representing a OpenidConnectProviderContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OpenidConnectProviderContract" /> object. </returns>
        public static OpenidConnectProviderContract GetOpenidConnectProviderContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new OpenidConnectProviderContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PortalRevisionContract
        /// <summary> Gets an object representing a PortalRevisionContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalRevisionContract" /> object. </returns>
        public static PortalRevisionContract GetPortalRevisionContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PortalRevisionContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PortalSigninSettings
        /// <summary> Gets an object representing a PortalSigninSettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalSigninSettings" /> object. </returns>
        public static PortalSigninSettings GetPortalSigninSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PortalSigninSettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PortalSignupSettings
        /// <summary> Gets an object representing a PortalSignupSettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalSignupSettings" /> object. </returns>
        public static PortalSignupSettings GetPortalSignupSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PortalSignupSettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PortalDelegationSettings
        /// <summary> Gets an object representing a PortalDelegationSettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalDelegationSettings" /> object. </returns>
        public static PortalDelegationSettings GetPortalDelegationSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PortalDelegationSettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PrivateEndpointConnection
        /// <summary> Gets an object representing a PrivateEndpointConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnection" /> object. </returns>
        public static PrivateEndpointConnection GetPrivateEndpointConnection(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PrivateEndpointConnection(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PrivateLinkResource
        /// <summary> Gets an object representing a PrivateLinkResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateLinkResource" /> object. </returns>
        public static PrivateLinkResource GetPrivateLinkResource(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PrivateLinkResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ProductContract
        /// <summary> Gets an object representing a ProductContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ProductContract" /> object. </returns>
        public static ProductContract GetProductContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ProductContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region GlobalSchemaContract
        /// <summary> Gets an object representing a GlobalSchemaContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GlobalSchemaContract" /> object. </returns>
        public static GlobalSchemaContract GetGlobalSchemaContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new GlobalSchemaContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region TenantSettingsContract
        /// <summary> Gets an object representing a TenantSettingsContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantSettingsContract" /> object. </returns>
        public static TenantSettingsContract GetTenantSettingsContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new TenantSettingsContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceSubscription
        /// <summary> Gets an object representing a ServiceSubscription along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceSubscription" /> object. </returns>
        public static ServiceSubscription GetServiceSubscription(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceSubscription(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServiceUserSubscription
        /// <summary> Gets an object representing a ServiceUserSubscription along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceUserSubscription" /> object. </returns>
        public static ServiceUserSubscription GetServiceUserSubscription(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServiceUserSubscription(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AccessInformationContract
        /// <summary> Gets an object representing a AccessInformationContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AccessInformationContract" /> object. </returns>
        public static AccessInformationContract GetAccessInformationContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AccessInformationContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region UserContract
        /// <summary> Gets an object representing a UserContract along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="UserContract" /> object. </returns>
        public static UserContract GetUserContract(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new UserContract(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}
