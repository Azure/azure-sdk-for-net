// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.ApiManagement.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ApiManagement
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ApiManagement. </summary>
    public static partial class ApiManagementExtensions
    {
        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of DeletedServiceContractResources in the SubscriptionResource. </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of DeletedServiceContractResources and their operations over a DeletedServiceContractResource. </returns>
        public static DeletedServiceContractCollection GetDeletedServiceContracts(this SubscriptionResource subscriptionResource)
        {
            return GetExtensionClient(subscriptionResource).GetDeletedServiceContracts();
        }

        /// <summary>
        /// Get soft-deleted Api Management Service by name.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}
        /// Operation Id: DeletedServices_GetByName
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location of the deleted API Management service. </param>
        /// <param name="serviceName"> The name of the API Management service. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<DeletedServiceContractResource>> GetDeletedServiceContractAsync(this SubscriptionResource subscriptionResource, AzureLocation location, string serviceName, CancellationToken cancellationToken = default)
        {
            return await subscriptionResource.GetDeletedServiceContracts().GetAsync(location, serviceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get soft-deleted Api Management Service by name.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}
        /// Operation Id: DeletedServices_GetByName
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location of the deleted API Management service. </param>
        /// <param name="serviceName"> The name of the API Management service. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<DeletedServiceContractResource> GetDeletedServiceContract(this SubscriptionResource subscriptionResource, AzureLocation location, string serviceName, CancellationToken cancellationToken = default)
        {
            return subscriptionResource.GetDeletedServiceContracts().Get(location, serviceName, cancellationToken);
        }

        /// <summary>
        /// Lists all soft-deleted services available for undelete for the given subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/deletedservices
        /// Operation Id: DeletedServices_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="DeletedServiceContractResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<DeletedServiceContractResource> GetDeletedServiceContractsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetDeletedServiceContractsAsync(cancellationToken);
        }

        /// <summary>
        /// Lists all soft-deleted services available for undelete for the given subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/deletedservices
        /// Operation Id: DeletedServices_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="DeletedServiceContractResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<DeletedServiceContractResource> GetDeletedServiceContracts(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetDeletedServiceContracts(cancellationToken);
        }

        /// <summary>
        /// Lists all API Management services within an Azure subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service
        /// Operation Id: ApiManagementService_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="ApiManagementServiceResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<ApiManagementServiceResource> GetApiManagementServiceResourcesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetApiManagementServiceResourcesAsync(cancellationToken);
        }

        /// <summary>
        /// Lists all API Management services within an Azure subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service
        /// Operation Id: ApiManagementService_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="ApiManagementServiceResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<ApiManagementServiceResource> GetApiManagementServiceResources(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetApiManagementServiceResources(cancellationToken);
        }

        /// <summary>
        /// Checks availability and correctness of a name for an API Management service.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability
        /// Operation Id: ApiManagementService_CheckNameAvailability
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="content"> Parameters supplied to the CheckNameAvailability operation. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        public static async Task<Response<ApiManagementServiceNameAvailabilityResult>> CheckNameAvailabilityApiManagementServiceAsync(this SubscriptionResource subscriptionResource, ApiManagementServiceCheckNameAvailabilityContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            return await GetExtensionClient(subscriptionResource).CheckNameAvailabilityApiManagementServiceAsync(content, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Checks availability and correctness of a name for an API Management service.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability
        /// Operation Id: ApiManagementService_CheckNameAvailability
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="content"> Parameters supplied to the CheckNameAvailability operation. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        public static Response<ApiManagementServiceNameAvailabilityResult> CheckNameAvailabilityApiManagementService(this SubscriptionResource subscriptionResource, ApiManagementServiceCheckNameAvailabilityContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            return GetExtensionClient(subscriptionResource).CheckNameAvailabilityApiManagementService(content, cancellationToken);
        }

        /// <summary>
        /// Get the custom domain ownership identifier for an API Management service.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/getDomainOwnershipIdentifier
        /// Operation Id: ApiManagementService_GetDomainOwnershipIdentifier
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public static async Task<Response<ApiManagementServiceGetDomainOwnershipIdentifierResult>> GetDomainOwnershipIdentifierApiManagementServiceAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return await GetExtensionClient(subscriptionResource).GetDomainOwnershipIdentifierApiManagementServiceAsync(cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get the custom domain ownership identifier for an API Management service.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/getDomainOwnershipIdentifier
        /// Operation Id: ApiManagementService_GetDomainOwnershipIdentifier
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public static Response<ApiManagementServiceGetDomainOwnershipIdentifierResult> GetDomainOwnershipIdentifierApiManagementService(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetDomainOwnershipIdentifierApiManagementService(cancellationToken);
        }

        /// <summary>
        /// Gets the list of Microsoft.ApiManagement SKUs available for your Subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/skus
        /// Operation Id: ApiManagementSkus_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="ApiManagementSku" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<ApiManagementSku> GetApiManagementSkusAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetApiManagementSkusAsync(cancellationToken);
        }

        /// <summary>
        /// Gets the list of Microsoft.ApiManagement SKUs available for your Subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/skus
        /// Operation Id: ApiManagementSkus_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="ApiManagementSku" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<ApiManagementSku> GetApiManagementSkus(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetApiManagementSkus(cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of ApiManagementServiceResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of ApiManagementServiceResources and their operations over a ApiManagementServiceResource. </returns>
        public static ApiManagementServiceResourceCollection GetApiManagementServiceResources(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetApiManagementServiceResources();
        }

        /// <summary>
        /// Gets an API Management service resource description.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
        /// Operation Id: ApiManagementService_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="serviceName"> The name of the API Management service. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<ApiManagementServiceResource>> GetApiManagementServiceResourceAsync(this ResourceGroupResource resourceGroupResource, string serviceName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetApiManagementServiceResources().GetAsync(serviceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets an API Management service resource description.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
        /// Operation Id: ApiManagementService_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="serviceName"> The name of the API Management service. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<ApiManagementServiceResource> GetApiManagementServiceResource(this ResourceGroupResource resourceGroupResource, string serviceName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetApiManagementServiceResources().Get(serviceName, cancellationToken);
        }

        #region ApiContractResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiContractResource.CreateResourceIdentifier" /> to create an <see cref="ApiContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiContractResource" /> object. </returns>
        public static ApiContractResource GetApiContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiContractResource.ValidateResourceId(id);
                return new ApiContractResource(client, id);
            }
            );
        }
        #endregion

        #region ApiReleaseContractResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiReleaseContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiReleaseContractResource.CreateResourceIdentifier" /> to create an <see cref="ApiReleaseContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiReleaseContractResource" /> object. </returns>
        public static ApiReleaseContractResource GetApiReleaseContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiReleaseContractResource.ValidateResourceId(id);
                return new ApiReleaseContractResource(client, id);
            }
            );
        }
        #endregion

        #region OperationContractResource
        /// <summary>
        /// Gets an object representing an <see cref="OperationContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OperationContractResource.CreateResourceIdentifier" /> to create an <see cref="OperationContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OperationContractResource" /> object. </returns>
        public static OperationContractResource GetOperationContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                OperationContractResource.ValidateResourceId(id);
                return new OperationContractResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceApiOperationPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceApiOperationPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceApiOperationPolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServiceApiOperationPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiOperationPolicyResource" /> object. </returns>
        public static ServiceApiOperationPolicyResource GetServiceApiOperationPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceApiOperationPolicyResource.ValidateResourceId(id);
                return new ServiceApiOperationPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceApiPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceApiPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceApiPolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServiceApiPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiPolicyResource" /> object. </returns>
        public static ServiceApiPolicyResource GetServiceApiPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceApiPolicyResource.ValidateResourceId(id);
                return new ServiceApiPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServicePolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServicePolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServicePolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServicePolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServicePolicyResource" /> object. </returns>
        public static ServicePolicyResource GetServicePolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServicePolicyResource.ValidateResourceId(id);
                return new ServicePolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceProductPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceProductPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceProductPolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServiceProductPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceProductPolicyResource" /> object. </returns>
        public static ServiceProductPolicyResource GetServiceProductPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceProductPolicyResource.ValidateResourceId(id);
                return new ServiceProductPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceApiOperationTagResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceApiOperationTagResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceApiOperationTagResource.CreateResourceIdentifier" /> to create a <see cref="ServiceApiOperationTagResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiOperationTagResource" /> object. </returns>
        public static ServiceApiOperationTagResource GetServiceApiOperationTagResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceApiOperationTagResource.ValidateResourceId(id);
                return new ServiceApiOperationTagResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceApiTagResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceApiTagResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceApiTagResource.CreateResourceIdentifier" /> to create a <see cref="ServiceApiTagResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiTagResource" /> object. </returns>
        public static ServiceApiTagResource GetServiceApiTagResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceApiTagResource.ValidateResourceId(id);
                return new ServiceApiTagResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceProductTagResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceProductTagResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceProductTagResource.CreateResourceIdentifier" /> to create a <see cref="ServiceProductTagResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceProductTagResource" /> object. </returns>
        public static ServiceProductTagResource GetServiceProductTagResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceProductTagResource.ValidateResourceId(id);
                return new ServiceProductTagResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceTagResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceTagResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceTagResource.CreateResourceIdentifier" /> to create a <see cref="ServiceTagResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceTagResource" /> object. </returns>
        public static ServiceTagResource GetServiceTagResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceTagResource.ValidateResourceId(id);
                return new ServiceTagResource(client, id);
            }
            );
        }
        #endregion

        #region SchemaContractResource
        /// <summary>
        /// Gets an object representing a <see cref="SchemaContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SchemaContractResource.CreateResourceIdentifier" /> to create a <see cref="SchemaContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SchemaContractResource" /> object. </returns>
        public static SchemaContractResource GetSchemaContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SchemaContractResource.ValidateResourceId(id);
                return new SchemaContractResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceApiDiagnosticResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceApiDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceApiDiagnosticResource.CreateResourceIdentifier" /> to create a <see cref="ServiceApiDiagnosticResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiDiagnosticResource" /> object. </returns>
        public static ServiceApiDiagnosticResource GetServiceApiDiagnosticResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceApiDiagnosticResource.ValidateResourceId(id);
                return new ServiceApiDiagnosticResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceDiagnosticResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceDiagnosticResource.CreateResourceIdentifier" /> to create a <see cref="ServiceDiagnosticResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceDiagnosticResource" /> object. </returns>
        public static ServiceDiagnosticResource GetServiceDiagnosticResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceDiagnosticResource.ValidateResourceId(id);
                return new ServiceDiagnosticResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceApiIssueResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceApiIssueResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceApiIssueResource.CreateResourceIdentifier" /> to create a <see cref="ServiceApiIssueResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiIssueResource" /> object. </returns>
        public static ServiceApiIssueResource GetServiceApiIssueResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceApiIssueResource.ValidateResourceId(id);
                return new ServiceApiIssueResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceIssueResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceIssueResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceIssueResource.CreateResourceIdentifier" /> to create a <see cref="ServiceIssueResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceIssueResource" /> object. </returns>
        public static ServiceIssueResource GetServiceIssueResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceIssueResource.ValidateResourceId(id);
                return new ServiceIssueResource(client, id);
            }
            );
        }
        #endregion

        #region IssueCommentContractResource
        /// <summary>
        /// Gets an object representing an <see cref="IssueCommentContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IssueCommentContractResource.CreateResourceIdentifier" /> to create an <see cref="IssueCommentContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IssueCommentContractResource" /> object. </returns>
        public static IssueCommentContractResource GetIssueCommentContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IssueCommentContractResource.ValidateResourceId(id);
                return new IssueCommentContractResource(client, id);
            }
            );
        }
        #endregion

        #region IssueAttachmentContractResource
        /// <summary>
        /// Gets an object representing an <see cref="IssueAttachmentContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IssueAttachmentContractResource.CreateResourceIdentifier" /> to create an <see cref="IssueAttachmentContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IssueAttachmentContractResource" /> object. </returns>
        public static IssueAttachmentContractResource GetIssueAttachmentContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IssueAttachmentContractResource.ValidateResourceId(id);
                return new IssueAttachmentContractResource(client, id);
            }
            );
        }
        #endregion

        #region TagDescriptionContractResource
        /// <summary>
        /// Gets an object representing a <see cref="TagDescriptionContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TagDescriptionContractResource.CreateResourceIdentifier" /> to create a <see cref="TagDescriptionContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TagDescriptionContractResource" /> object. </returns>
        public static TagDescriptionContractResource GetTagDescriptionContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                TagDescriptionContractResource.ValidateResourceId(id);
                return new TagDescriptionContractResource(client, id);
            }
            );
        }
        #endregion

        #region ApiVersionSetContractResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiVersionSetContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiVersionSetContractResource.CreateResourceIdentifier" /> to create an <see cref="ApiVersionSetContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiVersionSetContractResource" /> object. </returns>
        public static ApiVersionSetContractResource GetApiVersionSetContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiVersionSetContractResource.ValidateResourceId(id);
                return new ApiVersionSetContractResource(client, id);
            }
            );
        }
        #endregion

        #region AuthorizationServerContractResource
        /// <summary>
        /// Gets an object representing an <see cref="AuthorizationServerContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AuthorizationServerContractResource.CreateResourceIdentifier" /> to create an <see cref="AuthorizationServerContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AuthorizationServerContractResource" /> object. </returns>
        public static AuthorizationServerContractResource GetAuthorizationServerContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AuthorizationServerContractResource.ValidateResourceId(id);
                return new AuthorizationServerContractResource(client, id);
            }
            );
        }
        #endregion

        #region BackendContractResource
        /// <summary>
        /// Gets an object representing a <see cref="BackendContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="BackendContractResource.CreateResourceIdentifier" /> to create a <see cref="BackendContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BackendContractResource" /> object. </returns>
        public static BackendContractResource GetBackendContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BackendContractResource.ValidateResourceId(id);
                return new BackendContractResource(client, id);
            }
            );
        }
        #endregion

        #region CacheContractResource
        /// <summary>
        /// Gets an object representing a <see cref="CacheContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="CacheContractResource.CreateResourceIdentifier" /> to create a <see cref="CacheContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CacheContractResource" /> object. </returns>
        public static CacheContractResource GetCacheContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                CacheContractResource.ValidateResourceId(id);
                return new CacheContractResource(client, id);
            }
            );
        }
        #endregion

        #region CertificateContractResource
        /// <summary>
        /// Gets an object representing a <see cref="CertificateContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="CertificateContractResource.CreateResourceIdentifier" /> to create a <see cref="CertificateContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CertificateContractResource" /> object. </returns>
        public static CertificateContractResource GetCertificateContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                CertificateContractResource.ValidateResourceId(id);
                return new CertificateContractResource(client, id);
            }
            );
        }
        #endregion

        #region ContentTypeContractResource
        /// <summary>
        /// Gets an object representing a <see cref="ContentTypeContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ContentTypeContractResource.CreateResourceIdentifier" /> to create a <see cref="ContentTypeContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ContentTypeContractResource" /> object. </returns>
        public static ContentTypeContractResource GetContentTypeContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ContentTypeContractResource.ValidateResourceId(id);
                return new ContentTypeContractResource(client, id);
            }
            );
        }
        #endregion

        #region ContentItemContractResource
        /// <summary>
        /// Gets an object representing a <see cref="ContentItemContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ContentItemContractResource.CreateResourceIdentifier" /> to create a <see cref="ContentItemContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ContentItemContractResource" /> object. </returns>
        public static ContentItemContractResource GetContentItemContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ContentItemContractResource.ValidateResourceId(id);
                return new ContentItemContractResource(client, id);
            }
            );
        }
        #endregion

        #region DeletedServiceContractResource
        /// <summary>
        /// Gets an object representing a <see cref="DeletedServiceContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DeletedServiceContractResource.CreateResourceIdentifier" /> to create a <see cref="DeletedServiceContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DeletedServiceContractResource" /> object. </returns>
        public static DeletedServiceContractResource GetDeletedServiceContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DeletedServiceContractResource.ValidateResourceId(id);
                return new DeletedServiceContractResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementServiceResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementServiceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementServiceResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementServiceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementServiceResource" /> object. </returns>
        public static ApiManagementServiceResource GetApiManagementServiceResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementServiceResource.ValidateResourceId(id);
                return new ApiManagementServiceResource(client, id);
            }
            );
        }
        #endregion

        #region EmailTemplateContractResource
        /// <summary>
        /// Gets an object representing an <see cref="EmailTemplateContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="EmailTemplateContractResource.CreateResourceIdentifier" /> to create an <see cref="EmailTemplateContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EmailTemplateContractResource" /> object. </returns>
        public static EmailTemplateContractResource GetEmailTemplateContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                EmailTemplateContractResource.ValidateResourceId(id);
                return new EmailTemplateContractResource(client, id);
            }
            );
        }
        #endregion

        #region GatewayContractResource
        /// <summary>
        /// Gets an object representing a <see cref="GatewayContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GatewayContractResource.CreateResourceIdentifier" /> to create a <see cref="GatewayContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GatewayContractResource" /> object. </returns>
        public static GatewayContractResource GetGatewayContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GatewayContractResource.ValidateResourceId(id);
                return new GatewayContractResource(client, id);
            }
            );
        }
        #endregion

        #region GatewayHostnameConfigurationContractResource
        /// <summary>
        /// Gets an object representing a <see cref="GatewayHostnameConfigurationContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GatewayHostnameConfigurationContractResource.CreateResourceIdentifier" /> to create a <see cref="GatewayHostnameConfigurationContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GatewayHostnameConfigurationContractResource" /> object. </returns>
        public static GatewayHostnameConfigurationContractResource GetGatewayHostnameConfigurationContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GatewayHostnameConfigurationContractResource.ValidateResourceId(id);
                return new GatewayHostnameConfigurationContractResource(client, id);
            }
            );
        }
        #endregion

        #region GatewayCertificateAuthorityContractResource
        /// <summary>
        /// Gets an object representing a <see cref="GatewayCertificateAuthorityContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GatewayCertificateAuthorityContractResource.CreateResourceIdentifier" /> to create a <see cref="GatewayCertificateAuthorityContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GatewayCertificateAuthorityContractResource" /> object. </returns>
        public static GatewayCertificateAuthorityContractResource GetGatewayCertificateAuthorityContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GatewayCertificateAuthorityContractResource.ValidateResourceId(id);
                return new GatewayCertificateAuthorityContractResource(client, id);
            }
            );
        }
        #endregion

        #region GroupContractResource
        /// <summary>
        /// Gets an object representing a <see cref="GroupContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GroupContractResource.CreateResourceIdentifier" /> to create a <see cref="GroupContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GroupContractResource" /> object. </returns>
        public static GroupContractResource GetGroupContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GroupContractResource.ValidateResourceId(id);
                return new GroupContractResource(client, id);
            }
            );
        }
        #endregion

        #region IdentityProviderContractResource
        /// <summary>
        /// Gets an object representing an <see cref="IdentityProviderContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IdentityProviderContractResource.CreateResourceIdentifier" /> to create an <see cref="IdentityProviderContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IdentityProviderContractResource" /> object. </returns>
        public static IdentityProviderContractResource GetIdentityProviderContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IdentityProviderContractResource.ValidateResourceId(id);
                return new IdentityProviderContractResource(client, id);
            }
            );
        }
        #endregion

        #region LoggerContractResource
        /// <summary>
        /// Gets an object representing a <see cref="LoggerContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="LoggerContractResource.CreateResourceIdentifier" /> to create a <see cref="LoggerContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LoggerContractResource" /> object. </returns>
        public static LoggerContractResource GetLoggerContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                LoggerContractResource.ValidateResourceId(id);
                return new LoggerContractResource(client, id);
            }
            );
        }
        #endregion

        #region NamedValueContractResource
        /// <summary>
        /// Gets an object representing a <see cref="NamedValueContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NamedValueContractResource.CreateResourceIdentifier" /> to create a <see cref="NamedValueContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NamedValueContractResource" /> object. </returns>
        public static NamedValueContractResource GetNamedValueContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NamedValueContractResource.ValidateResourceId(id);
                return new NamedValueContractResource(client, id);
            }
            );
        }
        #endregion

        #region NotificationContractResource
        /// <summary>
        /// Gets an object representing a <see cref="NotificationContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NotificationContractResource.CreateResourceIdentifier" /> to create a <see cref="NotificationContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NotificationContractResource" /> object. </returns>
        public static NotificationContractResource GetNotificationContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NotificationContractResource.ValidateResourceId(id);
                return new NotificationContractResource(client, id);
            }
            );
        }
        #endregion

        #region OpenIdConnectProviderContractResource
        /// <summary>
        /// Gets an object representing an <see cref="OpenIdConnectProviderContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="OpenIdConnectProviderContractResource.CreateResourceIdentifier" /> to create an <see cref="OpenIdConnectProviderContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OpenIdConnectProviderContractResource" /> object. </returns>
        public static OpenIdConnectProviderContractResource GetOpenIdConnectProviderContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                OpenIdConnectProviderContractResource.ValidateResourceId(id);
                return new OpenIdConnectProviderContractResource(client, id);
            }
            );
        }
        #endregion

        #region PortalRevisionContractResource
        /// <summary>
        /// Gets an object representing a <see cref="PortalRevisionContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PortalRevisionContractResource.CreateResourceIdentifier" /> to create a <see cref="PortalRevisionContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalRevisionContractResource" /> object. </returns>
        public static PortalRevisionContractResource GetPortalRevisionContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PortalRevisionContractResource.ValidateResourceId(id);
                return new PortalRevisionContractResource(client, id);
            }
            );
        }
        #endregion

        #region PortalSigninSettingsResource
        /// <summary>
        /// Gets an object representing a <see cref="PortalSigninSettingsResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PortalSigninSettingsResource.CreateResourceIdentifier" /> to create a <see cref="PortalSigninSettingsResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalSigninSettingsResource" /> object. </returns>
        public static PortalSigninSettingsResource GetPortalSigninSettingsResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PortalSigninSettingsResource.ValidateResourceId(id);
                return new PortalSigninSettingsResource(client, id);
            }
            );
        }
        #endregion

        #region PortalSignupSettingsResource
        /// <summary>
        /// Gets an object representing a <see cref="PortalSignupSettingsResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PortalSignupSettingsResource.CreateResourceIdentifier" /> to create a <see cref="PortalSignupSettingsResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalSignupSettingsResource" /> object. </returns>
        public static PortalSignupSettingsResource GetPortalSignupSettingsResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PortalSignupSettingsResource.ValidateResourceId(id);
                return new PortalSignupSettingsResource(client, id);
            }
            );
        }
        #endregion

        #region PortalDelegationSettingsResource
        /// <summary>
        /// Gets an object representing a <see cref="PortalDelegationSettingsResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PortalDelegationSettingsResource.CreateResourceIdentifier" /> to create a <see cref="PortalDelegationSettingsResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalDelegationSettingsResource" /> object. </returns>
        public static PortalDelegationSettingsResource GetPortalDelegationSettingsResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PortalDelegationSettingsResource.ValidateResourceId(id);
                return new PortalDelegationSettingsResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementPrivateEndpointConnectionResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementPrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementPrivateEndpointConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementPrivateEndpointConnectionResource" /> object. </returns>
        public static ApiManagementPrivateEndpointConnectionResource GetApiManagementPrivateEndpointConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementPrivateEndpointConnectionResource.ValidateResourceId(id);
                return new ApiManagementPrivateEndpointConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementPrivateLinkResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementPrivateLinkResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementPrivateLinkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementPrivateLinkResource" /> object. </returns>
        public static ApiManagementPrivateLinkResource GetApiManagementPrivateLinkResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementPrivateLinkResource.ValidateResourceId(id);
                return new ApiManagementPrivateLinkResource(client, id);
            }
            );
        }
        #endregion

        #region ProductContractResource
        /// <summary>
        /// Gets an object representing a <see cref="ProductContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ProductContractResource.CreateResourceIdentifier" /> to create a <see cref="ProductContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ProductContractResource" /> object. </returns>
        public static ProductContractResource GetProductContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ProductContractResource.ValidateResourceId(id);
                return new ProductContractResource(client, id);
            }
            );
        }
        #endregion

        #region GlobalSchemaContractResource
        /// <summary>
        /// Gets an object representing a <see cref="GlobalSchemaContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GlobalSchemaContractResource.CreateResourceIdentifier" /> to create a <see cref="GlobalSchemaContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GlobalSchemaContractResource" /> object. </returns>
        public static GlobalSchemaContractResource GetGlobalSchemaContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GlobalSchemaContractResource.ValidateResourceId(id);
                return new GlobalSchemaContractResource(client, id);
            }
            );
        }
        #endregion

        #region TenantSettingsContractResource
        /// <summary>
        /// Gets an object representing a <see cref="TenantSettingsContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TenantSettingsContractResource.CreateResourceIdentifier" /> to create a <see cref="TenantSettingsContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantSettingsContractResource" /> object. </returns>
        public static TenantSettingsContractResource GetTenantSettingsContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                TenantSettingsContractResource.ValidateResourceId(id);
                return new TenantSettingsContractResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceSubscriptionResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceSubscriptionResource.CreateResourceIdentifier" /> to create a <see cref="ServiceSubscriptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceSubscriptionResource" /> object. </returns>
        public static ServiceSubscriptionResource GetServiceSubscriptionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceSubscriptionResource.ValidateResourceId(id);
                return new ServiceSubscriptionResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceUserSubscriptionResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceUserSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceUserSubscriptionResource.CreateResourceIdentifier" /> to create a <see cref="ServiceUserSubscriptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceUserSubscriptionResource" /> object. </returns>
        public static ServiceUserSubscriptionResource GetServiceUserSubscriptionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceUserSubscriptionResource.ValidateResourceId(id);
                return new ServiceUserSubscriptionResource(client, id);
            }
            );
        }
        #endregion

        #region AccessInformationContractResource
        /// <summary>
        /// Gets an object representing an <see cref="AccessInformationContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AccessInformationContractResource.CreateResourceIdentifier" /> to create an <see cref="AccessInformationContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AccessInformationContractResource" /> object. </returns>
        public static AccessInformationContractResource GetAccessInformationContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AccessInformationContractResource.ValidateResourceId(id);
                return new AccessInformationContractResource(client, id);
            }
            );
        }
        #endregion

        #region UserContractResource
        /// <summary>
        /// Gets an object representing an <see cref="UserContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="UserContractResource.CreateResourceIdentifier" /> to create an <see cref="UserContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="UserContractResource" /> object. </returns>
        public static UserContractResource GetUserContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                UserContractResource.ValidateResourceId(id);
                return new UserContractResource(client, id);
            }
            );
        }
        #endregion
    }
}
