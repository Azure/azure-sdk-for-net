// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.ApiManagement.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ApiManagement
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ApiManagement. </summary>
    public static partial class ApiManagementExtensions
    {
        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of DeletedServiceContractResources in the SubscriptionResource. </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of DeletedServiceContractResources and their operations over a DeletedServiceContractResource. </returns>
        public static DeletedServiceContractCollection GetDeletedServiceContracts(this SubscriptionResource subscriptionResource)
        {
            return GetExtensionClient(subscriptionResource).GetDeletedServiceContracts();
        }

        /// <summary>
        /// Get soft-deleted Api Management Service by name.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}
        /// Operation Id: DeletedServices_GetByName
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location of the deleted API Management service. </param>
        /// <param name="serviceName"> The name of the API Management service. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<DeletedServiceContractResource>> GetDeletedServiceContractAsync(this SubscriptionResource subscriptionResource, AzureLocation location, string serviceName, CancellationToken cancellationToken = default)
        {
            return await subscriptionResource.GetDeletedServiceContracts().GetAsync(location, serviceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get soft-deleted Api Management Service by name.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}
        /// Operation Id: DeletedServices_GetByName
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The location of the deleted API Management service. </param>
        /// <param name="serviceName"> The name of the API Management service. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<DeletedServiceContractResource> GetDeletedServiceContract(this SubscriptionResource subscriptionResource, AzureLocation location, string serviceName, CancellationToken cancellationToken = default)
        {
            return subscriptionResource.GetDeletedServiceContracts().Get(location, serviceName, cancellationToken);
        }

        /// <summary>
        /// Lists all soft-deleted services available for undelete for the given subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/deletedservices
        /// Operation Id: DeletedServices_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="DeletedServiceContractResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<DeletedServiceContractResource> GetDeletedServiceContractsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetDeletedServiceContractsAsync(cancellationToken);
        }

        /// <summary>
        /// Lists all soft-deleted services available for undelete for the given subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/deletedservices
        /// Operation Id: DeletedServices_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="DeletedServiceContractResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<DeletedServiceContractResource> GetDeletedServiceContracts(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetDeletedServiceContracts(cancellationToken);
        }

        /// <summary>
        /// Lists all API Management services within an Azure subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service
        /// Operation Id: ApiManagementService_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="ApiManagementServiceResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<ApiManagementServiceResource> GetApiManagementServicesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetApiManagementServicesAsync(cancellationToken);
        }

        /// <summary>
        /// Lists all API Management services within an Azure subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service
        /// Operation Id: ApiManagementService_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="ApiManagementServiceResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<ApiManagementServiceResource> GetApiManagementServices(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetApiManagementServices(cancellationToken);
        }

        /// <summary>
        /// Checks availability and correctness of a name for an API Management service.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability
        /// Operation Id: ApiManagementService_CheckNameAvailability
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="content"> Parameters supplied to the CheckNameAvailability operation. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        public static async Task<Response<ApiManagementServiceNameAvailabilityResult>> CheckNameAvailabilityApiManagementServiceAsync(this SubscriptionResource subscriptionResource, ApiManagementServiceCheckNameAvailabilityContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            return await GetExtensionClient(subscriptionResource).CheckNameAvailabilityApiManagementServiceAsync(content, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Checks availability and correctness of a name for an API Management service.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability
        /// Operation Id: ApiManagementService_CheckNameAvailability
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="content"> Parameters supplied to the CheckNameAvailability operation. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        public static Response<ApiManagementServiceNameAvailabilityResult> CheckNameAvailabilityApiManagementService(this SubscriptionResource subscriptionResource, ApiManagementServiceCheckNameAvailabilityContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            return GetExtensionClient(subscriptionResource).CheckNameAvailabilityApiManagementService(content, cancellationToken);
        }

        /// <summary>
        /// Get the custom domain ownership identifier for an API Management service.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/getDomainOwnershipIdentifier
        /// Operation Id: ApiManagementService_GetDomainOwnershipIdentifier
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public static async Task<Response<ApiManagementServiceGetDomainOwnershipIdentifierResult>> GetDomainOwnershipIdentifierApiManagementServiceAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return await GetExtensionClient(subscriptionResource).GetDomainOwnershipIdentifierApiManagementServiceAsync(cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get the custom domain ownership identifier for an API Management service.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/getDomainOwnershipIdentifier
        /// Operation Id: ApiManagementService_GetDomainOwnershipIdentifier
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public static Response<ApiManagementServiceGetDomainOwnershipIdentifierResult> GetDomainOwnershipIdentifierApiManagementService(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetDomainOwnershipIdentifierApiManagementService(cancellationToken);
        }

        /// <summary>
        /// Gets the list of Microsoft.ApiManagement SKUs available for your Subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/skus
        /// Operation Id: ApiManagementSkus_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="ApiManagementSku" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<ApiManagementSku> GetApiManagementSkusAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetApiManagementSkusAsync(cancellationToken);
        }

        /// <summary>
        /// Gets the list of Microsoft.ApiManagement SKUs available for your Subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/skus
        /// Operation Id: ApiManagementSkus_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="ApiManagementSku" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<ApiManagementSku> GetApiManagementSkus(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetApiManagementSkus(cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of ApiManagementServiceResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of ApiManagementServiceResources and their operations over a ApiManagementServiceResource. </returns>
        public static ApiManagementServiceCollection GetApiManagementServices(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetApiManagementServices();
        }

        /// <summary>
        /// Gets an API Management service resource description.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
        /// Operation Id: ApiManagementService_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="serviceName"> The name of the API Management service. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<ApiManagementServiceResource>> GetApiManagementServiceAsync(this ResourceGroupResource resourceGroupResource, string serviceName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetApiManagementServices().GetAsync(serviceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets an API Management service resource description.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
        /// Operation Id: ApiManagementService_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="serviceName"> The name of the API Management service. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="serviceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<ApiManagementServiceResource> GetApiManagementService(this ResourceGroupResource resourceGroupResource, string serviceName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetApiManagementServices().Get(serviceName, cancellationToken);
        }

        #region ApiResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiResource.CreateResourceIdentifier" /> to create an <see cref="ApiResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiResource" /> object. </returns>
        public static ApiResource GetApiResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiResource.ValidateResourceId(id);
                return new ApiResource(client, id);
            }
            );
        }
        #endregion

        #region ApiReleaseResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiReleaseResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiReleaseResource.CreateResourceIdentifier" /> to create an <see cref="ApiReleaseResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiReleaseResource" /> object. </returns>
        public static ApiReleaseResource GetApiReleaseResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiReleaseResource.ValidateResourceId(id);
                return new ApiReleaseResource(client, id);
            }
            );
        }
        #endregion

        #region ApiOperationResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiOperationResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiOperationResource.CreateResourceIdentifier" /> to create an <see cref="ApiOperationResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiOperationResource" /> object. </returns>
        public static ApiOperationResource GetApiOperationResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiOperationResource.ValidateResourceId(id);
                return new ApiOperationResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceApiOperationPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceApiOperationPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceApiOperationPolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServiceApiOperationPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiOperationPolicyResource" /> object. </returns>
        public static ServiceApiOperationPolicyResource GetServiceApiOperationPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceApiOperationPolicyResource.ValidateResourceId(id);
                return new ServiceApiOperationPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ApiPolicyResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiPolicyResource.CreateResourceIdentifier" /> to create an <see cref="ApiPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiPolicyResource" /> object. </returns>
        public static ApiPolicyResource GetApiPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiPolicyResource.ValidateResourceId(id);
                return new ApiPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServicePolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServicePolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServicePolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServicePolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServicePolicyResource" /> object. </returns>
        public static ServicePolicyResource GetServicePolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServicePolicyResource.ValidateResourceId(id);
                return new ServicePolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceProductPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceProductPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceProductPolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServiceProductPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceProductPolicyResource" /> object. </returns>
        public static ServiceProductPolicyResource GetServiceProductPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceProductPolicyResource.ValidateResourceId(id);
                return new ServiceProductPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceApiOperationTagResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceApiOperationTagResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceApiOperationTagResource.CreateResourceIdentifier" /> to create a <see cref="ServiceApiOperationTagResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceApiOperationTagResource" /> object. </returns>
        public static ServiceApiOperationTagResource GetServiceApiOperationTagResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceApiOperationTagResource.ValidateResourceId(id);
                return new ServiceApiOperationTagResource(client, id);
            }
            );
        }
        #endregion

        #region ApiTagResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiTagResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiTagResource.CreateResourceIdentifier" /> to create an <see cref="ApiTagResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiTagResource" /> object. </returns>
        public static ApiTagResource GetApiTagResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiTagResource.ValidateResourceId(id);
                return new ApiTagResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceProductTagResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceProductTagResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceProductTagResource.CreateResourceIdentifier" /> to create a <see cref="ServiceProductTagResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceProductTagResource" /> object. </returns>
        public static ServiceProductTagResource GetServiceProductTagResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceProductTagResource.ValidateResourceId(id);
                return new ServiceProductTagResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceTagResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceTagResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceTagResource.CreateResourceIdentifier" /> to create a <see cref="ServiceTagResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceTagResource" /> object. </returns>
        public static ServiceTagResource GetServiceTagResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceTagResource.ValidateResourceId(id);
                return new ServiceTagResource(client, id);
            }
            );
        }
        #endregion

        #region ApiSchemaResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiSchemaResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiSchemaResource.CreateResourceIdentifier" /> to create an <see cref="ApiSchemaResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiSchemaResource" /> object. </returns>
        public static ApiSchemaResource GetApiSchemaResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiSchemaResource.ValidateResourceId(id);
                return new ApiSchemaResource(client, id);
            }
            );
        }
        #endregion

        #region ApiDiagnosticResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiDiagnosticResource.CreateResourceIdentifier" /> to create an <see cref="ApiDiagnosticResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiDiagnosticResource" /> object. </returns>
        public static ApiDiagnosticResource GetApiDiagnosticResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiDiagnosticResource.ValidateResourceId(id);
                return new ApiDiagnosticResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceDiagnosticResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceDiagnosticResource.CreateResourceIdentifier" /> to create a <see cref="ServiceDiagnosticResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceDiagnosticResource" /> object. </returns>
        public static ServiceDiagnosticResource GetServiceDiagnosticResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceDiagnosticResource.ValidateResourceId(id);
                return new ServiceDiagnosticResource(client, id);
            }
            );
        }
        #endregion

        #region ApiIssueResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiIssueResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiIssueResource.CreateResourceIdentifier" /> to create an <see cref="ApiIssueResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiIssueResource" /> object. </returns>
        public static ApiIssueResource GetApiIssueResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiIssueResource.ValidateResourceId(id);
                return new ApiIssueResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceIssueResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceIssueResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceIssueResource.CreateResourceIdentifier" /> to create a <see cref="ServiceIssueResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceIssueResource" /> object. </returns>
        public static ServiceIssueResource GetServiceIssueResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceIssueResource.ValidateResourceId(id);
                return new ServiceIssueResource(client, id);
            }
            );
        }
        #endregion

        #region IssueCommentContractResource
        /// <summary>
        /// Gets an object representing an <see cref="IssueCommentContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IssueCommentContractResource.CreateResourceIdentifier" /> to create an <see cref="IssueCommentContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IssueCommentContractResource" /> object. </returns>
        public static IssueCommentContractResource GetIssueCommentContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IssueCommentContractResource.ValidateResourceId(id);
                return new IssueCommentContractResource(client, id);
            }
            );
        }
        #endregion

        #region IssueAttachmentContractResource
        /// <summary>
        /// Gets an object representing an <see cref="IssueAttachmentContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IssueAttachmentContractResource.CreateResourceIdentifier" /> to create an <see cref="IssueAttachmentContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IssueAttachmentContractResource" /> object. </returns>
        public static IssueAttachmentContractResource GetIssueAttachmentContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IssueAttachmentContractResource.ValidateResourceId(id);
                return new IssueAttachmentContractResource(client, id);
            }
            );
        }
        #endregion

        #region ApiTagDescriptionResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiTagDescriptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiTagDescriptionResource.CreateResourceIdentifier" /> to create an <see cref="ApiTagDescriptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiTagDescriptionResource" /> object. </returns>
        public static ApiTagDescriptionResource GetApiTagDescriptionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiTagDescriptionResource.ValidateResourceId(id);
                return new ApiTagDescriptionResource(client, id);
            }
            );
        }
        #endregion

        #region ApiVersionSetResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiVersionSetResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiVersionSetResource.CreateResourceIdentifier" /> to create an <see cref="ApiVersionSetResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiVersionSetResource" /> object. </returns>
        public static ApiVersionSetResource GetApiVersionSetResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiVersionSetResource.ValidateResourceId(id);
                return new ApiVersionSetResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementAuthorizationServerResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementAuthorizationServerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementAuthorizationServerResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementAuthorizationServerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementAuthorizationServerResource" /> object. </returns>
        public static ApiManagementAuthorizationServerResource GetApiManagementAuthorizationServerResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementAuthorizationServerResource.ValidateResourceId(id);
                return new ApiManagementAuthorizationServerResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementBackendResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementBackendResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementBackendResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementBackendResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementBackendResource" /> object. </returns>
        public static ApiManagementBackendResource GetApiManagementBackendResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementBackendResource.ValidateResourceId(id);
                return new ApiManagementBackendResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementCacheResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementCacheResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementCacheResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementCacheResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementCacheResource" /> object. </returns>
        public static ApiManagementCacheResource GetApiManagementCacheResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementCacheResource.ValidateResourceId(id);
                return new ApiManagementCacheResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementCertificateResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementCertificateResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementCertificateResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementCertificateResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementCertificateResource" /> object. </returns>
        public static ApiManagementCertificateResource GetApiManagementCertificateResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementCertificateResource.ValidateResourceId(id);
                return new ApiManagementCertificateResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementContentTypeResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementContentTypeResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementContentTypeResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementContentTypeResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementContentTypeResource" /> object. </returns>
        public static ApiManagementContentTypeResource GetApiManagementContentTypeResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementContentTypeResource.ValidateResourceId(id);
                return new ApiManagementContentTypeResource(client, id);
            }
            );
        }
        #endregion

        #region ContentItemContractResource
        /// <summary>
        /// Gets an object representing a <see cref="ContentItemContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ContentItemContractResource.CreateResourceIdentifier" /> to create a <see cref="ContentItemContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ContentItemContractResource" /> object. </returns>
        public static ContentItemContractResource GetContentItemContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ContentItemContractResource.ValidateResourceId(id);
                return new ContentItemContractResource(client, id);
            }
            );
        }
        #endregion

        #region DeletedServiceContractResource
        /// <summary>
        /// Gets an object representing a <see cref="DeletedServiceContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DeletedServiceContractResource.CreateResourceIdentifier" /> to create a <see cref="DeletedServiceContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DeletedServiceContractResource" /> object. </returns>
        public static DeletedServiceContractResource GetDeletedServiceContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DeletedServiceContractResource.ValidateResourceId(id);
                return new DeletedServiceContractResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementServiceResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementServiceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementServiceResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementServiceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementServiceResource" /> object. </returns>
        public static ApiManagementServiceResource GetApiManagementServiceResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementServiceResource.ValidateResourceId(id);
                return new ApiManagementServiceResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementEmailTemplateResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementEmailTemplateResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementEmailTemplateResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementEmailTemplateResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementEmailTemplateResource" /> object. </returns>
        public static ApiManagementEmailTemplateResource GetApiManagementEmailTemplateResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementEmailTemplateResource.ValidateResourceId(id);
                return new ApiManagementEmailTemplateResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementGatewayResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementGatewayResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementGatewayResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementGatewayResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementGatewayResource" /> object. </returns>
        public static ApiManagementGatewayResource GetApiManagementGatewayResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementGatewayResource.ValidateResourceId(id);
                return new ApiManagementGatewayResource(client, id);
            }
            );
        }
        #endregion

        #region GatewayHostnameConfigurationContractResource
        /// <summary>
        /// Gets an object representing a <see cref="GatewayHostnameConfigurationContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GatewayHostnameConfigurationContractResource.CreateResourceIdentifier" /> to create a <see cref="GatewayHostnameConfigurationContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GatewayHostnameConfigurationContractResource" /> object. </returns>
        public static GatewayHostnameConfigurationContractResource GetGatewayHostnameConfigurationContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GatewayHostnameConfigurationContractResource.ValidateResourceId(id);
                return new GatewayHostnameConfigurationContractResource(client, id);
            }
            );
        }
        #endregion

        #region GatewayCertificateAuthorityContractResource
        /// <summary>
        /// Gets an object representing a <see cref="GatewayCertificateAuthorityContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GatewayCertificateAuthorityContractResource.CreateResourceIdentifier" /> to create a <see cref="GatewayCertificateAuthorityContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GatewayCertificateAuthorityContractResource" /> object. </returns>
        public static GatewayCertificateAuthorityContractResource GetGatewayCertificateAuthorityContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GatewayCertificateAuthorityContractResource.ValidateResourceId(id);
                return new GatewayCertificateAuthorityContractResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementGroupResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementGroupResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementGroupResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementGroupResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementGroupResource" /> object. </returns>
        public static ApiManagementGroupResource GetApiManagementGroupResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementGroupResource.ValidateResourceId(id);
                return new ApiManagementGroupResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementIdentityProviderResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementIdentityProviderResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementIdentityProviderResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementIdentityProviderResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementIdentityProviderResource" /> object. </returns>
        public static ApiManagementIdentityProviderResource GetApiManagementIdentityProviderResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementIdentityProviderResource.ValidateResourceId(id);
                return new ApiManagementIdentityProviderResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementLoggerResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementLoggerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementLoggerResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementLoggerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementLoggerResource" /> object. </returns>
        public static ApiManagementLoggerResource GetApiManagementLoggerResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementLoggerResource.ValidateResourceId(id);
                return new ApiManagementLoggerResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementNamedValueResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementNamedValueResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementNamedValueResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementNamedValueResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementNamedValueResource" /> object. </returns>
        public static ApiManagementNamedValueResource GetApiManagementNamedValueResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementNamedValueResource.ValidateResourceId(id);
                return new ApiManagementNamedValueResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementNotificationResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementNotificationResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementNotificationResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementNotificationResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementNotificationResource" /> object. </returns>
        public static ApiManagementNotificationResource GetApiManagementNotificationResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementNotificationResource.ValidateResourceId(id);
                return new ApiManagementNotificationResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementOpenIdConnectProviderResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementOpenIdConnectProviderResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementOpenIdConnectProviderResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementOpenIdConnectProviderResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementOpenIdConnectProviderResource" /> object. </returns>
        public static ApiManagementOpenIdConnectProviderResource GetApiManagementOpenIdConnectProviderResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementOpenIdConnectProviderResource.ValidateResourceId(id);
                return new ApiManagementOpenIdConnectProviderResource(client, id);
            }
            );
        }
        #endregion

        #region PortalRevisionContractResource
        /// <summary>
        /// Gets an object representing a <see cref="PortalRevisionContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PortalRevisionContractResource.CreateResourceIdentifier" /> to create a <see cref="PortalRevisionContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalRevisionContractResource" /> object. </returns>
        public static PortalRevisionContractResource GetPortalRevisionContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PortalRevisionContractResource.ValidateResourceId(id);
                return new PortalRevisionContractResource(client, id);
            }
            );
        }
        #endregion

        #region PortalSigninSettingsResource
        /// <summary>
        /// Gets an object representing a <see cref="PortalSigninSettingsResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PortalSigninSettingsResource.CreateResourceIdentifier" /> to create a <see cref="PortalSigninSettingsResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalSigninSettingsResource" /> object. </returns>
        public static PortalSigninSettingsResource GetPortalSigninSettingsResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PortalSigninSettingsResource.ValidateResourceId(id);
                return new PortalSigninSettingsResource(client, id);
            }
            );
        }
        #endregion

        #region PortalSignupSettingsResource
        /// <summary>
        /// Gets an object representing a <see cref="PortalSignupSettingsResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PortalSignupSettingsResource.CreateResourceIdentifier" /> to create a <see cref="PortalSignupSettingsResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PortalSignupSettingsResource" /> object. </returns>
        public static PortalSignupSettingsResource GetPortalSignupSettingsResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PortalSignupSettingsResource.ValidateResourceId(id);
                return new PortalSignupSettingsResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementPortalDelegationSettingsResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementPortalDelegationSettingsResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementPortalDelegationSettingsResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementPortalDelegationSettingsResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementPortalDelegationSettingsResource" /> object. </returns>
        public static ApiManagementPortalDelegationSettingsResource GetApiManagementPortalDelegationSettingsResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementPortalDelegationSettingsResource.ValidateResourceId(id);
                return new ApiManagementPortalDelegationSettingsResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementPrivateEndpointConnectionResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementPrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementPrivateEndpointConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementPrivateEndpointConnectionResource" /> object. </returns>
        public static ApiManagementPrivateEndpointConnectionResource GetApiManagementPrivateEndpointConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementPrivateEndpointConnectionResource.ValidateResourceId(id);
                return new ApiManagementPrivateEndpointConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementPrivateLinkResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementPrivateLinkResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementPrivateLinkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementPrivateLinkResource" /> object. </returns>
        public static ApiManagementPrivateLinkResource GetApiManagementPrivateLinkResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementPrivateLinkResource.ValidateResourceId(id);
                return new ApiManagementPrivateLinkResource(client, id);
            }
            );
        }
        #endregion

        #region ProductContractResource
        /// <summary>
        /// Gets an object representing a <see cref="ProductContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ProductContractResource.CreateResourceIdentifier" /> to create a <see cref="ProductContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ProductContractResource" /> object. </returns>
        public static ProductContractResource GetProductContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ProductContractResource.ValidateResourceId(id);
                return new ProductContractResource(client, id);
            }
            );
        }
        #endregion

        #region ApiManagementGlobalSchemaResource
        /// <summary>
        /// Gets an object representing an <see cref="ApiManagementGlobalSchemaResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ApiManagementGlobalSchemaResource.CreateResourceIdentifier" /> to create an <see cref="ApiManagementGlobalSchemaResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApiManagementGlobalSchemaResource" /> object. </returns>
        public static ApiManagementGlobalSchemaResource GetApiManagementGlobalSchemaResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApiManagementGlobalSchemaResource.ValidateResourceId(id);
                return new ApiManagementGlobalSchemaResource(client, id);
            }
            );
        }
        #endregion

        #region TenantSettingsContractResource
        /// <summary>
        /// Gets an object representing a <see cref="TenantSettingsContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TenantSettingsContractResource.CreateResourceIdentifier" /> to create a <see cref="TenantSettingsContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantSettingsContractResource" /> object. </returns>
        public static TenantSettingsContractResource GetTenantSettingsContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                TenantSettingsContractResource.ValidateResourceId(id);
                return new TenantSettingsContractResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceSubscriptionResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceSubscriptionResource.CreateResourceIdentifier" /> to create a <see cref="ServiceSubscriptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceSubscriptionResource" /> object. </returns>
        public static ServiceSubscriptionResource GetServiceSubscriptionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceSubscriptionResource.ValidateResourceId(id);
                return new ServiceSubscriptionResource(client, id);
            }
            );
        }
        #endregion

        #region ServiceUserSubscriptionResource
        /// <summary>
        /// Gets an object representing a <see cref="ServiceUserSubscriptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServiceUserSubscriptionResource.CreateResourceIdentifier" /> to create a <see cref="ServiceUserSubscriptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceUserSubscriptionResource" /> object. </returns>
        public static ServiceUserSubscriptionResource GetServiceUserSubscriptionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceUserSubscriptionResource.ValidateResourceId(id);
                return new ServiceUserSubscriptionResource(client, id);
            }
            );
        }
        #endregion

        #region TenantAccessResource
        /// <summary>
        /// Gets an object representing a <see cref="TenantAccessResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TenantAccessResource.CreateResourceIdentifier" /> to create a <see cref="TenantAccessResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantAccessResource" /> object. </returns>
        public static TenantAccessResource GetTenantAccessResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                TenantAccessResource.ValidateResourceId(id);
                return new TenantAccessResource(client, id);
            }
            );
        }
        #endregion

        #region UserContractResource
        /// <summary>
        /// Gets an object representing an <see cref="UserContractResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="UserContractResource.CreateResourceIdentifier" /> to create an <see cref="UserContractResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="UserContractResource" /> object. </returns>
        public static UserContractResource GetUserContractResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                UserContractResource.ValidateResourceId(id);
                return new UserContractResource(client, id);
            }
            );
        }
        #endregion
    }
}
