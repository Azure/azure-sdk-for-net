// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.ManagedNetworkFabric;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ManagedNetworkFabric.Samples
{
    public partial class Sample_AccessControlListResource
    {
        // AccessControlLists_Get_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_AccessControlListsGetMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/AccessControlLists_Get_MinimumSet_Gen.json
            // this example is just showing the usage of "AccessControlLists_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AccessControlListResource created on azure
            // for more information of creating AccessControlListResource, please refer to the document of AccessControlListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string accessControlListName = "aclOne";
            ResourceIdentifier accessControlListResourceId = AccessControlListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accessControlListName);
            AccessControlListResource accessControlList = client.GetAccessControlListResource(accessControlListResourceId);

            // invoke the operation
            AccessControlListResource result = await accessControlList.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AccessControlListData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // AccessControlLists_Update_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_AccessControlListsUpdateMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/AccessControlLists_Update_MinimumSet_Gen.json
            // this example is just showing the usage of "AccessControlLists_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AccessControlListResource created on azure
            // for more information of creating AccessControlListResource, please refer to the document of AccessControlListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string accessControlListName = "aclOne";
            ResourceIdentifier accessControlListResourceId = AccessControlListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accessControlListName);
            AccessControlListResource accessControlList = client.GetAccessControlListResource(accessControlListResourceId);

            // invoke the operation
            AccessControlListPatch patch = new AccessControlListPatch()
            {
                AddressFamily = AddressFamily.IPv4,
                Conditions =
{
new AccessControlListPatchPropertiesConditionsItem(4,ConditionActionType.Allow,"1.1.1.2","21","2.2.2.3","65000",6)
},
            };
            AccessControlListResource result = await accessControlList.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AccessControlListData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // AccessControlLists_Delete_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_AccessControlListsDeleteMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/AccessControlLists_Delete_MinimumSet_Gen.json
            // this example is just showing the usage of "AccessControlLists_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AccessControlListResource created on azure
            // for more information of creating AccessControlListResource, please refer to the document of AccessControlListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "subscriptionId";
            string accessControlListName = "aclOne";
            ResourceIdentifier accessControlListResourceId = AccessControlListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, accessControlListName);
            AccessControlListResource accessControlList = client.GetAccessControlListResource(accessControlListResourceId);

            // invoke the operation
            await accessControlList.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // AccessControlLists_ListBySubscription_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAccessControlLists_AccessControlListsListBySubscriptionMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/AccessControlLists_ListBySubscription_MinimumSet_Gen.json
            // this example is just showing the usage of "AccessControlLists_ListBySubscription" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "subscriptionId";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (AccessControlListResource item in subscriptionResource.GetAccessControlListsAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                AccessControlListData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
