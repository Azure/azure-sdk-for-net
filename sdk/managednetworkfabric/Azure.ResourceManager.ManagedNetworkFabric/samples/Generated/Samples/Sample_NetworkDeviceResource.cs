// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.ManagedNetworkFabric;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ManagedNetworkFabric.Samples
{
    public partial class Sample_NetworkDeviceResource
    {
        // NetworkDevices_Get_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_NetworkDevicesGetMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            NetworkDeviceResource result = await networkDevice.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // NetworkDevices_Update_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_NetworkDevicesUpdateMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            NetworkDevicePatch patch = new NetworkDevicePatch()
            {
                Tags =
{
["keyID"] = "keyValue",
},
                Annotation = "null",
                HostName = "networkDeviceName",
                SerialNumber = "Arista;DCS-7280PR3-24;12.05;JPE21330382",
            };
            ArmOperation<NetworkDeviceResource> lro = await networkDevice.UpdateAsync(WaitUntil.Completed, patch);
            NetworkDeviceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // NetworkDevices_Delete_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_NetworkDevicesDeleteMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            await networkDevice.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // NetworkDevices_ListBySubscription_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetNetworkDevices_NetworkDevicesListBySubscriptionMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_ListBySubscription_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_ListBySubscription" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "subscriptionId";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (NetworkDeviceResource item in subscriptionResource.GetNetworkDevicesAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                NetworkDeviceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // NetworkDevices_reboot_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Reboot_NetworkDevicesRebootMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_reboot_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_reboot" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            await networkDevice.RebootAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // NetworkDevices_restoreConfig_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task RestoreConfig_NetworkDevicesRestoreConfigMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_restoreConfig_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_restoreConfig" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            await networkDevice.RestoreConfigAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // NetworkDevices_updateVersion_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task UpdateVersion_NetworkDevicesUpdateVersionMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_updateVersion_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_updateVersion" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            UpdateVersionProperties body = new UpdateVersionProperties("DefaultSku");
            await networkDevice.UpdateVersionAsync(WaitUntil.Completed, body);

            Console.WriteLine($"Succeeded");
        }

        // NetworkDevices_generateSupportPackage_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GenerateSupportPackage_NetworkDevicesGenerateSupportPackageMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_generateSupportPackage_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_generateSupportPackage" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            ArmOperation<SupportPackageProperties> lro = await networkDevice.GenerateSupportPackageAsync(WaitUntil.Completed);
            SupportPackageProperties result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        // NetworkDevices_updatePowerCycle_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task UpdatePowerCycle_NetworkDevicesUpdatePowerCycleMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_updatePowerCycle_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_updatePowerCycle" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            UpdatePowerCycleProperties body = new UpdatePowerCycleProperties(PowerEnd.Primary, State.On);
            await networkDevice.UpdatePowerCycleAsync(WaitUntil.Completed, body);

            Console.WriteLine($"Succeeded");
        }

        // NetworkDevices_getStatus_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetStatus_NetworkDevicesGetStatusMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkDevices_getStatus_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkDevices_getStatus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string networkDeviceName = "networkDeviceName";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            ArmOperation<GetDeviceStatusProperties> lro = await networkDevice.GetStatusAsync(WaitUntil.Completed);
            GetDeviceStatusProperties result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
