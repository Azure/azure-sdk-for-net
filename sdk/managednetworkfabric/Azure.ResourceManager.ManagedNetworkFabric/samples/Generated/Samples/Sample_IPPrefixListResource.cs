// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.ManagedNetworkFabric;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ManagedNetworkFabric.Samples
{
    public partial class Sample_IPPrefixListResource
    {
        // IpPrefixLists_Get_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_IpPrefixListsGetMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/IpPrefixLists_Get_MinimumSet_Gen.json
            // this example is just showing the usage of "IpPrefixLists_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this IPPrefixListResource created on azure
            // for more information of creating IPPrefixListResource, please refer to the document of IPPrefixListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string ipPrefixListName = "IpPrefixList1";
            ResourceIdentifier ipPrefixListResourceId = IPPrefixListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, ipPrefixListName);
            IPPrefixListResource ipPrefixList = client.GetIPPrefixListResource(ipPrefixListResourceId);

            // invoke the operation
            IPPrefixListResource result = await ipPrefixList.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            IPPrefixListData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // IpPrefixLists_Update_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_IpPrefixListsUpdateMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/IpPrefixLists_Update_MinimumSet_Gen.json
            // this example is just showing the usage of "IpPrefixLists_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this IPPrefixListResource created on azure
            // for more information of creating IPPrefixListResource, please refer to the document of IPPrefixListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string ipPrefixListName = "IpPrefixList1";
            ResourceIdentifier ipPrefixListResourceId = IPPrefixListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, ipPrefixListName);
            IPPrefixListResource ipPrefixList = client.GetIPPrefixListResource(ipPrefixListResourceId);

            // invoke the operation
            IPPrefixListPatch patch = new IPPrefixListPatch();
            IPPrefixListResource result = await ipPrefixList.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            IPPrefixListData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // IpPrefixLists_Delete_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_IpPrefixListsDeleteMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/IpPrefixLists_Delete_MinimumSet_Gen.json
            // this example is just showing the usage of "IpPrefixLists_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this IPPrefixListResource created on azure
            // for more information of creating IPPrefixListResource, please refer to the document of IPPrefixListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string ipPrefixListName = "IpPrefixList1";
            ResourceIdentifier ipPrefixListResourceId = IPPrefixListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, ipPrefixListName);
            IPPrefixListResource ipPrefixList = client.GetIPPrefixListResource(ipPrefixListResourceId);

            // invoke the operation
            await ipPrefixList.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // IpPrefixLists_ListBySubscription_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIPPrefixLists_IpPrefixListsListBySubscriptionMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/IpPrefixLists_ListBySubscription_MinimumSet_Gen.json
            // this example is just showing the usage of "IpPrefixLists_ListBySubscription" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "subscriptionId";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (IPPrefixListResource item in subscriptionResource.GetIPPrefixListsAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                IPPrefixListData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
