// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.ManagedNetworkFabric;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ManagedNetworkFabric.Samples
{
    public partial class Sample_IPCommunityListResource
    {
        // IpCommunityLists_Get_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_IpCommunityListsGetMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/IpCommunityLists_Get_MinimumSet_Gen.json
            // this example is just showing the usage of "IpCommunityLists_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this IPCommunityListResource created on azure
            // for more information of creating IPCommunityListResource, please refer to the document of IPCommunityListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string ipCommunityListName = "IpCommunityList1";
            ResourceIdentifier ipCommunityListResourceId = IPCommunityListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, ipCommunityListName);
            IPCommunityListResource ipCommunityList = client.GetIPCommunityListResource(ipCommunityListResourceId);

            // invoke the operation
            IPCommunityListResource result = await ipCommunityList.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            IPCommunityListData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // IpCommunityLists_Update_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_IpCommunityListsUpdateMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/IpCommunityLists_Update_MinimumSet_Gen.json
            // this example is just showing the usage of "IpCommunityLists_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this IPCommunityListResource created on azure
            // for more information of creating IPCommunityListResource, please refer to the document of IPCommunityListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string ipCommunityListName = "IpCommunityList1";
            ResourceIdentifier ipCommunityListResourceId = IPCommunityListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, ipCommunityListName);
            IPCommunityListResource ipCommunityList = client.GetIPCommunityListResource(ipCommunityListResourceId);

            // invoke the operation
            IPCommunityListPatch patch = new IPCommunityListPatch();
            IPCommunityListResource result = await ipCommunityList.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            IPCommunityListData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // IpCommunityLists_Delete_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_IpCommunityListsDeleteMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/IpCommunityLists_Delete_MinimumSet_Gen.json
            // this example is just showing the usage of "IpCommunityLists_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this IPCommunityListResource created on azure
            // for more information of creating IPCommunityListResource, please refer to the document of IPCommunityListResource
            string subscriptionId = "subscriptionId";
            string resourceGroupName = "resourceGroupName";
            string ipCommunityListName = "IpCommunityList1";
            ResourceIdentifier ipCommunityListResourceId = IPCommunityListResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, ipCommunityListName);
            IPCommunityListResource ipCommunityList = client.GetIPCommunityListResource(ipCommunityListResourceId);

            // invoke the operation
            await ipCommunityList.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // IpCommunityLists_ListBySubscription_MinimumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIPCommunityLists_IpCommunityListsListBySubscriptionMinimumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/IpCommunityLists_ListBySubscription_MinimumSet_Gen.json
            // this example is just showing the usage of "IpCommunityLists_ListBySubscription" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "subscriptionId";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (IPCommunityListResource item in subscriptionResource.GetIPCommunityListsAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                IPCommunityListData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
