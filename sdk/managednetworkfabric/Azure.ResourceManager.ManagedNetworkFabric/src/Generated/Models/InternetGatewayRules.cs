// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ManagedNetworkFabric.Models
{
    /// <summary> Rules for the InternetGateways. </summary>
    public partial class InternetGatewayRules
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="InternetGatewayRules"/>. </summary>
        /// <param name="action"> Specify action. </param>
        public InternetGatewayRules(InternetGatewayRuleAction action)
        {
            Action = action;
            AddressList = new ChangeTrackingList<string>();
            DestinationAddressList = new ChangeTrackingList<string>();
            SourceAddressList = new ChangeTrackingList<string>();
            HeaderAddressList = new ChangeTrackingList<HeaderAddressProperties>();
        }

        /// <summary> Initializes a new instance of <see cref="InternetGatewayRules"/>. </summary>
        /// <param name="action"> Specify action. </param>
        /// <param name="addressList"> List of Addresses to be allowed or denied. </param>
        /// <param name="condition"> Specify rule condition. </param>
        /// <param name="destinationAddressList"> List of Addresses to be allowed or denied. </param>
        /// <param name="sourceAddressList"> List of source IPv4 and IPv6 address to be allowed or denied. </param>
        /// <param name="headerAddressList"> List of header Name and source addresses associated with the header. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal InternetGatewayRules(InternetGatewayRuleAction action, IList<string> addressList, RuleCondition? condition, IList<string> destinationAddressList, IList<string> sourceAddressList, IList<HeaderAddressProperties> headerAddressList, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Action = action;
            AddressList = addressList;
            Condition = condition;
            DestinationAddressList = destinationAddressList;
            SourceAddressList = sourceAddressList;
            HeaderAddressList = headerAddressList;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="InternetGatewayRules"/> for deserialization. </summary>
        internal InternetGatewayRules()
        {
        }

        /// <summary> Specify action. </summary>
        public InternetGatewayRuleAction Action { get; set; }
        /// <summary> List of Addresses to be allowed or denied. </summary>
        public IList<string> AddressList { get; }
        /// <summary> Specify rule condition. </summary>
        public RuleCondition? Condition { get; set; }
        /// <summary> List of Addresses to be allowed or denied. </summary>
        public IList<string> DestinationAddressList { get; }
        /// <summary> List of source IPv4 and IPv6 address to be allowed or denied. </summary>
        public IList<string> SourceAddressList { get; }
        /// <summary> List of header Name and source addresses associated with the header. </summary>
        public IList<HeaderAddressProperties> HeaderAddressList { get; }
    }
}
