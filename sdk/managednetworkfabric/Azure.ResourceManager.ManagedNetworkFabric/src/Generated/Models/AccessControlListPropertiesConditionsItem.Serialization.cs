// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ManagedNetworkFabric.Models
{
    public partial class AccessControlListPropertiesConditionsItem : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("sequenceNumber"u8);
            writer.WriteNumberValue(SequenceNumber);
            writer.WritePropertyName("action"u8);
            writer.WriteStringValue(Action.ToString());
            writer.WritePropertyName("destinationAddress"u8);
            writer.WriteStringValue(DestinationAddress);
            writer.WritePropertyName("destinationPort"u8);
            writer.WriteStringValue(DestinationPort);
            writer.WritePropertyName("sourceAddress"u8);
            writer.WriteStringValue(SourceAddress);
            writer.WritePropertyName("sourcePort"u8);
            writer.WriteStringValue(SourcePort);
            writer.WritePropertyName("protocol"u8);
            writer.WriteNumberValue(Protocol);
            if (Optional.IsDefined(Annotation))
            {
                writer.WritePropertyName("annotation"u8);
                writer.WriteStringValue(Annotation);
            }
            writer.WriteEndObject();
        }

        internal static AccessControlListPropertiesConditionsItem DeserializeAccessControlListPropertiesConditionsItem(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            int sequenceNumber = default;
            ConditionActionType action = default;
            string destinationAddress = default;
            string destinationPort = default;
            string sourceAddress = default;
            string sourcePort = default;
            int protocol = default;
            Optional<string> annotation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sequenceNumber"u8))
                {
                    sequenceNumber = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("action"u8))
                {
                    action = new ConditionActionType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("destinationAddress"u8))
                {
                    destinationAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("destinationPort"u8))
                {
                    destinationPort = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceAddress"u8))
                {
                    sourceAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourcePort"u8))
                {
                    sourcePort = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protocol"u8))
                {
                    protocol = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("annotation"u8))
                {
                    annotation = property.Value.GetString();
                    continue;
                }
            }
            return new AccessControlListPropertiesConditionsItem(annotation.Value, sequenceNumber, action, destinationAddress, destinationPort, sourceAddress, sourcePort, protocol);
        }
    }
}
