// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ManagedNetworkFabric.Models
{
    /// <summary> Role for the network device. </summary>
    public readonly partial struct NetworkDeviceRackRoleType : IEquatable<NetworkDeviceRackRoleType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="NetworkDeviceRackRoleType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public NetworkDeviceRackRoleType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CEValue = "CE";
        private const string ToRValue = "ToR";
        private const string NPBValue = "NPB";
        private const string TSValue = "TS";
        private const string ManagementValue = "Management";

        /// <summary> CE. </summary>
        public static NetworkDeviceRackRoleType CE { get; } = new NetworkDeviceRackRoleType(CEValue);
        /// <summary> ToR. </summary>
        public static NetworkDeviceRackRoleType ToR { get; } = new NetworkDeviceRackRoleType(ToRValue);
        /// <summary> NPB. </summary>
        public static NetworkDeviceRackRoleType NPB { get; } = new NetworkDeviceRackRoleType(NPBValue);
        /// <summary> TS. </summary>
        public static NetworkDeviceRackRoleType TS { get; } = new NetworkDeviceRackRoleType(TSValue);
        /// <summary> Management. </summary>
        public static NetworkDeviceRackRoleType Management { get; } = new NetworkDeviceRackRoleType(ManagementValue);
        /// <summary> Determines if two <see cref="NetworkDeviceRackRoleType"/> values are the same. </summary>
        public static bool operator ==(NetworkDeviceRackRoleType left, NetworkDeviceRackRoleType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="NetworkDeviceRackRoleType"/> values are not the same. </summary>
        public static bool operator !=(NetworkDeviceRackRoleType left, NetworkDeviceRackRoleType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="NetworkDeviceRackRoleType"/>. </summary>
        public static implicit operator NetworkDeviceRackRoleType(string value) => new NetworkDeviceRackRoleType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NetworkDeviceRackRoleType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NetworkDeviceRackRoleType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
