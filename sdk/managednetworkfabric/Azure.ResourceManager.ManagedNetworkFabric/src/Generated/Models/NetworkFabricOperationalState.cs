// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ManagedNetworkFabric.Models
{
    /// <summary> Operational state for the resource. </summary>
    public readonly partial struct NetworkFabricOperationalState : IEquatable<NetworkFabricOperationalState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="NetworkFabricOperationalState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public NetworkFabricOperationalState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ProvisioningValue = "Provisioning";
        private const string ProvisionedValue = "Provisioned";
        private const string ErrorProvisioningValue = "ErrorProvisioning";
        private const string DeprovisioningValue = "Deprovisioning";
        private const string DeprovisionedValue = "Deprovisioned";
        private const string ErrorDeprovisioningValue = "ErrorDeprovisioning";
        private const string DeferredControlValue = "DeferredControl";

        /// <summary> Provisioning. </summary>
        public static NetworkFabricOperationalState Provisioning { get; } = new NetworkFabricOperationalState(ProvisioningValue);
        /// <summary> Provisioned. </summary>
        public static NetworkFabricOperationalState Provisioned { get; } = new NetworkFabricOperationalState(ProvisionedValue);
        /// <summary> ErrorProvisioning. </summary>
        public static NetworkFabricOperationalState ErrorProvisioning { get; } = new NetworkFabricOperationalState(ErrorProvisioningValue);
        /// <summary> Deprovisioning. </summary>
        public static NetworkFabricOperationalState Deprovisioning { get; } = new NetworkFabricOperationalState(DeprovisioningValue);
        /// <summary> Deprovisioned. </summary>
        public static NetworkFabricOperationalState Deprovisioned { get; } = new NetworkFabricOperationalState(DeprovisionedValue);
        /// <summary> ErrorDeprovisioning. </summary>
        public static NetworkFabricOperationalState ErrorDeprovisioning { get; } = new NetworkFabricOperationalState(ErrorDeprovisioningValue);
        /// <summary> DeferredControl. </summary>
        public static NetworkFabricOperationalState DeferredControl { get; } = new NetworkFabricOperationalState(DeferredControlValue);
        /// <summary> Determines if two <see cref="NetworkFabricOperationalState"/> values are the same. </summary>
        public static bool operator ==(NetworkFabricOperationalState left, NetworkFabricOperationalState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="NetworkFabricOperationalState"/> values are not the same. </summary>
        public static bool operator !=(NetworkFabricOperationalState left, NetworkFabricOperationalState right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="NetworkFabricOperationalState"/>. </summary>
        public static implicit operator NetworkFabricOperationalState(string value) => new NetworkFabricOperationalState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NetworkFabricOperationalState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NetworkFabricOperationalState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
