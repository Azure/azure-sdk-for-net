// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ManagedNetworkFabric.Models
{
    /// <summary> Network device interface properties. </summary>
    public partial class NetworkDeviceInterfaceProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="NetworkDeviceInterfaceProperties"/>. </summary>
        public NetworkDeviceInterfaceProperties()
        {
            SupportedConnectorTypes = new ChangeTrackingList<SupportedConnectorProperties>();
        }

        /// <summary> Initializes a new instance of <see cref="NetworkDeviceInterfaceProperties"/>. </summary>
        /// <param name="identifier"> Interface identifier. Example: HundredGigE0/0. </param>
        /// <param name="interfaceType"> Interface type. </param>
        /// <param name="supportedConnectorTypes"> List of supported connector types. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal NetworkDeviceInterfaceProperties(string identifier, string interfaceType, IList<SupportedConnectorProperties> supportedConnectorTypes, Dictionary<string, BinaryData> rawData)
        {
            Identifier = identifier;
            InterfaceType = interfaceType;
            SupportedConnectorTypes = supportedConnectorTypes;
            _rawData = rawData;
        }

        /// <summary> Interface identifier. Example: HundredGigE0/0. </summary>
        public string Identifier { get; set; }
        /// <summary> Interface type. </summary>
        public string InterfaceType { get; set; }
        /// <summary> List of supported connector types. </summary>
        public IList<SupportedConnectorProperties> SupportedConnectorTypes { get; }
    }
}
