// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.ManagedNetworkFabric.Models
{
    /// <summary> Network and credential configuration currently applied on terminal server. </summary>
    public partial class VpnConfigurationProperties
    {
        /// <summary> Initializes a new instance of <see cref="VpnConfigurationProperties"/>. </summary>
        /// <param name="peeringOption"> Peering option list. </param>
        public VpnConfigurationProperties(PeeringOption peeringOption)
        {
            PeeringOption = peeringOption;
        }

        /// <summary> Initializes a new instance of <see cref="VpnConfigurationProperties"/>. </summary>
        /// <param name="networkToNetworkInterconnectId"> ARM Resource ID of the Network To Network Interconnect. </param>
        /// <param name="administrativeState"> Administrative state of the resource. </param>
        /// <param name="peeringOption"> Peering option list. </param>
        /// <param name="optionBProperties"> option B properties. </param>
        /// <param name="optionAProperties"> option A properties. </param>
        internal VpnConfigurationProperties(ResourceIdentifier networkToNetworkInterconnectId, NetworkFabricAdministrativeState? administrativeState, PeeringOption peeringOption, OptionBProperties optionBProperties, VpnConfigurationOptionAProperties optionAProperties)
        {
            NetworkToNetworkInterconnectId = networkToNetworkInterconnectId;
            AdministrativeState = administrativeState;
            PeeringOption = peeringOption;
            OptionBProperties = optionBProperties;
            OptionAProperties = optionAProperties;
        }

        /// <summary> ARM Resource ID of the Network To Network Interconnect. </summary>
        public ResourceIdentifier NetworkToNetworkInterconnectId { get; set; }
        /// <summary> Administrative state of the resource. </summary>
        public NetworkFabricAdministrativeState? AdministrativeState { get; }
        /// <summary> Peering option list. </summary>
        public PeeringOption PeeringOption { get; set; }
        /// <summary> option B properties. </summary>
        public OptionBProperties OptionBProperties { get; set; }
        /// <summary> option A properties. </summary>
        public VpnConfigurationOptionAProperties OptionAProperties { get; set; }
    }
}
