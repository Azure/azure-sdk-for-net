// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.ManagedNetworkFabric.Models
{
    /// <summary> Route Properties. </summary>
    public partial class StaticRouteProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="StaticRouteProperties"/>. </summary>
        /// <param name="prefix"> Prefix of the route. </param>
        /// <param name="nextHop"> List of next hop addresses. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="prefix"/> or <paramref name="nextHop"/> is null. </exception>
        public StaticRouteProperties(string prefix, IEnumerable<string> nextHop)
        {
            Argument.AssertNotNull(prefix, nameof(prefix));
            Argument.AssertNotNull(nextHop, nameof(nextHop));

            Prefix = prefix;
            NextHop = nextHop.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="StaticRouteProperties"/>. </summary>
        /// <param name="prefix"> Prefix of the route. </param>
        /// <param name="nextHop"> List of next hop addresses. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal StaticRouteProperties(string prefix, IList<string> nextHop, Dictionary<string, BinaryData> rawData)
        {
            Prefix = prefix;
            NextHop = nextHop;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="StaticRouteProperties"/> for deserialization. </summary>
        internal StaticRouteProperties()
        {
        }

        /// <summary> Prefix of the route. </summary>
        public string Prefix { get; set; }
        /// <summary> List of next hop addresses. </summary>
        public IList<string> NextHop { get; }
    }
}
