// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.ManagedNetworkFabric.Models
{
    /// <summary> Network device interface properties. </summary>
    public partial class NetworkDeviceSkuPropertiesSupportedVersionsItem
    {
        /// <summary> Initializes a new instance of NetworkDeviceSkuPropertiesSupportedVersionsItem. </summary>
        public NetworkDeviceSkuPropertiesSupportedVersionsItem()
        {
        }

        /// <summary> Initializes a new instance of NetworkDeviceSkuPropertiesSupportedVersionsItem. </summary>
        /// <param name="version"> Operating system and firmware combined versions. </param>
        /// <param name="vendorOSVersion"> Operating system version. </param>
        /// <param name="vendorFirmwareVersion"> Firmware version. </param>
        /// <param name="isCurrent"> If the current version is in use. </param>
        /// <param name="isTest"> If the current version is a test version. </param>
        internal NetworkDeviceSkuPropertiesSupportedVersionsItem(string version, string vendorOSVersion, string vendorFirmwareVersion, IsCurrentVersion? isCurrent, IsTestVersion? isTest)
        {
            Version = version;
            VendorOSVersion = vendorOSVersion;
            VendorFirmwareVersion = vendorFirmwareVersion;
            IsCurrent = isCurrent;
            IsTest = isTest;
        }

        /// <summary> Operating system and firmware combined versions. </summary>
        public string Version { get; set; }
        /// <summary> Operating system version. </summary>
        public string VendorOSVersion { get; set; }
        /// <summary> Firmware version. </summary>
        public string VendorFirmwareVersion { get; set; }
        /// <summary> If the current version is in use. </summary>
        public IsCurrentVersion? IsCurrent { get; set; }
        /// <summary> If the current version is a test version. </summary>
        public IsTestVersion? IsTest { get; set; }
    }
}
