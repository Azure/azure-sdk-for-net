// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ManagedNetworkFabric
{
    /// <summary>
    /// A class representing the RoutePolicy data model.
    /// The RoutePolicy resource definition.
    /// </summary>
    public partial class RoutePolicyData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of RoutePolicyData. </summary>
        /// <param name="location"> The location. </param>
        public RoutePolicyData(AzureLocation location) : base(location)
        {
            Conditions = new ChangeTrackingList<RoutePolicyPropertiesConditionsItem>();
        }

        /// <summary> Initializes a new instance of RoutePolicyData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="annotation"> Switch configuration description. </param>
        /// <param name="description"> Route Policy description. </param>
        /// <param name="conditions"> Route Policy conditions. </param>
        /// <param name="provisioningState"> Gets the provisioning state of the resource. </param>
        internal RoutePolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, string annotation, string description, IList<RoutePolicyPropertiesConditionsItem> conditions, ProvisioningState? provisioningState) : base(id, name, resourceType, systemData, tags, location)
        {
            Annotation = annotation;
            Description = description;
            Conditions = conditions;
            ProvisioningState = provisioningState;
        }

        /// <summary> Switch configuration description. </summary>
        public string Annotation { get; set; }
        /// <summary> Route Policy description. </summary>
        public string Description { get; set; }
        /// <summary> Route Policy conditions. </summary>
        public IList<RoutePolicyPropertiesConditionsItem> Conditions { get; }
        /// <summary> Gets the provisioning state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
