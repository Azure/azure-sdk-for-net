// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.ManagedNetworkFabric
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    internal partial class ResourceGroupResourceExtensionClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="ResourceGroupResourceExtensionClient"/> class for mocking. </summary>
        protected ResourceGroupResourceExtensionClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="ResourceGroupResourceExtensionClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal ResourceGroupResourceExtensionClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of AccessControlListResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of AccessControlListResources and their operations over a AccessControlListResource. </returns>
        public virtual AccessControlListCollection GetAccessControlLists()
        {
            return GetCachedClient(Client => new AccessControlListCollection(Client, Id));
        }

        /// <summary> Gets a collection of IPCommunityListResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of IPCommunityListResources and their operations over a IPCommunityListResource. </returns>
        public virtual IPCommunityListCollection GetIPCommunityLists()
        {
            return GetCachedClient(Client => new IPCommunityListCollection(Client, Id));
        }

        /// <summary> Gets a collection of IPPrefixListResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of IPPrefixListResources and their operations over a IPPrefixListResource. </returns>
        public virtual IPPrefixListCollection GetIPPrefixLists()
        {
            return GetCachedClient(Client => new IPPrefixListCollection(Client, Id));
        }

        /// <summary> Gets a collection of L2IsolationDomainResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of L2IsolationDomainResources and their operations over a L2IsolationDomainResource. </returns>
        public virtual L2IsolationDomainCollection GetL2IsolationDomains()
        {
            return GetCachedClient(Client => new L2IsolationDomainCollection(Client, Id));
        }

        /// <summary> Gets a collection of L3IsolationDomainResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of L3IsolationDomainResources and their operations over a L3IsolationDomainResource. </returns>
        public virtual L3IsolationDomainCollection GetL3IsolationDomains()
        {
            return GetCachedClient(Client => new L3IsolationDomainCollection(Client, Id));
        }

        /// <summary> Gets a collection of NetworkDeviceResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of NetworkDeviceResources and their operations over a NetworkDeviceResource. </returns>
        public virtual NetworkDeviceCollection GetNetworkDevices()
        {
            return GetCachedClient(Client => new NetworkDeviceCollection(Client, Id));
        }

        /// <summary> Gets a collection of NetworkFabricControllerResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of NetworkFabricControllerResources and their operations over a NetworkFabricControllerResource. </returns>
        public virtual NetworkFabricControllerCollection GetNetworkFabricControllers()
        {
            return GetCachedClient(Client => new NetworkFabricControllerCollection(Client, Id));
        }

        /// <summary> Gets a collection of NetworkFabricResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of NetworkFabricResources and their operations over a NetworkFabricResource. </returns>
        public virtual NetworkFabricCollection GetNetworkFabrics()
        {
            return GetCachedClient(Client => new NetworkFabricCollection(Client, Id));
        }

        /// <summary> Gets a collection of NetworkRackResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of NetworkRackResources and their operations over a NetworkRackResource. </returns>
        public virtual NetworkRackCollection GetNetworkRacks()
        {
            return GetCachedClient(Client => new NetworkRackCollection(Client, Id));
        }

        /// <summary> Gets a collection of RoutePolicyResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of RoutePolicyResources and their operations over a RoutePolicyResource. </returns>
        public virtual RoutePolicyCollection GetRoutePolicies()
        {
            return GetCachedClient(Client => new RoutePolicyCollection(Client, Id));
        }
    }
}
