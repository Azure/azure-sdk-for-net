// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.ManagedNetworkFabric;

namespace Azure.ResourceManager.ManagedNetworkFabric.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class ManagedNetworkFabricArmClientMockingExtension : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="ManagedNetworkFabricArmClientMockingExtension"/> class for mocking. </summary>
        protected ManagedNetworkFabricArmClientMockingExtension()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="ManagedNetworkFabricArmClientMockingExtension"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal ManagedNetworkFabricArmClientMockingExtension(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal ManagedNetworkFabricArmClientMockingExtension(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing an <see cref="AccessControlListResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AccessControlListResource.CreateResourceIdentifier" /> to create an <see cref="AccessControlListResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AccessControlListResource" /> object. </returns>
        public virtual AccessControlListResource GetAccessControlListResource(ResourceIdentifier id)
        {
            AccessControlListResource.ValidateResourceId(id);
            return new AccessControlListResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="IPCommunityResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IPCommunityResource.CreateResourceIdentifier" /> to create an <see cref="IPCommunityResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IPCommunityResource" /> object. </returns>
        public virtual IPCommunityResource GetIPCommunityResource(ResourceIdentifier id)
        {
            IPCommunityResource.ValidateResourceId(id);
            return new IPCommunityResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="IPExtendedCommunityResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IPExtendedCommunityResource.CreateResourceIdentifier" /> to create an <see cref="IPExtendedCommunityResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IPExtendedCommunityResource" /> object. </returns>
        public virtual IPExtendedCommunityResource GetIPExtendedCommunityResource(ResourceIdentifier id)
        {
            IPExtendedCommunityResource.ValidateResourceId(id);
            return new IPExtendedCommunityResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="IPPrefixResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IPPrefixResource.CreateResourceIdentifier" /> to create an <see cref="IPPrefixResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IPPrefixResource" /> object. </returns>
        public virtual IPPrefixResource GetIPPrefixResource(ResourceIdentifier id)
        {
            IPPrefixResource.ValidateResourceId(id);
            return new IPPrefixResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="L2IsolationDomainResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="L2IsolationDomainResource.CreateResourceIdentifier" /> to create a <see cref="L2IsolationDomainResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="L2IsolationDomainResource" /> object. </returns>
        public virtual L2IsolationDomainResource GetL2IsolationDomainResource(ResourceIdentifier id)
        {
            L2IsolationDomainResource.ValidateResourceId(id);
            return new L2IsolationDomainResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="L3IsolationDomainResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="L3IsolationDomainResource.CreateResourceIdentifier" /> to create a <see cref="L3IsolationDomainResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="L3IsolationDomainResource" /> object. </returns>
        public virtual L3IsolationDomainResource GetL3IsolationDomainResource(ResourceIdentifier id)
        {
            L3IsolationDomainResource.ValidateResourceId(id);
            return new L3IsolationDomainResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="InternalNetworkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="InternalNetworkResource.CreateResourceIdentifier" /> to create an <see cref="InternalNetworkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="InternalNetworkResource" /> object. </returns>
        public virtual InternalNetworkResource GetInternalNetworkResource(ResourceIdentifier id)
        {
            InternalNetworkResource.ValidateResourceId(id);
            return new InternalNetworkResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="ExternalNetworkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ExternalNetworkResource.CreateResourceIdentifier" /> to create an <see cref="ExternalNetworkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExternalNetworkResource" /> object. </returns>
        public virtual ExternalNetworkResource GetExternalNetworkResource(ResourceIdentifier id)
        {
            ExternalNetworkResource.ValidateResourceId(id);
            return new ExternalNetworkResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkDeviceSkuResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkDeviceSkuResource.CreateResourceIdentifier" /> to create a <see cref="NetworkDeviceSkuResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkDeviceSkuResource" /> object. </returns>
        public virtual NetworkDeviceSkuResource GetNetworkDeviceSkuResource(ResourceIdentifier id)
        {
            NetworkDeviceSkuResource.ValidateResourceId(id);
            return new NetworkDeviceSkuResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkDeviceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkDeviceResource.CreateResourceIdentifier" /> to create a <see cref="NetworkDeviceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkDeviceResource" /> object. </returns>
        public virtual NetworkDeviceResource GetNetworkDeviceResource(ResourceIdentifier id)
        {
            NetworkDeviceResource.ValidateResourceId(id);
            return new NetworkDeviceResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkInterfaceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkInterfaceResource.CreateResourceIdentifier" /> to create a <see cref="NetworkInterfaceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkInterfaceResource" /> object. </returns>
        public virtual NetworkInterfaceResource GetNetworkInterfaceResource(ResourceIdentifier id)
        {
            NetworkInterfaceResource.ValidateResourceId(id);
            return new NetworkInterfaceResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkFabricControllerResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkFabricControllerResource.CreateResourceIdentifier" /> to create a <see cref="NetworkFabricControllerResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkFabricControllerResource" /> object. </returns>
        public virtual NetworkFabricControllerResource GetNetworkFabricControllerResource(ResourceIdentifier id)
        {
            NetworkFabricControllerResource.ValidateResourceId(id);
            return new NetworkFabricControllerResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkFabricSkuResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkFabricSkuResource.CreateResourceIdentifier" /> to create a <see cref="NetworkFabricSkuResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkFabricSkuResource" /> object. </returns>
        public virtual NetworkFabricSkuResource GetNetworkFabricSkuResource(ResourceIdentifier id)
        {
            NetworkFabricSkuResource.ValidateResourceId(id);
            return new NetworkFabricSkuResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkFabricResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkFabricResource.CreateResourceIdentifier" /> to create a <see cref="NetworkFabricResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkFabricResource" /> object. </returns>
        public virtual NetworkFabricResource GetNetworkFabricResource(ResourceIdentifier id)
        {
            NetworkFabricResource.ValidateResourceId(id);
            return new NetworkFabricResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkToNetworkInterconnectResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkToNetworkInterconnectResource.CreateResourceIdentifier" /> to create a <see cref="NetworkToNetworkInterconnectResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkToNetworkInterconnectResource" /> object. </returns>
        public virtual NetworkToNetworkInterconnectResource GetNetworkToNetworkInterconnectResource(ResourceIdentifier id)
        {
            NetworkToNetworkInterconnectResource.ValidateResourceId(id);
            return new NetworkToNetworkInterconnectResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkRackSkuResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkRackSkuResource.CreateResourceIdentifier" /> to create a <see cref="NetworkRackSkuResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkRackSkuResource" /> object. </returns>
        public virtual NetworkRackSkuResource GetNetworkRackSkuResource(ResourceIdentifier id)
        {
            NetworkRackSkuResource.ValidateResourceId(id);
            return new NetworkRackSkuResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkRackResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkRackResource.CreateResourceIdentifier" /> to create a <see cref="NetworkRackResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkRackResource" /> object. </returns>
        public virtual NetworkRackResource GetNetworkRackResource(ResourceIdentifier id)
        {
            NetworkRackResource.ValidateResourceId(id);
            return new NetworkRackResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RoutePolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RoutePolicyResource.CreateResourceIdentifier" /> to create a <see cref="RoutePolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoutePolicyResource" /> object. </returns>
        public virtual RoutePolicyResource GetRoutePolicyResource(ResourceIdentifier id)
        {
            RoutePolicyResource.ValidateResourceId(id);
            return new RoutePolicyResource(Client, id);
        }
    }
}
