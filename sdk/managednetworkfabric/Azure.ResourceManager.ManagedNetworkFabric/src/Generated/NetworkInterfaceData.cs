// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ManagedNetworkFabric
{
    /// <summary>
    /// A class representing the NetworkInterface data model.
    /// Defines the NetworkInterface resource.
    /// </summary>
    public partial class NetworkInterfaceData : ResourceData
    {
        /// <summary> Initializes a new instance of NetworkInterfaceData. </summary>
        public NetworkInterfaceData()
        {
        }

        /// <summary> Initializes a new instance of NetworkInterfaceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="annotation"> Switch configuration description. </param>
        /// <param name="physicalIdentifier"> physicalIdentifier of the network interface. </param>
        /// <param name="administrativeState"> administrativeState of the network interface. Example: Enabled | Disabled. </param>
        /// <param name="provisioningState"> Gets the provisioning state of the resource. </param>
        /// <param name="connectedTo"> The arm resource id of the interface or compute server its connected to. </param>
        /// <param name="interfaceType"> The Interface Type. Example: Management/Data. </param>
        /// <param name="ipv4Address"> ipv4Address. </param>
        /// <param name="ipv6Address"> ipv6Address. </param>
        internal NetworkInterfaceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string annotation, string physicalIdentifier, EnabledDisabledState? administrativeState, ProvisioningState? provisioningState, string connectedTo, InterfaceType? interfaceType, string ipv4Address, string ipv6Address) : base(id, name, resourceType, systemData)
        {
            Annotation = annotation;
            PhysicalIdentifier = physicalIdentifier;
            AdministrativeState = administrativeState;
            ProvisioningState = provisioningState;
            ConnectedTo = connectedTo;
            InterfaceType = interfaceType;
            IPv4Address = ipv4Address;
            IPv6Address = ipv6Address;
        }

        /// <summary> Switch configuration description. </summary>
        public string Annotation { get; set; }
        /// <summary> physicalIdentifier of the network interface. </summary>
        public string PhysicalIdentifier { get; }
        /// <summary> administrativeState of the network interface. Example: Enabled | Disabled. </summary>
        public EnabledDisabledState? AdministrativeState { get; }
        /// <summary> Gets the provisioning state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> The arm resource id of the interface or compute server its connected to. </summary>
        public string ConnectedTo { get; }
        /// <summary> The Interface Type. Example: Management/Data. </summary>
        public InterfaceType? InterfaceType { get; }
        /// <summary> ipv4Address. </summary>
        public string IPv4Address { get; }
        /// <summary> ipv6Address. </summary>
        public string IPv6Address { get; }
    }
}
