// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ManagedNetworkFabric
{
    /// <summary>
    /// A class representing the ExternalNetwork data model.
    /// Defines the ExternalNetwork item.
    /// </summary>
    public partial class ExternalNetworkData : ResourceData
    {
        /// <summary> Initializes a new instance of ExternalNetworkData. </summary>
        /// <param name="peeringOption"> Peering option list. </param>
        public ExternalNetworkData(PeeringOption peeringOption)
        {
            DisabledOnResources = new ChangeTrackingList<string>();
            PeeringOption = peeringOption;
        }

        /// <summary> Initializes a new instance of ExternalNetworkData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="annotation"> Switch configuration description. </param>
        /// <param name="networkToNetworkInterconnectId"> Gets the networkToNetworkInterconnectId of the resource. </param>
        /// <param name="disabledOnResources"> List of resources the externalNetwork is disabled on. Can be either entire NetworkFabric or NetworkRack. </param>
        /// <param name="administrativeState"> AdministrativeState of the externalNetwork. Example: Enabled | Disabled. </param>
        /// <param name="provisioningState"> Gets the provisioning state of the resource. </param>
        /// <param name="peeringOption"> Peering option list. </param>
        /// <param name="optionBProperties"> option B properties object. </param>
        /// <param name="optionAProperties"> option A properties object. </param>
        /// <param name="importRoutePolicyId"> ARM resource ID of importRoutePolicy. </param>
        /// <param name="exportRoutePolicyId"> ARM resource ID of exportRoutePolicy. </param>
        internal ExternalNetworkData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string annotation, string networkToNetworkInterconnectId, IReadOnlyList<string> disabledOnResources, EnabledDisabledState? administrativeState, ProvisioningState? provisioningState, PeeringOption peeringOption, OptionBProperties optionBProperties, ExternalNetworkPropertiesOptionAProperties optionAProperties, string importRoutePolicyId, string exportRoutePolicyId) : base(id, name, resourceType, systemData)
        {
            Annotation = annotation;
            NetworkToNetworkInterconnectId = networkToNetworkInterconnectId;
            DisabledOnResources = disabledOnResources;
            AdministrativeState = administrativeState;
            ProvisioningState = provisioningState;
            PeeringOption = peeringOption;
            OptionBProperties = optionBProperties;
            OptionAProperties = optionAProperties;
            ImportRoutePolicyId = importRoutePolicyId;
            ExportRoutePolicyId = exportRoutePolicyId;
        }

        /// <summary> Switch configuration description. </summary>
        public string Annotation { get; set; }
        /// <summary> Gets the networkToNetworkInterconnectId of the resource. </summary>
        public string NetworkToNetworkInterconnectId { get; }
        /// <summary> List of resources the externalNetwork is disabled on. Can be either entire NetworkFabric or NetworkRack. </summary>
        public IReadOnlyList<string> DisabledOnResources { get; }
        /// <summary> AdministrativeState of the externalNetwork. Example: Enabled | Disabled. </summary>
        public EnabledDisabledState? AdministrativeState { get; }
        /// <summary> Gets the provisioning state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Peering option list. </summary>
        public PeeringOption PeeringOption { get; set; }
        /// <summary> option B properties object. </summary>
        public OptionBProperties OptionBProperties { get; set; }
        /// <summary> option A properties object. </summary>
        public ExternalNetworkPropertiesOptionAProperties OptionAProperties { get; set; }
        /// <summary> ARM resource ID of importRoutePolicy. </summary>
        public string ImportRoutePolicyId { get; set; }
        /// <summary> ARM resource ID of exportRoutePolicy. </summary>
        public string ExportRoutePolicyId { get; set; }
    }
}
