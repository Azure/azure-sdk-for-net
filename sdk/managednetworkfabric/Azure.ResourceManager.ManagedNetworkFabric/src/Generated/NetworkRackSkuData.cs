// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ManagedNetworkFabric
{
    /// <summary>
    /// A class representing the NetworkRackSku data model.
    /// The NetworkRackSku resource definition.
    /// </summary>
    public partial class NetworkRackSkuData : ResourceData
    {
        /// <summary> Initializes a new instance of NetworkRackSkuData. </summary>
        /// <param name="roleName"> The role of the Network Rack: Aggregate or Compute. </param>
        public NetworkRackSkuData(NetworkRackRoleName roleName)
        {
            RoleName = roleName;
            NetworkDevices = new ChangeTrackingList<NetworkRackSkuPropertiesNetworkDevicesItem>();
        }

        /// <summary> Initializes a new instance of NetworkRackSkuData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="roleName"> The role of the Network Rack: Aggregate or Compute. </param>
        /// <param name="maximumServerCount"> Maximum number of servers available for this SKU. </param>
        /// <param name="maximumStorageCount"> Maximum number of storage devices available for this SKU. </param>
        /// <param name="maximumUplinks"> Maximum number of network uplinks available for this SKU. </param>
        /// <param name="networkDevices"> List of network device properties / role for the Network Rack. </param>
        /// <param name="provisioningState"> Gets the provisioning state of the resource. </param>
        internal NetworkRackSkuData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, NetworkRackRoleName roleName, int? maximumServerCount, int? maximumStorageCount, int? maximumUplinks, IList<NetworkRackSkuPropertiesNetworkDevicesItem> networkDevices, ProvisioningState? provisioningState) : base(id, name, resourceType, systemData)
        {
            RoleName = roleName;
            MaximumServerCount = maximumServerCount;
            MaximumStorageCount = maximumStorageCount;
            MaximumUplinks = maximumUplinks;
            NetworkDevices = networkDevices;
            ProvisioningState = provisioningState;
        }

        /// <summary> The role of the Network Rack: Aggregate or Compute. </summary>
        public NetworkRackRoleName RoleName { get; set; }
        /// <summary> Maximum number of servers available for this SKU. </summary>
        public int? MaximumServerCount { get; set; }
        /// <summary> Maximum number of storage devices available for this SKU. </summary>
        public int? MaximumStorageCount { get; set; }
        /// <summary> Maximum number of network uplinks available for this SKU. </summary>
        public int? MaximumUplinks { get; set; }
        /// <summary> List of network device properties / role for the Network Rack. </summary>
        public IList<NetworkRackSkuPropertiesNetworkDevicesItem> NetworkDevices { get; }
        /// <summary> Gets the provisioning state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
