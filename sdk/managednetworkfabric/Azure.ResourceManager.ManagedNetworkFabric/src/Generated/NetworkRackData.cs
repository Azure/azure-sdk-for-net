// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ManagedNetworkFabric
{
    /// <summary>
    /// A class representing the NetworkRack data model.
    /// The NetworkRack resource definition.
    /// </summary>
    public partial class NetworkRackData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of NetworkRackData. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="networkRackSku"> Network Rack SKU name. </param>
        /// <param name="networkFabricId"> Network Fabric ARM resource id. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkRackSku"/> or <paramref name="networkFabricId"/> is null. </exception>
        public NetworkRackData(AzureLocation location, string networkRackSku, string networkFabricId) : base(location)
        {
            Argument.AssertNotNull(networkRackSku, nameof(networkRackSku));
            Argument.AssertNotNull(networkFabricId, nameof(networkFabricId));

            NetworkRackSku = networkRackSku;
            NetworkFabricId = networkFabricId;
            NetworkDevices = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of NetworkRackData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="annotation"> Switch configuration description. </param>
        /// <param name="networkRackSku"> Network Rack SKU name. </param>
        /// <param name="networkFabricId"> Network Fabric ARM resource id. </param>
        /// <param name="networkDevices"> List of network device ARM resource ids. </param>
        /// <param name="provisioningState"> Gets the provisioning state of the resource. </param>
        internal NetworkRackData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, string annotation, string networkRackSku, string networkFabricId, IReadOnlyList<string> networkDevices, ProvisioningState? provisioningState) : base(id, name, resourceType, systemData, tags, location)
        {
            Annotation = annotation;
            NetworkRackSku = networkRackSku;
            NetworkFabricId = networkFabricId;
            NetworkDevices = networkDevices;
            ProvisioningState = provisioningState;
        }

        /// <summary> Switch configuration description. </summary>
        public string Annotation { get; set; }
        /// <summary> Network Rack SKU name. </summary>
        public string NetworkRackSku { get; set; }
        /// <summary> Network Fabric ARM resource id. </summary>
        public string NetworkFabricId { get; set; }
        /// <summary> List of network device ARM resource ids. </summary>
        public IReadOnlyList<string> NetworkDevices { get; }
        /// <summary> Gets the provisioning state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
