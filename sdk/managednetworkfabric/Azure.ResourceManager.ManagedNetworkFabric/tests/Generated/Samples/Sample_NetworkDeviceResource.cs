// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ManagedNetworkFabric.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ManagedNetworkFabric.Samples
{
    public partial class Sample_NetworkDeviceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_NetworkDevicesGetMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_Get.json
            // this example is just showing the usage of "NetworkDevices_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            NetworkDeviceResource result = await networkDevice.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_NetworkDevicesDeleteMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_Delete.json
            // this example is just showing the usage of "NetworkDevices_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            await networkDevice.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_NetworkDevicesUpdateMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_Update.json
            // this example is just showing the usage of "NetworkDevices_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            NetworkDevicePatch patch = new NetworkDevicePatch
            {
                Tags =
{
["KeyId"] = "KeyValue"
},
                Properties = new NetworkDevicePatchParametersProperties
                {
                    Annotation = "annotation",
                    HostName = "NFA-Device",
                    SerialNumber = "Vendor;DCS-7280XXX-24;12.05;JPE2111XXXX",
                },
            };
            ArmOperation<NetworkDeviceResource> lro = await networkDevice.UpdateAsync(WaitUntil.Completed, patch);
            NetworkDeviceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            NetworkDeviceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Reboot_NetworkDevicesRebootMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_Reboot.json
            // this example is just showing the usage of "NetworkDevices_Reboot" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            NetworkDeviceRebootContent content = new NetworkDeviceRebootContent
            {
                RebootType = NetworkDeviceRebootType.GracefulRebootWithZtp,
            };
            ArmOperation<StateUpdateCommonPostActionResult> lro = await networkDevice.RebootAsync(WaitUntil.Completed, content);
            StateUpdateCommonPostActionResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RefreshConfiguration_NetworkDevicesRefreshConfigurationMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_RefreshConfiguration.json
            // this example is just showing the usage of "NetworkDevices_RefreshConfiguration" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            ArmOperation<StateUpdateCommonPostActionResult> lro = await networkDevice.RefreshConfigurationAsync(WaitUntil.Completed);
            StateUpdateCommonPostActionResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RunRoCommand_NetworkDevicesRunRoCommandMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_RunRoCommand.json
            // this example is just showing the usage of "NetworkDevices_RunRoCommand" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            DeviceRoCommand body = new DeviceRoCommand
            {
                Command = "sigtufivipqdapgglzi",
            };
            ArmOperation<CommonPostActionResponseForDeviceROCommandsOperationStatusResult> lro = await networkDevice.RunRoCommandAsync(WaitUntil.Completed, body);
            CommonPostActionResponseForDeviceROCommandsOperationStatusResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RunRwCommand_NetworkDevicesRunRwCommandMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_RunRwCommand.json
            // this example is just showing the usage of "NetworkDevices_RunRwCommand" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            DeviceRwCommand body = new DeviceRwCommand
            {
                Command = "yzuabghycngqmqtfacvoh",
            };
            ArmOperation<CommonPostActionResponseForDeviceRWCommands> lro = await networkDevice.RunRwCommandAsync(WaitUntil.Completed, body);
            CommonPostActionResponseForDeviceRWCommands result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task UpdateAdministrativeState_NetworkDevicesUpdateAdministrativeStateMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_UpdateAdministrativeState.json
            // this example is just showing the usage of "NetworkDevices_UpdateAdministrativeState" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            UpdateDeviceAdministrativeStateContent content = new UpdateDeviceAdministrativeStateContent
            {
                ResourceIds = { "" },
                State = NetworkDeviceAdministrativeState.Rma,
            };
            ArmOperation<StateUpdateCommonPostActionResult> lro = await networkDevice.UpdateAdministrativeStateAsync(WaitUntil.Completed, content);
            StateUpdateCommonPostActionResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Upgrade_NetworkDevicesUpgradeMaximumSetGen()
        {
            // Generated from example definition: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2024-06-15-preview/examples/NetworkDevices_Upgrade.json
            // this example is just showing the usage of "NetworkDevices_Upgrade" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this NetworkDeviceResource created on azure
            // for more information of creating NetworkDeviceResource, please refer to the document of NetworkDeviceResource
            string subscriptionId = "0000ABCD-0A0B-0000-0000-000000ABCDEF";
            string resourceGroupName = "example-rg";
            string networkDeviceName = "example-device";
            ResourceIdentifier networkDeviceResourceId = NetworkDeviceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkDeviceName);
            NetworkDeviceResource networkDevice = client.GetNetworkDeviceResource(networkDeviceResourceId);

            // invoke the operation
            NetworkFabricUpdateVersionContent content = new NetworkFabricUpdateVersionContent
            {
                Version = "1.0.0",
            };
            ArmOperation<StateUpdateCommonPostActionResult> lro = await networkDevice.UpgradeAsync(WaitUntil.Completed, content);
            StateUpdateCommonPostActionResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
