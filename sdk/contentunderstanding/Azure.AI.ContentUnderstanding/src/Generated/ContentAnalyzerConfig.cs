// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> Configuration settings for an analyzer. </summary>
    public partial class ContentAnalyzerConfig
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ContentAnalyzerConfig"/>. </summary>
        public ContentAnalyzerConfig()
        {
            Locales = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="ContentAnalyzerConfig"/>. </summary>
        /// <param name="returnDetails"> Return all content details. </param>
        /// <param name="locales"> List of locale hints for speech transcription. </param>
        /// <param name="enableFace"> Enable face detection. </param>
        /// <param name="personDirectoryId"> Specify the person directory used for identifying detected faces. </param>
        /// <param name="enableOcr"> Enable optical character recognition (OCR). </param>
        /// <param name="enableLayout"> Enable layout analysis. </param>
        /// <param name="tableFormat"> Representation format of tables in analyze result markdown. </param>
        /// <param name="enableFormula"> Enable mathematical formula detection. </param>
        /// <param name="disableFaceBlurring"> Disable the default blurring of faces for privacy while processing the content. </param>
        /// <param name="disableContentFiltering"> Disable content filtering that detects and prevents the output of harmful content. </param>
        /// <param name="estimateFieldSourceAndConfidence"> Return grounding source and confidence for extracted fields. </param>
        /// <param name="segmentationMode"> Segmentation mode used to split audio/visual content. </param>
        /// <param name="segmentationDefinition"> Segmentation definition for use with custom segmentation mode. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ContentAnalyzerConfig(bool? returnDetails, IList<string> locales, bool? enableFace, string personDirectoryId, bool? enableOcr, bool? enableLayout, TableFormat? tableFormat, bool? enableFormula, bool? disableFaceBlurring, bool? disableContentFiltering, bool? estimateFieldSourceAndConfidence, SegmentationMode? segmentationMode, string segmentationDefinition, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ReturnDetails = returnDetails;
            Locales = locales;
            EnableFace = enableFace;
            PersonDirectoryId = personDirectoryId;
            EnableOcr = enableOcr;
            EnableLayout = enableLayout;
            TableFormat = tableFormat;
            EnableFormula = enableFormula;
            DisableFaceBlurring = disableFaceBlurring;
            DisableContentFiltering = disableContentFiltering;
            EstimateFieldSourceAndConfidence = estimateFieldSourceAndConfidence;
            SegmentationMode = segmentationMode;
            SegmentationDefinition = segmentationDefinition;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Return all content details. </summary>
        public bool? ReturnDetails { get; set; }

        /// <summary> List of locale hints for speech transcription. </summary>
        public IList<string> Locales { get; }

        /// <summary> Enable face detection. </summary>
        public bool? EnableFace { get; set; }

        /// <summary> Specify the person directory used for identifying detected faces. </summary>
        public string PersonDirectoryId { get; set; }

        /// <summary> Enable optical character recognition (OCR). </summary>
        public bool? EnableOcr { get; set; }

        /// <summary> Enable layout analysis. </summary>
        public bool? EnableLayout { get; set; }

        /// <summary> Representation format of tables in analyze result markdown. </summary>
        public TableFormat? TableFormat { get; set; }

        /// <summary> Enable mathematical formula detection. </summary>
        public bool? EnableFormula { get; set; }

        /// <summary> Disable the default blurring of faces for privacy while processing the content. </summary>
        public bool? DisableFaceBlurring { get; set; }

        /// <summary> Disable content filtering that detects and prevents the output of harmful content. </summary>
        public bool? DisableContentFiltering { get; set; }

        /// <summary> Return grounding source and confidence for extracted fields. </summary>
        public bool? EstimateFieldSourceAndConfidence { get; set; }

        /// <summary> Segmentation mode used to split audio/visual content. </summary>
        public SegmentationMode? SegmentationMode { get; set; }

        /// <summary> Segmentation definition for use with custom segmentation mode. </summary>
        public string SegmentationDefinition { get; set; }
    }
}
