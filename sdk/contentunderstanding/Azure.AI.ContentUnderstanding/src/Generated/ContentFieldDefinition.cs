// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> Definition of the field using a JSON Schema like syntax. </summary>
    public partial class ContentFieldDefinition
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ContentFieldDefinition"/>. </summary>
        public ContentFieldDefinition()
        {
            Properties = new ChangeTrackingDictionary<string, ContentFieldDefinition>();
            Examples = new ChangeTrackingList<string>();
            Enum = new ChangeTrackingList<string>();
            EnumDescriptions = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="ContentFieldDefinition"/>. </summary>
        /// <param name="method"> Generation method. </param>
        /// <param name="type"> Semantic data type of the field value. </param>
        /// <param name="description"> Field description. </param>
        /// <param name="items"> Field type schema of each array element, if type is array. </param>
        /// <param name="properties"> Named sub-fields, if type is object. </param>
        /// <param name="examples"> Examples of field values. </param>
        /// <param name="enum"> Enumeration of possible field values. </param>
        /// <param name="enumDescriptions"> Descriptions for each enumeration value. </param>
        /// <param name="ref"> Reference to another field definition. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ContentFieldDefinition(GenerationMethod? @method, ContentFieldType? @type, string description, ContentFieldDefinition items, IDictionary<string, ContentFieldDefinition> properties, IList<string> examples, IList<string> @enum, IDictionary<string, string> enumDescriptions, string @ref, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Method = @method;
            Type = @type;
            Description = description;
            Items = items;
            Properties = properties;
            Examples = examples;
            Enum = @enum;
            EnumDescriptions = enumDescriptions;
            Ref = @ref;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Generation method. </summary>
        public GenerationMethod? Method { get; set; }

        /// <summary> Semantic data type of the field value. </summary>
        public ContentFieldType? Type { get; set; }

        /// <summary> Field description. </summary>
        public string Description { get; set; }

        /// <summary> Field type schema of each array element, if type is array. </summary>
        public ContentFieldDefinition Items { get; set; }

        /// <summary> Named sub-fields, if type is object. </summary>
        public IDictionary<string, ContentFieldDefinition> Properties { get; }

        /// <summary> Examples of field values. </summary>
        public IList<string> Examples { get; }

        /// <summary> Enumeration of possible field values. </summary>
        public IList<string> Enum { get; }

        /// <summary> Descriptions for each enumeration value. </summary>
        public IDictionary<string, string> EnumDescriptions { get; }

        /// <summary> Reference to another field definition. </summary>
        public string Ref { get; set; }
    }
}
