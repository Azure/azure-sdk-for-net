// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> Find similar faces response. </summary>
    public partial class FindSimilarFacesResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="FindSimilarFacesResult"/>. </summary>
        /// <param name="detectedFace"> Details of the detected face. </param>
        /// <param name="similarFaces"> List of similar faces. </param>
        internal FindSimilarFacesResult(DetectedBoundingBox detectedFace, IEnumerable<SimilarFace> similarFaces)
        {
            DetectedFace = detectedFace;
            SimilarFaces = similarFaces.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="FindSimilarFacesResult"/>. </summary>
        /// <param name="detectedFace"> Details of the detected face. </param>
        /// <param name="similarFaces"> List of similar faces. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal FindSimilarFacesResult(DetectedBoundingBox detectedFace, IList<SimilarFace> similarFaces, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DetectedFace = detectedFace;
            SimilarFaces = similarFaces;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Details of the detected face. </summary>
        public DetectedBoundingBox DetectedFace { get; }

        /// <summary> List of similar faces. </summary>
        public IList<SimilarFace> SimilarFaces { get; }
    }
}
