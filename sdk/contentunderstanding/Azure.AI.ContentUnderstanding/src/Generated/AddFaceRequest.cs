// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> The AddFaceRequest. </summary>
    internal partial class AddFaceRequest
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AddFaceRequest"/>. </summary>
        /// <param name="faceSource"> Source of the face. </param>
        internal AddFaceRequest(FaceSource faceSource)
        {
            FaceSource = faceSource;
        }

        /// <summary> Initializes a new instance of <see cref="AddFaceRequest"/>. </summary>
        /// <param name="faceSource"> Source of the face. </param>
        /// <param name="personId"> Person identifier with which to associate the face. </param>
        /// <param name="qualityThreshold"> Face quality threshold below which the face will not be added. Default is medium. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AddFaceRequest(FaceSource faceSource, string personId, QualityForRecognition? qualityThreshold, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            FaceSource = faceSource;
            PersonId = personId;
            QualityThreshold = qualityThreshold;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Source of the face. </summary>
        public FaceSource FaceSource { get; }

        /// <summary> Person identifier with which to associate the face. </summary>
        public string PersonId { get; }

        /// <summary> Face quality threshold below which the face will not be added. Default is medium. </summary>
        public QualityForRecognition? QualityThreshold { get; }
    }
}
