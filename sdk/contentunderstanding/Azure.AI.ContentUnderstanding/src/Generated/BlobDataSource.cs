// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> Blob storage data source. </summary>
    public partial class BlobDataSource : DataSource
    {
        /// <summary> Initializes a new instance of <see cref="BlobDataSource"/>. </summary>
        /// <param name="containerUrl"> The URL of the blob container. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="containerUrl"/> is null. </exception>
        public BlobDataSource(Uri containerUrl) : base(DataSourceKind.Blob)
        {
            Argument.AssertNotNull(containerUrl, nameof(containerUrl));

            ContainerUrl = containerUrl;
        }

        /// <summary> Initializes a new instance of <see cref="BlobDataSource"/>. </summary>
        /// <param name="kind"> The kind of data source. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        /// <param name="containerUrl"> The URL of the blob container. </param>
        /// <param name="prefix"> An optional prefix to filter blobs within the container. </param>
        /// <param name="fileListPath"> An optional path to a file listing specific blobs to include. </param>
        internal BlobDataSource(DataSourceKind kind, IDictionary<string, BinaryData> additionalBinaryDataProperties, Uri containerUrl, string prefix, string fileListPath) : base(kind, additionalBinaryDataProperties)
        {
            ContainerUrl = containerUrl;
            Prefix = prefix;
            FileListPath = fileListPath;
        }

        /// <summary> The URL of the blob container. </summary>
        public Uri ContainerUrl { get; set; }

        /// <summary> An optional prefix to filter blobs within the container. </summary>
        public string Prefix { get; set; }

        /// <summary> An optional path to a file listing specific blobs to include. </summary>
        public string FileListPath { get; set; }
    }
}
