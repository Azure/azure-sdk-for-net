// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> Position of the element in markdown, specified as a character offset and length. </summary>
    public partial class ContentSpan
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ContentSpan"/>. </summary>
        /// <param name="offset"> Starting position (0-indexed) of the element in markdown, specified in characters. </param>
        /// <param name="length"> Length of the element in markdown, specified in characters. </param>
        internal ContentSpan(int offset, int length)
        {
            Offset = offset;
            Length = length;
        }

        /// <summary> Initializes a new instance of <see cref="ContentSpan"/>. </summary>
        /// <param name="offset"> Starting position (0-indexed) of the element in markdown, specified in characters. </param>
        /// <param name="length"> Length of the element in markdown, specified in characters. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ContentSpan(int offset, int length, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Offset = offset;
            Length = length;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Starting position (0-indexed) of the element in markdown, specified in characters. </summary>
        public int Offset { get; }

        /// <summary> Length of the element in markdown, specified in characters. </summary>
        public int Length { get; }
    }
}
