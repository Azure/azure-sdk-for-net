// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> Schema of fields to be extracted from documents. </summary>
    public partial class ContentFieldSchema
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ContentFieldSchema"/>. </summary>
        /// <param name="fields"> The fields defined in the schema. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="fields"/> is null. </exception>
        public ContentFieldSchema(IDictionary<string, ContentFieldDefinition> fields)
        {
            Argument.AssertNotNull(fields, nameof(fields));

            Fields = fields;
            Definitions = new ChangeTrackingDictionary<string, ContentFieldDefinition>();
        }

        /// <summary> Initializes a new instance of <see cref="ContentFieldSchema"/>. </summary>
        /// <param name="name"> The name of the field schema. </param>
        /// <param name="description"> A description of the field schema. </param>
        /// <param name="fields"> The fields defined in the schema. </param>
        /// <param name="definitions"> Additional definitions referenced by the fields in the schema. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ContentFieldSchema(string name, string description, IDictionary<string, ContentFieldDefinition> fields, IDictionary<string, ContentFieldDefinition> definitions, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Description = description;
            Fields = fields;
            Definitions = definitions;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of the field schema. </summary>
        public string Name { get; set; }

        /// <summary> A description of the field schema. </summary>
        public string Description { get; set; }

        /// <summary> The fields defined in the schema. </summary>
        public IDictionary<string, ContentFieldDefinition> Fields { get; }

        /// <summary> Additional definitions referenced by the fields in the schema. </summary>
        public IDictionary<string, ContentFieldDefinition> Definitions { get; }
    }
}
