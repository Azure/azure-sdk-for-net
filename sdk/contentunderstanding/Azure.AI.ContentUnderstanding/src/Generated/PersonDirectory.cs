// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> Directory of people and their faces. </summary>
    public partial class PersonDirectory
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="PersonDirectory"/>. </summary>
        public PersonDirectory()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="PersonDirectory"/>. </summary>
        /// <param name="personDirectoryId"> The unique identifier of the person directory. </param>
        /// <param name="description"> A description of the person directory. </param>
        /// <param name="tags"> Tags associated with the person directory. </param>
        /// <param name="createdAt"> The date and time when the person directory was created. </param>
        /// <param name="lastModifiedAt"> The date and time when the person directory was last modified. </param>
        /// <param name="personCount"> Number of people in the person directory. </param>
        /// <param name="faceCount"> Number of faces in the person directory. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal PersonDirectory(string personDirectoryId, string description, IDictionary<string, string> tags, DateTimeOffset createdAt, DateTimeOffset lastModifiedAt, int personCount, int faceCount, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            PersonDirectoryId = personDirectoryId;
            Description = description;
            Tags = tags;
            CreatedAt = createdAt;
            LastModifiedAt = lastModifiedAt;
            PersonCount = personCount;
            FaceCount = faceCount;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The unique identifier of the person directory. </summary>
        public string PersonDirectoryId { get; }

        /// <summary> A description of the person directory. </summary>
        public string Description { get; set; }

        /// <summary> Tags associated with the person directory. </summary>
        public IDictionary<string, string> Tags { get; }

        /// <summary> The date and time when the person directory was created. </summary>
        public DateTimeOffset CreatedAt { get; }

        /// <summary> The date and time when the person directory was last modified. </summary>
        public DateTimeOffset LastModifiedAt { get; }

        /// <summary> Number of people in the person directory. </summary>
        public int PersonCount { get; }

        /// <summary> Number of faces in the person directory. </summary>
        public int FaceCount { get; }
    }
}
