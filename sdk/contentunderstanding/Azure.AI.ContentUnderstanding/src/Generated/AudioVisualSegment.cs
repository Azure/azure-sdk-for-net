// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.ContentUnderstanding
{
    /// <summary> Audio visual segment, such as a scene, chapter, etc. </summary>
    public partial class AudioVisualSegment
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AudioVisualSegment"/>. </summary>
        /// <param name="segmentId"> Segment ID. </param>
        /// <param name="startTimeMs"> Start time of the segment in milliseconds. </param>
        /// <param name="endTimeMs"> End time of the segment in milliseconds. </param>
        /// <param name="description"> Short description of the segment. </param>
        internal AudioVisualSegment(string segmentId, long startTimeMs, long endTimeMs, string description)
        {
            SegmentId = segmentId;
            StartTimeMs = startTimeMs;
            EndTimeMs = endTimeMs;
            Description = description;
        }

        /// <summary> Initializes a new instance of <see cref="AudioVisualSegment"/>. </summary>
        /// <param name="segmentId"> Segment ID. </param>
        /// <param name="startTimeMs"> Start time of the segment in milliseconds. </param>
        /// <param name="endTimeMs"> End time of the segment in milliseconds. </param>
        /// <param name="description"> Short description of the segment. </param>
        /// <param name="span"> Span of the segment in the markdown content. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AudioVisualSegment(string segmentId, long startTimeMs, long endTimeMs, string description, ContentSpan span, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            SegmentId = segmentId;
            StartTimeMs = startTimeMs;
            EndTimeMs = endTimeMs;
            Description = description;
            Span = span;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Segment ID. </summary>
        public string SegmentId { get; }

        /// <summary> Start time of the segment in milliseconds. </summary>
        public long StartTimeMs { get; }

        /// <summary> End time of the segment in milliseconds. </summary>
        public long EndTimeMs { get; }

        /// <summary> Short description of the segment. </summary>
        public string Description { get; }

        /// <summary> Span of the segment in the markdown content. </summary>
        public ContentSpan Span { get; }
    }
}
