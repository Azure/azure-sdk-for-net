// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.StorageDiscovery;

namespace Azure.ResourceManager.StorageDiscovery.Models
{
    /// <summary> Storage Discovery Workspace Properties. </summary>
    public partial class StorageDiscoveryWorkspaceProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="StorageDiscoveryWorkspaceProperties"/>. </summary>
        /// <param name="workspaceRoots"> The view level storage discovery data estate. </param>
        /// <param name="scopes"> The scopes of the storage discovery workspace. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="workspaceRoots"/> or <paramref name="scopes"/> is null. </exception>
        public StorageDiscoveryWorkspaceProperties(IEnumerable<ResourceIdentifier> workspaceRoots, IEnumerable<StorageDiscoveryScope> scopes)
        {
            Argument.AssertNotNull(workspaceRoots, nameof(workspaceRoots));
            Argument.AssertNotNull(scopes, nameof(scopes));

            WorkspaceRoots = workspaceRoots.ToList();
            Scopes = scopes.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="StorageDiscoveryWorkspaceProperties"/>. </summary>
        /// <param name="sku"> The storage discovery sku. </param>
        /// <param name="description"> The description of the storage discovery workspace. </param>
        /// <param name="workspaceRoots"> The view level storage discovery data estate. </param>
        /// <param name="scopes"> The scopes of the storage discovery workspace. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal StorageDiscoveryWorkspaceProperties(StorageDiscoverySku? sku, string description, IList<ResourceIdentifier> workspaceRoots, IList<StorageDiscoveryScope> scopes, StorageDiscoveryProvisioningState? provisioningState, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Sku = sku;
            Description = description;
            WorkspaceRoots = workspaceRoots;
            Scopes = scopes;
            ProvisioningState = provisioningState;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The storage discovery sku. </summary>
        public StorageDiscoverySku? Sku { get; set; }

        /// <summary> The description of the storage discovery workspace. </summary>
        public string Description { get; set; }

        /// <summary> The view level storage discovery data estate. </summary>
        public IList<ResourceIdentifier> WorkspaceRoots { get; }

        /// <summary> The scopes of the storage discovery workspace. </summary>
        public IList<StorageDiscoveryScope> Scopes { get; }

        /// <summary> The status of the last operation. </summary>
        public StorageDiscoveryProvisioningState? ProvisioningState { get; }
    }
}
