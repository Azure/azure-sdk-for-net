// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.StorageDiscovery.Mocking;

namespace Azure.ResourceManager.StorageDiscovery
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.StorageDiscovery. </summary>
    public static partial class StorageDiscoveryExtensions
    {
        private static MockableStorageDiscoveryArmClient GetMockableStorageDiscoveryArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableStorageDiscoveryArmClient(client0));
        }

        private static MockableStorageDiscoveryResourceGroupResource GetMockableStorageDiscoveryResourceGroupResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableStorageDiscoveryResourceGroupResource(client, resource.Id));
        }

        private static MockableStorageDiscoverySubscriptionResource GetMockableStorageDiscoverySubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableStorageDiscoverySubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Gets an object representing a <see cref="StorageDiscoveryWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="StorageDiscoveryWorkspaceResource.CreateResourceIdentifier" /> to create a <see cref="StorageDiscoveryWorkspaceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableStorageDiscoveryArmClient.GetStorageDiscoveryWorkspaceResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="StorageDiscoveryWorkspaceResource"/> object. </returns>
        public static StorageDiscoveryWorkspaceResource GetStorageDiscoveryWorkspaceResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableStorageDiscoveryArmClient(client).GetStorageDiscoveryWorkspaceResource(id);
        }

        /// <summary>
        /// Gets a collection of StorageDiscoveryWorkspaceResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableStorageDiscoveryResourceGroupResource.GetStorageDiscoveryWorkspaces()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        /// <returns> An object representing collection of StorageDiscoveryWorkspaceResources and their operations over a StorageDiscoveryWorkspaceResource. </returns>
        public static StorageDiscoveryWorkspaceCollection GetStorageDiscoveryWorkspaces(this ResourceGroupResource resourceGroupResource)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableStorageDiscoveryResourceGroupResource(resourceGroupResource).GetStorageDiscoveryWorkspaces();
        }

        /// <summary>
        /// Get a StorageDiscoveryWorkspace
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{storageDiscoveryWorkspaceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>StorageDiscoveryWorkspace_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="StorageDiscoveryWorkspaceResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableStorageDiscoveryResourceGroupResource.GetStorageDiscoveryWorkspaceAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="storageDiscoveryWorkspaceName"> The name of the StorageDiscoveryWorkspace. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="storageDiscoveryWorkspaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="storageDiscoveryWorkspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<StorageDiscoveryWorkspaceResource>> GetStorageDiscoveryWorkspaceAsync(this ResourceGroupResource resourceGroupResource, string storageDiscoveryWorkspaceName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return await GetMockableStorageDiscoveryResourceGroupResource(resourceGroupResource).GetStorageDiscoveryWorkspaceAsync(storageDiscoveryWorkspaceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a StorageDiscoveryWorkspace
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces/{storageDiscoveryWorkspaceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>StorageDiscoveryWorkspace_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="StorageDiscoveryWorkspaceResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableStorageDiscoveryResourceGroupResource.GetStorageDiscoveryWorkspace(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="storageDiscoveryWorkspaceName"> The name of the StorageDiscoveryWorkspace. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="storageDiscoveryWorkspaceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="storageDiscoveryWorkspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<StorageDiscoveryWorkspaceResource> GetStorageDiscoveryWorkspace(this ResourceGroupResource resourceGroupResource, string storageDiscoveryWorkspaceName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableStorageDiscoveryResourceGroupResource(resourceGroupResource).GetStorageDiscoveryWorkspace(storageDiscoveryWorkspaceName, cancellationToken);
        }

        /// <summary>
        /// List StorageDiscoveryWorkspace resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>StorageDiscoveryWorkspace_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="StorageDiscoveryWorkspaceResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableStorageDiscoverySubscriptionResource.GetStorageDiscoveryWorkspaces(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> An async collection of <see cref="StorageDiscoveryWorkspaceResource"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<StorageDiscoveryWorkspaceResource> GetStorageDiscoveryWorkspacesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableStorageDiscoverySubscriptionResource(subscriptionResource).GetStorageDiscoveryWorkspacesAsync(cancellationToken);
        }

        /// <summary>
        /// List StorageDiscoveryWorkspace resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.StorageDiscovery/storageDiscoveryWorkspaces</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>StorageDiscoveryWorkspace_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2025-06-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="StorageDiscoveryWorkspaceResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableStorageDiscoverySubscriptionResource.GetStorageDiscoveryWorkspaces(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="StorageDiscoveryWorkspaceResource"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<StorageDiscoveryWorkspaceResource> GetStorageDiscoveryWorkspaces(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableStorageDiscoverySubscriptionResource(subscriptionResource).GetStorageDiscoveryWorkspaces(cancellationToken);
        }
    }
}
