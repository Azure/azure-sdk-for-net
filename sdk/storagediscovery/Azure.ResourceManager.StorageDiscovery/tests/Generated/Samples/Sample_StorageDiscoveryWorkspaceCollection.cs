// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.StorageDiscovery.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.StorageDiscovery.Samples
{
    public partial class Sample_StorageDiscoveryWorkspaceCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_CreateOrUpdateAStorageDiscoveryWorkspace()
        {
            // Generated from example definition: 2025-06-01-preview/StorageDiscoveryWorkspaces_CreateOrUpdate.json
            // this example is just showing the usage of "StorageDiscoveryWorkspace_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "b79cb3ba-745e-5d9a-8903-4a02327a7e09";
            string resourceGroupName = "sample-rg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this StorageDiscoveryWorkspaceResource
            StorageDiscoveryWorkspaceCollection collection = resourceGroupResource.GetStorageDiscoveryWorkspaces();

            // invoke the operation
            string storageDiscoveryWorkspaceName = "Sample-Storage-Workspace";
            StorageDiscoveryWorkspaceData data = new StorageDiscoveryWorkspaceData(new AzureLocation("westeurope"))
            {
                Properties = new StorageDiscoveryWorkspaceProperties(new ResourceIdentifier[] { new ResourceIdentifier("/subscriptions/b79cb3ba-745e-5d9a-8903-4a02327a7e09") }, new StorageDiscoveryScope[]
            {
new StorageDiscoveryScope("Sample-Collection", new StorageDiscoveryResourceType[]{new StorageDiscoveryResourceType("/subscriptions/b79cb3ba-745e-5d9a-8903-4a02327a7e09/resourceGroups/sample-rg/providers/Microsoft.Storage/storageAccounts/sample-storageAccount")})
{
TagKeysOnly = {"filterTag1", "filterTag2"},
Tags =
{
["filterTag3"] = "value3",
["filterTag4"] = "value4"
},
},
new StorageDiscoveryScope("Sample-Collection-2", new StorageDiscoveryResourceType[]{new StorageDiscoveryResourceType("/subscriptions/b79cb3ba-745e-5d9a-8903-4a02327a7e09/resourceGroups/sample-rg/providers/Microsoft.Storage/storageAccounts/sample-storageAccount")})
{
TagKeysOnly = {"filterTag5"},
Tags =
{
["filterTag6"] = "value6"
},
}
            })
                {
                    Description = "Sample Storage Discovery Workspace",
                },
                Tags =
{
["tag1"] = "value1",
["tag2"] = "value2"
},
            };
            ArmOperation<StorageDiscoveryWorkspaceResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, storageDiscoveryWorkspaceName, data);
            StorageDiscoveryWorkspaceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageDiscoveryWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetAStorageDiscoveryWorkspace()
        {
            // Generated from example definition: 2025-06-01-preview/StorageDiscoveryWorkspaces_Get.json
            // this example is just showing the usage of "StorageDiscoveryWorkspace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "b79cb3ba-745e-5d9a-8903-4a02327a7e09";
            string resourceGroupName = "sample-rg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this StorageDiscoveryWorkspaceResource
            StorageDiscoveryWorkspaceCollection collection = resourceGroupResource.GetStorageDiscoveryWorkspaces();

            // invoke the operation
            string storageDiscoveryWorkspaceName = "Sample-Storage-Workspace";
            StorageDiscoveryWorkspaceResource result = await collection.GetAsync(storageDiscoveryWorkspaceName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageDiscoveryWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ListStorageDiscoveryWorkspacesByResourceGroup()
        {
            // Generated from example definition: 2025-06-01-preview/StorageDiscoveryWorkspaces_ListByResourceGroup.json
            // this example is just showing the usage of "StorageDiscoveryWorkspace_ListByResourceGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "b79cb3ba-745e-5d9a-8903-4a02327a7e09";
            string resourceGroupName = "sample-rg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this StorageDiscoveryWorkspaceResource
            StorageDiscoveryWorkspaceCollection collection = resourceGroupResource.GetStorageDiscoveryWorkspaces();

            // invoke the operation and iterate over the result
            await foreach (StorageDiscoveryWorkspaceResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageDiscoveryWorkspaceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_GetAStorageDiscoveryWorkspace()
        {
            // Generated from example definition: 2025-06-01-preview/StorageDiscoveryWorkspaces_Get.json
            // this example is just showing the usage of "StorageDiscoveryWorkspace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "b79cb3ba-745e-5d9a-8903-4a02327a7e09";
            string resourceGroupName = "sample-rg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this StorageDiscoveryWorkspaceResource
            StorageDiscoveryWorkspaceCollection collection = resourceGroupResource.GetStorageDiscoveryWorkspaces();

            // invoke the operation
            string storageDiscoveryWorkspaceName = "Sample-Storage-Workspace";
            bool result = await collection.ExistsAsync(storageDiscoveryWorkspaceName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_GetAStorageDiscoveryWorkspace()
        {
            // Generated from example definition: 2025-06-01-preview/StorageDiscoveryWorkspaces_Get.json
            // this example is just showing the usage of "StorageDiscoveryWorkspace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "b79cb3ba-745e-5d9a-8903-4a02327a7e09";
            string resourceGroupName = "sample-rg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this StorageDiscoveryWorkspaceResource
            StorageDiscoveryWorkspaceCollection collection = resourceGroupResource.GetStorageDiscoveryWorkspaces();

            // invoke the operation
            string storageDiscoveryWorkspaceName = "Sample-Storage-Workspace";
            NullableResponse<StorageDiscoveryWorkspaceResource> response = await collection.GetIfExistsAsync(storageDiscoveryWorkspaceName);
            StorageDiscoveryWorkspaceResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageDiscoveryWorkspaceData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
