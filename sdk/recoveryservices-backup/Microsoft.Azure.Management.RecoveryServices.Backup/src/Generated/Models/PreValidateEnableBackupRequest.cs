// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Contract to validate if backup can be enabled on the given resource in
    /// a given vault and given configuration.
    /// It will validate followings
    /// 1. Vault capacity
    /// 2. VM is already protected
    /// 3. Any VM related configuration passed in properties.
    /// </summary>
    public partial class PreValidateEnableBackupRequest
    {
        /// <summary>
        /// Initializes a new instance of the PreValidateEnableBackupRequest
        /// class.
        /// </summary>
        public PreValidateEnableBackupRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PreValidateEnableBackupRequest
        /// class.
        /// </summary>
        /// <param name="resourceType">ProtectedItem Type- VM, SqlDataBase,
        /// AzureFileShare etc. Possible values include: 'Invalid', 'VM',
        /// 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint',
        /// 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource',
        /// 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase',
        /// 'SAPAseDatabase'</param>
        /// <param name="resourceId">ARM Virtual Machine Id</param>
        /// <param name="vaultId">ARM id of the Recovery Services Vault</param>
        /// <param name="properties">Configuration of VM if any needs to be
        /// validated like OS type etc</param>
        public PreValidateEnableBackupRequest(string resourceType = default(string), string resourceId = default(string), string vaultId = default(string), string properties = default(string))
        {
            ResourceType = resourceType;
            ResourceId = resourceId;
            VaultId = vaultId;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets protectedItem Type- VM, SqlDataBase, AzureFileShare
        /// etc. Possible values include: 'Invalid', 'VM', 'FileFolder',
        /// 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM',
        /// 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase',
        /// 'AzureFileShare', 'SAPHanaDatabase', 'SAPAseDatabase'
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or sets ARM Virtual Machine Id
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the Recovery Services Vault
        /// </summary>
        [JsonProperty(PropertyName = "vaultId")]
        public string VaultId { get; set; }

        /// <summary>
        /// Gets or sets configuration of VM if any needs to be validated like
        /// OS type etc
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public string Properties { get; set; }

    }
}
