// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of Recovery Point
    /// </summary>
    public partial class RecoveryPointProperties
    {
        /// <summary>
        /// Initializes a new instance of the RecoveryPointProperties class.
        /// </summary>
        public RecoveryPointProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecoveryPointProperties class.
        /// </summary>
        /// <param name="expiryTime">Expiry time of Recovery Point in
        /// UTC.</param>
        /// <param name="ruleName">Rule name tagged on Recovery Point that
        /// governs life cycle</param>
        /// <param name="isSoftDeleted">Bool to indicate whether RP is in soft
        /// delete state or not</param>
        public RecoveryPointProperties(string expiryTime = default(string), string ruleName = default(string), bool? isSoftDeleted = default(bool?))
        {
            ExpiryTime = expiryTime;
            RuleName = ruleName;
            IsSoftDeleted = isSoftDeleted;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets expiry time of Recovery Point in UTC.
        /// </summary>
        [JsonProperty(PropertyName = "expiryTime")]
        public string ExpiryTime { get; set; }

        /// <summary>
        /// Gets or sets rule name tagged on Recovery Point that governs life
        /// cycle
        /// </summary>
        [JsonProperty(PropertyName = "ruleName")]
        public string RuleName { get; set; }

        /// <summary>
        /// Gets or sets bool to indicate whether RP is in soft delete state or
        /// not
        /// </summary>
        [JsonProperty(PropertyName = "isSoftDeleted")]
        public bool? IsSoftDeleted { get; set; }

    }
}
