// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DiskExclusionProperties
    {
        /// <summary>
        /// Initializes a new instance of the DiskExclusionProperties class.
        /// </summary>
        public DiskExclusionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiskExclusionProperties class.
        /// </summary>
        /// <param name="diskLunList">List of Disks' Logical Unit Numbers (LUN)
        /// to be used for VM Protection.</param>
        /// <param name="isInclusionList">Flag to indicate whether DiskLunList
        /// is to be included/ excluded from backup.</param>
        public DiskExclusionProperties(IList<int?> diskLunList = default(IList<int?>), bool? isInclusionList = default(bool?))
        {
            DiskLunList = diskLunList;
            IsInclusionList = isInclusionList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of Disks' Logical Unit Numbers (LUN) to be used
        /// for VM Protection.
        /// </summary>
        [JsonProperty(PropertyName = "diskLunList")]
        public IList<int?> DiskLunList { get; set; }

        /// <summary>
        /// Gets or sets flag to indicate whether DiskLunList is to be
        /// included/ excluded from backup.
        /// </summary>
        [JsonProperty(PropertyName = "isInclusionList")]
        public bool? IsInclusionList { get; set; }

    }
}
