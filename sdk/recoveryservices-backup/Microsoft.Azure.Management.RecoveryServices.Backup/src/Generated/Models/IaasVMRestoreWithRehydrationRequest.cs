// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// IaaS VM workload-specific restore with integrated rehydration of
    /// recovery point.
    /// </summary>
    public partial class IaasVMRestoreWithRehydrationRequest : IaasVMRestoreRequest
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IaasVMRestoreWithRehydrationRequest class.
        /// </summary>
        public IaasVMRestoreWithRehydrationRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// IaasVMRestoreWithRehydrationRequest class.
        /// </summary>
        /// <param name="recoveryPointId">ID of the backup copy to be
        /// recovered.</param>
        /// <param name="recoveryType">Type of this recovery. Possible values
        /// include: 'Invalid', 'OriginalLocation', 'AlternateLocation',
        /// 'RestoreDisks', 'Offline'</param>
        /// <param name="sourceResourceId">Fully qualified ARM ID of the VM
        /// which is being recovered.</param>
        /// <param name="targetVirtualMachineId">This is the complete ARM Id of
        /// the VM that will be created.
        /// For e.g.
        /// /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}</param>
        /// <param name="targetResourceGroupId">This is the ARM Id of the
        /// resource group that you want to create for this Virtual machine and
        /// other artifacts.
        /// For e.g. /subscriptions/{subId}/resourcegroups/{rg}</param>
        /// <param name="storageAccountId">Fully qualified ARM ID of the
        /// storage account to which the VM has to be restored.</param>
        /// <param name="virtualNetworkId">This is the virtual network Id of
        /// the vnet that will be attached to the virtual machine.
        /// User will be validated for join action permissions in the linked
        /// access.</param>
        /// <param name="subnetId">Subnet ID, is the subnet ID associated with
        /// the to be restored VM. For Classic VMs it would be
        /// {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager
        /// VMs it would be ARM resource ID used to represent
        /// the subnet.</param>
        /// <param name="targetDomainNameId">Fully qualified ARM ID of the
        /// domain name to be associated to the VM being restored. This applies
        /// only to Classic
        /// Virtual Machines.</param>
        /// <param name="region">Region in which the virtual machine is
        /// restored.</param>
        /// <param name="affinityGroup">Affinity group associated to VM to be
        /// restored. Used only for Classic Compute Virtual Machines.</param>
        /// <param name="createNewCloudService">Should a new cloud service be
        /// created while restoring the VM. If this is false, VM will be
        /// restored to the same
        /// cloud service as it was at the time of backup.</param>
        /// <param name="originalStorageAccountOption">Original Storage Account
        /// Option</param>
        /// <param name="encryptionDetails">Details needed if the VM was
        /// encrypted at the time of backup.</param>
        /// <param name="restoreDiskLunList">List of Disk LUNs for partial
        /// restore</param>
        /// <param name="restoreWithManagedDisks">Flag to denote of an
        /// Unmanaged disk VM should be restored with Managed disks.</param>
        /// <param name="diskEncryptionSetId">DiskEncryptionSet's ID - needed
        /// if the VM needs to be encrypted at rest during restore with
        /// customer managed key.</param>
        /// <param name="zones">Target zone where the VM and its disks should
        /// be restored.</param>
        /// <param name="recoveryPointRehydrationInfo">RP Rehydration
        /// Info</param>
        public IaasVMRestoreWithRehydrationRequest(string recoveryPointId = default(string), string recoveryType = default(string), string sourceResourceId = default(string), string targetVirtualMachineId = default(string), string targetResourceGroupId = default(string), string storageAccountId = default(string), string virtualNetworkId = default(string), string subnetId = default(string), string targetDomainNameId = default(string), string region = default(string), string affinityGroup = default(string), bool? createNewCloudService = default(bool?), bool? originalStorageAccountOption = default(bool?), EncryptionDetails encryptionDetails = default(EncryptionDetails), IList<int?> restoreDiskLunList = default(IList<int?>), bool? restoreWithManagedDisks = default(bool?), string diskEncryptionSetId = default(string), IList<string> zones = default(IList<string>), RecoveryPointRehydrationInfo recoveryPointRehydrationInfo = default(RecoveryPointRehydrationInfo))
            : base(recoveryPointId, recoveryType, sourceResourceId, targetVirtualMachineId, targetResourceGroupId, storageAccountId, virtualNetworkId, subnetId, targetDomainNameId, region, affinityGroup, createNewCloudService, originalStorageAccountOption, encryptionDetails, restoreDiskLunList, restoreWithManagedDisks, diskEncryptionSetId, zones)
        {
            RecoveryPointRehydrationInfo = recoveryPointRehydrationInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets RP Rehydration Info
        /// </summary>
        [JsonProperty(PropertyName = "recoveryPointRehydrationInfo")]
        public RecoveryPointRehydrationInfo RecoveryPointRehydrationInfo { get; set; }

    }
}
