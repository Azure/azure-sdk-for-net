// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// KPI Resource Health Details
    /// </summary>
    public partial class KPIResourceHealthDetails
    {
        /// <summary>
        /// Initializes a new instance of the KPIResourceHealthDetails class.
        /// </summary>
        public KPIResourceHealthDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KPIResourceHealthDetails class.
        /// </summary>
        /// <param name="resourceHealthStatus">Resource Health Status. Possible
        /// values include: 'Healthy', 'TransientDegraded',
        /// 'PersistentDegraded', 'TransientUnhealthy', 'PersistentUnhealthy',
        /// 'Invalid'</param>
        /// <param name="resourceHealthDetails">Resource Health Status</param>
        public KPIResourceHealthDetails(string resourceHealthStatus = default(string), IList<ResourceHealthDetails> resourceHealthDetails = default(IList<ResourceHealthDetails>))
        {
            ResourceHealthStatus = resourceHealthStatus;
            ResourceHealthDetails = resourceHealthDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource Health Status. Possible values include:
        /// 'Healthy', 'TransientDegraded', 'PersistentDegraded',
        /// 'TransientUnhealthy', 'PersistentUnhealthy', 'Invalid'
        /// </summary>
        [JsonProperty(PropertyName = "resourceHealthStatus")]
        public string ResourceHealthStatus { get; set; }

        /// <summary>
        /// Gets or sets resource Health Status
        /// </summary>
        [JsonProperty(PropertyName = "resourceHealthDetails")]
        public IList<ResourceHealthDetails> ResourceHealthDetails { get; set; }

    }
}
