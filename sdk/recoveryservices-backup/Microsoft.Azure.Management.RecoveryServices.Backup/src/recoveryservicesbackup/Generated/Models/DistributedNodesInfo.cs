// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// This is used to represent the various nodes of the distributed
    /// container.
    /// </summary>
    public partial class DistributedNodesInfo
    {
        /// <summary>
        /// Initializes a new instance of the DistributedNodesInfo class.
        /// </summary>
        public DistributedNodesInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DistributedNodesInfo class.
        /// </summary>
        /// <param name="nodeName">Name of the node under a distributed
        /// container.</param>
        /// <param name="status">Status of this Node.
        /// Failed | Succeeded</param>
        /// <param name="errorDetail">Error Details if the Status is
        /// non-success.</param>
        public DistributedNodesInfo(string nodeName = default(string), string status = default(string), ErrorDetail errorDetail = default(ErrorDetail))
        {
            NodeName = nodeName;
            Status = status;
            ErrorDetail = errorDetail;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the node under a distributed container.
        /// </summary>
        [JsonProperty(PropertyName = "nodeName")]
        public string NodeName { get; set; }

        /// <summary>
        /// Gets or sets status of this Node.
        /// Failed | Succeeded
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets error Details if the Status is non-success.
        /// </summary>
        [JsonProperty(PropertyName = "errorDetail")]
        public ErrorDetail ErrorDetail { get; set; }

    }
}
