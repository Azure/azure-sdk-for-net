// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Filters to list the jobs.
    /// </summary>
    public partial class JobQueryObject
    {
        /// <summary>
        /// Initializes a new instance of the JobQueryObject class.
        /// </summary>
        public JobQueryObject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobQueryObject class.
        /// </summary>
        /// <param name="status">Status of the job. Possible values include:
        /// 'Invalid', 'InProgress', 'Completed', 'Failed',
        /// 'CompletedWithWarnings', 'Cancelled', 'Cancelling'</param>
        /// <param name="backupManagementType">Type of backup management for
        /// the job. Possible values include: 'Invalid', 'AzureIaasVM', 'MAB',
        /// 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage',
        /// 'AzureWorkload', 'DefaultBackup'</param>
        /// <param name="operation">Type of operation. Possible values include:
        /// 'Invalid', 'Register', 'UnRegister', 'ConfigureBackup', 'Backup',
        /// 'Restore', 'DisableBackup', 'DeleteBackupData',
        /// 'CrossRegionRestore', 'Undelete',
        /// 'UpdateCustomerManagedKey'</param>
        /// <param name="jobId">JobID represents the job uniquely.</param>
        /// <param name="startTime">Job has started at this time. Value is in
        /// UTC.</param>
        /// <param name="endTime">Job has ended at this time. Value is in
        /// UTC.</param>
        public JobQueryObject(string status = default(string), string backupManagementType = default(string), string operation = default(string), string jobId = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?))
        {
            Status = status;
            BackupManagementType = backupManagementType;
            Operation = operation;
            JobId = jobId;
            StartTime = startTime;
            EndTime = endTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets status of the job. Possible values include: 'Invalid',
        /// 'InProgress', 'Completed', 'Failed', 'CompletedWithWarnings',
        /// 'Cancelled', 'Cancelling'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets type of backup management for the job. Possible values
        /// include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
        /// 'DefaultBackup'
        /// </summary>
        [JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType { get; set; }

        /// <summary>
        /// Gets or sets type of operation. Possible values include: 'Invalid',
        /// 'Register', 'UnRegister', 'ConfigureBackup', 'Backup', 'Restore',
        /// 'DisableBackup', 'DeleteBackupData', 'CrossRegionRestore',
        /// 'Undelete', 'UpdateCustomerManagedKey'
        /// </summary>
        [JsonProperty(PropertyName = "operation")]
        public string Operation { get; set; }

        /// <summary>
        /// Gets or sets jobID represents the job uniquely.
        /// </summary>
        [JsonProperty(PropertyName = "jobId")]
        public string JobId { get; set; }

        /// <summary>
        /// Gets or sets job has started at this time. Value is in UTC.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets job has ended at this time. Value is in UTC.
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; set; }

    }
}
