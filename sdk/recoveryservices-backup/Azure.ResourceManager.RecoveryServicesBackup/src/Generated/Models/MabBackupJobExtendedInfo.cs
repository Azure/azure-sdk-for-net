// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary> Additional information for the MAB workload-specific job. </summary>
    public partial class MabBackupJobExtendedInfo
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="MabBackupJobExtendedInfo"/>. </summary>
        public MabBackupJobExtendedInfo()
        {
            TasksList = new ChangeTrackingList<MabBackupJobTaskDetails>();
            PropertyBag = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="MabBackupJobExtendedInfo"/>. </summary>
        /// <param name="tasksList"> List of tasks for this job. </param>
        /// <param name="propertyBag"> The job properties. </param>
        /// <param name="dynamicErrorMessage"> Non localized error message specific to this job. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal MabBackupJobExtendedInfo(IList<MabBackupJobTaskDetails> tasksList, IDictionary<string, string> propertyBag, string dynamicErrorMessage, Dictionary<string, BinaryData> rawData)
        {
            TasksList = tasksList;
            PropertyBag = propertyBag;
            DynamicErrorMessage = dynamicErrorMessage;
            _rawData = rawData;
        }

        /// <summary> List of tasks for this job. </summary>
        public IList<MabBackupJobTaskDetails> TasksList { get; }
        /// <summary> The job properties. </summary>
        public IDictionary<string, string> PropertyBag { get; }
        /// <summary> Non localized error message specific to this job. </summary>
        public string DynamicErrorMessage { get; set; }
    }
}
