// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    public partial class AzureFileShareRestoreRequest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RecoveryType))
            {
                writer.WritePropertyName("recoveryType");
                writer.WriteStringValue(RecoveryType.Value.ToString());
            }
            if (Optional.IsDefined(SourceResourceId))
            {
                writer.WritePropertyName("sourceResourceId");
                writer.WriteStringValue(SourceResourceId);
            }
            if (Optional.IsDefined(CopyOptions))
            {
                writer.WritePropertyName("copyOptions");
                writer.WriteStringValue(CopyOptions.Value.ToString());
            }
            if (Optional.IsDefined(RestoreRequestType))
            {
                writer.WritePropertyName("restoreRequestType");
                writer.WriteStringValue(RestoreRequestType.Value.ToString());
            }
            if (Optional.IsCollectionDefined(RestoreFileSpecs))
            {
                writer.WritePropertyName("restoreFileSpecs");
                writer.WriteStartArray();
                foreach (var item in RestoreFileSpecs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(TargetDetails))
            {
                writer.WritePropertyName("targetDetails");
                writer.WriteObjectValue(TargetDetails);
            }
            writer.WritePropertyName("objectType");
            writer.WriteStringValue(ObjectType);
            writer.WriteEndObject();
        }

        internal static AzureFileShareRestoreRequest DeserializeAzureFileShareRestoreRequest(JsonElement element)
        {
            Optional<RecoveryType> recoveryType = default;
            Optional<string> sourceResourceId = default;
            Optional<CopyOption> copyOptions = default;
            Optional<RestoreRequestType> restoreRequestType = default;
            Optional<IList<RestoreFileSpecs>> restoreFileSpecs = default;
            Optional<TargetAFSRestoreInfo> targetDetails = default;
            string objectType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("recoveryType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    recoveryType = new RecoveryType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sourceResourceId"))
                {
                    sourceResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("copyOptions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    copyOptions = new CopyOption(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("restoreRequestType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    restoreRequestType = new RestoreRequestType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("restoreFileSpecs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RestoreFileSpecs> array = new List<RestoreFileSpecs>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Models.RestoreFileSpecs.DeserializeRestoreFileSpecs(item));
                    }
                    restoreFileSpecs = array;
                    continue;
                }
                if (property.NameEquals("targetDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    targetDetails = TargetAFSRestoreInfo.DeserializeTargetAFSRestoreInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("objectType"))
                {
                    objectType = property.Value.GetString();
                    continue;
                }
            }
            return new AzureFileShareRestoreRequest(objectType, Optional.ToNullable(recoveryType), sourceResourceId.Value, Optional.ToNullable(copyOptions), Optional.ToNullable(restoreRequestType), Optional.ToList(restoreFileSpecs), targetDetails.Value);
        }
    }
}
