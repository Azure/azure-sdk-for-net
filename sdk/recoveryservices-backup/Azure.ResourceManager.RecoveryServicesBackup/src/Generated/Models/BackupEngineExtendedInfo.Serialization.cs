// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    public partial class BackupEngineExtendedInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DatabaseName))
            {
                writer.WritePropertyName("databaseName"u8);
                writer.WriteStringValue(DatabaseName);
            }
            if (Optional.IsDefined(ProtectedItemsCount))
            {
                writer.WritePropertyName("protectedItemsCount"u8);
                writer.WriteNumberValue(ProtectedItemsCount.Value);
            }
            if (Optional.IsDefined(ProtectedServersCount))
            {
                writer.WritePropertyName("protectedServersCount"u8);
                writer.WriteNumberValue(ProtectedServersCount.Value);
            }
            if (Optional.IsDefined(DiskCount))
            {
                writer.WritePropertyName("diskCount"u8);
                writer.WriteNumberValue(DiskCount.Value);
            }
            if (Optional.IsDefined(UsedDiskSpace))
            {
                writer.WritePropertyName("usedDiskSpace"u8);
                writer.WriteNumberValue(UsedDiskSpace.Value);
            }
            if (Optional.IsDefined(AvailableDiskSpace))
            {
                writer.WritePropertyName("availableDiskSpace"u8);
                writer.WriteNumberValue(AvailableDiskSpace.Value);
            }
            if (Optional.IsDefined(RefreshedOn))
            {
                writer.WritePropertyName("refreshedAt"u8);
                writer.WriteStringValue(RefreshedOn.Value, "O");
            }
            if (Optional.IsDefined(AzureProtectedInstances))
            {
                writer.WritePropertyName("azureProtectedInstances"u8);
                writer.WriteNumberValue(AzureProtectedInstances.Value);
            }
            writer.WriteEndObject();
        }

        internal static BackupEngineExtendedInfo DeserializeBackupEngineExtendedInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> databaseName = default;
            Optional<int> protectedItemsCount = default;
            Optional<int> protectedServersCount = default;
            Optional<int> diskCount = default;
            Optional<double> usedDiskSpace = default;
            Optional<double> availableDiskSpace = default;
            Optional<DateTimeOffset> refreshedAt = default;
            Optional<int> azureProtectedInstances = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("databaseName"u8))
                {
                    databaseName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protectedItemsCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    protectedItemsCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("protectedServersCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    protectedServersCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("diskCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    diskCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("usedDiskSpace"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    usedDiskSpace = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("availableDiskSpace"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    availableDiskSpace = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("refreshedAt"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    refreshedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("azureProtectedInstances"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    azureProtectedInstances = property.Value.GetInt32();
                    continue;
                }
            }
            return new BackupEngineExtendedInfo(databaseName.Value, Optional.ToNullable(protectedItemsCount), Optional.ToNullable(protectedServersCount), Optional.ToNullable(diskCount), Optional.ToNullable(usedDiskSpace), Optional.ToNullable(availableDiskSpace), Optional.ToNullable(refreshedAt), Optional.ToNullable(azureProtectedInstances));
        }
    }
}
