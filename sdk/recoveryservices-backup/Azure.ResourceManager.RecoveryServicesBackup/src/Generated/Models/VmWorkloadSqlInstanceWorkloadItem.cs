// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary> Azure VM workload-specific workload item representing SQL Instance. </summary>
    public partial class VmWorkloadSqlInstanceWorkloadItem : VmWorkloadItem
    {
        /// <summary> Initializes a new instance of <see cref="VmWorkloadSqlInstanceWorkloadItem"/>. </summary>
        public VmWorkloadSqlInstanceWorkloadItem()
        {
            DataDirectoryPaths = new ChangeTrackingList<SqlDataDirectory>();
            WorkloadItemType = "SQLInstance";
        }

        /// <summary> Initializes a new instance of <see cref="VmWorkloadSqlInstanceWorkloadItem"/>. </summary>
        /// <param name="backupManagementType"> Type of backup management to backup an item. </param>
        /// <param name="workloadType"> Type of workload for the backup management. </param>
        /// <param name="workloadItemType"> Type of the backup item. </param>
        /// <param name="friendlyName"> Friendly name of the backup item. </param>
        /// <param name="protectionState"> State of the back up item. </param>
        /// <param name="parentName"> Name for instance or AG. </param>
        /// <param name="serverName"> Host/Cluster Name for instance or AG. </param>
        /// <param name="isAutoProtectable"> Indicates if workload item is auto-protectable. </param>
        /// <param name="subInquiredItemCount"> For instance or AG, indicates number of DB's present. </param>
        /// <param name="subWorkloadItemCount"> For instance or AG, indicates number of DB's to be protected. </param>
        /// <param name="dataDirectoryPaths"> Data Directory Paths for default directories. </param>
        internal VmWorkloadSqlInstanceWorkloadItem(string backupManagementType, string workloadType, string workloadItemType, string friendlyName, BackupProtectionStatus? protectionState, string parentName, string serverName, bool? isAutoProtectable, int? subInquiredItemCount, int? subWorkloadItemCount, IList<SqlDataDirectory> dataDirectoryPaths) : base(backupManagementType, workloadType, workloadItemType, friendlyName, protectionState, parentName, serverName, isAutoProtectable, subInquiredItemCount, subWorkloadItemCount)
        {
            DataDirectoryPaths = dataDirectoryPaths;
            WorkloadItemType = workloadItemType ?? "SQLInstance";
        }

        /// <summary> Data Directory Paths for default directories. </summary>
        public IList<SqlDataDirectory> DataDirectoryPaths { get; }
    }
}
