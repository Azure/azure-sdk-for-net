// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary>
    /// Azure workload-specific container
    /// Serialized Name: AzureVMAppContainerProtectableContainer
    /// </summary>
    public partial class AzureVmAppContainerProtectableContainer : ProtectableContainer
    {
        /// <summary> Initializes a new instance of AzureVmAppContainerProtectableContainer. </summary>
        public AzureVmAppContainerProtectableContainer()
        {
            ProtectableContainerType = ProtectableContainerType.VmAppContainer;
        }

        /// <summary> Initializes a new instance of AzureVmAppContainerProtectableContainer. </summary>
        /// <param name="friendlyName">
        /// Friendly name of the container.
        /// Serialized Name: ProtectableContainer.friendlyName
        /// </param>
        /// <param name="backupManagementType">
        /// Type of backup management for the container.
        /// Serialized Name: ProtectableContainer.backupManagementType
        /// </param>
        /// <param name="protectableContainerType">
        /// Type of the container. The value of this property for
        /// 1. Compute Azure VM is Microsoft.Compute/virtualMachines
        /// 2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines
        /// Serialized Name: ProtectableContainer.protectableContainerType
        /// </param>
        /// <param name="healthStatus">
        /// Status of health of the container.
        /// Serialized Name: ProtectableContainer.healthStatus
        /// </param>
        /// <param name="containerId">
        /// Fabric Id of the container such as ARM Id.
        /// Serialized Name: ProtectableContainer.containerId
        /// </param>
        internal AzureVmAppContainerProtectableContainer(string friendlyName, BackupManagementType? backupManagementType, ProtectableContainerType protectableContainerType, string healthStatus, string containerId) : base(friendlyName, backupManagementType, protectableContainerType, healthStatus, containerId)
        {
            ProtectableContainerType = protectableContainerType;
        }
    }
}
