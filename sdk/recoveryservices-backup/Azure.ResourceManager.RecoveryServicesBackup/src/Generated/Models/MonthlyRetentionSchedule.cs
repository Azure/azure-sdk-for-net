// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary>
    /// Monthly retention schedule.
    /// Serialized Name: MonthlyRetentionSchedule
    /// </summary>
    public partial class MonthlyRetentionSchedule
    {
        /// <summary> Initializes a new instance of MonthlyRetentionSchedule. </summary>
        public MonthlyRetentionSchedule()
        {
            RetentionTimes = new ChangeTrackingList<DateTimeOffset>();
        }

        /// <summary> Initializes a new instance of MonthlyRetentionSchedule. </summary>
        /// <param name="retentionScheduleFormatType">
        /// Retention schedule format type for monthly retention policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionScheduleFormatType
        /// </param>
        /// <param name="retentionScheduleDaily">
        /// Daily retention format for monthly retention policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionScheduleDaily
        /// </param>
        /// <param name="retentionScheduleWeekly">
        /// Weekly retention format for monthly retention policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionScheduleWeekly
        /// </param>
        /// <param name="retentionTimes">
        /// Retention times of retention policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionTimes
        /// </param>
        /// <param name="retentionDuration">
        /// Retention duration of retention Policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionDuration
        /// </param>
        internal MonthlyRetentionSchedule(RetentionScheduleFormat? retentionScheduleFormatType, DailyRetentionFormat retentionScheduleDaily, WeeklyRetentionFormat retentionScheduleWeekly, IList<DateTimeOffset> retentionTimes, RetentionDuration retentionDuration)
        {
            RetentionScheduleFormatType = retentionScheduleFormatType;
            RetentionScheduleDaily = retentionScheduleDaily;
            RetentionScheduleWeekly = retentionScheduleWeekly;
            RetentionTimes = retentionTimes;
            RetentionDuration = retentionDuration;
        }

        /// <summary>
        /// Retention schedule format type for monthly retention policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionScheduleFormatType
        /// </summary>
        public RetentionScheduleFormat? RetentionScheduleFormatType { get; set; }
        /// <summary>
        /// Daily retention format for monthly retention policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionScheduleDaily
        /// </summary>
        internal DailyRetentionFormat RetentionScheduleDaily { get; set; }
        /// <summary>
        /// List of days of the month.
        /// Serialized Name: DailyRetentionFormat.daysOfTheMonth
        /// </summary>
        public IList<BackupDay> RetentionScheduleDailyDaysOfTheMonth
        {
            get
            {
                if (RetentionScheduleDaily is null)
                    RetentionScheduleDaily = new DailyRetentionFormat();
                return RetentionScheduleDaily.DaysOfTheMonth;
            }
        }

        /// <summary>
        /// Weekly retention format for monthly retention policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionScheduleWeekly
        /// </summary>
        public WeeklyRetentionFormat RetentionScheduleWeekly { get; set; }
        /// <summary>
        /// Retention times of retention policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionTimes
        /// </summary>
        public IList<DateTimeOffset> RetentionTimes { get; }
        /// <summary>
        /// Retention duration of retention Policy.
        /// Serialized Name: MonthlyRetentionSchedule.retentionDuration
        /// </summary>
        public RetentionDuration RetentionDuration { get; set; }
    }
}
