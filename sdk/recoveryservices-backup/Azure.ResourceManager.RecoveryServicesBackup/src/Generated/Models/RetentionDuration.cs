// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary> Retention duration. </summary>
    public partial class RetentionDuration
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="RetentionDuration"/>. </summary>
        public RetentionDuration()
        {
        }

        /// <summary> Initializes a new instance of <see cref="RetentionDuration"/>. </summary>
        /// <param name="count">
        /// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
        /// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
        /// </param>
        /// <param name="durationType"> Retention duration type of retention policy. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal RetentionDuration(int? count, RetentionDurationType? durationType, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Count = count;
            DurationType = durationType;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
        /// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
        /// </summary>
        public int? Count { get; set; }
        /// <summary> Retention duration type of retention policy. </summary>
        public RetentionDurationType? DurationType { get; set; }
    }
}
