// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    public partial class WorkloadInquiryDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(WorkloadInquiryDetailsType))
            {
                writer.WritePropertyName("type"u8);
                writer.WriteStringValue(WorkloadInquiryDetailsType);
            }
            if (Optional.IsDefined(ItemCount))
            {
                writer.WritePropertyName("itemCount"u8);
                writer.WriteNumberValue(ItemCount.Value);
            }
            if (Optional.IsDefined(InquiryValidation))
            {
                writer.WritePropertyName("inquiryValidation"u8);
                writer.WriteObjectValue(InquiryValidation);
            }
            writer.WriteEndObject();
        }

        internal static WorkloadInquiryDetails DeserializeWorkloadInquiryDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> type = default;
            Optional<long> itemCount = default;
            Optional<InquiryValidation> inquiryValidation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("itemCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    itemCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("inquiryValidation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    inquiryValidation = InquiryValidation.DeserializeInquiryValidation(property.Value);
                    continue;
                }
            }
            return new WorkloadInquiryDetails(type.Value, Optional.ToNullable(itemCount), inquiryValidation.Value);
        }
    }
}
