// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary>
    /// Defines workload agnostic properties for a job.
    /// Serialized Name: Job
    /// Please note <see cref="BackupJobProperties"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="AzureIaasVmJob"/>, <see cref="AzureIaasVmJobV2"/>, <see cref="AzureStorageJob"/>, <see cref="AzureWorkloadJob"/>, <see cref="DpmJob"/>, <see cref="MabJob"/> and <see cref="VaultJob"/>.
    /// </summary>
    public abstract partial class BackupJobProperties
    {
        /// <summary> Initializes a new instance of BackupJobProperties. </summary>
        protected BackupJobProperties()
        {
        }

        /// <summary> Initializes a new instance of BackupJobProperties. </summary>
        /// <param name="entityFriendlyName">
        /// Friendly name of the entity on which the current job is executing.
        /// Serialized Name: Job.entityFriendlyName
        /// </param>
        /// <param name="backupManagementType">
        /// Backup management type to execute the current job.
        /// Serialized Name: Job.backupManagementType
        /// </param>
        /// <param name="operation">
        /// The operation name.
        /// Serialized Name: Job.operation
        /// </param>
        /// <param name="status">
        /// Job status.
        /// Serialized Name: Job.status
        /// </param>
        /// <param name="startOn">
        /// The start time.
        /// Serialized Name: Job.startTime
        /// </param>
        /// <param name="endOn">
        /// The end time.
        /// Serialized Name: Job.endTime
        /// </param>
        /// <param name="activityId">
        /// ActivityId of job.
        /// Serialized Name: Job.activityId
        /// </param>
        /// <param name="jobType">
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// Serialized Name: Job.jobType
        /// </param>
        internal BackupJobProperties(string entityFriendlyName, BackupManagementType? backupManagementType, string operation, string status, DateTimeOffset? startOn, DateTimeOffset? endOn, string activityId, string jobType)
        {
            EntityFriendlyName = entityFriendlyName;
            BackupManagementType = backupManagementType;
            Operation = operation;
            Status = status;
            StartOn = startOn;
            EndOn = endOn;
            ActivityId = activityId;
            JobType = jobType;
        }

        /// <summary>
        /// Friendly name of the entity on which the current job is executing.
        /// Serialized Name: Job.entityFriendlyName
        /// </summary>
        public string EntityFriendlyName { get; set; }
        /// <summary>
        /// Backup management type to execute the current job.
        /// Serialized Name: Job.backupManagementType
        /// </summary>
        public BackupManagementType? BackupManagementType { get; set; }
        /// <summary>
        /// The operation name.
        /// Serialized Name: Job.operation
        /// </summary>
        public string Operation { get; set; }
        /// <summary>
        /// Job status.
        /// Serialized Name: Job.status
        /// </summary>
        public string Status { get; set; }
        /// <summary>
        /// The start time.
        /// Serialized Name: Job.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary>
        /// The end time.
        /// Serialized Name: Job.endTime
        /// </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary>
        /// ActivityId of job.
        /// Serialized Name: Job.activityId
        /// </summary>
        public string ActivityId { get; set; }
        /// <summary>
        /// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
        /// Serialized Name: Job.jobType
        /// </summary>
        internal string JobType { get; set; }
    }
}
