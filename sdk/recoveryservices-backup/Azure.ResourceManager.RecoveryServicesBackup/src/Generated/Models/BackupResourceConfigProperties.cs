// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary>
    /// The resource storage details.
    /// Serialized Name: BackupResourceConfig
    /// </summary>
    public partial class BackupResourceConfigProperties
    {
        /// <summary> Initializes a new instance of BackupResourceConfigProperties. </summary>
        public BackupResourceConfigProperties()
        {
        }

        /// <summary> Initializes a new instance of BackupResourceConfigProperties. </summary>
        /// <param name="storageModelType">
        /// Storage type
        /// Serialized Name: BackupResourceConfig.storageModelType
        /// </param>
        /// <param name="storageType">
        /// Storage type.
        /// Serialized Name: BackupResourceConfig.storageType
        /// </param>
        /// <param name="storageTypeState">
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// Serialized Name: BackupResourceConfig.storageTypeState
        /// </param>
        /// <param name="crossRegionRestoreFlag">
        /// Opt in details of Cross Region Restore feature.
        /// Serialized Name: BackupResourceConfig.crossRegionRestoreFlag
        /// </param>
        /// <param name="dedupState">
        /// Vault Dedup state
        /// Serialized Name: BackupResourceConfig.dedupState
        /// </param>
        /// <param name="xcoolState">
        /// Vault x-cool state
        /// Serialized Name: BackupResourceConfig.xcoolState
        /// </param>
        internal BackupResourceConfigProperties(BackupStorageType? storageModelType, BackupStorageType? storageType, StorageTypeState? storageTypeState, bool? crossRegionRestoreFlag, VaultDedupState? dedupState, VaultXcoolState? xcoolState)
        {
            StorageModelType = storageModelType;
            StorageType = storageType;
            StorageTypeState = storageTypeState;
            CrossRegionRestoreFlag = crossRegionRestoreFlag;
            DedupState = dedupState;
            XcoolState = xcoolState;
        }

        /// <summary>
        /// Storage type
        /// Serialized Name: BackupResourceConfig.storageModelType
        /// </summary>
        public BackupStorageType? StorageModelType { get; set; }
        /// <summary>
        /// Storage type.
        /// Serialized Name: BackupResourceConfig.storageType
        /// </summary>
        public BackupStorageType? StorageType { get; set; }
        /// <summary>
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// Serialized Name: BackupResourceConfig.storageTypeState
        /// </summary>
        public StorageTypeState? StorageTypeState { get; set; }
        /// <summary>
        /// Opt in details of Cross Region Restore feature.
        /// Serialized Name: BackupResourceConfig.crossRegionRestoreFlag
        /// </summary>
        public bool? CrossRegionRestoreFlag { get; set; }
        /// <summary>
        /// Vault Dedup state
        /// Serialized Name: BackupResourceConfig.dedupState
        /// </summary>
        public VaultDedupState? DedupState { get; set; }
        /// <summary>
        /// Vault x-cool state
        /// Serialized Name: BackupResourceConfig.xcoolState
        /// </summary>
        public VaultXcoolState? XcoolState { get; set; }
    }
}
