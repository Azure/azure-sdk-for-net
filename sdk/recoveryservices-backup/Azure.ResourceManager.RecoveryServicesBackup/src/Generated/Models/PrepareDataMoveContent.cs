// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary> Prepare DataMove Request. </summary>
    public partial class PrepareDataMoveContent
    {
        /// <summary> Initializes a new instance of PrepareDataMoveContent. </summary>
        /// <param name="targetResourceId"> ARM Id of target vault. </param>
        /// <param name="targetRegion"> Target Region. </param>
        /// <param name="dataMoveLevel"> DataMove Level. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="targetResourceId"/> or <paramref name="targetRegion"/> is null. </exception>
        public PrepareDataMoveContent(string targetResourceId, string targetRegion, DataMoveLevel dataMoveLevel)
        {
            if (targetResourceId == null)
            {
                throw new ArgumentNullException(nameof(targetResourceId));
            }
            if (targetRegion == null)
            {
                throw new ArgumentNullException(nameof(targetRegion));
            }

            TargetResourceId = targetResourceId;
            TargetRegion = targetRegion;
            DataMoveLevel = dataMoveLevel;
            SourceContainerArmIds = new ChangeTrackingList<string>();
        }

        /// <summary> ARM Id of target vault. </summary>
        public string TargetResourceId { get; }
        /// <summary> Target Region. </summary>
        public string TargetRegion { get; }
        /// <summary> DataMove Level. </summary>
        public DataMoveLevel DataMoveLevel { get; }
        /// <summary>
        /// Source Container ArmIds
        /// This needs to be populated only if DataMoveLevel is set to container
        /// </summary>
        public IList<string> SourceContainerArmIds { get; }
        /// <summary> Ignore the artifacts which are already moved. </summary>
        public bool? IgnoreMoved { get; set; }
    }
}
