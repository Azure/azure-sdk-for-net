// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary> Yearly retention schedule. </summary>
    public partial class YearlyRetentionSchedule
    {
        /// <summary> Initializes a new instance of <see cref="YearlyRetentionSchedule"/>. </summary>
        public YearlyRetentionSchedule()
        {
            MonthsOfYear = new ChangeTrackingList<BackupMonthOfYear>();
            RetentionTimes = new ChangeTrackingList<DateTimeOffset>();
        }

        /// <summary> Initializes a new instance of <see cref="YearlyRetentionSchedule"/>. </summary>
        /// <param name="retentionScheduleFormatType"> Retention schedule format for yearly retention policy. </param>
        /// <param name="monthsOfYear"> List of months of year of yearly retention policy. </param>
        /// <param name="retentionScheduleDaily"> Daily retention format for yearly retention policy. </param>
        /// <param name="retentionScheduleWeekly"> Weekly retention format for yearly retention policy. </param>
        /// <param name="retentionTimes"> Retention times of retention policy. </param>
        /// <param name="retentionDuration"> Retention duration of retention Policy. </param>
        internal YearlyRetentionSchedule(RetentionScheduleFormat? retentionScheduleFormatType, IList<BackupMonthOfYear> monthsOfYear, DailyRetentionFormat retentionScheduleDaily, WeeklyRetentionFormat retentionScheduleWeekly, IList<DateTimeOffset> retentionTimes, RetentionDuration retentionDuration)
        {
            RetentionScheduleFormatType = retentionScheduleFormatType;
            MonthsOfYear = monthsOfYear;
            RetentionScheduleDaily = retentionScheduleDaily;
            RetentionScheduleWeekly = retentionScheduleWeekly;
            RetentionTimes = retentionTimes;
            RetentionDuration = retentionDuration;
        }

        /// <summary> Retention schedule format for yearly retention policy. </summary>
        public RetentionScheduleFormat? RetentionScheduleFormatType { get; set; }
        /// <summary> List of months of year of yearly retention policy. </summary>
        public IList<BackupMonthOfYear> MonthsOfYear { get; }
        /// <summary> Daily retention format for yearly retention policy. </summary>
        internal DailyRetentionFormat RetentionScheduleDaily { get; set; }
        /// <summary> List of days of the month. </summary>
        public IList<BackupDay> RetentionScheduleDailyDaysOfTheMonth
        {
            get
            {
                if (RetentionScheduleDaily is null)
                    RetentionScheduleDaily = new DailyRetentionFormat();
                return RetentionScheduleDaily.DaysOfTheMonth;
            }
        }

        /// <summary> Weekly retention format for yearly retention policy. </summary>
        public WeeklyRetentionFormat RetentionScheduleWeekly { get; set; }
        /// <summary> Retention times of retention policy. </summary>
        public IList<DateTimeOffset> RetentionTimes { get; }
        /// <summary> Retention duration of retention Policy. </summary>
        public RetentionDuration RetentionDuration { get; set; }
    }
}
