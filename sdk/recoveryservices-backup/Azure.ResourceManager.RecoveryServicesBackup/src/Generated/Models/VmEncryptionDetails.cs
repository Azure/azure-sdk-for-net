// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary>
    /// Details needed if the VM was encrypted at the time of backup.
    /// Serialized Name: EncryptionDetails
    /// </summary>
    public partial class VmEncryptionDetails
    {
        /// <summary> Initializes a new instance of VmEncryptionDetails. </summary>
        public VmEncryptionDetails()
        {
        }

        /// <summary> Initializes a new instance of VmEncryptionDetails. </summary>
        /// <param name="encryptionEnabled">
        /// Identifies whether this backup copy represents an encrypted VM at the time of backup.
        /// Serialized Name: EncryptionDetails.encryptionEnabled
        /// </param>
        /// <param name="kekUri">
        /// Key Url.
        /// Serialized Name: EncryptionDetails.kekUrl
        /// </param>
        /// <param name="secretKeyUri">
        /// Secret Url.
        /// Serialized Name: EncryptionDetails.secretKeyUrl
        /// </param>
        /// <param name="kekVaultId">
        /// ID of Key Vault where KEK is stored.
        /// Serialized Name: EncryptionDetails.kekVaultId
        /// </param>
        /// <param name="secretKeyVaultId">
        /// ID of Key Vault where Secret is stored.
        /// Serialized Name: EncryptionDetails.secretKeyVaultId
        /// </param>
        internal VmEncryptionDetails(bool? encryptionEnabled, Uri kekUri, Uri secretKeyUri, string kekVaultId, string secretKeyVaultId)
        {
            EncryptionEnabled = encryptionEnabled;
            KekUri = kekUri;
            SecretKeyUri = secretKeyUri;
            KekVaultId = kekVaultId;
            SecretKeyVaultId = secretKeyVaultId;
        }

        /// <summary>
        /// Identifies whether this backup copy represents an encrypted VM at the time of backup.
        /// Serialized Name: EncryptionDetails.encryptionEnabled
        /// </summary>
        public bool? EncryptionEnabled { get; set; }
        /// <summary>
        /// Key Url.
        /// Serialized Name: EncryptionDetails.kekUrl
        /// </summary>
        public Uri KekUri { get; set; }
        /// <summary>
        /// Secret Url.
        /// Serialized Name: EncryptionDetails.secretKeyUrl
        /// </summary>
        public Uri SecretKeyUri { get; set; }
        /// <summary>
        /// ID of Key Vault where KEK is stored.
        /// Serialized Name: EncryptionDetails.kekVaultId
        /// </summary>
        public string KekVaultId { get; set; }
        /// <summary>
        /// ID of Key Vault where Secret is stored.
        /// Serialized Name: EncryptionDetails.secretKeyVaultId
        /// </summary>
        public string SecretKeyVaultId { get; set; }
    }
}
