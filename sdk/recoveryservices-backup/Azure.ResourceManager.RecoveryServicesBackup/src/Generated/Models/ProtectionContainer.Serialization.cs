// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    public partial class ProtectionContainer : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(FriendlyName))
            {
                writer.WritePropertyName("friendlyName"u8);
                writer.WriteStringValue(FriendlyName);
            }
            if (Optional.IsDefined(BackupManagementType))
            {
                writer.WritePropertyName("backupManagementType"u8);
                writer.WriteStringValue(BackupManagementType.Value.ToString());
            }
            if (Optional.IsDefined(RegistrationStatus))
            {
                writer.WritePropertyName("registrationStatus"u8);
                writer.WriteStringValue(RegistrationStatus);
            }
            if (Optional.IsDefined(HealthStatus))
            {
                writer.WritePropertyName("healthStatus"u8);
                writer.WriteStringValue(HealthStatus);
            }
            writer.WritePropertyName("containerType"u8);
            writer.WriteStringValue(ContainerType.ToSerialString());
            if (Optional.IsDefined(ProtectableObjectType))
            {
                writer.WritePropertyName("protectableObjectType"u8);
                writer.WriteStringValue(ProtectableObjectType);
            }
            writer.WriteEndObject();
        }

        internal static ProtectionContainer DeserializeProtectionContainer(JsonElement element)
        {
            if (element.TryGetProperty("containerType", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "AzureBackupServerContainer": return AzureBackupServerContainer.DeserializeAzureBackupServerContainer(element);
                    case "AzureSqlContainer": return AzureSqlContainer.DeserializeAzureSqlContainer(element);
                    case "AzureWorkloadContainer": return AzureWorkloadContainer.DeserializeAzureWorkloadContainer(element);
                    case "DPMContainer": return DpmContainer.DeserializeDpmContainer(element);
                    case "GenericContainer": return GenericContainer.DeserializeGenericContainer(element);
                    case "IaasVMContainer": return IaasVmContainer.DeserializeIaasVmContainer(element);
                    case "Microsoft.ClassicCompute/virtualMachines": return AzureIaaSClassicComputeVmContainer.DeserializeAzureIaaSClassicComputeVmContainer(element);
                    case "Microsoft.Compute/virtualMachines": return AzureIaaSComputeVmContainer.DeserializeAzureIaaSComputeVmContainer(element);
                    case "SQLAGWorkLoadContainer": return AzureSqlAGWorkloadContainerProtectionContainer.DeserializeAzureSqlAGWorkloadContainerProtectionContainer(element);
                    case "StorageContainer": return AzureStorageContainer.DeserializeAzureStorageContainer(element);
                    case "VMAppContainer": return AzureVmAppContainerProtectionContainer.DeserializeAzureVmAppContainerProtectionContainer(element);
                    case "Windows": return MabContainer.DeserializeMabContainer(element);
                }
            }
            return UnknownProtectionContainer.DeserializeUnknownProtectionContainer(element);
        }
    }
}
