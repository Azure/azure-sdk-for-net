// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    public partial class KEKDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(KeyUri))
            {
                writer.WritePropertyName("keyUrl");
                writer.WriteStringValue(KeyUri.AbsoluteUri);
            }
            if (Optional.IsDefined(KeyVaultId))
            {
                writer.WritePropertyName("keyVaultId");
                writer.WriteStringValue(KeyVaultId);
            }
            if (Optional.IsDefined(KeyBackupData))
            {
                writer.WritePropertyName("keyBackupData");
                writer.WriteStringValue(KeyBackupData);
            }
            writer.WriteEndObject();
        }

        internal static KEKDetails DeserializeKEKDetails(JsonElement element)
        {
            Optional<Uri> keyUrl = default;
            Optional<string> keyVaultId = default;
            Optional<string> keyBackupData = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("keyUrl"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        keyUrl = null;
                        continue;
                    }
                    keyUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("keyVaultId"))
                {
                    keyVaultId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("keyBackupData"))
                {
                    keyBackupData = property.Value.GetString();
                    continue;
                }
            }
            return new KEKDetails(keyUrl.Value, keyVaultId.Value, keyBackupData.Value);
        }
    }
}
