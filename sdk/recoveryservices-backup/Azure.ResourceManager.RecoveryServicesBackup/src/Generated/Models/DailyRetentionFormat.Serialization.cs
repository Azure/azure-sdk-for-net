// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    internal partial class DailyRetentionFormat : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IUtf8JsonSerializable)this).Write(writer, new SerializableOptions());

        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer, SerializableOptions options)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(DaysOfTheMonth))
            {
                writer.WritePropertyName("daysOfTheMonth"u8);
                writer.WriteStartArray();
                foreach (var item in DaysOfTheMonth)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static DailyRetentionFormat DeserializeDailyRetentionFormat(JsonElement element, SerializableOptions options = default)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<BackupDay>> daysOfTheMonth = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("daysOfTheMonth"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<BackupDay> array = new List<BackupDay>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BackupDay.DeserializeBackupDay(item));
                    }
                    daysOfTheMonth = array;
                    continue;
                }
            }
            return new DailyRetentionFormat(Optional.ToList(daysOfTheMonth));
        }
    }
}
