// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RecoveryServicesBackup.Models
{
    /// <summary>
    /// Backup resource vault config details.
    /// Serialized Name: BackupResourceVaultConfig
    /// </summary>
    public partial class BackupResourceVaultConfigProperties
    {
        /// <summary> Initializes a new instance of BackupResourceVaultConfigProperties. </summary>
        public BackupResourceVaultConfigProperties()
        {
            ResourceGuardOperationRequests = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of BackupResourceVaultConfigProperties. </summary>
        /// <param name="storageModelType">
        /// Storage type.
        /// Serialized Name: BackupResourceVaultConfig.storageModelType
        /// </param>
        /// <param name="storageType">
        /// Storage type.
        /// Serialized Name: BackupResourceVaultConfig.storageType
        /// </param>
        /// <param name="storageTypeState">
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// Serialized Name: BackupResourceVaultConfig.storageTypeState
        /// </param>
        /// <param name="enhancedSecurityState">
        /// Enabled or Disabled.
        /// Serialized Name: BackupResourceVaultConfig.enhancedSecurityState
        /// </param>
        /// <param name="softDeleteFeatureState">
        /// Soft Delete feature state
        /// Serialized Name: BackupResourceVaultConfig.softDeleteFeatureState
        /// </param>
        /// <param name="resourceGuardOperationRequests">
        /// ResourceGuard Operation Requests
        /// Serialized Name: BackupResourceVaultConfig.resourceGuardOperationRequests
        /// </param>
        /// <param name="isSoftDeleteFeatureStateEditable">
        /// Is soft delete feature state editable
        /// Serialized Name: BackupResourceVaultConfig.isSoftDeleteFeatureStateEditable
        /// </param>
        internal BackupResourceVaultConfigProperties(StorageType? storageModelType, StorageType? storageType, StorageTypeState? storageTypeState, EnhancedSecurityState? enhancedSecurityState, SoftDeleteFeatureState? softDeleteFeatureState, IList<string> resourceGuardOperationRequests, bool? isSoftDeleteFeatureStateEditable)
        {
            StorageModelType = storageModelType;
            StorageType = storageType;
            StorageTypeState = storageTypeState;
            EnhancedSecurityState = enhancedSecurityState;
            SoftDeleteFeatureState = softDeleteFeatureState;
            ResourceGuardOperationRequests = resourceGuardOperationRequests;
            IsSoftDeleteFeatureStateEditable = isSoftDeleteFeatureStateEditable;
        }

        /// <summary>
        /// Storage type.
        /// Serialized Name: BackupResourceVaultConfig.storageModelType
        /// </summary>
        public StorageType? StorageModelType { get; set; }
        /// <summary>
        /// Storage type.
        /// Serialized Name: BackupResourceVaultConfig.storageType
        /// </summary>
        public StorageType? StorageType { get; set; }
        /// <summary>
        /// Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.
        /// Serialized Name: BackupResourceVaultConfig.storageTypeState
        /// </summary>
        public StorageTypeState? StorageTypeState { get; set; }
        /// <summary>
        /// Enabled or Disabled.
        /// Serialized Name: BackupResourceVaultConfig.enhancedSecurityState
        /// </summary>
        public EnhancedSecurityState? EnhancedSecurityState { get; set; }
        /// <summary>
        /// Soft Delete feature state
        /// Serialized Name: BackupResourceVaultConfig.softDeleteFeatureState
        /// </summary>
        public SoftDeleteFeatureState? SoftDeleteFeatureState { get; set; }
        /// <summary>
        /// ResourceGuard Operation Requests
        /// Serialized Name: BackupResourceVaultConfig.resourceGuardOperationRequests
        /// </summary>
        public IList<string> ResourceGuardOperationRequests { get; }
        /// <summary>
        /// Is soft delete feature state editable
        /// Serialized Name: BackupResourceVaultConfig.isSoftDeleteFeatureStateEditable
        /// </summary>
        public bool? IsSoftDeleteFeatureStateEditable { get; set; }
    }
}
