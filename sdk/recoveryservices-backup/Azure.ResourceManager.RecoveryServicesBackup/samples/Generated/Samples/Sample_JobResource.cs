// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.RecoveryServicesBackup;

namespace Azure.ResourceManager.RecoveryServicesBackup.Samples
{
    public partial class Sample_JobResource
    {
        // Get Job Details
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetJobDetails()
        {
            // Generated from example definition: specification/recoveryservicesbackup/resource-manager/Microsoft.RecoveryServices/stable/2023-01-01/examples/Common/GetJobDetails.json
            // this example is just showing the usage of "JobDetails_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this JobResource created on azure
            // for more information of creating JobResource, please refer to the document of JobResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "SwaggerTestRg";
            string vaultName = "NetSDKTestRsVault";
            string jobName = "00000000-0000-0000-0000-000000000000";
            ResourceIdentifier jobResourceId = JobResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, vaultName, jobName);
            JobResource jobResource = client.GetJobResource(jobResourceId);

            // invoke the operation
            JobResource result = await jobResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            JobResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Cancel Job
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task TriggerJobCancellation_CancelJob()
        {
            // Generated from example definition: specification/recoveryservicesbackup/resource-manager/Microsoft.RecoveryServices/stable/2023-01-01/examples/Common/TriggerCancelJob.json
            // this example is just showing the usage of "JobCancellations_Trigger" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this JobResource created on azure
            // for more information of creating JobResource, please refer to the document of JobResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "SwaggerTestRg";
            string vaultName = "NetSDKTestRsVault";
            string jobName = "00000000-0000-0000-0000-000000000000";
            ResourceIdentifier jobResourceId = JobResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, vaultName, jobName);
            JobResource jobResource = client.GetJobResource(jobResourceId);

            // invoke the operation
            await jobResource.TriggerJobCancellationAsync();

            Console.WriteLine($"Succeeded");
        }

        // Cancel Job Operation Result
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetJobOperationResult_CancelJobOperationResult()
        {
            // Generated from example definition: specification/recoveryservicesbackup/resource-manager/Microsoft.RecoveryServices/stable/2023-01-01/examples/Common/CancelJobOperationResult.json
            // this example is just showing the usage of "JobOperationResults_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this JobResource created on azure
            // for more information of creating JobResource, please refer to the document of JobResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "SwaggerTestRg";
            string vaultName = "NetSDKTestRsVault";
            string jobName = "00000000-0000-0000-0000-000000000000";
            ResourceIdentifier jobResourceId = JobResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, vaultName, jobName);
            JobResource jobResource = client.GetJobResource(jobResourceId);

            // invoke the operation
            string operationId = "00000000-0000-0000-0000-000000000000";
            await jobResource.GetJobOperationResultAsync(operationId);

            Console.WriteLine($"Succeeded");
        }
    }
}
