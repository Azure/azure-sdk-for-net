// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SecretOperations.
    /// </summary>
    public static partial class SecretOperationsExtensions
    {
            /// <summary>
            /// Creates or updates a secret resource.
            /// </summary>
            /// <remarks>
            /// Creates a secret resource with the specified name, description and
            /// properties. If a secret resource with the same name exists, then it is
            /// updated with the specified description and properties.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='secretResourceName'>
            /// The name of the secret resource.
            /// </param>
            /// <param name='secretResourceDescription'>
            /// Description for creating a secret resource.
            /// </param>
            public static SecretResourceDescription Create(this ISecretOperations operations, string resourceGroupName, string secretResourceName, SecretResourceDescription secretResourceDescription)
            {
                return operations.CreateAsync(resourceGroupName, secretResourceName, secretResourceDescription).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a secret resource.
            /// </summary>
            /// <remarks>
            /// Creates a secret resource with the specified name, description and
            /// properties. If a secret resource with the same name exists, then it is
            /// updated with the specified description and properties.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='secretResourceName'>
            /// The name of the secret resource.
            /// </param>
            /// <param name='secretResourceDescription'>
            /// Description for creating a secret resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SecretResourceDescription> CreateAsync(this ISecretOperations operations, string resourceGroupName, string secretResourceName, SecretResourceDescription secretResourceDescription, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, secretResourceName, secretResourceDescription, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the secret resource with the given name.
            /// </summary>
            /// <remarks>
            /// Gets the information about the secret resource with the given name. The
            /// information include the description and other properties of the secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='secretResourceName'>
            /// The name of the secret resource.
            /// </param>
            public static SecretResourceDescription Get(this ISecretOperations operations, string resourceGroupName, string secretResourceName)
            {
                return operations.GetAsync(resourceGroupName, secretResourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the secret resource with the given name.
            /// </summary>
            /// <remarks>
            /// Gets the information about the secret resource with the given name. The
            /// information include the description and other properties of the secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='secretResourceName'>
            /// The name of the secret resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SecretResourceDescription> GetAsync(this ISecretOperations operations, string resourceGroupName, string secretResourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, secretResourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the secret resource.
            /// </summary>
            /// <remarks>
            /// Deletes the secret resource identified by the name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='secretResourceName'>
            /// The name of the secret resource.
            /// </param>
            public static void Delete(this ISecretOperations operations, string resourceGroupName, string secretResourceName)
            {
                operations.DeleteAsync(resourceGroupName, secretResourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the secret resource.
            /// </summary>
            /// <remarks>
            /// Deletes the secret resource identified by the name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='secretResourceName'>
            /// The name of the secret resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ISecretOperations operations, string resourceGroupName, string secretResourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, secretResourceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets all the secret resources in a given resource group.
            /// </summary>
            /// <remarks>
            /// Gets the information about all secret resources in a given resource group.
            /// The information include the description and other properties of the Secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            public static IPage<SecretResourceDescription> ListByResourceGroup(this ISecretOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the secret resources in a given resource group.
            /// </summary>
            /// <remarks>
            /// Gets the information about all secret resources in a given resource group.
            /// The information include the description and other properties of the Secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SecretResourceDescription>> ListByResourceGroupAsync(this ISecretOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all the secret resources in a given subscription.
            /// </summary>
            /// <remarks>
            /// Gets the information about all secret resources in a given resource group.
            /// The information include the description and other properties of the secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<SecretResourceDescription> ListBySubscription(this ISecretOperations operations)
            {
                return operations.ListBySubscriptionAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the secret resources in a given subscription.
            /// </summary>
            /// <remarks>
            /// Gets the information about all secret resources in a given resource group.
            /// The information include the description and other properties of the secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SecretResourceDescription>> ListBySubscriptionAsync(this ISecretOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all the secret resources in a given resource group.
            /// </summary>
            /// <remarks>
            /// Gets the information about all secret resources in a given resource group.
            /// The information include the description and other properties of the Secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SecretResourceDescription> ListByResourceGroupNext(this ISecretOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the secret resources in a given resource group.
            /// </summary>
            /// <remarks>
            /// Gets the information about all secret resources in a given resource group.
            /// The information include the description and other properties of the Secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SecretResourceDescription>> ListByResourceGroupNextAsync(this ISecretOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all the secret resources in a given subscription.
            /// </summary>
            /// <remarks>
            /// Gets the information about all secret resources in a given resource group.
            /// The information include the description and other properties of the secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SecretResourceDescription> ListBySubscriptionNext(this ISecretOperations operations, string nextPageLink)
            {
                return operations.ListBySubscriptionNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the secret resources in a given subscription.
            /// </summary>
            /// <remarks>
            /// Gets the information about all secret resources in a given resource group.
            /// The information include the description and other properties of the secret.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SecretResourceDescription>> ListBySubscriptionNextAsync(this ISecretOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
