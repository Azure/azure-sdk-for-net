// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes the http configuration for external connectivity for this
    /// network.
    /// </summary>
    public partial class HttpConfig
    {
        /// <summary>
        /// Initializes a new instance of the HttpConfig class.
        /// </summary>
        public HttpConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HttpConfig class.
        /// </summary>
        /// <param name="name">http gateway config name.</param>
        /// <param name="port">Specifies the port at which the service endpoint
        /// below needs to be exposed.</param>
        /// <param name="hosts">description for routing.</param>
        public HttpConfig(string name, int port, IList<HttpHostConfig> hosts)
        {
            Name = name;
            Port = port;
            Hosts = hosts;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets http gateway config name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets specifies the port at which the service endpoint below
        /// needs to be exposed.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int Port { get; set; }

        /// <summary>
        /// Gets or sets description for routing.
        /// </summary>
        [JsonProperty(PropertyName = "hosts")]
        public IList<HttpHostConfig> Hosts { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Hosts == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Hosts");
            }
            if (Hosts != null)
            {
                foreach (var element in Hosts)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
