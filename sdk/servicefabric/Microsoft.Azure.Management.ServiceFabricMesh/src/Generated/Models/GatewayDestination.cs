// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes destination endpoint for routing traffic.
    /// </summary>
    public partial class GatewayDestination
    {
        /// <summary>
        /// Initializes a new instance of the GatewayDestination class.
        /// </summary>
        public GatewayDestination()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GatewayDestination class.
        /// </summary>
        /// <param name="applicationName">Name of the service fabric Mesh
        /// application.</param>
        /// <param name="serviceName">service that contains the
        /// endpoint.</param>
        /// <param name="endpointName">name of the endpoint in the
        /// service.</param>
        public GatewayDestination(string applicationName, string serviceName, string endpointName)
        {
            ApplicationName = applicationName;
            ServiceName = serviceName;
            EndpointName = endpointName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the service fabric Mesh application.
        /// </summary>
        [JsonProperty(PropertyName = "applicationName")]
        public string ApplicationName { get; set; }

        /// <summary>
        /// Gets or sets service that contains the endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "serviceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// Gets or sets name of the endpoint in the service.
        /// </summary>
        [JsonProperty(PropertyName = "endpointName")]
        public string EndpointName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ApplicationName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApplicationName");
            }
            if (ServiceName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ServiceName");
            }
            if (EndpointName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EndpointName");
            }
        }
    }
}
