// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes the diagnostics options available
    /// </summary>
    public partial class DiagnosticsDescription
    {
        /// <summary>
        /// Initializes a new instance of the DiagnosticsDescription class.
        /// </summary>
        public DiagnosticsDescription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiagnosticsDescription class.
        /// </summary>
        /// <param name="sinks">List of supported sinks that can be
        /// referenced.</param>
        /// <param name="enabled">Status of whether or not sinks are
        /// enabled.</param>
        /// <param name="defaultSinkRefs">The sinks to be used if diagnostics
        /// is enabled. Sink choices can be overridden at the service and code
        /// package level.</param>
        public DiagnosticsDescription(IList<DiagnosticsSinkProperties> sinks = default(IList<DiagnosticsSinkProperties>), bool? enabled = default(bool?), IList<string> defaultSinkRefs = default(IList<string>))
        {
            Sinks = sinks;
            Enabled = enabled;
            DefaultSinkRefs = defaultSinkRefs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of supported sinks that can be referenced.
        /// </summary>
        [JsonProperty(PropertyName = "sinks")]
        public IList<DiagnosticsSinkProperties> Sinks { get; set; }

        /// <summary>
        /// Gets or sets status of whether or not sinks are enabled.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets or sets the sinks to be used if diagnostics is enabled. Sink
        /// choices can be overridden at the service and code package level.
        /// </summary>
        [JsonProperty(PropertyName = "defaultSinkRefs")]
        public IList<string> DefaultSinkRefs { get; set; }

    }
}
