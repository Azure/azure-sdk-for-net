// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes a volume whose lifetime is scoped to the application's
    /// lifetime.
    /// </summary>
    public partial class ApplicationScopedVolume : VolumeReference
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationScopedVolume class.
        /// </summary>
        public ApplicationScopedVolume()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationScopedVolume class.
        /// </summary>
        /// <param name="name">Name of the volume being referenced.</param>
        /// <param name="destinationPath">The path within the container at
        /// which the volume should be mounted. Only valid path characters are
        /// allowed.</param>
        /// <param name="creationParameters">Describes parameters for creating
        /// application-scoped volumes.</param>
        /// <param name="readOnlyProperty">The flag indicating whether the
        /// volume is read only. Default is 'false'.</param>
        public ApplicationScopedVolume(string name, string destinationPath, ApplicationScopedVolumeCreationParameters creationParameters, bool? readOnlyProperty = default(bool?))
            : base(name, destinationPath, readOnlyProperty)
        {
            CreationParameters = creationParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets describes parameters for creating application-scoped
        /// volumes.
        /// </summary>
        [JsonProperty(PropertyName = "creationParameters")]
        public ApplicationScopedVolumeCreationParameters CreationParameters { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (CreationParameters == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CreationParameters");
            }
        }
    }
}
