// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the tcp configuration for external connectivity for this
    /// network.
    /// </summary>
    public partial class TcpConfig
    {
        /// <summary>
        /// Initializes a new instance of the TcpConfig class.
        /// </summary>
        public TcpConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TcpConfig class.
        /// </summary>
        /// <param name="name">tcp gateway config name.</param>
        /// <param name="port">Specifies the port at which the service endpoint
        /// below needs to be exposed.</param>
        /// <param name="destination">Describes destination endpoint for
        /// routing traffic.</param>
        public TcpConfig(string name, int port, GatewayDestination destination)
        {
            Name = name;
            Port = port;
            Destination = destination;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets tcp gateway config name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets specifies the port at which the service endpoint below
        /// needs to be exposed.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int Port { get; set; }

        /// <summary>
        /// Gets or sets describes destination endpoint for routing traffic.
        /// </summary>
        [JsonProperty(PropertyName = "destination")]
        public GatewayDestination Destination { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Destination == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Destination");
            }
            if (Destination != null)
            {
                Destination.Validate();
            }
        }
    }
}
