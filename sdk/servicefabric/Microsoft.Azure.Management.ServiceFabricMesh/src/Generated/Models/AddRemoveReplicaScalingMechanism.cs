// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the horizontal auto scaling mechanism that adds or removes
    /// replicas (containers or container groups).
    /// </summary>
    [Newtonsoft.Json.JsonObject("AddRemoveReplica")]
    public partial class AddRemoveReplicaScalingMechanism : AutoScalingMechanism
    {
        /// <summary>
        /// Initializes a new instance of the AddRemoveReplicaScalingMechanism
        /// class.
        /// </summary>
        public AddRemoveReplicaScalingMechanism()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddRemoveReplicaScalingMechanism
        /// class.
        /// </summary>
        /// <param name="minCount">Minimum number of containers (scale down
        /// won't be performed below this number).</param>
        /// <param name="maxCount">Maximum number of containers (scale up won't
        /// be performed above this number).</param>
        /// <param name="scaleIncrement">Each time auto scaling is performed,
        /// this number of containers will be added or removed.</param>
        public AddRemoveReplicaScalingMechanism(int minCount, int maxCount, int scaleIncrement)
        {
            MinCount = minCount;
            MaxCount = maxCount;
            ScaleIncrement = scaleIncrement;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets minimum number of containers (scale down won't be
        /// performed below this number).
        /// </summary>
        [JsonProperty(PropertyName = "minCount")]
        public int MinCount { get; set; }

        /// <summary>
        /// Gets or sets maximum number of containers (scale up won't be
        /// performed above this number).
        /// </summary>
        [JsonProperty(PropertyName = "maxCount")]
        public int MaxCount { get; set; }

        /// <summary>
        /// Gets or sets each time auto scaling is performed, this number of
        /// containers will be added or removed.
        /// </summary>
        [JsonProperty(PropertyName = "scaleIncrement")]
        public int ScaleIncrement { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
