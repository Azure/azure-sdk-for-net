// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ServiceOperations.
    /// </summary>
    public static partial class ServiceOperationsExtensions
    {
            /// <summary>
            /// Gets the service resource with the given name.
            /// </summary>
            /// <remarks>
            /// Gets the information about the service resource with the given name. The
            /// information include the description and other properties of the service.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='applicationResourceName'>
            /// The identity of the application.
            /// </param>
            /// <param name='serviceResourceName'>
            /// The identity of the service.
            /// </param>
            public static ServiceResourceDescription Get(this IServiceOperations operations, string resourceGroupName, string applicationResourceName, string serviceResourceName)
            {
                return operations.GetAsync(resourceGroupName, applicationResourceName, serviceResourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the service resource with the given name.
            /// </summary>
            /// <remarks>
            /// Gets the information about the service resource with the given name. The
            /// information include the description and other properties of the service.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='applicationResourceName'>
            /// The identity of the application.
            /// </param>
            /// <param name='serviceResourceName'>
            /// The identity of the service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServiceResourceDescription> GetAsync(this IServiceOperations operations, string resourceGroupName, string applicationResourceName, string serviceResourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, applicationResourceName, serviceResourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all the service resources.
            /// </summary>
            /// <remarks>
            /// Gets the information about all services of an application resource. The
            /// information include the description and other properties of the Service.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='applicationResourceName'>
            /// The identity of the application.
            /// </param>
            public static IPage<ServiceResourceDescription> List(this IServiceOperations operations, string resourceGroupName, string applicationResourceName)
            {
                return operations.ListAsync(resourceGroupName, applicationResourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all the service resources.
            /// </summary>
            /// <remarks>
            /// Gets the information about all services of an application resource. The
            /// information include the description and other properties of the Service.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='applicationResourceName'>
            /// The identity of the application.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServiceResourceDescription>> ListAsync(this IServiceOperations operations, string resourceGroupName, string applicationResourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, applicationResourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all the service resources.
            /// </summary>
            /// <remarks>
            /// Gets the information about all services of an application resource. The
            /// information include the description and other properties of the Service.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ServiceResourceDescription> ListNext(this IServiceOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all the service resources.
            /// </summary>
            /// <remarks>
            /// Gets the information about all services of an application resource. The
            /// information include the description and other properties of the Service.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServiceResourceDescription>> ListNextAsync(this IServiceOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
