// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ServiceReplicaOperations.
    /// </summary>
    public static partial class ServiceReplicaOperationsExtensions
    {
            /// <summary>
            /// Gets the given replica of the service of an application.
            /// </summary>
            /// <remarks>
            /// Gets the information about the service replica with the given name. The
            /// information include the description and other properties of the service
            /// replica.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='applicationResourceName'>
            /// The identity of the application.
            /// </param>
            /// <param name='serviceResourceName'>
            /// The identity of the service.
            /// </param>
            /// <param name='replicaName'>
            /// Service Fabric replica name.
            /// </param>
            public static ServiceReplicaDescription Get(this IServiceReplicaOperations operations, string resourceGroupName, string applicationResourceName, string serviceResourceName, string replicaName)
            {
                return operations.GetAsync(resourceGroupName, applicationResourceName, serviceResourceName, replicaName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the given replica of the service of an application.
            /// </summary>
            /// <remarks>
            /// Gets the information about the service replica with the given name. The
            /// information include the description and other properties of the service
            /// replica.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='applicationResourceName'>
            /// The identity of the application.
            /// </param>
            /// <param name='serviceResourceName'>
            /// The identity of the service.
            /// </param>
            /// <param name='replicaName'>
            /// Service Fabric replica name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServiceReplicaDescription> GetAsync(this IServiceReplicaOperations operations, string resourceGroupName, string applicationResourceName, string serviceResourceName, string replicaName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, applicationResourceName, serviceResourceName, replicaName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets replicas of a given service.
            /// </summary>
            /// <remarks>
            /// Gets the information about all replicas of a given service of an
            /// application. The information includes the runtime properties of the replica
            /// instance.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='applicationResourceName'>
            /// The identity of the application.
            /// </param>
            /// <param name='serviceResourceName'>
            /// The identity of the service.
            /// </param>
            public static IPage<ServiceReplicaDescription> List(this IServiceReplicaOperations operations, string resourceGroupName, string applicationResourceName, string serviceResourceName)
            {
                return operations.ListAsync(resourceGroupName, applicationResourceName, serviceResourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets replicas of a given service.
            /// </summary>
            /// <remarks>
            /// Gets the information about all replicas of a given service of an
            /// application. The information includes the runtime properties of the replica
            /// instance.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='applicationResourceName'>
            /// The identity of the application.
            /// </param>
            /// <param name='serviceResourceName'>
            /// The identity of the service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServiceReplicaDescription>> ListAsync(this IServiceReplicaOperations operations, string resourceGroupName, string applicationResourceName, string serviceResourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, applicationResourceName, serviceResourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets replicas of a given service.
            /// </summary>
            /// <remarks>
            /// Gets the information about all replicas of a given service of an
            /// application. The information includes the runtime properties of the replica
            /// instance.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ServiceReplicaDescription> ListNext(this IServiceReplicaOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets replicas of a given service.
            /// </summary>
            /// <remarks>
            /// Gets the information about all replicas of a given service of an
            /// application. The information includes the runtime properties of the replica
            /// instance.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServiceReplicaDescription>> ListNextAsync(this IServiceReplicaOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
