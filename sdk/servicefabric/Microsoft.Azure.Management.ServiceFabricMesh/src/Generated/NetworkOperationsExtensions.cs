// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricMesh
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for NetworkOperations.
    /// </summary>
    public static partial class NetworkOperationsExtensions
    {
            /// <summary>
            /// Creates or updates a network resource.
            /// </summary>
            /// <remarks>
            /// Creates a network resource with the specified name, description and
            /// properties. If a network resource with the same name exists, then it is
            /// updated with the specified description and properties.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='networkResourceName'>
            /// The identity of the network.
            /// </param>
            /// <param name='networkResourceDescription'>
            /// Description for creating a Network resource.
            /// </param>
            public static NetworkResourceDescription Create(this INetworkOperations operations, string resourceGroupName, string networkResourceName, NetworkResourceDescription networkResourceDescription)
            {
                return operations.CreateAsync(resourceGroupName, networkResourceName, networkResourceDescription).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a network resource.
            /// </summary>
            /// <remarks>
            /// Creates a network resource with the specified name, description and
            /// properties. If a network resource with the same name exists, then it is
            /// updated with the specified description and properties.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='networkResourceName'>
            /// The identity of the network.
            /// </param>
            /// <param name='networkResourceDescription'>
            /// Description for creating a Network resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<NetworkResourceDescription> CreateAsync(this INetworkOperations operations, string resourceGroupName, string networkResourceName, NetworkResourceDescription networkResourceDescription, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, networkResourceName, networkResourceDescription, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the network resource with the given name.
            /// </summary>
            /// <remarks>
            /// Gets the information about the network resource with the given name. The
            /// information include the description and other properties of the network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='networkResourceName'>
            /// The identity of the network.
            /// </param>
            public static NetworkResourceDescription Get(this INetworkOperations operations, string resourceGroupName, string networkResourceName)
            {
                return operations.GetAsync(resourceGroupName, networkResourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the network resource with the given name.
            /// </summary>
            /// <remarks>
            /// Gets the information about the network resource with the given name. The
            /// information include the description and other properties of the network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='networkResourceName'>
            /// The identity of the network.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<NetworkResourceDescription> GetAsync(this INetworkOperations operations, string resourceGroupName, string networkResourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, networkResourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the network resource.
            /// </summary>
            /// <remarks>
            /// Deletes the network resource identified by the name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='networkResourceName'>
            /// The identity of the network.
            /// </param>
            public static void Delete(this INetworkOperations operations, string resourceGroupName, string networkResourceName)
            {
                operations.DeleteAsync(resourceGroupName, networkResourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the network resource.
            /// </summary>
            /// <remarks>
            /// Deletes the network resource identified by the name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='networkResourceName'>
            /// The identity of the network.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this INetworkOperations operations, string resourceGroupName, string networkResourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, networkResourceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets all the network resources in a given resource group.
            /// </summary>
            /// <remarks>
            /// Gets the information about all network resources in a given resource group.
            /// The information include the description and other properties of the
            /// Network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            public static IPage<NetworkResourceDescription> ListByResourceGroup(this INetworkOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the network resources in a given resource group.
            /// </summary>
            /// <remarks>
            /// Gets the information about all network resources in a given resource group.
            /// The information include the description and other properties of the
            /// Network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Azure resource group name
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<NetworkResourceDescription>> ListByResourceGroupAsync(this INetworkOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all the network resources in a given subscription.
            /// </summary>
            /// <remarks>
            /// Gets the information about all network resources in a given resource group.
            /// The information include the description and other properties of the
            /// network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<NetworkResourceDescription> ListBySubscription(this INetworkOperations operations)
            {
                return operations.ListBySubscriptionAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the network resources in a given subscription.
            /// </summary>
            /// <remarks>
            /// Gets the information about all network resources in a given resource group.
            /// The information include the description and other properties of the
            /// network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<NetworkResourceDescription>> ListBySubscriptionAsync(this INetworkOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all the network resources in a given resource group.
            /// </summary>
            /// <remarks>
            /// Gets the information about all network resources in a given resource group.
            /// The information include the description and other properties of the
            /// Network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<NetworkResourceDescription> ListByResourceGroupNext(this INetworkOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the network resources in a given resource group.
            /// </summary>
            /// <remarks>
            /// Gets the information about all network resources in a given resource group.
            /// The information include the description and other properties of the
            /// Network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<NetworkResourceDescription>> ListByResourceGroupNextAsync(this INetworkOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all the network resources in a given subscription.
            /// </summary>
            /// <remarks>
            /// Gets the information about all network resources in a given resource group.
            /// The information include the description and other properties of the
            /// network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<NetworkResourceDescription> ListBySubscriptionNext(this INetworkOperations operations, string nextPageLink)
            {
                return operations.ListBySubscriptionNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the network resources in a given subscription.
            /// </summary>
            /// <remarks>
            /// Gets the information about all network resources in a given resource group.
            /// The information include the description and other properties of the
            /// network.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<NetworkResourceDescription>> ListBySubscriptionNextAsync(this INetworkOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
