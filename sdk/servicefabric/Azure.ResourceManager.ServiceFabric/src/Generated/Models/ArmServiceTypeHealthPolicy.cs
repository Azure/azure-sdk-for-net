// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ServiceFabric.Models
{
    /// <summary>
    /// Represents the health policy used to evaluate the health of services belonging to a service type.
    ///
    /// </summary>
    public partial class ArmServiceTypeHealthPolicy
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ArmServiceTypeHealthPolicy"/>. </summary>
        public ArmServiceTypeHealthPolicy()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ArmServiceTypeHealthPolicy"/>. </summary>
        /// <param name="maxPercentUnhealthyServices">
        /// The maximum percentage of services allowed to be unhealthy before your application is considered in error.
        ///
        /// </param>
        /// <param name="maxPercentUnhealthyPartitionsPerService">
        /// The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
        ///
        /// </param>
        /// <param name="maxPercentUnhealthyReplicasPerPartition">
        /// The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
        ///
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ArmServiceTypeHealthPolicy(int? maxPercentUnhealthyServices, int? maxPercentUnhealthyPartitionsPerService, int? maxPercentUnhealthyReplicasPerPartition, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MaxPercentUnhealthyServices = maxPercentUnhealthyServices;
            MaxPercentUnhealthyPartitionsPerService = maxPercentUnhealthyPartitionsPerService;
            MaxPercentUnhealthyReplicasPerPartition = maxPercentUnhealthyReplicasPerPartition;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// The maximum percentage of services allowed to be unhealthy before your application is considered in error.
        ///
        /// </summary>
        public int? MaxPercentUnhealthyServices { get; set; }
        /// <summary>
        /// The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
        ///
        /// </summary>
        public int? MaxPercentUnhealthyPartitionsPerService { get; set; }
        /// <summary>
        /// The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
        ///
        /// </summary>
        public int? MaxPercentUnhealthyReplicasPerPartition { get; set; }
    }
}
