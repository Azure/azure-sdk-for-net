// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabric.Models
{
    public partial class DiagnosticsStorageAccountConfig : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("storageAccountName");
            writer.WriteStringValue(StorageAccountName);
            writer.WritePropertyName("protectedAccountKeyName");
            writer.WriteStringValue(ProtectedAccountKeyName);
            if (Optional.IsDefined(ProtectedAccountKeyName2))
            {
                writer.WritePropertyName("protectedAccountKeyName2");
                writer.WriteStringValue(ProtectedAccountKeyName2);
            }
            writer.WritePropertyName("blobEndpoint");
            writer.WriteStringValue(BlobEndpoint);
            writer.WritePropertyName("queueEndpoint");
            writer.WriteStringValue(QueueEndpoint);
            writer.WritePropertyName("tableEndpoint");
            writer.WriteStringValue(TableEndpoint);
            writer.WriteEndObject();
        }

        internal static DiagnosticsStorageAccountConfig DeserializeDiagnosticsStorageAccountConfig(JsonElement element)
        {
            string storageAccountName = default;
            string protectedAccountKeyName = default;
            Optional<string> protectedAccountKeyName2 = default;
            string blobEndpoint = default;
            string queueEndpoint = default;
            string tableEndpoint = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("storageAccountName"))
                {
                    storageAccountName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protectedAccountKeyName"))
                {
                    protectedAccountKeyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protectedAccountKeyName2"))
                {
                    protectedAccountKeyName2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("blobEndpoint"))
                {
                    blobEndpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("queueEndpoint"))
                {
                    queueEndpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tableEndpoint"))
                {
                    tableEndpoint = property.Value.GetString();
                    continue;
                }
            }
            return new DiagnosticsStorageAccountConfig(storageAccountName, protectedAccountKeyName, protectedAccountKeyName2.Value, blobEndpoint, queueEndpoint, tableEndpoint);
        }
    }
}
