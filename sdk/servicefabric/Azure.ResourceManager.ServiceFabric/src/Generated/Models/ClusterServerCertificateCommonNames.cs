// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabric.Models
{
    /// <summary> Describes a list of server certificates referenced by common name that are used to secure the cluster. </summary>
    public partial class ClusterServerCertificateCommonNames
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ClusterServerCertificateCommonNames"/>. </summary>
        public ClusterServerCertificateCommonNames()
        {
            CommonNames = new ChangeTrackingList<ClusterServerCertificateCommonName>();
        }

        /// <summary> Initializes a new instance of <see cref="ClusterServerCertificateCommonNames"/>. </summary>
        /// <param name="commonNames"> The list of server certificates referenced by common name that are used to secure the cluster. </param>
        /// <param name="x509StoreName"> The local certificate store location. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ClusterServerCertificateCommonNames(IList<ClusterServerCertificateCommonName> commonNames, ClusterCertificateStoreName? x509StoreName, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CommonNames = commonNames;
            X509StoreName = x509StoreName;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The list of server certificates referenced by common name that are used to secure the cluster. </summary>
        public IList<ClusterServerCertificateCommonName> CommonNames { get; }
        /// <summary> The local certificate store location. </summary>
        public ClusterCertificateStoreName? X509StoreName { get; set; }
    }
}
