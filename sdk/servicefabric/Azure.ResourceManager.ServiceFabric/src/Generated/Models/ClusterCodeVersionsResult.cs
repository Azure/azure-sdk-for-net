// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ServiceFabric.Models
{
    /// <summary> The result of the Service Fabric runtime versions. </summary>
    public partial class ClusterCodeVersionsResult : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="ClusterCodeVersionsResult"/>. </summary>
        internal ClusterCodeVersionsResult()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ClusterCodeVersionsResult"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="codeVersion"> The Service Fabric runtime version of the cluster. </param>
        /// <param name="supportExpireOn"> The date of expiry of support of the version. </param>
        /// <param name="environment"> Indicates if this version is for Windows or Linux operating system. </param>
        internal ClusterCodeVersionsResult(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string codeVersion, DateTimeOffset? supportExpireOn, ClusterEnvironment? environment) : base(id, name, resourceType, systemData)
        {
            CodeVersion = codeVersion;
            SupportExpireOn = supportExpireOn;
            Environment = environment;
        }

        /// <summary> The Service Fabric runtime version of the cluster. </summary>
        public string CodeVersion { get; }
        /// <summary> The date of expiry of support of the version. </summary>
        public DateTimeOffset? SupportExpireOn { get; }
        /// <summary> Indicates if this version is for Windows or Linux operating system. </summary>
        public ClusterEnvironment? Environment { get; }
    }
}
