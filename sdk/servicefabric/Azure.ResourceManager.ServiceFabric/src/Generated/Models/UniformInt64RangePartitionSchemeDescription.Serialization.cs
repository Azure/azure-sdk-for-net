// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabric.Models
{
    public partial class UniformInt64RangePartitionSchemeDescription : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("count");
            writer.WriteNumberValue(Count);
            writer.WritePropertyName("lowKey");
            writer.WriteStringValue(LowKey);
            writer.WritePropertyName("highKey");
            writer.WriteStringValue(HighKey);
            writer.WritePropertyName("partitionScheme");
            writer.WriteStringValue(PartitionScheme.ToString());
            writer.WriteEndObject();
        }

        internal static UniformInt64RangePartitionSchemeDescription DeserializeUniformInt64RangePartitionSchemeDescription(JsonElement element)
        {
            int count = default;
            string lowKey = default;
            string highKey = default;
            PartitionScheme partitionScheme = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("count"))
                {
                    count = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("lowKey"))
                {
                    lowKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("highKey"))
                {
                    highKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("partitionScheme"))
                {
                    partitionScheme = new PartitionScheme(property.Value.GetString());
                    continue;
                }
            }
            return new UniformInt64RangePartitionSchemeDescription(partitionScheme, count, lowKey, highKey);
        }
    }
}
