// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabric.Models
{
    public partial class ClusterCertificateDescription : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("thumbprint"u8);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(Thumbprint);
#else
            using (JsonDocument document = JsonDocument.Parse(Thumbprint))
            {
                JsonSerializer.Serialize(writer, document.RootElement);
            }
#endif
            if (Optional.IsDefined(ThumbprintSecondary))
            {
                writer.WritePropertyName("thumbprintSecondary"u8);
                writer.WriteStringValue(ThumbprintSecondary);
            }
            if (Optional.IsDefined(X509StoreName))
            {
                writer.WritePropertyName("x509StoreName"u8);
                writer.WriteStringValue(X509StoreName.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static ClusterCertificateDescription DeserializeClusterCertificateDescription(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            BinaryData thumbprint = default;
            Optional<string> thumbprintSecondary = default;
            Optional<ClusterCertificateStoreName> x509StoreName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("thumbprint"u8))
                {
                    thumbprint = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("thumbprintSecondary"u8))
                {
                    thumbprintSecondary = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("x509StoreName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    x509StoreName = new ClusterCertificateStoreName(property.Value.GetString());
                    continue;
                }
            }
            return new ClusterCertificateDescription(thumbprint, thumbprintSecondary.Value, Optional.ToNullable(x509StoreName));
        }
    }
}
