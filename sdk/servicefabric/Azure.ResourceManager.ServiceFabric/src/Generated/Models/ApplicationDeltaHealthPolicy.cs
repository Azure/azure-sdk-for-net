// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabric.Models
{
    /// <summary>
    /// Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.
    ///
    /// </summary>
    public partial class ApplicationDeltaHealthPolicy
    {
        /// <summary> Initializes a new instance of <see cref="ApplicationDeltaHealthPolicy"/>. </summary>
        public ApplicationDeltaHealthPolicy()
        {
            ServiceTypeDeltaHealthPolicies = new ChangeTrackingDictionary<string, ServiceTypeDeltaHealthPolicy>();
        }

        /// <summary> Initializes a new instance of <see cref="ApplicationDeltaHealthPolicy"/>. </summary>
        /// <param name="defaultServiceTypeDeltaHealthPolicy"> The delta health policy used by default to evaluate the health of a service type when upgrading the cluster. </param>
        /// <param name="serviceTypeDeltaHealthPolicies"> The map with service type delta health policy per service type name. The map is empty by default. </param>
        internal ApplicationDeltaHealthPolicy(ServiceTypeDeltaHealthPolicy defaultServiceTypeDeltaHealthPolicy, IDictionary<string, ServiceTypeDeltaHealthPolicy> serviceTypeDeltaHealthPolicies)
        {
            DefaultServiceTypeDeltaHealthPolicy = defaultServiceTypeDeltaHealthPolicy;
            ServiceTypeDeltaHealthPolicies = serviceTypeDeltaHealthPolicies;
        }

        /// <summary> The delta health policy used by default to evaluate the health of a service type when upgrading the cluster. </summary>
        internal ServiceTypeDeltaHealthPolicy DefaultServiceTypeDeltaHealthPolicy { get; set; }
        /// <summary>
        /// The maximum allowed percentage of services health degradation allowed during cluster upgrades.
        /// The delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.
        /// The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
        ///
        /// </summary>
        public int? MaxPercentDeltaUnhealthyServices
        {
            get => DefaultServiceTypeDeltaHealthPolicy is null ? default : DefaultServiceTypeDeltaHealthPolicy.MaxPercentDeltaUnhealthyServices;
            set
            {
                if (DefaultServiceTypeDeltaHealthPolicy is null)
                    DefaultServiceTypeDeltaHealthPolicy = new ServiceTypeDeltaHealthPolicy();
                DefaultServiceTypeDeltaHealthPolicy.MaxPercentDeltaUnhealthyServices = value;
            }
        }

        /// <summary> The map with service type delta health policy per service type name. The map is empty by default. </summary>
        public IDictionary<string, ServiceTypeDeltaHealthPolicy> ServiceTypeDeltaHealthPolicies { get; }
    }
}
