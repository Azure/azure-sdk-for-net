// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabric.Models
{
    public partial class Notification : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("isEnabled");
            writer.WriteBooleanValue(IsEnabled);
            writer.WritePropertyName("notificationCategory");
            writer.WriteStringValue(NotificationCategory.ToString());
            writer.WritePropertyName("notificationLevel");
            writer.WriteStringValue(NotificationLevel.ToString());
            writer.WritePropertyName("notificationTargets");
            writer.WriteStartArray();
            foreach (var item in NotificationTargets)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            writer.WriteEndObject();
        }

        internal static Notification DeserializeNotification(JsonElement element)
        {
            bool isEnabled = default;
            NotificationCategory notificationCategory = default;
            NotificationLevel notificationLevel = default;
            IList<NotificationTarget> notificationTargets = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("isEnabled"))
                {
                    isEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("notificationCategory"))
                {
                    notificationCategory = new NotificationCategory(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("notificationLevel"))
                {
                    notificationLevel = new NotificationLevel(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("notificationTargets"))
                {
                    List<NotificationTarget> array = new List<NotificationTarget>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(NotificationTarget.DeserializeNotificationTarget(item));
                    }
                    notificationTargets = array;
                    continue;
                }
            }
            return new Notification(isEnabled, notificationCategory, notificationLevel, notificationTargets);
        }
    }
}
