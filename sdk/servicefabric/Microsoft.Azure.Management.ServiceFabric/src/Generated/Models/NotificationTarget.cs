// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes the notification target properties.
    /// </summary>
    public partial class NotificationTarget
    {
        /// <summary>
        /// Initializes a new instance of the NotificationTarget class.
        /// </summary>
        public NotificationTarget()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotificationTarget class.
        /// </summary>
        /// <param name="notificationChannel">The notification channel
        /// indicates the type of receivers subscribed to the notification,
        /// either user or subscription. Possible values include: 'EmailUser',
        /// 'EmailSubscription'</param>
        /// <param name="receivers">List of targets that subscribe to the
        /// notification.</param>
        public NotificationTarget(string notificationChannel, IList<string> receivers)
        {
            NotificationChannel = notificationChannel;
            Receivers = receivers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the notification channel indicates the type of
        /// receivers subscribed to the notification, either user or
        /// subscription. Possible values include: 'EmailUser',
        /// 'EmailSubscription'
        /// </summary>
        [JsonProperty(PropertyName = "notificationChannel")]
        public string NotificationChannel { get; set; }

        /// <summary>
        /// Gets or sets list of targets that subscribe to the notification.
        /// </summary>
        [JsonProperty(PropertyName = "receivers")]
        public IList<string> Receivers { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (NotificationChannel == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NotificationChannel");
            }
            if (Receivers == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Receivers");
            }
        }
    }
}
