// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Client Certificate definition.
    /// </summary>
    public partial class ClientCertificate
    {
        /// <summary>
        /// Initializes a new instance of the ClientCertificate class.
        /// </summary>
        public ClientCertificate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClientCertificate class.
        /// </summary>
        /// <param name="isAdmin">Whether the certificate is admin or
        /// not.</param>
        /// <param name="thumbprint">Certificate Thumbprint.</param>
        /// <param name="commonName">Certificate Common name.</param>
        /// <param name="issuerThumbprint">Issuer thumbprint for the
        /// certificate. Its only use ehn CommonName is used.</param>
        public ClientCertificate(bool isAdmin, string thumbprint = default(string), string commonName = default(string), string issuerThumbprint = default(string))
        {
            IsAdmin = isAdmin;
            Thumbprint = thumbprint;
            CommonName = commonName;
            IssuerThumbprint = issuerThumbprint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether the certificate is admin or not.
        /// </summary>
        [JsonProperty(PropertyName = "isAdmin")]
        public bool IsAdmin { get; set; }

        /// <summary>
        /// Gets or sets certificate Thumbprint.
        /// </summary>
        [JsonProperty(PropertyName = "thumbprint")]
        public string Thumbprint { get; set; }

        /// <summary>
        /// Gets or sets certificate Common name.
        /// </summary>
        [JsonProperty(PropertyName = "commonName")]
        public string CommonName { get; set; }

        /// <summary>
        /// Gets or sets issuer thumbprint for the certificate. Its only use
        /// ehn CommonName is used.
        /// </summary>
        [JsonProperty(PropertyName = "issuerThumbprint")]
        public string IssuerThumbprint { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
