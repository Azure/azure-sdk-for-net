// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines a delta health policy used to evaluate the health of an
    /// application or one of its child entities when upgrading the cluster.
    ///
    /// </summary>
    public partial class ApplicationDeltaHealthPolicy
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationDeltaHealthPolicy
        /// class.
        /// </summary>
        public ApplicationDeltaHealthPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationDeltaHealthPolicy
        /// class.
        /// </summary>
        /// <param name="defaultServiceTypeDeltaHealthPolicy">The delta health
        /// policy used by default to evaluate the health of a service type
        /// when upgrading the cluster.</param>
        /// <param name="serviceTypeDeltaHealthPolicies">The map with service
        /// type delta health policy per service type name. The map is empty by
        /// default.</param>
        public ApplicationDeltaHealthPolicy(ServiceTypeDeltaHealthPolicy defaultServiceTypeDeltaHealthPolicy = default(ServiceTypeDeltaHealthPolicy), IDictionary<string, ServiceTypeDeltaHealthPolicy> serviceTypeDeltaHealthPolicies = default(IDictionary<string, ServiceTypeDeltaHealthPolicy>))
        {
            DefaultServiceTypeDeltaHealthPolicy = defaultServiceTypeDeltaHealthPolicy;
            ServiceTypeDeltaHealthPolicies = serviceTypeDeltaHealthPolicies;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the delta health policy used by default to evaluate
        /// the health of a service type when upgrading the cluster.
        /// </summary>
        [JsonProperty(PropertyName = "defaultServiceTypeDeltaHealthPolicy")]
        public ServiceTypeDeltaHealthPolicy DefaultServiceTypeDeltaHealthPolicy { get; set; }

        /// <summary>
        /// Gets or sets the map with service type delta health policy per
        /// service type name. The map is empty by default.
        /// </summary>
        [JsonProperty(PropertyName = "serviceTypeDeltaHealthPolicies")]
        public IDictionary<string, ServiceTypeDeltaHealthPolicy> ServiceTypeDeltaHealthPolicies { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DefaultServiceTypeDeltaHealthPolicy != null)
            {
                DefaultServiceTypeDeltaHealthPolicy.Validate();
            }
            if (ServiceTypeDeltaHealthPolicies != null)
            {
                foreach (var valueElement in ServiceTypeDeltaHealthPolicies.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
        }
    }
}
