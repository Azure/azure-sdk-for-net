// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmCarbonOptimizationModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.QueryFilter"/>. </summary>
        /// <param name="reportType"> Report type. </param>
        /// <param name="dateRange"> The start date and end date for carbon emissions data. </param>
        /// <param name="subscriptionList"> SubscriptionId list for carbon emissions data. </param>
        /// <param name="resourceGroupUrlList"> resourceGroupUrl list for carbon emissions data. </param>
        /// <param name="resourceTypeList"> resource type list for carbon emissions data. </param>
        /// <param name="locationList"> Location list for carbon emissions data. </param>
        /// <param name="carbonScopeList"> Carbon emission scope for carbon emissions data. </param>
        /// <returns> A new <see cref="Models.QueryFilter"/> instance for mocking. </returns>
        public static QueryFilter QueryFilter(string reportType = null, DateRange dateRange = null, IEnumerable<string> subscriptionList = null, IEnumerable<string> resourceGroupUrlList = null, IEnumerable<string> resourceTypeList = null, IEnumerable<string> locationList = null, IEnumerable<EmissionScopeEnum> carbonScopeList = null)
        {
            subscriptionList ??= new List<string>();
            resourceGroupUrlList ??= new List<string>();
            resourceTypeList ??= new List<string>();
            locationList ??= new List<string>();
            carbonScopeList ??= new List<EmissionScopeEnum>();

            return new UnknownQueryFilter(
                reportType,
                dateRange,
                subscriptionList?.ToList(),
                resourceGroupUrlList?.ToList(),
                resourceTypeList?.ToList(),
                locationList?.ToList(),
                carbonScopeList?.ToList(),
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CarbonEmissionData"/>. </summary>
        /// <param name="dataType"> Query result data type name. </param>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <returns> A new <see cref="Models.CarbonEmissionData"/> instance for mocking. </returns>
        public static CarbonEmissionData CarbonEmissionData(string dataType = null, double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null)
        {
            return new UnknownCarbonEmissionData(
                dataType,
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CarbonEmissionDataAvailableDateRange"/>. </summary>
        /// <param name="startDate"> Start date parameter, format is yyyy-MM-dd. </param>
        /// <param name="endDate"> End date parameter, format is yyyy-MM-dd. </param>
        /// <returns> A new <see cref="Models.CarbonEmissionDataAvailableDateRange"/> instance for mocking. </returns>
        public static CarbonEmissionDataAvailableDateRange CarbonEmissionDataAvailableDateRange(string startDate = null, string endDate = null)
        {
            return new CarbonEmissionDataAvailableDateRange(startDate, endDate, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CarbonEmissionItemDetailData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="groupName"> Item group name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <returns> A new <see cref="Models.CarbonEmissionItemDetailData"/> instance for mocking. </returns>
        public static CarbonEmissionItemDetailData CarbonEmissionItemDetailData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, string groupName = null, CategoryTypeEnum categoryType = default)
        {
            return new CarbonEmissionItemDetailData(
                "ItemDetailsData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                groupName,
                categoryType);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CarbonEmissionMonthlySummaryData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="date"> Monthly date string. </param>
        /// <param name="carbonIntensity"> Carbon Intensity. </param>
        /// <returns> A new <see cref="Models.CarbonEmissionMonthlySummaryData"/> instance for mocking. </returns>
        public static CarbonEmissionMonthlySummaryData CarbonEmissionMonthlySummaryData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string date = null, double carbonIntensity = default)
        {
            return new CarbonEmissionMonthlySummaryData(
                "MonthlySummaryData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                date,
                carbonIntensity);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CarbonEmissionOverallSummaryData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <returns> A new <see cref="Models.CarbonEmissionOverallSummaryData"/> instance for mocking. </returns>
        public static CarbonEmissionOverallSummaryData CarbonEmissionOverallSummaryData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null)
        {
            return new CarbonEmissionOverallSummaryData(
                "OverallSummaryData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CarbonEmissionTopItemMonthlySummaryData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <param name="date"> Month date. </param>
        /// <returns> A new <see cref="Models.CarbonEmissionTopItemMonthlySummaryData"/> instance for mocking. </returns>
        public static CarbonEmissionTopItemMonthlySummaryData CarbonEmissionTopItemMonthlySummaryData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, CategoryTypeEnum categoryType = default, string date = null)
        {
            return new CarbonEmissionTopItemMonthlySummaryData(
                "TopItemsMonthlySummaryData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                categoryType,
                date);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CarbonEmissionTopItemsSummaryData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <returns> A new <see cref="Models.CarbonEmissionTopItemsSummaryData"/> instance for mocking. </returns>
        public static CarbonEmissionTopItemsSummaryData CarbonEmissionTopItemsSummaryData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, CategoryTypeEnum categoryType = default)
        {
            return new CarbonEmissionTopItemsSummaryData(
                "TopItemsSummaryData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                categoryType);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ItemDetailsQueryFilter"/>. </summary>
        /// <param name="dateRange"> The start date and end date for carbon emissions data. </param>
        /// <param name="subscriptionList"> SubscriptionId list for carbon emissions data. </param>
        /// <param name="resourceGroupUrlList"> resourceGroupUrl list for carbon emissions data. </param>
        /// <param name="resourceTypeList"> resource type list for carbon emissions data. </param>
        /// <param name="locationList"> Location list for carbon emissions data. </param>
        /// <param name="carbonScopeList"> Carbon emission scope for carbon emissions data. </param>
        /// <param name="categoryType"> Item Category type. </param>
        /// <param name="orderBy"> Order by column name. </param>
        /// <param name="sortDirection"> Direction for sorting. </param>
        /// <param name="groupCategory"> Group category name. </param>
        /// <param name="pageSize"> Number of items to return. </param>
        /// <param name="skipToken"> The number of result items to skip. </param>
        /// <returns> A new <see cref="Models.ItemDetailsQueryFilter"/> instance for mocking. </returns>
        public static ItemDetailsQueryFilter ItemDetailsQueryFilter(DateRange dateRange = null, IEnumerable<string> subscriptionList = null, IEnumerable<string> resourceGroupUrlList = null, IEnumerable<string> resourceTypeList = null, IEnumerable<string> locationList = null, IEnumerable<EmissionScopeEnum> carbonScopeList = null, CategoryTypeEnum categoryType = default, string orderBy = null, string sortDirection = null, string groupCategory = null, int pageSize = default, string skipToken = null)
        {
            subscriptionList ??= new List<string>();
            resourceGroupUrlList ??= new List<string>();
            resourceTypeList ??= new List<string>();
            locationList ??= new List<string>();
            carbonScopeList ??= new List<EmissionScopeEnum>();

            return new ItemDetailsQueryFilter(
                "ItemDetailsReport",
                dateRange,
                subscriptionList?.ToList(),
                resourceGroupUrlList?.ToList(),
                resourceTypeList?.ToList(),
                locationList?.ToList(),
                carbonScopeList?.ToList(),
                serializedAdditionalRawData: null,
                categoryType,
                orderBy,
                sortDirection,
                groupCategory,
                pageSize,
                skipToken);
        }

        /// <summary> Initializes a new instance of <see cref="Models.MonthlySummaryReportQueryFilter"/>. </summary>
        /// <param name="dateRange"> The start date and end date for carbon emissions data. </param>
        /// <param name="subscriptionList"> SubscriptionId list for carbon emissions data. </param>
        /// <param name="resourceGroupUrlList"> resourceGroupUrl list for carbon emissions data. </param>
        /// <param name="resourceTypeList"> resource type list for carbon emissions data. </param>
        /// <param name="locationList"> Location list for carbon emissions data. </param>
        /// <param name="carbonScopeList"> Carbon emission scope for carbon emissions data. </param>
        /// <returns> A new <see cref="Models.MonthlySummaryReportQueryFilter"/> instance for mocking. </returns>
        public static MonthlySummaryReportQueryFilter MonthlySummaryReportQueryFilter(DateRange dateRange = null, IEnumerable<string> subscriptionList = null, IEnumerable<string> resourceGroupUrlList = null, IEnumerable<string> resourceTypeList = null, IEnumerable<string> locationList = null, IEnumerable<EmissionScopeEnum> carbonScopeList = null)
        {
            subscriptionList ??= new List<string>();
            resourceGroupUrlList ??= new List<string>();
            resourceTypeList ??= new List<string>();
            locationList ??= new List<string>();
            carbonScopeList ??= new List<EmissionScopeEnum>();

            return new MonthlySummaryReportQueryFilter(
                "MonthlySummaryReport",
                dateRange,
                subscriptionList?.ToList(),
                resourceGroupUrlList?.ToList(),
                resourceTypeList?.ToList(),
                locationList?.ToList(),
                carbonScopeList?.ToList(),
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.OverallSummaryReportQueryFilter"/>. </summary>
        /// <param name="dateRange"> The start date and end date for carbon emissions data. </param>
        /// <param name="subscriptionList"> SubscriptionId list for carbon emissions data. </param>
        /// <param name="resourceGroupUrlList"> resourceGroupUrl list for carbon emissions data. </param>
        /// <param name="resourceTypeList"> resource type list for carbon emissions data. </param>
        /// <param name="locationList"> Location list for carbon emissions data. </param>
        /// <param name="carbonScopeList"> Carbon emission scope for carbon emissions data. </param>
        /// <returns> A new <see cref="Models.OverallSummaryReportQueryFilter"/> instance for mocking. </returns>
        public static OverallSummaryReportQueryFilter OverallSummaryReportQueryFilter(DateRange dateRange = null, IEnumerable<string> subscriptionList = null, IEnumerable<string> resourceGroupUrlList = null, IEnumerable<string> resourceTypeList = null, IEnumerable<string> locationList = null, IEnumerable<EmissionScopeEnum> carbonScopeList = null)
        {
            subscriptionList ??= new List<string>();
            resourceGroupUrlList ??= new List<string>();
            resourceTypeList ??= new List<string>();
            locationList ??= new List<string>();
            carbonScopeList ??= new List<EmissionScopeEnum>();

            return new OverallSummaryReportQueryFilter(
                "OverallSummaryReport",
                dateRange,
                subscriptionList?.ToList(),
                resourceGroupUrlList?.ToList(),
                resourceTypeList?.ToList(),
                locationList?.ToList(),
                carbonScopeList?.ToList(),
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceCarbonEmissionItemDetailData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="groupName"> Item group name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <param name="resourceGroup"> Resource Group. </param>
        /// <param name="resourceId"> Resource Id Url. </param>
        /// <param name="location"> Resource Location. </param>
        /// <param name="resourceType"> Resource Type. </param>
        /// <param name="resourceTypeFriendlyName"> Friendly name of Resource Type. </param>
        /// <param name="resourceProvider"> Resource Provider. </param>
        /// <returns> A new <see cref="Models.ResourceCarbonEmissionItemDetailData"/> instance for mocking. </returns>
        public static ResourceCarbonEmissionItemDetailData ResourceCarbonEmissionItemDetailData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, string groupName = null, CategoryTypeEnum categoryType = default, string subscriptionId = null, string resourceGroup = null, string resourceId = null, AzureLocation? location = null, string resourceType = null, string resourceTypeFriendlyName = null, string resourceProvider = null)
        {
            return new ResourceCarbonEmissionItemDetailData(
                "ResourceItemDetailsData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                groupName,
                categoryType,
                subscriptionId,
                resourceGroup,
                resourceId,
                location,
                resourceType,
                resourceTypeFriendlyName,
                resourceProvider);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceCarbonEmissionTopItemMonthlySummaryData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <param name="date"> Month date. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <param name="resourceGroup"> Resource Group. </param>
        /// <returns> A new <see cref="Models.ResourceCarbonEmissionTopItemMonthlySummaryData"/> instance for mocking. </returns>
        public static ResourceCarbonEmissionTopItemMonthlySummaryData ResourceCarbonEmissionTopItemMonthlySummaryData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, CategoryTypeEnum categoryType = default, string date = null, string subscriptionId = null, string resourceGroup = null)
        {
            return new ResourceCarbonEmissionTopItemMonthlySummaryData(
                "ResourceTopItemsMonthlySummaryData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                categoryType,
                date,
                subscriptionId,
                resourceGroup);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceCarbonEmissionTopItemsSummaryData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <param name="resourceGroup"> Resource Group. </param>
        /// <returns> A new <see cref="Models.ResourceCarbonEmissionTopItemsSummaryData"/> instance for mocking. </returns>
        public static ResourceCarbonEmissionTopItemsSummaryData ResourceCarbonEmissionTopItemsSummaryData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, CategoryTypeEnum categoryType = default, string subscriptionId = null, string resourceGroup = null)
        {
            return new ResourceCarbonEmissionTopItemsSummaryData(
                "ResourceTopItemsSummaryData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                categoryType,
                subscriptionId,
                resourceGroup);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceGroupCarbonEmissionItemDetailData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="groupName"> Item group name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <returns> A new <see cref="Models.ResourceGroupCarbonEmissionItemDetailData"/> instance for mocking. </returns>
        public static ResourceGroupCarbonEmissionItemDetailData ResourceGroupCarbonEmissionItemDetailData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, string groupName = null, CategoryTypeEnum categoryType = default, string subscriptionId = null)
        {
            return new ResourceGroupCarbonEmissionItemDetailData(
                "ResourceGroupItemDetailsData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                groupName,
                categoryType,
                subscriptionId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceGroupCarbonEmissionTopItemMonthlySummaryData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <param name="date"> Month date. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <returns> A new <see cref="Models.ResourceGroupCarbonEmissionTopItemMonthlySummaryData"/> instance for mocking. </returns>
        public static ResourceGroupCarbonEmissionTopItemMonthlySummaryData ResourceGroupCarbonEmissionTopItemMonthlySummaryData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, CategoryTypeEnum categoryType = default, string date = null, string subscriptionId = null)
        {
            return new ResourceGroupCarbonEmissionTopItemMonthlySummaryData(
                "ResourceGroupTopItemsMonthlySummaryData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                categoryType,
                date,
                subscriptionId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceGroupCarbonEmissionTopItemsSummaryData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name. </param>
        /// <param name="categoryType"> Item category. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <returns> A new <see cref="Models.ResourceGroupCarbonEmissionTopItemsSummaryData"/> instance for mocking. </returns>
        public static ResourceGroupCarbonEmissionTopItemsSummaryData ResourceGroupCarbonEmissionTopItemsSummaryData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, CategoryTypeEnum categoryType = default, string subscriptionId = null)
        {
            return new ResourceGroupCarbonEmissionTopItemsSummaryData(
                "ResourceGroupTopItemsSummaryData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                categoryType,
                subscriptionId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ResourceTypeCarbonEmissionItemDetailData"/>. </summary>
        /// <param name="totalCarbonEmission"> Total carbon emissions for given query parameters. </param>
        /// <param name="totalCarbonEmissionLastMonth"> Total carbon emission for last month for given query parameters. </param>
        /// <param name="changeRatioForLastMonth"> Change ratio between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="totalCarbonEmission12MonthsAgo"> Total carbon emissions for 12 months ago for given query parameters. </param>
        /// <param name="changeRatioFor12Months"> Change ratio between totalCarbonEmission and totalCarbonEmission12MonthsAgo. </param>
        /// <param name="changeValueMonthOverMonth"> Change Value between totalCarbonEmission and totalCarbonEmissionLastMonth. </param>
        /// <param name="itemName"> Item name, resource type name. </param>
        /// <param name="resourceTypeFriendlyName"> Item group name. </param>
        /// <param name="categoryType"> Item category, which is ResourceType. </param>
        /// <returns> A new <see cref="Models.ResourceTypeCarbonEmissionItemDetailData"/> instance for mocking. </returns>
        public static ResourceTypeCarbonEmissionItemDetailData ResourceTypeCarbonEmissionItemDetailData(double totalCarbonEmission = default, double totalCarbonEmissionLastMonth = default, double changeRatioForLastMonth = default, double totalCarbonEmission12MonthsAgo = default, double changeRatioFor12Months = default, double? changeValueMonthOverMonth = null, string itemName = null, string resourceTypeFriendlyName = null, CategoryTypeEnum categoryType = default)
        {
            return new ResourceTypeCarbonEmissionItemDetailData(
                "ResourceTypeItemDetailsData",
                totalCarbonEmission,
                totalCarbonEmissionLastMonth,
                changeRatioForLastMonth,
                totalCarbonEmission12MonthsAgo,
                changeRatioFor12Months,
                changeValueMonthOverMonth,
                serializedAdditionalRawData: null,
                itemName,
                resourceTypeFriendlyName,
                categoryType);
        }

        /// <summary> Initializes a new instance of <see cref="Models.TopItemsMonthlySummaryReportQueryFilter"/>. </summary>
        /// <param name="dateRange"> The start date and end date for carbon emissions data. </param>
        /// <param name="subscriptionList"> SubscriptionId list for carbon emissions data. </param>
        /// <param name="resourceGroupUrlList"> resourceGroupUrl list for carbon emissions data. </param>
        /// <param name="resourceTypeList"> resource type list for carbon emissions data. </param>
        /// <param name="locationList"> Location list for carbon emissions data. </param>
        /// <param name="carbonScopeList"> Carbon emission scope for carbon emissions data. </param>
        /// <param name="categoryType"> Item Category type. </param>
        /// <param name="topItems"> Number of top items to return. The value should be between 5 and 100. </param>
        /// <returns> A new <see cref="Models.TopItemsMonthlySummaryReportQueryFilter"/> instance for mocking. </returns>
        public static TopItemsMonthlySummaryReportQueryFilter TopItemsMonthlySummaryReportQueryFilter(DateRange dateRange = null, IEnumerable<string> subscriptionList = null, IEnumerable<string> resourceGroupUrlList = null, IEnumerable<string> resourceTypeList = null, IEnumerable<string> locationList = null, IEnumerable<EmissionScopeEnum> carbonScopeList = null, CategoryTypeEnum categoryType = default, int topItems = default)
        {
            subscriptionList ??= new List<string>();
            resourceGroupUrlList ??= new List<string>();
            resourceTypeList ??= new List<string>();
            locationList ??= new List<string>();
            carbonScopeList ??= new List<EmissionScopeEnum>();

            return new TopItemsMonthlySummaryReportQueryFilter(
                "TopItemsMonthlySummaryReport",
                dateRange,
                subscriptionList?.ToList(),
                resourceGroupUrlList?.ToList(),
                resourceTypeList?.ToList(),
                locationList?.ToList(),
                carbonScopeList?.ToList(),
                serializedAdditionalRawData: null,
                categoryType,
                topItems);
        }

        /// <summary> Initializes a new instance of <see cref="Models.TopItemsSummaryReportQueryFilter"/>. </summary>
        /// <param name="dateRange"> The start date and end date for carbon emissions data. </param>
        /// <param name="subscriptionList"> SubscriptionId list for carbon emissions data. </param>
        /// <param name="resourceGroupUrlList"> resourceGroupUrl list for carbon emissions data. </param>
        /// <param name="resourceTypeList"> resource type list for carbon emissions data. </param>
        /// <param name="locationList"> Location list for carbon emissions data. </param>
        /// <param name="carbonScopeList"> Carbon emission scope for carbon emissions data. </param>
        /// <param name="categoryType"> Item Category type. </param>
        /// <param name="topItems"> Number of top items to return. The value should be between 5 and 100. </param>
        /// <returns> A new <see cref="Models.TopItemsSummaryReportQueryFilter"/> instance for mocking. </returns>
        public static TopItemsSummaryReportQueryFilter TopItemsSummaryReportQueryFilter(DateRange dateRange = null, IEnumerable<string> subscriptionList = null, IEnumerable<string> resourceGroupUrlList = null, IEnumerable<string> resourceTypeList = null, IEnumerable<string> locationList = null, IEnumerable<EmissionScopeEnum> carbonScopeList = null, CategoryTypeEnum categoryType = default, int topItems = default)
        {
            subscriptionList ??= new List<string>();
            resourceGroupUrlList ??= new List<string>();
            resourceTypeList ??= new List<string>();
            locationList ??= new List<string>();
            carbonScopeList ??= new List<EmissionScopeEnum>();

            return new TopItemsSummaryReportQueryFilter(
                "TopItemsSummaryReport",
                dateRange,
                subscriptionList?.ToList(),
                resourceGroupUrlList?.ToList(),
                resourceTypeList?.ToList(),
                locationList?.ToList(),
                carbonScopeList?.ToList(),
                serializedAdditionalRawData: null,
                categoryType,
                topItems);
        }
    }
}
