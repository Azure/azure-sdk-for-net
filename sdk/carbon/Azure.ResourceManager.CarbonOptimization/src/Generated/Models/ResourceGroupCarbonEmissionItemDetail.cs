// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    /// <summary> Response for Resource Group detailed carbon emissions. </summary>
    public partial class ResourceGroupCarbonEmissionItemDetail : CarbonEmission
    {
        /// <summary> Initializes a new instance of <see cref="ResourceGroupCarbonEmissionItemDetail"/>. </summary>
        /// <param name="latestMonthEmissions"> Total carbon emissions for the specified query parameters, measured in kgCO2E. This value represents total emissions over the specified date range (e.g., March-June). </param>
        /// <param name="previousMonthEmissions"> Total carbon emissions for the previous month’s date range, which is the same period as the specified date range but shifted left by one month (e.g., if the specified range is March - June, the previous month’s range will be Feb - May). The value is measured in kgCO2E. </param>
        /// <param name="itemName"> It's resource group name. </param>
        /// <param name="categoryType"> ResourceGroup Item category. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <param name="resourceGroupId"> Resource Group url, value format is '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}'. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="itemName"/>, <paramref name="subscriptionId"/> or <paramref name="resourceGroupId"/> is null. </exception>
        internal ResourceGroupCarbonEmissionItemDetail(double latestMonthEmissions, double previousMonthEmissions, string itemName, CarbonEmissionCategoryType categoryType, string subscriptionId, ResourceIdentifier resourceGroupId) : base(latestMonthEmissions, previousMonthEmissions)
        {
            Argument.AssertNotNull(itemName, nameof(itemName));
            Argument.AssertNotNull(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(resourceGroupId, nameof(resourceGroupId));

            ItemName = itemName;
            CategoryType = categoryType;
            SubscriptionId = subscriptionId;
            ResourceGroupId = resourceGroupId;
            DataType = CarbonEmissionDataType.ResourceGroupItemDetailsData;
        }

        /// <summary> Initializes a new instance of <see cref="ResourceGroupCarbonEmissionItemDetail"/>. </summary>
        /// <param name="dataType"> The data type of the query result, indicating the format of the returned response. </param>
        /// <param name="latestMonthEmissions"> Total carbon emissions for the specified query parameters, measured in kgCO2E. This value represents total emissions over the specified date range (e.g., March-June). </param>
        /// <param name="previousMonthEmissions"> Total carbon emissions for the previous month’s date range, which is the same period as the specified date range but shifted left by one month (e.g., if the specified range is March - June, the previous month’s range will be Feb - May). The value is measured in kgCO2E. </param>
        /// <param name="monthOverMonthEmissionsChangeRatio"> The percentage change in carbon emissions between the current and previous DateRange. This is calculated as: (latestMonthEmissions - previousMonthEmissions) / previousMonthEmissions. </param>
        /// <param name="monthlyEmissionsChangeValue"> The change in carbon emissions between the current and previous period, calculated as: latestMonthEmissions - previousMonthEmissions. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="itemName"> It's resource group name. </param>
        /// <param name="categoryType"> ResourceGroup Item category. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <param name="resourceGroupId"> Resource Group url, value format is '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}'. </param>
        internal ResourceGroupCarbonEmissionItemDetail(CarbonEmissionDataType dataType, double latestMonthEmissions, double previousMonthEmissions, double? monthOverMonthEmissionsChangeRatio, double? monthlyEmissionsChangeValue, IDictionary<string, BinaryData> serializedAdditionalRawData, string itemName, CarbonEmissionCategoryType categoryType, string subscriptionId, ResourceIdentifier resourceGroupId) : base(dataType, latestMonthEmissions, previousMonthEmissions, monthOverMonthEmissionsChangeRatio, monthlyEmissionsChangeValue, serializedAdditionalRawData)
        {
            ItemName = itemName;
            CategoryType = categoryType;
            SubscriptionId = subscriptionId;
            ResourceGroupId = resourceGroupId;
            DataType = dataType;
        }

        /// <summary> Initializes a new instance of <see cref="ResourceGroupCarbonEmissionItemDetail"/> for deserialization. </summary>
        internal ResourceGroupCarbonEmissionItemDetail()
        {
        }

        /// <summary> It's resource group name. </summary>
        public string ItemName { get; }
        /// <summary> ResourceGroup Item category. </summary>
        public CarbonEmissionCategoryType CategoryType { get; }
        /// <summary> Subscription Id. </summary>
        public string SubscriptionId { get; }
        /// <summary> Resource Group url, value format is '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}'. </summary>
        public ResourceIdentifier ResourceGroupId { get; }
    }
}
