// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    /// <summary> Unknown version of QueryFilter. </summary>
    internal partial class UnknownQueryFilter : QueryFilter
    {
        /// <summary> Initializes a new instance of <see cref="UnknownQueryFilter"/>. </summary>
        /// <param name="reportType"> Report type. </param>
        /// <param name="dateRange"> The start date and end date for carbon emissions data. </param>
        /// <param name="subscriptionList"> SubscriptionId list for carbon emissions data. </param>
        /// <param name="resourceGroupUrlList"> resourceGroupUrl list for carbon emissions data. </param>
        /// <param name="resourceTypeList"> resource type list for carbon emissions data. </param>
        /// <param name="locationList"> Location list for carbon emissions data. </param>
        /// <param name="carbonScopeList"> Carbon emission scope for carbon emissions data. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal UnknownQueryFilter(string reportType, DateRange dateRange, IList<string> subscriptionList, IList<string> resourceGroupUrlList, IList<string> resourceTypeList, IList<string> locationList, IList<EmissionScopeEnum> carbonScopeList, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(reportType, dateRange, subscriptionList, resourceGroupUrlList, resourceTypeList, locationList, carbonScopeList, serializedAdditionalRawData)
        {
            ReportType = reportType ?? "Unknown";
        }

        /// <summary> Initializes a new instance of <see cref="UnknownQueryFilter"/> for deserialization. </summary>
        internal UnknownQueryFilter()
        {
        }
    }
}
