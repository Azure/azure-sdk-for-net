// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    /// <summary> Sorting is supported for columns in ItemDetailsReport. This object includes the column names that sorting is allowed for. Select one of these supported values. </summary>
    public readonly partial struct OrderByColumnEnum : IEquatable<OrderByColumnEnum>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="OrderByColumnEnum"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public OrderByColumnEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ItemNameValue = "ItemName";
        private const string LatestMonthEmissionsValue = "LatestMonthEmissions";
        private const string PreviousMonthEmissionsValue = "PreviousMonthEmissions";
        private const string MonthOverMonthEmissionsChangeRatioValue = "MonthOverMonthEmissionsChangeRatio";
        private const string MonthlyEmissionsChangeValueValue = "MonthlyEmissionsChangeValue";
        private const string ResourceGroupValue = "ResourceGroup";

        /// <summary> The itemName filed in ItemDetailsReport result, see CarbonEmissionItemDetailData for more information. </summary>
        public static OrderByColumnEnum ItemName { get; } = new OrderByColumnEnum(ItemNameValue);
        /// <summary> The latestMonthEmissions filed in ItemDetailsReport result, see CarbonEmissionItemDetailData for more information. </summary>
        public static OrderByColumnEnum LatestMonthEmissions { get; } = new OrderByColumnEnum(LatestMonthEmissionsValue);
        /// <summary> The previousMonthEmissions filed in ItemDetailsReport result, see CarbonEmissionItemDetailData for more information. </summary>
        public static OrderByColumnEnum PreviousMonthEmissions { get; } = new OrderByColumnEnum(PreviousMonthEmissionsValue);
        /// <summary> The monthOverMonthEmissionsChangeRatio filed in ItemDetailsReport result, see CarbonEmissionItemDetailData for more information. </summary>
        public static OrderByColumnEnum MonthOverMonthEmissionsChangeRatio { get; } = new OrderByColumnEnum(MonthOverMonthEmissionsChangeRatioValue);
        /// <summary> The monthlyEmissionsChangeValue filed in ItemDetailsReport result, see CarbonEmissionItemDetailData for more information. </summary>
        public static OrderByColumnEnum MonthlyEmissionsChangeValue { get; } = new OrderByColumnEnum(MonthlyEmissionsChangeValueValue);
        /// <summary> The resourceGroup filed in ResourceCarbonEmissionItemDetailData result, see ResourceCarbonEmissionItemDetailData for more information. </summary>
        public static OrderByColumnEnum ResourceGroup { get; } = new OrderByColumnEnum(ResourceGroupValue);
        /// <summary> Determines if two <see cref="OrderByColumnEnum"/> values are the same. </summary>
        public static bool operator ==(OrderByColumnEnum left, OrderByColumnEnum right) => left.Equals(right);
        /// <summary> Determines if two <see cref="OrderByColumnEnum"/> values are not the same. </summary>
        public static bool operator !=(OrderByColumnEnum left, OrderByColumnEnum right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="OrderByColumnEnum"/>. </summary>
        public static implicit operator OrderByColumnEnum(string value) => new OrderByColumnEnum(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is OrderByColumnEnum other && Equals(other);
        /// <inheritdoc />
        public bool Equals(OrderByColumnEnum other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
