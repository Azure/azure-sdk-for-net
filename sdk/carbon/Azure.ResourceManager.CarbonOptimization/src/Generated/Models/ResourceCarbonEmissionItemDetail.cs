// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    /// <summary> Response for Resource detailed carbon emissions. </summary>
    public partial class ResourceCarbonEmissionItemDetail : CarbonEmission
    {
        /// <summary> Initializes a new instance of <see cref="ResourceCarbonEmissionItemDetail"/>. </summary>
        /// <param name="latestMonthEmissions"> Total carbon emissions for the specified query parameters, measured in kgCO2E. This value represents total emissions over the specified date range (e.g., March-June). </param>
        /// <param name="previousMonthEmissions"> Total carbon emissions for the previous month’s date range, which is the same period as the specified date range but shifted left by one month (e.g., if the specified range is March - June, the previous month’s range will be Feb - May). The value is measured in kgCO2E. </param>
        /// <param name="itemName"> It's resource name. </param>
        /// <param name="categoryType"> Resource Item category, see supported value defined in CategoryTypeEnum. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <param name="resourceGroup"> Resource Group. </param>
        /// <param name="resourceId"> The fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="itemName"/>, <paramref name="subscriptionId"/>, <paramref name="resourceGroup"/> or <paramref name="resourceId"/> is null. </exception>
        internal ResourceCarbonEmissionItemDetail(double latestMonthEmissions, double previousMonthEmissions, string itemName, CarbonEmissionCategoryType categoryType, string subscriptionId, string resourceGroup, ResourceIdentifier resourceId) : base(latestMonthEmissions, previousMonthEmissions)
        {
            Argument.AssertNotNull(itemName, nameof(itemName));
            Argument.AssertNotNull(subscriptionId, nameof(subscriptionId));
            Argument.AssertNotNull(resourceGroup, nameof(resourceGroup));
            Argument.AssertNotNull(resourceId, nameof(resourceId));

            ItemName = itemName;
            CategoryType = categoryType;
            SubscriptionId = subscriptionId;
            ResourceGroup = resourceGroup;
            ResourceId = resourceId;
            DataType = CarbonEmissionDataType.ResourceItemDetailsData;
        }

        /// <summary> Initializes a new instance of <see cref="ResourceCarbonEmissionItemDetail"/>. </summary>
        /// <param name="dataType"> The data type of the query result, indicating the format of the returned response. </param>
        /// <param name="latestMonthEmissions"> Total carbon emissions for the specified query parameters, measured in kgCO2E. This value represents total emissions over the specified date range (e.g., March-June). </param>
        /// <param name="previousMonthEmissions"> Total carbon emissions for the previous month’s date range, which is the same period as the specified date range but shifted left by one month (e.g., if the specified range is March - June, the previous month’s range will be Feb - May). The value is measured in kgCO2E. </param>
        /// <param name="monthOverMonthEmissionsChangeRatio"> The percentage change in carbon emissions between the current and previous DateRange. This is calculated as: (latestMonthEmissions - previousMonthEmissions) / previousMonthEmissions. </param>
        /// <param name="monthlyEmissionsChangeValue"> The change in carbon emissions between the current and previous period, calculated as: latestMonthEmissions - previousMonthEmissions. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="itemName"> It's resource name. </param>
        /// <param name="categoryType"> Resource Item category, see supported value defined in CategoryTypeEnum. </param>
        /// <param name="subscriptionId"> Subscription Id. </param>
        /// <param name="resourceGroup"> Resource Group. </param>
        /// <param name="resourceId"> The fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="location"> Resource Location (e.g., 'east us'). </param>
        /// <param name="resourceType"> The type of resource, for example: microsoft.storage/storageaccounts. </param>
        internal ResourceCarbonEmissionItemDetail(CarbonEmissionDataType dataType, double latestMonthEmissions, double previousMonthEmissions, double? monthOverMonthEmissionsChangeRatio, double? monthlyEmissionsChangeValue, IDictionary<string, BinaryData> serializedAdditionalRawData, string itemName, CarbonEmissionCategoryType categoryType, string subscriptionId, string resourceGroup, ResourceIdentifier resourceId, AzureLocation? location, ResourceType? resourceType) : base(dataType, latestMonthEmissions, previousMonthEmissions, monthOverMonthEmissionsChangeRatio, monthlyEmissionsChangeValue, serializedAdditionalRawData)
        {
            ItemName = itemName;
            CategoryType = categoryType;
            SubscriptionId = subscriptionId;
            ResourceGroup = resourceGroup;
            ResourceId = resourceId;
            Location = location;
            ResourceType = resourceType;
            DataType = dataType;
        }

        /// <summary> Initializes a new instance of <see cref="ResourceCarbonEmissionItemDetail"/> for deserialization. </summary>
        internal ResourceCarbonEmissionItemDetail()
        {
        }

        /// <summary> It's resource name. </summary>
        public string ItemName { get; }
        /// <summary> Resource Item category, see supported value defined in CategoryTypeEnum. </summary>
        public CarbonEmissionCategoryType CategoryType { get; }
        /// <summary> Subscription Id. </summary>
        public string SubscriptionId { get; }
        /// <summary> Resource Group. </summary>
        public string ResourceGroup { get; }
        /// <summary> The fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </summary>
        public ResourceIdentifier ResourceId { get; }
        /// <summary> Resource Location (e.g., 'east us'). </summary>
        public AzureLocation? Location { get; }
        /// <summary> The type of resource, for example: microsoft.storage/storageaccounts. </summary>
        public ResourceType? ResourceType { get; }
    }
}
