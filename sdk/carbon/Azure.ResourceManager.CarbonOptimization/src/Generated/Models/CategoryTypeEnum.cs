// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    /// <summary> Supported category types to be used with QueryParameter. </summary>
    public readonly partial struct CategoryTypeEnum : IEquatable<CategoryTypeEnum>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CategoryTypeEnum"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CategoryTypeEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SubscriptionValue = "Subscription";
        private const string ResourceGroupValue = "ResourceGroup";
        private const string LocationValue = "Location";
        private const string ServiceTypeValue = "ServiceType";
        private const string ResourceValue = "Resource";
        private const string ResourceTypeValue = "ResourceType";

        /// <summary> Subscription level aggregation granularity. </summary>
        public static CategoryTypeEnum Subscription { get; } = new CategoryTypeEnum(SubscriptionValue);
        /// <summary> ResourceGroup level aggregation granularity. </summary>
        public static CategoryTypeEnum ResourceGroup { get; } = new CategoryTypeEnum(ResourceGroupValue);
        /// <summary> Location level aggregation granularity. </summary>
        public static CategoryTypeEnum Location { get; } = new CategoryTypeEnum(LocationValue);
        /// <summary> ServiceType level aggregation granularity. </summary>
        public static CategoryTypeEnum ServiceType { get; } = new CategoryTypeEnum(ServiceTypeValue);
        /// <summary> Resource level aggregation granularity. </summary>
        public static CategoryTypeEnum Resource { get; } = new CategoryTypeEnum(ResourceValue);
        /// <summary> ResourceType level aggregation granularity. </summary>
        public static CategoryTypeEnum ResourceType { get; } = new CategoryTypeEnum(ResourceTypeValue);
        /// <summary> Determines if two <see cref="CategoryTypeEnum"/> values are the same. </summary>
        public static bool operator ==(CategoryTypeEnum left, CategoryTypeEnum right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CategoryTypeEnum"/> values are not the same. </summary>
        public static bool operator !=(CategoryTypeEnum left, CategoryTypeEnum right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CategoryTypeEnum"/>. </summary>
        public static implicit operator CategoryTypeEnum(string value) => new CategoryTypeEnum(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CategoryTypeEnum other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CategoryTypeEnum other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
