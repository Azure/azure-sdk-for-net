// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.CarbonOptimization;

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    /// <summary>
    /// Shared query filter parameter to configure carbon emissions data queries for all different report type defined in ReportTypeEnum.
    /// Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="OverallSummaryReportQueryFilter"/>, <see cref="MonthlySummaryReportQueryFilter"/>, <see cref="TopItemsSummaryReportQueryFilter"/>, <see cref="TopItemsMonthlySummaryReportQueryFilter"/>, and <see cref="ItemDetailsQueryFilter"/>.
    /// </summary>
    public abstract partial class CarbonEmissionQueryFilter
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="CarbonEmissionQueryFilter"/>. </summary>
        /// <param name="reportType"> The ReportType requested for carbon emissions data. Required. Specifies how data is aggregated and displayed in the output, as explained in the ReportTypeEnum. </param>
        /// <param name="dateRange"> The start and end dates for carbon emissions data. Required. For ItemDetailsReport and TopItemsSummaryReport, only one month of data is supported at a time, so start and end dates should be equal within DateRange (e.g., start: 2024-06-01 and end: 2024-06-01). </param>
        /// <param name="subscriptionList"> List of subscription IDs for which carbon emissions data is requested. Required. Each subscription ID should be in lowercase format. The max length of list is 100. </param>
        /// <param name="carbonScopeList"> List of carbon emission scopes. Required. Accepts one or more values from EmissionScopeEnum (e.g., Scope1, Scope2, Scope3) in list form. The output will include the total emissions for the specified scopes. </param>
        private protected CarbonEmissionQueryFilter(CarbonEmissionQueryReportType reportType, CarbonEmissionQueryDateRange dateRange, IEnumerable<string> subscriptionList, IEnumerable<CarbonEmissionScope> carbonScopeList)
        {
            ReportType = reportType;
            DateRange = dateRange;
            SubscriptionList = subscriptionList.ToList();
            ResourceGroupUrlList = new ChangeTrackingList<string>();
            ResourceTypeList = new ChangeTrackingList<ResourceType>();
            LocationList = new ChangeTrackingList<AzureLocation>();
            CarbonScopeList = carbonScopeList.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="CarbonEmissionQueryFilter"/>. </summary>
        /// <param name="reportType"> The ReportType requested for carbon emissions data. Required. Specifies how data is aggregated and displayed in the output, as explained in the ReportTypeEnum. </param>
        /// <param name="dateRange"> The start and end dates for carbon emissions data. Required. For ItemDetailsReport and TopItemsSummaryReport, only one month of data is supported at a time, so start and end dates should be equal within DateRange (e.g., start: 2024-06-01 and end: 2024-06-01). </param>
        /// <param name="subscriptionList"> List of subscription IDs for which carbon emissions data is requested. Required. Each subscription ID should be in lowercase format. The max length of list is 100. </param>
        /// <param name="resourceGroupUrlList"> List of resource group URLs for carbon emissions data. Optional. Each URL must follow the format '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}', and should be in all lowercase. </param>
        /// <param name="resourceTypeList"> List of resource types for carbon emissions data. Optional. Each resource type should be specified in lowercase, following the format 'microsoft.{service}/{resourceType}', e.g., 'microsoft.storage/storageaccounts'. </param>
        /// <param name="locationList"> List of locations(Azure Region Display Name) for carbon emissions data, with each location specified in lowercase (e.g., 'east us'). Optional. You can use the command 'az account list-locations -o table' to find Azure Region Display Names. </param>
        /// <param name="carbonScopeList"> List of carbon emission scopes. Required. Accepts one or more values from EmissionScopeEnum (e.g., Scope1, Scope2, Scope3) in list form. The output will include the total emissions for the specified scopes. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal CarbonEmissionQueryFilter(CarbonEmissionQueryReportType reportType, CarbonEmissionQueryDateRange dateRange, IList<string> subscriptionList, IList<string> resourceGroupUrlList, IList<ResourceType> resourceTypeList, IList<AzureLocation> locationList, IList<CarbonEmissionScope> carbonScopeList, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ReportType = reportType;
            DateRange = dateRange;
            SubscriptionList = subscriptionList;
            ResourceGroupUrlList = resourceGroupUrlList;
            ResourceTypeList = resourceTypeList;
            LocationList = locationList;
            CarbonScopeList = carbonScopeList;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The ReportType requested for carbon emissions data. Required. Specifies how data is aggregated and displayed in the output, as explained in the ReportTypeEnum. </summary>
        internal CarbonEmissionQueryReportType ReportType { get; set; }

        /// <summary> The start and end dates for carbon emissions data. Required. For ItemDetailsReport and TopItemsSummaryReport, only one month of data is supported at a time, so start and end dates should be equal within DateRange (e.g., start: 2024-06-01 and end: 2024-06-01). </summary>
        public CarbonEmissionQueryDateRange DateRange { get; }

        /// <summary> List of subscription IDs for which carbon emissions data is requested. Required. Each subscription ID should be in lowercase format. The max length of list is 100. </summary>
        public IList<string> SubscriptionList { get; }

        /// <summary> List of resource group URLs for carbon emissions data. Optional. Each URL must follow the format '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}', and should be in all lowercase. </summary>
        public IList<string> ResourceGroupUrlList { get; }

        /// <summary> List of resource types for carbon emissions data. Optional. Each resource type should be specified in lowercase, following the format 'microsoft.{service}/{resourceType}', e.g., 'microsoft.storage/storageaccounts'. </summary>
        public IList<ResourceType> ResourceTypeList { get; }

        /// <summary> List of locations(Azure Region Display Name) for carbon emissions data, with each location specified in lowercase (e.g., 'east us'). Optional. You can use the command 'az account list-locations -o table' to find Azure Region Display Names. </summary>
        public IList<AzureLocation> LocationList { get; }

        /// <summary> List of carbon emission scopes. Required. Accepts one or more values from EmissionScopeEnum (e.g., Scope1, Scope2, Scope3) in list form. The output will include the total emissions for the specified scopes. </summary>
        public IList<CarbonEmissionScope> CarbonScopeList { get; }
    }
}
