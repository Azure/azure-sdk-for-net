// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.ResourceManager.CarbonOptimization;

namespace Azure.ResourceManager.CarbonOptimization.Models
{
    /// <summary> List of carbon emission results. </summary>
    public partial class CarbonEmissionListResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="CarbonEmissionListResult"/>. </summary>
        /// <param name="value"> The CarbonEmissionData items on this page. </param>
        internal CarbonEmissionListResult(IEnumerable<CarbonEmission> value)
        {
            Value = value.ToList();
            SubscriptionAccessDecisionList = new ChangeTrackingList<SubscriptionAccessDecision>();
        }

        /// <summary> Initializes a new instance of <see cref="CarbonEmissionListResult"/>. </summary>
        /// <param name="value"> The CarbonEmissionData items on this page. </param>
        /// <param name="skipToken"> The pagination token to fetch next page data, it's null or empty if it doesn't have next page data. </param>
        /// <param name="subscriptionAccessDecisionList"> The access decision list for each input subscription . </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal CarbonEmissionListResult(IList<CarbonEmission> value, string skipToken, IList<SubscriptionAccessDecision> subscriptionAccessDecisionList, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Value = value;
            SkipToken = skipToken;
            SubscriptionAccessDecisionList = subscriptionAccessDecisionList;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The CarbonEmissionData items on this page. </summary>
        public IList<CarbonEmission> Value { get; }

        /// <summary> The pagination token to fetch next page data, it's null or empty if it doesn't have next page data. </summary>
        public string SkipToken { get; }

        /// <summary> The access decision list for each input subscription . </summary>
        public IList<SubscriptionAccessDecision> SubscriptionAccessDecisionList { get; }
    }
}
