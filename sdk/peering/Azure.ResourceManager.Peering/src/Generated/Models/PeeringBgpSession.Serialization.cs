// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Peering.Models
{
    public partial class PeeringBgpSession : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SessionPrefixV4))
            {
                writer.WritePropertyName("sessionPrefixV4"u8);
                writer.WriteStringValue(SessionPrefixV4);
            }
            if (Optional.IsDefined(SessionPrefixV6))
            {
                writer.WritePropertyName("sessionPrefixV6"u8);
                writer.WriteStringValue(SessionPrefixV6);
            }
            if (Optional.IsDefined(MicrosoftSessionIPv4Address))
            {
                writer.WritePropertyName("microsoftSessionIPv4Address"u8);
                writer.WriteStringValue(MicrosoftSessionIPv4Address.ToString());
            }
            if (Optional.IsDefined(MicrosoftSessionIPv6Address))
            {
                writer.WritePropertyName("microsoftSessionIPv6Address"u8);
                writer.WriteStringValue(MicrosoftSessionIPv6Address.ToString());
            }
            if (Optional.IsDefined(PeerSessionIPv4Address))
            {
                writer.WritePropertyName("peerSessionIPv4Address"u8);
                writer.WriteStringValue(PeerSessionIPv4Address.ToString());
            }
            if (Optional.IsDefined(PeerSessionIPv6Address))
            {
                writer.WritePropertyName("peerSessionIPv6Address"u8);
                writer.WriteStringValue(PeerSessionIPv6Address.ToString());
            }
            if (Optional.IsDefined(MaxPrefixesAdvertisedV4))
            {
                writer.WritePropertyName("maxPrefixesAdvertisedV4"u8);
                writer.WriteNumberValue(MaxPrefixesAdvertisedV4.Value);
            }
            if (Optional.IsDefined(MaxPrefixesAdvertisedV6))
            {
                writer.WritePropertyName("maxPrefixesAdvertisedV6"u8);
                writer.WriteNumberValue(MaxPrefixesAdvertisedV6.Value);
            }
            if (Optional.IsDefined(Md5AuthenticationKey))
            {
                writer.WritePropertyName("md5AuthenticationKey"u8);
                writer.WriteStringValue(Md5AuthenticationKey);
            }
            writer.WriteEndObject();
        }

        internal static PeeringBgpSession DeserializePeeringBgpSession(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> sessionPrefixV4 = default;
            Optional<string> sessionPrefixV6 = default;
            Optional<IPAddress> microsoftSessionIPv4Address = default;
            Optional<IPAddress> microsoftSessionIPv6Address = default;
            Optional<IPAddress> peerSessionIPv4Address = default;
            Optional<IPAddress> peerSessionIPv6Address = default;
            Optional<PeeringSessionStateV4> sessionStateV4 = default;
            Optional<PeeringSessionStateV6> sessionStateV6 = default;
            Optional<int> maxPrefixesAdvertisedV4 = default;
            Optional<int> maxPrefixesAdvertisedV6 = default;
            Optional<string> md5AuthenticationKey = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sessionPrefixV4"u8))
                {
                    sessionPrefixV4 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sessionPrefixV6"u8))
                {
                    sessionPrefixV6 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("microsoftSessionIPv4Address"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null || property.Value.ValueKind == JsonValueKind.String && property.Value.GetString().Length == 0)
                    {
                        continue;
                    }
                    microsoftSessionIPv4Address = IPAddress.Parse(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("microsoftSessionIPv6Address"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null || property.Value.ValueKind == JsonValueKind.String && property.Value.GetString().Length == 0)
                    {
                        continue;
                    }
                    microsoftSessionIPv6Address = IPAddress.Parse(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("peerSessionIPv4Address"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null || property.Value.ValueKind == JsonValueKind.String && property.Value.GetString().Length == 0)
                    {
                        continue;
                    }
                    peerSessionIPv4Address = IPAddress.Parse(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("peerSessionIPv6Address"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null || property.Value.ValueKind == JsonValueKind.String && property.Value.GetString().Length == 0)
                    {
                        continue;
                    }
                    peerSessionIPv6Address = IPAddress.Parse(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sessionStateV4"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sessionStateV4 = new PeeringSessionStateV4(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sessionStateV6"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sessionStateV6 = new PeeringSessionStateV6(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("maxPrefixesAdvertisedV4"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxPrefixesAdvertisedV4 = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maxPrefixesAdvertisedV6"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxPrefixesAdvertisedV6 = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("md5AuthenticationKey"u8))
                {
                    md5AuthenticationKey = property.Value.GetString();
                    continue;
                }
            }
            return new PeeringBgpSession(sessionPrefixV4.Value, sessionPrefixV6.Value, microsoftSessionIPv4Address.Value, microsoftSessionIPv6Address.Value, peerSessionIPv4Address.Value, peerSessionIPv6Address.Value, Optional.ToNullable(sessionStateV4), Optional.ToNullable(sessionStateV6), Optional.ToNullable(maxPrefixesAdvertisedV4), Optional.ToNullable(maxPrefixesAdvertisedV6), md5AuthenticationKey.Value);
        }
    }
}
