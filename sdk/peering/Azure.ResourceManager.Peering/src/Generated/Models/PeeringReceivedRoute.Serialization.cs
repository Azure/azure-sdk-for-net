// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Peering.Models
{
    public partial class PeeringReceivedRoute
    {
        internal static PeeringReceivedRoute DeserializePeeringReceivedRoute(JsonElement element)
        {
            Optional<string> prefix = default;
            Optional<string> nextHop = default;
            Optional<string> asPath = default;
            Optional<string> originAsValidationState = default;
            Optional<string> rpkiValidationState = default;
            Optional<string> trustAnchor = default;
            Optional<string> receivedTimestamp = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("prefix"))
                {
                    prefix = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nextHop"))
                {
                    nextHop = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("asPath"))
                {
                    asPath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("originAsValidationState"))
                {
                    originAsValidationState = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rpkiValidationState"))
                {
                    rpkiValidationState = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("trustAnchor"))
                {
                    trustAnchor = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("receivedTimestamp"))
                {
                    receivedTimestamp = property.Value.GetString();
                    continue;
                }
            }
            return new PeeringReceivedRoute(prefix.Value, nextHop.Value, asPath.Value, originAsValidationState.Value, rpkiValidationState.Value, trustAnchor.Value, receivedTimestamp.Value);
        }
    }
}
