// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Peering.Models
{
    /// <summary>
    /// The properties that define a direct connection.
    /// Serialized Name: DirectConnection
    /// </summary>
    public partial class PeeringDirectConnection
    {
        /// <summary> Initializes a new instance of PeeringDirectConnection. </summary>
        public PeeringDirectConnection()
        {
        }

        /// <summary> Initializes a new instance of PeeringDirectConnection. </summary>
        /// <param name="bandwidthInMbps">
        /// The bandwidth of the connection.
        /// Serialized Name: DirectConnection.bandwidthInMbps
        /// </param>
        /// <param name="provisionedBandwidthInMbps">
        /// The bandwidth that is actually provisioned.
        /// Serialized Name: DirectConnection.provisionedBandwidthInMbps
        /// </param>
        /// <param name="sessionAddressProvider">
        /// The field indicating if Microsoft provides session ip addresses.
        /// Serialized Name: DirectConnection.sessionAddressProvider
        /// </param>
        /// <param name="useForPeeringService">
        /// The flag that indicates whether or not the connection is used for peering service.
        /// Serialized Name: DirectConnection.useForPeeringService
        /// </param>
        /// <param name="microsoftTrackingId">
        /// The ID used within Microsoft&apos;s peering provisioning system to track the connection
        /// Serialized Name: DirectConnection.microsoftTrackingId
        /// </param>
        /// <param name="peeringDBFacilityId">
        /// The PeeringDB.com ID of the facility at which the connection has to be set up.
        /// Serialized Name: DirectConnection.peeringDBFacilityId
        /// </param>
        /// <param name="connectionState">
        /// The state of the connection.
        /// Serialized Name: DirectConnection.connectionState
        /// </param>
        /// <param name="bgpSession">
        /// The BGP session associated with the connection.
        /// Serialized Name: DirectConnection.bgpSession
        /// </param>
        /// <param name="connectionIdentifier">
        /// The unique identifier (GUID) for the connection.
        /// Serialized Name: DirectConnection.connectionIdentifier
        /// </param>
        /// <param name="errorMessage">
        /// The error message related to the connection state, if any.
        /// Serialized Name: DirectConnection.errorMessage
        /// </param>
        internal PeeringDirectConnection(int? bandwidthInMbps, int? provisionedBandwidthInMbps, PeeringSessionAddressProvider? sessionAddressProvider, bool? useForPeeringService, string microsoftTrackingId, int? peeringDBFacilityId, PeeringConnectionState? connectionState, PeeringBgpSession bgpSession, string connectionIdentifier, string errorMessage)
        {
            BandwidthInMbps = bandwidthInMbps;
            ProvisionedBandwidthInMbps = provisionedBandwidthInMbps;
            SessionAddressProvider = sessionAddressProvider;
            UseForPeeringService = useForPeeringService;
            MicrosoftTrackingId = microsoftTrackingId;
            PeeringDBFacilityId = peeringDBFacilityId;
            ConnectionState = connectionState;
            BgpSession = bgpSession;
            ConnectionIdentifier = connectionIdentifier;
            ErrorMessage = errorMessage;
        }

        /// <summary>
        /// The bandwidth of the connection.
        /// Serialized Name: DirectConnection.bandwidthInMbps
        /// </summary>
        public int? BandwidthInMbps { get; set; }
        /// <summary>
        /// The bandwidth that is actually provisioned.
        /// Serialized Name: DirectConnection.provisionedBandwidthInMbps
        /// </summary>
        public int? ProvisionedBandwidthInMbps { get; }
        /// <summary>
        /// The field indicating if Microsoft provides session ip addresses.
        /// Serialized Name: DirectConnection.sessionAddressProvider
        /// </summary>
        public PeeringSessionAddressProvider? SessionAddressProvider { get; set; }
        /// <summary>
        /// The flag that indicates whether or not the connection is used for peering service.
        /// Serialized Name: DirectConnection.useForPeeringService
        /// </summary>
        public bool? UseForPeeringService { get; set; }
        /// <summary>
        /// The ID used within Microsoft&apos;s peering provisioning system to track the connection
        /// Serialized Name: DirectConnection.microsoftTrackingId
        /// </summary>
        public string MicrosoftTrackingId { get; }
        /// <summary>
        /// The PeeringDB.com ID of the facility at which the connection has to be set up.
        /// Serialized Name: DirectConnection.peeringDBFacilityId
        /// </summary>
        public int? PeeringDBFacilityId { get; set; }
        /// <summary>
        /// The state of the connection.
        /// Serialized Name: DirectConnection.connectionState
        /// </summary>
        public PeeringConnectionState? ConnectionState { get; }
        /// <summary>
        /// The BGP session associated with the connection.
        /// Serialized Name: DirectConnection.bgpSession
        /// </summary>
        public PeeringBgpSession BgpSession { get; set; }
        /// <summary>
        /// The unique identifier (GUID) for the connection.
        /// Serialized Name: DirectConnection.connectionIdentifier
        /// </summary>
        public string ConnectionIdentifier { get; set; }
        /// <summary>
        /// The error message related to the connection state, if any.
        /// Serialized Name: DirectConnection.errorMessage
        /// </summary>
        public string ErrorMessage { get; }
    }
}
