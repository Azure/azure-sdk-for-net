// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.Peering.Models
{
    /// <summary> The PeeringExtensionsInvokeLookingGlassOptions. </summary>
    public partial class PeeringExtensionsInvokeLookingGlassOptions
    {
        /// <summary> Initializes a new instance of PeeringExtensionsInvokeLookingGlassOptions. </summary>
        /// <param name="command"> The command to be executed: ping, traceroute, bgpRoute. </param>
        /// <param name="sourceType"> The type of the source: Edge site or Azure Region. </param>
        /// <param name="sourceLocation"> The location of the source. </param>
        /// <param name="destinationIP"> The IP address of the destination. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceLocation"/> or <paramref name="destinationIP"/> is null. </exception>
        public PeeringExtensionsInvokeLookingGlassOptions(LookingGlassCommand command, LookingGlassSourceType sourceType, string sourceLocation, string destinationIP)
        {
            Argument.AssertNotNull(sourceLocation, nameof(sourceLocation));
            Argument.AssertNotNull(destinationIP, nameof(destinationIP));

            Command = command;
            SourceType = sourceType;
            SourceLocation = sourceLocation;
            DestinationIP = destinationIP;
        }

        /// <summary> The command to be executed: ping, traceroute, bgpRoute. </summary>
        public LookingGlassCommand Command { get; }
        /// <summary> The type of the source: Edge site or Azure Region. </summary>
        public LookingGlassSourceType SourceType { get; }
        /// <summary> The location of the source. </summary>
        public string SourceLocation { get; }
        /// <summary> The IP address of the destination. </summary>
        public string DestinationIP { get; }
    }
}
