// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Peering.Models
{
    /// <summary> The SKU that defines the tier and kind of the peering. </summary>
    public partial class PeeringSku
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="PeeringSku"/>. </summary>
        public PeeringSku()
        {
        }

        /// <summary> Initializes a new instance of <see cref="PeeringSku"/>. </summary>
        /// <param name="name"> The name of the peering SKU. </param>
        /// <param name="tier"> The tier of the peering SKU. </param>
        /// <param name="family"> The family of the peering SKU. </param>
        /// <param name="size"> The size of the peering SKU. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal PeeringSku(string name, PeeringTier? tier, PeeringFamily? family, PeeringSize? size, Dictionary<string, BinaryData> rawData)
        {
            Name = name;
            Tier = tier;
            Family = family;
            Size = size;
            _rawData = rawData;
        }

        /// <summary> The name of the peering SKU. </summary>
        public string Name { get; set; }
        /// <summary> The tier of the peering SKU. </summary>
        public PeeringTier? Tier { get; }
        /// <summary> The family of the peering SKU. </summary>
        public PeeringFamily? Family { get; }
        /// <summary> The size of the peering SKU. </summary>
        public PeeringSize? Size { get; }
    }
}
