// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Peering.Models;

namespace Azure.ResourceManager.Peering
{
    /// <summary> A class representing the PeeringRegisteredPrefix data model. </summary>
    public partial class PeeringRegisteredPrefixData : ResourceData
    {
        /// <summary> Initializes a new instance of PeeringRegisteredPrefixData. </summary>
        public PeeringRegisteredPrefixData()
        {
        }

        /// <summary> Initializes a new instance of PeeringRegisteredPrefixData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="prefix">
        /// The customer&apos;s prefix from which traffic originates.
        /// Serialized Name: PeeringRegisteredPrefix.properties.prefix
        /// </param>
        /// <param name="prefixValidationState">
        /// The prefix validation state.
        /// Serialized Name: PeeringRegisteredPrefix.properties.prefixValidationState
        /// </param>
        /// <param name="peeringServicePrefixKey">
        /// The peering service prefix key that is to be shared with the customer.
        /// Serialized Name: PeeringRegisteredPrefix.properties.peeringServicePrefixKey
        /// </param>
        /// <param name="errorMessage">
        /// The error message associated with the validation state, if any.
        /// Serialized Name: PeeringRegisteredPrefix.properties.errorMessage
        /// </param>
        /// <param name="provisioningState">
        /// The provisioning state of the resource.
        /// Serialized Name: PeeringRegisteredPrefix.properties.provisioningState
        /// </param>
        internal PeeringRegisteredPrefixData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string prefix, PeeringPrefixValidationState? prefixValidationState, string peeringServicePrefixKey, string errorMessage, PeeringProvisioningState? provisioningState) : base(id, name, resourceType, systemData)
        {
            Prefix = prefix;
            PrefixValidationState = prefixValidationState;
            PeeringServicePrefixKey = peeringServicePrefixKey;
            ErrorMessage = errorMessage;
            ProvisioningState = provisioningState;
        }

        /// <summary>
        /// The customer&apos;s prefix from which traffic originates.
        /// Serialized Name: PeeringRegisteredPrefix.properties.prefix
        /// </summary>
        public string Prefix { get; set; }
        /// <summary>
        /// The prefix validation state.
        /// Serialized Name: PeeringRegisteredPrefix.properties.prefixValidationState
        /// </summary>
        public PeeringPrefixValidationState? PrefixValidationState { get; }
        /// <summary>
        /// The peering service prefix key that is to be shared with the customer.
        /// Serialized Name: PeeringRegisteredPrefix.properties.peeringServicePrefixKey
        /// </summary>
        public string PeeringServicePrefixKey { get; }
        /// <summary>
        /// The error message associated with the validation state, if any.
        /// Serialized Name: PeeringRegisteredPrefix.properties.errorMessage
        /// </summary>
        public string ErrorMessage { get; }
        /// <summary>
        /// The provisioning state of the resource.
        /// Serialized Name: PeeringRegisteredPrefix.properties.provisioningState
        /// </summary>
        public PeeringProvisioningState? ProvisioningState { get; }
    }
}
