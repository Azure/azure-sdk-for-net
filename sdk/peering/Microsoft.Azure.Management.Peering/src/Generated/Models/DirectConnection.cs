// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Peering.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties that define a direct connection.
    /// </summary>
    public partial class DirectConnection
    {
        /// <summary>
        /// Initializes a new instance of the DirectConnection class.
        /// </summary>
        public DirectConnection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DirectConnection class.
        /// </summary>
        /// <param name="bandwidthInMbps">The bandwidth of the
        /// connection.</param>
        /// <param name="provisionedBandwidthInMbps">The bandwidth that is
        /// actually provisioned.</param>
        /// <param name="peeringDBFacilityId">The PeeringDB.com ID of the
        /// facility at which the connection has to be set up.</param>
        /// <param name="connectionState">The state of the connection. Possible
        /// values include: 'None', 'PendingApproval', 'Approved',
        /// 'ProvisioningStarted', 'ProvisioningFailed',
        /// 'ProvisioningCompleted', 'Validating', 'Active'</param>
        /// <param name="bgpSession">The BGP session associated with the
        /// connection.</param>
        public DirectConnection(int? bandwidthInMbps = default(int?), int? provisionedBandwidthInMbps = default(int?), int? peeringDBFacilityId = default(int?), string connectionState = default(string), BgpSession bgpSession = default(BgpSession))
        {
            BandwidthInMbps = bandwidthInMbps;
            ProvisionedBandwidthInMbps = provisionedBandwidthInMbps;
            PeeringDBFacilityId = peeringDBFacilityId;
            ConnectionState = connectionState;
            BgpSession = bgpSession;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the bandwidth of the connection.
        /// </summary>
        [JsonProperty(PropertyName = "bandwidthInMbps")]
        public int? BandwidthInMbps { get; set; }

        /// <summary>
        /// Gets or sets the bandwidth that is actually provisioned.
        /// </summary>
        [JsonProperty(PropertyName = "provisionedBandwidthInMbps")]
        public int? ProvisionedBandwidthInMbps { get; set; }

        /// <summary>
        /// Gets or sets the PeeringDB.com ID of the facility at which the
        /// connection has to be set up.
        /// </summary>
        [JsonProperty(PropertyName = "peeringDBFacilityId")]
        public int? PeeringDBFacilityId { get; set; }

        /// <summary>
        /// Gets the state of the connection. Possible values include: 'None',
        /// 'PendingApproval', 'Approved', 'ProvisioningStarted',
        /// 'ProvisioningFailed', 'ProvisioningCompleted', 'Validating',
        /// 'Active'
        /// </summary>
        [JsonProperty(PropertyName = "connectionState")]
        public string ConnectionState { get; private set; }

        /// <summary>
        /// Gets or sets the BGP session associated with the connection.
        /// </summary>
        [JsonProperty(PropertyName = "bgpSession")]
        public BgpSession BgpSession { get; set; }

    }
}
