// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Peering
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// LookingGlassOperations operations.
    /// </summary>
    public partial interface ILookingGlassOperations
    {
        /// <summary>
        /// Run looking glass functionality
        /// </summary>
        /// <param name='command'>
        /// The command to be executed: ping, traceroute, bgpRoute. Possible
        /// values include: 'Traceroute', 'Ping', 'BgpRoute'
        /// </param>
        /// <param name='sourceType'>
        /// The type of the source: Edge site or Azure Region. Possible values
        /// include: 'EdgeSite', 'AzureRegion'
        /// </param>
        /// <param name='sourceLocation'>
        /// The location of the source.
        /// </param>
        /// <param name='destinationIP'>
        /// The IP address of the destination.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<LookingGlassOutput>> InvokeWithHttpMessagesAsync(string command, string sourceType, string sourceLocation, string destinationIP, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
