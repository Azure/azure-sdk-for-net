// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Marketplace
{
    /// <summary> A class representing the Collection data model. </summary>
    public partial class CollectionData : ResourceData
    {
        /// <summary> Initializes a new instance of CollectionData. </summary>
        public CollectionData()
        {
            SubscriptionsList = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of CollectionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="collectionId"> Gets collection Id. </param>
        /// <param name="collectionName"> Gets or sets collection name. </param>
        /// <param name="claim"> Gets or sets the association with Commercial&apos;s Billing Account. </param>
        /// <param name="allSubscriptions"> Indicating whether all subscriptions are selected (=true) or not (=false). </param>
        /// <param name="approveAllItems"> Indicating whether all items are approved for this collection (=true) or not (=false). </param>
        /// <param name="approveAllItemsModifiedOn"> Gets the modified date of all items approved. </param>
        /// <param name="subscriptionsList"> Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request. </param>
        /// <param name="enabled"> Indicating whether the collection is enabled or disabled. </param>
        /// <param name="numberOfOffers"> Gets the number of offers associated with the collection. </param>
        internal CollectionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string collectionId, string collectionName, string claim, bool? allSubscriptions, bool? approveAllItems, DateTimeOffset? approveAllItemsModifiedOn, IList<string> subscriptionsList, bool? enabled, long? numberOfOffers) : base(id, name, resourceType, systemData)
        {
            CollectionId = collectionId;
            CollectionName = collectionName;
            Claim = claim;
            AllSubscriptions = allSubscriptions;
            ApproveAllItems = approveAllItems;
            ApproveAllItemsModifiedOn = approveAllItemsModifiedOn;
            SubscriptionsList = subscriptionsList;
            Enabled = enabled;
            NumberOfOffers = numberOfOffers;
        }

        /// <summary> Gets collection Id. </summary>
        public string CollectionId { get; }
        /// <summary> Gets or sets collection name. </summary>
        public string CollectionName { get; set; }
        /// <summary> Gets or sets the association with Commercial&apos;s Billing Account. </summary>
        public string Claim { get; set; }
        /// <summary> Indicating whether all subscriptions are selected (=true) or not (=false). </summary>
        public bool? AllSubscriptions { get; set; }
        /// <summary> Indicating whether all items are approved for this collection (=true) or not (=false). </summary>
        public bool? ApproveAllItems { get; }
        /// <summary> Gets the modified date of all items approved. </summary>
        public DateTimeOffset? ApproveAllItemsModifiedOn { get; }
        /// <summary> Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request. </summary>
        public IList<string> SubscriptionsList { get; }
        /// <summary> Indicating whether the collection is enabled or disabled. </summary>
        public bool? Enabled { get; set; }
        /// <summary> Gets the number of offers associated with the collection. </summary>
        public long? NumberOfOffers { get; }
    }
}
