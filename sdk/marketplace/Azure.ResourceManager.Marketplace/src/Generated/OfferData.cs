// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Marketplace.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Marketplace
{
    /// <summary> A class representing the Offer data model. </summary>
    public partial class OfferData : ResourceData
    {
        /// <summary> Initializes a new instance of OfferData. </summary>
        public OfferData()
        {
            SpecificPlanIdsLimitation = new ChangeTrackingList<string>();
            IconFileUris = new ChangeTrackingDictionary<string, string>();
            Plans = new ChangeTrackingList<MarketplacePlan>();
        }

        /// <summary> Initializes a new instance of OfferData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="uniqueOfferId"> Offers unique id. </param>
        /// <param name="offerDisplayName"> It will be displayed prominently in the marketplace. </param>
        /// <param name="publisherDisplayName"> Publisher name that will be displayed prominently in the marketplace. </param>
        /// <param name="eTag"> Identifier for purposes of race condition. </param>
        /// <param name="privateStoreId"> Private store unique id. </param>
        /// <param name="createdAt"> Private store offer creation date. </param>
        /// <param name="modifiedAt"> Private store offer modification date. </param>
        /// <param name="specificPlanIdsLimitation"> Plan ids limitation for this offer. </param>
        /// <param name="updateSuppressedDueIdempotence"> Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated. </param>
        /// <param name="iconFileUris"> Icon File Uris. </param>
        /// <param name="plans"> Offer plans. </param>
        internal OfferData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string uniqueOfferId, string offerDisplayName, string publisherDisplayName, ETag? eTag, string privateStoreId, string createdAt, string modifiedAt, IList<string> specificPlanIdsLimitation, bool? updateSuppressedDueIdempotence, IDictionary<string, string> iconFileUris, IList<MarketplacePlan> plans) : base(id, name, resourceType, systemData)
        {
            UniqueOfferId = uniqueOfferId;
            OfferDisplayName = offerDisplayName;
            PublisherDisplayName = publisherDisplayName;
            ETag = eTag;
            PrivateStoreId = privateStoreId;
            CreatedAt = createdAt;
            ModifiedAt = modifiedAt;
            SpecificPlanIdsLimitation = specificPlanIdsLimitation;
            UpdateSuppressedDueIdempotence = updateSuppressedDueIdempotence;
            IconFileUris = iconFileUris;
            Plans = plans;
        }

        /// <summary> Offers unique id. </summary>
        public string UniqueOfferId { get; }
        /// <summary> It will be displayed prominently in the marketplace. </summary>
        public string OfferDisplayName { get; }
        /// <summary> Publisher name that will be displayed prominently in the marketplace. </summary>
        public string PublisherDisplayName { get; }
        /// <summary> Identifier for purposes of race condition. </summary>
        public ETag? ETag { get; set; }
        /// <summary> Private store unique id. </summary>
        public string PrivateStoreId { get; }
        /// <summary> Private store offer creation date. </summary>
        public string CreatedAt { get; }
        /// <summary> Private store offer modification date. </summary>
        public string ModifiedAt { get; }
        /// <summary> Plan ids limitation for this offer. </summary>
        public IList<string> SpecificPlanIdsLimitation { get; }
        /// <summary> Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated. </summary>
        public bool? UpdateSuppressedDueIdempotence { get; set; }
        /// <summary> Icon File Uris. </summary>
        public IDictionary<string, string> IconFileUris { get; }
        /// <summary> Offer plans. </summary>
        public IList<MarketplacePlan> Plans { get; }
    }
}
