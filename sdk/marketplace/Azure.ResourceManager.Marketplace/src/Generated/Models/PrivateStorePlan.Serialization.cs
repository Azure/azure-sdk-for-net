// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Marketplace.Models
{
    public partial class PrivateStorePlan : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Accessibility))
            {
                writer.WritePropertyName("accessibility"u8);
                writer.WriteStringValue(Accessibility.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static PrivateStorePlan DeserializePrivateStorePlan(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> skuId = default;
            Optional<string> planId = default;
            Optional<string> planDisplayName = default;
            Optional<PrivateStorePlanAccessibility> accessibility = default;
            Optional<string> altStackReference = default;
            Optional<string> stackType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("skuId"u8))
                {
                    skuId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("planId"u8))
                {
                    planId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("planDisplayName"u8))
                {
                    planDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accessibility"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    accessibility = new PrivateStorePlanAccessibility(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("altStackReference"u8))
                {
                    altStackReference = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("stackType"u8))
                {
                    stackType = property.Value.GetString();
                    continue;
                }
            }
            return new PrivateStorePlan(skuId.Value, planId.Value, planDisplayName.Value, Optional.ToNullable(accessibility), altStackReference.Value, stackType.Value);
        }
    }
}
