// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Marketplace.Models
{
    /// <summary>
    /// Plan accessibility
    /// Serialized Name: Accessibility
    /// </summary>
    public readonly partial struct PrivateStoreOfferPlanAccessibility : IEquatable<PrivateStoreOfferPlanAccessibility>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PrivateStoreOfferPlanAccessibility"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PrivateStoreOfferPlanAccessibility(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string PublicValue = "Public";
        private const string PrivateTenantOnLevelValue = "PrivateTenantOnLevel";
        private const string PrivateSubscriptionOnLevelValue = "PrivateSubscriptionOnLevel";

        /// <summary>
        /// Unknown
        /// Serialized Name: Accessibility.Unknown
        /// </summary>
        public static PrivateStoreOfferPlanAccessibility Unknown { get; } = new PrivateStoreOfferPlanAccessibility(UnknownValue);
        /// <summary>
        /// Public
        /// Serialized Name: Accessibility.Public
        /// </summary>
        public static PrivateStoreOfferPlanAccessibility Public { get; } = new PrivateStoreOfferPlanAccessibility(PublicValue);
        /// <summary>
        /// PrivateTenantOnLevel
        /// Serialized Name: Accessibility.PrivateTenantOnLevel
        /// </summary>
        public static PrivateStoreOfferPlanAccessibility PrivateTenantOnLevel { get; } = new PrivateStoreOfferPlanAccessibility(PrivateTenantOnLevelValue);
        /// <summary>
        /// PrivateSubscriptionOnLevel
        /// Serialized Name: Accessibility.PrivateSubscriptionOnLevel
        /// </summary>
        public static PrivateStoreOfferPlanAccessibility PrivateSubscriptionOnLevel { get; } = new PrivateStoreOfferPlanAccessibility(PrivateSubscriptionOnLevelValue);
        /// <summary> Determines if two <see cref="PrivateStoreOfferPlanAccessibility"/> values are the same. </summary>
        public static bool operator ==(PrivateStoreOfferPlanAccessibility left, PrivateStoreOfferPlanAccessibility right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PrivateStoreOfferPlanAccessibility"/> values are not the same. </summary>
        public static bool operator !=(PrivateStoreOfferPlanAccessibility left, PrivateStoreOfferPlanAccessibility right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="PrivateStoreOfferPlanAccessibility"/>. </summary>
        public static implicit operator PrivateStoreOfferPlanAccessibility(string value) => new PrivateStoreOfferPlanAccessibility(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PrivateStoreOfferPlanAccessibility other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PrivateStoreOfferPlanAccessibility other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
