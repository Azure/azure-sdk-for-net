// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Marketplace
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// PrivateStoreCollectionOfferOperations operations.
    /// </summary>
    public partial interface IPrivateStoreCollectionOfferOperations
    {
        /// <summary>
        /// Get a list of all private offers in the given private store and
        /// collection
        /// </summary>
        /// <param name='privateStoreId'>
        /// The store ID - must use the tenant ID
        /// </param>
        /// <param name='collectionId'>
        /// The collection ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<Offer>>> ListWithHttpMessagesAsync(string privateStoreId, string collectionId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets information about a specific offer.
        /// </summary>
        /// <param name='privateStoreId'>
        /// The store ID - must use the tenant ID
        /// </param>
        /// <param name='offerId'>
        /// The offer ID to update or delete
        /// </param>
        /// <param name='collectionId'>
        /// The collection ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<Offer>> GetWithHttpMessagesAsync(string privateStoreId, string offerId, string collectionId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update or add an offer to a specific collection of the private
        /// store.
        /// </summary>
        /// <param name='privateStoreId'>
        /// The store ID - must use the tenant ID
        /// </param>
        /// <param name='offerId'>
        /// The offer ID to update or delete
        /// </param>
        /// <param name='collectionId'>
        /// The collection ID
        /// </param>
        /// <param name='payload'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<Offer>> CreateOrUpdateWithHttpMessagesAsync(string privateStoreId, string offerId, string collectionId, Offer payload = default(Offer), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes an offer from the given collection of private store.
        /// </summary>
        /// <param name='privateStoreId'>
        /// The store ID - must use the tenant ID
        /// </param>
        /// <param name='offerId'>
        /// The offer ID to update or delete
        /// </param>
        /// <param name='collectionId'>
        /// The collection ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string privateStoreId, string offerId, string collectionId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete Private store offer. This is a workaround.
        /// </summary>
        /// <param name='privateStoreId'>
        /// The store ID - must use the tenant ID
        /// </param>
        /// <param name='offerId'>
        /// The offer ID to update or delete
        /// </param>
        /// <param name='collectionId'>
        /// The collection ID
        /// </param>
        /// <param name='payload'>
        /// Possible values include: 'DeletePrivateStoreOffer',
        /// 'DeletePrivateStoreCollection',
        /// 'DeletePrivateStoreCollectionOffer', 'Ping'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> PostWithHttpMessagesAsync(string privateStoreId, string offerId, string collectionId, string payload = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get a list of all private offers in the given private store and
        /// collection
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<Offer>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
