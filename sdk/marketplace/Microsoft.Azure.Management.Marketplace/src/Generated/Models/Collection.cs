// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Marketplace.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Collection data structure.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Collection : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Collection class.
        /// </summary>
        public Collection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Collection class.
        /// </summary>
        /// <param name="id">The resource ID.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="systemData">Metadata pertaining to creation and last
        /// modification of the resource</param>
        /// <param name="collectionId">Gets collection Id.</param>
        /// <param name="collectionName">Gets or sets collection name.</param>
        /// <param name="claim">Gets or sets the association with Commercial's
        /// Billing Account.</param>
        /// <param name="allSubscriptions">Indicating whether all subscriptions
        /// are selected (=true) or not (=false).</param>
        /// <param name="subscriptionsList">Gets or sets subscription ids list.
        /// Empty list indicates all subscriptions are selected, null indicates
        /// no update is done, explicit list indicates the explicit selected
        /// subscriptions. On insert, null is considered as bad request</param>
        /// <param name="enabled">Indicating whether the collection is enabled
        /// or disabled.</param>
        /// <param name="numberOfOffers">Gets the number of offers associated
        /// with the collection.</param>
        public Collection(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string collectionId = default(string), string collectionName = default(string), string claim = default(string), bool? allSubscriptions = default(bool?), IList<string> subscriptionsList = default(IList<string>), bool? enabled = default(bool?), long? numberOfOffers = default(long?))
            : base(id, name, type, systemData)
        {
            CollectionId = collectionId;
            CollectionName = collectionName;
            Claim = claim;
            AllSubscriptions = allSubscriptions;
            SubscriptionsList = subscriptionsList;
            Enabled = enabled;
            NumberOfOffers = numberOfOffers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets collection Id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.collectionId")]
        public string CollectionId { get; private set; }

        /// <summary>
        /// Gets or sets collection name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.collectionName")]
        public string CollectionName { get; set; }

        /// <summary>
        /// Gets or sets the association with Commercial's Billing Account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.claim")]
        public string Claim { get; set; }

        /// <summary>
        /// Gets or sets indicating whether all subscriptions are selected
        /// (=true) or not (=false).
        /// </summary>
        [JsonProperty(PropertyName = "properties.allSubscriptions")]
        public bool? AllSubscriptions { get; set; }

        /// <summary>
        /// Gets or sets subscription ids list. Empty list indicates all
        /// subscriptions are selected, null indicates no update is done,
        /// explicit list indicates the explicit selected subscriptions. On
        /// insert, null is considered as bad request
        /// </summary>
        [JsonProperty(PropertyName = "properties.subscriptionsList")]
        public IList<string> SubscriptionsList { get; set; }

        /// <summary>
        /// Gets or sets indicating whether the collection is enabled or
        /// disabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets the number of offers associated with the collection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.numberOfOffers")]
        public long? NumberOfOffers { get; private set; }

    }
}
