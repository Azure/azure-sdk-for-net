// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Marketplace.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Admin request approval resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AdminRequestApprovalsResource : Resource
    {
        /// <summary>
        /// Initializes a new instance of the AdminRequestApprovalsResource
        /// class.
        /// </summary>
        public AdminRequestApprovalsResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AdminRequestApprovalsResource
        /// class.
        /// </summary>
        /// <param name="id">The resource ID.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="systemData">Metadata pertaining to creation and last
        /// modification of the resource</param>
        /// <param name="offerId">Gets or sets offer Id</param>
        /// <param name="displayName">Gets display name</param>
        /// <param name="publisherId">Gets or sets publisher Id</param>
        /// <param name="adminAction">Gets or sets admin action. Possible
        /// values include: 'Approved', 'Rejected'</param>
        /// <param name="approvedPlans">Gets or sets Approved plans ids, empty
        /// in case of rejected</param>
        /// <param name="comment">Gets or sets admin comment</param>
        /// <param name="administrator">Gets or sets admin details</param>
        /// <param name="plans">Gets list of plans with requesters
        /// details</param>
        /// <param name="collectionIds">Gets or sets list of associated
        /// collection ids</param>
        public AdminRequestApprovalsResource(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string offerId = default(string), string displayName = default(string), string publisherId = default(string), string adminAction = default(string), IList<string> approvedPlans = default(IList<string>), string comment = default(string), string administrator = default(string), IList<PlanRequesterDetails> plans = default(IList<PlanRequesterDetails>), IList<string> collectionIds = default(IList<string>))
            : base(id, name, type, systemData)
        {
            OfferId = offerId;
            DisplayName = displayName;
            PublisherId = publisherId;
            AdminAction = adminAction;
            ApprovedPlans = approvedPlans;
            Comment = comment;
            Administrator = administrator;
            Plans = plans;
            CollectionIds = collectionIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets offer Id
        /// </summary>
        [JsonProperty(PropertyName = "properties.offerId")]
        public string OfferId { get; set; }

        /// <summary>
        /// Gets display name
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; private set; }

        /// <summary>
        /// Gets or sets publisher Id
        /// </summary>
        [JsonProperty(PropertyName = "properties.publisherId")]
        public string PublisherId { get; set; }

        /// <summary>
        /// Gets or sets admin action. Possible values include: 'Approved',
        /// 'Rejected'
        /// </summary>
        [JsonProperty(PropertyName = "properties.adminAction")]
        public string AdminAction { get; set; }

        /// <summary>
        /// Gets or sets Approved plans ids, empty in case of rejected
        /// </summary>
        [JsonProperty(PropertyName = "properties.approvedPlans")]
        public IList<string> ApprovedPlans { get; set; }

        /// <summary>
        /// Gets or sets admin comment
        /// </summary>
        [JsonProperty(PropertyName = "properties.comment")]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or sets admin details
        /// </summary>
        [JsonProperty(PropertyName = "properties.administrator")]
        public string Administrator { get; set; }

        /// <summary>
        /// Gets list of plans with requesters details
        /// </summary>
        [JsonProperty(PropertyName = "properties.plans")]
        public IList<PlanRequesterDetails> Plans { get; private set; }

        /// <summary>
        /// Gets or sets list of associated collection ids
        /// </summary>
        [JsonProperty(PropertyName = "properties.collectionIds")]
        public IList<string> CollectionIds { get; set; }

    }
}
