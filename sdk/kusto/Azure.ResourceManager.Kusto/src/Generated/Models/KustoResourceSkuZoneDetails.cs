// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Kusto.Models
{
    /// <summary> Describes The zonal capabilities of a SKU. </summary>
    public partial class KustoResourceSkuZoneDetails
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="KustoResourceSkuZoneDetails"/>. </summary>
        internal KustoResourceSkuZoneDetails()
        {
            Name = new ChangeTrackingList<string>();
            Capabilities = new ChangeTrackingList<KustoResourceSkuCapabilities>();
        }

        /// <summary> Initializes a new instance of <see cref="KustoResourceSkuZoneDetails"/>. </summary>
        /// <param name="name"> The set of zones that the SKU is available in with the specified capabilities. </param>
        /// <param name="capabilities"> A list of capabilities that are available for the SKU in the specified list of zones. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal KustoResourceSkuZoneDetails(IReadOnlyList<string> name, IReadOnlyList<KustoResourceSkuCapabilities> capabilities, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            Capabilities = capabilities;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The set of zones that the SKU is available in with the specified capabilities. </summary>
        public IReadOnlyList<string> Name { get; }
        /// <summary> A list of capabilities that are available for the SKU in the specified list of zones. </summary>
        public IReadOnlyList<KustoResourceSkuCapabilities> Capabilities { get; }
    }
}
