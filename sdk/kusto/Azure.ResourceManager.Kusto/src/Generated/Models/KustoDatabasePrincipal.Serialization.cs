// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Kusto.Models
{
    public partial class KustoDatabasePrincipal : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("role");
            writer.WriteStringValue(Role.ToString());
            writer.WritePropertyName("name");
            writer.WriteStringValue(Name);
            writer.WritePropertyName("type");
            writer.WriteStringValue(PrincipalType.ToString());
            if (Optional.IsDefined(Fqn))
            {
                writer.WritePropertyName("fqn");
                writer.WriteStringValue(Fqn);
            }
            if (Optional.IsDefined(Email))
            {
                writer.WritePropertyName("email");
                writer.WriteStringValue(Email);
            }
            if (Optional.IsDefined(AppId))
            {
                writer.WritePropertyName("appId");
                writer.WriteStringValue(AppId);
            }
            writer.WriteEndObject();
        }

        internal static KustoDatabasePrincipal DeserializeKustoDatabasePrincipal(JsonElement element)
        {
            KustoDatabasePrincipalRole role = default;
            string name = default;
            KustoDatabasePrincipalType type = default;
            Optional<string> fqn = default;
            Optional<string> email = default;
            Optional<string> appId = default;
            Optional<string> tenantName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("role"))
                {
                    role = new KustoDatabasePrincipalRole(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new KustoDatabasePrincipalType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("fqn"))
                {
                    fqn = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("email"))
                {
                    email = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("appId"))
                {
                    appId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tenantName"))
                {
                    tenantName = property.Value.GetString();
                    continue;
                }
            }
            return new KustoDatabasePrincipal(role, name, type, fqn.Value, email.Value, appId.Value, tenantName.Value);
        }
    }
}
