// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Kusto.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Tables that will be included and excluded in the follower database
    /// </summary>
    public partial class TableLevelSharingProperties
    {
        /// <summary>
        /// Initializes a new instance of the TableLevelSharingProperties
        /// class.
        /// </summary>
        public TableLevelSharingProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TableLevelSharingProperties
        /// class.
        /// </summary>
        /// <param name="tablesToInclude">List of tables to include in the
        /// follower database</param>
        /// <param name="tablesToExclude">List of tables to exclude from the
        /// follower database</param>
        /// <param name="externalTablesToInclude">List of external tables to
        /// include in the follower database</param>
        /// <param name="externalTablesToExclude">List of external tables
        /// exclude from the follower database</param>
        /// <param name="materializedViewsToInclude">List of materialized views
        /// to include in the follower database</param>
        /// <param name="materializedViewsToExclude">List of materialized views
        /// exclude from the follower database</param>
        public TableLevelSharingProperties(IList<string> tablesToInclude = default(IList<string>), IList<string> tablesToExclude = default(IList<string>), IList<string> externalTablesToInclude = default(IList<string>), IList<string> externalTablesToExclude = default(IList<string>), IList<string> materializedViewsToInclude = default(IList<string>), IList<string> materializedViewsToExclude = default(IList<string>))
        {
            TablesToInclude = tablesToInclude;
            TablesToExclude = tablesToExclude;
            ExternalTablesToInclude = externalTablesToInclude;
            ExternalTablesToExclude = externalTablesToExclude;
            MaterializedViewsToInclude = materializedViewsToInclude;
            MaterializedViewsToExclude = materializedViewsToExclude;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of tables to include in the follower database
        /// </summary>
        [JsonProperty(PropertyName = "tablesToInclude")]
        public IList<string> TablesToInclude { get; set; }

        /// <summary>
        /// Gets or sets list of tables to exclude from the follower database
        /// </summary>
        [JsonProperty(PropertyName = "tablesToExclude")]
        public IList<string> TablesToExclude { get; set; }

        /// <summary>
        /// Gets or sets list of external tables to include in the follower
        /// database
        /// </summary>
        [JsonProperty(PropertyName = "externalTablesToInclude")]
        public IList<string> ExternalTablesToInclude { get; set; }

        /// <summary>
        /// Gets or sets list of external tables exclude from the follower
        /// database
        /// </summary>
        [JsonProperty(PropertyName = "externalTablesToExclude")]
        public IList<string> ExternalTablesToExclude { get; set; }

        /// <summary>
        /// Gets or sets list of materialized views to include in the follower
        /// database
        /// </summary>
        [JsonProperty(PropertyName = "materializedViewsToInclude")]
        public IList<string> MaterializedViewsToInclude { get; set; }

        /// <summary>
        /// Gets or sets list of materialized views exclude from the follower
        /// database
        /// </summary>
        [JsonProperty(PropertyName = "materializedViewsToExclude")]
        public IList<string> MaterializedViewsToExclude { get; set; }

    }
}
