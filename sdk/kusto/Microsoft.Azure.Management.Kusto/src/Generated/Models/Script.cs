// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Kusto.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Class representing a database script.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Script : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the Script class.
        /// </summary>
        public Script()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Script class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="scriptUrl">The url to the KQL script blob file. Must
        /// not be used together with scriptContent property</param>
        /// <param name="scriptUrlSasToken">The SaS token that provide read
        /// access to the file which contain the script. Must be provided when
        /// using scriptUrl property.</param>
        /// <param name="scriptContent">The script content. This property
        /// should be used when the script is provide inline and not through
        /// file in a SA. Must not be used together with scriptUrl and
        /// scriptUrlSasToken properties.</param>
        /// <param name="forceUpdateTag">A unique string. If changed the script
        /// will be applied again.</param>
        /// <param name="continueOnErrors">Flag that indicates whether to
        /// continue if one of the command fails.</param>
        /// <param name="provisioningState">The provisioned state of the
        /// resource. Possible values include: 'Running', 'Creating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Moving'</param>
        public Script(string id = default(string), string name = default(string), string type = default(string), string scriptUrl = default(string), string scriptUrlSasToken = default(string), string scriptContent = default(string), string forceUpdateTag = default(string), bool? continueOnErrors = default(bool?), string provisioningState = default(string), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            ScriptUrl = scriptUrl;
            ScriptUrlSasToken = scriptUrlSasToken;
            ScriptContent = scriptContent;
            ForceUpdateTag = forceUpdateTag;
            ContinueOnErrors = continueOnErrors;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the url to the KQL script blob file. Must not be used
        /// together with scriptContent property
        /// </summary>
        [JsonProperty(PropertyName = "properties.scriptUrl")]
        public string ScriptUrl { get; set; }

        /// <summary>
        /// Gets or sets the SaS token that provide read access to the file
        /// which contain the script. Must be provided when using scriptUrl
        /// property.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scriptUrlSasToken")]
        public string ScriptUrlSasToken { get; set; }

        /// <summary>
        /// Gets or sets the script content. This property should be used when
        /// the script is provide inline and not through file in a SA. Must not
        /// be used together with scriptUrl and scriptUrlSasToken properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scriptContent")]
        public string ScriptContent { get; set; }

        /// <summary>
        /// Gets or sets a unique string. If changed the script will be applied
        /// again.
        /// </summary>
        [JsonProperty(PropertyName = "properties.forceUpdateTag")]
        public string ForceUpdateTag { get; set; }

        /// <summary>
        /// Gets or sets flag that indicates whether to continue if one of the
        /// command fails.
        /// </summary>
        [JsonProperty(PropertyName = "properties.continueOnErrors")]
        public bool? ContinueOnErrors { get; set; }

        /// <summary>
        /// Gets the provisioned state of the resource. Possible values
        /// include: 'Running', 'Creating', 'Deleting', 'Succeeded', 'Failed',
        /// 'Moving'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
