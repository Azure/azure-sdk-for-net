// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Kusto.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Endpoints accessed for a common purpose that the Kusto Service
    /// Environment requires outbound network access to.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class OutboundNetworkDependenciesEndpoint : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// OutboundNetworkDependenciesEndpoint class.
        /// </summary>
        public OutboundNetworkDependenciesEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// OutboundNetworkDependenciesEndpoint class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="category">The type of service accessed by the Kusto
        /// Service Environment, e.g., Azure Storage, Azure SQL Database, and
        /// Azure Active Directory.</param>
        /// <param name="endpoints">The endpoints that the Kusto Service
        /// Environment reaches the service at.</param>
        /// <param name="provisioningState">The provisioned state of the
        /// resource. Possible values include: 'Running', 'Creating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Moving'</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public OutboundNetworkDependenciesEndpoint(string id = default(string), string name = default(string), string type = default(string), string category = default(string), IList<EndpointDependency> endpoints = default(IList<EndpointDependency>), string provisioningState = default(string), string etag = default(string))
            : base(id, name, type)
        {
            Category = category;
            Endpoints = endpoints;
            ProvisioningState = provisioningState;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of service accessed by the Kusto Service
        /// Environment, e.g., Azure Storage, Azure SQL Database, and Azure
        /// Active Directory.
        /// </summary>
        [JsonProperty(PropertyName = "properties.category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets the endpoints that the Kusto Service Environment
        /// reaches the service at.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpoints")]
        public IList<EndpointDependency> Endpoints { get; set; }

        /// <summary>
        /// Gets the provisioned state of the resource. Possible values
        /// include: 'Running', 'Creating', 'Deleting', 'Succeeded', 'Failed',
        /// 'Moving'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

    }
}
