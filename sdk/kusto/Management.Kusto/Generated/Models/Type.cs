// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Kusto.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for Type.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum Type
    {
        [EnumMember(Value = "Microsoft.Kusto/clusters/databases")]
        MicrosoftKustoClustersDatabases,
        [EnumMember(Value = "Microsoft.Kusto/clusters/attachedDatabaseConfigurations")]
        MicrosoftKustoClustersAttachedDatabaseConfigurations
    }
    internal static class TypeEnumExtension
    {
        internal static string ToSerializedValue(this Type? value)
        {
            return value == null ? null : ((Type)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this Type value)
        {
            switch( value )
            {
                case Type.MicrosoftKustoClustersDatabases:
                    return "Microsoft.Kusto/clusters/databases";
                case Type.MicrosoftKustoClustersAttachedDatabaseConfigurations:
                    return "Microsoft.Kusto/clusters/attachedDatabaseConfigurations";
            }
            return null;
        }

        internal static Type? ParseType(this string value)
        {
            switch( value )
            {
                case "Microsoft.Kusto/clusters/databases":
                    return Type.MicrosoftKustoClustersDatabases;
                case "Microsoft.Kusto/clusters/attachedDatabaseConfigurations":
                    return Type.MicrosoftKustoClustersAttachedDatabaseConfigurations;
            }
            return null;
        }
    }
}
