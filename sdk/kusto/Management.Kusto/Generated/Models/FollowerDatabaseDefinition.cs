// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Kusto.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A class representing follower database request.
    /// </summary>
    public partial class FollowerDatabaseDefinition
    {
        /// <summary>
        /// Initializes a new instance of the FollowerDatabaseDefinition class.
        /// </summary>
        public FollowerDatabaseDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FollowerDatabaseDefinition class.
        /// </summary>
        /// <param name="clusterResourceId">Resource id of the cluster that
        /// follows a database owned by this cluster.</param>
        /// <param name="attachedDatabaseConfigurationName">Resource name of
        /// the attached database configuration in the follower
        /// cluster.</param>
        /// <param name="databaseName">The database name owned by this cluster
        /// that was followed. * in case following all databases.</param>
        public FollowerDatabaseDefinition(string clusterResourceId, string attachedDatabaseConfigurationName, string databaseName = default(string))
        {
            ClusterResourceId = clusterResourceId;
            AttachedDatabaseConfigurationName = attachedDatabaseConfigurationName;
            DatabaseName = databaseName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource id of the cluster that follows a database
        /// owned by this cluster.
        /// </summary>
        [JsonProperty(PropertyName = "clusterResourceId")]
        public string ClusterResourceId { get; set; }

        /// <summary>
        /// Gets or sets resource name of the attached database configuration
        /// in the follower cluster.
        /// </summary>
        [JsonProperty(PropertyName = "attachedDatabaseConfigurationName")]
        public string AttachedDatabaseConfigurationName { get; set; }

        /// <summary>
        /// Gets the database name owned by this cluster that was followed. *
        /// in case following all databases.
        /// </summary>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ClusterResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ClusterResourceId");
            }
            if (AttachedDatabaseConfigurationName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AttachedDatabaseConfigurationName");
            }
        }
    }
}
