// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes team properties
    /// </summary>
    public partial class TeamProperties
    {
        /// <summary>
        /// Initializes a new instance of the TeamProperties class.
        /// </summary>
        public TeamProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TeamProperties class.
        /// </summary>
        /// <param name="teamName">The name of the team</param>
        /// <param name="teamDescription">The description of the team</param>
        /// <param name="memberIds">List of member IDs to add to the
        /// team</param>
        /// <param name="groupIds">List of group IDs to add their members to
        /// the team</param>
        public TeamProperties(string teamName, string teamDescription = default(string), IList<System.Guid?> memberIds = default(IList<System.Guid?>), IList<System.Guid?> groupIds = default(IList<System.Guid?>))
        {
            TeamName = teamName;
            TeamDescription = teamDescription;
            MemberIds = memberIds;
            GroupIds = groupIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the team
        /// </summary>
        [JsonProperty(PropertyName = "teamName")]
        public string TeamName { get; set; }

        /// <summary>
        /// Gets or sets the description of the team
        /// </summary>
        [JsonProperty(PropertyName = "teamDescription")]
        public string TeamDescription { get; set; }

        /// <summary>
        /// Gets or sets list of member IDs to add to the team
        /// </summary>
        [JsonProperty(PropertyName = "memberIds")]
        public IList<System.Guid?> MemberIds { get; set; }

        /// <summary>
        /// Gets or sets list of group IDs to add their members to the team
        /// </summary>
        [JsonProperty(PropertyName = "groupIds")]
        public IList<System.Guid?> GroupIds { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TeamName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TeamName");
            }
        }
    }
}
