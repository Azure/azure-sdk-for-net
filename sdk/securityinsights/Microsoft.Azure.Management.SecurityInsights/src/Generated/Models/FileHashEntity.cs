// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a file hash entity.
    /// </summary>
    [Newtonsoft.Json.JsonObject("FileHash")]
    [Rest.Serialization.JsonTransformation]
    public partial class FileHashEntity : Entity
    {
        /// <summary>
        /// Initializes a new instance of the FileHashEntity class.
        /// </summary>
        public FileHashEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FileHashEntity class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="additionalData">A bag of custom fields that should be
        /// part of the entity and will be presented to the user.</param>
        /// <param name="friendlyName">The graph item display name which is a
        /// short humanly readable description of the graph item instance. This
        /// property is optional and might be system generated.</param>
        /// <param name="algorithm">The hash algorithm type. Possible values
        /// include: 'Unknown', 'MD5', 'SHA1', 'SHA256', 'SHA256AC'</param>
        /// <param name="hashValue">The file hash value.</param>
        public FileHashEntity(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, object> additionalData = default(IDictionary<string, object>), string friendlyName = default(string), string algorithm = default(string), string hashValue = default(string))
            : base(id, name, type, systemData)
        {
            AdditionalData = additionalData;
            FriendlyName = friendlyName;
            Algorithm = algorithm;
            HashValue = hashValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a bag of custom fields that should be part of the entity and
        /// will be presented to the user.
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalData")]
        public IDictionary<string, object> AdditionalData { get; private set; }

        /// <summary>
        /// Gets the graph item display name which is a short humanly readable
        /// description of the graph item instance. This property is optional
        /// and might be system generated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; private set; }

        /// <summary>
        /// Gets the hash algorithm type. Possible values include: 'Unknown',
        /// 'MD5', 'SHA1', 'SHA256', 'SHA256AC'
        /// </summary>
        [JsonProperty(PropertyName = "properties.algorithm")]
        public string Algorithm { get; private set; }

        /// <summary>
        /// Gets the file hash value.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hashValue")]
        public string HashValue { get; private set; }

    }
}
