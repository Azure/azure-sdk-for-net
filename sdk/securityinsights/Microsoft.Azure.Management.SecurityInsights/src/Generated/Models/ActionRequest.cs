// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Action for alert rule.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ActionRequest : ResourceWithEtag
    {
        /// <summary>
        /// Initializes a new instance of the ActionRequest class.
        /// </summary>
        public ActionRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActionRequest class.
        /// </summary>
        /// <param name="logicAppResourceId">Logic App Resource Id,
        /// /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.</param>
        /// <param name="id">Azure resource Id</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="etag">Etag of the azure resource</param>
        /// <param name="triggerUri">Logic App Callback URL for this specific
        /// workflow.</param>
        public ActionRequest(string logicAppResourceId, string id = default(string), string name = default(string), string type = default(string), string etag = default(string), string triggerUri = default(string))
            : base(id, name, type, etag)
        {
            LogicAppResourceId = logicAppResourceId;
            TriggerUri = triggerUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets logic App Resource Id,
        /// /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
        /// </summary>
        [JsonProperty(PropertyName = "properties.logicAppResourceId")]
        public string LogicAppResourceId { get; set; }

        /// <summary>
        /// Gets or sets logic App Callback URL for this specific workflow.
        /// </summary>
        [JsonProperty(PropertyName = "properties.triggerUri")]
        public string TriggerUri { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (LogicAppResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LogicAppResourceId");
            }
        }
    }
}
