// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Single entity mapping for the alert rule
    /// </summary>
    public partial class EntityMapping
    {
        /// <summary>
        /// Initializes a new instance of the EntityMapping class.
        /// </summary>
        public EntityMapping()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EntityMapping class.
        /// </summary>
        /// <param name="entityType">Possible values include: 'Account',
        /// 'Host', 'IP', 'Malware', 'File', 'Process', 'CloudApplication',
        /// 'DNS', 'AzureResource', 'FileHash', 'RegistryKey', 'RegistryValue',
        /// 'SecurityGroup', 'URL', 'Mailbox', 'MailCluster', 'MailMessage',
        /// 'SubmissionMail'</param>
        /// <param name="fieldMappings">array of field mappings for the given
        /// entity mapping</param>
        public EntityMapping(string entityType = default(string), IList<FieldMapping> fieldMappings = default(IList<FieldMapping>))
        {
            EntityType = entityType;
            FieldMappings = fieldMappings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Account', 'Host', 'IP',
        /// 'Malware', 'File', 'Process', 'CloudApplication', 'DNS',
        /// 'AzureResource', 'FileHash', 'RegistryKey', 'RegistryValue',
        /// 'SecurityGroup', 'URL', 'Mailbox', 'MailCluster', 'MailMessage',
        /// 'SubmissionMail'
        /// </summary>
        [JsonProperty(PropertyName = "entityType")]
        public string EntityType { get; set; }

        /// <summary>
        /// Gets or sets array of field mappings for the given entity mapping
        /// </summary>
        [JsonProperty(PropertyName = "fieldMappings")]
        public IList<FieldMapping> FieldMappings { get; set; }

    }
}
