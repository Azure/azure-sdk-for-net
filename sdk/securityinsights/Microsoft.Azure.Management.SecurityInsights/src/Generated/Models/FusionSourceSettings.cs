// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a supported source signal configuration in Fusion detection.
    /// </summary>
    public partial class FusionSourceSettings
    {
        /// <summary>
        /// Initializes a new instance of the FusionSourceSettings class.
        /// </summary>
        public FusionSourceSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FusionSourceSettings class.
        /// </summary>
        /// <param name="enabled">Determines whether this source signal is
        /// enabled or disabled in Fusion detection.</param>
        /// <param name="sourceName">Name of the Fusion source signal. Refer to
        /// Fusion alert rule template for supported values.</param>
        /// <param name="sourceSubTypes">Configuration for all source subtypes
        /// under this source signal consumed in fusion detection.</param>
        public FusionSourceSettings(bool enabled, string sourceName, IList<FusionSourceSubTypeSetting> sourceSubTypes = default(IList<FusionSourceSubTypeSetting>))
        {
            Enabled = enabled;
            SourceName = sourceName;
            SourceSubTypes = sourceSubTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets determines whether this source signal is enabled or
        /// disabled in Fusion detection.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or sets name of the Fusion source signal. Refer to Fusion
        /// alert rule template for supported values.
        /// </summary>
        [JsonProperty(PropertyName = "sourceName")]
        public string SourceName { get; set; }

        /// <summary>
        /// Gets or sets configuration for all source subtypes under this
        /// source signal consumed in fusion detection.
        /// </summary>
        [JsonProperty(PropertyName = "sourceSubTypes")]
        public IList<FusionSourceSubTypeSetting> SourceSubTypes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SourceName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceName");
            }
            if (SourceSubTypes != null)
            {
                foreach (var element in SourceSubTypes)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
