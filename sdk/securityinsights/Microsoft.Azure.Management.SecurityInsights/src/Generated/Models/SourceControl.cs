// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a SourceControl in Azure Security Insights.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SourceControl : ResourceWithEtag
    {
        /// <summary>
        /// Initializes a new instance of the SourceControl class.
        /// </summary>
        public SourceControl()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SourceControl class.
        /// </summary>
        /// <param name="displayName">The display name of the source
        /// control</param>
        /// <param name="repoType">The repository type of the source control.
        /// Possible values include: 'Github', 'DevOps'</param>
        /// <param name="contentTypes">Array of source control content
        /// types.</param>
        /// <param name="repository">Repository metadata.</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="etag">Etag of the azure resource</param>
        /// <param name="sourceControlId">The id (a Guid) of the source
        /// control</param>
        /// <param name="version">The version number associated with the source
        /// control. Possible values include: 'V1', 'V2'</param>
        /// <param name="description">A description of the source
        /// control</param>
        /// <param name="repositoryResourceInfo">Information regarding the
        /// resources created in user's repository.</param>
        /// <param name="lastDeploymentInfo">Information regarding the latest
        /// deployment for the source control.</param>
        public SourceControl(string displayName, string repoType, IList<string> contentTypes, Repository repository, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string etag = default(string), string sourceControlId = default(string), string version = default(string), string description = default(string), RepositoryResourceInfo repositoryResourceInfo = default(RepositoryResourceInfo), DeploymentInfo lastDeploymentInfo = default(DeploymentInfo))
            : base(id, name, type, systemData, etag)
        {
            SourceControlId = sourceControlId;
            Version = version;
            DisplayName = displayName;
            Description = description;
            RepoType = repoType;
            ContentTypes = contentTypes;
            Repository = repository;
            RepositoryResourceInfo = repositoryResourceInfo;
            LastDeploymentInfo = lastDeploymentInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id (a Guid) of the source control
        /// </summary>
        [JsonProperty(PropertyName = "properties.id")]
        public string SourceControlId { get; set; }

        /// <summary>
        /// Gets or sets the version number associated with the source control.
        /// Possible values include: 'V1', 'V2'
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets the display name of the source control
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets a description of the source control
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the repository type of the source control. Possible
        /// values include: 'Github', 'DevOps'
        /// </summary>
        [JsonProperty(PropertyName = "properties.repoType")]
        public string RepoType { get; set; }

        /// <summary>
        /// Gets or sets array of source control content types.
        /// </summary>
        [JsonProperty(PropertyName = "properties.contentTypes")]
        public IList<string> ContentTypes { get; set; }

        /// <summary>
        /// Gets or sets repository metadata.
        /// </summary>
        [JsonProperty(PropertyName = "properties.repository")]
        public Repository Repository { get; set; }

        /// <summary>
        /// Gets or sets information regarding the resources created in user's
        /// repository.
        /// </summary>
        [JsonProperty(PropertyName = "properties.repositoryResourceInfo")]
        public RepositoryResourceInfo RepositoryResourceInfo { get; set; }

        /// <summary>
        /// Gets or sets information regarding the latest deployment for the
        /// source control.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastDeploymentInfo")]
        public DeploymentInfo LastDeploymentInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (RepoType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RepoType");
            }
            if (ContentTypes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ContentTypes");
            }
            if (Repository == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Repository");
            }
        }
    }
}
