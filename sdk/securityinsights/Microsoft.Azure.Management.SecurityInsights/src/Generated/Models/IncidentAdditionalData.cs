// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Incident additional data property bag.
    /// </summary>
    public partial class IncidentAdditionalData
    {
        /// <summary>
        /// Initializes a new instance of the IncidentAdditionalData class.
        /// </summary>
        public IncidentAdditionalData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IncidentAdditionalData class.
        /// </summary>
        /// <param name="alertsCount">The number of alerts in the
        /// incident</param>
        /// <param name="bookmarksCount">The number of bookmarks in the
        /// incident</param>
        /// <param name="commentsCount">The number of comments in the
        /// incident</param>
        /// <param name="alertProductNames">List of product names of alerts in
        /// the incident</param>
        /// <param name="tactics">The tactics associated with incident</param>
        public IncidentAdditionalData(int? alertsCount = default(int?), int? bookmarksCount = default(int?), int? commentsCount = default(int?), IList<string> alertProductNames = default(IList<string>), IList<string> tactics = default(IList<string>))
        {
            AlertsCount = alertsCount;
            BookmarksCount = bookmarksCount;
            CommentsCount = commentsCount;
            AlertProductNames = alertProductNames;
            Tactics = tactics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the number of alerts in the incident
        /// </summary>
        [JsonProperty(PropertyName = "alertsCount")]
        public int? AlertsCount { get; private set; }

        /// <summary>
        /// Gets the number of bookmarks in the incident
        /// </summary>
        [JsonProperty(PropertyName = "bookmarksCount")]
        public int? BookmarksCount { get; private set; }

        /// <summary>
        /// Gets the number of comments in the incident
        /// </summary>
        [JsonProperty(PropertyName = "commentsCount")]
        public int? CommentsCount { get; private set; }

        /// <summary>
        /// Gets list of product names of alerts in the incident
        /// </summary>
        [JsonProperty(PropertyName = "alertProductNames")]
        public IList<string> AlertProductNames { get; private set; }

        /// <summary>
        /// Gets the tactics associated with incident
        /// </summary>
        [JsonProperty(PropertyName = "tactics")]
        public IList<string> Tactics { get; private set; }

    }
}
