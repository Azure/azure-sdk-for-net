// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents settings for User and Entity Behavior Analytics enablement.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class UebaSettings : Settings
    {
        /// <summary>
        /// Initializes a new instance of the UebaSettings class.
        /// </summary>
        public UebaSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UebaSettings class.
        /// </summary>
        /// <param name="id">Azure resource Id</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="etag">Etag of the azure resource</param>
        /// <param name="atpLicenseStatus">Determines whether the tenant has
        /// ATP (Advanced Threat Protection) license. Possible values include:
        /// 'Enabled', 'Disabled'</param>
        /// <param name="isEnabled">Determines whether User and Entity Behavior
        /// Analytics is enabled for this workspace.</param>
        /// <param name="statusInMcas">Determines whether User and Entity
        /// Behavior Analytics is enabled from MCAS (Microsoft Cloud App
        /// Security). Possible values include: 'Enabled', 'Disabled'</param>
        public UebaSettings(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), string atpLicenseStatus = default(string), bool? isEnabled = default(bool?), string statusInMcas = default(string))
            : base(id, name, type, etag)
        {
            AtpLicenseStatus = atpLicenseStatus;
            IsEnabled = isEnabled;
            StatusInMcas = statusInMcas;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets determines whether the tenant has ATP (Advanced Threat
        /// Protection) license. Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.atpLicenseStatus")]
        public string AtpLicenseStatus { get; private set; }

        /// <summary>
        /// Gets or sets determines whether User and Entity Behavior Analytics
        /// is enabled for this workspace.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isEnabled")]
        public bool? IsEnabled { get; set; }

        /// <summary>
        /// Gets determines whether User and Entity Behavior Analytics is
        /// enabled from MCAS (Microsoft Cloud App Security). Possible values
        /// include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.statusInMcas")]
        public string StatusInMcas { get; private set; }

    }
}
