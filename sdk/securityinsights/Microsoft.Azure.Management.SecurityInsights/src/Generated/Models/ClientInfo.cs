// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information on the client (user or application) that made some action
    /// </summary>
    public partial class ClientInfo
    {
        /// <summary>
        /// Initializes a new instance of the ClientInfo class.
        /// </summary>
        public ClientInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClientInfo class.
        /// </summary>
        /// <param name="email">The email of the client.</param>
        /// <param name="name">The name of the client.</param>
        /// <param name="objectId">The object id of the client.</param>
        /// <param name="userPrincipalName">The user principal name of the
        /// client.</param>
        public ClientInfo(string email = default(string), string name = default(string), System.Guid? objectId = default(System.Guid?), string userPrincipalName = default(string))
        {
            Email = email;
            Name = name;
            ObjectId = objectId;
            UserPrincipalName = userPrincipalName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the email of the client.
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets the name of the client.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the object id of the client.
        /// </summary>
        [JsonProperty(PropertyName = "objectId")]
        public System.Guid? ObjectId { get; set; }

        /// <summary>
        /// Gets or sets the user principal name of the client.
        /// </summary>
        [JsonProperty(PropertyName = "userPrincipalName")]
        public string UserPrincipalName { get; set; }

    }
}
