// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a supported source subtype configuration under a source
    /// signal in Fusion detection.
    /// </summary>
    public partial class FusionSourceSubTypeSetting
    {
        /// <summary>
        /// Initializes a new instance of the FusionSourceSubTypeSetting class.
        /// </summary>
        public FusionSourceSubTypeSetting()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FusionSourceSubTypeSetting class.
        /// </summary>
        /// <param name="enabled">Determines whether this source subtype under
        /// source signal is enabled or disabled in Fusion detection.</param>
        /// <param name="sourceSubTypeName">The Name of the source subtype
        /// under a given source signal in Fusion detection. Refer to Fusion
        /// alert rule template for supported values.</param>
        /// <param name="severityFilters">Severity configuration for a source
        /// subtype consumed in fusion detection.</param>
        /// <param name="sourceSubTypeDisplayName">The display name of source
        /// subtype under a source signal consumed in Fusion detection.</param>
        public FusionSourceSubTypeSetting(bool enabled, string sourceSubTypeName, FusionSubTypeSeverityFilter severityFilters, string sourceSubTypeDisplayName = default(string))
        {
            Enabled = enabled;
            SourceSubTypeName = sourceSubTypeName;
            SourceSubTypeDisplayName = sourceSubTypeDisplayName;
            SeverityFilters = severityFilters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets determines whether this source subtype under source
        /// signal is enabled or disabled in Fusion detection.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or sets the Name of the source subtype under a given source
        /// signal in Fusion detection. Refer to Fusion alert rule template for
        /// supported values.
        /// </summary>
        [JsonProperty(PropertyName = "sourceSubTypeName")]
        public string SourceSubTypeName { get; set; }

        /// <summary>
        /// Gets the display name of source subtype under a source signal
        /// consumed in Fusion detection.
        /// </summary>
        [JsonProperty(PropertyName = "sourceSubTypeDisplayName")]
        public string SourceSubTypeDisplayName { get; private set; }

        /// <summary>
        /// Gets or sets severity configuration for a source subtype consumed
        /// in fusion detection.
        /// </summary>
        [JsonProperty(PropertyName = "severityFilters")]
        public FusionSubTypeSeverityFilter SeverityFilters { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SourceSubTypeName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceSubTypeName");
            }
            if (SeverityFilters == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SeverityFilters");
            }
        }
    }
}
