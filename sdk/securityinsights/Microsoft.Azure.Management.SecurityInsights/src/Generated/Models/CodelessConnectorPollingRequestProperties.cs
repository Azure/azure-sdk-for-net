// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describe the request properties needed to successfully pull from the
    /// server
    /// </summary>
    public partial class CodelessConnectorPollingRequestProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CodelessConnectorPollingRequestProperties class.
        /// </summary>
        public CodelessConnectorPollingRequestProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CodelessConnectorPollingRequestProperties class.
        /// </summary>
        /// <param name="apiEndpoint">Describe the endpoint we should pull the
        /// data from</param>
        /// <param name="queryWindowInMin">The window interval we will use the
        /// pull the data</param>
        /// <param name="httpMethod">The http method type we will use in the
        /// poll request, GET or POST</param>
        /// <param name="queryTimeFormat">The time format will be used the
        /// query events in a specific window</param>
        /// <param name="rateLimitQps">Defines the rate limit QPS</param>
        /// <param name="retryCount">Describe the amount of time we should try
        /// and poll the data in case of failure</param>
        /// <param name="timeoutInSeconds">The number of seconds we will
        /// consider as a request timeout</param>
        /// <param name="headers">Describe the headers sent in the poll
        /// request</param>
        /// <param name="queryParameters">Describe the query parameters sent in
        /// the poll request</param>
        /// <param name="queryParametersTemplate">For advanced scenarios for
        /// example user name/password embedded in nested JSON payload</param>
        /// <param name="startTimeAttributeName">This will be used the query
        /// events from a start of the time window</param>
        /// <param name="endTimeAttributeName">This will be used the query
        /// events from the end of the time window</param>
        public CodelessConnectorPollingRequestProperties(string apiEndpoint, int queryWindowInMin, string httpMethod, string queryTimeFormat, int? rateLimitQps = default(int?), int? retryCount = default(int?), int? timeoutInSeconds = default(int?), object headers = default(object), object queryParameters = default(object), string queryParametersTemplate = default(string), string startTimeAttributeName = default(string), string endTimeAttributeName = default(string))
        {
            ApiEndpoint = apiEndpoint;
            RateLimitQps = rateLimitQps;
            QueryWindowInMin = queryWindowInMin;
            HttpMethod = httpMethod;
            QueryTimeFormat = queryTimeFormat;
            RetryCount = retryCount;
            TimeoutInSeconds = timeoutInSeconds;
            Headers = headers;
            QueryParameters = queryParameters;
            QueryParametersTemplate = queryParametersTemplate;
            StartTimeAttributeName = startTimeAttributeName;
            EndTimeAttributeName = endTimeAttributeName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets describe the endpoint we should pull the data from
        /// </summary>
        [JsonProperty(PropertyName = "apiEndpoint")]
        public string ApiEndpoint { get; set; }

        /// <summary>
        /// Gets or sets defines the rate limit QPS
        /// </summary>
        [JsonProperty(PropertyName = "rateLimitQps")]
        public int? RateLimitQps { get; set; }

        /// <summary>
        /// Gets or sets the window interval we will use the pull the data
        /// </summary>
        [JsonProperty(PropertyName = "queryWindowInMin")]
        public int QueryWindowInMin { get; set; }

        /// <summary>
        /// Gets or sets the http method type we will use in the poll request,
        /// GET or POST
        /// </summary>
        [JsonProperty(PropertyName = "httpMethod")]
        public string HttpMethod { get; set; }

        /// <summary>
        /// Gets or sets the time format will be used the query events in a
        /// specific window
        /// </summary>
        [JsonProperty(PropertyName = "queryTimeFormat")]
        public string QueryTimeFormat { get; set; }

        /// <summary>
        /// Gets or sets describe the amount of time we should try and poll the
        /// data in case of failure
        /// </summary>
        [JsonProperty(PropertyName = "retryCount")]
        public int? RetryCount { get; set; }

        /// <summary>
        /// Gets or sets the number of seconds we will consider as a request
        /// timeout
        /// </summary>
        [JsonProperty(PropertyName = "timeoutInSeconds")]
        public int? TimeoutInSeconds { get; set; }

        /// <summary>
        /// Gets or sets describe the headers sent in the poll request
        /// </summary>
        [JsonProperty(PropertyName = "headers")]
        public object Headers { get; set; }

        /// <summary>
        /// Gets or sets describe the query parameters sent in the poll request
        /// </summary>
        [JsonProperty(PropertyName = "queryParameters")]
        public object QueryParameters { get; set; }

        /// <summary>
        /// Gets or sets for advanced scenarios for example user name/password
        /// embedded in nested JSON payload
        /// </summary>
        [JsonProperty(PropertyName = "queryParametersTemplate")]
        public string QueryParametersTemplate { get; set; }

        /// <summary>
        /// Gets or sets this will be used the query events from a start of the
        /// time window
        /// </summary>
        [JsonProperty(PropertyName = "startTimeAttributeName")]
        public string StartTimeAttributeName { get; set; }

        /// <summary>
        /// Gets or sets this will be used the query events from the end of the
        /// time window
        /// </summary>
        [JsonProperty(PropertyName = "endTimeAttributeName")]
        public string EndTimeAttributeName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ApiEndpoint == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApiEndpoint");
            }
            if (HttpMethod == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "HttpMethod");
            }
            if (QueryTimeFormat == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "QueryTimeFormat");
            }
        }
    }
}
