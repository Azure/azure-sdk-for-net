// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Data connector to pull Threat intelligence data from TAXII 2.0/2.1
    /// server
    /// </summary>
    [Newtonsoft.Json.JsonObject("ThreatIntelligenceTaxii")]
    [Rest.Serialization.JsonTransformation]
    public partial class TiTaxiiDataConnector : DataConnector
    {
        /// <summary>
        /// Initializes a new instance of the TiTaxiiDataConnector class.
        /// </summary>
        public TiTaxiiDataConnector()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TiTaxiiDataConnector class.
        /// </summary>
        /// <param name="tenantId">The tenant id to connect to, and get the
        /// data from.</param>
        /// <param name="pollingFrequency">The polling frequency for the TAXII
        /// server. Possible values include: 'OnceAMinute', 'OnceAnHour',
        /// 'OnceADay'</param>
        /// <param name="dataTypes">The available data types for Threat
        /// Intelligence TAXII data connector.</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="etag">Etag of the azure resource</param>
        /// <param name="workspaceId">The workspace id.</param>
        /// <param name="friendlyName">The friendly name for the TAXII
        /// server.</param>
        /// <param name="taxiiServer">The API root for the TAXII
        /// server.</param>
        /// <param name="collectionId">The collection id of the TAXII
        /// server.</param>
        /// <param name="userName">The userName for the TAXII server.</param>
        /// <param name="password">The password for the TAXII server.</param>
        /// <param name="taxiiLookbackPeriod">The lookback period for the TAXII
        /// server.</param>
        public TiTaxiiDataConnector(string tenantId, string pollingFrequency, TiTaxiiDataConnectorDataTypes dataTypes, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string etag = default(string), string workspaceId = default(string), string friendlyName = default(string), string taxiiServer = default(string), string collectionId = default(string), string userName = default(string), string password = default(string), System.DateTime? taxiiLookbackPeriod = default(System.DateTime?))
            : base(id, name, type, systemData, etag)
        {
            TenantId = tenantId;
            WorkspaceId = workspaceId;
            FriendlyName = friendlyName;
            TaxiiServer = taxiiServer;
            CollectionId = collectionId;
            UserName = userName;
            Password = password;
            TaxiiLookbackPeriod = taxiiLookbackPeriod;
            PollingFrequency = pollingFrequency;
            DataTypes = dataTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the tenant id to connect to, and get the data from.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or sets the workspace id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.workspaceId")]
        public string WorkspaceId { get; set; }

        /// <summary>
        /// Gets or sets the friendly name for the TAXII server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the API root for the TAXII server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.taxiiServer")]
        public string TaxiiServer { get; set; }

        /// <summary>
        /// Gets or sets the collection id of the TAXII server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.collectionId")]
        public string CollectionId { get; set; }

        /// <summary>
        /// Gets or sets the userName for the TAXII server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.userName")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets the password for the TAXII server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets the lookback period for the TAXII server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.taxiiLookbackPeriod")]
        public System.DateTime? TaxiiLookbackPeriod { get; set; }

        /// <summary>
        /// Gets or sets the polling frequency for the TAXII server. Possible
        /// values include: 'OnceAMinute', 'OnceAnHour', 'OnceADay'
        /// </summary>
        [JsonProperty(PropertyName = "properties.pollingFrequency")]
        public string PollingFrequency { get; set; }

        /// <summary>
        /// Gets or sets the available data types for Threat Intelligence TAXII
        /// data connector.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataTypes")]
        public TiTaxiiDataConnectorDataTypes DataTypes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TenantId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TenantId");
            }
            if (PollingFrequency == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PollingFrequency");
            }
            if (DataTypes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DataTypes");
            }
            if (DataTypes != null)
            {
                DataTypes.Validate();
            }
        }
    }
}
