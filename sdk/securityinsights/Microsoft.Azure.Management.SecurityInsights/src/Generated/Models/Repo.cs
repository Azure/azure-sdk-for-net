// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a repository.
    /// </summary>
    public partial class Repo
    {
        /// <summary>
        /// Initializes a new instance of the Repo class.
        /// </summary>
        public Repo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Repo class.
        /// </summary>
        /// <param name="url">The url to access the repository.</param>
        /// <param name="fullName">The name of the repository.</param>
        /// <param name="branches">Array of branches.</param>
        public Repo(string url = default(string), string fullName = default(string), IList<string> branches = default(IList<string>))
        {
            Url = url;
            FullName = fullName;
            Branches = branches;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the url to access the repository.
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets the name of the repository.
        /// </summary>
        [JsonProperty(PropertyName = "fullName")]
        public string FullName { get; set; }

        /// <summary>
        /// Gets or sets array of branches.
        /// </summary>
        [JsonProperty(PropertyName = "branches")]
        public IList<string> Branches { get; set; }

    }
}
