// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The whois record for a given domain
    /// </summary>
    public partial class EnrichmentDomainWhoisDetails
    {
        /// <summary>
        /// Initializes a new instance of the EnrichmentDomainWhoisDetails
        /// class.
        /// </summary>
        public EnrichmentDomainWhoisDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnrichmentDomainWhoisDetails
        /// class.
        /// </summary>
        /// <param name="registrar">The registrar associated with this
        /// domain</param>
        /// <param name="contacts">The set of contacts associated with this
        /// domain</param>
        /// <param name="nameServers">A list of name servers associated with
        /// this domain</param>
        /// <param name="statuses">The set of status flags for this whois
        /// record</param>
        public EnrichmentDomainWhoisDetails(EnrichmentDomainWhoisRegistrarDetails registrar = default(EnrichmentDomainWhoisRegistrarDetails), EnrichmentDomainWhoisContacts contacts = default(EnrichmentDomainWhoisContacts), IList<string> nameServers = default(IList<string>), IList<string> statuses = default(IList<string>))
        {
            Registrar = registrar;
            Contacts = contacts;
            NameServers = nameServers;
            Statuses = statuses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the registrar associated with this domain
        /// </summary>
        [JsonProperty(PropertyName = "registrar")]
        public EnrichmentDomainWhoisRegistrarDetails Registrar { get; set; }

        /// <summary>
        /// Gets or sets the set of contacts associated with this domain
        /// </summary>
        [JsonProperty(PropertyName = "contacts")]
        public EnrichmentDomainWhoisContacts Contacts { get; set; }

        /// <summary>
        /// Gets or sets a list of name servers associated with this domain
        /// </summary>
        [JsonProperty(PropertyName = "nameServers")]
        public IList<string> NameServers { get; set; }

        /// <summary>
        /// Gets or sets the set of status flags for this whois record
        /// </summary>
        [JsonProperty(PropertyName = "statuses")]
        public IList<string> Statuses { get; set; }

    }
}
