// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a Fusion scenario exclusion patterns in Fusion detection.
    /// </summary>
    public partial class FusionScenarioExclusionPattern
    {
        /// <summary>
        /// Initializes a new instance of the FusionScenarioExclusionPattern
        /// class.
        /// </summary>
        public FusionScenarioExclusionPattern()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FusionScenarioExclusionPattern
        /// class.
        /// </summary>
        /// <param name="exclusionPattern">Scenario exclusion pattern.</param>
        /// <param name="dateAddedInUTC">DateTime when scenario exclusion
        /// pattern is added in UTC.</param>
        public FusionScenarioExclusionPattern(string exclusionPattern, string dateAddedInUTC)
        {
            ExclusionPattern = exclusionPattern;
            DateAddedInUTC = dateAddedInUTC;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets scenario exclusion pattern.
        /// </summary>
        [JsonProperty(PropertyName = "exclusionPattern")]
        public string ExclusionPattern { get; set; }

        /// <summary>
        /// Gets or sets dateTime when scenario exclusion pattern is added in
        /// UTC.
        /// </summary>
        [JsonProperty(PropertyName = "dateAddedInUTC")]
        public string DateAddedInUTC { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ExclusionPattern == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ExclusionPattern");
            }
            if (DateAddedInUTC == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DateAddedInUTC");
            }
        }
    }
}
