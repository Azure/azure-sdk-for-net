// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An individual contact associated with this domain
    /// </summary>
    public partial class EnrichmentDomainWhoisContact
    {
        /// <summary>
        /// Initializes a new instance of the EnrichmentDomainWhoisContact
        /// class.
        /// </summary>
        public EnrichmentDomainWhoisContact()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnrichmentDomainWhoisContact
        /// class.
        /// </summary>
        /// <param name="name">The name of this contact</param>
        /// <param name="org">The organization for this contact</param>
        /// <param name="street">A list describing the street address for this
        /// contact</param>
        /// <param name="city">The city for this contact</param>
        /// <param name="state">The state for this contact</param>
        /// <param name="postal">The postal code for this contact</param>
        /// <param name="country">The country for this contact</param>
        /// <param name="phone">The phone number for this contact</param>
        /// <param name="fax">The fax number for this contact</param>
        /// <param name="email">The email address for this contact</param>
        public EnrichmentDomainWhoisContact(string name = default(string), string org = default(string), IList<string> street = default(IList<string>), string city = default(string), string state = default(string), string postal = default(string), string country = default(string), string phone = default(string), string fax = default(string), string email = default(string))
        {
            Name = name;
            Org = org;
            Street = street;
            City = city;
            State = state;
            Postal = postal;
            Country = country;
            Phone = phone;
            Fax = fax;
            Email = email;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of this contact
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the organization for this contact
        /// </summary>
        [JsonProperty(PropertyName = "org")]
        public string Org { get; set; }

        /// <summary>
        /// Gets or sets a list describing the street address for this contact
        /// </summary>
        [JsonProperty(PropertyName = "street")]
        public IList<string> Street { get; set; }

        /// <summary>
        /// Gets or sets the city for this contact
        /// </summary>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }

        /// <summary>
        /// Gets or sets the state for this contact
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets the postal code for this contact
        /// </summary>
        [JsonProperty(PropertyName = "postal")]
        public string Postal { get; set; }

        /// <summary>
        /// Gets or sets the country for this contact
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// Gets or sets the phone number for this contact
        /// </summary>
        [JsonProperty(PropertyName = "phone")]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or sets the fax number for this contact
        /// </summary>
        [JsonProperty(PropertyName = "fax")]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or sets the email address for this contact
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

    }
}
