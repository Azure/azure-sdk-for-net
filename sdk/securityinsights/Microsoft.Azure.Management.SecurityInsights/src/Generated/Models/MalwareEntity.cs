// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a malware entity.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Malware")]
    [Rest.Serialization.JsonTransformation]
    public partial class MalwareEntity : Entity
    {
        /// <summary>
        /// Initializes a new instance of the MalwareEntity class.
        /// </summary>
        public MalwareEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MalwareEntity class.
        /// </summary>
        /// <param name="id">Azure resource Id</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="additionalData">A bag of custom fields that should be
        /// part of the entity and will be presented to the user.</param>
        /// <param name="friendlyName">The graph item display name which is a
        /// short humanly readable description of the graph item instance. This
        /// property is optional and might be system generated.</param>
        /// <param name="category">The malware category by the vendor, e.g.
        /// Trojan</param>
        /// <param name="fileEntityIds">List of linked file entity identifiers
        /// on which the malware was found</param>
        /// <param name="malwareName">The malware name by the vendor, e.g.
        /// Win32/Toga!rfn</param>
        /// <param name="processEntityIds">List of linked process entity
        /// identifiers on which the malware was found.</param>
        public MalwareEntity(string id = default(string), string name = default(string), string type = default(string), IDictionary<string, object> additionalData = default(IDictionary<string, object>), string friendlyName = default(string), string category = default(string), IList<string> fileEntityIds = default(IList<string>), string malwareName = default(string), IList<string> processEntityIds = default(IList<string>))
            : base(id, name, type)
        {
            AdditionalData = additionalData;
            FriendlyName = friendlyName;
            Category = category;
            FileEntityIds = fileEntityIds;
            MalwareName = malwareName;
            ProcessEntityIds = processEntityIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a bag of custom fields that should be part of the entity and
        /// will be presented to the user.
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalData")]
        public IDictionary<string, object> AdditionalData { get; private set; }

        /// <summary>
        /// Gets the graph item display name which is a short humanly readable
        /// description of the graph item instance. This property is optional
        /// and might be system generated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; private set; }

        /// <summary>
        /// Gets the malware category by the vendor, e.g. Trojan
        /// </summary>
        [JsonProperty(PropertyName = "properties.category")]
        public string Category { get; private set; }

        /// <summary>
        /// Gets list of linked file entity identifiers on which the malware
        /// was found
        /// </summary>
        [JsonProperty(PropertyName = "properties.fileEntityIds")]
        public IList<string> FileEntityIds { get; private set; }

        /// <summary>
        /// Gets the malware name by the vendor, e.g. Win32/Toga!rfn
        /// </summary>
        [JsonProperty(PropertyName = "properties.malwareName")]
        public string MalwareName { get; private set; }

        /// <summary>
        /// Gets list of linked process entity identifiers on which the malware
        /// was found.
        /// </summary>
        [JsonProperty(PropertyName = "properties.processEntityIds")]
        public IList<string> ProcessEntityIds { get; private set; }

    }
}
