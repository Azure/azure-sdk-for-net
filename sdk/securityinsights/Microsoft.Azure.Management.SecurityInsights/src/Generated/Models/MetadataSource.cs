// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The original source of the content item, where it comes from.
    /// </summary>
    public partial class MetadataSource
    {
        /// <summary>
        /// Initializes a new instance of the MetadataSource class.
        /// </summary>
        public MetadataSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MetadataSource class.
        /// </summary>
        /// <param name="kind">Source type of the content. Possible values
        /// include: 'LocalWorkspace', 'Community', 'Solution',
        /// 'SourceRepository'</param>
        /// <param name="name">Name of the content source.  The repo name,
        /// solution name, LA workspace name etc.</param>
        /// <param name="sourceId">ID of the content source.  The solution ID,
        /// workspace ID, etc</param>
        public MetadataSource(string kind, string name = default(string), string sourceId = default(string))
        {
            Kind = kind;
            Name = name;
            SourceId = sourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets source type of the content. Possible values include:
        /// 'LocalWorkspace', 'Community', 'Solution', 'SourceRepository'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets name of the content source.  The repo name, solution
        /// name, LA workspace name etc.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets ID of the content source.  The solution ID, workspace
        /// ID, etc
        /// </summary>
        [JsonProperty(PropertyName = "sourceId")]
        public string SourceId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Kind == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Kind");
            }
        }
    }
}
