// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a relation
    /// </summary>
    public partial class RelationBase : Resource
    {
        /// <summary>
        /// Initializes a new instance of the RelationBase class.
        /// </summary>
        public RelationBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RelationBase class.
        /// </summary>
        /// <param name="id">Azure resource Id</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="kind">The type of relation node. Possible values
        /// include: 'CasesToBookmarks'</param>
        /// <param name="etag">ETag for relation</param>
        public RelationBase(string id = default(string), string name = default(string), string type = default(string), string kind = default(string), string etag = default(string))
            : base(id, name, type)
        {
            Kind = kind;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the type of relation node. Possible values include:
        /// 'CasesToBookmarks'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; private set; }

        /// <summary>
        /// Gets or sets eTag for relation
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
