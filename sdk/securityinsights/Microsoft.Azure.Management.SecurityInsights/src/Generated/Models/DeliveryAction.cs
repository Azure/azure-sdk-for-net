// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DeliveryAction.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DeliveryAction
    {
        /// <summary>
        /// Unknown
        /// </summary>
        [EnumMember(Value = "Unknown")]
        Unknown,
        /// <summary>
        /// DeliveredAsSpam
        /// </summary>
        [EnumMember(Value = "DeliveredAsSpam")]
        DeliveredAsSpam,
        /// <summary>
        /// Delivered
        /// </summary>
        [EnumMember(Value = "Delivered")]
        Delivered,
        /// <summary>
        /// Blocked
        /// </summary>
        [EnumMember(Value = "Blocked")]
        Blocked,
        /// <summary>
        /// Replaced
        /// </summary>
        [EnumMember(Value = "Replaced")]
        Replaced
    }
    internal static class DeliveryActionEnumExtension
    {
        internal static string ToSerializedValue(this DeliveryAction? value)
        {
            return value == null ? null : ((DeliveryAction)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DeliveryAction value)
        {
            switch( value )
            {
                case DeliveryAction.Unknown:
                    return "Unknown";
                case DeliveryAction.DeliveredAsSpam:
                    return "DeliveredAsSpam";
                case DeliveryAction.Delivered:
                    return "Delivered";
                case DeliveryAction.Blocked:
                    return "Blocked";
                case DeliveryAction.Replaced:
                    return "Replaced";
            }
            return null;
        }

        internal static DeliveryAction? ParseDeliveryAction(this string value)
        {
            switch( value )
            {
                case "Unknown":
                    return DeliveryAction.Unknown;
                case "DeliveredAsSpam":
                    return DeliveryAction.DeliveredAsSpam;
                case "Delivered":
                    return DeliveryAction.Delivered;
                case "Blocked":
                    return DeliveryAction.Blocked;
                case "Replaced":
                    return DeliveryAction.Replaced;
            }
            return null;
        }
    }
}
