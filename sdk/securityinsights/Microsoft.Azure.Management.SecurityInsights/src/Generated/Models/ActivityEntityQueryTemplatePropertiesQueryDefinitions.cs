// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Activity query definitions
    /// </summary>
    public partial class ActivityEntityQueryTemplatePropertiesQueryDefinitions
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ActivityEntityQueryTemplatePropertiesQueryDefinitions class.
        /// </summary>
        public ActivityEntityQueryTemplatePropertiesQueryDefinitions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ActivityEntityQueryTemplatePropertiesQueryDefinitions class.
        /// </summary>
        /// <param name="query">The Activity query to run on a given
        /// entity</param>
        /// <param name="summarizeBy">The dimensions we want to summarize the
        /// timeline results on, this is comma separated list</param>
        public ActivityEntityQueryTemplatePropertiesQueryDefinitions(string query = default(string), string summarizeBy = default(string))
        {
            Query = query;
            SummarizeBy = summarizeBy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Activity query to run on a given entity
        /// </summary>
        [JsonProperty(PropertyName = "query")]
        public string Query { get; set; }

        /// <summary>
        /// Gets or sets the dimensions we want to summarize the timeline
        /// results on, this is comma separated list
        /// </summary>
        [JsonProperty(PropertyName = "summarizeBy")]
        public string SummarizeBy { get; set; }

    }
}
