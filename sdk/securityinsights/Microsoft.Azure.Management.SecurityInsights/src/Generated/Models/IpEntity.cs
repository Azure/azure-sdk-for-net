// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents an ip entity.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Ip")]
    [Rest.Serialization.JsonTransformation]
    public partial class IpEntity : Entity
    {
        /// <summary>
        /// Initializes a new instance of the IpEntity class.
        /// </summary>
        public IpEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IpEntity class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="additionalData">A bag of custom fields that should be
        /// part of the entity and will be presented to the user.</param>
        /// <param name="friendlyName">The graph item display name which is a
        /// short humanly readable description of the graph item instance. This
        /// property is optional and might be system generated.</param>
        /// <param name="address">The IP address as string, e.g. 127.0.0.1
        /// (either in Ipv4 or Ipv6)</param>
        /// <param name="location">The geo-location context attached to the ip
        /// entity</param>
        /// <param name="threatIntelligence">A list of TI contexts attached to
        /// the ip entity.</param>
        public IpEntity(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, object> additionalData = default(IDictionary<string, object>), string friendlyName = default(string), string address = default(string), GeoLocation location = default(GeoLocation), IList<ThreatIntelligence> threatIntelligence = default(IList<ThreatIntelligence>))
            : base(id, name, type, systemData)
        {
            AdditionalData = additionalData;
            FriendlyName = friendlyName;
            Address = address;
            Location = location;
            ThreatIntelligence = threatIntelligence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a bag of custom fields that should be part of the entity and
        /// will be presented to the user.
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalData")]
        public IDictionary<string, object> AdditionalData { get; private set; }

        /// <summary>
        /// Gets the graph item display name which is a short humanly readable
        /// description of the graph item instance. This property is optional
        /// and might be system generated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; private set; }

        /// <summary>
        /// Gets the IP address as string, e.g. 127.0.0.1 (either in Ipv4 or
        /// Ipv6)
        /// </summary>
        [JsonProperty(PropertyName = "properties.address")]
        public string Address { get; private set; }

        /// <summary>
        /// Gets or sets the geo-location context attached to the ip entity
        /// </summary>
        [JsonProperty(PropertyName = "properties.location")]
        public GeoLocation Location { get; set; }

        /// <summary>
        /// Gets a list of TI contexts attached to the ip entity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.threatIntelligence")]
        public IList<ThreatIntelligence> ThreatIntelligence { get; private set; }

    }
}
