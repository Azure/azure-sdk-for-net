// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents an IoT device entity.
    /// </summary>
    [Newtonsoft.Json.JsonObject("IoTDevice")]
    [Rest.Serialization.JsonTransformation]
    public partial class IoTDeviceEntity : Entity
    {
        /// <summary>
        /// Initializes a new instance of the IoTDeviceEntity class.
        /// </summary>
        public IoTDeviceEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IoTDeviceEntity class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="additionalData">A bag of custom fields that should be
        /// part of the entity and will be presented to the user.</param>
        /// <param name="friendlyName">The graph item display name which is a
        /// short humanly readable description of the graph item instance. This
        /// property is optional and might be system generated.</param>
        /// <param name="deviceId">The ID of the IoT Device in the IoT
        /// Hub</param>
        /// <param name="deviceName">The friendly name of the device</param>
        /// <param name="source">The source of the device</param>
        /// <param name="iotSecurityAgentId">The ID of the security agent
        /// running on the device</param>
        /// <param name="deviceType">The type of the device</param>
        /// <param name="vendor">The vendor of the device</param>
        /// <param name="edgeId">The ID of the edge device</param>
        /// <param name="macAddress">The MAC address of the device</param>
        /// <param name="model">The model of the device</param>
        /// <param name="serialNumber">The serial number of the device</param>
        /// <param name="firmwareVersion">The firmware version of the
        /// device</param>
        /// <param name="operatingSystem">The operating system of the
        /// device</param>
        /// <param name="iotHubEntityId">The AzureResource entity id of the IoT
        /// Hub</param>
        /// <param name="hostEntityId">The Host entity id of this
        /// device</param>
        /// <param name="ipAddressEntityId">The IP entity if of this
        /// device</param>
        /// <param name="threatIntelligence">A list of TI contexts attached to
        /// the IoTDevice entity.</param>
        /// <param name="protocols">A list of protocols of the IoTDevice
        /// entity.</param>
        public IoTDeviceEntity(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, object> additionalData = default(IDictionary<string, object>), string friendlyName = default(string), string deviceId = default(string), string deviceName = default(string), string source = default(string), System.Guid? iotSecurityAgentId = default(System.Guid?), string deviceType = default(string), string vendor = default(string), string edgeId = default(string), string macAddress = default(string), string model = default(string), string serialNumber = default(string), string firmwareVersion = default(string), string operatingSystem = default(string), string iotHubEntityId = default(string), string hostEntityId = default(string), string ipAddressEntityId = default(string), IList<ThreatIntelligence> threatIntelligence = default(IList<ThreatIntelligence>), IList<string> protocols = default(IList<string>))
            : base(id, name, type, systemData)
        {
            AdditionalData = additionalData;
            FriendlyName = friendlyName;
            DeviceId = deviceId;
            DeviceName = deviceName;
            Source = source;
            IotSecurityAgentId = iotSecurityAgentId;
            DeviceType = deviceType;
            Vendor = vendor;
            EdgeId = edgeId;
            MacAddress = macAddress;
            Model = model;
            SerialNumber = serialNumber;
            FirmwareVersion = firmwareVersion;
            OperatingSystem = operatingSystem;
            IotHubEntityId = iotHubEntityId;
            HostEntityId = hostEntityId;
            IpAddressEntityId = ipAddressEntityId;
            ThreatIntelligence = threatIntelligence;
            Protocols = protocols;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a bag of custom fields that should be part of the entity and
        /// will be presented to the user.
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalData")]
        public IDictionary<string, object> AdditionalData { get; private set; }

        /// <summary>
        /// Gets the graph item display name which is a short humanly readable
        /// description of the graph item instance. This property is optional
        /// and might be system generated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; private set; }

        /// <summary>
        /// Gets the ID of the IoT Device in the IoT Hub
        /// </summary>
        [JsonProperty(PropertyName = "properties.deviceId")]
        public string DeviceId { get; private set; }

        /// <summary>
        /// Gets the friendly name of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.deviceName")]
        public string DeviceName { get; private set; }

        /// <summary>
        /// Gets the source of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.source")]
        public string Source { get; private set; }

        /// <summary>
        /// Gets the ID of the security agent running on the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.iotSecurityAgentId")]
        public System.Guid? IotSecurityAgentId { get; private set; }

        /// <summary>
        /// Gets the type of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.deviceType")]
        public string DeviceType { get; private set; }

        /// <summary>
        /// Gets the vendor of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.vendor")]
        public string Vendor { get; private set; }

        /// <summary>
        /// Gets the ID of the edge device
        /// </summary>
        [JsonProperty(PropertyName = "properties.edgeId")]
        public string EdgeId { get; private set; }

        /// <summary>
        /// Gets the MAC address of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.macAddress")]
        public string MacAddress { get; private set; }

        /// <summary>
        /// Gets the model of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.model")]
        public string Model { get; private set; }

        /// <summary>
        /// Gets the serial number of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.serialNumber")]
        public string SerialNumber { get; private set; }

        /// <summary>
        /// Gets the firmware version of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.firmwareVersion")]
        public string FirmwareVersion { get; private set; }

        /// <summary>
        /// Gets the operating system of the device
        /// </summary>
        [JsonProperty(PropertyName = "properties.operatingSystem")]
        public string OperatingSystem { get; private set; }

        /// <summary>
        /// Gets the AzureResource entity id of the IoT Hub
        /// </summary>
        [JsonProperty(PropertyName = "properties.iotHubEntityId")]
        public string IotHubEntityId { get; private set; }

        /// <summary>
        /// Gets the Host entity id of this device
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostEntityId")]
        public string HostEntityId { get; private set; }

        /// <summary>
        /// Gets the IP entity if of this device
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipAddressEntityId")]
        public string IpAddressEntityId { get; private set; }

        /// <summary>
        /// Gets a list of TI contexts attached to the IoTDevice entity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.threatIntelligence")]
        public IList<ThreatIntelligence> ThreatIntelligence { get; private set; }

        /// <summary>
        /// Gets a list of protocols of the IoTDevice entity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.protocols")]
        public IList<string> Protocols { get; private set; }

    }
}
