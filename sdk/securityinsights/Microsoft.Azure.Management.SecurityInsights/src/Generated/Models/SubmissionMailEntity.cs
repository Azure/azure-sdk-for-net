// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a submission mail entity.
    /// </summary>
    [Newtonsoft.Json.JsonObject("SubmissionMail")]
    [Rest.Serialization.JsonTransformation]
    public partial class SubmissionMailEntity : Entity
    {
        /// <summary>
        /// Initializes a new instance of the SubmissionMailEntity class.
        /// </summary>
        public SubmissionMailEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubmissionMailEntity class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="additionalData">A bag of custom fields that should be
        /// part of the entity and will be presented to the user.</param>
        /// <param name="friendlyName">The graph item display name which is a
        /// short humanly readable description of the graph item instance. This
        /// property is optional and might be system generated.</param>
        /// <param name="networkMessageId">The network message id of email to
        /// which submission belongs</param>
        /// <param name="submissionId">The submission id</param>
        /// <param name="submitter">The submitter</param>
        /// <param name="submissionDate">The submission date</param>
        /// <param name="timestamp">The Time stamp when the message is received
        /// (Mail)</param>
        /// <param name="recipient">The recipient of the mail</param>
        /// <param name="sender">The sender of the mail</param>
        /// <param name="senderIp">The sender's IP</param>
        /// <param name="subject">The subject of submission mail</param>
        /// <param name="reportType">The submission type for the given
        /// instance. This maps to Junk, Phish, Malware or NotJunk.</param>
        public SubmissionMailEntity(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, object> additionalData = default(IDictionary<string, object>), string friendlyName = default(string), System.Guid? networkMessageId = default(System.Guid?), System.Guid? submissionId = default(System.Guid?), string submitter = default(string), System.DateTime? submissionDate = default(System.DateTime?), System.DateTime? timestamp = default(System.DateTime?), string recipient = default(string), string sender = default(string), string senderIp = default(string), string subject = default(string), string reportType = default(string))
            : base(id, name, type, systemData)
        {
            AdditionalData = additionalData;
            FriendlyName = friendlyName;
            NetworkMessageId = networkMessageId;
            SubmissionId = submissionId;
            Submitter = submitter;
            SubmissionDate = submissionDate;
            Timestamp = timestamp;
            Recipient = recipient;
            Sender = sender;
            SenderIp = senderIp;
            Subject = subject;
            ReportType = reportType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a bag of custom fields that should be part of the entity and
        /// will be presented to the user.
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalData")]
        public IDictionary<string, object> AdditionalData { get; private set; }

        /// <summary>
        /// Gets the graph item display name which is a short humanly readable
        /// description of the graph item instance. This property is optional
        /// and might be system generated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; private set; }

        /// <summary>
        /// Gets the network message id of email to which submission belongs
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkMessageId")]
        public System.Guid? NetworkMessageId { get; private set; }

        /// <summary>
        /// Gets the submission id
        /// </summary>
        [JsonProperty(PropertyName = "properties.submissionId")]
        public System.Guid? SubmissionId { get; private set; }

        /// <summary>
        /// Gets the submitter
        /// </summary>
        [JsonProperty(PropertyName = "properties.submitter")]
        public string Submitter { get; private set; }

        /// <summary>
        /// Gets the submission date
        /// </summary>
        [JsonProperty(PropertyName = "properties.submissionDate")]
        public System.DateTime? SubmissionDate { get; private set; }

        /// <summary>
        /// Gets the Time stamp when the message is received (Mail)
        /// </summary>
        [JsonProperty(PropertyName = "properties.timestamp")]
        public System.DateTime? Timestamp { get; private set; }

        /// <summary>
        /// Gets the recipient of the mail
        /// </summary>
        [JsonProperty(PropertyName = "properties.recipient")]
        public string Recipient { get; private set; }

        /// <summary>
        /// Gets the sender of the mail
        /// </summary>
        [JsonProperty(PropertyName = "properties.sender")]
        public string Sender { get; private set; }

        /// <summary>
        /// Gets the sender's IP
        /// </summary>
        [JsonProperty(PropertyName = "properties.senderIp")]
        public string SenderIp { get; private set; }

        /// <summary>
        /// Gets the subject of submission mail
        /// </summary>
        [JsonProperty(PropertyName = "properties.subject")]
        public string Subject { get; private set; }

        /// <summary>
        /// Gets the submission type for the given instance. This maps to Junk,
        /// Phish, Malware or NotJunk.
        /// </summary>
        [JsonProperty(PropertyName = "properties.reportType")]
        public string ReportType { get; private set; }

    }
}
