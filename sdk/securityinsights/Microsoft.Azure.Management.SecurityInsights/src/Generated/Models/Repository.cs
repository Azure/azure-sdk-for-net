// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// metadata of a repository.
    /// </summary>
    public partial class Repository
    {
        /// <summary>
        /// Initializes a new instance of the Repository class.
        /// </summary>
        public Repository()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Repository class.
        /// </summary>
        /// <param name="url">Url of repository.</param>
        /// <param name="branch">Branch name of repository.</param>
        /// <param name="displayUrl">Display url of repository.</param>
        /// <param name="deploymentLogsUrl">Url to access repository action
        /// logs.</param>
        /// <param name="pathMapping">Dictionary of source control content type
        /// and path mapping.</param>
        public Repository(string url = default(string), string branch = default(string), string displayUrl = default(string), string deploymentLogsUrl = default(string), IList<ContentPathMap> pathMapping = default(IList<ContentPathMap>))
        {
            Url = url;
            Branch = branch;
            DisplayUrl = displayUrl;
            DeploymentLogsUrl = deploymentLogsUrl;
            PathMapping = pathMapping;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets url of repository.
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets branch name of repository.
        /// </summary>
        [JsonProperty(PropertyName = "branch")]
        public string Branch { get; set; }

        /// <summary>
        /// Gets or sets display url of repository.
        /// </summary>
        [JsonProperty(PropertyName = "displayUrl")]
        public string DisplayUrl { get; set; }

        /// <summary>
        /// Gets or sets url to access repository action logs.
        /// </summary>
        [JsonProperty(PropertyName = "deploymentLogsUrl")]
        public string DeploymentLogsUrl { get; set; }

        /// <summary>
        /// Gets or sets dictionary of source control content type and path
        /// mapping.
        /// </summary>
        [JsonProperty(PropertyName = "pathMapping")]
        public IList<ContentPathMap> PathMapping { get; set; }

    }
}
