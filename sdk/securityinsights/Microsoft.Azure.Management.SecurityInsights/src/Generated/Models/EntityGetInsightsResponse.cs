// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Get Insights result operation response.
    /// </summary>
    public partial class EntityGetInsightsResponse
    {
        /// <summary>
        /// Initializes a new instance of the EntityGetInsightsResponse class.
        /// </summary>
        public EntityGetInsightsResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EntityGetInsightsResponse class.
        /// </summary>
        /// <param name="metaData">The metadata from the get insights operation
        /// results.</param>
        /// <param name="value">The insights result values.</param>
        public EntityGetInsightsResponse(GetInsightsResultsMetadata metaData = default(GetInsightsResultsMetadata), IList<EntityInsightItem> value = default(IList<EntityInsightItem>))
        {
            MetaData = metaData;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the metadata from the get insights operation results.
        /// </summary>
        [JsonProperty(PropertyName = "metaData")]
        public GetInsightsResultsMetadata MetaData { get; set; }

        /// <summary>
        /// Gets or sets the insights result values.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public IList<EntityInsightItem> Value { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MetaData != null)
            {
                MetaData.Validate();
            }
        }
    }
}
