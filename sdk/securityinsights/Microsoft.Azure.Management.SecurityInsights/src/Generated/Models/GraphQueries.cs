// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The graph query to show the current data status
    /// </summary>
    public partial class GraphQueries
    {
        /// <summary>
        /// Initializes a new instance of the GraphQueries class.
        /// </summary>
        public GraphQueries()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GraphQueries class.
        /// </summary>
        /// <param name="metricName">the metric that the query is
        /// checking</param>
        /// <param name="legend">The legend for the graph</param>
        /// <param name="baseQuery">The base query for the graph</param>
        public GraphQueries(string metricName = default(string), string legend = default(string), string baseQuery = default(string))
        {
            MetricName = metricName;
            Legend = legend;
            BaseQuery = baseQuery;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the metric that the query is checking
        /// </summary>
        [JsonProperty(PropertyName = "metricName")]
        public string MetricName { get; set; }

        /// <summary>
        /// Gets or sets the legend for the graph
        /// </summary>
        [JsonProperty(PropertyName = "legend")]
        public string Legend { get; set; }

        /// <summary>
        /// Gets or sets the base query for the graph
        /// </summary>
        [JsonProperty(PropertyName = "baseQuery")]
        public string BaseQuery { get; set; }

    }
}
