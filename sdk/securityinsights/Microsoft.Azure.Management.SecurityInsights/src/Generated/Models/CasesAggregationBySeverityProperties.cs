// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Aggregative results of cases by severity property bag.
    /// </summary>
    public partial class CasesAggregationBySeverityProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CasesAggregationBySeverityProperties class.
        /// </summary>
        public CasesAggregationBySeverityProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CasesAggregationBySeverityProperties class.
        /// </summary>
        /// <param name="totalCriticalSeverity">Total amount of open cases with
        /// severity Critical</param>
        /// <param name="totalHighSeverity">Total amount of open cases with
        /// severity High</param>
        /// <param name="totalInformationalSeverity">Total amount of open cases
        /// with severity Informational</param>
        /// <param name="totalLowSeverity">Total amount of open cases with
        /// severity Low</param>
        /// <param name="totalMediumSeverity">Total amount of open cases with
        /// severity medium</param>
        public CasesAggregationBySeverityProperties(int? totalCriticalSeverity = default(int?), int? totalHighSeverity = default(int?), int? totalInformationalSeverity = default(int?), int? totalLowSeverity = default(int?), int? totalMediumSeverity = default(int?))
        {
            TotalCriticalSeverity = totalCriticalSeverity;
            TotalHighSeverity = totalHighSeverity;
            TotalInformationalSeverity = totalInformationalSeverity;
            TotalLowSeverity = totalLowSeverity;
            TotalMediumSeverity = totalMediumSeverity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets total amount of open cases with severity Critical
        /// </summary>
        [JsonProperty(PropertyName = "totalCriticalSeverity")]
        public int? TotalCriticalSeverity { get; private set; }

        /// <summary>
        /// Gets total amount of open cases with severity High
        /// </summary>
        [JsonProperty(PropertyName = "totalHighSeverity")]
        public int? TotalHighSeverity { get; private set; }

        /// <summary>
        /// Gets total amount of open cases with severity Informational
        /// </summary>
        [JsonProperty(PropertyName = "totalInformationalSeverity")]
        public int? TotalInformationalSeverity { get; private set; }

        /// <summary>
        /// Gets total amount of open cases with severity Low
        /// </summary>
        [JsonProperty(PropertyName = "totalLowSeverity")]
        public int? TotalLowSeverity { get; private set; }

        /// <summary>
        /// Gets total amount of open cases with severity medium
        /// </summary>
        [JsonProperty(PropertyName = "totalMediumSeverity")]
        public int? TotalMediumSeverity { get; private set; }

    }
}
