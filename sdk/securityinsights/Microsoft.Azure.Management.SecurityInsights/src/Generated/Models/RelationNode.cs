// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Relation node
    /// </summary>
    public partial class RelationNode
    {
        /// <summary>
        /// Initializes a new instance of the RelationNode class.
        /// </summary>
        public RelationNode()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RelationNode class.
        /// </summary>
        /// <param name="relationNodeId">Relation Node Id</param>
        /// <param name="relationNodeKind">The type of relation node. Possible
        /// values include: 'Case', 'Bookmark'</param>
        /// <param name="etag">Etag for relation node</param>
        /// <param name="relationAdditionalProperties">Additional set of
        /// properties</param>
        public RelationNode(string relationNodeId = default(string), string relationNodeKind = default(string), string etag = default(string), IDictionary<string, string> relationAdditionalProperties = default(IDictionary<string, string>))
        {
            RelationNodeId = relationNodeId;
            RelationNodeKind = relationNodeKind;
            Etag = etag;
            RelationAdditionalProperties = relationAdditionalProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets relation Node Id
        /// </summary>
        [JsonProperty(PropertyName = "relationNodeId")]
        public string RelationNodeId { get; set; }

        /// <summary>
        /// Gets the type of relation node. Possible values include: 'Case',
        /// 'Bookmark'
        /// </summary>
        [JsonProperty(PropertyName = "relationNodeKind")]
        public string RelationNodeKind { get; private set; }

        /// <summary>
        /// Gets or sets etag for relation node
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Gets or sets additional set of properties
        /// </summary>
        [JsonProperty(PropertyName = "relationAdditionalProperties")]
        public IDictionary<string, string> RelationAdditionalProperties { get; set; }

    }
}
