// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a case relation
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CaseRelation : RelationBase
    {
        /// <summary>
        /// Initializes a new instance of the CaseRelation class.
        /// </summary>
        public CaseRelation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CaseRelation class.
        /// </summary>
        /// <param name="relationName">Name of relation</param>
        /// <param name="bookmarkId">The case related bookmark id</param>
        /// <param name="caseIdentifier">The case identifier</param>
        /// <param name="id">Azure resource Id</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="kind">The type of relation node. Possible values
        /// include: 'CasesToBookmarks'</param>
        /// <param name="etag">ETag for relation</param>
        /// <param name="bookmarkName">The case related bookmark name</param>
        public CaseRelation(string relationName, string bookmarkId, string caseIdentifier, string id = default(string), string name = default(string), string type = default(string), string kind = default(string), string etag = default(string), string bookmarkName = default(string))
            : base(id, name, type, kind, etag)
        {
            RelationName = relationName;
            BookmarkId = bookmarkId;
            CaseIdentifier = caseIdentifier;
            BookmarkName = bookmarkName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of relation
        /// </summary>
        [JsonProperty(PropertyName = "properties.relationName")]
        public string RelationName { get; set; }

        /// <summary>
        /// Gets or sets the case related bookmark id
        /// </summary>
        [JsonProperty(PropertyName = "properties.bookmarkId")]
        public string BookmarkId { get; set; }

        /// <summary>
        /// Gets or sets the case identifier
        /// </summary>
        [JsonProperty(PropertyName = "properties.caseIdentifier")]
        public string CaseIdentifier { get; set; }

        /// <summary>
        /// Gets or sets the case related bookmark name
        /// </summary>
        [JsonProperty(PropertyName = "properties.bookmarkName")]
        public string BookmarkName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RelationName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RelationName");
            }
            if (BookmarkId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BookmarkId");
            }
            if (CaseIdentifier == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CaseIdentifier");
            }
        }
    }
}
