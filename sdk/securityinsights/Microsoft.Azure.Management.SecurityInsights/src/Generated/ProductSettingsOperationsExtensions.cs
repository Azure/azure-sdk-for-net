// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ProductSettingsOperations.
    /// </summary>
    public static partial class ProductSettingsOperationsExtensions
    {
            /// <summary>
            /// List of all the settings
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            public static SettingList List(this IProductSettingsOperations operations, string resourceGroupName, string workspaceName)
            {
                return operations.ListAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List of all the settings
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SettingList> ListAsync(this IProductSettingsOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='settingsName'>
            /// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
            /// </param>
            public static Settings Get(this IProductSettingsOperations operations, string resourceGroupName, string workspaceName, string settingsName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName, settingsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='settingsName'>
            /// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Settings> GetAsync(this IProductSettingsOperations operations, string resourceGroupName, string workspaceName, string settingsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, settingsName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete setting of the product.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='settingsName'>
            /// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
            /// </param>
            public static void Delete(this IProductSettingsOperations operations, string resourceGroupName, string workspaceName, string settingsName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceName, settingsName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete setting of the product.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='settingsName'>
            /// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IProductSettingsOperations operations, string resourceGroupName, string workspaceName, string settingsName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, settingsName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='settingsName'>
            /// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
            /// </param>
            /// <param name='settings'>
            /// The setting
            /// </param>
            public static Settings Update(this IProductSettingsOperations operations, string resourceGroupName, string workspaceName, string settingsName, Settings settings)
            {
                return operations.UpdateAsync(resourceGroupName, workspaceName, settingsName, settings).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates setting.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='settingsName'>
            /// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
            /// </param>
            /// <param name='settings'>
            /// The setting
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Settings> UpdateAsync(this IProductSettingsOperations operations, string resourceGroupName, string workspaceName, string settingsName, Settings settings, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, settingsName, settings, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
