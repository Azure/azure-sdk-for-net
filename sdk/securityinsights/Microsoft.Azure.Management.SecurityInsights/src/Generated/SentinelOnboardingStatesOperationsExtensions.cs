// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SecurityInsights
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SentinelOnboardingStatesOperations.
    /// </summary>
    public static partial class SentinelOnboardingStatesOperationsExtensions
    {
            /// <summary>
            /// Get Sentinel onboarding state
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='sentinelOnboardingStateName'>
            /// The Sentinel onboarding state name. Supports - default
            /// </param>
            public static SentinelOnboardingState Get(this ISentinelOnboardingStatesOperations operations, string resourceGroupName, string workspaceName, string sentinelOnboardingStateName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName, sentinelOnboardingStateName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Sentinel onboarding state
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='sentinelOnboardingStateName'>
            /// The Sentinel onboarding state name. Supports - default
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SentinelOnboardingState> GetAsync(this ISentinelOnboardingStatesOperations operations, string resourceGroupName, string workspaceName, string sentinelOnboardingStateName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, sentinelOnboardingStateName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create Sentinel onboarding state
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='sentinelOnboardingStateName'>
            /// The Sentinel onboarding state name. Supports - default
            /// </param>
            /// <param name='etag'>
            /// Etag of the azure resource
            /// </param>
            /// <param name='customerManagedKey'>
            /// Flag that indicates the status of the CMK setting
            /// </param>
            public static SentinelOnboardingState Create(this ISentinelOnboardingStatesOperations operations, string resourceGroupName, string workspaceName, string sentinelOnboardingStateName, string etag = default(string), bool? customerManagedKey = default(bool?))
            {
                return operations.CreateAsync(resourceGroupName, workspaceName, sentinelOnboardingStateName, etag, customerManagedKey).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create Sentinel onboarding state
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='sentinelOnboardingStateName'>
            /// The Sentinel onboarding state name. Supports - default
            /// </param>
            /// <param name='etag'>
            /// Etag of the azure resource
            /// </param>
            /// <param name='customerManagedKey'>
            /// Flag that indicates the status of the CMK setting
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SentinelOnboardingState> CreateAsync(this ISentinelOnboardingStatesOperations operations, string resourceGroupName, string workspaceName, string sentinelOnboardingStateName, string etag = default(string), bool? customerManagedKey = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, workspaceName, sentinelOnboardingStateName, etag, customerManagedKey, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete Sentinel onboarding state
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='sentinelOnboardingStateName'>
            /// The Sentinel onboarding state name. Supports - default
            /// </param>
            public static void Delete(this ISentinelOnboardingStatesOperations operations, string resourceGroupName, string workspaceName, string sentinelOnboardingStateName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceName, sentinelOnboardingStateName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Sentinel onboarding state
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='sentinelOnboardingStateName'>
            /// The Sentinel onboarding state name. Supports - default
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ISentinelOnboardingStatesOperations operations, string resourceGroupName, string workspaceName, string sentinelOnboardingStateName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, sentinelOnboardingStateName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets all Sentinel onboarding states
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            public static SentinelOnboardingStatesList List(this ISentinelOnboardingStatesOperations operations, string resourceGroupName, string workspaceName)
            {
                return operations.ListAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all Sentinel onboarding states
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SentinelOnboardingStatesList> ListAsync(this ISentinelOnboardingStatesOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
