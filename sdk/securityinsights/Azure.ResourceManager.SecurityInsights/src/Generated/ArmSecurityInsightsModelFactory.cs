// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityInsights;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmSecurityInsightsModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsAlertRuleData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> The alert rule kind. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsAlertRuleData"/> instance for mocking. </returns>
        public static SecurityInsightsAlertRuleData SecurityInsightsAlertRuleData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string kind = "Unknown", ETag? etag = null)
        {
            return new SecurityInsightsAlertRuleData(id, name, resourceType, systemData, kind, etag);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsAlertRuleActionData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the action. </param>
        /// <param name="logicAppResourceId"> Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}. </param>
        /// <param name="workflowId"> The name of the logic app's workflow. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsAlertRuleActionData"/> instance for mocking. </returns>
        public static SecurityInsightsAlertRuleActionData SecurityInsightsAlertRuleActionData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, ResourceIdentifier logicAppResourceId = null, string workflowId = null)
        {
            return new SecurityInsightsAlertRuleActionData(id, name, resourceType, systemData, etag, logicAppResourceId, workflowId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAlertRuleActionCreateOrUpdateContent"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="logicAppResourceId"> Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}. </param>
        /// <param name="triggerUri"> Logic App Callback URL for this specific workflow. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAlertRuleActionCreateOrUpdateContent"/> instance for mocking. </returns>
        public static SecurityInsightsAlertRuleActionCreateOrUpdateContent SecurityInsightsAlertRuleActionCreateOrUpdateContent(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ResourceIdentifier logicAppResourceId = null, Uri triggerUri = null, ETag? etag = null)
        {
            return new SecurityInsightsAlertRuleActionCreateOrUpdateContent(id, name, resourceType, systemData, logicAppResourceId, triggerUri, etag);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsAlertRuleTemplateData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> The alert rule kind. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsAlertRuleTemplateData"/> instance for mocking. </returns>
        public static SecurityInsightsAlertRuleTemplateData SecurityInsightsAlertRuleTemplateData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string kind = "Unknown")
        {
            return new SecurityInsightsAlertRuleTemplateData(id, name, resourceType, systemData, kind);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsAutomationRuleData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="displayName"> The display name of the automation rule. </param>
        /// <param name="order"> The order of execution of the automation rule. </param>
        /// <param name="triggeringLogic"> Describes automation rule triggering logic. </param>
        /// <param name="actions">
        /// The actions to execute when the automation rule is triggered.
        /// Please note <see cref="SecurityInsightsAutomationRuleAction"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AutomationRuleModifyPropertiesAction"/> and <see cref="AutomationRuleRunPlaybookAction"/>.
        /// </param>
        /// <param name="lastModifiedOn"> The last time the automation rule was updated. </param>
        /// <param name="createdOn"> The time the automation rule was created. </param>
        /// <param name="lastModifiedBy"> Information on the client (user or application) that made some action. </param>
        /// <param name="createdBy"> Information on the client (user or application) that made some action. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsAutomationRuleData"/> instance for mocking. </returns>
        public static SecurityInsightsAutomationRuleData SecurityInsightsAutomationRuleData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string displayName = null, int order = default, SecurityInsightsAutomationRuleTriggeringLogic triggeringLogic = null, IEnumerable<SecurityInsightsAutomationRuleAction> actions = null, DateTimeOffset? lastModifiedOn = null, DateTimeOffset? createdOn = null, SecurityInsightsClientInfo lastModifiedBy = null, SecurityInsightsClientInfo createdBy = null, ETag? etag = null)
        {
            actions ??= new List<SecurityInsightsAutomationRuleAction>();

            return new SecurityInsightsAutomationRuleData(id, name, resourceType, systemData, displayName, order, triggeringLogic, actions?.ToList(), lastModifiedOn, createdOn, lastModifiedBy, createdBy, etag);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsClientInfo"/>. </summary>
        /// <param name="email"> The email of the client. </param>
        /// <param name="name"> The name of the client. </param>
        /// <param name="objectId"> The object id of the client. </param>
        /// <param name="userPrincipalName"> The user principal name of the client. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsClientInfo"/> instance for mocking. </returns>
        public static SecurityInsightsClientInfo SecurityInsightsClientInfo(string email = null, string name = null, Guid? objectId = null, string userPrincipalName = null)
        {
            return new SecurityInsightsClientInfo(email, name, objectId, userPrincipalName);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsBookmarkData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="createdOn"> The time the bookmark was created. </param>
        /// <param name="createdBy"> Describes a user that created the bookmark. </param>
        /// <param name="displayName"> The display name of the bookmark. </param>
        /// <param name="labels"> List of labels relevant to this bookmark. </param>
        /// <param name="notes"> The notes of the bookmark. </param>
        /// <param name="query"> The query of the bookmark. </param>
        /// <param name="queryResult"> The query result of the bookmark. </param>
        /// <param name="updatedOn"> The last time the bookmark was updated. </param>
        /// <param name="updatedBy"> Describes a user that updated the bookmark. </param>
        /// <param name="eventOn"> The bookmark event time. </param>
        /// <param name="queryStartOn"> The start time for the query. </param>
        /// <param name="queryEndOn"> The end time for the query. </param>
        /// <param name="incidentInfo"> Describes an incident that relates to bookmark. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsBookmarkData"/> instance for mocking. </returns>
        public static SecurityInsightsBookmarkData SecurityInsightsBookmarkData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, DateTimeOffset? createdOn = null, SecurityInsightsUserInfo createdBy = null, string displayName = null, IEnumerable<string> labels = null, string notes = null, string query = null, string queryResult = null, DateTimeOffset? updatedOn = null, SecurityInsightsUserInfo updatedBy = null, DateTimeOffset? eventOn = null, DateTimeOffset? queryStartOn = null, DateTimeOffset? queryEndOn = null, SecurityInsightsBookmarkIncidentInfo incidentInfo = null, ETag? etag = null)
        {
            labels ??= new List<string>();

            return new SecurityInsightsBookmarkData(id, name, resourceType, systemData, createdOn, createdBy, displayName, labels?.ToList(), notes, query, queryResult, updatedOn, updatedBy, eventOn, queryStartOn, queryEndOn, incidentInfo, etag);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsUserInfo"/>. </summary>
        /// <param name="email"> The email of the user. </param>
        /// <param name="name"> The name of the user. </param>
        /// <param name="objectId"> The object id of the user. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsUserInfo"/> instance for mocking. </returns>
        public static SecurityInsightsUserInfo SecurityInsightsUserInfo(string email = null, string name = null, Guid? objectId = null)
        {
            return new SecurityInsightsUserInfo(email, name, objectId);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsDataConnectorData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> The data connector kind. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsDataConnectorData"/> instance for mocking. </returns>
        public static SecurityInsightsDataConnectorData SecurityInsightsDataConnectorData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string kind = "Unknown", ETag? etag = null)
        {
            return new SecurityInsightsDataConnectorData(id, name, resourceType, systemData, kind, etag);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsIncidentData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalInfo"> Additional data on the incident. </param>
        /// <param name="classification"> The reason the incident was closed. </param>
        /// <param name="classificationComment"> Describes the reason the incident was closed. </param>
        /// <param name="classificationReason"> The classification reason the incident was closed with. </param>
        /// <param name="createdOn"> The time the incident was created. </param>
        /// <param name="description"> The description of the incident. </param>
        /// <param name="firstActivityOn"> The time of the first activity in the incident. </param>
        /// <param name="incidentUri"> The deep-link url to the incident in Azure portal. </param>
        /// <param name="incidentNumber"> A sequential number. </param>
        /// <param name="labels"> List of labels relevant to this incident. </param>
        /// <param name="lastActivityOn"> The time of the last activity in the incident. </param>
        /// <param name="lastModifiedOn"> The last time the incident was updated. </param>
        /// <param name="owner"> Describes a user that the incident is assigned to. </param>
        /// <param name="relatedAnalyticRuleIds"> List of resource ids of Analytic rules related to the incident. </param>
        /// <param name="severity"> The severity of the incident. </param>
        /// <param name="status"> The status of the incident. </param>
        /// <param name="title"> The title of the incident. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsIncidentData"/> instance for mocking. </returns>
        public static SecurityInsightsIncidentData SecurityInsightsIncidentData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SecurityInsightsIncidentAdditionalInfo additionalInfo = null, SecurityInsightsIncidentClassification? classification = null, string classificationComment = null, SecurityInsightsIncidentClassificationReason? classificationReason = null, DateTimeOffset? createdOn = null, string description = null, DateTimeOffset? firstActivityOn = null, Uri incidentUri = null, int? incidentNumber = null, IEnumerable<SecurityInsightsIncidentLabel> labels = null, DateTimeOffset? lastActivityOn = null, DateTimeOffset? lastModifiedOn = null, SecurityInsightsIncidentOwnerInfo owner = null, IEnumerable<ResourceIdentifier> relatedAnalyticRuleIds = null, SecurityInsightsIncidentSeverity? severity = null, SecurityInsightsIncidentStatus? status = null, string title = null, ETag? etag = null)
        {
            labels ??= new List<SecurityInsightsIncidentLabel>();
            relatedAnalyticRuleIds ??= new List<ResourceIdentifier>();

            return new SecurityInsightsIncidentData(id, name, resourceType, systemData, additionalInfo, classification, classificationComment, classificationReason, createdOn, description, firstActivityOn, incidentUri, incidentNumber, labels?.ToList(), lastActivityOn, lastModifiedOn, owner, relatedAnalyticRuleIds?.ToList(), severity, status, title, etag);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsIncidentAdditionalInfo"/>. </summary>
        /// <param name="alertsCount"> The number of alerts in the incident. </param>
        /// <param name="bookmarksCount"> The number of bookmarks in the incident. </param>
        /// <param name="commentsCount"> The number of comments in the incident. </param>
        /// <param name="alertProductNames"> List of product names of alerts in the incident. </param>
        /// <param name="tactics"> The tactics associated with incident. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsIncidentAdditionalInfo"/> instance for mocking. </returns>
        public static SecurityInsightsIncidentAdditionalInfo SecurityInsightsIncidentAdditionalInfo(int? alertsCount = null, int? bookmarksCount = null, int? commentsCount = null, IEnumerable<string> alertProductNames = null, IEnumerable<SecurityInsightsAttackTactic> tactics = null)
        {
            alertProductNames ??= new List<string>();
            tactics ??= new List<SecurityInsightsAttackTactic>();

            return new SecurityInsightsIncidentAdditionalInfo(alertsCount, bookmarksCount, commentsCount, alertProductNames?.ToList(), tactics?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsIncidentLabel"/>. </summary>
        /// <param name="labelName"> The name of the label. </param>
        /// <param name="labelType"> The type of the label. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsIncidentLabel"/> instance for mocking. </returns>
        public static SecurityInsightsIncidentLabel SecurityInsightsIncidentLabel(string labelName = null, SecurityInsightsIncidentLabelType? labelType = null)
        {
            return new SecurityInsightsIncidentLabel(labelName, labelType);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAlert"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="alertDisplayName"> The display name of the alert. </param>
        /// <param name="alertType"> The type name of the alert. </param>
        /// <param name="compromisedEntity"> Display name of the main entity being reported on. </param>
        /// <param name="confidenceLevel"> The confidence level of this alert. </param>
        /// <param name="confidenceReasons"> The confidence reasons. </param>
        /// <param name="confidenceScore"> The confidence score of the alert. </param>
        /// <param name="confidenceScoreStatus"> The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final. </param>
        /// <param name="description"> Alert description. </param>
        /// <param name="endOn"> The impact end time of the alert (the time of the last event contributing to the alert). </param>
        /// <param name="intent"> Holds the alert intent stage(s) mapping for this alert. </param>
        /// <param name="providerAlertId"> The identifier of the alert inside the product which generated the alert. </param>
        /// <param name="processingEndOn"> The time the alert was made available for consumption. </param>
        /// <param name="productComponentName"> The name of a component inside the product which generated the alert. </param>
        /// <param name="productName"> The name of the product which published this alert. </param>
        /// <param name="productVersion"> The version of the product generating the alert. </param>
        /// <param name="remediationSteps"> Manual action items to take to remediate the alert. </param>
        /// <param name="severity"> The severity of the alert. </param>
        /// <param name="startOn"> The impact start time of the alert (the time of the first event contributing to the alert). </param>
        /// <param name="status"> The lifecycle status of the alert. </param>
        /// <param name="systemAlertId"> Holds the product identifier of the alert for the product. </param>
        /// <param name="tactics"> The tactics of the alert. </param>
        /// <param name="alertGeneratedOn"> The time the alert was generated. </param>
        /// <param name="vendorName"> The name of the vendor that raise the alert. </param>
        /// <param name="alertLink"> The uri link of the alert. </param>
        /// <param name="resourceIdentifiers"> The list of resource identifiers of the alert. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAlert"/> instance for mocking. </returns>
        public static SecurityInsightsAlert SecurityInsightsAlert(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string alertDisplayName = null, string alertType = null, string compromisedEntity = null, SecurityInsightsAlertConfidenceLevel? confidenceLevel = null, IEnumerable<SecurityInsightsAlertConfidenceReason> confidenceReasons = null, double? confidenceScore = null, SecurityInsightsAlertConfidenceScoreStatus? confidenceScoreStatus = null, string description = null, DateTimeOffset? endOn = null, SecurityInsightsKillChainIntent? intent = null, string providerAlertId = null, DateTimeOffset? processingEndOn = null, string productComponentName = null, string productName = null, string productVersion = null, IEnumerable<string> remediationSteps = null, SecurityInsightsAlertSeverity? severity = null, DateTimeOffset? startOn = null, SecurityInsightsAlertStatus? status = null, string systemAlertId = null, IEnumerable<SecurityInsightsAttackTactic> tactics = null, DateTimeOffset? alertGeneratedOn = null, string vendorName = null, string alertLink = null, IEnumerable<BinaryData> resourceIdentifiers = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            confidenceReasons ??= new List<SecurityInsightsAlertConfidenceReason>();
            remediationSteps ??= new List<string>();
            tactics ??= new List<SecurityInsightsAttackTactic>();
            resourceIdentifiers ??= new List<BinaryData>();

            return new SecurityInsightsAlert(id, name, resourceType, systemData, SecurityInsightsEntityKind.SecurityAlert, additionalData, friendlyName, alertDisplayName, alertType, compromisedEntity, confidenceLevel, confidenceReasons?.ToList(), confidenceScore, confidenceScoreStatus, description, endOn, intent, providerAlertId, processingEndOn, productComponentName, productName, productVersion, remediationSteps?.ToList(), severity, startOn, status, systemAlertId, tactics?.ToList(), alertGeneratedOn, vendorName, alertLink, resourceIdentifiers?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAlertConfidenceReason"/>. </summary>
        /// <param name="reason"> The reason's description. </param>
        /// <param name="reasonType"> The type (category) of the reason. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAlertConfidenceReason"/> instance for mocking. </returns>
        public static SecurityInsightsAlertConfidenceReason SecurityInsightsAlertConfidenceReason(string reason = null, string reasonType = null)
        {
            return new SecurityInsightsAlertConfidenceReason(reason, reasonType);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> The kind of the entity. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsEntity"/> instance for mocking. </returns>
        public static SecurityInsightsEntity SecurityInsightsEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string kind = "Unknown")
        {
            return new SecurityInsightsEntity(id, name, resourceType, systemData, kind);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsHuntingBookmark"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="createdOn"> The time the bookmark was created. </param>
        /// <param name="createdBy"> Describes a user that created the bookmark. </param>
        /// <param name="displayName"> The display name of the bookmark. </param>
        /// <param name="eventOn"> The time of the event. </param>
        /// <param name="labels"> List of labels relevant to this bookmark. </param>
        /// <param name="notes"> The notes of the bookmark. </param>
        /// <param name="query"> The query of the bookmark. </param>
        /// <param name="queryResult"> The query result of the bookmark. </param>
        /// <param name="updatedOn"> The last time the bookmark was updated. </param>
        /// <param name="updatedBy"> Describes a user that updated the bookmark. </param>
        /// <param name="incidentInfo"> Describes an incident that relates to bookmark. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsHuntingBookmark"/> instance for mocking. </returns>
        public static SecurityInsightsHuntingBookmark SecurityInsightsHuntingBookmark(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, DateTimeOffset? createdOn = null, SecurityInsightsUserInfo createdBy = null, string displayName = null, DateTimeOffset? eventOn = null, IEnumerable<string> labels = null, string notes = null, string query = null, string queryResult = null, DateTimeOffset? updatedOn = null, SecurityInsightsUserInfo updatedBy = null, SecurityInsightsBookmarkIncidentInfo incidentInfo = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            labels ??= new List<string>();

            return new SecurityInsightsHuntingBookmark(id, name, resourceType, systemData, SecurityInsightsEntityKind.Bookmark, additionalData, friendlyName, createdOn, createdBy, displayName, eventOn, labels?.ToList(), notes, query, queryResult, updatedOn, updatedBy, incidentInfo);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsIncidentCommentData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="createdOn"> The time the comment was created. </param>
        /// <param name="lastModifiedOn"> The time the comment was updated. </param>
        /// <param name="message"> The comment message. </param>
        /// <param name="author"> Describes the client that created the comment. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsIncidentCommentData"/> instance for mocking. </returns>
        public static SecurityInsightsIncidentCommentData SecurityInsightsIncidentCommentData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, DateTimeOffset? createdOn = null, DateTimeOffset? lastModifiedOn = null, string message = null, SecurityInsightsClientInfo author = null, ETag? etag = null)
        {
            return new SecurityInsightsIncidentCommentData(id, name, resourceType, systemData, createdOn, lastModifiedOn, message, author, etag);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsIncidentEntitiesResult"/>. </summary>
        /// <param name="entities">
        /// Array of the incident related entities.
        /// Please note <see cref="Models.SecurityInsightsEntity"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="Models.SecurityInsightsAccountEntity"/>, <see cref="Models.SecurityInsightsAzureResourceEntity"/>, <see cref="Models.SecurityInsightsHuntingBookmark"/>, <see cref="Models.SecurityInsightsCloudApplicationEntity"/>, <see cref="Models.SecurityInsightsDnsEntity"/>, <see cref="Models.SecurityInsightsFileEntity"/>, <see cref="Models.SecurityInsightsFileHashEntity"/>, <see cref="Models.SecurityInsightsHostEntity"/>, <see cref="Models.SecurityInsightsIotDeviceEntity"/>, <see cref="Models.SecurityInsightsIPEntity"/>, <see cref="Models.SecurityInsightsMailClusterEntity"/>, <see cref="Models.SecurityInsightsMailMessageEntity"/>, <see cref="Models.SecurityInsightsMailboxEntity"/>, <see cref="Models.SecurityInsightsMalwareEntity"/>, <see cref="Models.SecurityInsightsProcessEntity"/>, <see cref="Models.SecurityInsightsRegistryKeyEntity"/>, <see cref="Models.SecurityInsightsRegistryValueEntity"/>, <see cref="Models.SecurityInsightsAlert"/>, <see cref="Models.SecurityInsightsGroupEntity"/>, <see cref="Models.SecurityInsightsSubmissionMailEntity"/> and <see cref="Models.SecurityInsightsUriEntity"/>.
        /// </param>
        /// <param name="metaData"> The metadata from the incident related entities results. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsIncidentEntitiesResult"/> instance for mocking. </returns>
        public static SecurityInsightsIncidentEntitiesResult SecurityInsightsIncidentEntitiesResult(IEnumerable<SecurityInsightsEntity> entities = null, IEnumerable<SecurityInsightsIncidentEntitiesMetadata> metaData = null)
        {
            entities ??= new List<SecurityInsightsEntity>();
            metaData ??= new List<SecurityInsightsIncidentEntitiesMetadata>();

            return new SecurityInsightsIncidentEntitiesResult(entities?.ToList(), metaData?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsIncidentEntitiesMetadata"/>. </summary>
        /// <param name="count"> Total number of aggregations of the given kind in the incident related entities result. </param>
        /// <param name="entityKind"> The kind of the aggregated entity. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsIncidentEntitiesMetadata"/> instance for mocking. </returns>
        public static SecurityInsightsIncidentEntitiesMetadata SecurityInsightsIncidentEntitiesMetadata(int count = default, SecurityInsightsEntityKind entityKind = default)
        {
            return new SecurityInsightsIncidentEntitiesMetadata(count, entityKind);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsIncidentRelationData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="relatedResourceId"> The resource ID of the related resource. </param>
        /// <param name="relatedResourceName"> The name of the related resource. </param>
        /// <param name="relatedResourceType"> The resource type of the related resource. </param>
        /// <param name="relatedResourceKind"> The resource kind of the related resource. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsIncidentRelationData"/> instance for mocking. </returns>
        public static SecurityInsightsIncidentRelationData SecurityInsightsIncidentRelationData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ResourceIdentifier relatedResourceId = null, string relatedResourceName = null, ResourceType? relatedResourceType = null, string relatedResourceKind = null, ETag? etag = null)
        {
            return new SecurityInsightsIncidentRelationData(id, name, resourceType, systemData, relatedResourceId, relatedResourceName, relatedResourceType, relatedResourceKind, etag);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsSentinelOnboardingStateData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="isCustomerManagedKeySet"> Flag that indicates the status of the CMK setting. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsSentinelOnboardingStateData"/> instance for mocking. </returns>
        public static SecurityInsightsSentinelOnboardingStateData SecurityInsightsSentinelOnboardingStateData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, bool? isCustomerManagedKeySet = null, ETag? etag = null)
        {
            return new SecurityInsightsSentinelOnboardingStateData(id, name, resourceType, systemData, isCustomerManagedKeySet, etag);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityMLAnalyticsSettingData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> The kind of security ML Analytics Settings. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityMLAnalyticsSettingData"/> instance for mocking. </returns>
        public static SecurityMLAnalyticsSettingData SecurityMLAnalyticsSettingData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string kind = "Unknown", ETag? etag = null)
        {
            return new SecurityMLAnalyticsSettingData(id, name, resourceType, systemData, kind, etag);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsThreatIntelligenceIndicatorBaseData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> The kind of the entity. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsThreatIntelligenceIndicatorBaseData"/> instance for mocking. </returns>
        public static SecurityInsightsThreatIntelligenceIndicatorBaseData SecurityInsightsThreatIntelligenceIndicatorBaseData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string kind = "Unknown", ETag? etag = null)
        {
            return new SecurityInsightsThreatIntelligenceIndicatorBaseData(id, name, resourceType, systemData, kind, etag);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsThreatIntelligenceIndicatorData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="threatIntelligenceTags"> List of tags. </param>
        /// <param name="lastUpdatedOn"> Last updated time in UTC. </param>
        /// <param name="source"> Source of a threat intelligence entity. </param>
        /// <param name="displayName"> Display name of a threat intelligence entity. </param>
        /// <param name="description"> Description of a threat intelligence entity. </param>
        /// <param name="indicatorTypes"> Indicator types of threat intelligence entities. </param>
        /// <param name="pattern"> Pattern of a threat intelligence entity. </param>
        /// <param name="patternType"> Pattern type of a threat intelligence entity. </param>
        /// <param name="patternVersion"> Pattern version of a threat intelligence entity. </param>
        /// <param name="killChainPhases"> Kill chain phases. </param>
        /// <param name="parsedPattern"> Parsed patterns. </param>
        /// <param name="externalId"> External ID of threat intelligence entity. </param>
        /// <param name="createdByRef"> Created by reference of threat intelligence entity. </param>
        /// <param name="isDefanged"> Is threat intelligence entity defanged. </param>
        /// <param name="externalLastUpdatedOn"> External last updated time in UTC. </param>
        /// <param name="externalReferences"> External References. </param>
        /// <param name="granularMarkings"> Granular Markings. </param>
        /// <param name="labels"> Labels  of threat intelligence entity. </param>
        /// <param name="isRevoked"> Is threat intelligence entity revoked. </param>
        /// <param name="confidence"> Confidence of threat intelligence entity. </param>
        /// <param name="objectMarkingRefs"> Threat intelligence entity object marking references. </param>
        /// <param name="language"> Language of threat intelligence entity. </param>
        /// <param name="threatTypes"> Threat types. </param>
        /// <param name="validFrom"> Valid from. </param>
        /// <param name="validUntil"> Valid until. </param>
        /// <param name="createdOn"> Created by. </param>
        /// <param name="modified"> Modified by. </param>
        /// <param name="extensions"> Extensions map. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsThreatIntelligenceIndicatorData"/> instance for mocking. </returns>
        public static SecurityInsightsThreatIntelligenceIndicatorData SecurityInsightsThreatIntelligenceIndicatorData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, IEnumerable<string> threatIntelligenceTags = null, DateTimeOffset? lastUpdatedOn = null, string source = null, string displayName = null, string description = null, IEnumerable<string> indicatorTypes = null, string pattern = null, string patternType = null, string patternVersion = null, IEnumerable<ThreatIntelligenceKillChainPhase> killChainPhases = null, IEnumerable<ThreatIntelligenceParsedPattern> parsedPattern = null, string externalId = null, string createdByRef = null, bool? isDefanged = null, DateTimeOffset? externalLastUpdatedOn = null, IEnumerable<ThreatIntelligenceExternalReference> externalReferences = null, IEnumerable<ThreatIntelligenceGranularMarkingEntity> granularMarkings = null, IEnumerable<string> labels = null, bool? isRevoked = null, int? confidence = null, IEnumerable<string> objectMarkingRefs = null, string language = null, IEnumerable<string> threatTypes = null, DateTimeOffset? validFrom = null, DateTimeOffset? validUntil = null, DateTimeOffset? createdOn = null, string modified = null, IDictionary<string, BinaryData> extensions = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            threatIntelligenceTags ??= new List<string>();
            indicatorTypes ??= new List<string>();
            killChainPhases ??= new List<ThreatIntelligenceKillChainPhase>();
            parsedPattern ??= new List<ThreatIntelligenceParsedPattern>();
            externalReferences ??= new List<ThreatIntelligenceExternalReference>();
            granularMarkings ??= new List<ThreatIntelligenceGranularMarkingEntity>();
            labels ??= new List<string>();
            objectMarkingRefs ??= new List<string>();
            threatTypes ??= new List<string>();
            extensions ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsThreatIntelligenceIndicatorData(id, name, resourceType, systemData, ThreatIntelligenceResourceInnerKind.Indicator, etag, additionalData, friendlyName, threatIntelligenceTags?.ToList(), lastUpdatedOn, source, displayName, description, indicatorTypes?.ToList(), pattern, patternType, patternVersion, killChainPhases?.ToList(), parsedPattern?.ToList(), externalId, createdByRef, isDefanged, externalLastUpdatedOn, externalReferences?.ToList(), granularMarkings?.ToList(), labels?.ToList(), isRevoked, confidence, objectMarkingRefs?.ToList(), language, threatTypes?.ToList(), validFrom, validUntil, createdOn, modified, extensions);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ThreatIntelligenceMetrics"/>. </summary>
        /// <param name="properties"> Threat intelligence metrics. </param>
        /// <returns> A new <see cref="Models.ThreatIntelligenceMetrics"/> instance for mocking. </returns>
        public static ThreatIntelligenceMetrics ThreatIntelligenceMetrics(ThreatIntelligenceMetric properties = null)
        {
            return new ThreatIntelligenceMetrics(properties);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ThreatIntelligenceMetric"/>. </summary>
        /// <param name="lastUpdatedOn"> Last updated indicator metric. </param>
        /// <param name="threatTypeMetrics"> Threat type metrics. </param>
        /// <param name="patternTypeMetrics"> Pattern type metrics. </param>
        /// <param name="sourceMetrics"> Source metrics. </param>
        /// <returns> A new <see cref="Models.ThreatIntelligenceMetric"/> instance for mocking. </returns>
        public static ThreatIntelligenceMetric ThreatIntelligenceMetric(string lastUpdatedOn = null, IEnumerable<ThreatIntelligenceMetricEntity> threatTypeMetrics = null, IEnumerable<ThreatIntelligenceMetricEntity> patternTypeMetrics = null, IEnumerable<ThreatIntelligenceMetricEntity> sourceMetrics = null)
        {
            threatTypeMetrics ??= new List<ThreatIntelligenceMetricEntity>();
            patternTypeMetrics ??= new List<ThreatIntelligenceMetricEntity>();
            sourceMetrics ??= new List<ThreatIntelligenceMetricEntity>();

            return new ThreatIntelligenceMetric(lastUpdatedOn, threatTypeMetrics?.ToList(), patternTypeMetrics?.ToList(), sourceMetrics?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.ThreatIntelligenceMetricEntity"/>. </summary>
        /// <param name="metricName"> Metric name. </param>
        /// <param name="metricValue"> Metric value. </param>
        /// <returns> A new <see cref="Models.ThreatIntelligenceMetricEntity"/> instance for mocking. </returns>
        public static ThreatIntelligenceMetricEntity ThreatIntelligenceMetricEntity(string metricName = null, int? metricValue = null)
        {
            return new ThreatIntelligenceMetricEntity(metricName, metricValue);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsWatchlistData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="watchlistId"> The id (a Guid) of the watchlist. </param>
        /// <param name="displayName"> The display name of the watchlist. </param>
        /// <param name="provider"> The provider of the watchlist. </param>
        /// <param name="source"> The source of the watchlist. </param>
        /// <param name="createdOn"> The time the watchlist was created. </param>
        /// <param name="updatedOn"> The last time the watchlist was updated. </param>
        /// <param name="createdBy"> Describes a user that created the watchlist. </param>
        /// <param name="updatedBy"> Describes a user that updated the watchlist. </param>
        /// <param name="description"> A description of the watchlist. </param>
        /// <param name="watchlistType"> The type of the watchlist. </param>
        /// <param name="watchlistAlias"> The alias of the watchlist. </param>
        /// <param name="isDeleted"> A flag that indicates if the watchlist is deleted or not. </param>
        /// <param name="labels"> List of labels relevant to this watchlist. </param>
        /// <param name="defaultDuration"> The default duration of a watchlist (in ISO 8601 duration format). </param>
        /// <param name="tenantId"> The tenantId where the watchlist belongs to. </param>
        /// <param name="numberOfLinesToSkip"> The number of lines in a csv content to skip before the header. </param>
        /// <param name="rawContent">
        /// The raw content that represents to watchlist items to create. Example : This line will be skipped
        /// header1,header2
        /// value1,value2
        /// </param>
        /// <param name="itemsSearchKey"> The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address. </param>
        /// <param name="contentType"> The content type of the raw content. For now, only text/csv is valid. </param>
        /// <param name="uploadStatus"> The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsWatchlistData"/> instance for mocking. </returns>
        public static SecurityInsightsWatchlistData SecurityInsightsWatchlistData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, Guid? watchlistId = null, string displayName = null, string provider = null, Source? source = null, DateTimeOffset? createdOn = null, DateTimeOffset? updatedOn = null, SecurityInsightsUserInfo createdBy = null, SecurityInsightsUserInfo updatedBy = null, string description = null, string watchlistType = null, string watchlistAlias = null, bool? isDeleted = null, IEnumerable<string> labels = null, TimeSpan? defaultDuration = null, Guid? tenantId = null, int? numberOfLinesToSkip = null, string rawContent = null, string itemsSearchKey = null, string contentType = null, string uploadStatus = null, ETag? etag = null)
        {
            labels ??= new List<string>();

            return new SecurityInsightsWatchlistData(id, name, resourceType, systemData, watchlistId, displayName, provider, source, createdOn, updatedOn, createdBy, updatedBy, description, watchlistType, watchlistAlias, isDeleted, labels?.ToList(), defaultDuration, tenantId, numberOfLinesToSkip, rawContent, itemsSearchKey, contentType, uploadStatus, etag);
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsights.SecurityInsightsWatchlistItemData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="watchlistItemType"> The type of the watchlist item. </param>
        /// <param name="watchlistItemId"> The id (a Guid) of the watchlist item. </param>
        /// <param name="tenantId"> The tenantId to which the watchlist item belongs to. </param>
        /// <param name="isDeleted"> A flag that indicates if the watchlist item is deleted or not. </param>
        /// <param name="createdOn"> The time the watchlist item was created. </param>
        /// <param name="updatedOn"> The last time the watchlist item was updated. </param>
        /// <param name="createdBy"> Describes a user that created the watchlist item. </param>
        /// <param name="updatedBy"> Describes a user that updated the watchlist item. </param>
        /// <param name="itemsKeyValue"> key-value pairs for a watchlist item. </param>
        /// <param name="entityMapping"> key-value pairs for a watchlist item entity mapping. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <returns> A new <see cref="SecurityInsights.SecurityInsightsWatchlistItemData"/> instance for mocking. </returns>
        public static SecurityInsightsWatchlistItemData SecurityInsightsWatchlistItemData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string watchlistItemType = null, string watchlistItemId = null, Guid? tenantId = null, bool? isDeleted = null, DateTimeOffset? createdOn = null, DateTimeOffset? updatedOn = null, SecurityInsightsUserInfo createdBy = null, SecurityInsightsUserInfo updatedBy = null, BinaryData itemsKeyValue = null, BinaryData entityMapping = null, ETag? etag = null)
        {
            return new SecurityInsightsWatchlistItemData(id, name, resourceType, systemData, watchlistItemType, watchlistItemId, tenantId, isDeleted, createdOn, updatedOn, createdBy, updatedBy, itemsKeyValue, entityMapping, etag);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsFusionAlertRule"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="alertRuleTemplateName"> The Name of the alert rule template used to create this rule. </param>
        /// <param name="description"> The description of the alert rule. </param>
        /// <param name="displayName"> The display name for alerts created by this alert rule. </param>
        /// <param name="isEnabled"> Determines whether this alert rule is enabled or disabled. </param>
        /// <param name="lastModifiedOn"> The last time that this alert has been modified. </param>
        /// <param name="severity"> The severity for alerts created by this alert rule. </param>
        /// <param name="tactics"> The tactics of the alert rule. </param>
        /// <param name="techniques"> The techniques of the alert rule. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsFusionAlertRule"/> instance for mocking. </returns>
        public static SecurityInsightsFusionAlertRule SecurityInsightsFusionAlertRule(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, string alertRuleTemplateName = null, string description = null, string displayName = null, bool? isEnabled = null, DateTimeOffset? lastModifiedOn = null, SecurityInsightsAlertSeverity? severity = null, IEnumerable<SecurityInsightsAttackTactic> tactics = null, IEnumerable<string> techniques = null)
        {
            tactics ??= new List<SecurityInsightsAttackTactic>();
            techniques ??= new List<string>();

            return new SecurityInsightsFusionAlertRule(id, name, resourceType, systemData, AlertRuleKind.Fusion, etag, alertRuleTemplateName, description, displayName, isEnabled, lastModifiedOn, severity, tactics?.ToList(), techniques?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsFusionAlertRuleTemplate"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="alertRulesCreatedByTemplateCount"> the number of alert rules that were created by this template. </param>
        /// <param name="createdOn"> The time that this alert rule template has been added. </param>
        /// <param name="lastUpdatedOn"> The time that this alert rule template was last updated. </param>
        /// <param name="description"> The description of the alert rule template. </param>
        /// <param name="displayName"> The display name for alert rule template. </param>
        /// <param name="requiredDataConnectors"> The required data connectors for this template. </param>
        /// <param name="status"> The alert rule template status. </param>
        /// <param name="severity"> The severity for alerts created by this alert rule. </param>
        /// <param name="tactics"> The tactics of the alert rule template. </param>
        /// <param name="techniques"> The techniques of the alert rule template. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsFusionAlertRuleTemplate"/> instance for mocking. </returns>
        public static SecurityInsightsFusionAlertRuleTemplate SecurityInsightsFusionAlertRuleTemplate(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, int? alertRulesCreatedByTemplateCount = null, DateTimeOffset? createdOn = null, DateTimeOffset? lastUpdatedOn = null, string description = null, string displayName = null, IEnumerable<AlertRuleTemplateDataSource> requiredDataConnectors = null, SecurityInsightsAlertRuleTemplateStatus? status = null, SecurityInsightsAlertSeverity? severity = null, IEnumerable<SecurityInsightsAttackTactic> tactics = null, IEnumerable<string> techniques = null)
        {
            requiredDataConnectors ??= new List<AlertRuleTemplateDataSource>();
            tactics ??= new List<SecurityInsightsAttackTactic>();
            techniques ??= new List<string>();

            return new SecurityInsightsFusionAlertRuleTemplate(id, name, resourceType, systemData, AlertRuleKind.Fusion, alertRulesCreatedByTemplateCount, createdOn, lastUpdatedOn, description, displayName, requiredDataConnectors?.ToList(), status, severity, tactics?.ToList(), techniques?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.MicrosoftSecurityIncidentCreationAlertRule"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="displayNamesFilter"> the alerts' displayNames on which the cases will be generated. </param>
        /// <param name="displayNamesExcludeFilter"> the alerts' displayNames on which the cases will not be generated. </param>
        /// <param name="productFilter"> The alerts' productName on which the cases will be generated. </param>
        /// <param name="severitiesFilter"> the alerts' severities on which the cases will be generated. </param>
        /// <param name="alertRuleTemplateName"> The Name of the alert rule template used to create this rule. </param>
        /// <param name="description"> The description of the alert rule. </param>
        /// <param name="displayName"> The display name for alerts created by this alert rule. </param>
        /// <param name="isEnabled"> Determines whether this alert rule is enabled or disabled. </param>
        /// <param name="lastModifiedOn"> The last time that this alert has been modified. </param>
        /// <returns> A new <see cref="Models.MicrosoftSecurityIncidentCreationAlertRule"/> instance for mocking. </returns>
        public static MicrosoftSecurityIncidentCreationAlertRule MicrosoftSecurityIncidentCreationAlertRule(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, IEnumerable<string> displayNamesFilter = null, IEnumerable<string> displayNamesExcludeFilter = null, MicrosoftSecurityProductName? productFilter = null, IEnumerable<SecurityInsightsAlertSeverity> severitiesFilter = null, string alertRuleTemplateName = null, string description = null, string displayName = null, bool? isEnabled = null, DateTimeOffset? lastModifiedOn = null)
        {
            displayNamesFilter ??= new List<string>();
            displayNamesExcludeFilter ??= new List<string>();
            severitiesFilter ??= new List<SecurityInsightsAlertSeverity>();

            return new MicrosoftSecurityIncidentCreationAlertRule(id, name, resourceType, systemData, AlertRuleKind.MicrosoftSecurityIncidentCreation, etag, displayNamesFilter?.ToList(), displayNamesExcludeFilter?.ToList(), productFilter, severitiesFilter?.ToList(), alertRuleTemplateName, description, displayName, isEnabled, lastModifiedOn);
        }

        /// <summary> Initializes a new instance of <see cref="Models.MicrosoftSecurityIncidentCreationAlertRuleTemplate"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="alertRulesCreatedByTemplateCount"> the number of alert rules that were created by this template. </param>
        /// <param name="createdOn"> The time that this alert rule template has been added. </param>
        /// <param name="lastUpdatedOn"> The time that this alert rule template was last updated. </param>
        /// <param name="description"> The description of the alert rule template. </param>
        /// <param name="displayName"> The display name for alert rule template. </param>
        /// <param name="requiredDataConnectors"> The required data connectors for this template. </param>
        /// <param name="status"> The alert rule template status. </param>
        /// <param name="displayNamesFilter"> the alerts' displayNames on which the cases will be generated. </param>
        /// <param name="displayNamesExcludeFilter"> the alerts' displayNames on which the cases will not be generated. </param>
        /// <param name="productFilter"> The alerts' productName on which the cases will be generated. </param>
        /// <param name="severitiesFilter"> the alerts' severities on which the cases will be generated. </param>
        /// <returns> A new <see cref="Models.MicrosoftSecurityIncidentCreationAlertRuleTemplate"/> instance for mocking. </returns>
        public static MicrosoftSecurityIncidentCreationAlertRuleTemplate MicrosoftSecurityIncidentCreationAlertRuleTemplate(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, int? alertRulesCreatedByTemplateCount = null, DateTimeOffset? createdOn = null, DateTimeOffset? lastUpdatedOn = null, string description = null, string displayName = null, IEnumerable<AlertRuleTemplateDataSource> requiredDataConnectors = null, SecurityInsightsAlertRuleTemplateStatus? status = null, IEnumerable<string> displayNamesFilter = null, IEnumerable<string> displayNamesExcludeFilter = null, MicrosoftSecurityProductName? productFilter = null, IEnumerable<SecurityInsightsAlertSeverity> severitiesFilter = null)
        {
            requiredDataConnectors ??= new List<AlertRuleTemplateDataSource>();
            displayNamesFilter ??= new List<string>();
            displayNamesExcludeFilter ??= new List<string>();
            severitiesFilter ??= new List<SecurityInsightsAlertSeverity>();

            return new MicrosoftSecurityIncidentCreationAlertRuleTemplate(id, name, resourceType, systemData, AlertRuleKind.MicrosoftSecurityIncidentCreation, alertRulesCreatedByTemplateCount, createdOn, lastUpdatedOn, description, displayName, requiredDataConnectors?.ToList(), status, displayNamesFilter?.ToList(), displayNamesExcludeFilter?.ToList(), productFilter, severitiesFilter?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsScheduledAlertRule"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="query"> The query that creates alerts for this rule. </param>
        /// <param name="queryFrequency"> The frequency (in ISO 8601 duration format) for this alert rule to run. </param>
        /// <param name="queryPeriod"> The period (in ISO 8601 duration format) that this alert rule looks at. </param>
        /// <param name="severity"> The severity for alerts created by this alert rule. </param>
        /// <param name="triggerOperator"> The operation against the threshold that triggers alert rule. </param>
        /// <param name="triggerThreshold"> The threshold triggers this alert rule. </param>
        /// <param name="eventGroupingAggregationKind"> The event grouping settings. </param>
        /// <param name="customDetails"> Dictionary of string key-value pairs of columns to be attached to the alert. </param>
        /// <param name="entityMappings"> Array of the entity mappings of the alert rule. </param>
        /// <param name="alertDetailsOverride"> The alert details override settings. </param>
        /// <param name="alertRuleTemplateName"> The Name of the alert rule template used to create this rule. </param>
        /// <param name="templateVersion"> The version of the alert rule template used to create this rule - in format &lt;a.b.c&gt;, where all are numbers, for example 0 &lt;1.0.2&gt;. </param>
        /// <param name="description"> The description of the alert rule. </param>
        /// <param name="displayName"> The display name for alerts created by this alert rule. </param>
        /// <param name="isEnabled"> Determines whether this alert rule is enabled or disabled. </param>
        /// <param name="lastModifiedOn"> The last time that this alert rule has been modified. </param>
        /// <param name="suppressionDuration"> The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered. </param>
        /// <param name="isSuppressionEnabled"> Determines whether the suppression for this alert rule is enabled or disabled. </param>
        /// <param name="tactics"> The tactics of the alert rule. </param>
        /// <param name="techniques"> The techniques of the alert rule. </param>
        /// <param name="incidentConfiguration"> The settings of the incidents that created from alerts triggered by this analytics rule. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsScheduledAlertRule"/> instance for mocking. </returns>
        public static SecurityInsightsScheduledAlertRule SecurityInsightsScheduledAlertRule(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, string query = null, TimeSpan? queryFrequency = null, TimeSpan? queryPeriod = null, SecurityInsightsAlertSeverity? severity = null, SecurityInsightsAlertRuleTriggerOperator? triggerOperator = null, int? triggerThreshold = null, EventGroupingAggregationKind? eventGroupingAggregationKind = null, IDictionary<string, string> customDetails = null, IEnumerable<SecurityInsightsAlertRuleEntityMapping> entityMappings = null, SecurityInsightsAlertDetailsOverride alertDetailsOverride = null, string alertRuleTemplateName = null, string templateVersion = null, string description = null, string displayName = null, bool? isEnabled = null, DateTimeOffset? lastModifiedOn = null, TimeSpan? suppressionDuration = null, bool? isSuppressionEnabled = null, IEnumerable<SecurityInsightsAttackTactic> tactics = null, IEnumerable<string> techniques = null, SecurityInsightsIncidentConfiguration incidentConfiguration = null)
        {
            customDetails ??= new Dictionary<string, string>();
            entityMappings ??= new List<SecurityInsightsAlertRuleEntityMapping>();
            tactics ??= new List<SecurityInsightsAttackTactic>();
            techniques ??= new List<string>();

            return new SecurityInsightsScheduledAlertRule(id, name, resourceType, systemData, AlertRuleKind.Scheduled, etag, query, queryFrequency, queryPeriod, severity, triggerOperator, triggerThreshold, eventGroupingAggregationKind != null ? new EventGroupingSettings(eventGroupingAggregationKind) : null, customDetails, entityMappings?.ToList(), alertDetailsOverride, alertRuleTemplateName, templateVersion, description, displayName, isEnabled, lastModifiedOn, suppressionDuration, isSuppressionEnabled, tactics?.ToList(), techniques?.ToList(), incidentConfiguration);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ScheduledAlertRuleTemplate"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="alertRulesCreatedByTemplateCount"> the number of alert rules that were created by this template. </param>
        /// <param name="createdDateUTC"> The time that this alert rule template has been added. </param>
        /// <param name="lastUpdatedDateUTC"> The time that this alert rule template was last updated. </param>
        /// <param name="description"> The description of the alert rule template. </param>
        /// <param name="displayName"> The display name for alert rule template. </param>
        /// <param name="requiredDataConnectors"> The required data connectors for this template. </param>
        /// <param name="status"> The alert rule template status. </param>
        /// <param name="query"> The query that creates alerts for this rule. </param>
        /// <param name="queryFrequency"> The frequency (in ISO 8601 duration format) for this alert rule to run. </param>
        /// <param name="queryPeriod"> The period (in ISO 8601 duration format) that this alert rule looks at. </param>
        /// <param name="severity"> The severity for alerts created by this alert rule. </param>
        /// <param name="triggerOperator"> The operation against the threshold that triggers alert rule. </param>
        /// <param name="triggerThreshold"> The threshold triggers this alert rule. </param>
        /// <param name="tactics"> The tactics of the alert rule template. </param>
        /// <param name="techniques"> The techniques of the alert rule template. </param>
        /// <param name="version"> The version of this template - in format &lt;a.b.c&gt;, where all are numbers. For example &lt;1.0.2&gt;. </param>
        /// <param name="eventGroupingAggregationKind"> The event grouping settings. </param>
        /// <param name="customDetails"> Dictionary of string key-value pairs of columns to be attached to the alert. </param>
        /// <param name="entityMappings"> Array of the entity mappings of the alert rule. </param>
        /// <param name="alertDetailsOverride"> The alert details override settings. </param>
        /// <returns> A new <see cref="Models.ScheduledAlertRuleTemplate"/> instance for mocking. </returns>
        public static ScheduledAlertRuleTemplate ScheduledAlertRuleTemplate(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, int? alertRulesCreatedByTemplateCount = null, DateTimeOffset? createdDateUTC = null, DateTimeOffset? lastUpdatedDateUTC = null, string description = null, string displayName = null, IEnumerable<AlertRuleTemplateDataSource> requiredDataConnectors = null, SecurityInsightsAlertRuleTemplateStatus? status = null, string query = null, TimeSpan? queryFrequency = null, TimeSpan? queryPeriod = null, SecurityInsightsAlertSeverity? severity = null, SecurityInsightsAlertRuleTriggerOperator? triggerOperator = null, int? triggerThreshold = null, IEnumerable<SecurityInsightsAttackTactic> tactics = null, IEnumerable<string> techniques = null, string version = null, EventGroupingAggregationKind? eventGroupingAggregationKind = null, IDictionary<string, string> customDetails = null, IEnumerable<SecurityInsightsAlertRuleEntityMapping> entityMappings = null, SecurityInsightsAlertDetailsOverride alertDetailsOverride = null)
        {
            requiredDataConnectors ??= new List<AlertRuleTemplateDataSource>();
            tactics ??= new List<SecurityInsightsAttackTactic>();
            techniques ??= new List<string>();
            customDetails ??= new Dictionary<string, string>();
            entityMappings ??= new List<SecurityInsightsAlertRuleEntityMapping>();

            return new ScheduledAlertRuleTemplate(id, name, resourceType, systemData, AlertRuleKind.Scheduled, alertRulesCreatedByTemplateCount, createdDateUTC, lastUpdatedDateUTC, description, displayName, requiredDataConnectors?.ToList(), status, query, queryFrequency, queryPeriod, severity, triggerOperator, triggerThreshold, tactics?.ToList(), techniques?.ToList(), version, eventGroupingAggregationKind != null ? new EventGroupingSettings(eventGroupingAggregationKind) : null, customDetails, entityMappings?.ToList(), alertDetailsOverride);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAadDataConnector"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="tenantId"> The tenant id to connect to, and get the data from. </param>
        /// <param name="alertsState"> The available data types for the connector. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAadDataConnector"/> instance for mocking. </returns>
        public static SecurityInsightsAadDataConnector SecurityInsightsAadDataConnector(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, Guid? tenantId = null, SecurityInsightsDataTypeConnectionState? alertsState = null)
        {
            return new SecurityInsightsAadDataConnector(id, name, resourceType, systemData, DataConnectorKind.AzureActiveDirectory, etag, tenantId, alertsState != null ? new SecurityInsightsAlertsDataTypeOfDataConnector(new DataConnectorDataTypeCommon(alertsState)) : null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAatpDataConnector"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="tenantId"> The tenant id to connect to, and get the data from. </param>
        /// <param name="alertsState"> The available data types for the connector. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAatpDataConnector"/> instance for mocking. </returns>
        public static SecurityInsightsAatpDataConnector SecurityInsightsAatpDataConnector(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, Guid? tenantId = null, SecurityInsightsDataTypeConnectionState? alertsState = null)
        {
            return new SecurityInsightsAatpDataConnector(id, name, resourceType, systemData, DataConnectorKind.AzureAdvancedThreatProtection, etag, tenantId, alertsState != null ? new SecurityInsightsAlertsDataTypeOfDataConnector(new DataConnectorDataTypeCommon(alertsState)) : null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAscDataConnector"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="alertsState"> The available data types for the connector. </param>
        /// <param name="subscriptionId"> The subscription id to connect to, and get the data from. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAscDataConnector"/> instance for mocking. </returns>
        public static SecurityInsightsAscDataConnector SecurityInsightsAscDataConnector(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, SecurityInsightsDataTypeConnectionState? alertsState = null, string subscriptionId = null)
        {
            return new SecurityInsightsAscDataConnector(id, name, resourceType, systemData, DataConnectorKind.AzureSecurityCenter, etag, alertsState != null ? new SecurityInsightsAlertsDataTypeOfDataConnector(new DataConnectorDataTypeCommon(alertsState)) : null, subscriptionId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAwsCloudTrailDataConnector"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="awsRoleArn"> The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access the Aws account. </param>
        /// <param name="logsState"> The available data types for the connector. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAwsCloudTrailDataConnector"/> instance for mocking. </returns>
        public static SecurityInsightsAwsCloudTrailDataConnector SecurityInsightsAwsCloudTrailDataConnector(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, string awsRoleArn = null, SecurityInsightsDataTypeConnectionState? logsState = null)
        {
            return new SecurityInsightsAwsCloudTrailDataConnector(id, name, resourceType, systemData, DataConnectorKind.AmazonWebServicesCloudTrail, etag, awsRoleArn, logsState != null ? new AwsCloudTrailDataConnectorDataTypes(new AwsCloudTrailDataConnectorDataTypesLogs(logsState)) : null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.McasDataConnector"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="tenantId"> The tenant id to connect to, and get the data from. </param>
        /// <param name="dataTypes"> The available data types for the connector. </param>
        /// <returns> A new <see cref="Models.McasDataConnector"/> instance for mocking. </returns>
        public static McasDataConnector McasDataConnector(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, Guid? tenantId = null, McasDataConnectorDataTypes dataTypes = null)
        {
            return new McasDataConnector(id, name, resourceType, systemData, DataConnectorKind.MicrosoftCloudAppSecurity, etag, tenantId, dataTypes);
        }

        /// <summary> Initializes a new instance of <see cref="Models.MdatpDataConnector"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="tenantId"> The tenant id to connect to, and get the data from. </param>
        /// <param name="alertsState"> The available data types for the connector. </param>
        /// <returns> A new <see cref="Models.MdatpDataConnector"/> instance for mocking. </returns>
        public static MdatpDataConnector MdatpDataConnector(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, Guid? tenantId = null, SecurityInsightsDataTypeConnectionState? alertsState = null)
        {
            return new MdatpDataConnector(id, name, resourceType, systemData, DataConnectorKind.MicrosoftDefenderAdvancedThreatProtection, etag, tenantId, alertsState != null ? new SecurityInsightsAlertsDataTypeOfDataConnector(new DataConnectorDataTypeCommon(alertsState)) : null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsTIDataConnector"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="tenantId"> The tenant id to connect to, and get the data from. </param>
        /// <param name="tipLookbackOn"> The lookback period for the feed to be imported. </param>
        /// <param name="indicatorsState"> The available data types for the connector. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsTIDataConnector"/> instance for mocking. </returns>
        public static SecurityInsightsTIDataConnector SecurityInsightsTIDataConnector(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, Guid? tenantId = null, DateTimeOffset? tipLookbackOn = null, SecurityInsightsDataTypeConnectionState? indicatorsState = null)
        {
            return new SecurityInsightsTIDataConnector(id, name, resourceType, systemData, DataConnectorKind.ThreatIntelligence, etag, tenantId, tipLookbackOn, indicatorsState != null ? new TIDataConnectorDataTypes(new TIDataConnectorDataTypesIndicators(indicatorsState)) : null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsOfficeDataConnector"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="tenantId"> The tenant id to connect to, and get the data from. </param>
        /// <param name="dataTypes"> The available data types for the connector. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsOfficeDataConnector"/> instance for mocking. </returns>
        public static SecurityInsightsOfficeDataConnector SecurityInsightsOfficeDataConnector(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, Guid? tenantId = null, SecurityInsightsOfficeDataConnectorDataTypes dataTypes = null)
        {
            return new SecurityInsightsOfficeDataConnector(id, name, resourceType, systemData, DataConnectorKind.Office365, etag, tenantId, dataTypes);
        }

        /// <summary> Initializes a new instance of <see cref="Models.AnomalySecurityMLAnalyticsSettings"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="description"> The description of the SecurityMLAnalyticsSettings. </param>
        /// <param name="displayName"> The display name for settings created by this SecurityMLAnalyticsSettings. </param>
        /// <param name="isEnabled"> Determines whether this settings is enabled or disabled. </param>
        /// <param name="lastModifiedOn"> The last time that this SecurityMLAnalyticsSettings has been modified. </param>
        /// <param name="requiredDataConnectors"> The required data sources for this SecurityMLAnalyticsSettings. </param>
        /// <param name="tactics"> The tactics of the SecurityMLAnalyticsSettings. </param>
        /// <param name="techniques"> The techniques of the SecurityMLAnalyticsSettings. </param>
        /// <param name="anomalyVersion"> The anomaly version of the AnomalySecurityMLAnalyticsSettings. </param>
        /// <param name="customizableObservations"> The customizable observations of the AnomalySecurityMLAnalyticsSettings. </param>
        /// <param name="frequency"> The frequency that this SecurityMLAnalyticsSettings will be run. </param>
        /// <param name="settingsStatus"> The anomaly SecurityMLAnalyticsSettings status. </param>
        /// <param name="isDefaultSettings"> Determines whether this anomaly security ml analytics settings is a default settings. </param>
        /// <param name="anomalySettingsVersion"> The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not. </param>
        /// <param name="settingsDefinitionId"> The anomaly settings definition Id. </param>
        /// <returns> A new <see cref="Models.AnomalySecurityMLAnalyticsSettings"/> instance for mocking. </returns>
        public static AnomalySecurityMLAnalyticsSettings AnomalySecurityMLAnalyticsSettings(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ETag? etag = null, string description = null, string displayName = null, bool? isEnabled = null, DateTimeOffset? lastModifiedOn = null, IEnumerable<SecurityMLAnalyticsSettingsDataSource> requiredDataConnectors = null, IEnumerable<SecurityInsightsAttackTactic> tactics = null, IEnumerable<string> techniques = null, string anomalyVersion = null, BinaryData customizableObservations = null, TimeSpan? frequency = null, AnomalySecurityMLAnalyticsSettingsStatus? settingsStatus = null, bool? isDefaultSettings = null, int? anomalySettingsVersion = null, Guid? settingsDefinitionId = null)
        {
            requiredDataConnectors ??= new List<SecurityMLAnalyticsSettingsDataSource>();
            tactics ??= new List<SecurityInsightsAttackTactic>();
            techniques ??= new List<string>();

            return new AnomalySecurityMLAnalyticsSettings(id, name, resourceType, systemData, SecurityMLAnalyticsSettingsKind.Anomaly, etag, description, displayName, isEnabled, lastModifiedOn, requiredDataConnectors?.ToList(), tactics?.ToList(), techniques?.ToList(), anomalyVersion, customizableObservations, frequency, settingsStatus, isDefaultSettings, anomalySettingsVersion, settingsDefinitionId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAccountEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="aadTenantId"> The Azure Active Directory tenant id. </param>
        /// <param name="aadUserId"> The Azure Active Directory user id. </param>
        /// <param name="accountName"> The name of the account. This field should hold only the name without any domain added to it, i.e. administrator. </param>
        /// <param name="displayName"> The display name of the account. </param>
        /// <param name="hostEntityId"> The Host entity id that contains the account in case it is a local account (not domain joined). </param>
        /// <param name="isDomainJoined"> Determines whether this is a domain account. </param>
        /// <param name="ntDomain"> The NetBIOS domain name as it appears in the alert format - domain\username. Examples: NT AUTHORITY. </param>
        /// <param name="objectGuid"> The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory. </param>
        /// <param name="puid"> The Azure Active Directory Passport User ID. </param>
        /// <param name="sid"> The account security identifier, e.g. S-1-5-18. </param>
        /// <param name="upnSuffix"> The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com. </param>
        /// <param name="dnsDomain"> The fully qualified domain DNS name. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAccountEntity"/> instance for mocking. </returns>
        public static SecurityInsightsAccountEntity SecurityInsightsAccountEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string aadTenantId = null, string aadUserId = null, string accountName = null, string displayName = null, string hostEntityId = null, bool? isDomainJoined = null, string ntDomain = null, Guid? objectGuid = null, string puid = null, string sid = null, string upnSuffix = null, string dnsDomain = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsAccountEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.Account, additionalData, friendlyName, aadTenantId, aadUserId, accountName, displayName, hostEntityId, isDomainJoined, ntDomain, objectGuid, puid, sid, upnSuffix, dnsDomain);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsAzureResourceEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="resourceId"> The azure resource id of the resource. </param>
        /// <param name="subscriptionId"> The subscription id of the resource. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsAzureResourceEntity"/> instance for mocking. </returns>
        public static SecurityInsightsAzureResourceEntity SecurityInsightsAzureResourceEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string resourceId = null, string subscriptionId = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsAzureResourceEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.AzureResource, additionalData, friendlyName, resourceId, subscriptionId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsCloudApplicationEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="appId"> The technical identifier of the application. </param>
        /// <param name="appName"> The name of the related cloud application. </param>
        /// <param name="instanceName"> The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsCloudApplicationEntity"/> instance for mocking. </returns>
        public static SecurityInsightsCloudApplicationEntity SecurityInsightsCloudApplicationEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, int? appId = null, string appName = null, string instanceName = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsCloudApplicationEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.CloudApplication, additionalData, friendlyName, appId, appName, instanceName);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsDnsEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="dnsServerIPEntityId"> An ip entity id for the dns server resolving the request. </param>
        /// <param name="domainName"> The name of the dns record associated with the alert. </param>
        /// <param name="hostIPAddressEntityId"> An ip entity id for the dns request client. </param>
        /// <param name="ipAddressEntityIds"> Ip entity identifiers for the resolved ip address. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsDnsEntity"/> instance for mocking. </returns>
        public static SecurityInsightsDnsEntity SecurityInsightsDnsEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string dnsServerIPEntityId = null, string domainName = null, string hostIPAddressEntityId = null, IEnumerable<string> ipAddressEntityIds = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            ipAddressEntityIds ??= new List<string>();

            return new SecurityInsightsDnsEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.DnsResolution, additionalData, friendlyName, dnsServerIPEntityId, domainName, hostIPAddressEntityId, ipAddressEntityIds?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsFileEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="directory"> The full path to the file. </param>
        /// <param name="fileHashEntityIds"> The file hash entity identifiers associated with this file. </param>
        /// <param name="fileName"> The file name without path (some alerts might not include path). </param>
        /// <param name="hostEntityId"> The Host entity id which the file belongs to. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsFileEntity"/> instance for mocking. </returns>
        public static SecurityInsightsFileEntity SecurityInsightsFileEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string directory = null, IEnumerable<string> fileHashEntityIds = null, string fileName = null, string hostEntityId = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            fileHashEntityIds ??= new List<string>();

            return new SecurityInsightsFileEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.File, additionalData, friendlyName, directory, fileHashEntityIds?.ToList(), fileName, hostEntityId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsFileHashEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="algorithm"> The hash algorithm type. </param>
        /// <param name="hashValue"> The file hash value. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsFileHashEntity"/> instance for mocking. </returns>
        public static SecurityInsightsFileHashEntity SecurityInsightsFileHashEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, SecurityInsightsFileHashAlgorithm? algorithm = null, string hashValue = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsFileHashEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.FileHash, additionalData, friendlyName, algorithm, hashValue);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsIPEntityGeoLocation"/>. </summary>
        /// <param name="asn"> Autonomous System Number. </param>
        /// <param name="city"> City name. </param>
        /// <param name="countryCode"> The country code according to ISO 3166 format. </param>
        /// <param name="countryName"> Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name. </param>
        /// <param name="latitude"> The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code. </param>
        /// <param name="longitude"> The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code. </param>
        /// <param name="state"> State name. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsIPEntityGeoLocation"/> instance for mocking. </returns>
        public static SecurityInsightsIPEntityGeoLocation SecurityInsightsIPEntityGeoLocation(int? asn = null, string city = null, string countryCode = null, string countryName = null, double? latitude = null, double? longitude = null, string state = null)
        {
            return new SecurityInsightsIPEntityGeoLocation(asn, city, countryCode, countryName, latitude, longitude, state);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsHostEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="azureId"> The azure resource id of the VM. </param>
        /// <param name="dnsDomain"> The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain. </param>
        /// <param name="hostName"> The hostname without the domain suffix. </param>
        /// <param name="isDomainJoined"> Determines whether this host belongs to a domain. </param>
        /// <param name="netBiosName"> The host name (pre-windows2000). </param>
        /// <param name="ntDomain"> The NT domain that this host belongs to. </param>
        /// <param name="omsAgentId"> The OMS agent id, if the host has OMS agent installed. </param>
        /// <param name="osFamily"> The operating system type. </param>
        /// <param name="osVersion"> A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsHostEntity"/> instance for mocking. </returns>
        public static SecurityInsightsHostEntity SecurityInsightsHostEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, ResourceIdentifier azureId = null, string dnsDomain = null, string hostName = null, bool? isDomainJoined = null, string netBiosName = null, string ntDomain = null, string omsAgentId = null, SecurityInsightsHostOSFamily? osFamily = null, string osVersion = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsHostEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.Host, additionalData, friendlyName, azureId, dnsDomain, hostName, isDomainJoined, netBiosName, ntDomain, omsAgentId, osFamily, osVersion);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsIotDeviceEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="deviceId"> The ID of the IoT Device in the IoT Hub. </param>
        /// <param name="deviceName"> The friendly name of the device. </param>
        /// <param name="source"> The source of the device. </param>
        /// <param name="iotSecurityAgentId"> The ID of the security agent running on the device. </param>
        /// <param name="deviceType"> The type of the device. </param>
        /// <param name="vendor"> The vendor of the device. </param>
        /// <param name="edgeId"> The ID of the edge device. </param>
        /// <param name="macAddress"> The MAC address of the device. </param>
        /// <param name="model"> The model of the device. </param>
        /// <param name="serialNumber"> The serial number of the device. </param>
        /// <param name="firmwareVersion"> The firmware version of the device. </param>
        /// <param name="operatingSystem"> The operating system of the device. </param>
        /// <param name="iotHubEntityId"> The AzureResource entity id of the IoT Hub. </param>
        /// <param name="hostEntityId"> The Host entity id of this device. </param>
        /// <param name="ipAddressEntityId"> The IP entity if of this device. </param>
        /// <param name="threatIntelligence"> A list of TI contexts attached to the IoTDevice entity. </param>
        /// <param name="protocols"> A list of protocols of the IoTDevice entity. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsIotDeviceEntity"/> instance for mocking. </returns>
        public static SecurityInsightsIotDeviceEntity SecurityInsightsIotDeviceEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string deviceId = null, string deviceName = null, string source = null, Guid? iotSecurityAgentId = null, string deviceType = null, string vendor = null, string edgeId = null, string macAddress = null, string model = null, string serialNumber = null, string firmwareVersion = null, string operatingSystem = null, string iotHubEntityId = null, string hostEntityId = null, string ipAddressEntityId = null, IEnumerable<SecurityInsightsThreatIntelligence> threatIntelligence = null, IEnumerable<string> protocols = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            threatIntelligence ??= new List<SecurityInsightsThreatIntelligence>();
            protocols ??= new List<string>();

            return new SecurityInsightsIotDeviceEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.IotDevice, additionalData, friendlyName, deviceId, deviceName, source, iotSecurityAgentId, deviceType, vendor, edgeId, macAddress, model, serialNumber, firmwareVersion, operatingSystem, iotHubEntityId, hostEntityId, ipAddressEntityId, threatIntelligence?.ToList(), protocols?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsThreatIntelligence"/>. </summary>
        /// <param name="confidence"> Confidence (must be between 0 and 1). </param>
        /// <param name="providerName"> Name of the provider from whom this Threat Intelligence information was received. </param>
        /// <param name="reportLink"> Report link. </param>
        /// <param name="threatDescription"> Threat description (free text). </param>
        /// <param name="threatName"> Threat name (e.g. "Jedobot malware"). </param>
        /// <param name="threatType"> Threat type (e.g. "Botnet"). </param>
        /// <returns> A new <see cref="Models.SecurityInsightsThreatIntelligence"/> instance for mocking. </returns>
        public static SecurityInsightsThreatIntelligence SecurityInsightsThreatIntelligence(double? confidence = null, string providerName = null, string reportLink = null, string threatDescription = null, string threatName = null, string threatType = null)
        {
            return new SecurityInsightsThreatIntelligence(confidence, providerName, reportLink, threatDescription, threatName, threatType);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsIPEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="address"> The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6). </param>
        /// <param name="location"> The geo-location context attached to the ip entity. </param>
        /// <param name="threatIntelligence"> A list of TI contexts attached to the ip entity. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsIPEntity"/> instance for mocking. </returns>
        public static SecurityInsightsIPEntity SecurityInsightsIPEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, IPAddress address = null, SecurityInsightsIPEntityGeoLocation location = null, IEnumerable<SecurityInsightsThreatIntelligence> threatIntelligence = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            threatIntelligence ??= new List<SecurityInsightsThreatIntelligence>();

            return new SecurityInsightsIPEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.IP, additionalData, friendlyName, address, location, threatIntelligence?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsMailboxEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="mailboxPrimaryAddress"> The mailbox's primary address. </param>
        /// <param name="displayName"> The mailbox's display name. </param>
        /// <param name="upn"> The mailbox's UPN. </param>
        /// <param name="externalDirectoryObjectId"> The AzureAD identifier of mailbox. Similar to AadUserId in account entity but this property is specific to mailbox object on office side. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsMailboxEntity"/> instance for mocking. </returns>
        public static SecurityInsightsMailboxEntity SecurityInsightsMailboxEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string mailboxPrimaryAddress = null, string displayName = null, string upn = null, Guid? externalDirectoryObjectId = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsMailboxEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.Mailbox, additionalData, friendlyName, mailboxPrimaryAddress, displayName, upn, externalDirectoryObjectId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsMailClusterEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="networkMessageIds"> The mail message IDs that are part of the mail cluster. </param>
        /// <param name="countByDeliveryStatus"> Count of mail messages by DeliveryStatus string representation. </param>
        /// <param name="countByThreatType"> Count of mail messages by ThreatType string representation. </param>
        /// <param name="countByProtectionStatus"> Count of mail messages by ProtectionStatus string representation. </param>
        /// <param name="threats"> The threats of mail messages that are part of the mail cluster. </param>
        /// <param name="query"> The query that was used to identify the messages of the mail cluster. </param>
        /// <param name="queryOn"> The query time. </param>
        /// <param name="mailCount"> The number of mail messages that are part of the mail cluster. </param>
        /// <param name="isVolumeAnomaly"> Is this a volume anomaly mail cluster. </param>
        /// <param name="source"> The source of the mail cluster (default is 'O365 ATP'). </param>
        /// <param name="clusterSourceIdentifier"> The id of the cluster source. </param>
        /// <param name="clusterSourceType"> The type of the cluster source. </param>
        /// <param name="clusterQueryStartOn"> The cluster query start time. </param>
        /// <param name="clusterQueryEndOn"> The cluster query end time. </param>
        /// <param name="clusterGroup"> The cluster group. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsMailClusterEntity"/> instance for mocking. </returns>
        public static SecurityInsightsMailClusterEntity SecurityInsightsMailClusterEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, IEnumerable<string> networkMessageIds = null, BinaryData countByDeliveryStatus = null, BinaryData countByThreatType = null, BinaryData countByProtectionStatus = null, IEnumerable<string> threats = null, string query = null, DateTimeOffset? queryOn = null, int? mailCount = null, bool? isVolumeAnomaly = null, string source = null, string clusterSourceIdentifier = null, string clusterSourceType = null, DateTimeOffset? clusterQueryStartOn = null, DateTimeOffset? clusterQueryEndOn = null, string clusterGroup = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            networkMessageIds ??= new List<string>();
            threats ??= new List<string>();

            return new SecurityInsightsMailClusterEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.MailCluster, additionalData, friendlyName, networkMessageIds?.ToList(), countByDeliveryStatus, countByThreatType, countByProtectionStatus, threats?.ToList(), query, queryOn, mailCount, isVolumeAnomaly, source, clusterSourceIdentifier, clusterSourceType, clusterQueryStartOn, clusterQueryEndOn, clusterGroup);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsMailMessageEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="fileEntityIds"> The File entity ids of this mail message's attachments. </param>
        /// <param name="recipient"> The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient. </param>
        /// <param name="uris"> The Urls contained in this mail message. </param>
        /// <param name="threats"> The threats of this mail message. </param>
        /// <param name="p1Sender"> The p1 sender's email address. </param>
        /// <param name="p1SenderDisplayName"> The p1 sender's display name. </param>
        /// <param name="p1SenderDomain"> The p1 sender's domain. </param>
        /// <param name="senderIP"> The sender's IP address. </param>
        /// <param name="p2Sender"> The p2 sender's email address. </param>
        /// <param name="p2SenderDisplayName"> The p2 sender's display name. </param>
        /// <param name="p2SenderDomain"> The p2 sender's domain. </param>
        /// <param name="receiveOn"> The receive date of this message. </param>
        /// <param name="networkMessageId"> The network message id of this mail message. </param>
        /// <param name="internetMessageId"> The internet message id of this mail message. </param>
        /// <param name="subject"> The subject of this mail message. </param>
        /// <param name="language"> The language of this mail message. </param>
        /// <param name="threatDetectionMethods"> The threat detection methods. </param>
        /// <param name="bodyFingerprintBin1"> The bodyFingerprintBin1. </param>
        /// <param name="bodyFingerprintBin2"> The bodyFingerprintBin2. </param>
        /// <param name="bodyFingerprintBin3"> The bodyFingerprintBin3. </param>
        /// <param name="bodyFingerprintBin4"> The bodyFingerprintBin4. </param>
        /// <param name="bodyFingerprintBin5"> The bodyFingerprintBin5. </param>
        /// <param name="antispamDirection"> The directionality of this mail message. </param>
        /// <param name="deliveryAction"> The delivery action of this mail message like Delivered, Blocked, Replaced etc. </param>
        /// <param name="deliveryLocation"> The delivery location of this mail message like Inbox, JunkFolder etc. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsMailMessageEntity"/> instance for mocking. </returns>
        public static SecurityInsightsMailMessageEntity SecurityInsightsMailMessageEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, IEnumerable<string> fileEntityIds = null, string recipient = null, IEnumerable<Uri> uris = null, IEnumerable<string> threats = null, string p1Sender = null, string p1SenderDisplayName = null, string p1SenderDomain = null, IPAddress senderIP = null, string p2Sender = null, string p2SenderDisplayName = null, string p2SenderDomain = null, DateTimeOffset? receiveOn = null, Guid? networkMessageId = null, string internetMessageId = null, string subject = null, string language = null, IEnumerable<string> threatDetectionMethods = null, int? bodyFingerprintBin1 = null, int? bodyFingerprintBin2 = null, int? bodyFingerprintBin3 = null, int? bodyFingerprintBin4 = null, int? bodyFingerprintBin5 = null, AntispamMailDirection? antispamDirection = null, SecurityInsightsMailMessageDeliveryAction? deliveryAction = null, SecurityInsightsMailMessageDeliveryLocation? deliveryLocation = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            fileEntityIds ??= new List<string>();
            uris ??= new List<Uri>();
            threats ??= new List<string>();
            threatDetectionMethods ??= new List<string>();

            return new SecurityInsightsMailMessageEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.MailMessage, additionalData, friendlyName, fileEntityIds?.ToList(), recipient, uris?.ToList(), threats?.ToList(), p1Sender, p1SenderDisplayName, p1SenderDomain, senderIP, p2Sender, p2SenderDisplayName, p2SenderDomain, receiveOn, networkMessageId, internetMessageId, subject, language, threatDetectionMethods?.ToList(), bodyFingerprintBin1, bodyFingerprintBin2, bodyFingerprintBin3, bodyFingerprintBin4, bodyFingerprintBin5, antispamDirection, deliveryAction, deliveryLocation);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsMalwareEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="category"> The malware category by the vendor, e.g. Trojan. </param>
        /// <param name="fileEntityIds"> List of linked file entity identifiers on which the malware was found. </param>
        /// <param name="malwareName"> The malware name by the vendor, e.g. Win32/Toga!rfn. </param>
        /// <param name="processEntityIds"> List of linked process entity identifiers on which the malware was found. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsMalwareEntity"/> instance for mocking. </returns>
        public static SecurityInsightsMalwareEntity SecurityInsightsMalwareEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string category = null, IEnumerable<string> fileEntityIds = null, string malwareName = null, IEnumerable<string> processEntityIds = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();
            fileEntityIds ??= new List<string>();
            processEntityIds ??= new List<string>();

            return new SecurityInsightsMalwareEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.Malware, additionalData, friendlyName, category, fileEntityIds?.ToList(), malwareName, processEntityIds?.ToList());
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsProcessEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="accountEntityId"> The account entity id running the processes. </param>
        /// <param name="commandLine"> The command line used to create the process. </param>
        /// <param name="createdOn"> The time when the process started to run. </param>
        /// <param name="elevationToken"> The elevation token associated with the process. </param>
        /// <param name="hostEntityId"> The host entity id on which the process was running. </param>
        /// <param name="hostLogonSessionEntityId"> The session entity id in which the process was running. </param>
        /// <param name="imageFileEntityId"> Image file entity id. </param>
        /// <param name="parentProcessEntityId"> The parent process entity id. </param>
        /// <param name="processId"> The process ID. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsProcessEntity"/> instance for mocking. </returns>
        public static SecurityInsightsProcessEntity SecurityInsightsProcessEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string accountEntityId = null, string commandLine = null, DateTimeOffset? createdOn = null, SecurityInsightsProcessElevationToken? elevationToken = null, string hostEntityId = null, string hostLogonSessionEntityId = null, string imageFileEntityId = null, string parentProcessEntityId = null, string processId = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsProcessEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.Process, additionalData, friendlyName, accountEntityId, commandLine, createdOn, elevationToken, hostEntityId, hostLogonSessionEntityId, imageFileEntityId, parentProcessEntityId, processId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsRegistryKeyEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="hive"> the hive that holds the registry key. </param>
        /// <param name="key"> The registry key path. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsRegistryKeyEntity"/> instance for mocking. </returns>
        public static SecurityInsightsRegistryKeyEntity SecurityInsightsRegistryKeyEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, SecurityInsightsRegistryHive? hive = null, string key = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsRegistryKeyEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.RegistryKey, additionalData, friendlyName, hive, key);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsRegistryValueEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="keyEntityId"> The registry key entity id. </param>
        /// <param name="valueData"> String formatted representation of the value data. </param>
        /// <param name="valueName"> The registry value name. </param>
        /// <param name="valueType"> Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsRegistryValueEntity"/> instance for mocking. </returns>
        public static SecurityInsightsRegistryValueEntity SecurityInsightsRegistryValueEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string keyEntityId = null, string valueData = null, string valueName = null, SecurityInsightsRegistryValueKind? valueType = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsRegistryValueEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.RegistryValue, additionalData, friendlyName, keyEntityId, valueData, valueName, valueType);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsGroupEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="distinguishedName"> The group distinguished name. </param>
        /// <param name="objectGuid"> A single-value attribute that is the unique identifier for the object, assigned by active directory. </param>
        /// <param name="sid"> The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsGroupEntity"/> instance for mocking. </returns>
        public static SecurityInsightsGroupEntity SecurityInsightsGroupEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, string distinguishedName = null, Guid? objectGuid = null, string sid = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsGroupEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.SecurityGroup, additionalData, friendlyName, distinguishedName, objectGuid, sid);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsSubmissionMailEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="networkMessageId"> The network message id of email to which submission belongs. </param>
        /// <param name="submissionId"> The submission id. </param>
        /// <param name="submitter"> The submitter. </param>
        /// <param name="submitOn"> The submission date. </param>
        /// <param name="messageReceivedOn"> The Time stamp when the message is received (Mail). </param>
        /// <param name="recipient"> The recipient of the mail. </param>
        /// <param name="sender"> The sender of the mail. </param>
        /// <param name="senderIP"> The sender's IP. </param>
        /// <param name="subject"> The subject of submission mail. </param>
        /// <param name="reportType"> The submission type for the given instance. This maps to Junk, Phish, Malware or NotJunk. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsSubmissionMailEntity"/> instance for mocking. </returns>
        public static SecurityInsightsSubmissionMailEntity SecurityInsightsSubmissionMailEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, Guid? networkMessageId = null, Guid? submissionId = null, string submitter = null, DateTimeOffset? submitOn = null, DateTimeOffset? messageReceivedOn = null, string recipient = null, string sender = null, IPAddress senderIP = null, string subject = null, string reportType = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsSubmissionMailEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.SubmissionMail, additionalData, friendlyName, networkMessageId, submissionId, submitter, submitOn, messageReceivedOn, recipient, sender, senderIP, subject, reportType);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SecurityInsightsUriEntity"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="uri"> A full URL the entity points to. </param>
        /// <returns> A new <see cref="Models.SecurityInsightsUriEntity"/> instance for mocking. </returns>
        public static SecurityInsightsUriEntity SecurityInsightsUriEntity(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IReadOnlyDictionary<string, BinaryData> additionalData = null, string friendlyName = null, Uri uri = null)
        {
            additionalData ??= new Dictionary<string, BinaryData>();

            return new SecurityInsightsUriEntity(id, name, resourceType, systemData, SecurityInsightsEntityKind.Uri, additionalData, friendlyName, uri);
        }
    }
}
