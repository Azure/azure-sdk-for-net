// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights
{
    /// <summary>
    /// A class representing the SourceControl data model.
    /// Represents a SourceControl in Azure Security Insights.
    /// Serialized Name: SourceControl
    /// </summary>
    public partial class SourceControlData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SourceControlData"/>. </summary>
        /// <param name="displayName">
        /// The display name of the source control
        /// Serialized Name: SourceControl.properties.displayName
        /// </param>
        /// <param name="repoType">
        /// The repository type of the source control
        /// Serialized Name: SourceControl.properties.repoType
        /// </param>
        /// <param name="contentTypes">
        /// Array of source control content types.
        /// Serialized Name: SourceControl.properties.contentTypes
        /// </param>
        /// <param name="repository">
        /// Repository metadata.
        /// Serialized Name: SourceControl.properties.repository
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/>, <paramref name="contentTypes"/> or <paramref name="repository"/> is null. </exception>
        public SourceControlData(string displayName, RepoType repoType, IEnumerable<Models.ContentType> contentTypes, SourceControlRepository repository)
        {
            Argument.AssertNotNull(displayName, nameof(displayName));
            Argument.AssertNotNull(contentTypes, nameof(contentTypes));
            Argument.AssertNotNull(repository, nameof(repository));

            DisplayName = displayName;
            RepoType = repoType;
            ContentTypes = contentTypes.ToList();
            Repository = repository;
        }

        /// <summary> Initializes a new instance of <see cref="SourceControlData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="idPropertiesId">
        /// The id (a Guid) of the source control
        /// Serialized Name: SourceControl.properties.id
        /// </param>
        /// <param name="version">
        /// The version number associated with the source control
        /// Serialized Name: SourceControl.properties.version
        /// </param>
        /// <param name="displayName">
        /// The display name of the source control
        /// Serialized Name: SourceControl.properties.displayName
        /// </param>
        /// <param name="description">
        /// A description of the source control
        /// Serialized Name: SourceControl.properties.description
        /// </param>
        /// <param name="repoType">
        /// The repository type of the source control
        /// Serialized Name: SourceControl.properties.repoType
        /// </param>
        /// <param name="contentTypes">
        /// Array of source control content types.
        /// Serialized Name: SourceControl.properties.contentTypes
        /// </param>
        /// <param name="repository">
        /// Repository metadata.
        /// Serialized Name: SourceControl.properties.repository
        /// </param>
        /// <param name="servicePrincipal">
        /// Service principal metadata.
        /// Serialized Name: SourceControl.properties.servicePrincipal
        /// </param>
        /// <param name="repositoryAccess">
        /// Repository access credentials. This is write-only object and it never returns back to a user.
        /// Serialized Name: SourceControl.properties.repositoryAccess
        /// </param>
        /// <param name="repositoryResourceInfo">
        /// Information regarding the resources created in user's repository.
        /// Serialized Name: SourceControl.properties.repositoryResourceInfo
        /// </param>
        /// <param name="lastDeploymentInfo">
        /// Information regarding the latest deployment for the source control.
        /// Serialized Name: SourceControl.properties.lastDeploymentInfo
        /// </param>
        /// <param name="pullRequest">
        /// Information regarding the pull request of the source control.
        /// Serialized Name: SourceControl.properties.pullRequest
        /// </param>
        /// <param name="etag">
        /// Etag of the azure resource
        /// Serialized Name: ResourceWithEtag.etag
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SourceControlData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string idPropertiesId, Models.Version? version, string displayName, string description, RepoType repoType, IList<Models.ContentType> contentTypes, SourceControlRepository repository, ServicePrincipal servicePrincipal, RepositoryAccess repositoryAccess, RepositoryResourceInfo repositoryResourceInfo, SourceControlDeploymentInfo lastDeploymentInfo, PullRequestInfo pullRequest, ETag? etag, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            IdPropertiesId = idPropertiesId;
            Version = version;
            DisplayName = displayName;
            Description = description;
            RepoType = repoType;
            ContentTypes = contentTypes;
            Repository = repository;
            ServicePrincipal = servicePrincipal;
            RepositoryAccess = repositoryAccess;
            RepositoryResourceInfo = repositoryResourceInfo;
            LastDeploymentInfo = lastDeploymentInfo;
            PullRequest = pullRequest;
            ETag = etag;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SourceControlData"/> for deserialization. </summary>
        internal SourceControlData()
        {
        }

        /// <summary>
        /// The id (a Guid) of the source control
        /// Serialized Name: SourceControl.properties.id
        /// </summary>
        public string IdPropertiesId { get; }
        /// <summary>
        /// The version number associated with the source control
        /// Serialized Name: SourceControl.properties.version
        /// </summary>
        public Models.Version? Version { get; }
        /// <summary>
        /// The display name of the source control
        /// Serialized Name: SourceControl.properties.displayName
        /// </summary>
        public string DisplayName { get; set; }
        /// <summary>
        /// A description of the source control
        /// Serialized Name: SourceControl.properties.description
        /// </summary>
        public string Description { get; set; }
        /// <summary>
        /// The repository type of the source control
        /// Serialized Name: SourceControl.properties.repoType
        /// </summary>
        public RepoType RepoType { get; set; }
        /// <summary>
        /// Array of source control content types.
        /// Serialized Name: SourceControl.properties.contentTypes
        /// </summary>
        public IList<Models.ContentType> ContentTypes { get; }
        /// <summary>
        /// Repository metadata.
        /// Serialized Name: SourceControl.properties.repository
        /// </summary>
        public SourceControlRepository Repository { get; set; }
        /// <summary>
        /// Service principal metadata.
        /// Serialized Name: SourceControl.properties.servicePrincipal
        /// </summary>
        public ServicePrincipal ServicePrincipal { get; set; }
        /// <summary>
        /// Repository access credentials. This is write-only object and it never returns back to a user.
        /// Serialized Name: SourceControl.properties.repositoryAccess
        /// </summary>
        public RepositoryAccess RepositoryAccess { get; set; }
        /// <summary>
        /// Information regarding the resources created in user's repository.
        /// Serialized Name: SourceControl.properties.repositoryResourceInfo
        /// </summary>
        public RepositoryResourceInfo RepositoryResourceInfo { get; set; }
        /// <summary>
        /// Information regarding the latest deployment for the source control.
        /// Serialized Name: SourceControl.properties.lastDeploymentInfo
        /// </summary>
        public SourceControlDeploymentInfo LastDeploymentInfo { get; }
        /// <summary>
        /// Information regarding the pull request of the source control.
        /// Serialized Name: SourceControl.properties.pullRequest
        /// </summary>
        public PullRequestInfo PullRequest { get; }
        /// <summary>
        /// Etag of the azure resource
        /// Serialized Name: ResourceWithEtag.etag
        /// </summary>
        public ETag? ETag { get; set; }
    }
}
