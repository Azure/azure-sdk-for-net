// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights
{
    /// <summary> A class representing the FileImport data model. </summary>
    public partial class FileImportData : ResourceData
    {
        /// <summary> Initializes a new instance of FileImportData. </summary>
        public FileImportData()
        {
            ErrorsPreview = new ChangeTrackingList<ValidationError>();
        }

        /// <summary> Initializes a new instance of FileImportData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="ingestionMode"> Describes how to ingest the records in the file. </param>
        /// <param name="contentType"> The content type of this file. </param>
        /// <param name="createdTimeUTC"> The time the file was imported. </param>
        /// <param name="errorFile"> Represents the error file (if the import was ingested with errors or failed the validation). </param>
        /// <param name="errorsPreview"> An ordered list of some of the errors that were encountered during validation. </param>
        /// <param name="importFile"> Represents the imported file. </param>
        /// <param name="ingestedRecordCount"> The number of records that have been successfully ingested. </param>
        /// <param name="source"> The source for the data in the file. </param>
        /// <param name="state"> The state of the file import. </param>
        /// <param name="totalRecordCount"> The number of records in the file. </param>
        /// <param name="validRecordCount"> The number of records that have passed validation. </param>
        /// <param name="filesValidUntilTimeUTC"> The time the files associated with this import are deleted from the storage account. </param>
        /// <param name="importValidUntilTimeUTC"> The time the file import record is soft deleted from the database and history. </param>
        internal FileImportData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IngestionMode? ingestionMode, FileImportContentType? contentType, DateTimeOffset? createdTimeUTC, FileMetadata errorFile, IReadOnlyList<ValidationError> errorsPreview, FileMetadata importFile, int? ingestedRecordCount, string source, FileImportState? state, int? totalRecordCount, int? validRecordCount, DateTimeOffset? filesValidUntilTimeUTC, DateTimeOffset? importValidUntilTimeUTC) : base(id, name, resourceType, systemData)
        {
            IngestionMode = ingestionMode;
            ContentType = contentType;
            CreatedTimeUTC = createdTimeUTC;
            ErrorFile = errorFile;
            ErrorsPreview = errorsPreview;
            ImportFile = importFile;
            IngestedRecordCount = ingestedRecordCount;
            Source = source;
            State = state;
            TotalRecordCount = totalRecordCount;
            ValidRecordCount = validRecordCount;
            FilesValidUntilTimeUTC = filesValidUntilTimeUTC;
            ImportValidUntilTimeUTC = importValidUntilTimeUTC;
        }

        /// <summary> Describes how to ingest the records in the file. </summary>
        public IngestionMode? IngestionMode { get; set; }
        /// <summary> The content type of this file. </summary>
        public FileImportContentType? ContentType { get; set; }
        /// <summary> The time the file was imported. </summary>
        public DateTimeOffset? CreatedTimeUTC { get; }
        /// <summary> Represents the error file (if the import was ingested with errors or failed the validation). </summary>
        public FileMetadata ErrorFile { get; }
        /// <summary> An ordered list of some of the errors that were encountered during validation. </summary>
        public IReadOnlyList<ValidationError> ErrorsPreview { get; }
        /// <summary> Represents the imported file. </summary>
        public FileMetadata ImportFile { get; set; }
        /// <summary> The number of records that have been successfully ingested. </summary>
        public int? IngestedRecordCount { get; }
        /// <summary> The source for the data in the file. </summary>
        public string Source { get; set; }
        /// <summary> The state of the file import. </summary>
        public FileImportState? State { get; }
        /// <summary> The number of records in the file. </summary>
        public int? TotalRecordCount { get; }
        /// <summary> The number of records that have passed validation. </summary>
        public int? ValidRecordCount { get; }
        /// <summary> The time the files associated with this import are deleted from the storage account. </summary>
        public DateTimeOffset? FilesValidUntilTimeUTC { get; }
        /// <summary> The time the file import record is soft deleted from the database and history. </summary>
        public DateTimeOffset? ImportValidUntilTimeUTC { get; }
    }
}
