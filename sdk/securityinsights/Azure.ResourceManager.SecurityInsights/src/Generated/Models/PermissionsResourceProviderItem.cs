// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary>
    /// The PermissionsResourceProviderItem.
    /// Serialized Name: PermissionsResourceProviderItem
    /// </summary>
    public partial class PermissionsResourceProviderItem : ResourceProvider
    {
        /// <summary> Initializes a new instance of <see cref="PermissionsResourceProviderItem"/>. </summary>
        public PermissionsResourceProviderItem()
        {
        }

        /// <summary> Initializes a new instance of <see cref="PermissionsResourceProviderItem"/>. </summary>
        /// <param name="provider">
        /// Provider name
        /// Serialized Name: ResourceProvider.provider
        /// </param>
        /// <param name="permissionsDisplayText">
        /// Permission description text
        /// Serialized Name: ResourceProvider.permissionsDisplayText
        /// </param>
        /// <param name="providerDisplayName">
        /// Permission provider display name
        /// Serialized Name: ResourceProvider.providerDisplayName
        /// </param>
        /// <param name="scope">
        /// Permission provider scope
        /// Serialized Name: ResourceProvider.scope
        /// </param>
        /// <param name="requiredPermissions">
        /// Required permissions for the connector
        /// Serialized Name: ResourceProvider.requiredPermissions
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PermissionsResourceProviderItem(ProviderName? provider, string permissionsDisplayText, string providerDisplayName, PermissionProviderScope? scope, RequiredPermissions requiredPermissions, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(provider, permissionsDisplayText, providerDisplayName, scope, requiredPermissions, serializedAdditionalRawData)
        {
        }
    }
}
