// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> The kind of the entity. </summary>
    public readonly partial struct EntityKindEnum : IEquatable<EntityKindEnum>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="EntityKindEnum"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public EntityKindEnum(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AccountValue = "Account";
        private const string HostValue = "Host";
        private const string FileValue = "File";
        private const string AzureResourceValue = "AzureResource";
        private const string CloudApplicationValue = "CloudApplication";
        private const string DnsResolutionValue = "DnsResolution";
        private const string FileHashValue = "FileHash";
        private const string IPValue = "Ip";
        private const string MalwareValue = "Malware";
        private const string ProcessValue = "Process";
        private const string RegistryKeyValue = "RegistryKey";
        private const string RegistryValueValue = "RegistryValue";
        private const string SecurityGroupValue = "SecurityGroup";
        private const string UrlValue = "Url";
        private const string IoTDeviceValue = "IoTDevice";
        private const string SecurityAlertValue = "SecurityAlert";
        private const string BookmarkValue = "Bookmark";
        private const string MailClusterValue = "MailCluster";
        private const string MailMessageValue = "MailMessage";
        private const string MailboxValue = "Mailbox";
        private const string SubmissionMailValue = "SubmissionMail";

        /// <summary> Entity represents account in the system. </summary>
        public static EntityKindEnum Account { get; } = new EntityKindEnum(AccountValue);
        /// <summary> Entity represents host in the system. </summary>
        public static EntityKindEnum Host { get; } = new EntityKindEnum(HostValue);
        /// <summary> Entity represents file in the system. </summary>
        public static EntityKindEnum File { get; } = new EntityKindEnum(FileValue);
        /// <summary> Entity represents azure resource in the system. </summary>
        public static EntityKindEnum AzureResource { get; } = new EntityKindEnum(AzureResourceValue);
        /// <summary> Entity represents cloud application in the system. </summary>
        public static EntityKindEnum CloudApplication { get; } = new EntityKindEnum(CloudApplicationValue);
        /// <summary> Entity represents dns resolution in the system. </summary>
        public static EntityKindEnum DnsResolution { get; } = new EntityKindEnum(DnsResolutionValue);
        /// <summary> Entity represents file hash in the system. </summary>
        public static EntityKindEnum FileHash { get; } = new EntityKindEnum(FileHashValue);
        /// <summary> Entity represents ip in the system. </summary>
        public static EntityKindEnum IP { get; } = new EntityKindEnum(IPValue);
        /// <summary> Entity represents malware in the system. </summary>
        public static EntityKindEnum Malware { get; } = new EntityKindEnum(MalwareValue);
        /// <summary> Entity represents process in the system. </summary>
        public static EntityKindEnum Process { get; } = new EntityKindEnum(ProcessValue);
        /// <summary> Entity represents registry key in the system. </summary>
        public static EntityKindEnum RegistryKey { get; } = new EntityKindEnum(RegistryKeyValue);
        /// <summary> Entity represents registry value in the system. </summary>
        public static EntityKindEnum RegistryValue { get; } = new EntityKindEnum(RegistryValueValue);
        /// <summary> Entity represents security group in the system. </summary>
        public static EntityKindEnum SecurityGroup { get; } = new EntityKindEnum(SecurityGroupValue);
        /// <summary> Entity represents url in the system. </summary>
        public static EntityKindEnum Url { get; } = new EntityKindEnum(UrlValue);
        /// <summary> Entity represents IoT device in the system. </summary>
        public static EntityKindEnum IoTDevice { get; } = new EntityKindEnum(IoTDeviceValue);
        /// <summary> Entity represents security alert in the system. </summary>
        public static EntityKindEnum SecurityAlert { get; } = new EntityKindEnum(SecurityAlertValue);
        /// <summary> Entity represents bookmark in the system. </summary>
        public static EntityKindEnum Bookmark { get; } = new EntityKindEnum(BookmarkValue);
        /// <summary> Entity represents mail cluster in the system. </summary>
        public static EntityKindEnum MailCluster { get; } = new EntityKindEnum(MailClusterValue);
        /// <summary> Entity represents mail message in the system. </summary>
        public static EntityKindEnum MailMessage { get; } = new EntityKindEnum(MailMessageValue);
        /// <summary> Entity represents mailbox in the system. </summary>
        public static EntityKindEnum Mailbox { get; } = new EntityKindEnum(MailboxValue);
        /// <summary> Entity represents submission mail in the system. </summary>
        public static EntityKindEnum SubmissionMail { get; } = new EntityKindEnum(SubmissionMailValue);
        /// <summary> Determines if two <see cref="EntityKindEnum"/> values are the same. </summary>
        public static bool operator ==(EntityKindEnum left, EntityKindEnum right) => left.Equals(right);
        /// <summary> Determines if two <see cref="EntityKindEnum"/> values are not the same. </summary>
        public static bool operator !=(EntityKindEnum left, EntityKindEnum right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="EntityKindEnum"/>. </summary>
        public static implicit operator EntityKindEnum(string value) => new EntityKindEnum(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is EntityKindEnum other && Equals(other);
        /// <inheritdoc />
        public bool Equals(EntityKindEnum other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
