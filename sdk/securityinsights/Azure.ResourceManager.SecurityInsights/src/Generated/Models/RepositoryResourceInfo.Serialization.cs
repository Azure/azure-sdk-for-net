// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class RepositoryResourceInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Webhook))
            {
                writer.WritePropertyName("webhook");
                writer.WriteObjectValue(Webhook);
            }
            if (Optional.IsDefined(GitHubResourceInfo))
            {
                writer.WritePropertyName("gitHubResourceInfo");
                writer.WriteObjectValue(GitHubResourceInfo);
            }
            if (Optional.IsDefined(AzureDevOpsResourceInfo))
            {
                writer.WritePropertyName("azureDevOpsResourceInfo");
                writer.WriteObjectValue(AzureDevOpsResourceInfo);
            }
            writer.WriteEndObject();
        }

        internal static RepositoryResourceInfo DeserializeRepositoryResourceInfo(JsonElement element)
        {
            Optional<Webhook> webhook = default;
            Optional<GitHubResourceInfo> gitHubResourceInfo = default;
            Optional<AzureDevOpsResourceInfo> azureDevOpsResourceInfo = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("webhook"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    webhook = Webhook.DeserializeWebhook(property.Value);
                    continue;
                }
                if (property.NameEquals("gitHubResourceInfo"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    gitHubResourceInfo = GitHubResourceInfo.DeserializeGitHubResourceInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("azureDevOpsResourceInfo"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureDevOpsResourceInfo = AzureDevOpsResourceInfo.DeserializeAzureDevOpsResourceInfo(property.Value);
                    continue;
                }
            }
            return new RepositoryResourceInfo(webhook.Value, gitHubResourceInfo.Value, azureDevOpsResourceInfo.Value);
        }
    }
}
