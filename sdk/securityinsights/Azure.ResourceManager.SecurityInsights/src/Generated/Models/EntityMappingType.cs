// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> The V3 type of the mapped entity. </summary>
    public readonly partial struct EntityMappingType : IEquatable<EntityMappingType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="EntityMappingType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public EntityMappingType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AccountValue = "Account";
        private const string HostValue = "Host";
        private const string IPValue = "IP";
        private const string MalwareValue = "Malware";
        private const string FileValue = "File";
        private const string ProcessValue = "Process";
        private const string CloudApplicationValue = "CloudApplication";
        private const string DnsValue = "DNS";
        private const string AzureResourceValue = "AzureResource";
        private const string FileHashValue = "FileHash";
        private const string RegistryKeyValue = "RegistryKey";
        private const string RegistryValueValue = "RegistryValue";
        private const string SecurityGroupValue = "SecurityGroup";
        private const string URLValue = "URL";
        private const string MailboxValue = "Mailbox";
        private const string MailClusterValue = "MailCluster";
        private const string MailMessageValue = "MailMessage";
        private const string SubmissionMailValue = "SubmissionMail";

        /// <summary> User account entity type. </summary>
        public static EntityMappingType Account { get; } = new EntityMappingType(AccountValue);
        /// <summary> Host entity type. </summary>
        public static EntityMappingType Host { get; } = new EntityMappingType(HostValue);
        /// <summary> IP address entity type. </summary>
        public static EntityMappingType IP { get; } = new EntityMappingType(IPValue);
        /// <summary> Malware entity type. </summary>
        public static EntityMappingType Malware { get; } = new EntityMappingType(MalwareValue);
        /// <summary> System file entity type. </summary>
        public static EntityMappingType File { get; } = new EntityMappingType(FileValue);
        /// <summary> Process entity type. </summary>
        public static EntityMappingType Process { get; } = new EntityMappingType(ProcessValue);
        /// <summary> Cloud app entity type. </summary>
        public static EntityMappingType CloudApplication { get; } = new EntityMappingType(CloudApplicationValue);
        /// <summary> DNS entity type. </summary>
        public static EntityMappingType Dns { get; } = new EntityMappingType(DnsValue);
        /// <summary> Azure resource entity type. </summary>
        public static EntityMappingType AzureResource { get; } = new EntityMappingType(AzureResourceValue);
        /// <summary> File-hash entity type. </summary>
        public static EntityMappingType FileHash { get; } = new EntityMappingType(FileHashValue);
        /// <summary> Registry key entity type. </summary>
        public static EntityMappingType RegistryKey { get; } = new EntityMappingType(RegistryKeyValue);
        /// <summary> Registry value entity type. </summary>
        public static EntityMappingType RegistryValue { get; } = new EntityMappingType(RegistryValueValue);
        /// <summary> Security group entity type. </summary>
        public static EntityMappingType SecurityGroup { get; } = new EntityMappingType(SecurityGroupValue);
        /// <summary> URL entity type. </summary>
        public static EntityMappingType URL { get; } = new EntityMappingType(URLValue);
        /// <summary> Mailbox entity type. </summary>
        public static EntityMappingType Mailbox { get; } = new EntityMappingType(MailboxValue);
        /// <summary> Mail cluster entity type. </summary>
        public static EntityMappingType MailCluster { get; } = new EntityMappingType(MailClusterValue);
        /// <summary> Mail message entity type. </summary>
        public static EntityMappingType MailMessage { get; } = new EntityMappingType(MailMessageValue);
        /// <summary> Submission mail entity type. </summary>
        public static EntityMappingType SubmissionMail { get; } = new EntityMappingType(SubmissionMailValue);
        /// <summary> Determines if two <see cref="EntityMappingType"/> values are the same. </summary>
        public static bool operator ==(EntityMappingType left, EntityMappingType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="EntityMappingType"/> values are not the same. </summary>
        public static bool operator !=(EntityMappingType left, EntityMappingType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="EntityMappingType"/>. </summary>
        public static implicit operator EntityMappingType(string value) => new EntityMappingType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is EntityMappingType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(EntityMappingType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
