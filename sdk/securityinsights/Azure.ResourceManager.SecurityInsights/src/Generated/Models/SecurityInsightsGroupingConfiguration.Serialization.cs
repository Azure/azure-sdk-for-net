// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class SecurityInsightsGroupingConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("enabled"u8);
            writer.WriteBooleanValue(IsEnabled);
            writer.WritePropertyName("reopenClosedIncident"u8);
            writer.WriteBooleanValue(IsClosedIncidentReopened);
            writer.WritePropertyName("lookbackDuration"u8);
            writer.WriteStringValue(LookbackDuration, "P");
            writer.WritePropertyName("matchingMethod"u8);
            writer.WriteStringValue(MatchingMethod.ToString());
            if (Optional.IsCollectionDefined(GroupByEntities))
            {
                writer.WritePropertyName("groupByEntities"u8);
                writer.WriteStartArray();
                foreach (var item in GroupByEntities)
                {
                    writer.WriteStringValue(item.ToString());
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(GroupByAlertDetails))
            {
                writer.WritePropertyName("groupByAlertDetails"u8);
                writer.WriteStartArray();
                foreach (var item in GroupByAlertDetails)
                {
                    writer.WriteStringValue(item.ToString());
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(GroupByCustomDetails))
            {
                writer.WritePropertyName("groupByCustomDetails"u8);
                writer.WriteStartArray();
                foreach (var item in GroupByCustomDetails)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static SecurityInsightsGroupingConfiguration DeserializeSecurityInsightsGroupingConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            bool enabled = default;
            bool reopenClosedIncident = default;
            TimeSpan lookbackDuration = default;
            SecurityInsightsGroupingMatchingMethod matchingMethod = default;
            Optional<IList<SecurityInsightsAlertRuleEntityMappingType>> groupByEntities = default;
            Optional<IList<SecurityInsightsAlertDetail>> groupByAlertDetails = default;
            Optional<IList<string>> groupByCustomDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("enabled"u8))
                {
                    enabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("reopenClosedIncident"u8))
                {
                    reopenClosedIncident = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("lookbackDuration"u8))
                {
                    lookbackDuration = property.Value.GetTimeSpan("P");
                    continue;
                }
                if (property.NameEquals("matchingMethod"u8))
                {
                    matchingMethod = new SecurityInsightsGroupingMatchingMethod(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("groupByEntities"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<SecurityInsightsAlertRuleEntityMappingType> array = new List<SecurityInsightsAlertRuleEntityMappingType>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new SecurityInsightsAlertRuleEntityMappingType(item.GetString()));
                    }
                    groupByEntities = array;
                    continue;
                }
                if (property.NameEquals("groupByAlertDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<SecurityInsightsAlertDetail> array = new List<SecurityInsightsAlertDetail>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new SecurityInsightsAlertDetail(item.GetString()));
                    }
                    groupByAlertDetails = array;
                    continue;
                }
                if (property.NameEquals("groupByCustomDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    groupByCustomDetails = array;
                    continue;
                }
            }
            return new SecurityInsightsGroupingConfiguration(enabled, reopenClosedIncident, lookbackDuration, matchingMethod, Optional.ToList(groupByEntities), Optional.ToList(groupByAlertDetails), Optional.ToList(groupByCustomDetails));
        }
    }
}
