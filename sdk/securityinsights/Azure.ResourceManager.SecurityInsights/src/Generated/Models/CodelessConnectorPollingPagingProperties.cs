// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Describe the properties needed to make a pagination call. </summary>
    public partial class CodelessConnectorPollingPagingProperties
    {
        /// <summary> Initializes a new instance of CodelessConnectorPollingPagingProperties. </summary>
        /// <param name="pagingType"> Describes the type. could be &apos;None&apos;, &apos;PageToken&apos;, &apos;PageCount&apos;, &apos;TimeStamp&apos;. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="pagingType"/> is null. </exception>
        public CodelessConnectorPollingPagingProperties(string pagingType)
        {
            if (pagingType == null)
            {
                throw new ArgumentNullException(nameof(pagingType));
            }

            PagingType = pagingType;
        }

        /// <summary> Initializes a new instance of CodelessConnectorPollingPagingProperties. </summary>
        /// <param name="pagingType"> Describes the type. could be &apos;None&apos;, &apos;PageToken&apos;, &apos;PageCount&apos;, &apos;TimeStamp&apos;. </param>
        /// <param name="nextPageParaName"> Defines the name of a next page attribute. </param>
        /// <param name="nextPageTokenJsonPath"> Defines the path to a next page token JSON. </param>
        /// <param name="pageCountAttributePath"> Defines the path to a page count attribute. </param>
        /// <param name="pageTotalCountAttributePath"> Defines the path to a page total count attribute. </param>
        /// <param name="pageTimeStampAttributePath"> Defines the path to a paging time stamp attribute. </param>
        /// <param name="searchTheLatestTimeStampFromEventsList"> Determines whether to search for the latest time stamp in the events list. </param>
        /// <param name="pageSizeParaName"> Defines the name of the page size parameter. </param>
        /// <param name="pageSize"> Defines the paging size. </param>
        internal CodelessConnectorPollingPagingProperties(string pagingType, string nextPageParaName, string nextPageTokenJsonPath, string pageCountAttributePath, string pageTotalCountAttributePath, string pageTimeStampAttributePath, string searchTheLatestTimeStampFromEventsList, string pageSizeParaName, int? pageSize)
        {
            PagingType = pagingType;
            NextPageParaName = nextPageParaName;
            NextPageTokenJsonPath = nextPageTokenJsonPath;
            PageCountAttributePath = pageCountAttributePath;
            PageTotalCountAttributePath = pageTotalCountAttributePath;
            PageTimeStampAttributePath = pageTimeStampAttributePath;
            SearchTheLatestTimeStampFromEventsList = searchTheLatestTimeStampFromEventsList;
            PageSizeParaName = pageSizeParaName;
            PageSize = pageSize;
        }

        /// <summary> Describes the type. could be &apos;None&apos;, &apos;PageToken&apos;, &apos;PageCount&apos;, &apos;TimeStamp&apos;. </summary>
        public string PagingType { get; set; }
        /// <summary> Defines the name of a next page attribute. </summary>
        public string NextPageParaName { get; set; }
        /// <summary> Defines the path to a next page token JSON. </summary>
        public string NextPageTokenJsonPath { get; set; }
        /// <summary> Defines the path to a page count attribute. </summary>
        public string PageCountAttributePath { get; set; }
        /// <summary> Defines the path to a page total count attribute. </summary>
        public string PageTotalCountAttributePath { get; set; }
        /// <summary> Defines the path to a paging time stamp attribute. </summary>
        public string PageTimeStampAttributePath { get; set; }
        /// <summary> Determines whether to search for the latest time stamp in the events list. </summary>
        public string SearchTheLatestTimeStampFromEventsList { get; set; }
        /// <summary> Defines the name of the page size parameter. </summary>
        public string PageSizeParaName { get; set; }
        /// <summary> Defines the paging size. </summary>
        public int? PageSize { get; set; }
    }
}
