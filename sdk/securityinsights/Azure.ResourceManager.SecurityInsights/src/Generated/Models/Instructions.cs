// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Instructions section of a recommendation. </summary>
    public partial class Instructions
    {
        /// <summary> Initializes a new instance of Instructions. </summary>
        /// <param name="actionsToBePerformed"> What actions should be taken to complete the recommendation. </param>
        /// <param name="recommendationImportance"> Explains why the recommendation is important. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="actionsToBePerformed"/> or <paramref name="recommendationImportance"/> is null. </exception>
        internal Instructions(string actionsToBePerformed, string recommendationImportance)
        {
            Argument.AssertNotNull(actionsToBePerformed, nameof(actionsToBePerformed));
            Argument.AssertNotNull(recommendationImportance, nameof(recommendationImportance));

            ActionsToBePerformed = actionsToBePerformed;
            RecommendationImportance = recommendationImportance;
        }

        /// <summary> Initializes a new instance of Instructions. </summary>
        /// <param name="actionsToBePerformed"> What actions should be taken to complete the recommendation. </param>
        /// <param name="recommendationImportance"> Explains why the recommendation is important. </param>
        /// <param name="howToPerformActionDetails"> How should the user complete the recommendation. </param>
        internal Instructions(string actionsToBePerformed, string recommendationImportance, string howToPerformActionDetails)
        {
            ActionsToBePerformed = actionsToBePerformed;
            RecommendationImportance = recommendationImportance;
            HowToPerformActionDetails = howToPerformActionDetails;
        }

        /// <summary> What actions should be taken to complete the recommendation. </summary>
        public string ActionsToBePerformed { get; }
        /// <summary> Explains why the recommendation is important. </summary>
        public string RecommendationImportance { get; }
        /// <summary> How should the user complete the recommendation. </summary>
        public string HowToPerformActionDetails { get; }
    }
}
