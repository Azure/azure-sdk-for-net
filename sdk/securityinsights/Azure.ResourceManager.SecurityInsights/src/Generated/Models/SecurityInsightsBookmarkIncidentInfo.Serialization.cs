// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class SecurityInsightsBookmarkIncidentInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IncidentId))
            {
                writer.WritePropertyName("incidentId");
                writer.WriteStringValue(IncidentId.Value);
            }
            if (Optional.IsDefined(Severity))
            {
                writer.WritePropertyName("severity");
                writer.WriteStringValue(Severity.Value.ToString());
            }
            if (Optional.IsDefined(Title))
            {
                writer.WritePropertyName("title");
                writer.WriteStringValue(Title);
            }
            if (Optional.IsDefined(RelationName))
            {
                writer.WritePropertyName("relationName");
                writer.WriteStringValue(RelationName);
            }
            writer.WriteEndObject();
        }

        internal static SecurityInsightsBookmarkIncidentInfo DeserializeSecurityInsightsBookmarkIncidentInfo(JsonElement element)
        {
            Optional<Guid> incidentId = default;
            Optional<SecurityInsightsIncidentSeverity> severity = default;
            Optional<string> title = default;
            Optional<string> relationName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("incidentId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    incidentId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("severity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    severity = new SecurityInsightsIncidentSeverity(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("title"))
                {
                    title = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("relationName"))
                {
                    relationName = property.Value.GetString();
                    continue;
                }
            }
            return new SecurityInsightsBookmarkIncidentInfo(Optional.ToNullable(incidentId), Optional.ToNullable(severity), title.Value, relationName.Value);
        }
    }
}
