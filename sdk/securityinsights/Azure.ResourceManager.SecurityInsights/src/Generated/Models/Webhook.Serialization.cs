// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class Webhook : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(WebhookId))
            {
                writer.WritePropertyName("webhookId");
                writer.WriteStringValue(WebhookId);
            }
            if (Optional.IsDefined(WebhookUri))
            {
                writer.WritePropertyName("webhookUrl");
                writer.WriteStringValue(WebhookUri.AbsoluteUri);
            }
            if (Optional.IsDefined(WebhookSecretUpdateTime))
            {
                writer.WritePropertyName("webhookSecretUpdateTime");
                writer.WriteStringValue(WebhookSecretUpdateTime);
            }
            if (Optional.IsDefined(RotateWebhookSecret))
            {
                writer.WritePropertyName("rotateWebhookSecret");
                writer.WriteBooleanValue(RotateWebhookSecret.Value);
            }
            writer.WriteEndObject();
        }

        internal static Webhook DeserializeWebhook(JsonElement element)
        {
            Optional<string> webhookId = default;
            Optional<Uri> webhookUrl = default;
            Optional<string> webhookSecretUpdateTime = default;
            Optional<bool> rotateWebhookSecret = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("webhookId"))
                {
                    webhookId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("webhookUrl"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        webhookUrl = null;
                        continue;
                    }
                    webhookUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("webhookSecretUpdateTime"))
                {
                    webhookSecretUpdateTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rotateWebhookSecret"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rotateWebhookSecret = property.Value.GetBoolean();
                    continue;
                }
            }
            return new Webhook(webhookId.Value, webhookUrl.Value, webhookSecretUpdateTime.Value, Optional.ToNullable(rotateWebhookSecret));
        }
    }
}
