// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Provider name. </summary>
    public readonly partial struct ProviderName : IEquatable<ProviderName>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ProviderName"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ProviderName(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string MicrosoftOperationalInsightsSolutionsValue = "Microsoft.OperationalInsights/solutions";
        private const string MicrosoftOperationalInsightsWorkspacesValue = "Microsoft.OperationalInsights/workspaces";
        private const string MicrosoftOperationalInsightsWorkspacesDatasourcesValue = "Microsoft.OperationalInsights/workspaces/datasources";
        private const string MicrosoftAadiamDiagnosticSettingsValue = "microsoft.aadiam/diagnosticSettings";
        private const string MicrosoftOperationalInsightsWorkspacesSharedKeysValue = "Microsoft.OperationalInsights/workspaces/sharedKeys";
        private const string MicrosoftAuthorizationPolicyAssignmentsValue = "Microsoft.Authorization/policyAssignments";

        /// <summary> Microsoft.OperationalInsights/solutions. </summary>
        public static ProviderName MicrosoftOperationalInsightsSolutions { get; } = new ProviderName(MicrosoftOperationalInsightsSolutionsValue);
        /// <summary> Microsoft.OperationalInsights/workspaces. </summary>
        public static ProviderName MicrosoftOperationalInsightsWorkspaces { get; } = new ProviderName(MicrosoftOperationalInsightsWorkspacesValue);
        /// <summary> Microsoft.OperationalInsights/workspaces/datasources. </summary>
        public static ProviderName MicrosoftOperationalInsightsWorkspacesDatasources { get; } = new ProviderName(MicrosoftOperationalInsightsWorkspacesDatasourcesValue);
        /// <summary> microsoft.aadiam/diagnosticSettings. </summary>
        public static ProviderName MicrosoftAadiamDiagnosticSettings { get; } = new ProviderName(MicrosoftAadiamDiagnosticSettingsValue);
        /// <summary> Microsoft.OperationalInsights/workspaces/sharedKeys. </summary>
        public static ProviderName MicrosoftOperationalInsightsWorkspacesSharedKeys { get; } = new ProviderName(MicrosoftOperationalInsightsWorkspacesSharedKeysValue);
        /// <summary> Microsoft.Authorization/policyAssignments. </summary>
        public static ProviderName MicrosoftAuthorizationPolicyAssignments { get; } = new ProviderName(MicrosoftAuthorizationPolicyAssignmentsValue);
        /// <summary> Determines if two <see cref="ProviderName"/> values are the same. </summary>
        public static bool operator ==(ProviderName left, ProviderName right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ProviderName"/> values are not the same. </summary>
        public static bool operator !=(ProviderName left, ProviderName right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ProviderName"/>. </summary>
        public static implicit operator ProviderName(string value) => new ProviderName(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ProviderName other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ProviderName other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
