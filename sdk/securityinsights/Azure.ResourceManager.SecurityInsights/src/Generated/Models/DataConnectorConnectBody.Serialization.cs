// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class DataConnectorConnectBody : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind.Value.ToString());
            }
            if (Optional.IsDefined(ApiKey))
            {
                writer.WritePropertyName("apiKey");
                writer.WriteStringValue(ApiKey);
            }
            if (Optional.IsDefined(DataCollectionEndpoint))
            {
                writer.WritePropertyName("dataCollectionEndpoint");
                writer.WriteStringValue(DataCollectionEndpoint);
            }
            if (Optional.IsDefined(DataCollectionRuleImmutableId))
            {
                writer.WritePropertyName("dataCollectionRuleImmutableId");
                writer.WriteStringValue(DataCollectionRuleImmutableId);
            }
            if (Optional.IsDefined(OutputStream))
            {
                writer.WritePropertyName("outputStream");
                writer.WriteStringValue(OutputStream);
            }
            if (Optional.IsDefined(ClientSecret))
            {
                writer.WritePropertyName("clientSecret");
                writer.WriteStringValue(ClientSecret);
            }
            if (Optional.IsDefined(ClientId))
            {
                writer.WritePropertyName("clientId");
                writer.WriteStringValue(ClientId);
            }
            if (Optional.IsDefined(AuthorizationCode))
            {
                writer.WritePropertyName("authorizationCode");
                writer.WriteStringValue(AuthorizationCode);
            }
            if (Optional.IsDefined(UserName))
            {
                writer.WritePropertyName("userName");
                writer.WriteStringValue(UserName);
            }
            if (Optional.IsDefined(Password))
            {
                writer.WritePropertyName("password");
                writer.WriteStringValue(Password);
            }
            if (Optional.IsCollectionDefined(RequestConfigUserInputValues))
            {
                writer.WritePropertyName("requestConfigUserInputValues");
                writer.WriteStartArray();
                foreach (var item in RequestConfigUserInputValues)
                {
#if NET6_0_OR_GREATER
				writer.WriteRawValue(item);
#else
                    JsonSerializer.Serialize(writer, JsonDocument.Parse(item.ToString()).RootElement);
#endif
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }
    }
}
