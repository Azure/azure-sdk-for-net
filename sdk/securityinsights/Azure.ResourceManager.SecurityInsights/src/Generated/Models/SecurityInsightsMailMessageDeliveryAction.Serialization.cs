// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    internal static partial class SecurityInsightsMailMessageDeliveryActionExtensions
    {
        public static string ToSerialString(this SecurityInsightsMailMessageDeliveryAction value) => value switch
        {
            SecurityInsightsMailMessageDeliveryAction.Unknown => "Unknown",
            SecurityInsightsMailMessageDeliveryAction.DeliveredAsSpam => "DeliveredAsSpam",
            SecurityInsightsMailMessageDeliveryAction.Delivered => "Delivered",
            SecurityInsightsMailMessageDeliveryAction.Blocked => "Blocked",
            SecurityInsightsMailMessageDeliveryAction.Replaced => "Replaced",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SecurityInsightsMailMessageDeliveryAction value.")
        };

        public static SecurityInsightsMailMessageDeliveryAction ToSecurityInsightsMailMessageDeliveryAction(this string value)
        {
            if (string.Equals(value, "Unknown", StringComparison.InvariantCultureIgnoreCase)) return SecurityInsightsMailMessageDeliveryAction.Unknown;
            if (string.Equals(value, "DeliveredAsSpam", StringComparison.InvariantCultureIgnoreCase)) return SecurityInsightsMailMessageDeliveryAction.DeliveredAsSpam;
            if (string.Equals(value, "Delivered", StringComparison.InvariantCultureIgnoreCase)) return SecurityInsightsMailMessageDeliveryAction.Delivered;
            if (string.Equals(value, "Blocked", StringComparison.InvariantCultureIgnoreCase)) return SecurityInsightsMailMessageDeliveryAction.Blocked;
            if (string.Equals(value, "Replaced", StringComparison.InvariantCultureIgnoreCase)) return SecurityInsightsMailMessageDeliveryAction.Replaced;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SecurityInsightsMailMessageDeliveryAction value.");
        }
    }
}
