// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> The AutomationRulePropertyValuesChangedCondition. </summary>
    public partial class AutomationRulePropertyValuesChangedCondition
    {
        /// <summary> Initializes a new instance of <see cref="AutomationRulePropertyValuesChangedCondition"/>. </summary>
        public AutomationRulePropertyValuesChangedCondition()
        {
            PropertyValues = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="AutomationRulePropertyValuesChangedCondition"/>. </summary>
        /// <param name="propertyName"></param>
        /// <param name="changeType"></param>
        /// <param name="operator"></param>
        /// <param name="propertyValues"></param>
        internal AutomationRulePropertyValuesChangedCondition(AutomationRulePropertyChangedConditionSupportedPropertyType? propertyName, AutomationRulePropertyChangedConditionSupportedChangedType? changeType, AutomationRulePropertyConditionSupportedOperator? @operator, IList<string> propertyValues)
        {
            PropertyName = propertyName;
            ChangeType = changeType;
            Operator = @operator;
            PropertyValues = propertyValues;
        }

        /// <summary> Gets or sets the property name. </summary>
        public AutomationRulePropertyChangedConditionSupportedPropertyType? PropertyName { get; set; }
        /// <summary> Gets or sets the change type. </summary>
        public AutomationRulePropertyChangedConditionSupportedChangedType? ChangeType { get; set; }
        /// <summary> Gets or sets the operator. </summary>
        public AutomationRulePropertyConditionSupportedOperator? Operator { get; set; }
        /// <summary> Gets the property values. </summary>
        public IList<string> PropertyValues { get; }
    }
}
