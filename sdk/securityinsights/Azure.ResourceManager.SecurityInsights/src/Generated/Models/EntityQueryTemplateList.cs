// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.ResourceManager.SecurityInsights;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> List of all the entity query templates. </summary>
    internal partial class EntityQueryTemplateList
    {
        /// <summary> Initializes a new instance of EntityQueryTemplateList. </summary>
        /// <param name="value">
        /// Array of entity query templates.
        /// Please note <see cref="EntityQueryTemplateData"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ActivityEntityQueryTemplate"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        internal EntityQueryTemplateList(IEnumerable<EntityQueryTemplateData> value)
        {
            if (value == null)
            {
                throw new ArgumentNullException(nameof(value));
            }

            Value = value.ToList();
        }

        /// <summary> Initializes a new instance of EntityQueryTemplateList. </summary>
        /// <param name="nextLink"> URL to fetch the next set of entity query templates. </param>
        /// <param name="value">
        /// Array of entity query templates.
        /// Please note <see cref="EntityQueryTemplateData"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ActivityEntityQueryTemplate"/>.
        /// </param>
        internal EntityQueryTemplateList(string nextLink, IReadOnlyList<EntityQueryTemplateData> value)
        {
            NextLink = nextLink;
            Value = value;
        }

        /// <summary> URL to fetch the next set of entity query templates. </summary>
        public string NextLink { get; }
        /// <summary>
        /// Array of entity query templates.
        /// Please note <see cref="EntityQueryTemplateData"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ActivityEntityQueryTemplate"/>.
        /// </summary>
        public IReadOnlyList<EntityQueryTemplateData> Value { get; }
    }
}
