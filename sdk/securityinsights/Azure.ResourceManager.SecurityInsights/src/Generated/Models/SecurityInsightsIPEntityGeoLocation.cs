// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> The geo-location context attached to the ip entity. </summary>
    public partial class SecurityInsightsIPEntityGeoLocation
    {
        /// <summary> Initializes a new instance of <see cref="SecurityInsightsIPEntityGeoLocation"/>. </summary>
        internal SecurityInsightsIPEntityGeoLocation()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsightsIPEntityGeoLocation"/>. </summary>
        /// <param name="asn"> Autonomous System Number. </param>
        /// <param name="city"> City name. </param>
        /// <param name="countryCode"> The country code according to ISO 3166 format. </param>
        /// <param name="countryName"> Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name. </param>
        /// <param name="latitude"> The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code. </param>
        /// <param name="longitude"> The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code. </param>
        /// <param name="state"> State name. </param>
        internal SecurityInsightsIPEntityGeoLocation(int? asn, string city, string countryCode, string countryName, double? latitude, double? longitude, string state)
        {
            Asn = asn;
            City = city;
            CountryCode = countryCode;
            CountryName = countryName;
            Latitude = latitude;
            Longitude = longitude;
            State = state;
        }

        /// <summary> Autonomous System Number. </summary>
        public int? Asn { get; }
        /// <summary> City name. </summary>
        public string City { get; }
        /// <summary> The country code according to ISO 3166 format. </summary>
        public string CountryCode { get; }
        /// <summary> Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name. </summary>
        public string CountryName { get; }
        /// <summary> The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code. </summary>
        public double? Latitude { get; }
        /// <summary> The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code. </summary>
        public double? Longitude { get; }
        /// <summary> State name. </summary>
        public string State { get; }
    }
}
