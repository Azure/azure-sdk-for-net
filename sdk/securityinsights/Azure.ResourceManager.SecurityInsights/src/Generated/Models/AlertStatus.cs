// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> The lifecycle status of the alert. </summary>
    public readonly partial struct AlertStatus : IEquatable<AlertStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AlertStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AlertStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string NewValue = "New";
        private const string ResolvedValue = "Resolved";
        private const string DismissedValue = "Dismissed";
        private const string InProgressValue = "InProgress";

        /// <summary> Unknown value. </summary>
        public static AlertStatus Unknown { get; } = new AlertStatus(UnknownValue);
        /// <summary> New alert. </summary>
        public static AlertStatus New { get; } = new AlertStatus(NewValue);
        /// <summary> Alert closed after handling. </summary>
        public static AlertStatus Resolved { get; } = new AlertStatus(ResolvedValue);
        /// <summary> Alert dismissed as false positive. </summary>
        public static AlertStatus Dismissed { get; } = new AlertStatus(DismissedValue);
        /// <summary> Alert is being handled. </summary>
        public static AlertStatus InProgress { get; } = new AlertStatus(InProgressValue);
        /// <summary> Determines if two <see cref="AlertStatus"/> values are the same. </summary>
        public static bool operator ==(AlertStatus left, AlertStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AlertStatus"/> values are not the same. </summary>
        public static bool operator !=(AlertStatus left, AlertStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AlertStatus"/>. </summary>
        public static implicit operator AlertStatus(string value) => new AlertStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AlertStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AlertStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
