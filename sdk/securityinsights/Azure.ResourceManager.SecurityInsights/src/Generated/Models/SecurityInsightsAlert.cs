// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary>
    /// Represents a security alert entity.
    /// Serialized Name: SecurityAlert
    /// </summary>
    public partial class SecurityInsightsAlert : SecurityInsightsEntity
    {
        /// <summary> Initializes a new instance of <see cref="SecurityInsightsAlert"/>. </summary>
        public SecurityInsightsAlert()
        {
            AdditionalData = new ChangeTrackingDictionary<string, BinaryData>();
            ConfidenceReasons = new ChangeTrackingList<SecurityInsightsAlertConfidenceReason>();
            RemediationSteps = new ChangeTrackingList<string>();
            Tactics = new ChangeTrackingList<SecurityInsightsAttackTactic>();
            ResourceIdentifiers = new ChangeTrackingList<BinaryData>();
            Kind = SecurityInsightsEntityKind.SecurityAlert;
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsightsAlert"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind">
        /// The kind of the entity.
        /// Serialized Name: Entity.kind
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="additionalData">
        /// A bag of custom fields that should be part of the entity and will be presented to the user.
        /// Serialized Name: SecurityAlert.properties.additionalData
        /// </param>
        /// <param name="friendlyName">
        /// The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        /// Serialized Name: SecurityAlert.properties.friendlyName
        /// </param>
        /// <param name="alertDisplayName">
        /// The display name of the alert.
        /// Serialized Name: SecurityAlert.properties.alertDisplayName
        /// </param>
        /// <param name="alertType">
        /// The type name of the alert.
        /// Serialized Name: SecurityAlert.properties.alertType
        /// </param>
        /// <param name="compromisedEntity">
        /// Display name of the main entity being reported on.
        /// Serialized Name: SecurityAlert.properties.compromisedEntity
        /// </param>
        /// <param name="confidenceLevel">
        /// The confidence level of this alert.
        /// Serialized Name: SecurityAlert.properties.confidenceLevel
        /// </param>
        /// <param name="confidenceReasons">
        /// The confidence reasons
        /// Serialized Name: SecurityAlert.properties.confidenceReasons
        /// </param>
        /// <param name="confidenceScore">
        /// The confidence score of the alert.
        /// Serialized Name: SecurityAlert.properties.confidenceScore
        /// </param>
        /// <param name="confidenceScoreStatus">
        /// The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.
        /// Serialized Name: SecurityAlert.properties.confidenceScoreStatus
        /// </param>
        /// <param name="description">
        /// Alert description.
        /// Serialized Name: SecurityAlert.properties.description
        /// </param>
        /// <param name="endOn">
        /// The impact end time of the alert (the time of the last event contributing to the alert).
        /// Serialized Name: SecurityAlert.properties.endTimeUtc
        /// </param>
        /// <param name="intent">
        /// Holds the alert intent stage(s) mapping for this alert.
        /// Serialized Name: SecurityAlert.properties.intent
        /// </param>
        /// <param name="providerAlertId">
        /// The identifier of the alert inside the product which generated the alert.
        /// Serialized Name: SecurityAlert.properties.providerAlertId
        /// </param>
        /// <param name="processingEndOn">
        /// The time the alert was made available for consumption.
        /// Serialized Name: SecurityAlert.properties.processingEndTime
        /// </param>
        /// <param name="productComponentName">
        /// The name of a component inside the product which generated the alert.
        /// Serialized Name: SecurityAlert.properties.productComponentName
        /// </param>
        /// <param name="productName">
        /// The name of the product which published this alert.
        /// Serialized Name: SecurityAlert.properties.productName
        /// </param>
        /// <param name="productVersion">
        /// The version of the product generating the alert.
        /// Serialized Name: SecurityAlert.properties.productVersion
        /// </param>
        /// <param name="remediationSteps">
        /// Manual action items to take to remediate the alert.
        /// Serialized Name: SecurityAlert.properties.remediationSteps
        /// </param>
        /// <param name="severity">
        /// The severity of the alert
        /// Serialized Name: SecurityAlert.properties.severity
        /// </param>
        /// <param name="startOn">
        /// The impact start time of the alert (the time of the first event contributing to the alert).
        /// Serialized Name: SecurityAlert.properties.startTimeUtc
        /// </param>
        /// <param name="status">
        /// The lifecycle status of the alert.
        /// Serialized Name: SecurityAlert.properties.status
        /// </param>
        /// <param name="systemAlertId">
        /// Holds the product identifier of the alert for the product.
        /// Serialized Name: SecurityAlert.properties.systemAlertId
        /// </param>
        /// <param name="tactics">
        /// The tactics of the alert
        /// Serialized Name: SecurityAlert.properties.tactics
        /// </param>
        /// <param name="alertGeneratedOn">
        /// The time the alert was generated.
        /// Serialized Name: SecurityAlert.properties.timeGenerated
        /// </param>
        /// <param name="vendorName">
        /// The name of the vendor that raise the alert.
        /// Serialized Name: SecurityAlert.properties.vendorName
        /// </param>
        /// <param name="alertLink">
        /// The uri link of the alert.
        /// Serialized Name: SecurityAlert.properties.alertLink
        /// </param>
        /// <param name="resourceIdentifiers">
        /// The list of resource identifiers of the alert.
        /// Serialized Name: SecurityAlert.properties.resourceIdentifiers
        /// </param>
        internal SecurityInsightsAlert(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, SecurityInsightsEntityKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, IReadOnlyDictionary<string, BinaryData> additionalData, string friendlyName, string alertDisplayName, string alertType, string compromisedEntity, SecurityInsightsAlertConfidenceLevel? confidenceLevel, IReadOnlyList<SecurityInsightsAlertConfidenceReason> confidenceReasons, double? confidenceScore, SecurityInsightsAlertConfidenceScoreStatus? confidenceScoreStatus, string description, DateTimeOffset? endOn, SecurityInsightsKillChainIntent? intent, string providerAlertId, DateTimeOffset? processingEndOn, string productComponentName, string productName, string productVersion, IReadOnlyList<string> remediationSteps, SecurityInsightsAlertSeverity? severity, DateTimeOffset? startOn, SecurityInsightsAlertStatus? status, string systemAlertId, IReadOnlyList<SecurityInsightsAttackTactic> tactics, DateTimeOffset? alertGeneratedOn, string vendorName, string alertLink, IReadOnlyList<BinaryData> resourceIdentifiers) : base(id, name, resourceType, systemData, kind, serializedAdditionalRawData)
        {
            AdditionalData = additionalData;
            FriendlyName = friendlyName;
            AlertDisplayName = alertDisplayName;
            AlertType = alertType;
            CompromisedEntity = compromisedEntity;
            ConfidenceLevel = confidenceLevel;
            ConfidenceReasons = confidenceReasons;
            ConfidenceScore = confidenceScore;
            ConfidenceScoreStatus = confidenceScoreStatus;
            Description = description;
            EndOn = endOn;
            Intent = intent;
            ProviderAlertId = providerAlertId;
            ProcessingEndOn = processingEndOn;
            ProductComponentName = productComponentName;
            ProductName = productName;
            ProductVersion = productVersion;
            RemediationSteps = remediationSteps;
            Severity = severity;
            StartOn = startOn;
            Status = status;
            SystemAlertId = systemAlertId;
            Tactics = tactics;
            AlertGeneratedOn = alertGeneratedOn;
            VendorName = vendorName;
            AlertLink = alertLink;
            ResourceIdentifiers = resourceIdentifiers;
            Kind = kind;
        }

        /// <summary>
        /// A bag of custom fields that should be part of the entity and will be presented to the user.
        /// Serialized Name: SecurityAlert.properties.additionalData
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IReadOnlyDictionary<string, BinaryData> AdditionalData { get; }
        /// <summary>
        /// The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
        /// Serialized Name: SecurityAlert.properties.friendlyName
        /// </summary>
        public string FriendlyName { get; }
        /// <summary>
        /// The display name of the alert.
        /// Serialized Name: SecurityAlert.properties.alertDisplayName
        /// </summary>
        public string AlertDisplayName { get; }
        /// <summary>
        /// The type name of the alert.
        /// Serialized Name: SecurityAlert.properties.alertType
        /// </summary>
        public string AlertType { get; }
        /// <summary>
        /// Display name of the main entity being reported on.
        /// Serialized Name: SecurityAlert.properties.compromisedEntity
        /// </summary>
        public string CompromisedEntity { get; }
        /// <summary>
        /// The confidence level of this alert.
        /// Serialized Name: SecurityAlert.properties.confidenceLevel
        /// </summary>
        public SecurityInsightsAlertConfidenceLevel? ConfidenceLevel { get; }
        /// <summary>
        /// The confidence reasons
        /// Serialized Name: SecurityAlert.properties.confidenceReasons
        /// </summary>
        public IReadOnlyList<SecurityInsightsAlertConfidenceReason> ConfidenceReasons { get; }
        /// <summary>
        /// The confidence score of the alert.
        /// Serialized Name: SecurityAlert.properties.confidenceScore
        /// </summary>
        public double? ConfidenceScore { get; }
        /// <summary>
        /// The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.
        /// Serialized Name: SecurityAlert.properties.confidenceScoreStatus
        /// </summary>
        public SecurityInsightsAlertConfidenceScoreStatus? ConfidenceScoreStatus { get; }
        /// <summary>
        /// Alert description.
        /// Serialized Name: SecurityAlert.properties.description
        /// </summary>
        public string Description { get; }
        /// <summary>
        /// The impact end time of the alert (the time of the last event contributing to the alert).
        /// Serialized Name: SecurityAlert.properties.endTimeUtc
        /// </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary>
        /// Holds the alert intent stage(s) mapping for this alert.
        /// Serialized Name: SecurityAlert.properties.intent
        /// </summary>
        public SecurityInsightsKillChainIntent? Intent { get; }
        /// <summary>
        /// The identifier of the alert inside the product which generated the alert.
        /// Serialized Name: SecurityAlert.properties.providerAlertId
        /// </summary>
        public string ProviderAlertId { get; }
        /// <summary>
        /// The time the alert was made available for consumption.
        /// Serialized Name: SecurityAlert.properties.processingEndTime
        /// </summary>
        public DateTimeOffset? ProcessingEndOn { get; }
        /// <summary>
        /// The name of a component inside the product which generated the alert.
        /// Serialized Name: SecurityAlert.properties.productComponentName
        /// </summary>
        public string ProductComponentName { get; }
        /// <summary>
        /// The name of the product which published this alert.
        /// Serialized Name: SecurityAlert.properties.productName
        /// </summary>
        public string ProductName { get; }
        /// <summary>
        /// The version of the product generating the alert.
        /// Serialized Name: SecurityAlert.properties.productVersion
        /// </summary>
        public string ProductVersion { get; }
        /// <summary>
        /// Manual action items to take to remediate the alert.
        /// Serialized Name: SecurityAlert.properties.remediationSteps
        /// </summary>
        public IReadOnlyList<string> RemediationSteps { get; }
        /// <summary>
        /// The severity of the alert
        /// Serialized Name: SecurityAlert.properties.severity
        /// </summary>
        public SecurityInsightsAlertSeverity? Severity { get; set; }
        /// <summary>
        /// The impact start time of the alert (the time of the first event contributing to the alert).
        /// Serialized Name: SecurityAlert.properties.startTimeUtc
        /// </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary>
        /// The lifecycle status of the alert.
        /// Serialized Name: SecurityAlert.properties.status
        /// </summary>
        public SecurityInsightsAlertStatus? Status { get; }
        /// <summary>
        /// Holds the product identifier of the alert for the product.
        /// Serialized Name: SecurityAlert.properties.systemAlertId
        /// </summary>
        public string SystemAlertId { get; }
        /// <summary>
        /// The tactics of the alert
        /// Serialized Name: SecurityAlert.properties.tactics
        /// </summary>
        public IReadOnlyList<SecurityInsightsAttackTactic> Tactics { get; }
        /// <summary>
        /// The time the alert was generated.
        /// Serialized Name: SecurityAlert.properties.timeGenerated
        /// </summary>
        public DateTimeOffset? AlertGeneratedOn { get; }
        /// <summary>
        /// The name of the vendor that raise the alert.
        /// Serialized Name: SecurityAlert.properties.vendorName
        /// </summary>
        public string VendorName { get; }
        /// <summary>
        /// The uri link of the alert.
        /// Serialized Name: SecurityAlert.properties.alertLink
        /// </summary>
        public string AlertLink { get; }
        /// <summary>
        /// The list of resource identifiers of the alert.
        /// Serialized Name: SecurityAlert.properties.resourceIdentifiers
        /// <para>
        /// To assign an object to the element of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IReadOnlyList<BinaryData> ResourceIdentifiers { get; }
    }
}
