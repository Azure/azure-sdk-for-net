// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary>
    /// Geodata information for a given IP address
    /// Serialized Name: EnrichmentIpGeodata
    /// </summary>
    public partial class EnrichmentIPGeodata
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="EnrichmentIPGeodata"/>. </summary>
        internal EnrichmentIPGeodata()
        {
        }

        /// <summary> Initializes a new instance of <see cref="EnrichmentIPGeodata"/>. </summary>
        /// <param name="asn">
        /// The autonomous system number associated with this IP address
        /// Serialized Name: EnrichmentIpGeodata.asn
        /// </param>
        /// <param name="carrier">
        /// The name of the carrier for this IP address
        /// Serialized Name: EnrichmentIpGeodata.carrier
        /// </param>
        /// <param name="city">
        /// The city this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.city
        /// </param>
        /// <param name="cityCf">
        /// A numeric rating of confidence that the value in the 'city' field is correct, on a scale of 0-100
        /// Serialized Name: EnrichmentIpGeodata.cityCf
        /// </param>
        /// <param name="continent">
        /// The continent this IP address is located on
        /// Serialized Name: EnrichmentIpGeodata.continent
        /// </param>
        /// <param name="country">
        /// The county this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.country
        /// </param>
        /// <param name="countryCf">
        /// A numeric rating of confidence that the value in the 'country' field is correct on a scale of 0-100
        /// Serialized Name: EnrichmentIpGeodata.countryCf
        /// </param>
        /// <param name="ipAddr">
        /// The dotted-decimal or colon-separated string representation of the IP address
        /// Serialized Name: EnrichmentIpGeodata.ipAddr
        /// </param>
        /// <param name="ipRoutingType">
        /// A description of the connection type of this IP address
        /// Serialized Name: EnrichmentIpGeodata.ipRoutingType
        /// </param>
        /// <param name="latitude">
        /// The latitude of this IP address
        /// Serialized Name: EnrichmentIpGeodata.latitude
        /// </param>
        /// <param name="longitude">
        /// The longitude of this IP address
        /// Serialized Name: EnrichmentIpGeodata.longitude
        /// </param>
        /// <param name="organization">
        /// The name of the organization for this IP address
        /// Serialized Name: EnrichmentIpGeodata.organization
        /// </param>
        /// <param name="organizationType">
        /// The type of the organization for this IP address
        /// Serialized Name: EnrichmentIpGeodata.organizationType
        /// </param>
        /// <param name="region">
        /// The geographic region this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.region
        /// </param>
        /// <param name="state">
        /// The state this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.state
        /// </param>
        /// <param name="stateCf">
        /// A numeric rating of confidence that the value in the 'state' field is correct on a scale of 0-100
        /// Serialized Name: EnrichmentIpGeodata.stateCf
        /// </param>
        /// <param name="stateCode">
        /// The abbreviated name for the state this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.stateCode
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal EnrichmentIPGeodata(string asn, string carrier, string city, int? cityCf, string continent, string country, int? countryCf, string ipAddr, string ipRoutingType, string latitude, string longitude, string organization, string organizationType, string region, string state, int? stateCf, string stateCode, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Asn = asn;
            Carrier = carrier;
            City = city;
            CityCf = cityCf;
            Continent = continent;
            Country = country;
            CountryCf = countryCf;
            IPAddr = ipAddr;
            IPRoutingType = ipRoutingType;
            Latitude = latitude;
            Longitude = longitude;
            Organization = organization;
            OrganizationType = organizationType;
            Region = region;
            State = state;
            StateCf = stateCf;
            StateCode = stateCode;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// The autonomous system number associated with this IP address
        /// Serialized Name: EnrichmentIpGeodata.asn
        /// </summary>
        public string Asn { get; }
        /// <summary>
        /// The name of the carrier for this IP address
        /// Serialized Name: EnrichmentIpGeodata.carrier
        /// </summary>
        public string Carrier { get; }
        /// <summary>
        /// The city this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.city
        /// </summary>
        public string City { get; }
        /// <summary>
        /// A numeric rating of confidence that the value in the 'city' field is correct, on a scale of 0-100
        /// Serialized Name: EnrichmentIpGeodata.cityCf
        /// </summary>
        public int? CityCf { get; }
        /// <summary>
        /// The continent this IP address is located on
        /// Serialized Name: EnrichmentIpGeodata.continent
        /// </summary>
        public string Continent { get; }
        /// <summary>
        /// The county this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.country
        /// </summary>
        public string Country { get; }
        /// <summary>
        /// A numeric rating of confidence that the value in the 'country' field is correct on a scale of 0-100
        /// Serialized Name: EnrichmentIpGeodata.countryCf
        /// </summary>
        public int? CountryCf { get; }
        /// <summary>
        /// The dotted-decimal or colon-separated string representation of the IP address
        /// Serialized Name: EnrichmentIpGeodata.ipAddr
        /// </summary>
        public string IPAddr { get; }
        /// <summary>
        /// A description of the connection type of this IP address
        /// Serialized Name: EnrichmentIpGeodata.ipRoutingType
        /// </summary>
        public string IPRoutingType { get; }
        /// <summary>
        /// The latitude of this IP address
        /// Serialized Name: EnrichmentIpGeodata.latitude
        /// </summary>
        public string Latitude { get; }
        /// <summary>
        /// The longitude of this IP address
        /// Serialized Name: EnrichmentIpGeodata.longitude
        /// </summary>
        public string Longitude { get; }
        /// <summary>
        /// The name of the organization for this IP address
        /// Serialized Name: EnrichmentIpGeodata.organization
        /// </summary>
        public string Organization { get; }
        /// <summary>
        /// The type of the organization for this IP address
        /// Serialized Name: EnrichmentIpGeodata.organizationType
        /// </summary>
        public string OrganizationType { get; }
        /// <summary>
        /// The geographic region this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.region
        /// </summary>
        public string Region { get; }
        /// <summary>
        /// The state this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.state
        /// </summary>
        public string State { get; }
        /// <summary>
        /// A numeric rating of confidence that the value in the 'state' field is correct on a scale of 0-100
        /// Serialized Name: EnrichmentIpGeodata.stateCf
        /// </summary>
        public int? StateCf { get; }
        /// <summary>
        /// The abbreviated name for the state this IP address is located in
        /// Serialized Name: EnrichmentIpGeodata.stateCode
        /// </summary>
        public string StateCode { get; }
    }
}
