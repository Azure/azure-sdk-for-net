// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> The whois record for a given domain. </summary>
    public partial class EnrichmentDomainWhoisDetails
    {
        /// <summary> Initializes a new instance of EnrichmentDomainWhoisDetails. </summary>
        internal EnrichmentDomainWhoisDetails()
        {
            NameServers = new ChangeTrackingList<string>();
            Statuses = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of EnrichmentDomainWhoisDetails. </summary>
        /// <param name="registrar"> The registrar associated with this domain. </param>
        /// <param name="contacts"> The set of contacts associated with this domain. </param>
        /// <param name="nameServers"> A list of name servers associated with this domain. </param>
        /// <param name="statuses"> The set of status flags for this whois record. </param>
        internal EnrichmentDomainWhoisDetails(EnrichmentDomainWhoisRegistrarDetails registrar, EnrichmentDomainWhoisContacts contacts, IReadOnlyList<string> nameServers, IReadOnlyList<string> statuses)
        {
            Registrar = registrar;
            Contacts = contacts;
            NameServers = nameServers;
            Statuses = statuses;
        }

        /// <summary> The registrar associated with this domain. </summary>
        public EnrichmentDomainWhoisRegistrarDetails Registrar { get; }
        /// <summary> The set of contacts associated with this domain. </summary>
        public EnrichmentDomainWhoisContacts Contacts { get; }
        /// <summary> A list of name servers associated with this domain. </summary>
        public IReadOnlyList<string> NameServers { get; }
        /// <summary> The set of status flags for this whois record. </summary>
        public IReadOnlyList<string> Statuses { get; }
    }
}
