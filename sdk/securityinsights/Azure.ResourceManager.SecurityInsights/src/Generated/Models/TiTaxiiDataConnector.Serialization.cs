// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class TiTaxiiDataConnector : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("kind"u8);
            writer.WriteStringValue(Kind.ToString());
            if (Optional.IsDefined(ETag))
            {
                writer.WritePropertyName("etag"u8);
                writer.WriteStringValue(ETag.Value.ToString());
            }
            writer.WritePropertyName("properties"u8);
            writer.WriteStartObject();
            if (Optional.IsDefined(TenantId))
            {
                writer.WritePropertyName("tenantId"u8);
                writer.WriteStringValue(TenantId.Value);
            }
            if (Optional.IsDefined(WorkspaceId))
            {
                writer.WritePropertyName("workspaceId"u8);
                writer.WriteStringValue(WorkspaceId);
            }
            if (Optional.IsDefined(FriendlyName))
            {
                writer.WritePropertyName("friendlyName"u8);
                writer.WriteStringValue(FriendlyName);
            }
            if (Optional.IsDefined(TaxiiServer))
            {
                writer.WritePropertyName("taxiiServer"u8);
                writer.WriteStringValue(TaxiiServer);
            }
            if (Optional.IsDefined(CollectionId))
            {
                writer.WritePropertyName("collectionId"u8);
                writer.WriteStringValue(CollectionId);
            }
            if (Optional.IsDefined(UserName))
            {
                writer.WritePropertyName("userName"u8);
                writer.WriteStringValue(UserName);
            }
            if (Optional.IsDefined(Password))
            {
                writer.WritePropertyName("password"u8);
                writer.WriteStringValue(Password);
            }
            if (Optional.IsDefined(TaxiiLookbackPeriod))
            {
                if (TaxiiLookbackPeriod != null)
                {
                    writer.WritePropertyName("taxiiLookbackPeriod"u8);
                    writer.WriteStringValue(TaxiiLookbackPeriod.Value, "O");
                }
                else
                {
                    writer.WriteNull("taxiiLookbackPeriod");
                }
            }
            if (Optional.IsDefined(PollingFrequency))
            {
                if (PollingFrequency != null)
                {
                    writer.WritePropertyName("pollingFrequency"u8);
                    writer.WriteStringValue(PollingFrequency.Value.ToString());
                }
                else
                {
                    writer.WriteNull("pollingFrequency");
                }
            }
            writer.WritePropertyName("dataTypes"u8);
            writer.WriteStartObject();
            if (Optional.IsDefined(TaxiiClient))
            {
                writer.WritePropertyName("taxiiClient"u8);
                writer.WriteObjectValue(TaxiiClient);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static TiTaxiiDataConnector DeserializeTiTaxiiDataConnector(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DataConnectorKind kind = default;
            Optional<ETag> etag = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<Guid> tenantId = default;
            Optional<string> workspaceId = default;
            Optional<string> friendlyName = default;
            Optional<string> taxiiServer = default;
            Optional<string> collectionId = default;
            Optional<string> userName = default;
            Optional<string> password = default;
            Optional<DateTimeOffset?> taxiiLookbackPeriod = default;
            Optional<PollingFrequency?> pollingFrequency = default;
            Optional<TiTaxiiDataConnectorDataTypesTaxiiClient> taxiiClient = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"u8))
                {
                    kind = new DataConnectorKind(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("etag"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    etag = new ETag(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("tenantId"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            tenantId = property0.Value.GetGuid();
                            continue;
                        }
                        if (property0.NameEquals("workspaceId"u8))
                        {
                            workspaceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("friendlyName"u8))
                        {
                            friendlyName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("taxiiServer"u8))
                        {
                            taxiiServer = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("collectionId"u8))
                        {
                            collectionId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("userName"u8))
                        {
                            userName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("password"u8))
                        {
                            password = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("taxiiLookbackPeriod"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                taxiiLookbackPeriod = null;
                                continue;
                            }
                            taxiiLookbackPeriod = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("pollingFrequency"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                pollingFrequency = null;
                                continue;
                            }
                            pollingFrequency = new PollingFrequency(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("dataTypes"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            foreach (var property1 in property0.Value.EnumerateObject())
                            {
                                if (property1.NameEquals("taxiiClient"u8))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        continue;
                                    }
                                    taxiiClient = TiTaxiiDataConnectorDataTypesTaxiiClient.DeserializeTiTaxiiDataConnectorDataTypesTaxiiClient(property1.Value);
                                    continue;
                                }
                            }
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new TiTaxiiDataConnector(id, name, type, systemData.Value, kind, Optional.ToNullable(etag), Optional.ToNullable(tenantId), workspaceId.Value, friendlyName.Value, taxiiServer.Value, collectionId.Value, userName.Value, password.Value, Optional.ToNullable(taxiiLookbackPeriod), Optional.ToNullable(pollingFrequency), taxiiClient.Value);
        }
    }
}
