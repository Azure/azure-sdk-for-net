// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Represents bookmark timeline item. </summary>
    public partial class BookmarkTimelineItem : EntityTimelineItem
    {
        /// <summary> Initializes a new instance of BookmarkTimelineItem. </summary>
        /// <param name="azureResourceId"> The bookmark azure resource id. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureResourceId"/> is null. </exception>
        internal BookmarkTimelineItem(string azureResourceId)
        {
            if (azureResourceId == null)
            {
                throw new ArgumentNullException(nameof(azureResourceId));
            }

            AzureResourceId = azureResourceId;
            Labels = new ChangeTrackingList<string>();
            Kind = EntityTimelineKind.Bookmark;
        }

        /// <summary> Initializes a new instance of BookmarkTimelineItem. </summary>
        /// <param name="kind"> The entity query kind type. </param>
        /// <param name="azureResourceId"> The bookmark azure resource id. </param>
        /// <param name="displayName"> The bookmark display name. </param>
        /// <param name="notes"> The notes of the bookmark. </param>
        /// <param name="endTimeUtc"> The bookmark end time. </param>
        /// <param name="startTimeUtc"> The bookmark start time. </param>
        /// <param name="eventOn"> The bookmark event time. </param>
        /// <param name="createdBy"> Describes a user that created the bookmark. </param>
        /// <param name="labels"> List of labels relevant to this bookmark. </param>
        internal BookmarkTimelineItem(EntityTimelineKind kind, string azureResourceId, string displayName, string notes, DateTimeOffset? endTimeUtc, DateTimeOffset? startTimeUtc, DateTimeOffset? eventOn, UserInfo createdBy, IReadOnlyList<string> labels) : base(kind)
        {
            AzureResourceId = azureResourceId;
            DisplayName = displayName;
            Notes = notes;
            EndTimeUtc = endTimeUtc;
            StartTimeUtc = startTimeUtc;
            EventOn = eventOn;
            CreatedBy = createdBy;
            Labels = labels;
            Kind = kind;
        }

        /// <summary> The bookmark azure resource id. </summary>
        public string AzureResourceId { get; }
        /// <summary> The bookmark display name. </summary>
        public string DisplayName { get; }
        /// <summary> The notes of the bookmark. </summary>
        public string Notes { get; }
        /// <summary> The bookmark end time. </summary>
        public DateTimeOffset? EndTimeUtc { get; }
        /// <summary> The bookmark start time. </summary>
        public DateTimeOffset? StartTimeUtc { get; }
        /// <summary> The bookmark event time. </summary>
        public DateTimeOffset? EventOn { get; }
        /// <summary> Describes a user that created the bookmark. </summary>
        public UserInfo CreatedBy { get; }
        /// <summary> List of labels relevant to this bookmark. </summary>
        public IReadOnlyList<string> Labels { get; }
    }
}
