// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary>
    /// Represents anomaly timeline item.
    /// Serialized Name: AnomalyTimelineItem
    /// </summary>
    public partial class AnomalyTimelineItem : EntityTimelineItem
    {
        /// <summary> Initializes a new instance of <see cref="AnomalyTimelineItem"/>. </summary>
        /// <param name="azureResourceId">
        /// The anomaly azure resource id.
        /// Serialized Name: AnomalyTimelineItem.azureResourceId
        /// </param>
        /// <param name="displayName">
        /// The anomaly name.
        /// Serialized Name: AnomalyTimelineItem.displayName
        /// </param>
        /// <param name="endOn">
        /// The anomaly end time.
        /// Serialized Name: AnomalyTimelineItem.endTimeUtc
        /// </param>
        /// <param name="startOn">
        /// The anomaly start time.
        /// Serialized Name: AnomalyTimelineItem.startTimeUtc
        /// </param>
        /// <param name="generatedOn">
        /// The anomaly generated time.
        /// Serialized Name: AnomalyTimelineItem.timeGenerated
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureResourceId"/> or <paramref name="displayName"/> is null. </exception>
        internal AnomalyTimelineItem(ResourceIdentifier azureResourceId, string displayName, DateTimeOffset endOn, DateTimeOffset startOn, DateTimeOffset generatedOn)
        {
            Argument.AssertNotNull(azureResourceId, nameof(azureResourceId));
            Argument.AssertNotNull(displayName, nameof(displayName));

            AzureResourceId = azureResourceId;
            DisplayName = displayName;
            EndOn = endOn;
            StartOn = startOn;
            GeneratedOn = generatedOn;
            Techniques = new ChangeTrackingList<string>();
            Reasons = new ChangeTrackingList<string>();
            Kind = EntityTimelineKind.Anomaly;
        }

        /// <summary> Initializes a new instance of <see cref="AnomalyTimelineItem"/>. </summary>
        /// <param name="kind">
        /// The entity query kind type.
        /// Serialized Name: EntityTimelineItem.kind
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="azureResourceId">
        /// The anomaly azure resource id.
        /// Serialized Name: AnomalyTimelineItem.azureResourceId
        /// </param>
        /// <param name="productName">
        /// The anomaly product name.
        /// Serialized Name: AnomalyTimelineItem.productName
        /// </param>
        /// <param name="description">
        /// The anomaly description.
        /// Serialized Name: AnomalyTimelineItem.description
        /// </param>
        /// <param name="displayName">
        /// The anomaly name.
        /// Serialized Name: AnomalyTimelineItem.displayName
        /// </param>
        /// <param name="endOn">
        /// The anomaly end time.
        /// Serialized Name: AnomalyTimelineItem.endTimeUtc
        /// </param>
        /// <param name="startOn">
        /// The anomaly start time.
        /// Serialized Name: AnomalyTimelineItem.startTimeUtc
        /// </param>
        /// <param name="generatedOn">
        /// The anomaly generated time.
        /// Serialized Name: AnomalyTimelineItem.timeGenerated
        /// </param>
        /// <param name="vendor">
        /// The name of the anomaly vendor.
        /// Serialized Name: AnomalyTimelineItem.vendor
        /// </param>
        /// <param name="intent">
        /// The intent of the anomaly.
        /// Serialized Name: AnomalyTimelineItem.intent
        /// </param>
        /// <param name="techniques">
        /// The techniques of the anomaly.
        /// Serialized Name: AnomalyTimelineItem.techniques
        /// </param>
        /// <param name="reasons">
        /// The reasons that cause the anomaly.
        /// Serialized Name: AnomalyTimelineItem.reasons
        /// </param>
        internal AnomalyTimelineItem(EntityTimelineKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, ResourceIdentifier azureResourceId, string productName, string description, string displayName, DateTimeOffset endOn, DateTimeOffset startOn, DateTimeOffset generatedOn, string vendor, string intent, IReadOnlyList<string> techniques, IReadOnlyList<string> reasons) : base(kind, serializedAdditionalRawData)
        {
            AzureResourceId = azureResourceId;
            ProductName = productName;
            Description = description;
            DisplayName = displayName;
            EndOn = endOn;
            StartOn = startOn;
            GeneratedOn = generatedOn;
            Vendor = vendor;
            Intent = intent;
            Techniques = techniques;
            Reasons = reasons;
            Kind = kind;
        }

        /// <summary> Initializes a new instance of <see cref="AnomalyTimelineItem"/> for deserialization. </summary>
        internal AnomalyTimelineItem()
        {
        }

        /// <summary>
        /// The anomaly azure resource id.
        /// Serialized Name: AnomalyTimelineItem.azureResourceId
        /// </summary>
        public ResourceIdentifier AzureResourceId { get; }
        /// <summary>
        /// The anomaly product name.
        /// Serialized Name: AnomalyTimelineItem.productName
        /// </summary>
        public string ProductName { get; }
        /// <summary>
        /// The anomaly description.
        /// Serialized Name: AnomalyTimelineItem.description
        /// </summary>
        public string Description { get; }
        /// <summary>
        /// The anomaly name.
        /// Serialized Name: AnomalyTimelineItem.displayName
        /// </summary>
        public string DisplayName { get; }
        /// <summary>
        /// The anomaly end time.
        /// Serialized Name: AnomalyTimelineItem.endTimeUtc
        /// </summary>
        public DateTimeOffset EndOn { get; }
        /// <summary>
        /// The anomaly start time.
        /// Serialized Name: AnomalyTimelineItem.startTimeUtc
        /// </summary>
        public DateTimeOffset StartOn { get; }
        /// <summary>
        /// The anomaly generated time.
        /// Serialized Name: AnomalyTimelineItem.timeGenerated
        /// </summary>
        public DateTimeOffset GeneratedOn { get; }
        /// <summary>
        /// The name of the anomaly vendor.
        /// Serialized Name: AnomalyTimelineItem.vendor
        /// </summary>
        public string Vendor { get; }
        /// <summary>
        /// The intent of the anomaly.
        /// Serialized Name: AnomalyTimelineItem.intent
        /// </summary>
        public string Intent { get; }
        /// <summary>
        /// The techniques of the anomaly.
        /// Serialized Name: AnomalyTimelineItem.techniques
        /// </summary>
        public IReadOnlyList<string> Techniques { get; }
        /// <summary>
        /// The reasons that cause the anomaly.
        /// Serialized Name: AnomalyTimelineItem.reasons
        /// </summary>
        public IReadOnlyList<string> Reasons { get; }
    }
}
