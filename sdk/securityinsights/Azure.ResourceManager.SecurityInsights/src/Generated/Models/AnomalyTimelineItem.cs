// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Represents anomaly timeline item. </summary>
    public partial class AnomalyTimelineItem : EntityTimelineItem
    {
        /// <summary> Initializes a new instance of AnomalyTimelineItem. </summary>
        /// <param name="azureResourceId"> The anomaly azure resource id. </param>
        /// <param name="displayName"> The anomaly name. </param>
        /// <param name="endTimeUtc"> The anomaly end time. </param>
        /// <param name="startTimeUtc"> The anomaly start time. </param>
        /// <param name="timeGenerated"> The anomaly generated time. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureResourceId"/> or <paramref name="displayName"/> is null. </exception>
        internal AnomalyTimelineItem(string azureResourceId, string displayName, DateTimeOffset endTimeUtc, DateTimeOffset startTimeUtc, DateTimeOffset timeGenerated)
        {
            if (azureResourceId == null)
            {
                throw new ArgumentNullException(nameof(azureResourceId));
            }
            if (displayName == null)
            {
                throw new ArgumentNullException(nameof(displayName));
            }

            AzureResourceId = azureResourceId;
            DisplayName = displayName;
            EndTimeUtc = endTimeUtc;
            StartTimeUtc = startTimeUtc;
            TimeGenerated = timeGenerated;
            Techniques = new ChangeTrackingList<string>();
            Reasons = new ChangeTrackingList<string>();
            Kind = EntityTimelineKind.Anomaly;
        }

        /// <summary> Initializes a new instance of AnomalyTimelineItem. </summary>
        /// <param name="kind"> The entity query kind type. </param>
        /// <param name="azureResourceId"> The anomaly azure resource id. </param>
        /// <param name="productName"> The anomaly product name. </param>
        /// <param name="description"> The anomaly description. </param>
        /// <param name="displayName"> The anomaly name. </param>
        /// <param name="endTimeUtc"> The anomaly end time. </param>
        /// <param name="startTimeUtc"> The anomaly start time. </param>
        /// <param name="timeGenerated"> The anomaly generated time. </param>
        /// <param name="vendor"> The name of the anomaly vendor. </param>
        /// <param name="intent"> The intent of the anomaly. </param>
        /// <param name="techniques"> The techniques of the anomaly. </param>
        /// <param name="reasons"> The reasons that cause the anomaly. </param>
        internal AnomalyTimelineItem(EntityTimelineKind kind, string azureResourceId, string productName, string description, string displayName, DateTimeOffset endTimeUtc, DateTimeOffset startTimeUtc, DateTimeOffset timeGenerated, string vendor, string intent, IReadOnlyList<string> techniques, IReadOnlyList<string> reasons) : base(kind)
        {
            AzureResourceId = azureResourceId;
            ProductName = productName;
            Description = description;
            DisplayName = displayName;
            EndTimeUtc = endTimeUtc;
            StartTimeUtc = startTimeUtc;
            TimeGenerated = timeGenerated;
            Vendor = vendor;
            Intent = intent;
            Techniques = techniques;
            Reasons = reasons;
            Kind = kind;
        }

        /// <summary> The anomaly azure resource id. </summary>
        public string AzureResourceId { get; }
        /// <summary> The anomaly product name. </summary>
        public string ProductName { get; }
        /// <summary> The anomaly description. </summary>
        public string Description { get; }
        /// <summary> The anomaly name. </summary>
        public string DisplayName { get; }
        /// <summary> The anomaly end time. </summary>
        public DateTimeOffset EndTimeUtc { get; }
        /// <summary> The anomaly start time. </summary>
        public DateTimeOffset StartTimeUtc { get; }
        /// <summary> The anomaly generated time. </summary>
        public DateTimeOffset TimeGenerated { get; }
        /// <summary> The name of the anomaly vendor. </summary>
        public string Vendor { get; }
        /// <summary> The intent of the anomaly. </summary>
        public string Intent { get; }
        /// <summary> The techniques of the anomaly. </summary>
        public IReadOnlyList<string> Techniques { get; }
        /// <summary> The reasons that cause the anomaly. </summary>
        public IReadOnlyList<string> Reasons { get; }
    }
}
