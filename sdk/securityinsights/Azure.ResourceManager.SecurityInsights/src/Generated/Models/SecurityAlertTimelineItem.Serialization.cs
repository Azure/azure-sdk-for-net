// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class SecurityAlertTimelineItem
    {
        internal static SecurityAlertTimelineItem DeserializeSecurityAlertTimelineItem(JsonElement element)
        {
            string azureResourceId = default;
            Optional<string> productName = default;
            Optional<string> description = default;
            string displayName = default;
            AlertSeverity severity = default;
            DateTimeOffset endTimeUtc = default;
            DateTimeOffset startTimeUtc = default;
            DateTimeOffset timeGenerated = default;
            string alertType = default;
            Optional<KillChainIntent> intent = default;
            Optional<IReadOnlyList<string>> techniques = default;
            EntityTimelineKind kind = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("azureResourceId"))
                {
                    azureResourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("productName"))
                {
                    productName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("displayName"))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("severity"))
                {
                    severity = new AlertSeverity(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("endTimeUtc"))
                {
                    endTimeUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("startTimeUtc"))
                {
                    startTimeUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("timeGenerated"))
                {
                    timeGenerated = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("alertType"))
                {
                    alertType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("intent"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    intent = new KillChainIntent(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("techniques"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    techniques = array;
                    continue;
                }
                if (property.NameEquals("kind"))
                {
                    kind = new EntityTimelineKind(property.Value.GetString());
                    continue;
                }
            }
            return new SecurityAlertTimelineItem(kind, azureResourceId, productName.Value, description.Value, displayName, severity, endTimeUtc, startTimeUtc, timeGenerated, alertType, Optional.ToNullable(intent), Optional.ToList(techniques));
        }
    }
}
