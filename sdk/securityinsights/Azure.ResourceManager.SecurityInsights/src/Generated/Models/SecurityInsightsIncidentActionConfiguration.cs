// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> The SecurityInsightsIncidentActionConfiguration. </summary>
    public partial class SecurityInsightsIncidentActionConfiguration
    {
        /// <summary> Initializes a new instance of <see cref="SecurityInsightsIncidentActionConfiguration"/>. </summary>
        public SecurityInsightsIncidentActionConfiguration()
        {
            Labels = new ChangeTrackingList<SecurityInsightsIncidentLabel>();
        }

        /// <summary> Initializes a new instance of <see cref="SecurityInsightsIncidentActionConfiguration"/>. </summary>
        /// <param name="severity"> The severity of the incident. </param>
        /// <param name="status"> The status of the incident. </param>
        /// <param name="classification"> The reason the incident was closed. </param>
        /// <param name="classificationReason"> The classification reason the incident was closed with. </param>
        /// <param name="classificationComment"> Describes the reason the incident was closed. </param>
        /// <param name="owner"> Information on the user an incident is assigned to. </param>
        /// <param name="labels"> List of labels to add to the incident. </param>
        internal SecurityInsightsIncidentActionConfiguration(SecurityInsightsIncidentSeverity? severity, SecurityInsightsIncidentStatus? status, SecurityInsightsIncidentClassification? classification, SecurityInsightsIncidentClassificationReason? classificationReason, string classificationComment, SecurityInsightsIncidentOwnerInfo owner, IList<SecurityInsightsIncidentLabel> labels)
        {
            Severity = severity;
            Status = status;
            Classification = classification;
            ClassificationReason = classificationReason;
            ClassificationComment = classificationComment;
            Owner = owner;
            Labels = labels;
        }

        /// <summary> The severity of the incident. </summary>
        public SecurityInsightsIncidentSeverity? Severity { get; set; }
        /// <summary> The status of the incident. </summary>
        public SecurityInsightsIncidentStatus? Status { get; set; }
        /// <summary> The reason the incident was closed. </summary>
        public SecurityInsightsIncidentClassification? Classification { get; set; }
        /// <summary> The classification reason the incident was closed with. </summary>
        public SecurityInsightsIncidentClassificationReason? ClassificationReason { get; set; }
        /// <summary> Describes the reason the incident was closed. </summary>
        public string ClassificationComment { get; set; }
        /// <summary> Information on the user an incident is assigned to. </summary>
        public SecurityInsightsIncidentOwnerInfo Owner { get; set; }
        /// <summary> List of labels to add to the incident. </summary>
        public IList<SecurityInsightsIncidentLabel> Labels { get; }
    }
}
