// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class ResourceProvider : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Provider))
            {
                writer.WritePropertyName("provider");
                writer.WriteStringValue(Provider.Value.ToString());
            }
            if (Optional.IsDefined(PermissionsDisplayText))
            {
                writer.WritePropertyName("permissionsDisplayText");
                writer.WriteStringValue(PermissionsDisplayText);
            }
            if (Optional.IsDefined(ProviderDisplayName))
            {
                writer.WritePropertyName("providerDisplayName");
                writer.WriteStringValue(ProviderDisplayName);
            }
            if (Optional.IsDefined(Scope))
            {
                writer.WritePropertyName("scope");
                writer.WriteStringValue(Scope.Value.ToString());
            }
            if (Optional.IsDefined(RequiredPermissions))
            {
                writer.WritePropertyName("requiredPermissions");
                writer.WriteObjectValue(RequiredPermissions);
            }
            writer.WriteEndObject();
        }

        internal static ResourceProvider DeserializeResourceProvider(JsonElement element)
        {
            Optional<ProviderName> provider = default;
            Optional<string> permissionsDisplayText = default;
            Optional<string> providerDisplayName = default;
            Optional<PermissionProviderScope> scope = default;
            Optional<RequiredPermissions> requiredPermissions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provider"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provider = new ProviderName(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("permissionsDisplayText"))
                {
                    permissionsDisplayText = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("providerDisplayName"))
                {
                    providerDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("scope"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    scope = new PermissionProviderScope(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("requiredPermissions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    requiredPermissions = RequiredPermissions.DeserializeRequiredPermissions(property.Value);
                    continue;
                }
            }
            return new ResourceProvider(Optional.ToNullable(provider), permissionsDisplayText.Value, providerDisplayName.Value, Optional.ToNullable(scope), requiredPermissions.Value);
        }
    }
}
