// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class FusionTemplateSubTypeSeverityFilter : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("isSupported"u8);
            writer.WriteBooleanValue(IsSupported);
            if (Optional.IsCollectionDefined(SeverityFilters))
            {
                writer.WritePropertyName("severityFilters"u8);
                writer.WriteStartArray();
                foreach (var item in SeverityFilters)
                {
                    writer.WriteStringValue(item.ToString());
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static FusionTemplateSubTypeSeverityFilter DeserializeFusionTemplateSubTypeSeverityFilter(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            bool isSupported = default;
            Optional<IList<SecurityInsightsAlertSeverity>> severityFilters = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("isSupported"u8))
                {
                    isSupported = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("severityFilters"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<SecurityInsightsAlertSeverity> array = new List<SecurityInsightsAlertSeverity>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new SecurityInsightsAlertSeverity(item.GetString()));
                    }
                    severityFilters = array;
                    continue;
                }
            }
            return new FusionTemplateSubTypeSeverityFilter(isSupported, Optional.ToList(severityFilters));
        }
    }
}
