// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class AutomationRulePropertyArrayValuesCondition : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ArrayType))
            {
                writer.WritePropertyName("arrayType");
                writer.WriteStringValue(ArrayType.Value.ToString());
            }
            if (Optional.IsDefined(ArrayConditionType))
            {
                writer.WritePropertyName("arrayConditionType");
                writer.WriteStringValue(ArrayConditionType.Value.ToString());
            }
            if (Optional.IsCollectionDefined(ItemConditions))
            {
                writer.WritePropertyName("itemConditions");
                writer.WriteStartArray();
                foreach (var item in ItemConditions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static AutomationRulePropertyArrayValuesCondition DeserializeAutomationRulePropertyArrayValuesCondition(JsonElement element)
        {
            Optional<AutomationRulePropertyArrayConditionSupportedArrayType> arrayType = default;
            Optional<AutomationRulePropertyArrayConditionSupportedArrayConditionType> arrayConditionType = default;
            Optional<IList<AutomationRuleCondition>> itemConditions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("arrayType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    arrayType = new AutomationRulePropertyArrayConditionSupportedArrayType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("arrayConditionType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    arrayConditionType = new AutomationRulePropertyArrayConditionSupportedArrayConditionType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("itemConditions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AutomationRuleCondition> array = new List<AutomationRuleCondition>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AutomationRuleCondition.DeserializeAutomationRuleCondition(item));
                    }
                    itemConditions = array;
                    continue;
                }
            }
            return new AutomationRulePropertyArrayValuesCondition(Optional.ToNullable(arrayType), Optional.ToNullable(arrayConditionType), Optional.ToList(itemConditions));
        }
    }
}
