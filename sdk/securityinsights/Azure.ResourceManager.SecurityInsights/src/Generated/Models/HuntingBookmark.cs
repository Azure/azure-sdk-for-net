// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityInsights;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Represents a Hunting bookmark entity. </summary>
    public partial class HuntingBookmark : EntityData
    {
        /// <summary> Initializes a new instance of HuntingBookmark. </summary>
        public HuntingBookmark()
        {
            AdditionalData = new ChangeTrackingDictionary<string, BinaryData>();
            Labels = new ChangeTrackingList<string>();
            Kind = EntityKind.Bookmark;
        }

        /// <summary> Initializes a new instance of HuntingBookmark. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> The kind of the entity. </param>
        /// <param name="additionalData"> A bag of custom fields that should be part of the entity and will be presented to the user. </param>
        /// <param name="friendlyName"> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </param>
        /// <param name="created"> The time the bookmark was created. </param>
        /// <param name="createdBy"> Describes a user that created the bookmark. </param>
        /// <param name="displayName"> The display name of the bookmark. </param>
        /// <param name="eventOn"> The time of the event. </param>
        /// <param name="labels"> List of labels relevant to this bookmark. </param>
        /// <param name="notes"> The notes of the bookmark. </param>
        /// <param name="query"> The query of the bookmark. </param>
        /// <param name="queryResult"> The query result of the bookmark. </param>
        /// <param name="updatedOn"> The last time the bookmark was updated. </param>
        /// <param name="updatedBy"> Describes a user that updated the bookmark. </param>
        /// <param name="incidentInfo"> Describes an incident that relates to bookmark. </param>
        internal HuntingBookmark(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, EntityKind kind, IReadOnlyDictionary<string, BinaryData> additionalData, string friendlyName, DateTimeOffset? created, UserInfo createdBy, string displayName, DateTimeOffset? eventOn, IList<string> labels, string notes, string query, string queryResult, DateTimeOffset? updatedOn, UserInfo updatedBy, IncidentInfo incidentInfo) : base(id, name, resourceType, systemData, kind)
        {
            AdditionalData = additionalData;
            FriendlyName = friendlyName;
            Created = created;
            CreatedBy = createdBy;
            DisplayName = displayName;
            EventOn = eventOn;
            Labels = labels;
            Notes = notes;
            Query = query;
            QueryResult = queryResult;
            UpdatedOn = updatedOn;
            UpdatedBy = updatedBy;
            IncidentInfo = incidentInfo;
            Kind = kind;
        }

        /// <summary> A bag of custom fields that should be part of the entity and will be presented to the user. </summary>
        public IReadOnlyDictionary<string, BinaryData> AdditionalData { get; }
        /// <summary> The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated. </summary>
        public string FriendlyName { get; }
        /// <summary> The time the bookmark was created. </summary>
        public DateTimeOffset? Created { get; set; }
        /// <summary> Describes a user that created the bookmark. </summary>
        public UserInfo CreatedBy { get; set; }
        /// <summary> The display name of the bookmark. </summary>
        public string DisplayName { get; set; }
        /// <summary> The time of the event. </summary>
        public DateTimeOffset? EventOn { get; set; }
        /// <summary> List of labels relevant to this bookmark. </summary>
        public IList<string> Labels { get; }
        /// <summary> The notes of the bookmark. </summary>
        public string Notes { get; set; }
        /// <summary> The query of the bookmark. </summary>
        public string Query { get; set; }
        /// <summary> The query result of the bookmark. </summary>
        public string QueryResult { get; set; }
        /// <summary> The last time the bookmark was updated. </summary>
        public DateTimeOffset? UpdatedOn { get; set; }
        /// <summary> Describes a user that updated the bookmark. </summary>
        public UserInfo UpdatedBy { get; set; }
        /// <summary> Describes an incident that relates to bookmark. </summary>
        public IncidentInfo IncidentInfo { get; set; }
    }
}
