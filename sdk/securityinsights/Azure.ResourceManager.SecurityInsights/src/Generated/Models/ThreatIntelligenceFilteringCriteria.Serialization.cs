// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    public partial class ThreatIntelligenceFilteringCriteria : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PageSize))
            {
                writer.WritePropertyName("pageSize"u8);
                writer.WriteNumberValue(PageSize.Value);
            }
            if (Optional.IsDefined(MinConfidence))
            {
                writer.WritePropertyName("minConfidence"u8);
                writer.WriteNumberValue(MinConfidence.Value);
            }
            if (Optional.IsDefined(MaxConfidence))
            {
                writer.WritePropertyName("maxConfidence"u8);
                writer.WriteNumberValue(MaxConfidence.Value);
            }
            if (Optional.IsDefined(MinValidUntil))
            {
                writer.WritePropertyName("minValidUntil"u8);
                writer.WriteStringValue(MinValidUntil.Value, "O");
            }
            if (Optional.IsDefined(MaxValidUntil))
            {
                writer.WritePropertyName("maxValidUntil"u8);
                writer.WriteStringValue(MaxValidUntil.Value, "O");
            }
            if (Optional.IsDefined(IsIncludeDisabled))
            {
                writer.WritePropertyName("includeDisabled"u8);
                writer.WriteBooleanValue(IsIncludeDisabled.Value);
            }
            if (Optional.IsCollectionDefined(SortBy))
            {
                writer.WritePropertyName("sortBy"u8);
                writer.WriteStartArray();
                foreach (var item in SortBy)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Sources))
            {
                writer.WritePropertyName("sources"u8);
                writer.WriteStartArray();
                foreach (var item in Sources)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(PatternTypes))
            {
                writer.WritePropertyName("patternTypes"u8);
                writer.WriteStartArray();
                foreach (var item in PatternTypes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ThreatTypes))
            {
                writer.WritePropertyName("threatTypes"u8);
                writer.WriteStartArray();
                foreach (var item in ThreatTypes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Ids))
            {
                writer.WritePropertyName("ids"u8);
                writer.WriteStartArray();
                foreach (var item in Ids)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Keywords))
            {
                writer.WritePropertyName("keywords"u8);
                writer.WriteStartArray();
                foreach (var item in Keywords)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(SkipToken))
            {
                writer.WritePropertyName("skipToken"u8);
                writer.WriteStringValue(SkipToken);
            }
            writer.WriteEndObject();
        }
    }
}
