// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Whois information for a given domain and associated metadata. </summary>
    public partial class EnrichmentDomainWhois
    {
        /// <summary> Initializes a new instance of EnrichmentDomainWhois. </summary>
        internal EnrichmentDomainWhois()
        {
        }

        /// <summary> Initializes a new instance of EnrichmentDomainWhois. </summary>
        /// <param name="domain"> The domain for this whois record. </param>
        /// <param name="server"> The hostname of this registrar&apos;s whois server. </param>
        /// <param name="created"> The timestamp at which this record was created. </param>
        /// <param name="updated"> The timestamp at which this record was last updated. </param>
        /// <param name="expires"> The timestamp at which this record will expire. </param>
        /// <param name="parsedWhois"> The whois record for a given domain. </param>
        internal EnrichmentDomainWhois(string domain, string server, DateTimeOffset? created, DateTimeOffset? updated, DateTimeOffset? expires, EnrichmentDomainWhoisDetails parsedWhois)
        {
            Domain = domain;
            Server = server;
            Created = created;
            Updated = updated;
            Expires = expires;
            ParsedWhois = parsedWhois;
        }

        /// <summary> The domain for this whois record. </summary>
        public string Domain { get; }
        /// <summary> The hostname of this registrar&apos;s whois server. </summary>
        public string Server { get; }
        /// <summary> The timestamp at which this record was created. </summary>
        public DateTimeOffset? Created { get; }
        /// <summary> The timestamp at which this record was last updated. </summary>
        public DateTimeOffset? Updated { get; }
        /// <summary> The timestamp at which this record will expire. </summary>
        public DateTimeOffset? Expires { get; }
        /// <summary> The whois record for a given domain. </summary>
        public EnrichmentDomainWhoisDetails ParsedWhois { get; }
    }
}
