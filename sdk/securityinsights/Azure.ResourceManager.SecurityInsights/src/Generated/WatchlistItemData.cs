// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights
{
    /// <summary> A class representing the WatchlistItem data model. </summary>
    public partial class WatchlistItemData : ResourceData
    {
        /// <summary> Initializes a new instance of WatchlistItemData. </summary>
        public WatchlistItemData()
        {
            ItemsKeyValue = new ChangeTrackingDictionary<string, BinaryData>();
            EntityMapping = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of WatchlistItemData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="watchlistItemType"> The type of the watchlist item. </param>
        /// <param name="watchlistItemId"> The id (a Guid) of the watchlist item. </param>
        /// <param name="tenantId"> The tenantId to which the watchlist item belongs to. </param>
        /// <param name="isDeleted"> A flag that indicates if the watchlist item is deleted or not. </param>
        /// <param name="created"> The time the watchlist item was created. </param>
        /// <param name="updatedOn"> The last time the watchlist item was updated. </param>
        /// <param name="createdBy"> Describes a user that created the watchlist item. </param>
        /// <param name="updatedBy"> Describes a user that updated the watchlist item. </param>
        /// <param name="itemsKeyValue"> key-value pairs for a watchlist item. </param>
        /// <param name="entityMapping"> key-value pairs for a watchlist item entity mapping. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        internal WatchlistItemData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string watchlistItemType, string watchlistItemId, Guid? tenantId, bool? isDeleted, DateTimeOffset? created, DateTimeOffset? updatedOn, UserInfo createdBy, UserInfo updatedBy, IDictionary<string, BinaryData> itemsKeyValue, IDictionary<string, BinaryData> entityMapping, ETag? etag) : base(id, name, resourceType, systemData)
        {
            WatchlistItemType = watchlistItemType;
            WatchlistItemId = watchlistItemId;
            TenantId = tenantId;
            IsDeleted = isDeleted;
            Created = created;
            UpdatedOn = updatedOn;
            CreatedBy = createdBy;
            UpdatedBy = updatedBy;
            ItemsKeyValue = itemsKeyValue;
            EntityMapping = entityMapping;
            ETag = etag;
        }

        /// <summary> The type of the watchlist item. </summary>
        public string WatchlistItemType { get; set; }
        /// <summary> The id (a Guid) of the watchlist item. </summary>
        public string WatchlistItemId { get; set; }
        /// <summary> The tenantId to which the watchlist item belongs to. </summary>
        public Guid? TenantId { get; set; }
        /// <summary> A flag that indicates if the watchlist item is deleted or not. </summary>
        public bool? IsDeleted { get; set; }
        /// <summary> The time the watchlist item was created. </summary>
        public DateTimeOffset? Created { get; set; }
        /// <summary> The last time the watchlist item was updated. </summary>
        public DateTimeOffset? UpdatedOn { get; set; }
        /// <summary> Describes a user that created the watchlist item. </summary>
        public UserInfo CreatedBy { get; set; }
        /// <summary> Describes a user that updated the watchlist item. </summary>
        public UserInfo UpdatedBy { get; set; }
        /// <summary> key-value pairs for a watchlist item. </summary>
        public IDictionary<string, BinaryData> ItemsKeyValue { get; }
        /// <summary> key-value pairs for a watchlist item entity mapping. </summary>
        public IDictionary<string, BinaryData> EntityMapping { get; }
        /// <summary> Etag of the azure resource. </summary>
        public ETag? ETag { get; set; }
    }
}
