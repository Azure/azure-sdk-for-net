// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights.Samples
{
    public partial class Sample_WorkspaceManagerConfigurationResource
    {
        // Get a workspace manager configuration.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetAWorkspaceManagerConfiguration()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/workspaceManagerConfigurations/GetWorkspaceManagerConfiguration.json
            // this example is just showing the usage of "WorkspaceManagerConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceManagerConfigurationResource created on azure
            // for more information of creating WorkspaceManagerConfigurationResource, please refer to the document of WorkspaceManagerConfigurationResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string workspaceManagerConfigurationName = "default";
            ResourceIdentifier workspaceManagerConfigurationResourceId = WorkspaceManagerConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, workspaceManagerConfigurationName);
            WorkspaceManagerConfigurationResource workspaceManagerConfiguration = client.GetWorkspaceManagerConfigurationResource(workspaceManagerConfigurationResourceId);

            // invoke the operation
            WorkspaceManagerConfigurationResource result = await workspaceManagerConfiguration.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WorkspaceManagerConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete a workspace manager configuration.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteAWorkspaceManagerConfiguration()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/workspaceManagerConfigurations/DeleteWorkspaceManagerConfiguration.json
            // this example is just showing the usage of "WorkspaceManagerConfigurations_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceManagerConfigurationResource created on azure
            // for more information of creating WorkspaceManagerConfigurationResource, please refer to the document of WorkspaceManagerConfigurationResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string workspaceManagerConfigurationName = "default";
            ResourceIdentifier workspaceManagerConfigurationResourceId = WorkspaceManagerConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, workspaceManagerConfigurationName);
            WorkspaceManagerConfigurationResource workspaceManagerConfiguration = client.GetWorkspaceManagerConfigurationResource(workspaceManagerConfigurationResourceId);

            // invoke the operation
            await workspaceManagerConfiguration.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Create or Update a workspace manager Configuration
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreateOrUpdateAWorkspaceManagerConfiguration()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/workspaceManagerConfigurations/CreateOrUpdateWorkspaceManagerConfiguration.json
            // this example is just showing the usage of "WorkspaceManagerConfigurations_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceManagerConfigurationResource created on azure
            // for more information of creating WorkspaceManagerConfigurationResource, please refer to the document of WorkspaceManagerConfigurationResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string workspaceManagerConfigurationName = "default";
            ResourceIdentifier workspaceManagerConfigurationResourceId = WorkspaceManagerConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, workspaceManagerConfigurationName);
            WorkspaceManagerConfigurationResource workspaceManagerConfiguration = client.GetWorkspaceManagerConfigurationResource(workspaceManagerConfigurationResourceId);

            // invoke the operation
            WorkspaceManagerConfigurationData data = new WorkspaceManagerConfigurationData()
            {
                Mode = WorkspaceManagerConfigurationMode.Enabled,
            };
            ArmOperation<WorkspaceManagerConfigurationResource> lro = await workspaceManagerConfiguration.UpdateAsync(WaitUntil.Completed, data);
            WorkspaceManagerConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WorkspaceManagerConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
