// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;

namespace Azure.ResourceManager.SecurityInsights.Samples
{
    public partial class Sample_SecurityInsightsAutomationRuleCollection
    {
        // AutomationRules_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_AutomationRulesGet()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/automationRules/AutomationRules_Get.json
            // this example is just showing the usage of "AutomationRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OperationalInsightsWorkspaceSecurityInsightsResource created on azure
            // for more information of creating OperationalInsightsWorkspaceSecurityInsightsResource, please refer to the document of OperationalInsightsWorkspaceSecurityInsightsResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            ResourceIdentifier operationalInsightsWorkspaceSecurityInsightsResourceId = OperationalInsightsWorkspaceSecurityInsightsResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            OperationalInsightsWorkspaceSecurityInsightsResource operationalInsightsWorkspaceSecurityInsights = client.GetOperationalInsightsWorkspaceSecurityInsightsResource(operationalInsightsWorkspaceSecurityInsightsResourceId);

            // get the collection of this SecurityInsightsAutomationRuleResource
            SecurityInsightsAutomationRuleCollection collection = operationalInsightsWorkspaceSecurityInsights.GetSecurityInsightsAutomationRules();

            // invoke the operation
            string automationRuleId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5";
            SecurityInsightsAutomationRuleResource result = await collection.GetAsync(automationRuleId);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SecurityInsightsAutomationRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // AutomationRules_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_AutomationRulesGet()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/automationRules/AutomationRules_Get.json
            // this example is just showing the usage of "AutomationRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OperationalInsightsWorkspaceSecurityInsightsResource created on azure
            // for more information of creating OperationalInsightsWorkspaceSecurityInsightsResource, please refer to the document of OperationalInsightsWorkspaceSecurityInsightsResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            ResourceIdentifier operationalInsightsWorkspaceSecurityInsightsResourceId = OperationalInsightsWorkspaceSecurityInsightsResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            OperationalInsightsWorkspaceSecurityInsightsResource operationalInsightsWorkspaceSecurityInsights = client.GetOperationalInsightsWorkspaceSecurityInsightsResource(operationalInsightsWorkspaceSecurityInsightsResourceId);

            // get the collection of this SecurityInsightsAutomationRuleResource
            SecurityInsightsAutomationRuleCollection collection = operationalInsightsWorkspaceSecurityInsights.GetSecurityInsightsAutomationRules();

            // invoke the operation
            string automationRuleId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5";
            bool result = await collection.ExistsAsync(automationRuleId);

            Console.WriteLine($"Succeeded: {result}");
        }

        // AutomationRules_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_AutomationRulesGet()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/automationRules/AutomationRules_Get.json
            // this example is just showing the usage of "AutomationRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OperationalInsightsWorkspaceSecurityInsightsResource created on azure
            // for more information of creating OperationalInsightsWorkspaceSecurityInsightsResource, please refer to the document of OperationalInsightsWorkspaceSecurityInsightsResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            ResourceIdentifier operationalInsightsWorkspaceSecurityInsightsResourceId = OperationalInsightsWorkspaceSecurityInsightsResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            OperationalInsightsWorkspaceSecurityInsightsResource operationalInsightsWorkspaceSecurityInsights = client.GetOperationalInsightsWorkspaceSecurityInsightsResource(operationalInsightsWorkspaceSecurityInsightsResourceId);

            // get the collection of this SecurityInsightsAutomationRuleResource
            SecurityInsightsAutomationRuleCollection collection = operationalInsightsWorkspaceSecurityInsights.GetSecurityInsightsAutomationRules();

            // invoke the operation
            string automationRuleId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5";
            NullableResponse<SecurityInsightsAutomationRuleResource> response = await collection.GetIfExistsAsync(automationRuleId);
            SecurityInsightsAutomationRuleResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                SecurityInsightsAutomationRuleData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // AutomationRules_List
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_AutomationRulesList()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/automationRules/AutomationRules_List.json
            // this example is just showing the usage of "AutomationRules_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OperationalInsightsWorkspaceSecurityInsightsResource created on azure
            // for more information of creating OperationalInsightsWorkspaceSecurityInsightsResource, please refer to the document of OperationalInsightsWorkspaceSecurityInsightsResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            ResourceIdentifier operationalInsightsWorkspaceSecurityInsightsResourceId = OperationalInsightsWorkspaceSecurityInsightsResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            OperationalInsightsWorkspaceSecurityInsightsResource operationalInsightsWorkspaceSecurityInsights = client.GetOperationalInsightsWorkspaceSecurityInsightsResource(operationalInsightsWorkspaceSecurityInsightsResourceId);

            // get the collection of this SecurityInsightsAutomationRuleResource
            SecurityInsightsAutomationRuleCollection collection = operationalInsightsWorkspaceSecurityInsights.GetSecurityInsightsAutomationRules();

            // invoke the operation and iterate over the result
            await foreach (SecurityInsightsAutomationRuleResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                SecurityInsightsAutomationRuleData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
