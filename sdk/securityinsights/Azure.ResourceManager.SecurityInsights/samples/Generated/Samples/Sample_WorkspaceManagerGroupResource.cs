// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;

namespace Azure.ResourceManager.SecurityInsights.Samples
{
    public partial class Sample_WorkspaceManagerGroupResource
    {
        // Get a workspace manager group
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetAWorkspaceManagerGroup()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/workspaceManagerGroups/GetWorkspaceManagerGroup.json
            // this example is just showing the usage of "WorkspaceManagerGroups_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceManagerGroupResource created on azure
            // for more information of creating WorkspaceManagerGroupResource, please refer to the document of WorkspaceManagerGroupResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string workspaceManagerGroupName = "37207a7a-3b8a-438f-a559-c7df400e1b96";
            ResourceIdentifier workspaceManagerGroupResourceId = WorkspaceManagerGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, workspaceManagerGroupName);
            WorkspaceManagerGroupResource workspaceManagerGroup = client.GetWorkspaceManagerGroupResource(workspaceManagerGroupResourceId);

            // invoke the operation
            WorkspaceManagerGroupResource result = await workspaceManagerGroup.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WorkspaceManagerGroupData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Creates or updates a workspace manager group.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreatesOrUpdatesAWorkspaceManagerGroup()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/workspaceManagerGroups/CreateOrUpdateWorkspaceManagerGroup.json
            // this example is just showing the usage of "WorkspaceManagerGroups_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceManagerGroupResource created on azure
            // for more information of creating WorkspaceManagerGroupResource, please refer to the document of WorkspaceManagerGroupResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string workspaceManagerGroupName = "37207a7a-3b8a-438f-a559-c7df400e1b96";
            ResourceIdentifier workspaceManagerGroupResourceId = WorkspaceManagerGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, workspaceManagerGroupName);
            WorkspaceManagerGroupResource workspaceManagerGroup = client.GetWorkspaceManagerGroupResource(workspaceManagerGroupResourceId);

            // invoke the operation
            WorkspaceManagerGroupData data = new WorkspaceManagerGroupData()
            {
                Description = "Group of all financial and banking institutions",
                DisplayName = "Banks",
                MemberResourceNames =
{
"afbd324f-6c48-459c-8710-8d1e1cd03812","f5fa104e-c0e3-4747-9182-d342dc048a9e"
},
            };
            ArmOperation<WorkspaceManagerGroupResource> lro = await workspaceManagerGroup.UpdateAsync(WaitUntil.Completed, data);
            WorkspaceManagerGroupResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WorkspaceManagerGroupData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete a workspace manager group.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteAWorkspaceManagerGroup()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/workspaceManagerGroups/DeleteWorkspaceManagerGroup.json
            // this example is just showing the usage of "WorkspaceManagerGroups_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this WorkspaceManagerGroupResource created on azure
            // for more information of creating WorkspaceManagerGroupResource, please refer to the document of WorkspaceManagerGroupResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string workspaceManagerGroupName = "37207a7a-3b8a-438f-a559-c7df400e1b96";
            ResourceIdentifier workspaceManagerGroupResourceId = WorkspaceManagerGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, workspaceManagerGroupName);
            WorkspaceManagerGroupResource workspaceManagerGroup = client.GetWorkspaceManagerGroupResource(workspaceManagerGroupResourceId);

            // invoke the operation
            await workspaceManagerGroup.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
