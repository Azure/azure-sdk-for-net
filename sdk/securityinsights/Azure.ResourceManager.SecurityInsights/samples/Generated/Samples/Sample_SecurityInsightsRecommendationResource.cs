// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights.Samples
{
    public partial class Sample_SecurityInsightsRecommendationResource
    {
        // Get a recommendation.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetARecommendation()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/recommendations/GetRecommendation.json
            // this example is just showing the usage of "Get_SingleRecommendation" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsRecommendationResource created on azure
            // for more information of creating SecurityInsightsRecommendationResource, please refer to the document of SecurityInsightsRecommendationResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            Guid recommendationId = Guid.Parse("6d4b54eb-8684-4aa3-a156-3aa37b8014bc");
            ResourceIdentifier securityInsightsRecommendationResourceId = SecurityInsightsRecommendationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, recommendationId);
            SecurityInsightsRecommendationResource securityInsightsRecommendation = client.GetSecurityInsightsRecommendationResource(securityInsightsRecommendationResourceId);

            // invoke the operation
            SecurityInsightsRecommendationResource result = await securityInsightsRecommendation.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SecurityInsightsRecommendationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Creates a recommendation.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreatesARecommendation()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/recommendations/PatchRecommendation.json
            // this example is just showing the usage of "Update_Recommendation" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsRecommendationResource created on azure
            // for more information of creating SecurityInsightsRecommendationResource, please refer to the document of SecurityInsightsRecommendationResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            Guid recommendationId = Guid.Parse("6d4b54eb-8684-4aa3-a156-3aa37b8014bc");
            ResourceIdentifier securityInsightsRecommendationResourceId = SecurityInsightsRecommendationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, recommendationId);
            SecurityInsightsRecommendationResource securityInsightsRecommendation = client.GetSecurityInsightsRecommendationResource(securityInsightsRecommendationResourceId);

            // invoke the operation
            SecurityInsightsRecommendationPatch patch = new SecurityInsightsRecommendationPatch()
            {
                RecommendationPatchState = RecommendationState.Active,
            };
            SecurityInsightsRecommendationResource result = await securityInsightsRecommendation.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SecurityInsightsRecommendationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Reevaluate a recommendation.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task RecommendationReevaluate_ReevaluateARecommendation()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/recommendations/ReevaluateRecommendation.json
            // this example is just showing the usage of "Reevaluate_Recommendation" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsRecommendationResource created on azure
            // for more information of creating SecurityInsightsRecommendationResource, please refer to the document of SecurityInsightsRecommendationResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            Guid recommendationId = Guid.Parse("6d4b54eb-8684-4aa3-a156-3aa37b8014bc");
            ResourceIdentifier securityInsightsRecommendationResourceId = SecurityInsightsRecommendationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, recommendationId);
            SecurityInsightsRecommendationResource securityInsightsRecommendation = client.GetSecurityInsightsRecommendationResource(securityInsightsRecommendationResourceId);

            // invoke the operation
            ReevaluateResult result = await securityInsightsRecommendation.RecommendationReevaluateAsync();

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
