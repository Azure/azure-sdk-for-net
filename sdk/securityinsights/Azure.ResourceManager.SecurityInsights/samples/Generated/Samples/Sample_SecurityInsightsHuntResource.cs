// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights.Samples
{
    public partial class Sample_SecurityInsightsHuntResource
    {
        // Get a hunt.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetAHunt()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/hunts/GetHuntById.json
            // this example is just showing the usage of "Hunts_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsHuntResource created on azure
            // for more information of creating SecurityInsightsHuntResource, please refer to the document of SecurityInsightsHuntResource
            string subscriptionId = "bd794837-4d29-4647-9105-6339bfdb4e6a";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string huntId = "163e7b2a-a2ec-4041-aaba-d878a38f265f";
            ResourceIdentifier securityInsightsHuntResourceId = SecurityInsightsHuntResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, huntId);
            SecurityInsightsHuntResource securityInsightsHunt = client.GetSecurityInsightsHuntResource(securityInsightsHuntResourceId);

            // invoke the operation
            SecurityInsightsHuntResource result = await securityInsightsHunt.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SecurityInsightsHuntData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete a hunt.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteAHunt()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/hunts/DeleteHunt.json
            // this example is just showing the usage of "Hunts_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsHuntResource created on azure
            // for more information of creating SecurityInsightsHuntResource, please refer to the document of SecurityInsightsHuntResource
            string subscriptionId = "bd794837-4d29-4647-9105-6339bfdb4e6a";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string huntId = "163e7b2a-a2ec-4041-aaba-d878a38f265f";
            ResourceIdentifier securityInsightsHuntResourceId = SecurityInsightsHuntResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, huntId);
            SecurityInsightsHuntResource securityInsightsHunt = client.GetSecurityInsightsHuntResource(securityInsightsHuntResourceId);

            // invoke the operation
            await securityInsightsHunt.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Creates or updates a hunt.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreatesOrUpdatesAHunt()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/hunts/CreateHunt.json
            // this example is just showing the usage of "Hunts_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsHuntResource created on azure
            // for more information of creating SecurityInsightsHuntResource, please refer to the document of SecurityInsightsHuntResource
            string subscriptionId = "bd794837-4d29-4647-9105-6339bfdb4e6a";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string huntId = "163e7b2a-a2ec-4041-aaba-d878a38f265f";
            ResourceIdentifier securityInsightsHuntResourceId = SecurityInsightsHuntResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, huntId);
            SecurityInsightsHuntResource securityInsightsHunt = client.GetSecurityInsightsHuntResource(securityInsightsHuntResourceId);

            // invoke the operation
            SecurityInsightsHuntData data = new SecurityInsightsHuntData()
            {
                DisplayName = "Log4J new hunt",
                Description = "Log4J Hunt Description",
                Status = HuntStatus.New,
                HypothesisStatus = HypothesisStatus.Unknown,
                AttackTactics =
{
SecurityInsightsAttackTactic.Reconnaissance
},
                AttackTechniques =
{
"T1595"
},
                Labels =
{
"Label1","Label2"
},
                Owner = new SecurityInsightsHuntOwner()
                {
                    ObjectId = Guid.Parse("873b5263-5d34-4149-b356-ad341b01e123"),
                },
            };
            ArmOperation<SecurityInsightsHuntResource> lro = await securityInsightsHunt.UpdateAsync(WaitUntil.Completed, data);
            SecurityInsightsHuntResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SecurityInsightsHuntData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
