// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.SecurityInsights.Models;

namespace Azure.ResourceManager.SecurityInsights.Samples
{
    public partial class Sample_SecurityInsightsIncidentResource
    {
        // Incidents_RunPlaybook
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task RunPlaybook_IncidentsRunPlaybook()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/manualTrigger/Incidents_RunPlaybook.json
            // this example is just showing the usage of "Incidents_RunPlaybook" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsIncidentResource created on azure
            // for more information of creating SecurityInsightsIncidentResource, please refer to the document of SecurityInsightsIncidentResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string incidentIdentifier = "73e01a99-5cd7-4139-a149-9f2736ff2ar4";
            ResourceIdentifier securityInsightsIncidentResourceId = SecurityInsightsIncidentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, incidentIdentifier);
            SecurityInsightsIncidentResource securityInsightsIncident = client.GetSecurityInsightsIncidentResource(securityInsightsIncidentResourceId);

            // invoke the operation
            BinaryData result = await securityInsightsIncident.RunPlaybookAsync();

            Console.WriteLine($"Succeeded: {result}");
        }

        // Incidents_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_IncidentsGet()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/incidents/Incidents_Get.json
            // this example is just showing the usage of "Incidents_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsIncidentResource created on azure
            // for more information of creating SecurityInsightsIncidentResource, please refer to the document of SecurityInsightsIncidentResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string incidentId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5";
            ResourceIdentifier securityInsightsIncidentResourceId = SecurityInsightsIncidentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, incidentId);
            SecurityInsightsIncidentResource securityInsightsIncident = client.GetSecurityInsightsIncidentResource(securityInsightsIncidentResourceId);

            // invoke the operation
            SecurityInsightsIncidentResource result = await securityInsightsIncident.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SecurityInsightsIncidentData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Incidents_Delete
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_IncidentsDelete()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/incidents/Incidents_Delete.json
            // this example is just showing the usage of "Incidents_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsIncidentResource created on azure
            // for more information of creating SecurityInsightsIncidentResource, please refer to the document of SecurityInsightsIncidentResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string incidentId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5";
            ResourceIdentifier securityInsightsIncidentResourceId = SecurityInsightsIncidentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, incidentId);
            SecurityInsightsIncidentResource securityInsightsIncident = client.GetSecurityInsightsIncidentResource(securityInsightsIncidentResourceId);

            // invoke the operation
            await securityInsightsIncident.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Incidents_CreateTeam
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateTeam_IncidentsCreateTeam()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/incidents/IncidentTeam/Incidents_CreateTeam.json
            // this example is just showing the usage of "Incidents_CreateTeam" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsIncidentResource created on azure
            // for more information of creating SecurityInsightsIncidentResource, please refer to the document of SecurityInsightsIncidentResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string incidentId = "69a30280-6a4c-4aa7-9af0-5d63f335d600";
            ResourceIdentifier securityInsightsIncidentResourceId = SecurityInsightsIncidentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, incidentId);
            SecurityInsightsIncidentResource securityInsightsIncident = client.GetSecurityInsightsIncidentResource(securityInsightsIncidentResourceId);

            // invoke the operation
            TeamInformation teamProperties = new TeamInformation();
            TeamInformation result = await securityInsightsIncident.CreateTeamAsync(teamProperties);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Incidents_ListAlerts
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAlerts_IncidentsListAlerts()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/incidents/IncidentAlerts/Incidents_ListAlerts.json
            // this example is just showing the usage of "Incidents_ListAlerts" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsIncidentResource created on azure
            // for more information of creating SecurityInsightsIncidentResource, please refer to the document of SecurityInsightsIncidentResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string incidentId = "69a30280-6a4c-4aa7-9af0-5d63f335d600";
            ResourceIdentifier securityInsightsIncidentResourceId = SecurityInsightsIncidentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, incidentId);
            SecurityInsightsIncidentResource securityInsightsIncident = client.GetSecurityInsightsIncidentResource(securityInsightsIncidentResourceId);

            // invoke the operation and iterate over the result
            await foreach (SecurityInsightsAlert item in securityInsightsIncident.GetAlertsAsync())
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Incidents_ListBookmarks
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetBookmarks_IncidentsListBookmarks()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/incidents/IncidentBookmarks/Incidents_ListBookmarks.json
            // this example is just showing the usage of "Incidents_ListBookmarks" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsIncidentResource created on azure
            // for more information of creating SecurityInsightsIncidentResource, please refer to the document of SecurityInsightsIncidentResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string incidentId = "69a30280-6a4c-4aa7-9af0-5d63f335d600";
            ResourceIdentifier securityInsightsIncidentResourceId = SecurityInsightsIncidentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, incidentId);
            SecurityInsightsIncidentResource securityInsightsIncident = client.GetSecurityInsightsIncidentResource(securityInsightsIncidentResourceId);

            // invoke the operation and iterate over the result
            await foreach (SecurityInsightsHuntingBookmark item in securityInsightsIncident.GetBookmarksAsync())
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Incidents_ListEntities
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetEntitiesResult_IncidentsListEntities()
        {
            // Generated from example definition: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2024-01-01-preview/examples/incidents/IncidentEntities/Incidents_ListEntities.json
            // this example is just showing the usage of "Incidents_ListEntities" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SecurityInsightsIncidentResource created on azure
            // for more information of creating SecurityInsightsIncidentResource, please refer to the document of SecurityInsightsIncidentResource
            string subscriptionId = "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
            string resourceGroupName = "myRg";
            string workspaceName = "myWorkspace";
            string incidentId = "69a30280-6a4c-4aa7-9af0-5d63f335d600";
            ResourceIdentifier securityInsightsIncidentResourceId = SecurityInsightsIncidentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, incidentId);
            SecurityInsightsIncidentResource securityInsightsIncident = client.GetSecurityInsightsIncidentResource(securityInsightsIncidentResourceId);

            // invoke the operation
            SecurityInsightsIncidentEntitiesResult result = await securityInsightsIncident.GetEntitiesResultAsync();

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
