{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c?api-version=2021-01-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Connection": "keep-alive",
        "traceparent": "00-76437eeb8337ea4798c88bb49286ca8b-e6a296166490554e-00",
        "User-Agent": "azsdk-net-ResourceManager/1.3.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "64cc0de9cb049638c3a533eeaa2fa41d",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "747",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:51:58 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "39ddd728-d350-4a11-bb81-e62700befa99",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-request-id": "39ddd728-d350-4a11-bb81-e62700befa99",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075158Z:39ddd728-d350-4a11-bb81-e62700befa99"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c",
        "authorizationSource": "RoleBased",
        "managedByTenants": [],
        "tags": {
          "TagKey-9823": "TagValue-566",
          "TagKey-3481": "TagValue-320",
          "TagKey-4926": "TagValue-1187",
          "TagKey-751": "TagValue-3921",
          "TagKey-1866": "TagValue-8559",
          "TagKey-3094": "TagValue-9190",
          "TagKey-2449": "TagValue-9",
          "TagKey-8379": "TagValue-164",
          "TagKey-7470": "TagValue-2205",
          "TagKey-4236": "TagValue-3698",
          "TagKey-5316": "TagValue-2725"
        },
        "subscriptionId": "db1ab6f0-4769-4b27-930e-01e2ef9c123c",
        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
        "displayName": ".NET Mgmt SDK Test with TTL = 1 Day",
        "state": "Enabled",
        "subscriptionPolicies": {
          "locationPlacementId": "Internal_2014-09-01",
          "quotaId": "Internal_2014-09-01",
          "spendingLimit": "Off"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/testRG-9316?api-version=**",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "43",
        "Content-Type": "application/json",
        "traceparent": "00-70fc2c716447d049a09a5901f3d05760-09f00fc85d8cc346-00",
        "User-Agent": "azsdk-net-ResourceManager/1.3.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "1bf1c7e68784dbbb87173c083425855d",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "tags": {
          "test": "env"
        },
        "location": "eastus"
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "241",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:02 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "92c43cff-a49d-4c2c-8c04-6dc5be21612a",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-request-id": "92c43cff-a49d-4c2c-8c04-6dc5be21612a",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075202Z:92c43cff-a49d-4c2c-8c04-6dc5be21612a"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316",
        "name": "testRG-9316",
        "type": "Microsoft.Resources/resourceGroups",
        "location": "eastus",
        "tags": {
          "test": "env"
        },
        "properties": {
          "provisioningState": "Succeeded"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "176",
        "Content-Type": "application/json",
        "traceparent": "00-e23af20657f0874c9cc049cdbf065534-556505fc20d81649-00",
        "User-Agent": "azsdk-net-ResourceManager.OperationalInsights/1.0.0-alpha.20221019.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "f1d7ca6543c8203a69ec31c0da1416e8",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "tags": {},
        "location": "eastus",
        "properties": {
          "sku": {
            "name": "PerNode"
          },
          "retentionInDays": 30,
          "publicNetworkAccessForIngestion": "Enabled",
          "publicNetworkAccessForQuery": "Enabled"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1072",
        "Content-Type": "application/json",
        "Date": "Fri, 28 Oct 2022 07:52:09 GMT",
        "Pragma": "no-cache",
        "Server": [
          "Microsoft-IIS/10.0",
          "Microsoft-IIS/10.0"
        ],
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-client-request-id": "f1d7ca6543c8203a69ec31c0da1416e8",
        "x-ms-correlation-request-id": "93e09eb4-5ec5-4eeb-bb46-662dadac9394",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-request-id": "f3f0f3e0-7b65-46b7-9e74-01e457864364",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075210Z:93e09eb4-5ec5-4eeb-bb46-662dadac9394",
        "X-Powered-By": [
          "ASP.NET",
          "ASP.NET"
        ]
      },
      "ResponseBody": {
        "properties": {
          "source": "Azure",
          "customerId": "0c03af14-3795-4931-9cf2-75f76d3784b1",
          "provisioningState": "Creating",
          "sku": {
            "name": "pergb2018",
            "lastSkuUpdate": "Fri, 28 Oct 2022 07:52:08 GMT"
          },
          "retentionInDays": 30,
          "features": {
            "legacy": 0,
            "searchVersion": 1,
            "enableLogAccessUsingOnlyResourcePermissions": true
          },
          "workspaceCapping": {
            "dailyQuotaGb": -1.0,
            "quotaNextResetTime": "Sat, 29 Oct 2022 03:00:00 GMT",
            "dataIngestionStatus": "RespectQuota"
          },
          "publicNetworkAccessForIngestion": "Enabled",
          "publicNetworkAccessForQuery": "Enabled",
          "createdDate": "Fri, 28 Oct 2022 07:52:08 GMT",
          "modifiedDate": "Fri, 28 Oct 2022 07:52:08 GMT"
        },
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/testrg-9316/providers/microsoft.operationalinsights/workspaces/testrg-9316-ws",
        "name": "testRG-9316-ws",
        "type": "Microsoft.OperationalInsights/workspaces",
        "location": "eastus",
        "tags": {}
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-e23af20657f0874c9cc049cdbf065534-66c04d6f0d12ad4b-00",
        "User-Agent": "azsdk-net-ResourceManager/1.3.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "654491ae2bcca3da8dd0b19855fa0172",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1073",
        "Content-Type": "application/json",
        "Date": "Fri, 28 Oct 2022 07:52:10 GMT",
        "Pragma": "no-cache",
        "Server": [
          "Microsoft-IIS/10.0",
          "Microsoft-IIS/10.0"
        ],
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-client-request-id": "654491ae2bcca3da8dd0b19855fa0172",
        "x-ms-correlation-request-id": "c8621b4e-07e6-4b1d-a484-c5ef65f96d5a",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-request-id": "b67fdb08-35c6-426e-83ea-8f7dfd1ffdf5",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075210Z:c8621b4e-07e6-4b1d-a484-c5ef65f96d5a",
        "X-Powered-By": [
          "ASP.NET",
          "ASP.NET"
        ]
      },
      "ResponseBody": {
        "properties": {
          "source": "Azure",
          "customerId": "0c03af14-3795-4931-9cf2-75f76d3784b1",
          "provisioningState": "Succeeded",
          "sku": {
            "name": "pergb2018",
            "lastSkuUpdate": "Fri, 28 Oct 2022 07:52:08 GMT"
          },
          "retentionInDays": 30,
          "features": {
            "legacy": 0,
            "searchVersion": 1,
            "enableLogAccessUsingOnlyResourcePermissions": true
          },
          "workspaceCapping": {
            "dailyQuotaGb": -1.0,
            "quotaNextResetTime": "Sat, 29 Oct 2022 03:00:00 GMT",
            "dataIngestionStatus": "RespectQuota"
          },
          "publicNetworkAccessForIngestion": "Enabled",
          "publicNetworkAccessForQuery": "Enabled",
          "createdDate": "Fri, 28 Oct 2022 07:52:08 GMT",
          "modifiedDate": "Fri, 28 Oct 2022 07:52:10 GMT"
        },
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/testrg-9316/providers/microsoft.operationalinsights/workspaces/testrg-9316-ws",
        "name": "testRG-9316-ws",
        "type": "Microsoft.OperationalInsights/workspaces",
        "location": "eastus",
        "tags": {}
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/onboardingStates/default?api-version=2022-08-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "43",
        "Content-Type": "application/json",
        "traceparent": "00-41b6538f54e45946a8de1c6c089f3198-39ccc99e40da4440-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "23915400ffd620516551e13fc68725db",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "properties": {
          "customerManagedKey": false
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "579",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:17 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "81f8e58b-3702-4308-909c-95c1bf4bc442",
        "x-ms-ratelimit-remaining-subscription-resource-requests": "11",
        "x-ms-request-id": "81f8e58b-3702-4308-909c-95c1bf4bc442",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075218Z:81f8e58b-3702-4308-909c-95c1bf4bc442"
      },
      "ResponseBody": {
        "properties": {},
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/onboardingStates/default",
        "name": "default",
        "type": "Microsoft.SecurityInsights/onboardingStates",
        "systemData": {
          "createdAt": "2022-10-28T07:52:11.0486528Z",
          "createdBy": "a1fc368b-7f40-4802-8fa1-260d3a6ec34b",
          "createdByType": "Application",
          "lastModifiedAt": "2022-10-28T07:52:11.0486528Z",
          "lastModifiedBy": "a1fc368b-7f40-4802-8fa1-260d3a6ec34b",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784122?api-version=2022-08-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "1571",
        "Content-Type": "application/json",
        "traceparent": "00-3c031e37ebf71b4d982005de18da190e-b67ce358eaac1147-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "4812b25cb1cf4a1b36acf83b93cc3015",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "inputEntityType": "Account",
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1954",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:19 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b0dc11b6-59f1-4d31-9ec5-27e2a09723ee",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-request-id": "b0dc11b6-59f1-4d31-9ec5-27e2a09723ee",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075219Z:b0dc11b6-59f1-4d31-9ec5-27e2a09723ee"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784122",
        "name": "6d37a904-d199-43ff-892b-53653b784122",
        "etag": "\u0022dc00935f-0000-0100-0000-635b8a330000\u0022",
        "type": "Microsoft.SecurityInsights/entityQueries",
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ],
          "entitiesFilter": {},
          "enabled": true,
          "createdTimeUtc": "2022-10-28T07:52:19.7087362Z",
          "lastModifiedTimeUtc": "2022-10-28T07:52:19.7087362Z",
          "inputEntityType": "Account"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784122?api-version=2022-08-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-2f8d66df68dbc547b051fbb18c606c74-501eec485fe3004a-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "a6b20a876cfcaea83f23ff7b499adc05",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1954",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:20 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "236822aa-d059-4887-baed-a967ccefbb2b",
        "x-ms-ratelimit-remaining-subscription-reads": "11997",
        "x-ms-request-id": "236822aa-d059-4887-baed-a967ccefbb2b",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075220Z:236822aa-d059-4887-baed-a967ccefbb2b"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784122",
        "name": "6d37a904-d199-43ff-892b-53653b784122",
        "etag": "\u0022dc00935f-0000-0100-0000-635b8a330000\u0022",
        "type": "Microsoft.SecurityInsights/entityQueries",
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ],
          "entitiesFilter": {},
          "enabled": true,
          "createdTimeUtc": "2022-10-28T07:52:19.7087362Z",
          "lastModifiedTimeUtc": "2022-10-28T07:52:19.7087362Z",
          "inputEntityType": "Account"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784122?api-version=2022-08-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "1571",
        "Content-Type": "application/json",
        "traceparent": "00-2f214990891cc64c971c88f90f9bead8-b7219cf77b245e47-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "a33bd6aab8e84fa33947ec2a07158d99",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "inputEntityType": "Account",
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ]
        }
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1954",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:21 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "947da17d-ffc5-4d78-b025-21bcc0ae02b0",
        "x-ms-ratelimit-remaining-subscription-writes": "1196",
        "x-ms-request-id": "947da17d-ffc5-4d78-b025-21bcc0ae02b0",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075221Z:947da17d-ffc5-4d78-b025-21bcc0ae02b0"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784122",
        "name": "6d37a904-d199-43ff-892b-53653b784122",
        "etag": "\u0022dc00d55f-0000-0100-0000-635b8a350000\u0022",
        "type": "Microsoft.SecurityInsights/entityQueries",
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ],
          "entitiesFilter": {},
          "enabled": true,
          "createdTimeUtc": "2022-10-28T07:52:19.7087362Z",
          "lastModifiedTimeUtc": "2022-10-28T07:52:21.5105127Z",
          "inputEntityType": "Account"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784125?api-version=2022-08-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "1571",
        "Content-Type": "application/json",
        "traceparent": "00-5631f49e430df44a89f178d38c727ee3-bca7a13afc0e124c-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "bcb8cc207ed5f0de096408abb1a0019b",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "inputEntityType": "Account",
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1954",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:22 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "9c77b03e-d3d0-40d5-870b-d0068a6bfc18",
        "x-ms-ratelimit-remaining-subscription-writes": "1195",
        "x-ms-request-id": "9c77b03e-d3d0-40d5-870b-d0068a6bfc18",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075222Z:9c77b03e-d3d0-40d5-870b-d0068a6bfc18"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784125",
        "name": "6d37a904-d199-43ff-892b-53653b784125",
        "etag": "\u0022dc00f75f-0000-0100-0000-635b8a360000\u0022",
        "type": "Microsoft.SecurityInsights/entityQueries",
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ],
          "entitiesFilter": {},
          "enabled": true,
          "createdTimeUtc": "2022-10-28T07:52:22.5447496Z",
          "lastModifiedTimeUtc": "2022-10-28T07:52:22.5447496Z",
          "inputEntityType": "Account"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784126?api-version=2022-08-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "1571",
        "Content-Type": "application/json",
        "traceparent": "00-481d2ac2ad667746828552477981caad-05c42c37a345eb40-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "bc91f2cf8d90ce2d67636db57f7da62a",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "inputEntityType": "Account",
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1954",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:23 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0ace082a-763a-48f5-aca8-0d546d53a22a",
        "x-ms-ratelimit-remaining-subscription-writes": "1194",
        "x-ms-request-id": "0ace082a-763a-48f5-aca8-0d546d53a22a",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075223Z:0ace082a-763a-48f5-aca8-0d546d53a22a"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784126",
        "name": "6d37a904-d199-43ff-892b-53653b784126",
        "etag": "\u0022dc002560-0000-0100-0000-635b8a370000\u0022",
        "type": "Microsoft.SecurityInsights/entityQueries",
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ],
          "entitiesFilter": {},
          "enabled": true,
          "createdTimeUtc": "2022-10-28T07:52:23.6764482Z",
          "lastModifiedTimeUtc": "2022-10-28T07:52:23.6764482Z",
          "inputEntityType": "Account"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries?api-version=2022-08-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-ad272571a4a90e499f30a22d3948ff0e-50fb168debdd0b48-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "7d5a66961fe22b30f74a9a84b0f79d98",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "156477",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:25 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b422a958-123d-44ad-b904-3da7128394fd",
        "x-ms-ratelimit-remaining-subscription-reads": "11996",
        "x-ms-request-id": "b422a958-123d-44ad-b904-3da7128394fd",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075226Z:b422a958-123d-44ad-b904-3da7128394fd"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/98b974fd-cc64-48b8-9bd0-3a209f5b944b",
            "name": "98b974fd-cc64-48b8-9bd0-3a209f5b944b",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related entities",
              "queryTemplate": "let GetAlertRelatedEntities = (v_SecurityAlert_SystemAlertId:string){\r\n                            SecurityAlert\r\n                            | where SystemAlertId == v_SecurityAlert_SystemAlertId\r\n                            | project entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities};\r\n                            GetAlertRelatedEntities(\u0027\u003CsystemAlertId\u003E\u0027)",
              "inputFields": [
                "systemAlertId"
              ],
              "outputEntityTypes": [],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "SecurityAlert"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/27f76e63-c41b-480f-bb18-12ad2e011d49",
            "name": "27f76e63-c41b-480f-bb18-12ad2e011d49",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related entities",
              "queryTemplate": "",
              "inputFields": [],
              "outputEntityTypes": [],
              "dataSources": [],
              "inputEntityType": "HuntingBookmark"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/055a5692-555f-42bd-ac17-923a5a9994ed",
            "name": "055a5692-555f-42bd-ac17-923a5a9994ed",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetHostRelatedAlerts = (v_Host_HostName:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027host\u0027 and entity[\u0027HostName\u0027] =~ v_Host_HostName\r\n                            | project-away entity};\r\n                            GetHostRelatedAlerts(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/e36c2ceb-4caf-4919-8433-d61dbc3e294a",
            "name": "e36c2ceb-4caf-4919-8433-d61dbc3e294a",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related bookmarks",
              "queryTemplate": "",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "HuntingBookmark"
              ],
              "dataSources": [],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/a77992f3-25e9-4d01-99a4-5ff606cc410a",
            "name": "a77992f3-25e9-4d01-99a4-5ff606cc410a",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetAccountRelatedAlerts = (v_Account_Name:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027account\u0027 and entity[\u0027Name\u0027] =~ v_Account_Name\r\n                            | project-away entity};\r\n                            GetAccountRelatedAlerts(\u0027\u003CaccountName\u003E\u0027)",
              "inputFields": [
                "accountName"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/504ea455-3bf7-47ef-8555-dc747b465f99",
            "name": "504ea455-3bf7-47ef-8555-dc747b465f99",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related bookmarks",
              "queryTemplate": "",
              "inputFields": [
                "accountName"
              ],
              "outputEntityTypes": [
                "HuntingBookmark"
              ],
              "dataSources": [],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/4a014a1b-c5a1-499f-9f54-3f7b99b0a675",
            "name": "4a014a1b-c5a1-499f-9f54-3f7b99b0a675",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetAzureResourceRelatedAlerts = (v_AzureResource_ResourceId:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027azure-resource\u0027 and entity[\u0027ResourceId\u0027] =~ v_AzureResource_ResourceId\r\n                            | project-away entity};\r\n                            GetAzureResourceRelatedAlerts(\u0027\u003CresourceId\u003E\u0027)",
              "inputFields": [
                "resourceId"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "AzureResource"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/f74ad13a-ae93-47b9-8782-b1142b95d046",
            "name": "f74ad13a-ae93-47b9-8782-b1142b95d046",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetCloudApplicationRelatedAlerts = (v_CloudApplication_AppId:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027cloud-application\u0027 and entity[\u0027AppId\u0027] =~ v_CloudApplication_AppId\r\n                            | project-away entity};\r\n                            GetCloudApplicationRelatedAlerts(\u0027\u003CappId\u003E\u0027)",
              "inputFields": [
                "appId"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "CloudApplication"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/80218599-45b4-4402-95cc-86f9929dd43d",
            "name": "80218599-45b4-4402-95cc-86f9929dd43d",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetDNSRelatedAlerts = (v_DNS_DomainName:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027dns\u0027 and entity[\u0027DomainName\u0027] =~ v_DNS_DomainName\r\n                            | project-away entity};\r\n                            GetDNSRelatedAlerts(\u0027\u003CdomainName\u003E\u0027)",
              "inputFields": [
                "domainName"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "DNS"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/0f0bccef-4512-4530-a866-27056a39dcd6",
            "name": "0f0bccef-4512-4530-a866-27056a39dcd6",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetFileRelatedAlerts = (v_File_Name:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027file\u0027 and entity[\u0027Name\u0027] =~ v_File_Name\r\n                            | project-away entity};\r\n                            GetFileRelatedAlerts(\u0027\u003CfileName\u003E\u0027)",
              "inputFields": [
                "fileName"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "File"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/b6eaa3ad-e69b-437e-9c13-bb5273dd34ab",
            "name": "b6eaa3ad-e69b-437e-9c13-bb5273dd34ab",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetFileHashRelatedAlerts = (v_FileHash_Value:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027filehash\u0027 and entity[\u0027Value\u0027] =~ v_FileHash_Value\r\n                            | project-away entity};\r\n                            GetFileHashRelatedAlerts(\u0027\u003ChashValue\u003E\u0027)",
              "inputFields": [
                "hashValue"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "FileHash"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/58c1516f-b78a-4d78-9e71-77c40849c27b",
            "name": "58c1516f-b78a-4d78-9e71-77c40849c27b",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetIPRelatedAlerts = (v_IP_Address:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027ip\u0027 and entity[\u0027Address\u0027] =~ v_IP_Address\r\n                            | project-away entity};\r\n                            GetIPRelatedAlerts(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6a6a5dcb-605c-4dad-8bb6-c8c439db4f0a",
            "name": "6a6a5dcb-605c-4dad-8bb6-c8c439db4f0a",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related bookmarks",
              "queryTemplate": "",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "HuntingBookmark"
              ],
              "dataSources": [],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/b8407195-b9a3-4565-bf08-7b23e5c57e3a",
            "name": "b8407195-b9a3-4565-bf08-7b23e5c57e3a",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetMalwareRelatedAlerts = (v_Malware_Name:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027malware\u0027 and entity[\u0027Name\u0027] =~ v_Malware_Name\r\n                            | project-away entity};\r\n                            GetMalwareRelatedAlerts(\u0027\u003CmalwareName\u003E\u0027)",
              "inputFields": [
                "malwareName"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "Malware"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/63a4fa2f-f89d-4cf5-96a2-cb2479e49731",
            "name": "63a4fa2f-f89d-4cf5-96a2-cb2479e49731",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetProcessRelatedAlerts = (v_Process_ProcessId:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027process\u0027 and entity[\u0027ProcessId\u0027] =~ v_Process_ProcessId\r\n                            | project-away entity};\r\n                            GetProcessRelatedAlerts(\u0027\u003CprocessId\u003E\u0027)",
              "inputFields": [
                "processId"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "Process"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/d788cd65-a7ef-448e-aa34-81185ac0e611",
            "name": "d788cd65-a7ef-448e-aa34-81185ac0e611",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetRegistryKeyRelatedAlerts = (v_RegistryKey_Key:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027registry-key\u0027 and entity[\u0027Key\u0027] =~ v_RegistryKey_Key\r\n                            | project-away entity};\r\n                            GetRegistryKeyRelatedAlerts(\u0027\u003Ckey\u003E\u0027)",
              "inputFields": [
                "key"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "RegistryKey"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/3a45a7e3-80e0-4e05-84db-b97bd1ae452b",
            "name": "3a45a7e3-80e0-4e05-84db-b97bd1ae452b",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetRegistryValueRelatedAlerts = (v_RegistryValue_Name:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027registry-value\u0027 and entity[\u0027Name\u0027] =~ v_RegistryValue_Name\r\n                            | project-away entity};\r\n                            GetRegistryValueRelatedAlerts(\u0027\u003CvalueName\u003E\u0027)",
              "inputFields": [
                "valueName"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "RegistryValue"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/43c07636-6be0-4c62-8c62-9a6040a98821",
            "name": "43c07636-6be0-4c62-8c62-9a6040a98821",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetSecurityGroupRelatedAlerts = (v_SecurityGroup_DistinguishedName:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027security-group\u0027 and entity[\u0027DistinguishedName\u0027] =~ v_SecurityGroup_DistinguishedName\r\n                            | project-away entity};\r\n                            GetSecurityGroupRelatedAlerts(\u0027\u003CdistinguishedName\u003E\u0027)",
              "inputFields": [
                "distinguishedName"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "SecurityGroup"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/7b61d5e2-4b66-40a7-bb0f-9145b445104e",
            "name": "7b61d5e2-4b66-40a7-bb0f-9145b445104e",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetURLRelatedAlerts = (v_URL_Url:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027url\u0027 and entity[\u0027Url\u0027] =~ v_URL_Url\r\n                            | project-away entity};\r\n                            GetURLRelatedAlerts(\u0027\u003Curl\u003E\u0027)",
              "inputFields": [
                "url"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "URL"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/855ea9fe-2fdd-4890-8daa-c895c136eef3",
            "name": "855ea9fe-2fdd-4890-8daa-c895c136eef3",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related bookmarks",
              "queryTemplate": "",
              "inputFields": [
                "url"
              ],
              "outputEntityTypes": [
                "HuntingBookmark"
              ],
              "dataSources": [],
              "inputEntityType": "URL"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/4daeed0e-0e74-4f2d-990c-a958210e9dd7",
            "name": "4daeed0e-0e74-4f2d-990c-a958210e9dd7",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetIoTDeviceRelatedAlerts = (v_IoTDevice_DeviceId:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027iotdevice\u0027 and entity[\u0027DeviceId\u0027] =~ v_IoTDevice_DeviceId\r\n                            | project-away entity};\r\n                            GetIoTDeviceRelatedAlerts(\u0027\u003CdeviceId\u003E\u0027)",
              "inputFields": [
                "deviceId"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "IoTDevice"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/fb123681-fb7e-4684-86fd-3866df84ac2f",
            "name": "fb123681-fb7e-4684-86fd-3866df84ac2f",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Assigned IPs",
              "queryTemplate": "let GetIPsForHost = (v_Host_HostName:string){\r\n                            Heartbeat\r\n                            | where Computer =~ v_Host_HostName\r\n                            | summarize arg_max(TimeGenerated, *) by ComputerIP\r\n                            };\r\n                            GetIPsForHost(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/fa16a940-53cc-4e45-9e6f-d8409cb42390",
            "name": "fa16a940-53cc-4e45-9e6f-d8409cb42390",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Host assigned with IP",
              "queryTemplate": "let GetHostsForIp = (v_IP_Address:string){\r\n                            Heartbeat\r\n                            | where ComputerIP =~ v_IP_Address\r\n                            | summarize arg_max(TimeGenerated, *) by Computer\r\n                            };\r\n                            GetHostsForIp(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/0a691e7d-a9bb-4a80-8591-2cc0b5094298",
            "name": "0a691e7d-a9bb-4a80-8591-2cc0b5094298",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetMailboxRelatedAlerts = (v_Mailbox_MailboxPrimaryAddress:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027mailbox\u0027 and entity[\u0027MailboxPrimaryAddress\u0027] =~ v_Mailbox_MailboxPrimaryAddress\r\n                            | project-away entity};\r\n                            GetMailboxRelatedAlerts(\u0027\u003CmailboxPrimaryAddress\u003E\u0027)",
              "inputFields": [
                "mailboxPrimaryAddress"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "Mailbox"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/cf68388a-a0db-41d5-969f-919f7a2e47bc",
            "name": "cf68388a-a0db-41d5-969f-919f7a2e47bc",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetMailClusterRelatedAlerts = (v_MailCluster_Query:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027mailCluster\u0027 and entity[\u0027Query\u0027] =~ v_MailCluster_Query\r\n                            | project-away entity};\r\n                            GetMailClusterRelatedAlerts(\u0027\u003Cquery\u003E\u0027)",
              "inputFields": [
                "query"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "MailCluster"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/33fbca35-93cf-45f8-864f-eb3d553d5bb8",
            "name": "33fbca35-93cf-45f8-864f-eb3d553d5bb8",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetMailMessageRelatedAlerts = (v_MailMessage_NetworkMessageId:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027mailMessage\u0027 and entity[\u0027NetworkMessageId\u0027] =~ v_MailMessage_NetworkMessageId\r\n                            | project-away entity};\r\n                            GetMailMessageRelatedAlerts(\u0027\u003CnetworkMessageId\u003E\u0027)",
              "inputFields": [
                "networkMessageId"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "MailMessage"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/d215b047-259d-40b4-843c-4d509b013525",
            "name": "d215b047-259d-40b4-843c-4d509b013525",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Related alerts",
              "queryTemplate": "let GetSubmissionMailRelatedAlerts = (v_SubmissionMail_SubmissionId:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027SubmissionMail\u0027 and entity[\u0027SubmissionId\u0027] =~ v_SubmissionMail_SubmissionId\r\n                            | project-away entity};\r\n                            GetSubmissionMailRelatedAlerts(\u0027\u003CsubmissionId\u003E\u0027)",
              "inputFields": [
                "submissionId"
              ],
              "outputEntityTypes": [
                "SecurityAlert"
              ],
              "dataSources": [
                "SecurityAlert"
              ],
              "inputEntityType": "SubmissionMail"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6168f65c-448f-4732-8b6c-10e5693de946",
            "name": "6168f65c-448f-4732-8b6c-10e5693de946",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "IoTDevice related Nics",
              "queryTemplate": "let GetIoTDeviceRelatedNics = (v_IoTDevice_DeviceId:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] == \u0027iotdevice\u0027\r\n                                and entity[\u0027DeviceId\u0027] =~ v_IoTDevice_DeviceId\r\n                            | project Nic = entity[\u0027Nics\u0027]\r\n                            | mv-expand Nic\r\n                            | where isnotempty(Nic)\r\n                            };\r\n                            GetIoTDeviceRelatedNics(\u0027\u003CdeviceId\u003E\u0027)",
              "inputFields": [
                "deviceId"
              ],
              "outputEntityTypes": [
                "Nic"
              ],
              "dataSources": [],
              "inputEntityType": "IoTDevice"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/887b5f82-f5a8-4735-bec9-1e563ced0f9f",
            "name": "887b5f82-f5a8-4735-bec9-1e563ced0f9f",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "IoTDevice related Azure Resources",
              "queryTemplate": "let GetIoTDeviceRelatedIoTHub = (v_IoTDevice_DeviceId:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] =~ \u0027iotdevice\u0027\r\n                                and entity[\u0027DeviceId\u0027] =~ v_IoTDevice_DeviceId\r\n                            | project IoTHub = entity[\u0027IoTHub\u0027]\r\n                            | mv-expand IoTHub\r\n                            | where isnotempty(IoTHub)\r\n                            };\r\n                            GetIoTDeviceRelatedIoTHub(\u0027\u003CdeviceId\u003E\u0027)",
              "inputFields": [
                "deviceId"
              ],
              "outputEntityTypes": [
                "AzureResource"
              ],
              "dataSources": [],
              "inputEntityType": "IoTDevice"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/f70e333a-fc67-445f-88db-e4665a3425e4",
            "name": "f70e333a-fc67-445f-88db-e4665a3425e4",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Nic related Ip",
              "queryTemplate": "let GetNicRelatedIpAddress = (v_Nic_MacAddress:string){\r\n                            SecurityAlert\r\n                            | summarize arg_max(TimeGenerated, *) by SystemAlertId\r\n                            | extend entities = todynamic(Entities)\r\n                            | mv-expand entities\r\n                            | project-rename entity=entities\r\n                            | where entity[\u0027Type\u0027] =~ \u0027nic\u0027\r\n                                and entity[\u0027MacAddress\u0027] =~ v_Nic_MacAddress\r\n                            | project IpAddress = entity[\u0027IpAddress\u0027]\r\n                            | mv-expand IpAddress\r\n                            | where isnotempty(IpAddress)\r\n                            };\r\n                            GetNicRelatedIpAddress(\u0027\u003CmacAddress\u003E\u0027)",
              "inputFields": [
                "macAddress"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [],
              "inputEntityType": "Nic"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/4c541df8-a680-4da5-96c9-74456927213f",
            "name": "4c541df8-a680-4da5-96c9-74456927213f",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Hosts the account failed to log in to the most",
              "queryTemplate": "let FailedLoginEventId = 4625;\r\n                            let SuccessfulLoginEventId = 4624;\n\t\t\t\t\t\t\tlet isimAuthenticationInstalled=toscalar(union isfuzzy=true  (datatable(Test:string)[]), (imAuthentication| take 0) | getschema | count | project Exists=(Count\u003E1));\n\t\t\t\t\t\t\tlet Legacy = (v_Account_Name:string, v_Account_NTDomain:string, v_Account_UPNSuffix:string){\n\t\t\t\t\t\t\t  (datatable(exists:int)[1] | where not(isimAuthenticationInstalled)) | join\n\t\t\t\t\t\t\t  ( \n\t\t\t\t\t\t\t        SecurityEvent\n\t\t\t\t\t\t\t        | extend p_Account_Name = case(\n\t\t\t\t\t\t\t            v_Account_Name has \u0027@\u0027 and v_Account_Name has \u0027\\\\\u0027, tostring(split(tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\u0027@\u0027)[0]),\n\t\t\t\t\t\t\t            v_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\t            v_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\t            v_Account_Name\n\t\t\t\t\t\t\t        )\n\t\t\t\t\t\t\t        | extend p_Account_UPNSuffix = case(\n\t\t\t\t\t\t\t            v_Account_UPNSuffix has \u0027@\u0027, tostring(split(v_Account_UPNSuffix, \u0027@\u0027)[1]),\n\t\t\t\t\t\t\t            v_Account_UPNSuffix has \u0027\\\\\u0027, tostring(split(v_Account_UPNSuffix, \u0027\\\\\u0027)[0]),\n\t\t\t\t\t\t\t            v_Account_UPNSuffix\n\t\t\t\t\t\t\t        )\n\t\t\t\t\t\t\t        | extend p_Account_NTDomain = case(\n\t\t\t\t\t\t\t            v_Account_NTDomain has \u0027\\\\\u0027, tostring(split(v_Account_UPNSuffix, \u0027\\\\\u0027)[0]),\n\t\t\t\t\t\t\t            v_Account_NTDomain\n\t\t\t\t\t\t\t        )  \n\t\t\t\t\t\t\t        | extend Account_UPNSuffix = iff(Account has \u0027@\u0027, tostring(split(Account,\u0027@\u0027)[1]),\u0027\u0027)\n\t\t\t\t\t\t\t        | extend Account_NTDomain = iff(Account has \u0027\\\\\u0027, tostring(split(Account,\u0027\\\\\u0027)[0]),\u0027\u0027)\n\t\t\t\t\t\t\t        | extend Account_Name = extract(@\u0027^([^\\\\]*\\\\)?([^@]\u002B)@?\u0027,2,Account)\n\t\t\t\t\t\t\t        | where ( (isnotempty(Account_Name) and Account_Name==p_Account_Name) \n\t\t\t\t\t\t\t                        and \n\t\t\t\t\t\t\t                        iff(isnotempty(p_Account_NTDomain) and isnotempty(Account_NTDomain) ,p_Account_NTDomain==Account_NTDomain,true )\n\t\t\t\t\t\t\t                        and\n\t\t\t\t\t\t\t                        iff(isnotempty(p_Account_UPNSuffix) and isnotempty(Account_UPNSuffix) ,p_Account_UPNSuffix==Account_UPNSuffix,true )\n\t\t\t\t\t\t\t                )\n\t\t\t\t\t\t\t        | summarize Host_Aux_SuccessfulLoginCount = countif(EventID==SuccessfulLoginEventId)\n\t\t\t\t\t\t\t                , Host_Aux_FailedLoginsCount\t= countif(EventID==FailedLoginEventId)\n\t\t\t\t\t\t\t                , Host_Aux_LogonTypes=make_set(LogonType)\n\t\t\t\t\t\t\t          by Computer, Account, SourceComputerId, _ResourceId\n\t\t\t\t\t\t\t        | top 10 by Host_Aux_FailedLoginsCount\n\t\t\t\t\t\t\t        | parse Computer with Host_NTDomain \u0027\\\\\u0027 *\n\t\t\t\t\t\t\t        | extend Host_HostName = tostring(split(Computer,\u0027.\u0027)[0]), \n\t\t\t\t\t\t\t                Host_DnsDomain = strcat_array(array_slice(split(Computer,\u0027.\u0027),1,256),\u0027.\u0027)\n\t\t\t\t\t\t\t              , Host_OMSAgentID=SourceComputerId, Host_AzureID = _ResourceId\n\t\t\t\t\t\t\t        | project-away Computer, Account, _ResourceId, SourceComputerId\n\t\t\t\t\t\t\t    | extend exists=int(1) ) on exists | project-away exists, exists1 \n\t\t\t\t\t\t\t  };\n\t\t\t\t\t\t\t  let Normalized = (v_Account_Name:string, v_Account_NTDomain:string, v_Account_UPNSuffix:string){\n\t\t\t\t\t\t\t  (datatable(exists:int)[1] | where isimAuthenticationInstalled) | join \n\t\t\t\t\t\t\t  (\n\t\t\t\t\t\t\t      imAuthentication(starttime=ago(24h),targetusername_has=v_Account_Name) \n\t\t\t\t\t\t\t      | where isnotempty(TargetDvcHostname)\n\t\t\t\t\t\t\t      //* postfiltering *\n\t\t\t\t\t\t\t      | where TargetUsername has v_Account_Name\n\t\t\t\t\t\t\t      | summarize Host_Aux_SuccessfulLoginCount = countif(EventResult==\u0027Success\u0027)\n\t\t\t\t\t\t\t                , Host_Aux_FailedLoginsCount\t= countif(EventResult==\u0027Failure\u0027)\n\t\t\t\t\t\t\t                , Host_Aux_LogonTypes=make_set(EventSubType)\n\t\t\t\t\t\t\t        by TargetDvcHostname, TargetDvcId\n\t\t\t\t\t\t\t      | top 10 by Host_Aux_FailedLoginsCount\n\t\t\t\t\t\t\t      | parse TargetDvcHostname with Host_NTDomain \u0027\\\\\u0027 *\n\t\t\t\t\t\t\t      | extend Host_UnstructuredName = TargetDvcHostname\n\t\t\t\t\t\t\t      | project-keep Host_*\n\t\t\t\t\t\t\t    | extend exists=int(1) )   on exists | project-away exists, exists1 \n\t\t\t\t\t\t\t  };\n\t\t\t\t\t\t\t  union isfuzzy=true Legacy(\u0027\u003CaccountName\u003E\u0027,\u0027\u003CntDomain\u003E\u0027,\u0027\u003CupnSuffix\u003E\u0027),Normalized(\u0027\u003CaccountName\u003E\u0027,\u0027\u003CntDomain\u003E\u0027,\u0027\u003CupnSuffix\u003E\u0027)",
              "inputFields": [
                "accountName",
                "upnSuffix",
                "ntDomain"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/2db8cac9-d2ce-4494-93bf-4678cd872ce4",
            "name": "2db8cac9-d2ce-4494-93bf-4678cd872ce4",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "IPs from rare locations used by account",
              "queryTemplate": "let IPsFromRareLocations = (v_Account_Name:string, v_Account_UPNSuffix:string, v_Account_AadUserId:string){\n\t\t\t\t\t\t\tlet LocationPrevalence =\n\t\t\t\t\t\t\tSigninLogs\n\t\t\t\t\t\t\t| extend p_Account_Name = case(\n\t\t\t\t\t\t\tv_Account_Name has \u0027@\u0027 and v_Account_Name has \u0027\\\\\u0027, tostring(split(tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\u0027@\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\tv_Account_Name\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| extend p_Account_UPNSuffix = case(\n\t\t\t\t\t\t\tv_Account_UPNSuffix has \u0027@\u0027, tostring(split(v_Account_UPNSuffix, \u0027@\u0027)[1]),\n\t\t\t\t\t\t\tv_Account_UPNSuffix has \u0027\\\\\u0027, tostring(split(v_Account_UPNSuffix, \u0027\\\\\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_UPNSuffix\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| parse UserPrincipalName with Account_Name \u0027@\u0027 Account_UPNSuffix\n\t\t\t\t\t\t\t| extend Account_AadUserId = toguid(UserId)\n\t\t\t\t\t\t\t| where (isnotempty(Account_Name) and Account_Name =~ p_Account_Name and isnotempty(Account_UPNSuffix) and Account_UPNSuffix =~ p_Account_UPNSuffix)\n\t\t\t\t\t\t\tor (isnotempty(Account_AadUserId) and Account_AadUserId == toguid(v_Account_AadUserId))\n\t\t\t\t\t\t\t| extend FullLocation = strcat(Location,\u0027|\u0027, LocationDetails.state, \u0027|\u0027, LocationDetails.city)\n\t\t\t\t\t\t\t| summarize ConnectionCount = count() by FullLocation, UserPrincipalName, IPAddress, Account_Name, Account_UPNSuffix, Account_AadUserId;\n\t\t\t\t\t\t\tLocationPrevalence\n\t\t\t\t\t\t\t| summarize make_list(IPAddress), make_list(FullLocation), make_list(ConnectionCount), dcount(FullLocation), totalActivity = sum(ConnectionCount) by UserPrincipalName, Account_Name, Account_UPNSuffix, Account_AadUserId\n\t\t\t\t\t\t\t| mvexpand Location = list_FullLocation, ConnectionCount = list_ConnectionCount, IPAddress = list_IPAddress\n\t\t\t\t\t\t\t| extend Location = tostring(Location), ConnectionCount = toint(ConnectionCount), IPAddress = tostring(IPAddress)\n\t\t\t\t\t\t\t| extend percentOfActivity = 100*round(todouble(ConnectionCount)/totalActivity,4)\n\t\t\t\t\t\t\t| where percentOfActivity \u003C 10\n\t\t\t\t\t\t\t| project UserPrincipalName, Account_Name, Account_UPNSuffix, Account_AadUserId, IPAddress, Location, ConnectionCount, percentOfActivity\n\t\t\t\t\t\t\t| sort by percentOfActivity asc, ConnectionCount desc\n\t\t\t\t\t\t\t| top 10 by percentOfActivity asc\n\t\t\t\t\t\t\t| extend IP_Location_Country = tostring(split(Location,\u0027|\u0027)[0]), IP_Location_Region = tostring(split(Location,\u0027|\u0027)[1]), IP_Location_City = tostring(split(Location,\u0027|\u0027)[2])\n\t\t\t\t\t\t\t| extend Account_Aux_info = pack(\u0027PercentOfActivity\u0027, percentOfActivity, \u0027ConnectionCount\u0027, ConnectionCount)\n\t\t\t\t\t\t\t| parse UserPrincipalName with Account_NTDomain \u0027\\\\\u0027 *\n\t\t\t\t\t\t\t| project Account_UnstructuredName = UserPrincipalName, Account_Name, Account_NTDomain, Account_UPNSuffix, Account_AadUserId, IP_Address = IPAddress, IP_Location_Country, IP_Location_Region, IP_Location_City, Account_Aux_info\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tIPsFromRareLocations(\u0027\u003CaccountName\u003E\u0027, \u0027\u003CupnSuffix\u003E\u0027, \u0027\u003CaadUserId\u003E\u0027)",
              "inputFields": [
                "accountName",
                "upnSuffix",
                "aadUserId"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "SigninLogs"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/160c7513-f704-46b7-adf9-d9c4176a44a3",
            "name": "160c7513-f704-46b7-adf9-d9c4176a44a3",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Hosts triggering Microsoft Defender Application Control",
              "queryTemplate": "let AppControlEvents=(v_Account_Name:string, v_Account_UPNSuffix:string, v_Account_Sid:string){\n\t\t\t\t\t\t\tlet p_Account_UPN = iff(isnotempty(v_Account_Name) and isnotempty(v_Account_UPNSuffix), strcat(v_Account_Name,\u0027@\u0027,v_Account_UPNSuffix), \u0022\u0022);\n\t\t\t\t\t\t\tlet AppControls=datatable(ActionType:string, Description:string, FriendlyActivityName:string)\n\t\t\t\t\t\t\t [\u0022AppControlAppInstallationAudited\u0022, \u0022Application control detected the installation of an untrusted app.\u0022,\u0022Untrusted app installed\u0022\n\t\t\t\t\t\t\t  ,\u0022AppControlAppInstallationBlocked\u0022, \u0022Application control blocked the installation of an untrusted app.\u0022,  \u0022Untrusted app installation blocked\u0022\n\t\t\t\t\t\t\t  ,\u0022AppControlCodeIntegrityDriverRevoked\u0022, \u0022Application control found a driver with a revoked certificate.\u0022, \u0022Driver with revoked certificate detected\u0022\n\t\t\t\t\t\t\t  ,\u0022AppControlCodeIntegrityImageRevoked\u0022, \u0022Application control found an executable file with a revoked certificate.\u0022, \u0022Executable with revoked certificate detected\u0022\n\t\t\t\t\t\t\t  ,\u0022AppControlExecutableAudited\u0022,\u0022Application control detected the use of an untrusted executable.\u0022,\u0022Untrusted executable used\u0022\n\t\t\t\t\t\t\t  ,\u0022AppControlExecutableClocked\u0022,\u0022Application control blocked the use of an untrusted executable.\u0022,\u0022Untrusted executable blocked\u0022\n\t\t\t\t\t\t\t  ,\u0022AppControlScriptAudited\u0022, \u0022Application control detected the use of an untrusted script.\u0022, \u0022Untrusted script detected\u0022\n\t\t\t\t\t\t\t  ,\u0022AppControlScriptBlocked\u0022, \u0022Application control blocked the use of an untrusted script.\u0022, \u0022Untrusted script blocked\u0022 ];\n\t\t\t\t\t\t\tDeviceEvents\n\t\t\t\t\t\t\t| where ActionType in (AppControls)  \n\t\t\t\t\t\t\t| where isnotempty(p_Account_UPN) and p_Account_UPN =~ InitiatingProcessAccountUpn \n\t\t\t\t\t\t\t    or\n\t\t\t\t\t\t\t        isnotempty(v_Account_Sid) and v_Account_Sid =~ InitiatingProcessAccountSid\n\t\t\t\t\t\t\t| project Host_UnstructuredName = DeviceName\n\t\t\t\t\t\t\t| summarize Host_Aux_AppConCount=count() by Host_UnstructuredName\n\t\t\t\t\t\t\t| top 10 by Host_Aux_AppConCount desc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tAppControlEvents(\u0027\u003CaccountName\u003E\u0027,\u0027\u003CupnSuffix\u003E\u0027,\u0027\u003Csid\u003E\u0027)",
              "inputFields": [
                "accountName",
                "upnSuffix",
                "sid"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "DeviceEvents"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/f89061dd-e6d6-4553-9c88-301a7360fc14",
            "name": "f89061dd-e6d6-4553-9c88-301a7360fc14",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent processes for this account",
              "queryTemplate": "let GetSysLogEventsByAccount = (v_Account_Name:string){\n\t\t\t\t\t\t\tSyslog\n\t\t\t\t\t\t\t| extend v_Account_Name = case(\n\t\t\t\t\t\t\tv_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\tv_Account_Name\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| where SyslogMessage has v_Account_Name\n\t\t\t\t\t\t\t| extend info = pack(\u0027HostName\u0027, HostName, \u0027HostIP\u0027, HostIP)\n\t\t\t\t\t\t\t| summarize Process_Aux_StartTime=min(EventTime), Process_Aux_EndTime=max(EventTime), count(), Process_Aux_info = makeset(info) by Computer, ProcessName, ProcessID\n\t\t\t\t\t\t\t| top 10 by count_ asc nulls last \n\t\t\t\t\t\t\t| project Process_Aux_StartTime, Process_Aux_EndTime, Process_Host_UnstructuredName=Computer, Process_ImageFile_FullPath=ProcessName, Process_ProcessId=tostring(ProcessID), Process_Aux_info\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetSysLogEventsByAccount(\u0027\u003CaccountName\u003E\u0027)",
              "inputFields": [
                "accountName"
              ],
              "outputEntityTypes": [
                "Process"
              ],
              "dataSources": [
                "Syslog"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/dd8f30e4-8171-452e-84a0-99bcd570bd08",
            "name": "dd8f30e4-8171-452e-84a0-99bcd570bd08",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Services created by account",
              "queryTemplate": "let GetServiceCreationsByAccount = (v_Account_Name:string, v_Account_NTDomain:string){\n\t\t\t\t\t\t\tEvent\n\t\t\t\t\t\t\t| where EventID == 7045\n\t\t\t\t\t\t\t| extend p_Account_Name = case(\n\t\t\t\t\t\t\tv_Account_Name has \u0027@\u0027 and v_Account_Name has \u0027\\\\\u0027, tostring(split(tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\u0027@\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\tv_Account_Name\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| extend p_Account_NTDomain = case(\n\t\t\t\t\t\t\tv_Account_NTDomain has \u0027\\\\\u0027, tostring(split(v_Account_NTDomain, \u0027\\\\\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_NTDomain has \u0027@\u0027, tostring(split(tostring(split(v_Account_NTDomain, \u0027@\u0027)[1]),\u0027.\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_NTDomain\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| extend Process_Account_Name = tostring(split(UserName, \u0027\\\\\u0027)[1]), Process_Account_NTDomain = tostring(split(UserName, \u0027\\\\\u0027)[0])\n\t\t\t\t\t\t\t| where Process_Account_Name =~ p_Account_Name and Process_Account_NTDomain =~ p_Account_NTDomain\n\t\t\t\t\t\t\t| extend EventDataParse = parse_xml(EventData)\n\t\t\t\t\t\t\t| extend ServiceName = tostring(EventDataParse.DataItem.EventData.Data[0][\u0027#text\u0027])\n\t\t\t\t\t\t\t| extend ImagePath = tostring(EventDataParse.DataItem.EventData.Data[1][\u0027#text\u0027])\n\t\t\t\t\t\t\t| extend ServiceType = tostring(EventDataParse.DataItem.EventData.Data[2][\u0027#text\u0027])\n\t\t\t\t\t\t\t| extend StartType = tostring(EventDataParse.DataItem.EventData.Data[3][\u0027#text\u0027])\n\t\t\t\t\t\t\t| extend ServiceAccount = tostring(EventDataParse.DataItem.EventData.Data[4][\u0027#text\u0027])\n\t\t\t\t\t\t\t| where ImagePath !has \u0027\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\Definition Updates\\\\\u0027\n\t\t\t\t\t\t\t| extend Process_Aux_Account_info = pack(\u0027ServiceName\u0027, ServiceName, \u0027ServiceType\u0027, ServiceType, \u0027StartType\u0027, StartType, \u0027ServiceAccount\u0027, ServiceAccount)\n\t\t\t\t\t\t\t| summarize Process_Host_Aux_StartTimeUtc = min(TimeGenerated), Process_Host_Aux_EndTimeUtc = max(TimeGenerated) by Process_Host_UnstructuredName = Computer, Process_Account_Name, \n\t\t\t\t\t\t\tProcess_Account_NTDomain, Process_Account_UnstructuredName = UserName, Process_ImageFile_FullPath = ImagePath, tostring(Process_Aux_Account_info)\n\t\t\t\t\t\t\t| top 10 by Process_Host_Aux_StartTimeUtc desc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetServiceCreationsByAccount(\u0027\u003CaccountName\u003E\u0027, \u0027\u003CntDomain\u003E\u0027)",
              "inputFields": [
                "accountName",
                "ntDomain"
              ],
              "outputEntityTypes": [
                "Process"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/84375346-c3f0-4926-ae48-a156010c67e3",
            "name": "84375346-c3f0-4926-ae48-a156010c67e3",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "User account failed logons",
              "queryTemplate": "let GetAllLogonsForUser = (v_Account_Name:string){\n\t\t\t\t\t\t\tSecurityEvent\n\t\t\t\t\t\t\t| extend v_Account_Name = case(\n\t\t\t\t\t\t\tv_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\tv_Account_Name\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| where EventID == 4625\n\t\t\t\t\t\t\t| where AccountType == \u0027User\u0027\n\t\t\t\t\t\t\t| where tolower(Account) contains tolower(v_Account_Name)\n\t\t\t\t\t\t\t| extend info = pack(\u0027EventID\u0027, EventID, \u0027Account\u0027, Account, \u0027LogonTypeName\u0027, LogonTypeName, \u0027SubStatus\u0027, SubStatus, \u0027AccountType\u0027, AccountType, \u0027WorkstationName\u0027, WorkstationName, \u0027IpAddress\u0027, IpAddress)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), Host_Aux_info = makeset(info) by Computer, SourceComputerId\n\t\t\t\t\t\t\t| project Host_Aux_StartTime=min_TimeGenerated,  Host_Aux_EndTime = max_TimeGenerated, Host_UnstructuredName=Computer, Host_Aux_info, Host_OMSAgentID=SourceComputerId\n\t\t\t\t\t\t\t| top 10 by Host_Aux_StartTime asc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetAllLogonsForUser(tolower(\u0027\u003CaccountName\u003E\u0027))",
              "inputFields": [
                "accountName"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/7f3989bf-1558-4d3c-bb5e-e17ac2a67a87",
            "name": "7f3989bf-1558-4d3c-bb5e-e17ac2a67a87",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Office activity IPs for this account",
              "queryTemplate": "let isimAuthenticationInstalled=toscalar(union isfuzzy=true  (datatable(Test:string)[]), (imAuthentication| take 0) | getschema | count | project Exists=(Count\u003E1));\n\t\t\t\t\t\t\tlet Legacy = (v_Account_Name:string){\n\t\t\t\t\t\t\t(datatable(exists:int)[1] | where not(isimAuthenticationInstalled)) \n\t\t\t\t\t\t\t| join\n\t\t\t\t\t\t\t(OfficeActivity\n\t\t\t\t\t\t\t| extend v_Account_Name = case(\n\t\t\t\t\t\t\t  v_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\t  v_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\t  v_Account_Name\n\t\t\t\t\t\t\t )\n\t\t\t\t\t\t\t| where UserId contains v_Account_Name\n\t\t\t\t\t\t\t| extend info = pack(\u0027ClientIP\u0027, ClientIP, \u0027UserType\u0027, UserType, \u0027Operation\u0027, Operation, \u0027OfficeWorkload\u0027, OfficeWorkload, \u0027ResultStatus\u0027, ResultStatus)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), IP_Aux_info = makeset(info) by ClientIP\n\t\t\t\t\t\t\t| project IP_Aux_StartTime = min_TimeGenerated, IP_Aux_EndTime = max_TimeGenerated, ClientIP, IP_Aux_info\n\t\t\t\t\t\t\t| project-rename IP_Address=ClientIP\n\t\t\t\t\t\t\t| top 10 by IP_Aux_StartTime desc nulls last | extend exists=int(1)) on exists\n\t\t\t\t\t\t\t| project-away exists, exists1 \n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tlet Normalized = (v_Account_Name:string){\n\t\t\t\t\t\t\t(datatable(exists:int)[1] | where isimAuthenticationInstalled)\n\t\t\t\t\t\t\t| join (\n\t\t\t\t\t\t\t  imAuthentication(targetusername_has=v_Account_Name)\n\t\t\t\t\t\t\t| summarize IP_Aux_StartTime=min(TimeGenerated), IP_Aux_EndTime=max(TimeGenerated) by SrcDvcIpAddr\n\t\t\t\t\t\t\t| project-rename IP_Address=SrcDvcIpAddr\n\t\t\t\t\t\t\t| top 10 by IP_Aux_StartTime desc nulls last | extend exists=int(1)) on exists | project-away exists, exists1 \n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tunion isfuzzy=true Legacy(\u0027\u003CaccountName\u003E\u0027), Normalized(\u0027\u003CaccountName\u003E\u0027)",
              "inputFields": [
                "accountName"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "OfficeActivity"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d1c2ca8-8efe-4fa2-bea6-fa582c03637c",
            "name": "6d1c2ca8-8efe-4fa2-bea6-fa582c03637c",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "User account interactive logon to new devices",
              "queryTemplate": "let GetNewInteractiveLogonsForUser = (v_Account_Name:string, v_Account_Sid:string, v_Account_AadUserId:string)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t  BehaviorAnalytics\n\t\t\t\t\t\t\t  | extend v_Account_Name = case(\n\t\t\t\t\t\t\t      v_Account_Name has \u0027@\u0027 and v_Account_Name has \u0027\\\\\u0027, tostring(split(tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\u0027@\u0027)[0]),\n\t\t\t\t\t\t\t      v_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\t      v_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\t      v_Account_Name)\n\t\t\t\t\t\t\t  | where ActionType == \u0022InteractiveLogon\u0022 and \n\t\t\t\t\t\t\t          tobool(ActivityInsights.FirstTimeUserLoggedOnToDevice) and \n\t\t\t\t\t\t\t          (\n\t\t\t\t\t\t\t              (isnotempty(UserName) and UserName =~ v_Account_Name) or                                                  \n\t\t\t\t\t\t\t              (isnotempty(UsersInsights.AccountObjectID) and UsersInsights.AccountObjectID == v_Account_AadUserId) or\n\t\t\t\t\t\t\t              (isnotempty(UsersInsights.OnPremisesSID) and UsersInsights.OnPremisesSID =~ v_Account_Sid)\n\t\t\t\t\t\t\t          )\n\t\t\t\t\t\t\t  | extend device_info = pack(\u0027DevicesInsights\u0027, DevicesInsights, \u0027ActivityInsights\u0027, ActivityInsights)\n\t\t\t\t\t\t\t  | project Host_Aux_TimeGenerated = TimeGenerated,\n\t\t\t\t\t\t\t            Host_UnstructuredName = DestinationDevice,\n\t\t\t\t\t\t\t            Host_Aux_Insights = device_info,\n\t\t\t\t\t\t\t            Account_Name = UserName,\n\t\t\t\t\t\t\t            Account_Sid = v_Account_Sid,\n\t\t\t\t\t\t\t            Account_AadUserId = toguid(UsersInsights.AccountObjectID),\n\t\t\t\t\t\t\t            Account_Aux_Insights = UsersInsights\n\t\t\t\t\t\t\t  | top 10 by Host_Aux_TimeGenerated asc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetNewInteractiveLogonsForUser(\u0027\u003CaccountName\u003E\u0027, \u0027\u003Csid\u003E\u0027, \u0027\u003CaadUserId\u003E\u0027)",
              "inputFields": [
                "accountName",
                "sid",
                "aadUserId"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "BehaviorAnalytics"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/b66ab2aa-cd31-43b9-82a2-dd5f0ee9ca81",
            "name": "b66ab2aa-cd31-43b9-82a2-dd5f0ee9ca81",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "User account remote interactive logon to new devices",
              "queryTemplate": "let GetAllNewRemoteInteractiveLogonForUser = (v_Account_Name:string, v_Account_Sid:string, v_Account_AadUserId:string)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t  BehaviorAnalytics\n\t\t\t\t\t\t\t  | extend v_Account_Name = case(\n\t\t\t\t\t\t\t      v_Account_Name has \u0027@\u0027 and v_Account_Name has \u0027\\\\\u0027, tostring(split(tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\u0027@\u0027)[0]),\n\t\t\t\t\t\t\t      v_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\t      v_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\t      v_Account_Name)\n\t\t\t\t\t\t\t  | where ActionType == \u0022RemoteInteractiveLogon\u0022 and \n\t\t\t\t\t\t\t          tobool(ActivityInsights.FirstTimeUserLoggedOnToDevice) and \n\t\t\t\t\t\t\t          (\n\t\t\t\t\t\t\t              (isnotempty(UserName) and UserName =~ v_Account_Name) or                                                  \n\t\t\t\t\t\t\t              (isnotempty(UsersInsights.AccountObjectID) and UsersInsights.AccountObjectID == v_Account_AadUserId) or\n\t\t\t\t\t\t\t              (isnotempty(UsersInsights.OnPremisesSID) and UsersInsights.OnPremisesSID =~ v_Account_Sid)\n\t\t\t\t\t\t\t          )\n\t\t\t\t\t\t\t  | extend device_info = pack(\u0027DevicesInsights\u0027, DevicesInsights, \u0027ActivityInsights\u0027, ActivityInsights)\n\t\t\t\t\t\t\t  | project Host_Aux_TimeGenerated = TimeGenerated,\n\t\t\t\t\t\t\t            Host_UnstructuredName = DestinationDevice,\n\t\t\t\t\t\t\t            Host_Aux_Insights = device_info,\n\t\t\t\t\t\t\t            Account_Name = UserName,\n\t\t\t\t\t\t\t            Account_Sid = v_Account_Sid,\n\t\t\t\t\t\t\t            Account_AadUserId = toguid(UsersInsights.AccountObjectID),\n\t\t\t\t\t\t\t            Account_Aux_Insights = UsersInsights\n\t\t\t\t\t\t\t  | top 10 by Host_Aux_TimeGenerated asc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetAllNewRemoteInteractiveLogonForUser(\u0027\u003CaccountName\u003E\u0027, \u0027\u003Csid\u003E\u0027, \u0027\u003CaadUserId\u003E\u0027)",
              "inputFields": [
                "accountName",
                "sid",
                "aadUserId"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "BehaviorAnalytics"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/82cdcee5-cc2e-4e9f-a235-357159c60c8c",
            "name": "82cdcee5-cc2e-4e9f-a235-357159c60c8c",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "User account access to new resources",
              "queryTemplate": "let GetAllNewResourceAccessForUser = (v_Account_Name:string, v_Account_Sid:string, v_Account_AadUserId:string)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t  BehaviorAnalytics\n\t\t\t\t\t\t\t  | extend v_Account_Name = case(\n\t\t\t\t\t\t\t      v_Account_Name has \u0027@\u0027 and v_Account_Name has \u0027\\\\\u0027, tostring(split(tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\u0027@\u0027)[0]),\n\t\t\t\t\t\t\t      v_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\t      v_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\t      v_Account_Name)\n\t\t\t\t\t\t\t  | where ActionType == \u0022ResourceAccess\u0022 and \n\t\t\t\t\t\t\t          tobool(ActivityInsights.FirstTimeUserLoggedOnToDevice) and \n\t\t\t\t\t\t\t          (\n\t\t\t\t\t\t\t              (isnotempty(UserName) and UserName =~ v_Account_Name) or                                                  \n\t\t\t\t\t\t\t              (isnotempty(UsersInsights.AccountObjectID) and UsersInsights.AccountObjectID == v_Account_AadUserId) or\n\t\t\t\t\t\t\t              (isnotempty(UsersInsights.OnPremisesSID) and UsersInsights.OnPremisesSID =~ v_Account_Sid)\n\t\t\t\t\t\t\t          )\n\t\t\t\t\t\t\t  | extend device_info = pack(\u0027DevicesInsights\u0027, DevicesInsights, \u0027ActivityInsights\u0027, ActivityInsights)\n\t\t\t\t\t\t\t  | project Host_Aux_TimeGenerated = TimeGenerated,\n\t\t\t\t\t\t\t            Host_UnstructuredName = DestinationDevice,\n\t\t\t\t\t\t\t            Host_Aux_Insights = device_info,\n\t\t\t\t\t\t\t            Account_Name = UserName,\n\t\t\t\t\t\t\t            Account_Sid = v_Account_Sid,\n\t\t\t\t\t\t\t            Account_AadUserId = UsersInsights.AccountObjectID,\n\t\t\t\t\t\t\t            Account_Aux_Insights = UsersInsights\n\t\t\t\t\t\t\t  | top 10 by Host_Aux_TimeGenerated asc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetAllNewResourceAccessForUser(\u0027\u003CaccountName\u003E\u0027, \u0027\u003Csid\u003E\u0027, \u0027\u003CaadUserId\u003E\u0027)",
              "inputFields": [
                "accountName",
                "sid",
                "aadUserId"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "BehaviorAnalytics"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/18b7e4e3-5b57-4924-b3cd-7e9a5a143521",
            "name": "18b7e4e3-5b57-4924-b3cd-7e9a5a143521",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Peers with a recent alert",
              "queryTemplate": "let GetUserPeersWithAlerts = (v_Account_Name:string, v_Account_UPNSuffix:string, v_Account_AadUserId:string) { \n\t\t\t\t\t\t\t  let Account_UPN = strcat(v_Account_Name, \u0027@\u0027,v_Account_UPNSuffix);\n\t\t\t\t\t\t\t  let Peers= UserPeerAnalytics  \n\t\t\t\t\t\t\t      | where UserPrincipalName =~ Account_UPN or UserId =~ v_Account_AadUserId\n\t\t\t\t\t\t\t      | where TimeGenerated == toscalar (UserPeerAnalytics | summarize max(TimeGenerated))\n\t\t\t\t\t\t\t      | project PeerUserPrincipalName, PeerUserId, Rank\n\t\t\t\t\t\t\t      | extend PeerUserPrincipalName=tolower(PeerUserPrincipalName)\n\t\t\t\t\t\t\t      | parse PeerUserPrincipalName with Account_Name \u0027@\u0027 Account_UPNSuffix;\n\t\t\t\t\t\t\t  let PeerNames= Peers | summarize make_set_if(Account_Name, isnotempty(Account_Name));\n\t\t\t\t\t\t\t  let PeerIds  = Peers | summarize make_set_if(PeerUserId  , isnotempty(PeerUserId));\n\t\t\t\t\t\t\t  let PeersWithSecAlert=SecurityAlert\n\t\t\t\t\t\t\t      | where Entities has \u0022account\u0022\n\t\t\t\t\t\t\t      | where Entities has_any (PeerNames) or Entities has_any (PeerIds)\n\t\t\t\t\t\t\t      | mvexpand todynamic(Entities) \n\t\t\t\t\t\t\t      | where tostring(parse_json(Entities).Type) ==\u0022account\u0022 \n\t\t\t\t\t\t\t      | where tostring(parse_json(Entities).Name) has_any (PeerNames) or tostring(parse_json(Entities).AadUserId) has_any (PeerIds)\n\t\t\t\t\t\t\t      | summarize Account_Aux_AlertCount = count() \n\t\t\t\t\t\t\t          by Account_Name=tolower(tostring(parse_json(Entities).Name))\n\t\t\t\t\t\t\t           , Account_UPNSuffix=tolower(tostring(parse_json(Entities).UPNSuffix));\n\t\t\t\t\t\t\t  PeersWithSecAlert \n\t\t\t\t\t\t\t  | join kind=innerunique\n\t\t\t\t\t\t\t  Peers \n\t\t\t\t\t\t\t      on Account_Name, Account_UPNSuffix\n\t\t\t\t\t\t\t  | project Account_Name, Account_UPNSuffix, Account_Aux_AlertCount\n\t\t\t\t\t\t\t  };\n\t\t\t\t\t\t\t  GetUserPeersWithAlerts(\u0022{{Account_Name}}\u0022,\u0022{{Account_UPNSuffix}}\u0022, \u0022{{Account_AadUserId}}\u0022)",
              "inputFields": [
                "accountName",
                "upnSuffix"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "UserPeerAnalytics SecurityAlert"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/c34bf507-cedf-4120-bf41-f835dd68b0d9",
            "name": "c34bf507-cedf-4120-bf41-f835dd68b0d9",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Hosts which the account logged on to",
              "queryTemplate": "let GetAllHostsbyAccount = (v_Account_Name:string){\n\t\t\t\t\t\t\tSigninLogs\n\t\t\t\t\t\t\t| extend v_Account_Name = case(\n\t\t\t\t\t\t\tv_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\tv_Account_Name\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| where UserPrincipalName contains v_Account_Name\n\t\t\t\t\t\t\t| extend RemoteHost = tolower(tostring(parsejson(DeviceDetail[\u0027displayName\u0027])))\n\t\t\t\t\t\t\t| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\n\t\t\t\t\t\t\t| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\n\t\t\t\t\t\t\t| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\n\t\t\t\t\t\t\t| extend info = pack(\u0027UserDisplayName\u0027, UserDisplayName, \u0027UserPrincipalName\u0027, UserPrincipalName, \u0027AppDisplayName\u0027, AppDisplayName, \u0027ClientAppUsed\u0027, ClientAppUsed, \u0027Browser\u0027, tostring(Browser), \u0027IPAddress\u0027, IPAddress, \u0027ResultType\u0027, ResultType, \u0027ResultDescription\u0027, ResultDescription, \u0027Location\u0027, Location, \u0027State\u0027, State, \u0027City\u0027, City, \u0027StatusCode\u0027, StatusCode, \u0027StatusDetails\u0027, StatusDetails)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), Host_Aux_info = makeset(info) by RemoteHost , tostring(OS)\n\t\t\t\t\t\t\t| project min_TimeGenerated, max_TimeGenerated, RemoteHost, OS, Host_Aux_info\n\t\t\t\t\t\t\t| top 10 by min_TimeGenerated desc nulls last \n\t\t\t\t\t\t\t| project-rename Host_UnstructuredName=RemoteHost, Host_OSVersion=OS, Host_Aux_StartTime=min_TimeGenerated, Host_Aux_EndTime=max_TimeGenerated\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetAllHostsbyAccount(\u0027\u003CaccountName\u003E\u0027)",
              "inputFields": [
                "accountName"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SigninLogs"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/81d63625-6617-455d-b1e3-ee5ed989e5f8",
            "name": "81d63625-6617-455d-b1e3-ee5ed989e5f8",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Screenshots taken",
              "queryTemplate": "let HostScreenshot= (Account_Name:string, Account_UPNSuffix:string){\n\t\t\t\t\t\t\t  let p_Account_UPN = strcat(Account_Name,\u0027@\u0027,Account_UPNSuffix);\n\t\t\t\t\t\t\t  DeviceEvents \n\t\t\t\t\t\t\t  | where ActionType ==\u0027ScreenshotTaken\u0027 \n\t\t\t\t\t\t\t  | where InitiatingProcessAccountUpn =~ p_Account_UPN\n\t\t\t\t\t\t\t  | summarize Count=count() by DeviceName\n\t\t\t\t\t\t\t  | top 10 by Count desc\n\t\t\t\t\t\t\t  | project Host_UnstructuredName=DeviceName\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tHostScreenshot(\u0027\u003CAccount_Name\u003E\u0027, \u0027\u003CAccount_UPNSuffix\u003E\u0027)",
              "inputFields": [
                "accountName",
                "upnSuffix"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "DeviceEvents"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/8a697f4c-04af-4198-a6d3-ce5dc3acc8dd",
            "name": "8a697f4c-04af-4198-a6d3-ce5dc3acc8dd",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "User account successful logons",
              "queryTemplate": "let GetAllLogonsForUser = (v_Account_Name:string){\n\t\t\t\t\t\t\tSecurityEvent\n\t\t\t\t\t\t\t| extend v_Account_Name = case(\n\t\t\t\t\t\t\tv_Account_Name has \u0027@\u0027, tostring(split(v_Account_Name, \u0027@\u0027)[0]),\n\t\t\t\t\t\t\tv_Account_Name has \u0027\\\\\u0027, tostring(split(v_Account_Name, \u0027\\\\\u0027)[1]),\n\t\t\t\t\t\t\tv_Account_Name\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| where EventID == 4624\n\t\t\t\t\t\t\t| where AccountType == \u0027User\u0027\n\t\t\t\t\t\t\t| where tolower(Account) contains tolower(v_Account_Name)\n\t\t\t\t\t\t\t| extend info = pack(\u0027EventID\u0027, EventID, \u0027Account\u0027, Account, \u0027LogonTypeName\u0027, LogonTypeName, \u0027SubStatus\u0027, SubStatus, \u0027AccountType\u0027, AccountType, \u0027WorkstationName\u0027, WorkstationName, \u0027IpAddress\u0027, IpAddress)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), Host_Aux_info = makeset(info) by Computer, SourceComputerId, _ResourceId\n\t\t\t\t\t\t\t| project min_TimeGenerated, max_TimeGenerated, Computer, Host_Aux_info, Host_OMSAgentID=SourceComputerId, Host_AzureID=_ResourceId\n\t\t\t\t\t\t\t| project-rename Host_UnstructuredName=Computer, Host_Aux_StartTime=min_TimeGenerated, Host_Aux_EndTime=max_TimeGenerated\n\t\t\t\t\t\t\t| top 10 by Host_Aux_StartTime asc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetAllLogonsForUser(tolower(\u0027\u003CaccountName\u003E\u0027))",
              "inputFields": [
                "accountName"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Account"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/62527635-bc5a-4233-bb93-e4eb4e60bb70",
            "name": "62527635-bc5a-4233-bb93-e4eb4e60bb70",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Hosts where this file was mentioned",
              "queryTemplate": "let GetFilesHost = (v_File_Name:string){\n\t\t\t\t\t\t\tSecurityEvent\n\t\t\t\t\t\t\t| where CommandLine contains v_File_Name or ServiceFileName contains v_File_Name or ServiceName contains v_File_Name\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated) by Computer, Host_OMSAgentID=SourceComputerId, Host_AzureID = _ResourceId\n\t\t\t\t\t\t\t| project min_TimeGenerated, max_TimeGenerated, Computer, Host_OMSAgentID, Host_AzureID\n\t\t\t\t\t\t\t| project-rename Host_UnstructuredName=Computer, Host_Aux_min_TimeGenerated=min_TimeGenerated, Host_Aux_max_TimeGenerated=max_TimeGenerated\n\t\t\t\t\t\t\t| top 10 by Host_Aux_min_TimeGenerated desc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetFilesHost(\u0027\u003CfileName\u003E\u0027)",
              "inputFields": [
                "fileName"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "File"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/4e0d1f17-e3a9-4c1a-aa7d-3842828c10a2",
            "name": "4e0d1f17-e3a9-4c1a-aa7d-3842828c10a2",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "DefenderForIoT - Hosts communicating the most amount of data with this Host",
              "queryTemplate": "let ConnectionData_DefenderForIoT_GetHost2Host = (v_Host_HostName:string) {\n\t\t\t\t\t\t\tlet connectionData = SecurityIoTRawEvent \n\t\t\t\t\t\t\t| extend ClientDeviceType = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ClientDeviceId = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ClientIpAddress = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ClientisExternal = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ServerDeviceType = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ServerDeviceId = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ServerIpAddress = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ServerisExternal = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ClientDeviceName = tostring(todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceName)\n\t\t\t\t\t\t\t| extend ServerDeviceName = tostring(todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceName)\n\t\t\t\t\t\t\t| extend Bandwidth = todynamic(extractjson(\u0022$Bandwidth\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend LastActivity = todynamic(extractjson(\u0022$LastActivity\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend Protocol = todynamic(extractjson(\u0022$Protocol\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerPort = todynamic(extractjson(\u0022$ServerPort\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerDevice = extractjson(\u0022$ServerDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend ClientDevice = extractjson(\u0022$ClientDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend SensorId = DeviceId\n\t\t\t\t\t\t\t| extend ClientDeviceGUID = strcat(SensorId, \u0022_\u0022, ClientDeviceId), ServerDeviceGUID = strcat(SensorId, \u0022_\u0022, ServerDeviceId);\n\t\t\t\t\t\t\tconnectionData\n\t\t\t\t\t\t\t| where ClientDeviceName == v_Host_HostName or ServerDeviceName == v_Host_HostName\n\t\t\t\t\t\t\t| extend Direction = iff(ClientDeviceName == v_Host_HostName, \u0022Outbound\u0022, \u0022Inbound\u0022)\n\t\t\t\t\t\t\t| project DeviceGUID = iff(Direction == \u0022Outbound\u0022, ServerDeviceGUID, ClientDeviceGUID), \n\t\t\t\t\t\t\tDeviceType = iff(Direction == \u0022Outbound\u0022, ServerDeviceType, ClientDeviceType),\n\t\t\t\t\t\t\tDeviceIp = iff(Direction == \u0022Outbound\u0022, ServerIpAddress, ClientIpAddress),\n\t\t\t\t\t\t\tDeviceName = iff(Direction == \u0022Outbound\u0022, ServerDeviceName, ClientDeviceName),\n\t\t\t\t\t\t\tSensorId, LastActivity = todatetime(LastActivity), Bandwidth = todouble(Bandwidth), Protocol, ServerPort\n\t\t\t\t\t\t\t| summarize TotalBandwidth = sum(Bandwidth), LastActivity = max(LastActivity), Protocols = make_set(Protocol), ServerPorts = make_set(ServerPort) by DeviceGUID, DeviceName, IpAddress = tostring(DeviceIp), IoTDevice_DeviceType = tostring(DeviceType)\n\t\t\t\t\t\t\t| project-rename TotalBandwidth_MB = TotalBandwidth\n\t\t\t\t\t\t\t| extend TotalBandwidth_MB = floor(todecimal(TotalBandwidth_MB / 1000), 0.1)\n\t\t\t\t\t\t\t| project Host_HostName = DeviceName, Host_Aux_IpAddress = IpAddress,Host_Aux_Type = IoTDevice_DeviceType, Host_Aux_LastActivity = LastActivity, Host_Aux_Protocols = Protocols, Host_Aux_ServerPorts = ServerPorts, Host_Aux_TotalBandwidth_MB = TotalBandwidth_MB\n\t\t\t\t\t\t\t| top 10 by Host_Aux_TotalBandwidth_MB\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tConnectionData_DefenderForIoT_GetHost2Host(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SecurityIoTRawEvent"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/cc942838-2ce5-4a05-8bf9-25a00102a7b7",
            "name": "cc942838-2ce5-4a05-8bf9-25a00102a7b7",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "DefenderForIoT - IP Addresses communicating the most amount of data with this Host",
              "queryTemplate": "let ConnectionData_DefenderForIoT_GetHost2IP = (v_Host_HostName: string) {\n\t\t\t\t\t\t\tlet connectionData = SecurityIoTRawEvent \n\t\t\t\t\t\t\t| extend ClientDeviceType = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ClientDeviceId = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ClientIpAddress = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ClientisExternal = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ServerDeviceType = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ServerDeviceId = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ServerIpAddress = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ServerisExternal = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ClientDeviceName = tostring(todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceName)\n\t\t\t\t\t\t\t| extend ServerDeviceName = tostring(todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceName)\n\t\t\t\t\t\t\t| extend Bandwidth = todynamic(extractjson(\u0022$Bandwidth\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend LastActivity = todynamic(extractjson(\u0022$LastActivity\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend Protocol = todynamic(extractjson(\u0022$Protocol\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerPort = todynamic(extractjson(\u0022$ServerPort\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerDevice = extractjson(\u0022$ServerDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend ClientDevice = extractjson(\u0022$ClientDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend SensorId = DeviceId\n\t\t\t\t\t\t\t| extend ClientDeviceGUID = strcat(SensorId, \u0022_\u0022, ClientDeviceId), ServerDeviceGUID = strcat(SensorId, \u0022_\u0022, ServerDeviceId);\n\t\t\t\t\t\t\tconnectionData\n\t\t\t\t\t\t\t| where ClientDeviceName == v_Host_HostName or ServerDeviceName == v_Host_HostName\n\t\t\t\t\t\t\t| extend Direction = iff(ClientDeviceName == v_Host_HostName, \u0022Outbound\u0022, \u0022Inbound\u0022)\n\t\t\t\t\t\t\t| project DeviceGUID = iff(Direction == \u0022Outbound\u0022, ServerDeviceGUID, ClientDeviceGUID), \n\t\t\t\t\t\t\tDeviceType = iff(Direction == \u0022Outbound\u0022, ServerDeviceType, ClientDeviceType),\n\t\t\t\t\t\t\tDeviceIp = iff(Direction == \u0022Outbound\u0022, ServerIpAddress, ClientIpAddress),\n\t\t\t\t\t\t\tDeviceIsExternal = iff(Direction == \u0022Outbound\u0022, ServerisExternal, ClientisExternal),\n\t\t\t\t\t\t\tSensorId, LastActivity = todatetime(LastActivity), Bandwidth = todouble(Bandwidth), Protocol, ServerPort, Direction\n\t\t\t\t\t\t\t| summarize TotalBandwidth = sum(Bandwidth), LastActivity = max(LastActivity), Protocols = make_set(Protocol), ServerPorts = make_set(ServerPort) by IoTDevice_DeviceId = DeviceGUID, IoTDevice_IpAddress = tostring(DeviceIp), IoTDevice_DeviceType = tostring(DeviceType), DeviceIsExternal = tostring(DeviceIsExternal)\n\t\t\t\t\t\t\t| project-rename TotalBandwidth_MB = TotalBandwidth\n\t\t\t\t\t\t\t| project IP_Address = IoTDevice_IpAddress, IP_Aux_DeviceType = IoTDevice_DeviceType, IP_Aux_LastActivity = LastActivity, IP_Aux_Protocols = Protocols, IP_Aux_ServerPorts = ServerPorts, IP_Aux_TotalBandwidth_MB = TotalBandwidth_MB, IP_Aux_IsExternal = DeviceIsExternal\n\t\t\t\t\t\t\t| extend IP_Aux_TotalBandwidth_MB = floor(todecimal(IP_Aux_TotalBandwidth_MB / 1000), 0.1)\n\t\t\t\t\t\t\t| top 10 by IP_Aux_TotalBandwidth_MB\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tConnectionData_DefenderForIoT_GetHost2IP(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "SecurityIoTRawEvent"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/98b2ce21-167d-43bd-a496-9f2c85c5f95b",
            "name": "98b2ce21-167d-43bd-a496-9f2c85c5f95b",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Accounts with several failed logins immediately followed by a successful login",
              "queryTemplate": "let BRUTEFORCE_THRESHOLD = 10;\n\t\t\t\t\t\t\tlet SuccessfulLoginEventId = 4624;\n\t\t\t\t\t\t\tlet FailedLoginEventId = 4625;\n\t\t\t\t\t\t\tlet AccountsPossibleSuccessfulBruteForce = (v_Host_HostName:string, v_Host_DnsDomain:string){\n\t\t\t\t\t\t\tSecurityEvent\n\t\t\t\t\t\t\t| where AccountType == \u0027User\u0027\n\t\t\t\t\t\t\t| extend p_Host_HostName=tostring(split(v_Host_HostName,\u0027.\u0027)[0])\n\t\t\t\t\t\t\t| extend p_Host_DnsDomain=case (isnotempty(v_Host_DnsDomain),v_Host_DnsDomain\n\t\t\t\t\t\t\t                              ,v_Host_HostName has \u0027.\u0027, extract(@\u0027\\.(.\u002B$)\u0027,1,v_Host_HostName)\n\t\t\t\t\t\t\t                              , \u0027\u0027)\n\t\t\t\t\t\t\t| extend Host_HostName=tostring(split(Computer,\u0027.\u0027)[0])\n\t\t\t\t\t\t\t| extend Host_DnsDomain=iff(Computer has \u0027.\u0027, extract(@\u0027\\.(.\u002B$)\u0027,1,Computer) ,\u0022\u0022)\n\t\t\t\t\t\t\t| where p_Host_HostName=~Host_HostName and (isempty(p_Host_DnsDomain) or isempty(Host_DnsDomain) or p_Host_DnsDomain=~Host_DnsDomain)\n\t\t\t\t\t\t\t| extend Fails = (EventID == FailedLoginEventId), Success = (EventID == SuccessfulLoginEventId)\n\t\t\t\t\t\t\t| extend Account = tolower(Account)\n\t\t\t\t\t\t\t| summarize Account_Aux_SuccessPerMin = countif(Success), Account_Aux_FailPerMin = countif(Fails) by Account, bin(TimeGenerated, 1m) \n\t\t\t\t\t\t\t| where Account_Aux_FailPerMin\t\u003E BRUTEFORCE_THRESHOLD and Account_Aux_SuccessPerMin \u003E 0\n\t\t\t\t\t\t\t| extend EventData = pack(\u0027FailPerMin\u0027,Account_Aux_FailPerMin, \u0027SuccessPerMin\u0027, Account_Aux_SuccessPerMin, \u0027Time\u0027, TimeGenerated )\n\t\t\t\t\t\t\t| summarize Max = max(Account_Aux_FailPerMin), Account_Aux_EventsData=makeset(EventData) by Account\n\t\t\t\t\t\t\t| top 10 by Max\n\t\t\t\t\t\t\t| parse Account with Account_NTDomain \u0027\\\\\u0027 *\n\t\t\t\t\t\t\t| extend Account_Name = extract(@\u0027^([^\\\\]*\\\\)?([^@]\u002B)(@.*)?$\u0027,2,Account),  \n\t\t\t\t\t\t\t   Account_UPNSuffix = extract(@\u0027^([^\\\\]*\\\\)?([^@]\u002B)(@(.*))?$\u0027,4,Account)\n\t\t\t\t\t\t\t| project Account_Name, Account_NTDomain, Account_UPNSuffix, Account_Aux_EventsData\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tAccountsPossibleSuccessfulBruteForce(\u0027\u003ChostName\u003E\u0027, \u0027\u003CdnsDomain\u003E\u0027)",
              "inputFields": [
                "hostName",
                "dnsDomain"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/bb6100ee-ae38-41b5-8457-88d503a3bf8f",
            "name": "bb6100ee-ae38-41b5-8457-88d503a3bf8f",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent inbound WireData connections",
              "queryTemplate": "let GetWireDataInboundWithHost = (v_Host_HostName:string){\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| where Direction == \u0027Inbound\u0027 \n\t\t\t\t\t\t\t| where Computer has v_Host_HostName\n\t\t\t\t\t\t\t| extend info = pack(\u0027Computer\u0027, Computer, \u0027LocalPortNumber\u0027, LocalPortNumber, \u0027RemoteIP\u0027, RemoteIP, \u0027Direction\u0027, Direction, \u0027ApplicationProtocol\u0027, ApplicationProtocol)\n\t\t\t\t\t\t\t| summarize Process_Aux_Min_SessionStartTime=min(SessionStartTime), count(), IP_Aux_info = makeset(info) by ProcessName , LocalIP, ProcessID\n\t\t\t\t\t\t\t| extend Process_Aux_info = IP_Aux_info\n\t\t\t\t\t\t\t| top 10 by count_ asc\n\t\t\t\t\t\t\t| project Process_Aux_Min_SessionStartTime, ProcessName , LocalIP, IP_Aux_info, Process_Aux_info, Process_ProcessId=tostring(ProcessID)\n\t\t\t\t\t\t\t| project-rename IP_Address=LocalIP, Process_ImageFile_FullPath=ProcessName\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetWireDataInboundWithHost(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "IP",
                "Process"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/8c00a2a0-43d3-45a9-aa2e-f73deb0abfbb",
            "name": "8c00a2a0-43d3-45a9-aa2e-f73deb0abfbb",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent outbound WireData connections",
              "queryTemplate": "let GetWireDataOutboundWithHost = (v_Host_HostName:string){\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| where Direction == \u0027Outbound\u0027 \n\t\t\t\t\t\t\t| where Computer has v_Host_HostName\n\t\t\t\t\t\t\t| extend info = pack(\u0027Computer\u0027, Computer, \u0027LocalIP\u0027, LocalIP, \u0027LocalPortNumber\u0027, LocalPortNumber, \u0027Direction\u0027, Direction, \u0027ApplicationProtocol\u0027, ApplicationProtocol)\n\t\t\t\t\t\t\t| summarize Process_Aux_Min_SessionStartTime=min(SessionStartTime), count(), IP_Aux_info = makeset(info) by ProcessName, RemoteIP, ProcessID\n\t\t\t\t\t\t\t| extend Process_Aux_info = IP_Aux_info\n\t\t\t\t\t\t\t| top 10 by count_ asc\n\t\t\t\t\t\t\t| project Process_Aux_Min_SessionStartTime, ProcessName, RemoteIP, IP_Aux_info, Process_Aux_info, Process_ProcessId=tostring(ProcessID)\n\t\t\t\t\t\t\t| project-rename IP_Address=RemoteIP, Process_ImageFile_FullPath=ProcessName\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetWireDataOutboundWithHost(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "IP",
                "Process"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/ea747f91-23f9-425a-baa8-628f30193888",
            "name": "ea747f91-23f9-425a-baa8-628f30193888",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent processes for this host",
              "queryTemplate": "let GetSysLogEventsOnHost = (v_Host_HostName:string){\n\t\t\t\t\t\t\tSyslog\n\t\t\t\t\t\t\t| where Computer has v_Host_HostName\n\t\t\t\t\t\t\t| extend info = pack(\u0027HostName\u0027, HostName, \u0027HostIP\u0027, HostIP)\n\t\t\t\t\t\t\t| summarize Process_Aux_StartTime=min(EventTime), Process_Aux_EndTime=max(EventTime), count(), Process_Aux_info = makeset(info) by Computer, ProcessName, ProcessID\n\t\t\t\t\t\t\t| top 10 by count_ asc nulls last \n\t\t\t\t\t\t\t| project Process_Aux_StartTime, Process_Aux_EndTime, Process_Host_UnstructuredName=Computer, Process_ProcessId=tostring(ProcessID), Process_ImageFile_FullPath=ProcessName, Process_Aux_info\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetSysLogEventsOnHost(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "Process"
              ],
              "dataSources": [
                "Syslog"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/07da3cc8-c8ad-4710-a44e-334cdcb7882b",
            "name": "07da3cc8-c8ad-4710-a44e-334cdcb7882b",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Parent processes running on host",
              "queryTemplate": "let GetParentProcessesOnHost = (v_Host_HostName:string){\n\t\t\t\t\t\t\tSecurityEvent \n\t\t\t\t\t\t\t| where EventID == 4688 \n\t\t\t\t\t\t\t| where isnotempty(ParentProcessName)\n\t\t\t\t\t\t\t| where NewProcessName !contains \u0027:\\\\Windows\\\\System32\\\\conhost.exe\u0027 and ParentProcessName !contains \u0027:\\\\Windows\\\\System32\\\\conhost.exe\u0027\n\t\t\t\t\t\t\t  and NewProcessName !contains \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v2.0.50727\\\\csc.exe\u0027 and ParentProcessName !contains \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v2.0.50727\\\\csc.exe\u0027\n\t\t\t\t\t\t\t  and NewProcessName !contains \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v2.0.50727\\\\cvtres.exe\u0027 and ParentProcessName !contains \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v2.0.50727\\\\cvtres.exe\u0027\n\t\t\t\t\t\t\t  and NewProcessName!contains \u0027:\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\MonitoringHost.exe\u0027 and ParentProcessName !contains \u0027:\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\MonitoringHost.exe\u0027\n\t\t\t\t\t\t\t  and ParentProcessName !contains \u0027:\\\\Windows\\\\CCM\\\\CcmExec.exe\u0027\n\t\t\t\t\t\t\t| where(ParentProcessName !contains \u0027:\\\\Windows\\\\System32\\\\svchost.exe\u0027 and (NewProcessName !contains \u0027:\\\\Windows\\\\System32\\\\wbem\\\\WmiPrvSE.exe\u0027 or NewProcessName !contains \u0027:\\\\Windows\\\\SysWOW64\\\\wbem\\\\WmiPrvSE.exe\u0027))\n\t\t\t\t\t\t\t| where(ParentProcessName !contains \u0027:\\\\Windows\\\\System32\\\\services.exe\u0027 and NewProcessName !contains \u0027:\\\\Windows\\\\servicing\\\\TrustedInstaller.exe\u0027)\n\t\t\t\t\t\t\t| where toupper(Computer) contains v_Host_HostName or toupper(WorkstationName) contains v_Host_HostName\n\t\t\t\t\t\t\t| extend info = pack(\u0027EventID\u0027, EventID, \u0027TargetAccount\u0027, TargetAccount)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), Process_Aux_info = makeset(info) by Account, Computer, ParentProcessName, NewProcessName, CommandLine, ProcessId\n\t\t\t\t\t\t\t| project min_TimeGenerated, max_TimeGenerated, Account, Computer, ParentProcessName, NewProcessName, CommandLine, ProcessId, Process_Aux_info\n\t\t\t\t\t\t\t| project-rename Process_Host_UnstructuredName=Computer, Process_Account_UnstructuredName=Account, Process_CommandLine=CommandLine, Process_ProcessId=ProcessId, Process_ImageFile_FullPath=NewProcessName, Process_ParentProcess_ImageFile_FullPath=ParentProcessName, Process_Aux_StartTime = min_TimeGenerated, Process_Aux_EndTime= max_TimeGenerated\n\t\t\t\t\t\t\t| top 10 by Process_Aux_StartTime asc\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetParentProcessesOnHost(toupper(\u0027\u003ChostName\u003E\u0027))",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "Process"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/f87b2afb-068f-4734-88a0-94560309f9d7",
            "name": "f87b2afb-068f-4734-88a0-94560309f9d7",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Processes on Host blocked from loading non-Microsoft-signed binaries",
              "queryTemplate": "let BlockedUnsigned = (v_Host_HostName:string){\n\t\t\t\t\t\t\tDeviceEvents\n\t\t\t\t\t\t\t| where ActionType == \u0022ExploitGuardNonMicrosoftSignedBlocked\u0022 and FileName !hassuffix \u0022.ni.dll\u0022\n\t\t\t\t\t\t\t| where v_Host_HostName =~ tostring(split(DeviceName, \u0027.\u0027)[0])\n\t\t\t\t\t\t\t| summarize Process_Aux_Count=count() by Process_ProcessId=InitiatingProcessId, Process_CommandLine=InitiatingProcessCommandLine, Process_Host_UnstructuredName=DeviceName\n\t\t\t\t\t\t\t| top 10 by Process_Aux_Count desc\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tBlockedUnsigned(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "Process"
              ],
              "dataSources": [
                "DeviceEvents"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/d3393571-0533-4127-bfe1-6b1de4ab126e",
            "name": "d3393571-0533-4127-bfe1-6b1de4ab126e",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Processes running on Host",
              "queryTemplate": "let GetActiveProcessesOnHost = (v_Host_HostName:string){\n\t\t\t\t\t\t\tSecurityEvent \n\t\t\t\t\t\t\t| where EventID == 4688\n\t\t\t\t\t\t\t| where NewProcessName !contains \u0027:\\\\Windows\\\\System32\\\\conhost.exe\u0027 and ParentProcessName !contains \u0027:\\\\Windows\\\\System32\\\\conhost.exe\u0027\n\t\t\t\t\t\t\t  and NewProcessName !contains \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v2.0.50727\\\\csc.exe\u0027 and ParentProcessName !contains \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v2.0.50727\\\\csc.exe\u0027\n\t\t\t\t\t\t\t  and NewProcessName !contains \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v2.0.50727\\\\cvtres.exe\u0027 and ParentProcessName !contains \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\v2.0.50727\\\\cvtres.exe\u0027\n\t\t\t\t\t\t\t  and NewProcessName!contains \u0027:\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\MonitoringHost.exe\u0027 and ParentProcessName !contains \u0027:\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\MonitoringHost.exe\u0027\n\t\t\t\t\t\t\t  and ParentProcessName !contains \u0027:\\\\Windows\\\\CCM\\\\CcmExec.exe\u0027\n\t\t\t\t\t\t\t| where (ParentProcessName !contains \u0027:\\\\Windows\\\\System32\\\\svchost.exe\u0027 and (NewProcessName !contains \u0027:\\\\Windows\\\\System32\\\\wbem\\\\WmiPrvSE.exe\u0027 or NewProcessName !contains \u0027:\\\\Windows\\\\SysWOW64\\\\wbem\\\\WmiPrvSE.exe\u0027))\n\t\t\t\t\t\t\t| where (ParentProcessName !contains \u0027:\\\\Windows\\\\System32\\\\services.exe\u0027 and NewProcessName !contains \u0027:\\\\Windows\\\\servicing\\\\TrustedInstaller.exe\u0027)\n\t\t\t\t\t\t\t| where toupper(Computer) contains v_Host_HostName or toupper(WorkstationName) contains v_Host_HostName\n\t\t\t\t\t\t\t| summarize Process_Aux_StartTime=min(TimeGenerated), Process_Aux_EndTime=max(TimeGenerated) by Computer, Account, NewProcessName, CommandLine, ProcessId, ParentProcessName\n\t\t\t\t\t\t\t| project Process_Aux_StartTime, Process_Aux_EndTime, Computer, Account, NewProcessName, CommandLine, ProcessId, Process_ParentProcess_ImageFile_FullPath=ParentProcessName\n\t\t\t\t\t\t\t| project-rename Process_Host_UnstructuredName=Computer, Process_Account_UnstructuredName=Account, Process_CommandLine=CommandLine, Process_ProcessId=ProcessId, Process_ImageFile_FullPath=NewProcessName\n\t\t\t\t\t\t\t| top 10 by Process_Aux_StartTime desc\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetActiveProcessesOnHost(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "Process"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6537a8c3-a269-4b2f-8c70-3824c23fef7b",
            "name": "6537a8c3-a269-4b2f-8c70-3824c23fef7b",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Services created on host",
              "queryTemplate": "let GetServiceCreationsOnHost = (v_Host_HostName:string){\n\t\t\t\t\t\t\tEvent \n\t\t\t\t\t\t\t| where EventID == 7045\n\t\t\t\t\t\t\t| where Computer =~ v_Host_HostName\n\t\t\t\t\t\t\t| extend EventDataParse = parse_xml(EventData)\n\t\t\t\t\t\t\t| extend Process_Aux_ServiceName = tostring(EventDataParse.DataItem.EventData.Data[0][\u0027#text\u0027])\n\t\t\t\t\t\t\t| extend ImagePath = tostring(EventDataParse.DataItem.EventData.Data[1][\u0027#text\u0027])\n\t\t\t\t\t\t\t| extend ServiceType = tostring(EventDataParse.DataItem.EventData.Data[2][\u0027#text\u0027])\n\t\t\t\t\t\t\t| extend StartType = tostring(EventDataParse.DataItem.EventData.Data[3][\u0027#text\u0027])\n\t\t\t\t\t\t\t| extend ServiceAccount = tostring(EventDataParse.DataItem.EventData.Data[4][\u0027#text\u0027])\n\t\t\t\t\t\t\t| where ImagePath !has \u0027\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\Definition Updates\\\\\u0027 \n\t\t\t\t\t\t\tand ImagePath !has \u0027\\\\Packages\\\\Plugins\\\\Microsoft.EnterpriseCloud.Monitoring.MicrosoftMonitoringAgent\\\\\u0027\n\t\t\t\t\t\t\tand not(ImagePath has \u0027\\\\WindowsAzure\\\\GuestAgent_\u0027 and ImagePath has \u0027\\\\Telemetry\\\\WindowsAzureTelemetryService.exe\u0027)  \n\t\t\t\t\t\t\tand not(ImagePath has \u0027\\\\WindowsAzure\\\\GuestAgent_\u0027 and ImagePath has \u0027\\\\GuestAgent\\\\WindowsAzureGuestAgent.exe\u0027)\n\t\t\t\t\t\t\t| extend Process_Aux_Service_info = pack(\u0027ServiceName\u0027, Process_Aux_ServiceName, \u0027ServiceType\u0027, ServiceType, \u0027StartType\u0027, StartType, \u0027ServiceAccount\u0027, ServiceAccount)\n\t\t\t\t\t\t\t| project TimeGenerated, Computer, UserName, Process_Aux_ServiceName, ImagePath, Process_Aux_Service_info\n\t\t\t\t\t\t\t| project-rename Process_Host_UnstructuredName=Computer, Process_Account_UnstructuredName=UserName, Process_ImageFile_FullPath=ImagePath, Process_CreationTimeUtc=TimeGenerated\n\t\t\t\t\t\t\t| top 10 by Process_CreationTimeUtc desc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetServiceCreationsOnHost(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "Process"
              ],
              "dataSources": [
                "Event"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/3aed43db-e358-4952-a5cd-a10f00d90af4",
            "name": "3aed43db-e358-4952-a5cd-a10f00d90af4",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "User accounts created or deleted on host",
              "queryTemplate": "let GetAccountChangesOnHost = (v_Host_HostName:string){\n\t\t\t\t\t\t\tSecurityEvent\n\t\t\t\t\t\t\t| where EventID == 4720 or EventID == 4726\n\t\t\t\t\t\t\t| where AccountType == \u0027User\u0027\n\t\t\t\t\t\t\t| where Computer contains v_Host_HostName or WorkstationName contains v_Host_HostName\n\t\t\t\t\t\t\t| extend info = pack(\u0027TargetAccount\u0027, TargetAccount, \u0027SubjectAccount\u0027, SubjectAccount, \u0027Activity\u0027, Activity)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), Account_Aux_info = makeset(info) by Computer, TargetAccount\n\t\t\t\t\t\t\t| project Account_Aux_StartTime=min_TimeGenerated, Account_Aux_EndTime=max_TimeGenerated, Account_Host_UnstructuredName=Computer, Account_UnstructuredName=TargetAccount, Account_Aux_info\n\t\t\t\t\t\t\t| top 10 by Account_Aux_StartTime asc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetAccountChangesOnHost(toupper(\u0027\u003ChostName\u003E\u0027))",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/37fdc179-d35c-4dcd-b6ff-6cf02248d8f9",
            "name": "37fdc179-d35c-4dcd-b6ff-6cf02248d8f9",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Accounts which logged onto this host and their IPs",
              "queryTemplate": "let GetAccountsFromHost = (v_Host_HostName:string){\n\t\t\t\t\t\t\tSigninLogs\n\t\t\t\t\t\t\t| extend RemoteHost = tolower(tostring(DeviceDetail.displayName))\n\t\t\t\t\t\t\t| where RemoteHost == tolower(v_Host_HostName)\n\t\t\t\t\t\t\t| extend OS = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser), TrustType = tostring(DeviceDetail.trustType)\n\t\t\t\t\t\t\t| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\n\t\t\t\t\t\t\t| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\n\t\t\t\t\t\t\t| extend Latitude = tostring(LocationDetails.geoCoordinates.latitude), Longitude = tostring(LocationDetails.geoCoordinates.longitude)\n\t\t\t\t\t\t\t| extend info = pack(\u0027UserPrincipalName\u0027, UserPrincipalName, \u0027AppDisplayName\u0027, AppDisplayName, \u0027ClientAppUsed\u0027, ClientAppUsed, \u0027Browser\u0027, tostring(Browser), \u0027ResultType\u0027, ResultType, \u0027ResultDescription\u0027, ResultDescription, \u0027Location\u0027, Location, \u0027StatusCode\u0027, StatusCode, \u0027StatusDetails\u0027, StatusDetails)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), count(), Account_Aux_info = makeset(info) by RemoteHost , UserDisplayName, OS, IPAddress, State, City, Latitude, Longitude\n\t\t\t\t\t\t\t| extend IP_Aux_info = Account_Aux_info\n\t\t\t\t\t\t\t| project Account_Aux_StartTimeUtc = min_TimeGenerated, Account_Aux_EndTimeUtc = max_TimeGenerated, RemoteHost, UserDisplayName, OS, IPAddress, State, City, Latitude, Longitude, Account_Aux_info, IP_Aux_info\n\t\t\t\t\t\t\t| top 10 by Account_Aux_StartTimeUtc desc nulls last             \n\t\t\t\t\t\t\t| project-rename Account_UnstructuredName=UserDisplayName, Account_Host_UnstructuredName=RemoteHost, Account_Host_OSVersion=OS, IP_Address=IPAddress, IP_Location_State=State, IP_Location_City=City, IP_Location_Latitude=Latitude, IP_Location_Longitude=Longitude\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetAccountsFromHost(\u0027\u003ChostName\u003E\u0027)",
              "inputFields": [
                "hostName"
              ],
              "outputEntityTypes": [
                "Account",
                "IP"
              ],
              "dataSources": [
                "SigninLogs"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/b8de20fa-d96e-4fe0-84b3-8477ca29b04a",
            "name": "b8de20fa-d96e-4fe0-84b3-8477ca29b04a",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Accounts triggering Microsoft Defender Application Control",
              "queryTemplate": "let AppControlEvents=(v_Host_HostName:string, v_Host_NTDomain:string, v_Host_DnsDomain:string){\n\t\t\t\t\t\t\tlet p_FullDeviceName = iff(isnotempty(v_Host_DnsDomain), strcat(v_Host_HostName,\u0027.\u0027,v_Host_DnsDomain), strcat(v_Host_HostName,\u0027.\u0027,v_Host_NTDomain));\n\t\t\t\t\t\t\tlet AppControls=datatable(ActionType:string, Description:string, FriendlyActivityName:string)\n\t\t\t\t\t\t\t [\u0022AppControlAppInstallationAudited\u0022, \u0022Application control detected the installation of an untrusted app.\u0022,\u0022Untrusted app installed\u0022\n\t\t\t\t\t\t\t ,\u0022AppControlAppInstallationBlocked\u0022, \u0022Application control blocked the installation of an untrusted app.\u0022,  \u0022Untrusted app installation blocked\u0022\n\t\t\t\t\t\t\t ,\u0022AppControlCodeIntegrityDriverRevoked\u0022, \u0022Application control found a driver with a revoked certificate.\u0022, \u0022Driver with revoked certificate detected\u0022\n\t\t\t\t\t\t\t ,\u0022AppControlCodeIntegrityImageRevoked\u0022, \u0022Application control found an executable file with a revoked certificate.\u0022, \u0022Executable with revoked certificate detected\u0022\n\t\t\t\t\t\t\t ,\u0022AppControlExecutableAudited\u0022,\u0022Application control detected the use of an untrusted executable.\u0022,\u0022Untrusted executable used\u0022\n\t\t\t\t\t\t\t ,\u0022AppControlExecutableClocked\u0022,\u0022Application control blocked the use of an untrusted executable.\u0022,\u0022Untrusted executable blocked\u0022\n\t\t\t\t\t\t\t ,\u0022AppControlScriptAudited\u0022, \u0022Application control detected the use of an untrusted script.\u0022, \u0022Untrusted script detected\u0022\n\t\t\t\t\t\t\t ,\u0022AppControlScriptBlocked\u0022, \u0022Application control blocked the use of an untrusted script.\u0022, \u0022Untrusted script blocked\u0022 ];\n\t\t\t\t\t\t\tDeviceEvents\n\t\t\t\t\t\t\t| where ActionType in (AppControls)  \n\t\t\t\t\t\t\t| where DeviceName ==p_FullDeviceName\n\t\t\t\t\t\t\t| parse InitiatingProcessAccountUpn with Account_Name \u0027@\u0027 Account_UPNSuffix\n\t\t\t\t\t\t\t| project Account_Name, Account_UPNSuffix, Account_Sid=InitiatingProcessAccountSid\n\t\t\t\t\t\t\t| summarize Account_Aux_AppConCount=count() by Account_Name, Account_UPNSuffix, Account_Sid\n\t\t\t\t\t\t\t| top 10 by Account_Aux_AppConCount desc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tAppControlEvents(\u0027\u003ChostName\u003E\u0027,\u0027\u003CntDomain\u003E\u0027,\u0027\u003CdnsDomain\u003E\u0027)",
              "inputFields": [
                "hostName",
                "dnsDomain",
                "ntDomain"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "DeviceEvents"
              ],
              "inputEntityType": "Host"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/b66111f6-42ff-4f5a-8e3e-66ca1a71a758",
            "name": "b66111f6-42ff-4f5a-8e3e-66ca1a71a758",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "DefenderForIoT - Hosts communicating the most amount of data with this IP Address",
              "queryTemplate": "let ConnectionData_DefenderForIoT_GetIP2Host = (v_IP_Address:string) {\n\t\t\t\t\t\t\tlet connectionData = SecurityIoTRawEvent \n\t\t\t\t\t\t\t| extend ClientDeviceType = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ClientDeviceId = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ClientIpAddress = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ClientisExternal = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ServerDeviceType = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ServerDeviceId = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ServerIpAddress = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ServerisExternal = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ClientDeviceName = tostring(todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceName)\n\t\t\t\t\t\t\t| extend ServerDeviceName = tostring(todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceName)\n\t\t\t\t\t\t\t| extend Bandwidth = todynamic(extractjson(\u0022$Bandwidth\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend LastActivity = todynamic(extractjson(\u0022$LastActivity\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend Protocol = todynamic(extractjson(\u0022$Protocol\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerPort = todynamic(extractjson(\u0022$ServerPort\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerDevice = extractjson(\u0022$ServerDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend ClientDevice = extractjson(\u0022$ClientDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend SensorId = DeviceId\n\t\t\t\t\t\t\t| extend ClientDeviceGUID = strcat(SensorId, \u0022_\u0022, ClientDeviceId), ServerDeviceGUID = strcat(SensorId, \u0022_\u0022, ServerDeviceId);\n\t\t\t\t\t\t\tconnectionData\n\t\t\t\t\t\t\t| where ClientIpAddress == v_IP_Address or ServerIpAddress == v_IP_Address\n\t\t\t\t\t\t\t| extend Direction = iff(ClientIpAddress == v_IP_Address, \u0022Outbound\u0022, \u0022Inbound\u0022)\n\t\t\t\t\t\t\t| project DeviceGUID = iff(Direction == \u0022Outbound\u0022, ServerDeviceGUID, ClientDeviceGUID), \n\t\t\t\t\t\t\tDeviceType = iff(Direction == \u0022Outbound\u0022, ServerDeviceType, ClientDeviceType),\n\t\t\t\t\t\t\tDeviceIp = iff(Direction == \u0022Outbound\u0022, ServerIpAddress, ClientIpAddress),\n\t\t\t\t\t\t\tDeviceName = iff(Direction == \u0022Outbound\u0022, ServerDeviceName, ClientDeviceName),\n\t\t\t\t\t\t\tSensorId, LastActivity = todatetime(LastActivity), Bandwidth = todouble(Bandwidth), Protocol, ServerPort\n\t\t\t\t\t\t\t| summarize TotalBandwidth = sum(Bandwidth), LastActivity = max(LastActivity), Protocols = make_set(Protocol), ServerPorts = make_set(ServerPort) by DeviceGUID, DeviceName, IpAddress = tostring(DeviceIp), IoTDevice_DeviceType = tostring(DeviceType)\n\t\t\t\t\t\t\t| project-rename TotalBandwidth_MB = TotalBandwidth\n\t\t\t\t\t\t\t| extend TotalBandwidth_MB = floor(todecimal(TotalBandwidth_MB / 1000), 0.1)\n\t\t\t\t\t\t\t| project Host_HostName = DeviceName, Host_Aux_IpAddress = IpAddress, Host_Aux_Type = IoTDevice_DeviceType, Host_Aux_LastActivity = LastActivity, Host_Aux_Protocols = Protocols, Host_Aux_ServerPorts = ServerPorts, Host_Aux_TotalBandwidth_MB = TotalBandwidth_MB\n\t\t\t\t\t\t\t| top 10 by Host_Aux_TotalBandwidth_MB\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tConnectionData_DefenderForIoT_GetIP2Host(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SecurityIoTRawEvent"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/b7bd2812-f485-4430-bfac-6b0a1dd4c3f7",
            "name": "b7bd2812-f485-4430-bfac-6b0a1dd4c3f7",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "DefenderForIoT - IP Addresses communicating the most amount of data with this IP Address",
              "queryTemplate": "let ConnectionData_DefenderForIoT_GetIP2IP = (v_IP_Address:string) {\n\t\t\t\t\t\t\tlet connectionData = SecurityIoTRawEvent \n\t\t\t\t\t\t\t| extend ClientDeviceType = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ClientDeviceId = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ClientIpAddress = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ClientisExternal = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ServerDeviceType = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ServerDeviceId = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ServerIpAddress = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ServerisExternal = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend Bandwidth = todynamic(extractjson(\u0022$Bandwidth\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend LastActivity = todynamic(extractjson(\u0022$LastActivity\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend Protocol = todynamic(extractjson(\u0022$Protocol\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerPort = todynamic(extractjson(\u0022$ServerPort\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerDevice = extractjson(\u0022$ServerDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend ClientDevice = extractjson(\u0022$ClientDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend SensorId = DeviceId\n\t\t\t\t\t\t\t| extend ClientDeviceGUID = strcat(SensorId, \u0022_\u0022, ClientDeviceId), ServerDeviceGUID = strcat(SensorId, \u0022_\u0022, ServerDeviceId);\n\t\t\t\t\t\t\tconnectionData\n\t\t\t\t\t\t\t| where ClientIpAddress == v_IP_Address or ServerIpAddress == v_IP_Address\n\t\t\t\t\t\t\t| extend Direction = iff(ClientIpAddress == v_IP_Address, \u0022Outbound\u0022, \u0022Inbound\u0022)\n\t\t\t\t\t\t\t| project DeviceGUID = iff(Direction == \u0022Outbound\u0022, ServerDeviceGUID, ClientDeviceGUID), \n\t\t\t\t\t\t\tDeviceType = iff(Direction == \u0022Outbound\u0022, ServerDeviceType, ClientDeviceType),\n\t\t\t\t\t\t\tDeviceIp = iff(Direction == \u0022Outbound\u0022, ServerIpAddress, ClientIpAddress),\n\t\t\t\t\t\t\tDeviceIsExternal = iff(Direction == \u0022Outbound\u0022, ServerisExternal, ClientisExternal),\n\t\t\t\t\t\t\tSensorId, LastActivity = todatetime(LastActivity), Bandwidth = todouble(Bandwidth), Protocol, ServerPort, Direction\n\t\t\t\t\t\t\t| summarize TotalBandwidth = sum(Bandwidth), LastActivity = max(LastActivity), Protocols = make_set(Protocol), ServerPorts = make_set(ServerPort) by IoTDevice_DeviceId = DeviceGUID, IoTDevice_IpAddress = tostring(DeviceIp), IoTDevice_DeviceType = tostring(DeviceType), DeviceIsExternal = tostring(DeviceIsExternal)\n\t\t\t\t\t\t\t| project-rename TotalBandwidth_MB = TotalBandwidth\n\t\t\t\t\t\t\t| project IP_Address = IoTDevice_IpAddress, IP_Aux_DeviceType = IoTDevice_DeviceType, IP_Aux_LastActivity = LastActivity, IP_Aux_Protocols = Protocols, IP_Aux_ServerPorts = ServerPorts, IP_Aux_TotalBandwidth_MB = TotalBandwidth_MB, IP_Aux_IsExternal = DeviceIsExternal\n\t\t\t\t\t\t\t| extend IP_Aux_TotalBandwidth_MB = floor(todecimal(IP_Aux_TotalBandwidth_MB / 1000), 0.1)\n\t\t\t\t\t\t\t| top 10 by IP_Aux_TotalBandwidth_MB\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tConnectionData_DefenderForIoT_GetIP2IP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "SecurityIoTRawEvent"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/37ca3555-c135-4a73-a65e-9c1d00323f5d",
            "name": "37ca3555-c135-4a73-a65e-9c1d00323f5d",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "The least active accounts on Azure from this IP",
              "queryTemplate": "let AccountActivity_byIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tAzureActivity\n\t\t\t\t\t\t\t| where Caller != \u0027\u0027 and CallerIpAddress =~ v_IP_Address\n\t\t\t\t\t\t\t| summarize Account_Aux_StartTime = min(TimeGenerated), \n\t\t\t\t\t\t\t  Account_Aux_EndTime = max(TimeGenerated), \n\t\t\t\t\t\t\t  Count = count() by \n\t\t\t\t\t\t\t  Caller, TenantId\n\t\t\t\t\t\t\t| top 10 by Count asc nulls last \n\t\t\t\t\t\t\t| extend UPN = iff(Caller contains \u0027@\u0027, Caller, \u0027\u0027), Account_AadUserId = toguid(iff(Caller !contains \u0027@\u0027, Caller,\u0027\u0027))\n\t\t\t\t\t\t\t| extend Account_Name = split(UPN,\u0027@\u0027)[0] , Account_UPNSuffix = split(UPN,\u0027@\u0027)[1]\n\t\t\t\t\t\t\t| project Account_Name, Account_UPNSuffix, Account_AadUserId, Account_AadTenantId=TenantId, Account_Aux_StartTime , Account_Aux_EndTime \n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tAccountActivity_byIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "AzureActivity"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/97a1d515-abf2-4231-9a35-985f9de0bb91",
            "name": "97a1d515-abf2-4231-9a35-985f9de0bb91",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "The most active accounts on Azure from this IP",
              "queryTemplate": "let AccountActivity_byIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tAzureActivity\n\t\t\t\t\t\t\t| where Caller != \u0027\u0027 and CallerIpAddress =~ v_IP_Address\n\t\t\t\t\t\t\t| summarize Account_Aux_StartTime = min(TimeGenerated), \n\t\t\t\t\t\t\t  Account_Aux_EndTime = max(TimeGenerated), \n\t\t\t\t\t\t\t  Count = count() by \n\t\t\t\t\t\t\t  Caller, TenantId\n\t\t\t\t\t\t\t| top 10 by Count desc nulls last \n\t\t\t\t\t\t\t| extend UPN = iff(Caller contains \u0027@\u0027, Caller, \u0027\u0027), Account_AadUserId = toguid(iff(Caller !contains \u0027@\u0027, Caller,\u0027\u0027))\n\t\t\t\t\t\t\t| extend Account_Name = split(UPN,\u0027@\u0027)[0] , Account_UPNSuffix = split(UPN,\u0027@\u0027)[1]\n\t\t\t\t\t\t\t| project Account_Name, Account_UPNSuffix, Account_AadUserId, Account_AadTenantId=TenantId, Account_Aux_StartTime , Account_Aux_EndTime \n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tAccountActivity_byIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "AzureActivity"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/aa497951-c779-4ea2-be2a-127ea66c5fba",
            "name": "aa497951-c779-4ea2-be2a-127ea66c5fba",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Hosts receiving the least amount of data from this IP",
              "queryTemplate": "let HostsReceivingDatafromIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| parse Computer with HostName \u0027.\u0027 Host_DnsDomain\n\t\t\t\t\t\t\t| where SessionState == \u0027Disconnected\u0027 \n\t\t\t\t\t\t\t| where RemoteIP =~ v_IP_Address\n\t\t\t\t\t\t\t| extend Host_HostName = iff(Computer has \u0027.\u0027, HostName, Computer)\n\t\t\t\t\t\t\t| summarize Host_Aux_BytesReceived = sum(ReceivedBytes), Host_Aux_LocalIPs=make_set(LocalIP) by Host_HostName, Host_DnsDomain\n\t\t\t\t\t\t\t| top 10 by Host_Aux_BytesReceived asc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tHostsReceivingDatafromIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/73fb9b8d-fd13-4c43-8136-6d693cafaa23",
            "name": "73fb9b8d-fd13-4c43-8136-6d693cafaa23",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Hosts receiving the most amount of data from this IP",
              "queryTemplate": "let HostsReceivingDatafromIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| parse Computer with HostName \u0027.\u0027 Host_DnsDomain\n\t\t\t\t\t\t\t| where SessionState == \u0027Disconnected\u0027\n\t\t\t\t\t\t\t| where RemoteIP =~ v_IP_Address\n\t\t\t\t\t\t\t| extend Host_HostName = iff(Computer has \u0027.\u0027, HostName, Computer)\n\t\t\t\t\t\t\t| summarize Host_Aux_BytesReceived = sum(ReceivedBytes), Host_Aux_LocalIPs=make_set(LocalIP) by Host_HostName, Host_DnsDomain\n\t\t\t\t\t\t\t| top 10 by Host_Aux_BytesReceived desc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tHostsReceivingDatafromIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/ab597a67-352e-4914-b2e6-d64919a910a8",
            "name": "ab597a67-352e-4914-b2e6-d64919a910a8",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Hosts sending the least amount of data to this IP",
              "queryTemplate": "let HostsSendingDatatoIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| where SessionState == \u0027Disconnected\u0027 \n\t\t\t\t\t\t\t| where RemoteIP =~ v_IP_Address\n\t\t\t\t\t\t\t| summarize Host_Aux_BytesSent = sum(SentBytes) by Computer, LocalIP\n\t\t\t\t\t\t\t| top 10 by Host_Aux_BytesSent asc nulls last \n\t\t\t\t\t\t\t| project-rename Host_UnstructuredName=Computer, Host_Aux_LocalIP=LocalIP\n\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\tHostsSendingDatatoIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/5b57680b-d60a-42a5-9cd5-17e499834f8e",
            "name": "5b57680b-d60a-42a5-9cd5-17e499834f8e",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Hosts sending the most amount of data to this IP",
              "queryTemplate": "let HostsSendingDatatoIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| where SessionState == \u0027Disconnected\u0027 \n\t\t\t\t\t\t\t| where RemoteIP =~ v_IP_Address\n\t\t\t\t\t\t\t| summarize Host_Aux_BytesSent = sum(SentBytes) by Computer, LocalIP\n\t\t\t\t\t\t\t| top 10 by Host_Aux_BytesSent desc nulls last \n\t\t\t\t\t\t\t| project-rename Host_UnstructuredName=Computer, Host_Aux_LocalIP=LocalIP \n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tHostsSendingDatatoIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/980762f8-014e-4439-8840-5f0a90285dce",
            "name": "980762f8-014e-4439-8840-5f0a90285dce",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Destination IPs with the greatest number of dropped sessions",
              "queryTemplate": "let MostDroppedDestIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tWindowsFirewall\n\t\t\t\t\t\t\t| where FirewallAction == \u0027DROP\u0027\n\t\t\t\t\t\t\t  and SourceIP =~ v_IP_Address\n\t\t\t\t\t\t\t| summarize DropCount = count(), Ports = makeset(DestinationPort) by DestinationIP\n\t\t\t\t\t\t\t| sort by array_length(Ports), DropCount\n\t\t\t\t\t\t\t| serialize rn=row_number()\n\t\t\t\t\t\t\t| top 10 by rn asc nulls last\n\t\t\t\t\t\t\t| project-rename IP_Address = DestinationIP, IP_Aux_DropCount = DropCount, IP_Aux_DroppedSessionPorts = Ports\n\t\t\t\t\t\t\t| project-away rn\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tMostDroppedDestIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "WindowsFirewall"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/935ab312-cb52-42a5-b296-548f21786102",
            "name": "935ab312-cb52-42a5-b296-548f21786102",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Source IPs with the greatest number of dropped sessions",
              "queryTemplate": "let MostDroppedSourceIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tWindowsFirewall\n\t\t\t\t\t\t\t| where FirewallAction == \u0027DROP\u0027\n\t\t\t\t\t\t\t  and DestinationIP =~ v_IP_Address\n\t\t\t\t\t\t\t| summarize IP_Aux_DropCount = count(), IP_Aux_DestPorts = makeset(DestinationPort) by SourceIP\n\t\t\t\t\t\t\t| sort by IP_Aux_DropCount\n\t\t\t\t\t\t\t| serialize rn=row_number()\n\t\t\t\t\t\t\t| top 10 by rn asc nulls last\n\t\t\t\t\t\t\t| project IP_Address = SourceIP, IP_Aux_DropCount, IP_Aux_DestPorts\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tMostDroppedSourceIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "WindowsFirewall"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/588f5d9f-3380-4eff-9983-e61d62fdd172",
            "name": "588f5d9f-3380-4eff-9983-e61d62fdd172",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Office activity accounts with this IP",
              "queryTemplate": "let GetAllAccountByIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tOfficeActivity \n\t\t\t\t\t\t\t| where ClientIP =~ v_IP_Address\n\t\t\t\t\t\t\t| extend info = pack(\u0027ClientIP\u0027, ClientIP, \u0027UserType\u0027, UserType, \u0027Operation\u0027, Operation, \u0027OfficeWorkload\u0027, OfficeWorkload, \u0027ResultStatus\u0027, ResultStatus)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), Account_Aux_Count=count(), Account_Aux_info = makeset(info) by UserId\n\t\t\t\t\t\t\t| project Account_Aux_StartTime = min_TimeGenerated, Account_Aux_EndTime = max_TimeGenerated, UserId, Account_Aux_Count, Account_Aux_info\n\t\t\t\t\t\t\t| project-rename Account_UnstructuredName=UserId\n\t\t\t\t\t\t\t| top 10 by Account_Aux_Count desc nulls last\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetAllAccountByIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "OfficeActivity"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/801bacb0-612a-4195-a84f-7939cca63b92",
            "name": "801bacb0-612a-4195-a84f-7939cca63b92",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent client IPs with DNS name lookup query for this IP",
              "queryTemplate": "let GetAllIPByClientIP = (v_IP_Address:string){\n\t\t\t\t\t\t\t    _Im_Dns(response_has_ipv4=v_IP_Address)\n\t\t\t\t\t\t\t    | extend IP_Address=SrcIpAddr\n\t\t\t\t\t\t\t    | summarize IP_Aux_StartTime=min(TimeGenerated), IP_Aux_EndTime=max(TimeGenerated), IP_Aux_DomainNames=make_set(DnsQuery), IP_Aux_Count= count() by IP_Address\n\t\t\t\t\t\t\t    | top 10 by IP_Aux_Count asc nulls last\n\t\t\t\t\t\t\t    };\n\t\t\t\t\t\t\t  GetAllIPByClientIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "DnsEvents"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/188ff904-e3c3-4253-9326-e0190b4b7a01",
            "name": "188ff904-e3c3-4253-9326-e0190b4b7a01",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent inbound WireData connections",
              "queryTemplate": "let GetWireDataInboundWithIp = (v_IPAddress:string){\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| where Direction == \u0027Inbound\u0027 \n\t\t\t\t\t\t\t| where RemoteIP has v_IPAddress\n\t\t\t\t\t\t\t| extend info = pack(\u0027LocalPortNumber\u0027, LocalPortNumber, \u0027RemoteIP\u0027, RemoteIP, \u0027Direction\u0027, Direction, \u0027ApplicationProtocol\u0027, ApplicationProtocol)\n\t\t\t\t\t\t\t| summarize Process_Aux_EarliestSessionStartTime=min(SessionStartTime), count(), IP_Aux_info = makeset(info) by Computer, ProcessName , LocalIP, ProcessID\n\t\t\t\t\t\t\t| extend Process_Aux_info = IP_Aux_info, Host_Aux_info = IP_Aux_info\n\t\t\t\t\t\t\t| top 10 by count_ asc\n\t\t\t\t\t\t\t| project Process_Aux_EarliestSessionStartTime, Computer, ProcessName , LocalIP, Process_ProcessId=tostring(ProcessID), IP_Aux_info, Process_Aux_info, Host_Aux_info\n\t\t\t\t\t\t\t| project-rename IP_Address=LocalIP, Process_ImageFile_FullPath=ProcessName, Host_UnstructuredName=Computer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetWireDataInboundWithIp(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "IP",
                "Process",
                "Host"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/897267e4-68e1-4827-b318-7fb055b52fc0",
            "name": "897267e4-68e1-4827-b318-7fb055b52fc0",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent outbound WireData connections",
              "queryTemplate": "let GetWireDataOutboundWithIp = (v_IP_Address:string){\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| where Direction == \u0027Outbound\u0027\n\t\t\t\t\t\t\t| where LocalIP has v_IP_Address\n\t\t\t\t\t\t\t| extend info = pack(\u0027LocalIP\u0027, LocalIP, \u0027LocalPortNumber\u0027, LocalPortNumber, \u0027Direction\u0027, Direction, \u0027ApplicationProtocol\u0027, ApplicationProtocol)\n\t\t\t\t\t\t\t| summarize count(), IP_Aux_info = makeset(info) by Computer, ProcessName, RemoteIP, ProcessID\n\t\t\t\t\t\t\t| extend Process_Aux_info = IP_Aux_info, Host_Aux_info = IP_Aux_info\n\t\t\t\t\t\t\t| top 10 by count_ asc\n\t\t\t\t\t\t\t| project Computer, ProcessName, RemoteIP, Process_ProcessId=tostring(ProcessID), IP_Aux_info, Process_Aux_info, Host_Aux_info\n\t\t\t\t\t\t\t| project-rename IP_Address=RemoteIP, Process_ImageFile_FullPath=ProcessName, Host_UnstructuredName=Computer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetWireDataOutboundWithIp(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "IP",
                "Process",
                "Host"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/fdb3e714-c036-4708-a0eb-6ae10a1912a1",
            "name": "fdb3e714-c036-4708-a0eb-6ae10a1912a1",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent accounts associated with this IP",
              "queryTemplate": "let GetLeastPrevUsersbyIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tSigninLogs\n\t\t\t\t\t\t\t| where IPAddress contains v_IP_Address\n\t\t\t\t\t\t\t| extend RemoteHost = tolower(tostring(parse_json(DeviceDetail[\u0027displayName\u0027])))\n\t\t\t\t\t\t\t| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\n\t\t\t\t\t\t\t| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\n\t\t\t\t\t\t\t| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\n\t\t\t\t\t\t\t| extend info = pack(\u0027AppDisplayName\u0027, AppDisplayName, \u0027ClientAppUsed\u0027, ClientAppUsed, \u0027Browser\u0027, tostring(Browser), \u0027IPAddress\u0027, IPAddress, \u0027ResultType\u0027, ResultType, \u0027ResultDescription\u0027, ResultDescription, \u0027Location\u0027, Location, \u0027State\u0027, State, \u0027City\u0027, City, \u0027StatusCode\u0027, StatusCode, \u0027StatusDetails\u0027, StatusDetails)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), count(), Account_Aux_info = makeset(info) by RemoteHost , UserDisplayName, tostring(OS), UserPrincipalName, AADTenantId, UserId\n\t\t\t\t\t\t\t| top 10 by count_ asc nulls last \n\t\t\t\t\t\t\t| project Account_Aux_StartTime = min_TimeGenerated, Account_Aux_EndTime = max_TimeGenerated, RemoteHost, UserDisplayName, OS, UserPrincipalName, AADTenantId, Account_AadUserId=toguid(UserId), Account_Aux_info\n\t\t\t\t\t\t\t| project-rename Account_UnstructuredName=UserPrincipalName, Account_DisplayName=UserDisplayName, Account_AadTenantId=AADTenantId , Account_Host_UnstructuredName=RemoteHost, Account_Host_OSVersion=OS };\n\t\t\t\t\t\t\tGetLeastPrevUsersbyIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "SigninLogs"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/0cb64e03-8534-47b6-9094-7de2d018fd7a",
            "name": "0cb64e03-8534-47b6-9094-7de2d018fd7a",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Most prevalent client IPs with DNS name lookup query for this IP",
              "queryTemplate": "let GetAllIPByClientIP = (v_IP_Address:string){\n\t\t\t\t\t\t\t    _Im_Dns(response_has_ipv4=v_IP_Address)\n\t\t\t\t\t\t\t    | extend IP_Address=SrcIpAddr\n\t\t\t\t\t\t\t    | summarize IP_Aux_StartTime=min(TimeGenerated), IP_Aux_EndTime=max(TimeGenerated), IP_Aux_DomainNames=make_set(DnsQuery), IP_Aux_Count= count() by IP_Address\n\t\t\t\t\t\t\t    | top 10 by IP_Aux_Count desc nulls last\n\t\t\t\t\t\t\t    };\n\t\t\t\t\t\t\t  GetAllIPByClientIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "DnsEvents"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/41146c58-ffc6-47ff-975e-f85013629dfd",
            "name": "41146c58-ffc6-47ff-975e-f85013629dfd",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Most prevalent Linux hosts with this IP",
              "queryTemplate": "let GetSysLogEventsWithIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tSyslog\n\t\t\t\t\t\t\t| where HostIP has v_IP_Address\n\t\t\t\t\t\t\t| extend info = pack(\u0027HostIP\u0027, HostIP, \u0027ProcessName\u0027, ProcessName, \u0027SeverityLevel\u0027, SeverityLevel)\n\t\t\t\t\t\t\t| summarize min(EventTime), max(EventTime), count(), Host_Aux_info = makeset(info) by Computer\n\t\t\t\t\t\t\t| top 10 by count_ desc nulls last \n\t\t\t\t\t\t\t| project Host_Aux_StartTime = min_EventTime, Host_Aux_EndTime = max_EventTime, Computer, Host_Aux_info\n\t\t\t\t\t\t\t| project-rename Host_UnstructuredName=Computer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetSysLogEventsWithIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "Syslog"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/bc6c7cc9-da18-4afd-8fda-d201f13b54a4",
            "name": "bc6c7cc9-da18-4afd-8fda-d201f13b54a4",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Most prevalent accounts associated with this IP",
              "queryTemplate": "let GetMostPrevUsersbyIP = (v_IP_Address:string){\n\t\t\t\t\t\t\tSigninLogs\n\t\t\t\t\t\t\t| where IPAddress contains v_IP_Address\n\t\t\t\t\t\t\t| extend RemoteHost = tolower(tostring(parse_json(DeviceDetail[\u0027displayName\u0027])))\n\t\t\t\t\t\t\t| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\n\t\t\t\t\t\t\t| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\n\t\t\t\t\t\t\t| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\n\t\t\t\t\t\t\t| extend info = pack(\u0027AppDisplayName\u0027, AppDisplayName, \u0027ClientAppUsed\u0027, ClientAppUsed, \u0027Browser\u0027, tostring(Browser), \u0027IPAddress\u0027, IPAddress, \u0027ResultType\u0027, ResultType, \u0027ResultDescription\u0027, ResultDescription, \u0027Location\u0027, Location, \u0027State\u0027, State, \u0027City\u0027, City, \u0027StatusCode\u0027, StatusCode, \u0027StatusDetails\u0027, StatusDetails)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), count(), Account_Aux_info = makeset(info) by RemoteHost , UserDisplayName, tostring(OS), UserPrincipalName, AADTenantId, UserId\n\t\t\t\t\t\t\t| top 10 by count_ desc nulls last \n\t\t\t\t\t\t\t| project Account_Aux_StartTimeUtc = min_TimeGenerated, Account_Aux_EndTimeUtc = max_TimeGenerated, RemoteHost, UserDisplayName, OS, UserPrincipalName, AADTenantId, Account_Aux_info, Account_AadUserId=toguid(UserId)\n\t\t\t\t\t\t\t| project-rename Account_UnstructuredName=UserPrincipalName, Account_DisplayName=UserDisplayName, Account_AadTenantId=AADTenantId, Account_Host_UnstructuredName=RemoteHost, Account_Host_OSVersion=OS\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetMostPrevUsersbyIP(\u0027\u003Caddress\u003E\u0027)",
              "inputFields": [
                "address"
              ],
              "outputEntityTypes": [
                "Account"
              ],
              "dataSources": [
                "SigninLogs"
              ],
              "inputEntityType": "IP"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/f87b2afb-068f-4734-88a0-94560309f9c7",
            "name": "f87b2afb-068f-4734-88a0-94560309f9c7",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Processes blocked from loading non-Microsoft-signed binaries",
              "queryTemplate": "let BlockedUnsignedFile = (v_Process_ProcessId:int, v_Process_ImageFile:string){\n\t\t\t\t\t\t\tlet p_Process_ImageFile_Name = tostring(parse_json(v_Process_ImageFile)[\u0027Name\u0027]);\n\t\t\t\t\t\t\tDeviceEvents\n\t\t\t\t\t\t\t| where ActionType == \u0022ExploitGuardNonMicrosoftSignedBlocked\u0022 and FileName !hassuffix \u0022.ni.dll\u0022\n\t\t\t\t\t\t\t| where InitiatingProcessId == v_Process_ProcessId and InitiatingProcessFileName =~ p_Process_ImageFile_Name\n\t\t\t\t\t\t\t| summarize Count=count() by FileName\n\t\t\t\t\t\t\t| top 15 by Count desc\n\t\t\t\t\t\t\t| project File_Name=FileName\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tBlockedUnsignedFile(\u0027\u003Cv_Process_ProcessId\u003E\u0027,\u0027\u003Cv_Process_ImageFile\u003E\u0027)",
              "inputFields": [
                "processId",
                "ImageFile"
              ],
              "outputEntityTypes": [
                "File"
              ],
              "dataSources": [
                "DeviceEvents"
              ],
              "inputEntityType": "Process"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/77f9839a-1c03-49e2-803e-72b97042fc05",
            "name": "77f9839a-1c03-49e2-803e-72b97042fc05",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent inbound WireData connections",
              "queryTemplate": "let GetWireDataInboundWithProcess = (v_Process_CommandLine:string){\n\t\t\t\t\t\t\tlet tempFullPath = tostring(split(v_Process_CommandLine, \u0027 \u0027)[0]);\n\t\t\t\t\t\t\tlet tempFullPath2 = iff(tempFullPath startswith \u0027\u0022\u0027, substring(tempFullPath, 1, strlen(tempFullPath)-2), tempFullPath);\n\t\t\t\t\t\t\tlet v_Process_ImageFile_FullPath = iff(tempFullPath2 startswith \u0027\\\\??\\\\\u0027, substring(tempFullPath2, 4, strlen(tempFullPath2)-1), tempFullPath2);\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| where Direction == \u0027Inbound\u0027\n\t\t\t\t\t\t\t| where ProcessName has v_Process_ImageFile_FullPath\n\t\t\t\t\t\t\t| extend info = pack(\u0027ProcessName\u0027, ProcessName, \u0027LocalPortNumber\u0027, LocalPortNumber, \u0027RemoteIP\u0027, RemoteIP, \u0027Direction\u0027, Direction, \u0027ApplicationProtocol\u0027, ApplicationProtocol)\n\t\t\t\t\t\t\t| summarize min(SessionStartTime), count(), IP_Aux_info = makeset(info) by Computer, LocalIP\n\t\t\t\t\t\t\t| extend Host_Aux_info = IP_Aux_info\n\t\t\t\t\t\t\t| top 10 by count_ asc\n\t\t\t\t\t\t\t| project min_SessionStartTime, Computer, LocalIP, IP_Aux_info, Host_Aux_info\n\t\t\t\t\t\t\t| project-rename IP_Address=LocalIP, Host_UnstructuredName=Computer, Host_Aux_min_SessionStartTime=min_SessionStartTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetWireDataInboundWithProcess(\u0027\u003CcommandLine\u003E\u0027)",
              "inputFields": [
                "commandLine"
              ],
              "outputEntityTypes": [
                "IP",
                "Host"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "Process"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/def383f2-dff3-4f5b-9416-aca8dca39812",
            "name": "def383f2-dff3-4f5b-9416-aca8dca39812",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent Linux hosts with this process",
              "queryTemplate": "let GetSysLogEventsWithProcess = (v_Process_CommandLine:string){\n\t\t\t\t\t\t\tlet tempFullPath = tostring(split(v_Process_CommandLine, \u0027 \u0027)[0]);\n\t\t\t\t\t\t\tlet tempFullPath2 = iff(tempFullPath startswith \u0027\u0022\u0027, substring(tempFullPath, 1, strlen(tempFullPath)-2), tempFullPath);\n\t\t\t\t\t\t\tlet v_Process_ImageFile_FullPath = iff(tempFullPath2 startswith \u0027\\\\??\\\\\u0027, substring(tempFullPath2, 4, strlen(tempFullPath2)-1), tempFullPath2);\n\t\t\t\t\t\t\tSyslog\n\t\t\t\t\t\t\t| where ProcessName has v_Process_ImageFile_FullPath\n\t\t\t\t\t\t\t| extend info = pack(\u0027HostName\u0027, HostName, \u0027HostIP\u0027, HostIP, \u0027ProcessName\u0027, ProcessName, \u0027SyslogMessage\u0027, SyslogMessage)\n\t\t\t\t\t\t\t| summarize min(EventTime), max(EventTime), count(), Host_Aux_info = makeset(info) by Computer\n\t\t\t\t\t\t\t| top 10 by count_ asc nulls last \n\t\t\t\t\t\t\t| project Host_Aux_StartTime=min_EventTime, Host_Aux_EndTime=max_EventTime, Computer, Host_Aux_info\n\t\t\t\t\t\t\t| project-rename Host_UnstructuredName=Computer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetSysLogEventsWithProcess(\u0027\u003CcommandLine\u003E\u0027)",
              "inputFields": [
                "commandLine"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "Syslog"
              ],
              "inputEntityType": "Process"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/39df618a-684d-402d-b096-6f505a8e741e",
            "name": "39df618a-684d-402d-b096-6f505a8e741e",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Least prevalent outbound WireData connections",
              "queryTemplate": "let GetWireDataOutboundWithProcess = (v_Process_CommandLine:string){\n\t\t\t\t\t\t\tlet tempFullPath = tostring(split(v_Process_CommandLine, \u0027 \u0027)[0]);\n\t\t\t\t\t\t\tlet tempFullPath2 = iff(tempFullPath startswith \u0027\u0022\u0027, substring(tempFullPath, 1, strlen(tempFullPath)-2), tempFullPath);\n\t\t\t\t\t\t\tlet v_Process_ImageFile_FullPath = iff(tempFullPath2 startswith \u0027\\\\??\\\\\u0027, substring(tempFullPath2, 4, strlen(tempFullPath2)-1), tempFullPath2);\n\t\t\t\t\t\t\tWireData\n\t\t\t\t\t\t\t| where Direction == \u0027Outbound\u0027\n\t\t\t\t\t\t\t| where ProcessName has v_Process_ImageFile_FullPath\n\t\t\t\t\t\t\t| extend info = pack(\u0027ProcessName\u0027, ProcessName, \u0027LocalIP\u0027, LocalIP, \u0027LocalPortNumber\u0027, LocalPortNumber, \u0027Direction\u0027, Direction, \u0027ApplicationProtocol\u0027, ApplicationProtocol)\n\t\t\t\t\t\t\t| summarize min(SessionStartTime), count(), IP_Aux_info = makeset(info) by Computer, RemoteIP\n\t\t\t\t\t\t\t| extend Host_Aux_info = IP_Aux_info\n\t\t\t\t\t\t\t| top 10 by count_ asc\n\t\t\t\t\t\t\t| project min_SessionStartTime, Computer, RemoteIP, IP_Aux_info, Host_Aux_info\n\t\t\t\t\t\t\t| project-rename IP_Address=RemoteIP, Host_UnstructuredName=Computer, Host_Aux_min_SessionStartTime=min_SessionStartTime\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetWireDataOutboundWithProcess(\u0027\u003CcommandLine\u003E\u0027)",
              "inputFields": [
                "commandLine"
              ],
              "outputEntityTypes": [
                "IP",
                "Host"
              ],
              "dataSources": [
                "WireData"
              ],
              "inputEntityType": "Process"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/e32a48a9-bf82-4cec-ba94-9ec406a69ef8",
            "name": "e32a48a9-bf82-4cec-ba94-9ec406a69ef8",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "10 most recent VM configuration changes based on process",
              "queryTemplate": "let exclude = dynamic([\u0027:\\\\Windows\\\\System32\\\\svchost.exe\u0027, \u0027:\\\\Windows\\\\System32\\\\sppsvc.exe\u0027, \u0027:\\\\Windows\\\\system32\\\\wbem\\\\WmiApSrv.exe\u0027, \u0027:\\\\Windows\\\\System32\\\\conhost.exe\u0027, \u0027:\\\\Windows\\\\System32\\\\wuauclt.exe\u0027, \u0027:\\\\Windows\\\\SoftwareDistribution\\\\Download\\\\Install\\\\\u0027, \u0027:\\\\WindowsAzure\\\\GuestAgent_\u0027, \u0027:\\\\WindowsAzure\\\\WindowsAzureNetAgent_\u0027, \n\t\t\t\t\t\t\t\u0027:\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\platform\\\\\u0027, \u0027:\\\\Windows\\\\System32\\\\taskhostw.exe\u0027, \u0027\\\\MpSigStub.exe\u0027,\u0027:\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\MonitoringHost.exe\u0027, \u0027:\\\\Windows\\\\servicing\\\\trustedinstaller.exe\u0027, \u0027:\\\\Windows\\\\System32\\\\WerFault.exe\u0027, \u0027:\\\\Windows\\\\CCM\\\\CcmExec.exe\u0027\n\t\t\t\t\t\t\t\u0022HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\\u0022]);\n\t\t\t\t\t\t\tlet ConfigChange = (v_Process_ImageFile:string ) \n\t\t\t\t\t\t\t{let Process_ImageFile_Name = tostring(parse_json(v_Process_ImageFile)[\u0027Name\u0027]);\n\t\t\t\t\t\t\tConfigurationChange\n\t\t\t\t\t\t\t| where ConfigChangeType != \u0022Software\u0022\n\t\t\t\t\t\t\t| where isnotempty(ValueData) or isnotempty(SvcPath) or isnotempty(FileSystemPath)\n\t\t\t\t\t\t\t| extend Process = case(\n\t\t\t\t\t\t\tConfigChangeType == \u0022Registry\u0022 and (ValueData has \u0022.exe\u0022 or ValueData has \u0022.bat\u0022 or ValueData has \u0022.cmd\u0022), ValueData,\n\t\t\t\t\t\t\tConfigChangeType == \u0022WindowsServices\u0022, SvcPath,\n\t\t\t\t\t\t\tConfigChangeType == \u0022Files\u0022 and ((FileSystemPath has \u0022.exe\u0022 or FileSystemPath has \u0022.bat\u0022 or FileSystemPath has \u0022.cmd\u0022) or FileSystemPath has \u0027/\u0027), FileSystemPath,\n\t\t\t\t\t\t\tConfigChangeType == \u0022Daemons\u0022, SvcPath,\n\t\t\t\t\t\t\t\u0022ProcessNotAvailable\u0022\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t| where not(Process has_any (exclude)) and (Process !has \u0027:\\\\Windows\\\\Microsoft.NET\\\\Framework\u0027 and not(Process has_any (\u0027\\\\ngentask.exe\u0027, \u0027\\\\ngen.exe\u0027)))\n\t\t\t\t\t\t\t| where iff(Process_ImageFile_Name == \u0022\u0022, false, Process has Process_ImageFile_Name) \n\t\t\t\t\t\t\t| parse FileContentChecksum with * \u0022Hash=\u0022 Hash \u0022 \u0022 *\n\t\t\t\t\t\t\t| parse PreviousFileContentChecksum with * \u0022Hash=\u0022 Hash \u0022 \u0022 *\n\t\t\t\t\t\t\t| extend Changes = case( \n\t\t\t\t\t\t\t   ConfigChangeType == \u0022Registry\u0022 and ChangeCategory == \u0022Modified\u0022, \n\t\t\t\t\t\t\t       pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022RegistryKey\u0022 , RegistryKey, \u0022ValueName\u0022, ValueName, \u0022ValueData\u0022, ValueData, \u0022PreviousValueData\u0022, PreviousValueData),\n\t\t\t\t\t\t\t  ConfigChangeType == \u0022Registry\u0022 and ChangeCategory == \u0022Added\u0022, \n\t\t\t\t\t\t\t       pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022RegistryKey\u0022 , RegistryKey, \u0022ValueName\u0022, ValueName, \u0022ValueData\u0022, ValueData),\n\t\t\t\t\t\t\tConfigChangeType == \u0022Registry\u0022 and ChangeCategory == \u0022Removed\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022RegistryKey\u0022 , RegistryKey, \u0022ValueName\u0022, ValueName, \u0022PreviousValueData\u0022, PreviousValueData),\n\t\t\t\t\t\t\tConfigChangeType in (\u0022WindowsServices\u0022,\u0022Daemons\u0022) and ChangeCategory == \u0022Modified\u0022 and SvcChangeType == \u0022Path\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022SvcChangeType\u0022, SvcChangeType, \u0022SvcName\u0022, SvcName, \u0022SvcPath\u0022, SvcPath, \u0022SvcPreviousPath\u0022, SvcPreviousPath),\n\t\t\t\t\t\t\tConfigChangeType in (\u0022WindowsServices\u0022,\u0022Daemons\u0022) and ChangeCategory == \u0022Modified\u0022 and SvcChangeType == \u0022Runlevels\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022SvcChangeType\u0022, SvcChangeType, \u0022SvcName\u0022, SvcName, \u0022SvcPath\u0022, SvcPath, \u0022SvcRunlevels\u0022, SvcRunlevels,\u0022SvcPreviousRunlevels\u0022, SvcPreviousRunlevels),\n\t\t\t\t\t\t\tConfigChangeType in (\u0022WindowsServices\u0022,\u0022Daemons\u0022) and ChangeCategory == \u0022Modified\u0022 and SvcChangeType == \u0022StartupType\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022SvcChangeType\u0022, SvcChangeType, \u0022SvcName\u0022, SvcName, \u0022SvcPath\u0022, SvcPath, \u0022SvcStartupType\u0022, SvcStartupType, \u0022SvcPreviousStartupType\u0022, SvcPreviousStartupType),\n\t\t\t\t\t\t\tConfigChangeType in (\u0022WindowsServices\u0022,\u0022Daemons\u0022) and ChangeCategory == \u0022Modified\u0022 and SvcChangeType == \u0022State\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022SvcChangeType\u0022, SvcChangeType, \u0022SvcName\u0022, SvcName, \u0022SvcPath\u0022, SvcPath, \u0022SvcState\u0022, SvcState, \u0022SvcPreviousState\u0022, SvcPreviousState),\n\t\t\t\t\t\t\tConfigChangeType in (\u0022WindowsServices\u0022,\u0022Daemons\u0022) and ChangeCategory == \u0022Modified\u0022 and SvcChangeType == \u0022State StartupType\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022SvcChangeType\u0022, SvcChangeType, \u0022SvcName\u0022, SvcName, \u0022SvcPath\u0022, SvcPath, \u0022SvcState\u0022, SvcState, \u0022SvcPreviousState\u0022, SvcPreviousState, \u0022SvcStartupType\u0022, SvcStartupType, \u0022SvcPreviousStartupType\u0022, SvcPreviousStartupType),\n\t\t\t\t\t\t\tConfigChangeType in (\u0022WindowsServices\u0022,\u0022Daemons\u0022) and ChangeCategory == \u0022Added\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022SvcName\u0022, SvcName, \u0022SvcPath\u0022, SvcPath, \u0022SvcState\u0022, SvcState, \u0022SvcStartupType\u0022, SvcStartupType),\n\t\t\t\t\t\t\tConfigChangeType in (\u0022WindowsServices\u0022,\u0022Daemons\u0022) and ChangeCategory == \u0022Removed\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022SvcName\u0022, SvcName, \u0022SvcPreviousPath\u0022, SvcPreviousPath, \u0022SvcPreviousState\u0022, SvcPreviousState, \u0022SvcPreviousStartupType\u0022, SvcPreviousStartupType),\n\t\t\t\t\t\t\tConfigChangeType == \u0022Files\u0022 and ChangeCategory == \u0022Added\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022FileSystemPath\u0022, FileSystemPath, \u0022DateCreated\u0022, DateCreated, \u0022DateModified\u0022, DateModified, \u0022Hash\u0022, Hash),\n\t\t\t\t\t\t\tConfigChangeType == \u0022Files\u0022 and ChangeCategory == \u0022Removed\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022FileSystemPath\u0022, FileSystemPath, \u0022DateCreated\u0022, PreviousDateCreated, \u0022DateModified\u0022, PreviousDateModified, \u0022Hash\u0022, Hash),\n\t\t\t\t\t\t\tConfigChangeType == \u0022Files\u0022 and ChangeCategory == \u0022Modified\u0022, \n\t\t\t\t\t\t\t  pack(\u0022ConfigChangeType\u0022, ConfigChangeType, \u0022ChangeCategory\u0022, ChangeCategory, \u0022FileSystemPath\u0022, FileSystemPath, \u0022FieldsChanged\u0022, FieldsChanged, \u0022DateCreated\u0022, PreviousDateCreated, \u0022DateModified\u0022, PreviousDateModified, \u0022Hash\u0022, Hash),\n\t\t\t\t\t\t\t\u0022\u0022)\n\t\t\t\t\t\t\t| extend Host_HostName = tostring(split(Computer, \u0022.\u0022)[0]), Host_DnsDomain = strcat_array(array_slice(split(Computer,\u0027.\u0027),1,256),\u0027.\u0027)\n\t\t\t\t\t\t\t| summarize Host_Aux_StartTimeUtc = min(TimeGenerated), Host_Aux_EndTimeUtc = max(TimeGenerated), Host_Aux_ConfigChangeDetail = makeset(Changes) by Host_HostName, Host_DnsDomain\n\t\t\t\t\t\t\t| top 10 by Host_Aux_StartTimeUtc desc};\n\t\t\t\t\t\t\tConfigChange(\u0027\u003CImageFile\u003E\u0027)",
              "inputFields": [
                "ImageFile"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "ConfigurationChange"
              ],
              "inputEntityType": "Process"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/0880a6d7-d914-40f6-91bc-150de4810e4e",
            "name": "0880a6d7-d914-40f6-91bc-150de4810e4e",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Windows hosts with this process",
              "queryTemplate": "let GetHostsWithProcess = (v_Process_CommandLine:string){\n\t\t\t\t\t\t\tlet tempFullPath = tostring(split(v_Process_CommandLine, \u0027 \u0027)[0]);\n\t\t\t\t\t\t\tlet tempFullPath2 = iff(tempFullPath startswith \u0027\u0022\u0027, substring(tempFullPath, 1, strlen(tempFullPath)-2), tempFullPath);\n\t\t\t\t\t\t\tlet v_Process_ImageFile_FullPath = iff(tempFullPath2 startswith \u0027\\\\??\\\\\u0027, substring(tempFullPath2, 4, strlen(tempFullPath2)-1), tempFullPath2);\n\t\t\t\t\t\t\tSecurityEvent\n\t\t\t\t\t\t\t| where EventID == 4688\n\t\t\t\t\t\t\t| where NewProcessName has v_Process_ImageFile_FullPath\n\t\t\t\t\t\t\t| extend info = pack(\u0027Account\u0027, Account, \u0027NewProcessName\u0027, NewProcessName, \u0027CommandLine\u0027, CommandLine)\n\t\t\t\t\t\t\t| summarize min(TimeGenerated), max(TimeGenerated), Host_Aux_info = makeset(info) by Computer, SourceComputerId, _ResourceId\n\t\t\t\t\t\t\t| project min_TimeGenerated, max_TimeGenerated, Computer, Host_Aux_info, Host_OMSAgentID=SourceComputerId\n\t\t\t\t\t\t\t| top 10 by min_TimeGenerated asc nulls last\n\t\t\t\t\t\t\t| project-rename Host_UnstructuredName=Computer, Host_Aux_StartTime=min_TimeGenerated, Host_Aux_EndTime=max_TimeGenerated\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tGetHostsWithProcess(\u0027\u003CcommandLine\u003E\u0027)",
              "inputFields": [
                "commandLine"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SecurityEvent"
              ],
              "inputEntityType": "Process"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/c07c8936-d2a7-41a7-97d2-d3afdf267da4",
            "name": "c07c8936-d2a7-41a7-97d2-d3afdf267da4",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "DefenderForIoT - Hosts communicating the most amount of data with this IoT Device",
              "queryTemplate": "let ConnectionData_DefenderForIoT_GetIoTDevice2Host = (v_IoTDevice_DeviceId:string) {\n\t\t\t\t\t\t\tlet connectionData = SecurityIoTRawEvent \n\t\t\t\t\t\t\t| extend ClientDeviceType = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ClientDeviceId = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ClientIpAddress = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ClientisExternal = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ServerDeviceType = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ServerDeviceId = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ServerIpAddress = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ServerisExternal = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ClientDeviceName = tostring(todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceName)\n\t\t\t\t\t\t\t| extend ServerDeviceName = tostring(todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceName)\n\t\t\t\t\t\t\t| extend Bandwidth = todynamic(extractjson(\u0022$Bandwidth\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend LastActivity = todynamic(extractjson(\u0022$LastActivity\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend Protocol = todynamic(extractjson(\u0022$Protocol\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerPort = todynamic(extractjson(\u0022$ServerPort\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerDevice = extractjson(\u0022$ServerDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend ClientDevice = extractjson(\u0022$ClientDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend SensorId = DeviceId\n\t\t\t\t\t\t\t| extend ClientDeviceGUID = strcat(SensorId, \u0022_\u0022, ClientDeviceId), ServerDeviceGUID = strcat(SensorId, \u0022_\u0022, ServerDeviceId);\n\t\t\t\t\t\t\tconnectionData\n\t\t\t\t\t\t\t| where ClientDeviceGUID == v_IoTDevice_DeviceId or ServerDeviceGUID == v_IoTDevice_DeviceId\n\t\t\t\t\t\t\t| extend Direction = iff(ClientDeviceGUID == v_IoTDevice_DeviceId, \u0022Outbound\u0022, \u0022Inbound\u0022)\n\t\t\t\t\t\t\t| project DeviceGUID = iff(Direction == \u0022Outbound\u0022, ServerDeviceGUID, ClientDeviceGUID), \n\t\t\t\t\t\t\tDeviceType = iff(Direction == \u0022Outbound\u0022, ServerDeviceType, ClientDeviceType),\n\t\t\t\t\t\t\tDeviceIp = iff(Direction == \u0022Outbound\u0022, ServerIpAddress, ClientIpAddress),\n\t\t\t\t\t\t\tDeviceName = iff(Direction == \u0022Outbound\u0022, ServerDeviceName, ClientDeviceName),\n\t\t\t\t\t\t\tSensorId, LastActivity = todatetime(LastActivity), Bandwidth = todouble(Bandwidth), Protocol, ServerPort\n\t\t\t\t\t\t\t| summarize TotalBandwidth = sum(Bandwidth), LastActivity = max(LastActivity), Protocols = make_set(Protocol), ServerPorts = make_set(ServerPort) by DeviceGUID, DeviceName, IpAddress = tostring(DeviceIp), IoTDevice_DeviceType = tostring(DeviceType)\n\t\t\t\t\t\t\t| project-rename TotalBandwidth_MB = TotalBandwidth\n\t\t\t\t\t\t\t| extend TotalBandwidth_MB = floor(todecimal(TotalBandwidth_MB / 1000), 0.1)\n\t\t\t\t\t\t\t| project Host_HostName = DeviceName, Host_Aux_IpAddress = IpAddress, Host_Aux_Type = IoTDevice_DeviceType, Host_Aux_LastActivity = LastActivity, Host_Aux_Protocols = Protocols, Host_Aux_ServerPorts = ServerPorts, Host_Aux_TotalBandwidth_MB = TotalBandwidth_MB\n\t\t\t\t\t\t\t| top 10 by Host_Aux_TotalBandwidth_MB\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tConnectionData_DefenderForIoT_GetIoTDevice2Host(\u0027\u003CdeviceId\u003E\u0027)",
              "inputFields": [
                "deviceId"
              ],
              "outputEntityTypes": [
                "Host"
              ],
              "dataSources": [
                "SecurityIoTRawEvent"
              ],
              "inputEntityType": "IoTDevice"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/f1cce474-7a4f-435c-a7ee-3d5a800a6df4",
            "name": "f1cce474-7a4f-435c-a7ee-3d5a800a6df4",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "DefenderForIoT - IP Addresses communicating the most amount of data with this IoT Device",
              "queryTemplate": "let ConnectionData_DefenderForIoT_GetIoTDevice2IP = (v_IoTDevice_DeviceId:string) {\n\t\t\t\t\t\t\tlet connectionData = SecurityIoTRawEvent \n\t\t\t\t\t\t\t| extend ClientDeviceType = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ClientDeviceId = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ClientIpAddress = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ClientisExternal = todynamic(extractjson(\u0022$ClientDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend ServerDeviceType = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceType\n\t\t\t\t\t\t\t| extend ServerDeviceId = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).deviceId\n\t\t\t\t\t\t\t| extend ServerIpAddress = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).ipAddress\n\t\t\t\t\t\t\t| extend ServerisExternal = todynamic(extractjson(\u0022$ServerDevice\u0022, EventDetails)).isExternal\n\t\t\t\t\t\t\t| extend Bandwidth = todynamic(extractjson(\u0022$Bandwidth\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend LastActivity = todynamic(extractjson(\u0022$LastActivity\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend Protocol = todynamic(extractjson(\u0022$Protocol\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ServerDevice = extractjson(\u0022$ServerDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend ServerPort = todynamic(extractjson(\u0022$ServerPort\u0022, EventDetails))\n\t\t\t\t\t\t\t| extend ClientDevice = extractjson(\u0022$ClientDevice\u0022, EventDetails)\n\t\t\t\t\t\t\t| extend SensorId = DeviceId\n\t\t\t\t\t\t\t| extend ClientDeviceGUID = strcat(SensorId, \u0022_\u0022, ClientDeviceId), ServerDeviceGUID = strcat(SensorId, \u0022_\u0022, ServerDeviceId);\n\t\t\t\t\t\t\tconnectionData\n\t\t\t\t\t\t\t| where ClientDeviceGUID == v_IoTDevice_DeviceId or ServerDeviceGUID == v_IoTDevice_DeviceId\n\t\t\t\t\t\t\t| extend Direction = iff(ClientDeviceGUID == v_IoTDevice_DeviceId, \u0022Outbound\u0022, \u0022Inbound\u0022)\n\t\t\t\t\t\t\t| project DeviceGUID = iff(Direction == \u0022Outbound\u0022, ServerDeviceGUID, ClientDeviceGUID), \n\t\t\t\t\t\t\tDeviceType = iff(Direction == \u0022Outbound\u0022, ServerDeviceType, ClientDeviceType),\n\t\t\t\t\t\t\tDeviceIp = iff(Direction == \u0022Outbound\u0022, ServerIpAddress, ClientIpAddress),\n\t\t\t\t\t\t\tDeviceIsExternal = iff(Direction == \u0022Outbound\u0022, ServerisExternal, ClientisExternal),\n\t\t\t\t\t\t\tSensorId, LastActivity = todatetime(LastActivity), Bandwidth = todouble(Bandwidth), Protocol, ServerPort\n\t\t\t\t\t\t\t| summarize TotalBandwidth = sum(Bandwidth), LastActivity = max(LastActivity), Protocols = make_set(Protocol), ServerPorts = make_set(ServerPort) by DeviceGUID, IpAddress = tostring(DeviceIp), IoTDevice_DeviceType = tostring(DeviceType), DeviceIsExternal = tostring(DeviceIsExternal)\n\t\t\t\t\t\t\t| project-rename TotalBandwidth_MB = TotalBandwidth\n\t\t\t\t\t\t\t| project IP_Address = IpAddress, IP_Aux_DeviceType = IoTDevice_DeviceType, IP_Aux_LastActivity = LastActivity, IP_Aux_Protocols = Protocols, IP_Aux_ServerPorts = ServerPorts, IP_Aux_TotalBandwidth_MB = TotalBandwidth_MB, IP_Aux_IsExternal = DeviceIsExternal\n\t\t\t\t\t\t\t| extend IP_Aux_TotalBandwidth_MB = floor(todecimal(IP_Aux_TotalBandwidth_MB / 1000), 0.1)\n\t\t\t\t\t\t\t| top 10 by IP_Aux_TotalBandwidth_MB\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tConnectionData_DefenderForIoT_GetIoTDevice2IP(\u0027\u003CdeviceId\u003E\u0027)",
              "inputFields": [
                "deviceId"
              ],
              "outputEntityTypes": [
                "IP"
              ],
              "dataSources": [
                "SecurityIoTRawEvent"
              ],
              "inputEntityType": "IoTDevice"
            }
          },
          {
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/1f3ecde7-5c69-4d44-ac93-5feac6d1cd2f",
            "name": "1f3ecde7-5c69-4d44-ac93-5feac6d1cd2f",
            "type": "Microsoft.SecurityInsights/entityQueries",
            "kind": "Expansion",
            "properties": {
              "displayName": "Most frequent command executions on the device",
              "queryTemplate": "let Process_byIoTDevice = (v_IotDevice_DeviceId:string, v_IoTDevice_IoTHub:string){\n\t\t\t\t\t\t\tSecurityIoTRawEvent \n\t\t\t\t\t\t\t| where RawEventName =~ \u0027ProcessCreate\u0027\n\t\t\t\t\t\t\t| where AssociatedResourceId =~ parse_json(v_IoTDevice_IoTHub)[\u0027ResourceId\u0027] and DeviceId =~ v_IotDevice_DeviceId\n\t\t\t\t\t\t\t| extend Process_CommandLine = tostring(parse_json(EventDetails)[\u0027CommandLine\u0027])\n\t\t\t\t\t\t\t| extend Process_ProcessId = tostring(parse_json(EventDetails)[\u0027ProcessId\u0027])\n\t\t\t\t\t\t\t| extend Process_ParentProcess_ProcessId = tostring(parse_json(EventDetails)[\u0027ParentProcessId\u0027])\n\t\t\t\t\t\t\t| extend Process_CreationTimeUtc = TimeStamp\n\t\t\t\t\t\t\t| summarize procCount = count() by Process_CommandLine, Process_ProcessId, Process_ParentProcess_ProcessId, Process_CreationTimeUtc\n\t\t\t\t\t\t\t| top 10 by procCount\n\t\t\t\t\t\t\t| extend Process_Aux_Count = procCount\n\t\t\t\t\t\t\t| project-away procCount\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tProcess_byIoTDevice(\u0027\u003CdeviceId\u003E\u0027, \u0027\u003CIoTHub\u003E\u0027)",
              "inputFields": [
                "deviceId",
                "IoTHub"
              ],
              "outputEntityTypes": [
                "Process"
              ],
              "dataSources": [
                "SecurityIoTRawEvent"
              ],
              "inputEntityType": "IoTDevice"
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784122?api-version=2022-08-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-82c8551f6bc7f6429e86048a66ea330f-00b51ab1f5ce7041-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "145a5045d08493089fe955721129708b",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1954",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:26 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "2533d746-46aa-4aa6-aee1-c4e828de25f7",
        "x-ms-ratelimit-remaining-subscription-reads": "11995",
        "x-ms-request-id": "2533d746-46aa-4aa6-aee1-c4e828de25f7",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075227Z:2533d746-46aa-4aa6-aee1-c4e828de25f7"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784122",
        "name": "6d37a904-d199-43ff-892b-53653b784122",
        "etag": "\u0022dc00d55f-0000-0100-0000-635b8a350000\u0022",
        "type": "Microsoft.SecurityInsights/entityQueries",
        "kind": "Activity",
        "properties": {
          "title": "The user consented to OAuth application",
          "content": "The user consented to the OAuth application named {{Target_CloudApplication_Name}} {{Count}} time(s)",
          "description": "This activity lists user\u0027s consents to an OAuth applications.",
          "queryDefinitions": {
            "query": "let UserConsentToApplication = (Account_Name:string, Account_UPNSuffix:string, Account_AadUserId:string){\nlet account_upn = iff(Account_Name != \u0022\u0022 and Account_UPNSuffix != \u0022\u0022\n, strcat(Account_Name,\u0022@\u0022,Account_UPNSuffix)\n,\u0022\u0022 );\nAuditLogs\n| where OperationName == \u0022Consent to application\u0022\n| extend Source_Account_UPNSuffix = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022userPrincipalName\u0022]), Source_Account_AadUserId = tostring(todynamic(InitiatedBy) [\u0022user\u0022][\u0022id\u0022])\n| where (account_upn != \u0022\u0022 and account_upn =~ Source_Account_UPNSuffix) \nor (Account_AadUserId != \u0022\u0022 and Account_AadUserId =~ Source_Account_AadUserId)\n| extend Target_CloudApplication_Name = tostring(todynamic(TargetResources)[0][\u0022displayName\u0022]), Target_CloudApplication_AppId = tostring(todynamic(TargetResources)[0][\u0022id\u0022])\n};\nUserConsentToApplication(\u0027{{Account_Name}}\u0027, \u0027{{Account_UPNSuffix}}\u0027, \u0027{{Account_AadUserId}}\u0027)  \n| project Target_CloudApplication_AppId, Target_CloudApplication_Name, TimeGenerated"
          },
          "requiredInputFieldsSets": [
            [
              "Account_AadUserId"
            ],
            [
              "Account_Name",
              "Account_UPNSuffix"
            ]
          ],
          "entitiesFilter": {},
          "enabled": true,
          "createdTimeUtc": "2022-10-28T07:52:19.7087362Z",
          "lastModifiedTimeUtc": "2022-10-28T07:52:21.5105127Z",
          "inputEntityType": "Account"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/testRG-9316/providers/Microsoft.OperationalInsights/workspaces/testRG-9316-ws/providers/Microsoft.SecurityInsights/entityQueries/6d37a904-d199-43ff-892b-53653b784123?api-version=2022-08-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-e96d2d18c09a4d43ac16799f777a2267-4f24962666deae46-00",
        "User-Agent": "azsdk-net-ResourceManager.SecurityInsights/1.0.0-alpha.20221025.1 (.NET Framework 4.8.9075.0; Microsoft Windows 10.0.22621 )",
        "x-ms-client-request-id": "4a14debd8345b0b9c265c545f3a91e6f",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "159",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Fri, 28 Oct 2022 07:52:27 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "9d402146-870b-49be-9b46-58cf03e2769c",
        "x-ms-ratelimit-remaining-subscription-reads": "11994",
        "x-ms-request-id": "9d402146-870b-49be-9b46-58cf03e2769c",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20221028T075227Z:9d402146-870b-49be-9b46-58cf03e2769c"
      },
      "ResponseBody": {
        "error": {
          "code": "NotFound",
          "message": "Entity Query \u00276d37a904-d199-43ff-892b-53653b784123\u0027 was not found in workspace \u00270c03af14-3795-4931-9cf2-75f76d3784b1\u0027"
        }
      }
    }
  ],
  "Variables": {
    "AZURE_AUTHORITY_HOST": "https://login.microsoftonline.com/",
    "RandomSeed": "1548863865",
    "RESOURCE_MANAGER_URL": null,
    "SUBSCRIPTION_ID": "db1ab6f0-4769-4b27-930e-01e2ef9c123c"
  }
}
