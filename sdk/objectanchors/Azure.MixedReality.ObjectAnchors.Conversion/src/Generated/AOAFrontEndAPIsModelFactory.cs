// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.MixedReality.ObjectAnchors.Conversion
{
    /// <summary> Model factory for read-only models. </summary>
    internal static partial class AOAFrontEndAPIsModelFactory
    {
        /// <summary> Initializes new instance of AssetConversionProperties class. </summary>
        /// <param name="clientErrorDetails"> Information about the cause of a ClientError JobStatus. </param>
        /// <param name="serverErrorDetails"> Information about the cause of a ServerError JobStatus. </param>
        /// <param name="errorCode"> . </param>
        /// <param name="jobIdInternal"> Identifier for the AOA asset conversion job. </param>
        /// <param name="outputModelUriString"> The URI for downloading the generated AOA Model. </param>
        /// <param name="conversionStatus"> . </param>
        /// <param name="assetFileTypeString"> The file type of the original 3D asset. Examples include: &quot;ply&quot;, &quot;obj&quot;, &quot;fbx&quot;, &quot;glb&quot;, &quot;gltf&quot;, etc. </param>
        /// <param name="inputAssetUriString"> The Uri to the Asset to be ingested by the AOA asset conversion service. This asset needs to have been uploaded to the service using an endpoint provided from a call to the GetUploadUri API. </param>
        /// <param name="accountIdInternal"> Identifier for the Account owning the asset conversion job. </param>
        /// <param name="conversionConfiguration"> Represents an ingestion configuration. </param>
        /// <returns> A new <see cref="Conversion.AssetConversionProperties"/> instance for mocking. </returns>
        public static AssetConversionProperties AssetConversionProperties(string clientErrorDetails = default, string serverErrorDetails = default, ConversionErrorCode errorCode = default, Guid? jobIdInternal = default, string outputModelUriString = default, AssetConversionStatus? conversionStatus = default, string assetFileTypeString = default, string inputAssetUriString = default, Guid? accountIdInternal = default, AssetConversionConfiguration conversionConfiguration = default)
        {
            return new AssetConversionProperties(clientErrorDetails, serverErrorDetails, errorCode, jobIdInternal, outputModelUriString, conversionStatus, assetFileTypeString, inputAssetUriString, accountIdInternal, conversionConfiguration);
        }

        /// <summary> Initializes new instance of AssetUploadUriResult class. </summary>
        /// <param name="uploadUriString"> The blob upload URI where a model should be uploaded to the service for ingestion. </param>
        /// <returns> A new <see cref="Conversion.AssetUploadUriResult"/> instance for mocking. </returns>
        public static AssetUploadUriResult AssetUploadUriResult(string uploadUriString = default)
        {
            return new AssetUploadUriResult(uploadUriString);
        }
    }
}
