// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Analytics.Purview.Account.Models
{
    /// <summary> The RegexReplacer. </summary>
    public partial class RegexReplacer
    {
        /// <summary> Initializes a new instance of RegexReplacer. </summary>
        /// <param name="disabled"></param>
        /// <param name="name"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public RegexReplacer(bool disabled, string name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            Disabled = disabled;
            Name = name;
        }

        /// <summary> Initializes a new instance of RegexReplacer. </summary>
        /// <param name="condition"></param>
        /// <param name="createdBy"></param>
        /// <param name="description"></param>
        /// <param name="disabled"></param>
        /// <param name="disableRecursiveReplacerApplication"></param>
        /// <param name="doNotReplaceRegex"></param>
        /// <param name="lastUpdatedTimestamp"></param>
        /// <param name="modifiedBy"></param>
        /// <param name="name"></param>
        /// <param name="regex"></param>
        /// <param name="replaceWith"></param>
        internal RegexReplacer(string condition, string createdBy, string description, bool disabled, bool? disableRecursiveReplacerApplication, FastRegex doNotReplaceRegex, long? lastUpdatedTimestamp, string modifiedBy, string name, FastRegex regex, string replaceWith)
        {
            Condition = condition;
            CreatedBy = createdBy;
            Description = description;
            Disabled = disabled;
            DisableRecursiveReplacerApplication = disableRecursiveReplacerApplication;
            DoNotReplaceRegex = doNotReplaceRegex;
            LastUpdatedTimestamp = lastUpdatedTimestamp;
            ModifiedBy = modifiedBy;
            Name = name;
            Regex = regex;
            ReplaceWith = replaceWith;
        }

        /// <summary> Gets or sets the condition. </summary>
        public string Condition { get; set; }
        /// <summary> Gets or sets the created by. </summary>
        public string CreatedBy { get; set; }
        /// <summary> Gets or sets the description. </summary>
        public string Description { get; set; }
        /// <summary> Gets or sets the disabled. </summary>
        public bool Disabled { get; set; }
        /// <summary> Gets or sets the disable recursive replacer application. </summary>
        public bool? DisableRecursiveReplacerApplication { get; set; }
        /// <summary> Gets or sets the do not replace regex. </summary>
        public FastRegex DoNotReplaceRegex { get; set; }
        /// <summary> Gets or sets the last updated timestamp. </summary>
        public long? LastUpdatedTimestamp { get; set; }
        /// <summary> Gets or sets the modified by. </summary>
        public string ModifiedBy { get; set; }
        /// <summary> Gets or sets the name. </summary>
        public string Name { get; set; }
        /// <summary> Gets or sets the regex. </summary>
        public FastRegex Regex { get; set; }
        /// <summary> Gets or sets the replace with. </summary>
        public string ReplaceWith { get; set; }
    }
}
