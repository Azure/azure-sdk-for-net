<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetWorkflowTaskAsync(Guid,RequestContext)">
      <example>
This sample shows how to call GetWorkflowTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential);

Response response = await client.GetWorkflowTaskAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("workflowRunId").ToString());
Console.WriteLine(result.GetProperty("workflowId").ToString());
Console.WriteLine(result.GetProperty("requestor").ToString());
Console.WriteLine(result.GetProperty("createdTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdateTime").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("targetValue").ToString());
]]></code>
This sample shows how to call GetWorkflowTaskAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential);

Response response = await client.GetWorkflowTaskAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("title").ToString());
Console.WriteLine(result.GetProperty("workflowRunId").ToString());
Console.WriteLine(result.GetProperty("workflowId").ToString());
Console.WriteLine(result.GetProperty("requestor").ToString());
Console.WriteLine(result.GetProperty("createdTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdateTime").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("targetValue").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("payload").ToString());
Console.WriteLine(result.GetProperty("reminderInfo").GetProperty("lastRemindTime").ToString());
Console.WriteLine(result.GetProperty("reminderInfo").GetProperty("nextRemindTime").ToString());
Console.WriteLine(result.GetProperty("reminderInfo").GetProperty("reminderSettings").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("lastExpiryNotificationTime").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("nextExpiryNotificationTime").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("expiryTime").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("expirySettings").GetProperty("expireAfter").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("expirySettings").GetProperty("notifyOnExpiration")[0].ToString());
]]></code></example>
    </member>
    <member name="GetWorkflowTask(Guid,RequestContext)">
      <example>
This sample shows how to call GetWorkflowTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential);

Response response = client.GetWorkflowTask(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("workflowRunId").ToString());
Console.WriteLine(result.GetProperty("workflowId").ToString());
Console.WriteLine(result.GetProperty("requestor").ToString());
Console.WriteLine(result.GetProperty("createdTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdateTime").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("targetValue").ToString());
]]></code>
This sample shows how to call GetWorkflowTask with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential);

Response response = client.GetWorkflowTask(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("title").ToString());
Console.WriteLine(result.GetProperty("workflowRunId").ToString());
Console.WriteLine(result.GetProperty("workflowId").ToString());
Console.WriteLine(result.GetProperty("requestor").ToString());
Console.WriteLine(result.GetProperty("createdTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdateTime").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("targetValue").ToString());
Console.WriteLine(result.GetProperty("payload").GetProperty("payload").ToString());
Console.WriteLine(result.GetProperty("reminderInfo").GetProperty("lastRemindTime").ToString());
Console.WriteLine(result.GetProperty("reminderInfo").GetProperty("nextRemindTime").ToString());
Console.WriteLine(result.GetProperty("reminderInfo").GetProperty("reminderSettings").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("lastExpiryNotificationTime").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("nextExpiryNotificationTime").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("expiryTime").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("expirySettings").GetProperty("expireAfter").ToString());
Console.WriteLine(result.GetProperty("expiryInfo").GetProperty("expirySettings").GetProperty("notifyOnExpiration")[0].ToString());
]]></code></example>
    </member>
    <member name="ReassignAsync(Guid,RequestContent,RequestContext)">
      <example>
This sample shows how to call ReassignAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.ReassignAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ReassignAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    reassignments = new object[]
    {
        new
        {
            reassignFrom = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
            reassignTo = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        }
    },
});
Response response = await client.ReassignAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Reassign(Guid,RequestContent,RequestContext)">
      <example>
This sample shows how to call Reassign.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.Reassign(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Reassign with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    reassignments = new object[]
    {
        new
        {
            reassignFrom = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
            reassignTo = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        }
    },
});
Response response = client.Reassign(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>