// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.TestFramework;

namespace Azure.Analytics.Purview.Workflows.Tests
{
    public partial class AnalyticsPurviewWorkflowsTestBase : RecordedTestBase<AnalyticsPurviewWorkflowsTestEnvironment>
    {
        public AnalyticsPurviewWorkflowsTestBase(bool isAsync) : base(isAsync)
        {
        }

        protected WorkflowsClient CreateWorkflowsClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            WorkflowsClient client = new WorkflowsClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected WorkflowClient CreateWorkflowClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            WorkflowClient client = new WorkflowClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected UserRequestsClient CreateUserRequestsClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            UserRequestsClient client = new UserRequestsClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected WorkflowRunsClient CreateWorkflowRunsClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            WorkflowRunsClient client = new WorkflowRunsClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected WorkflowRunClient CreateWorkflowRunClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            WorkflowRunClient client = new WorkflowRunClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected WorkflowTasksClient CreateWorkflowTasksClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            WorkflowTasksClient client = new WorkflowTasksClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected WorkflowTaskClient CreateWorkflowTaskClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            WorkflowTaskClient client = new WorkflowTaskClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected ApprovalClient CreateApprovalClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            ApprovalClient client = new ApprovalClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected TaskStatusClient CreateTaskStatusClient(Uri endpoint, TokenCredential credential)
        {
            PurviewWorkflowServiceClientOptions options = InstrumentClientOptions(new PurviewWorkflowServiceClientOptions());
            TaskStatusClient client = new TaskStatusClient(endpoint, credential, options);
            return InstrumentClient(client);
        }
    }
}
