// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Analytics.Purview.DataMap
{
    public partial class AtlasClassifications
    {
        internal static AtlasClassifications DeserializeAtlasClassifications(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IReadOnlyList<BinaryData>> list = default;
            Optional<int> pageSize = default;
            Optional<string> sortBy = default;
            Optional<SortType> sortType = default;
            Optional<int> startIndex = default;
            Optional<int> totalCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("list"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<BinaryData> array = new List<BinaryData>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(BinaryData.FromString(item.GetRawText()));
                        }
                    }
                    list = array;
                    continue;
                }
                if (property.NameEquals("pageSize"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    pageSize = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("sortBy"u8))
                {
                    sortBy = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sortType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sortType = new SortType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("startIndex"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    startIndex = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new AtlasClassifications(Optional.ToList(list), Optional.ToNullable(pageSize), sortBy.Value, Optional.ToNullable(sortType), Optional.ToNullable(startIndex), Optional.ToNullable(totalCount));
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static AtlasClassifications FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeAtlasClassifications(document.RootElement);
        }
    }
}
