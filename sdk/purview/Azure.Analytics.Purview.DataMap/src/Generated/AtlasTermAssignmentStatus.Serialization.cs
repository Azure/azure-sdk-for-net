// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Analytics.Purview.DataMap
{
    internal static partial class AtlasTermAssignmentStatusExtensions
    {
        public static string ToSerialString(this AtlasTermAssignmentStatus value) => value switch
        {
            AtlasTermAssignmentStatus.Discovered => "DISCOVERED",
            AtlasTermAssignmentStatus.Proposed => "PROPOSED",
            AtlasTermAssignmentStatus.Imported => "IMPORTED",
            AtlasTermAssignmentStatus.Validated => "VALIDATED",
            AtlasTermAssignmentStatus.Deprecated => "DEPRECATED",
            AtlasTermAssignmentStatus.Obsolete => "OBSOLETE",
            AtlasTermAssignmentStatus.Other => "OTHER",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown AtlasTermAssignmentStatus value.")
        };

        public static AtlasTermAssignmentStatus ToAtlasTermAssignmentStatus(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DISCOVERED")) return AtlasTermAssignmentStatus.Discovered;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "PROPOSED")) return AtlasTermAssignmentStatus.Proposed;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "IMPORTED")) return AtlasTermAssignmentStatus.Imported;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "VALIDATED")) return AtlasTermAssignmentStatus.Validated;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DEPRECATED")) return AtlasTermAssignmentStatus.Deprecated;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "OBSOLETE")) return AtlasTermAssignmentStatus.Obsolete;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "OTHER")) return AtlasTermAssignmentStatus.Other;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown AtlasTermAssignmentStatus value.");
        }
    }
}
