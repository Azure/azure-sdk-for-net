// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Analytics.Purview.DataMap
{
    internal static partial class TypeCategoryExtensions
    {
        public static string ToSerialString(this TypeCategory value) => value switch
        {
            TypeCategory.Primitive => "PRIMITIVE",
            TypeCategory.ObjectIdType => "OBJECT_ID_TYPE",
            TypeCategory.Enum => "ENUM",
            TypeCategory.Struct => "STRUCT",
            TypeCategory.Classification => "CLASSIFICATION",
            TypeCategory.Entity => "ENTITY",
            TypeCategory.Array => "ARRAY",
            TypeCategory.Map => "MAP",
            TypeCategory.Relationship => "RELATIONSHIP",
            TypeCategory.TermTemplate => "TERM_TEMPLATE",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TypeCategory value.")
        };

        public static TypeCategory ToTypeCategory(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "PRIMITIVE")) return TypeCategory.Primitive;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "OBJECT_ID_TYPE")) return TypeCategory.ObjectIdType;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "ENUM")) return TypeCategory.Enum;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "STRUCT")) return TypeCategory.Struct;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "CLASSIFICATION")) return TypeCategory.Classification;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "ENTITY")) return TypeCategory.Entity;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "ARRAY")) return TypeCategory.Array;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "MAP")) return TypeCategory.Map;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "RELATIONSHIP")) return TypeCategory.Relationship;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "TERM_TEMPLATE")) return TypeCategory.TermTemplate;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TypeCategory value.");
        }
    }
}
