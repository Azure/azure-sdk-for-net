// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Purview.Administration.Models
{
    /// <summary> The NormalizationRule. </summary>
    public partial class NormalizationRule
    {
        /// <summary> Initializes a new instance of NormalizationRule. </summary>
        public NormalizationRule()
        {
            EntityTypes = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of NormalizationRule. </summary>
        /// <param name="description"></param>
        /// <param name="disabled"></param>
        /// <param name="dynamicReplacement"></param>
        /// <param name="entityTypes"></param>
        /// <param name="lastUpdatedTimestamp"></param>
        /// <param name="name"></param>
        /// <param name="regex"></param>
        /// <param name="replaceWith"></param>
        /// <param name="version"></param>
        internal NormalizationRule(string description, bool? disabled, bool? dynamicReplacement, IList<string> entityTypes, long? lastUpdatedTimestamp, string name, FastRegex regex, string replaceWith, double? version)
        {
            Description = description;
            Disabled = disabled;
            DynamicReplacement = dynamicReplacement;
            EntityTypes = entityTypes;
            LastUpdatedTimestamp = lastUpdatedTimestamp;
            Name = name;
            Regex = regex;
            ReplaceWith = replaceWith;
            Version = version;
        }

        /// <summary> Gets or sets the description. </summary>
        public string Description { get; set; }
        /// <summary> Gets or sets the disabled. </summary>
        public bool? Disabled { get; set; }
        /// <summary> Gets or sets the dynamic replacement. </summary>
        public bool? DynamicReplacement { get; set; }
        /// <summary> Gets the entity types. </summary>
        public IList<string> EntityTypes { get; }
        /// <summary> Gets or sets the last updated timestamp. </summary>
        public long? LastUpdatedTimestamp { get; set; }
        /// <summary> Gets or sets the name. </summary>
        public string Name { get; set; }
        /// <summary> Gets or sets the regex. </summary>
        public FastRegex Regex { get; set; }
        /// <summary> Gets or sets the replace with. </summary>
        public string ReplaceWith { get; set; }
        /// <summary> Gets or sets the version. </summary>
        public double? Version { get; set; }
    }
}
