// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Administration.Models
{
    public partial class Collection : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(FriendlyName))
            {
                writer.WritePropertyName("friendlyName");
                writer.WriteStringValue(FriendlyName);
            }
            if (Optional.IsDefined(ParentCollection))
            {
                writer.WritePropertyName("parentCollection");
                writer.WriteObjectValue(ParentCollection);
            }
            writer.WriteEndObject();
        }

        internal static Collection DeserializeCollection(JsonElement element)
        {
            Optional<CollectionProvisioningState> collectionProvisioningState = default;
            Optional<string> description = default;
            Optional<string> friendlyName = default;
            Optional<string> name = default;
            Optional<CollectionReference> parentCollection = default;
            Optional<CollectionSystemData> systemData = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("collectionProvisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    collectionProvisioningState = new CollectionProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("friendlyName"))
                {
                    friendlyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("parentCollection"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    parentCollection = CollectionReference.DeserializeCollectionReference(property.Value);
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = CollectionSystemData.DeserializeCollectionSystemData(property.Value);
                    continue;
                }
            }
            return new Collection(Optional.ToNullable(collectionProvisioningState), description.Value, friendlyName.Value, name.Value, parentCollection.Value, systemData.Value);
        }
    }
}
