// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.Analytics.Purview.Administration
{
    /// <summary> The PurviewAccount service client. </summary>
    public partial class PurviewAccountClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "https://purview.azure.net/.default" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of PurviewAccountClient for mocking. </summary>
        protected PurviewAccountClient()
        {
        }

        /// <summary> Initializes a new instance of PurviewAccountClient. </summary>
        /// <param name="endpoint"> The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/account/. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public PurviewAccountClient(Uri endpoint, TokenCredential credential) : this(endpoint, credential, new PurviewAccountClientOptions())
        {
        }

        /// <summary> Initializes a new instance of PurviewAccountClient. </summary>
        /// <param name="endpoint"> The account endpoint of your Purview account. Example: https://{accountName}.purview.azure.com/account/. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public PurviewAccountClient(Uri endpoint, TokenCredential credential, PurviewAccountClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            Argument.AssertNotNull(credential, nameof(credential));
            options ??= new PurviewAccountClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential, AuthorizationScopes) }, new ResponseClassifier());
            _endpoint = endpoint;
        }

        /// <summary> Get an account. </summary>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/GetAccountProperties
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   id: string, # Optional. <Description>Gets or sets the identifier.</Description>
        ///   identity: {
        ///     principalId: string, # Optional. <Description>Service principal object Id</Description>
        ///     tenantId: string, # Optional. <Description>Tenant Id</Description>
        ///     type: &quot;SystemAssigned&quot;, # Optional. <Description>Identity Type</Description>
        ///   }, # Optional. <Description>Identity Info on the tracked resource</Description>
        ///   location: string, # Optional. <Description>Gets or sets the location.</Description>
        ///   name: string, # Optional. <Description>Gets or sets the name.</Description>
        ///   properties: {
        ///     cloudConnectors: {
        ///       awsExternalId: string, # Optional. <Description>AWS external identifier.
        /// Configured in AWS to allow use of the role arn used for scanning</Description>
        ///     }, # Optional. <Description>Cloud connectors.
        /// External cloud identifier used as part of scanning configuration.</Description>
        ///     createdAt: string (ISO 8601 Format), # Optional. <Description>Gets the time at which the entity was created.</Description>
        ///     createdBy: string, # Optional. <Description>Gets the creator of the entity.</Description>
        ///     createdByObjectId: string, # Optional. <Description>Gets the creators of the entity&apos;s object id.</Description>
        ///     endpoints: {
        ///       catalog: string, # Optional. <Description>Gets the catalog endpoint.</Description>
        ///       guardian: string, # Optional. <Description>Gets the guardian endpoint.</Description>
        ///       scan: string, # Optional. <Description>Gets the scan endpoint.</Description>
        ///     }, # Optional. <Description>The URIs that are the public endpoints of the account.</Description>
        ///     friendlyName: string, # Optional. <Description>Gets or sets the friendly name.</Description>
        ///     managedResourceGroupName: string, # Optional. <Description>Gets or sets the managed resource group name</Description>
        ///     managedResources: {
        ///       eventHubNamespace: string, # Optional. <Description>Gets the managed event hub namespace resource identifier.</Description>
        ///       resourceGroup: string, # Optional. <Description>Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.</Description>
        ///       storageAccount: string, # Optional. <Description>Gets the managed storage account resource identifier.</Description>
        ///     }, # Optional. <Description>Gets the resource identifiers of the managed resources.</Description>
        ///     privateEndpointConnections: [
        ///       {
        ///         id: string, # Optional. <Description>Gets or sets the identifier.</Description>
        ///         name: string, # Optional. <Description>Gets or sets the name.</Description>
        ///         properties: {
        ///           privateEndpoint: {
        ///             id: string, # Optional. <Description>The private endpoint identifier.</Description>
        ///           }, # Optional. <Description>The private endpoint information.</Description>
        ///           privateLinkServiceConnectionState: {
        ///             actionsRequired: string, # Optional. <Description>The required actions.</Description>
        ///             description: string, # Optional. <Description>The description.</Description>
        ///             status: &quot;Unknown&quot; | &quot;Pending&quot; | &quot;Approved&quot; | &quot;Rejected&quot; | &quot;Disconnected&quot;, # Optional. <Description>The status.</Description>
        ///           }, # Optional. <Description>The private link service connection state.</Description>
        ///           provisioningState: string, # Optional. <Description>The provisioning state.</Description>
        ///         }, # Optional. <Description>The connection identifier.</Description>
        ///         type: string, # Optional. <Description>Gets or sets the type.</Description>
        ///       }
        ///     ], # Optional. <Description>Gets the private endpoint connections information.</Description>
        ///     provisioningState: &quot;Unknown&quot; | &quot;Creating&quot; | &quot;Moving&quot; | &quot;Deleting&quot; | &quot;SoftDeleting&quot; | &quot;SoftDeleted&quot; | &quot;Failed&quot; | &quot;Succeeded&quot; | &quot;Canceled&quot;, # Optional. <Description>Gets or sets the state of the provisioning.</Description>
        ///     publicNetworkAccess: &quot;NotSpecified&quot; | &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional. <Description>Gets or sets the public network access.</Description>
        ///   }, # Optional. <Description>Gets or sets the properties.</Description>
        ///   sku: {
        ///     capacity: number, # Optional. <Description>Gets or sets the sku capacity. Possible values include: 4, 16</Description>
        ///     name: &quot;Standard&quot;, # Optional. <Description>Gets or sets the sku name.</Description>
        ///   }, # Optional. <Description>Gets or sets the Sku.</Description>
        ///   systemData: {
        ///     createdAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of resource creation (UTC).</Description>
        ///     createdBy: string, # Optional. <Description>The identity that created the resource.</Description>
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that created the resource.</Description>
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of the last modification the resource (UTC).</Description>
        ///     lastModifiedBy: string, # Optional. <Description>The identity that last modified the resource.</Description>
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that last modified the resource.</Description>
        ///   }, # Optional. <Description>Metadata pertaining to creation and last modification of the resource.</Description>
        ///   tags: Dictionary&lt;string, string&gt;, # Optional. <Description>Tags on the azure resource.</Description>
        ///   type: string, # Optional. <Description>Gets or sets the type.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetAccountPropertiesAsync(RequestContext context = null)
        {
            using var scope = ClientDiagnostics.CreateScope("PurviewAccountClient.GetAccountProperties");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetAccountPropertiesRequest(context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Get an account. </summary>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/GetAccountProperties
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   id: string, # Optional. <Description>Gets or sets the identifier.</Description>
        ///   identity: {
        ///     principalId: string, # Optional. <Description>Service principal object Id</Description>
        ///     tenantId: string, # Optional. <Description>Tenant Id</Description>
        ///     type: &quot;SystemAssigned&quot;, # Optional. <Description>Identity Type</Description>
        ///   }, # Optional. <Description>Identity Info on the tracked resource</Description>
        ///   location: string, # Optional. <Description>Gets or sets the location.</Description>
        ///   name: string, # Optional. <Description>Gets or sets the name.</Description>
        ///   properties: {
        ///     cloudConnectors: {
        ///       awsExternalId: string, # Optional. <Description>AWS external identifier.
        /// Configured in AWS to allow use of the role arn used for scanning</Description>
        ///     }, # Optional. <Description>Cloud connectors.
        /// External cloud identifier used as part of scanning configuration.</Description>
        ///     createdAt: string (ISO 8601 Format), # Optional. <Description>Gets the time at which the entity was created.</Description>
        ///     createdBy: string, # Optional. <Description>Gets the creator of the entity.</Description>
        ///     createdByObjectId: string, # Optional. <Description>Gets the creators of the entity&apos;s object id.</Description>
        ///     endpoints: {
        ///       catalog: string, # Optional. <Description>Gets the catalog endpoint.</Description>
        ///       guardian: string, # Optional. <Description>Gets the guardian endpoint.</Description>
        ///       scan: string, # Optional. <Description>Gets the scan endpoint.</Description>
        ///     }, # Optional. <Description>The URIs that are the public endpoints of the account.</Description>
        ///     friendlyName: string, # Optional. <Description>Gets or sets the friendly name.</Description>
        ///     managedResourceGroupName: string, # Optional. <Description>Gets or sets the managed resource group name</Description>
        ///     managedResources: {
        ///       eventHubNamespace: string, # Optional. <Description>Gets the managed event hub namespace resource identifier.</Description>
        ///       resourceGroup: string, # Optional. <Description>Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.</Description>
        ///       storageAccount: string, # Optional. <Description>Gets the managed storage account resource identifier.</Description>
        ///     }, # Optional. <Description>Gets the resource identifiers of the managed resources.</Description>
        ///     privateEndpointConnections: [
        ///       {
        ///         id: string, # Optional. <Description>Gets or sets the identifier.</Description>
        ///         name: string, # Optional. <Description>Gets or sets the name.</Description>
        ///         properties: {
        ///           privateEndpoint: {
        ///             id: string, # Optional. <Description>The private endpoint identifier.</Description>
        ///           }, # Optional. <Description>The private endpoint information.</Description>
        ///           privateLinkServiceConnectionState: {
        ///             actionsRequired: string, # Optional. <Description>The required actions.</Description>
        ///             description: string, # Optional. <Description>The description.</Description>
        ///             status: &quot;Unknown&quot; | &quot;Pending&quot; | &quot;Approved&quot; | &quot;Rejected&quot; | &quot;Disconnected&quot;, # Optional. <Description>The status.</Description>
        ///           }, # Optional. <Description>The private link service connection state.</Description>
        ///           provisioningState: string, # Optional. <Description>The provisioning state.</Description>
        ///         }, # Optional. <Description>The connection identifier.</Description>
        ///         type: string, # Optional. <Description>Gets or sets the type.</Description>
        ///       }
        ///     ], # Optional. <Description>Gets the private endpoint connections information.</Description>
        ///     provisioningState: &quot;Unknown&quot; | &quot;Creating&quot; | &quot;Moving&quot; | &quot;Deleting&quot; | &quot;SoftDeleting&quot; | &quot;SoftDeleted&quot; | &quot;Failed&quot; | &quot;Succeeded&quot; | &quot;Canceled&quot;, # Optional. <Description>Gets or sets the state of the provisioning.</Description>
        ///     publicNetworkAccess: &quot;NotSpecified&quot; | &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional. <Description>Gets or sets the public network access.</Description>
        ///   }, # Optional. <Description>Gets or sets the properties.</Description>
        ///   sku: {
        ///     capacity: number, # Optional. <Description>Gets or sets the sku capacity. Possible values include: 4, 16</Description>
        ///     name: &quot;Standard&quot;, # Optional. <Description>Gets or sets the sku name.</Description>
        ///   }, # Optional. <Description>Gets or sets the Sku.</Description>
        ///   systemData: {
        ///     createdAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of resource creation (UTC).</Description>
        ///     createdBy: string, # Optional. <Description>The identity that created the resource.</Description>
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that created the resource.</Description>
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of the last modification the resource (UTC).</Description>
        ///     lastModifiedBy: string, # Optional. <Description>The identity that last modified the resource.</Description>
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that last modified the resource.</Description>
        ///   }, # Optional. <Description>Metadata pertaining to creation and last modification of the resource.</Description>
        ///   tags: Dictionary&lt;string, string&gt;, # Optional. <Description>Tags on the azure resource.</Description>
        ///   type: string, # Optional. <Description>Gets or sets the type.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response GetAccountProperties(RequestContext context = null)
        {
            using var scope = ClientDiagnostics.CreateScope("PurviewAccountClient.GetAccountProperties");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetAccountPropertiesRequest(context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Updates an account. </summary>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/UpdateAccountProperties
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   friendlyName: string, # Optional. <Description>The friendly name for the azure resource.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   id: string, # Optional. <Description>Gets or sets the identifier.</Description>
        ///   identity: {
        ///     principalId: string, # Optional. <Description>Service principal object Id</Description>
        ///     tenantId: string, # Optional. <Description>Tenant Id</Description>
        ///     type: &quot;SystemAssigned&quot;, # Optional. <Description>Identity Type</Description>
        ///   }, # Optional. <Description>Identity Info on the tracked resource</Description>
        ///   location: string, # Optional. <Description>Gets or sets the location.</Description>
        ///   name: string, # Optional. <Description>Gets or sets the name.</Description>
        ///   properties: {
        ///     cloudConnectors: {
        ///       awsExternalId: string, # Optional. <Description>AWS external identifier.
        /// Configured in AWS to allow use of the role arn used for scanning</Description>
        ///     }, # Optional. <Description>Cloud connectors.
        /// External cloud identifier used as part of scanning configuration.</Description>
        ///     createdAt: string (ISO 8601 Format), # Optional. <Description>Gets the time at which the entity was created.</Description>
        ///     createdBy: string, # Optional. <Description>Gets the creator of the entity.</Description>
        ///     createdByObjectId: string, # Optional. <Description>Gets the creators of the entity&apos;s object id.</Description>
        ///     endpoints: {
        ///       catalog: string, # Optional. <Description>Gets the catalog endpoint.</Description>
        ///       guardian: string, # Optional. <Description>Gets the guardian endpoint.</Description>
        ///       scan: string, # Optional. <Description>Gets the scan endpoint.</Description>
        ///     }, # Optional. <Description>The URIs that are the public endpoints of the account.</Description>
        ///     friendlyName: string, # Optional. <Description>Gets or sets the friendly name.</Description>
        ///     managedResourceGroupName: string, # Optional. <Description>Gets or sets the managed resource group name</Description>
        ///     managedResources: {
        ///       eventHubNamespace: string, # Optional. <Description>Gets the managed event hub namespace resource identifier.</Description>
        ///       resourceGroup: string, # Optional. <Description>Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.</Description>
        ///       storageAccount: string, # Optional. <Description>Gets the managed storage account resource identifier.</Description>
        ///     }, # Optional. <Description>Gets the resource identifiers of the managed resources.</Description>
        ///     privateEndpointConnections: [
        ///       {
        ///         id: string, # Optional. <Description>Gets or sets the identifier.</Description>
        ///         name: string, # Optional. <Description>Gets or sets the name.</Description>
        ///         properties: {
        ///           privateEndpoint: {
        ///             id: string, # Optional. <Description>The private endpoint identifier.</Description>
        ///           }, # Optional. <Description>The private endpoint information.</Description>
        ///           privateLinkServiceConnectionState: {
        ///             actionsRequired: string, # Optional. <Description>The required actions.</Description>
        ///             description: string, # Optional. <Description>The description.</Description>
        ///             status: &quot;Unknown&quot; | &quot;Pending&quot; | &quot;Approved&quot; | &quot;Rejected&quot; | &quot;Disconnected&quot;, # Optional. <Description>The status.</Description>
        ///           }, # Optional. <Description>The private link service connection state.</Description>
        ///           provisioningState: string, # Optional. <Description>The provisioning state.</Description>
        ///         }, # Optional. <Description>The connection identifier.</Description>
        ///         type: string, # Optional. <Description>Gets or sets the type.</Description>
        ///       }
        ///     ], # Optional. <Description>Gets the private endpoint connections information.</Description>
        ///     provisioningState: &quot;Unknown&quot; | &quot;Creating&quot; | &quot;Moving&quot; | &quot;Deleting&quot; | &quot;SoftDeleting&quot; | &quot;SoftDeleted&quot; | &quot;Failed&quot; | &quot;Succeeded&quot; | &quot;Canceled&quot;, # Optional. <Description>Gets or sets the state of the provisioning.</Description>
        ///     publicNetworkAccess: &quot;NotSpecified&quot; | &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional. <Description>Gets or sets the public network access.</Description>
        ///   }, # Optional. <Description>Gets or sets the properties.</Description>
        ///   sku: {
        ///     capacity: number, # Optional. <Description>Gets or sets the sku capacity. Possible values include: 4, 16</Description>
        ///     name: &quot;Standard&quot;, # Optional. <Description>Gets or sets the sku name.</Description>
        ///   }, # Optional. <Description>Gets or sets the Sku.</Description>
        ///   systemData: {
        ///     createdAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of resource creation (UTC).</Description>
        ///     createdBy: string, # Optional. <Description>The identity that created the resource.</Description>
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that created the resource.</Description>
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of the last modification the resource (UTC).</Description>
        ///     lastModifiedBy: string, # Optional. <Description>The identity that last modified the resource.</Description>
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that last modified the resource.</Description>
        ///   }, # Optional. <Description>Metadata pertaining to creation and last modification of the resource.</Description>
        ///   tags: Dictionary&lt;string, string&gt;, # Optional. <Description>Tags on the azure resource.</Description>
        ///   type: string, # Optional. <Description>Gets or sets the type.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> UpdateAccountPropertiesAsync(RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewAccountClient.UpdateAccountProperties");
            scope.Start();
            try
            {
                using HttpMessage message = CreateUpdateAccountPropertiesRequest(content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Updates an account. </summary>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/UpdateAccountProperties
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   friendlyName: string, # Optional. <Description>The friendly name for the azure resource.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   id: string, # Optional. <Description>Gets or sets the identifier.</Description>
        ///   identity: {
        ///     principalId: string, # Optional. <Description>Service principal object Id</Description>
        ///     tenantId: string, # Optional. <Description>Tenant Id</Description>
        ///     type: &quot;SystemAssigned&quot;, # Optional. <Description>Identity Type</Description>
        ///   }, # Optional. <Description>Identity Info on the tracked resource</Description>
        ///   location: string, # Optional. <Description>Gets or sets the location.</Description>
        ///   name: string, # Optional. <Description>Gets or sets the name.</Description>
        ///   properties: {
        ///     cloudConnectors: {
        ///       awsExternalId: string, # Optional. <Description>AWS external identifier.
        /// Configured in AWS to allow use of the role arn used for scanning</Description>
        ///     }, # Optional. <Description>Cloud connectors.
        /// External cloud identifier used as part of scanning configuration.</Description>
        ///     createdAt: string (ISO 8601 Format), # Optional. <Description>Gets the time at which the entity was created.</Description>
        ///     createdBy: string, # Optional. <Description>Gets the creator of the entity.</Description>
        ///     createdByObjectId: string, # Optional. <Description>Gets the creators of the entity&apos;s object id.</Description>
        ///     endpoints: {
        ///       catalog: string, # Optional. <Description>Gets the catalog endpoint.</Description>
        ///       guardian: string, # Optional. <Description>Gets the guardian endpoint.</Description>
        ///       scan: string, # Optional. <Description>Gets the scan endpoint.</Description>
        ///     }, # Optional. <Description>The URIs that are the public endpoints of the account.</Description>
        ///     friendlyName: string, # Optional. <Description>Gets or sets the friendly name.</Description>
        ///     managedResourceGroupName: string, # Optional. <Description>Gets or sets the managed resource group name</Description>
        ///     managedResources: {
        ///       eventHubNamespace: string, # Optional. <Description>Gets the managed event hub namespace resource identifier.</Description>
        ///       resourceGroup: string, # Optional. <Description>Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.</Description>
        ///       storageAccount: string, # Optional. <Description>Gets the managed storage account resource identifier.</Description>
        ///     }, # Optional. <Description>Gets the resource identifiers of the managed resources.</Description>
        ///     privateEndpointConnections: [
        ///       {
        ///         id: string, # Optional. <Description>Gets or sets the identifier.</Description>
        ///         name: string, # Optional. <Description>Gets or sets the name.</Description>
        ///         properties: {
        ///           privateEndpoint: {
        ///             id: string, # Optional. <Description>The private endpoint identifier.</Description>
        ///           }, # Optional. <Description>The private endpoint information.</Description>
        ///           privateLinkServiceConnectionState: {
        ///             actionsRequired: string, # Optional. <Description>The required actions.</Description>
        ///             description: string, # Optional. <Description>The description.</Description>
        ///             status: &quot;Unknown&quot; | &quot;Pending&quot; | &quot;Approved&quot; | &quot;Rejected&quot; | &quot;Disconnected&quot;, # Optional. <Description>The status.</Description>
        ///           }, # Optional. <Description>The private link service connection state.</Description>
        ///           provisioningState: string, # Optional. <Description>The provisioning state.</Description>
        ///         }, # Optional. <Description>The connection identifier.</Description>
        ///         type: string, # Optional. <Description>Gets or sets the type.</Description>
        ///       }
        ///     ], # Optional. <Description>Gets the private endpoint connections information.</Description>
        ///     provisioningState: &quot;Unknown&quot; | &quot;Creating&quot; | &quot;Moving&quot; | &quot;Deleting&quot; | &quot;SoftDeleting&quot; | &quot;SoftDeleted&quot; | &quot;Failed&quot; | &quot;Succeeded&quot; | &quot;Canceled&quot;, # Optional. <Description>Gets or sets the state of the provisioning.</Description>
        ///     publicNetworkAccess: &quot;NotSpecified&quot; | &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional. <Description>Gets or sets the public network access.</Description>
        ///   }, # Optional. <Description>Gets or sets the properties.</Description>
        ///   sku: {
        ///     capacity: number, # Optional. <Description>Gets or sets the sku capacity. Possible values include: 4, 16</Description>
        ///     name: &quot;Standard&quot;, # Optional. <Description>Gets or sets the sku name.</Description>
        ///   }, # Optional. <Description>Gets or sets the Sku.</Description>
        ///   systemData: {
        ///     createdAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of resource creation (UTC).</Description>
        ///     createdBy: string, # Optional. <Description>The identity that created the resource.</Description>
        ///     createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that created the resource.</Description>
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of the last modification the resource (UTC).</Description>
        ///     lastModifiedBy: string, # Optional. <Description>The identity that last modified the resource.</Description>
        ///     lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that last modified the resource.</Description>
        ///   }, # Optional. <Description>Metadata pertaining to creation and last modification of the resource.</Description>
        ///   tags: Dictionary&lt;string, string&gt;, # Optional. <Description>Tags on the azure resource.</Description>
        ///   type: string, # Optional. <Description>Gets or sets the type.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response UpdateAccountProperties(RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewAccountClient.UpdateAccountProperties");
            scope.Start();
            try
            {
                using HttpMessage message = CreateUpdateAccountPropertiesRequest(content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> List the authorization keys associated with this account. </summary>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/GetAccessKeys
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   atlasKafkaPrimaryEndpoint: string, # Optional. <Description>Gets or sets the primary connection string.</Description>
        ///   atlasKafkaSecondaryEndpoint: string, # Optional. <Description>Gets or sets the secondary connection string.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetAccessKeysAsync(RequestContext context = null)
        {
            using var scope = ClientDiagnostics.CreateScope("PurviewAccountClient.GetAccessKeys");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetAccessKeysRequest(context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> List the authorization keys associated with this account. </summary>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/GetAccessKeys
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   atlasKafkaPrimaryEndpoint: string, # Optional. <Description>Gets or sets the primary connection string.</Description>
        ///   atlasKafkaSecondaryEndpoint: string, # Optional. <Description>Gets or sets the secondary connection string.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response GetAccessKeys(RequestContext context = null)
        {
            using var scope = ClientDiagnostics.CreateScope("PurviewAccountClient.GetAccessKeys");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetAccessKeysRequest(context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Regenerate the authorization keys associated with this data catalog. </summary>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/RegenerateAccessKey
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   keyType: &quot;PrimaryAtlasKafkaKey&quot; | &quot;SecondaryAtlasKafkaKey&quot;, # Optional. <Description>The access key type.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   atlasKafkaPrimaryEndpoint: string, # Optional. <Description>Gets or sets the primary connection string.</Description>
        ///   atlasKafkaSecondaryEndpoint: string, # Optional. <Description>Gets or sets the secondary connection string.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> RegenerateAccessKeyAsync(RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewAccountClient.RegenerateAccessKey");
            scope.Start();
            try
            {
                using HttpMessage message = CreateRegenerateAccessKeyRequest(content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Regenerate the authorization keys associated with this data catalog. </summary>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/RegenerateAccessKey
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   keyType: &quot;PrimaryAtlasKafkaKey&quot; | &quot;SecondaryAtlasKafkaKey&quot;, # Optional. <Description>The access key type.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   atlasKafkaPrimaryEndpoint: string, # Optional. <Description>Gets or sets the primary connection string.</Description>
        ///   atlasKafkaSecondaryEndpoint: string, # Optional. <Description>Gets or sets the secondary connection string.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response RegenerateAccessKey(RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewAccountClient.RegenerateAccessKey");
            scope.Start();
            try
            {
                using HttpMessage message = CreateRegenerateAccessKeyRequest(content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> List the collections in the account. </summary>
        /// <param name="skipToken"> The String to use. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/GetCollections
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   count: number, # Optional. <Description>Total item count.</Description>
        ///   nextLink: string, # Optional. <Description>The Url of next result page.</Description>
        ///   value: [
        ///     {
        ///       collectionProvisioningState: &quot;Unknown&quot; | &quot;Creating&quot; | &quot;Moving&quot; | &quot;Deleting&quot; | &quot;Failed&quot; | &quot;Succeeded&quot;, # Optional. <Description>Gets the state of the provisioning.</Description>
        ///       description: string, # Optional. <Description>Gets or sets the description.</Description>
        ///       friendlyName: string, # Optional. <Description>Gets or sets the friendly name of the collection.</Description>
        ///       name: string, # Optional. <Description>Gets the name.</Description>
        ///       parentCollection: {
        ///         referenceName: string, # Optional. <Description>Gets or sets the reference name.</Description>
        ///         type: string, # Optional. <Description>Gets the reference type property.</Description>
        ///       }, # Optional. <Description>Gets or sets the parent collection reference.</Description>
        ///       systemData: {
        ///         createdAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of resource creation (UTC).</Description>
        ///         createdBy: string, # Optional. <Description>The identity that created the resource.</Description>
        ///         createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that created the resource.</Description>
        ///         lastModifiedAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of the last modification the resource (UTC).</Description>
        ///         lastModifiedBy: string, # Optional. <Description>The identity that last modified the resource.</Description>
        ///         lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that last modified the resource.</Description>
        ///       }, # Optional. <Description>Gets the system data that contains information about who and when created and updated the resource.</Description>
        ///     }
        ///   ], # Required. <Description>Collection of items of type results.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual AsyncPageable<BinaryData> GetCollectionsAsync(string skipToken = null, RequestContext context = null)
        {
            return GetCollectionsImplementationAsync("PurviewAccountClient.GetCollections", skipToken, context);
        }

        private AsyncPageable<BinaryData> GetCollectionsImplementationAsync(string diagnosticsScopeName, string skipToken, RequestContext context)
        {
            return PageableHelpers.CreateAsyncPageable(CreateEnumerableAsync, ClientDiagnostics, diagnosticsScopeName);
            async IAsyncEnumerable<Page<BinaryData>> CreateEnumerableAsync(string nextLink, int? pageSizeHint, [EnumeratorCancellation] CancellationToken cancellationToken = default)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetCollectionsRequest(skipToken, context)
                        : CreateGetCollectionsNextPageRequest(nextLink, skipToken, context);
                    var page = await LowLevelPageableHelpers.ProcessMessageAsync(_pipeline, message, context, "value", "nextLink", cancellationToken).ConfigureAwait(false);
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        /// <summary> List the collections in the account. </summary>
        /// <param name="skipToken"> The String to use. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/GetCollections
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   count: number, # Optional. <Description>Total item count.</Description>
        ///   nextLink: string, # Optional. <Description>The Url of next result page.</Description>
        ///   value: [
        ///     {
        ///       collectionProvisioningState: &quot;Unknown&quot; | &quot;Creating&quot; | &quot;Moving&quot; | &quot;Deleting&quot; | &quot;Failed&quot; | &quot;Succeeded&quot;, # Optional. <Description>Gets the state of the provisioning.</Description>
        ///       description: string, # Optional. <Description>Gets or sets the description.</Description>
        ///       friendlyName: string, # Optional. <Description>Gets or sets the friendly name of the collection.</Description>
        ///       name: string, # Optional. <Description>Gets the name.</Description>
        ///       parentCollection: {
        ///         referenceName: string, # Optional. <Description>Gets or sets the reference name.</Description>
        ///         type: string, # Optional. <Description>Gets the reference type property.</Description>
        ///       }, # Optional. <Description>Gets or sets the parent collection reference.</Description>
        ///       systemData: {
        ///         createdAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of resource creation (UTC).</Description>
        ///         createdBy: string, # Optional. <Description>The identity that created the resource.</Description>
        ///         createdByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that created the resource.</Description>
        ///         lastModifiedAt: string (ISO 8601 Format), # Optional. <Description>The timestamp of the last modification the resource (UTC).</Description>
        ///         lastModifiedBy: string, # Optional. <Description>The identity that last modified the resource.</Description>
        ///         lastModifiedByType: &quot;User&quot; | &quot;Application&quot; | &quot;ManagedIdentity&quot; | &quot;Key&quot;, # Optional. <Description>The type of identity that last modified the resource.</Description>
        ///       }, # Optional. <Description>Gets the system data that contains information about who and when created and updated the resource.</Description>
        ///     }
        ///   ], # Required. <Description>Collection of items of type results.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Pageable<BinaryData> GetCollections(string skipToken = null, RequestContext context = null)
        {
            return GetCollectionsImplementation("PurviewAccountClient.GetCollections", skipToken, context);
        }

        private Pageable<BinaryData> GetCollectionsImplementation(string diagnosticsScopeName, string skipToken, RequestContext context)
        {
            return PageableHelpers.CreatePageable(CreateEnumerable, ClientDiagnostics, diagnosticsScopeName);
            IEnumerable<Page<BinaryData>> CreateEnumerable(string nextLink, int? pageSizeHint)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetCollectionsRequest(skipToken, context)
                        : CreateGetCollectionsNextPageRequest(nextLink, skipToken, context);
                    var page = LowLevelPageableHelpers.ProcessMessage(_pipeline, message, context, "value", "nextLink");
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        /// <summary> Get a resource set config service model. </summary>
        /// <param name="skipToken"> The String to use. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/GetResourceSetRules
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   count: number, # Optional. <Description>Total item count.</Description>
        ///   nextLink: string, # Optional. <Description>The Url of next result page.</Description>
        ///   value: [
        ///     {
        ///       advancedResourceSet: {
        ///         modifiedAt: string (ISO 8601 Format), # Optional. <Description>Date at which ResourceSetProcessing property of the account is updated.</Description>
        ///         resourceSetProcessing: &quot;Default&quot; | &quot;Advanced&quot;, # Optional. <Description>The advanced resource property of the account.</Description>
        ///       }, # Optional. <Description>Gets or sets the advanced resource set property of the account.</Description>
        ///       name: string, # Optional. <Description>The name of the rule</Description>
        ///       pathPatternConfig: {
        ///         acceptedPatterns: [
        ///           {
        ///             createdBy: string, # Optional.
        ///             filterType: &quot;Pattern&quot; | &quot;Regex&quot;, # Optional.
        ///             lastUpdatedTimestamp: number, # Optional.
        ///             modifiedBy: string, # Optional.
        ///             name: string, # Required.
        ///             path: string, # Required.
        ///           }
        ///         ], # Optional.
        ///         complexReplacers: [
        ///           {
        ///             createdBy: string, # Optional.
        ///             description: string, # Optional.
        ///             disabled: boolean, # Optional.
        ///             disableRecursiveReplacerApplication: boolean, # Optional.
        ///             lastUpdatedTimestamp: number, # Optional.
        ///             modifiedBy: string, # Optional.
        ///             name: string, # Optional.
        ///             typeName: string, # Optional.
        ///           }
        ///         ], # Optional.
        ///         createdBy: string, # Required.
        ///         enableDefaultPatterns: boolean, # Required.
        ///         lastUpdatedTimestamp: number, # Optional.
        ///         modifiedBy: string, # Optional.
        ///         normalizationRules: [
        ///           {
        ///             description: string, # Optional.
        ///             disabled: boolean, # Optional.
        ///             dynamicReplacement: boolean, # Optional.
        ///             entityTypes: [string], # Optional.
        ///             lastUpdatedTimestamp: number, # Optional.
        ///             name: string, # Optional.
        ///             regex: {
        ///               maxDigits: number, # Optional.
        ///               maxLetters: number, # Optional.
        ///               minDashes: number, # Optional.
        ///               minDigits: number, # Optional.
        ///               minDigitsOrLetters: number, # Optional.
        ///               minDots: number, # Optional.
        ///               minHex: number, # Optional.
        ///               minLetters: number, # Optional.
        ///               minUnderscores: number, # Optional.
        ///               options: number, # Optional.
        ///               regexStr: string, # Optional.
        ///             }, # Optional.
        ///             replaceWith: string, # Optional.
        ///             version: number, # Optional.
        ///           }
        ///         ], # Optional.
        ///         regexReplacers: [
        ///           {
        ///             condition: string, # Optional.
        ///             createdBy: string, # Optional.
        ///             description: string, # Optional.
        ///             disabled: boolean, # Required.
        ///             disableRecursiveReplacerApplication: boolean, # Optional.
        ///             doNotReplaceRegex: FastRegex, # Optional.
        ///             lastUpdatedTimestamp: number, # Optional.
        ///             modifiedBy: string, # Optional.
        ///             name: string, # Required.
        ///             regex: FastRegex, # Optional.
        ///             replaceWith: string, # Optional.
        ///           }
        ///         ], # Optional.
        ///         rejectedPatterns: [Filter], # Optional.
        ///         scopedRules: [
        ///           {
        ///             bindingUrl: string, # Required.
        ///             rules: [
        ///               {
        ///                 displayName: string, # Optional.
        ///                 isResourceSet: boolean, # Optional.
        ///                 lastUpdatedTimestamp: number, # Optional.
        ///                 name: string, # Optional.
        ///                 qualifiedName: string, # Required.
        ///               }
        ///             ], # Optional.
        ///             storeType: string, # Required.
        ///           }
        ///         ], # Optional.
        ///         version: number, # Optional.
        ///       }, # Optional. <Description>The configuration rules for path pattern extraction.</Description>
        ///     }
        ///   ], # Required. <Description>Collection of items of type results.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual AsyncPageable<BinaryData> GetResourceSetRulesAsync(string skipToken = null, RequestContext context = null)
        {
            return GetResourceSetRulesImplementationAsync("PurviewAccountClient.GetResourceSetRules", skipToken, context);
        }

        private AsyncPageable<BinaryData> GetResourceSetRulesImplementationAsync(string diagnosticsScopeName, string skipToken, RequestContext context)
        {
            return PageableHelpers.CreateAsyncPageable(CreateEnumerableAsync, ClientDiagnostics, diagnosticsScopeName);
            async IAsyncEnumerable<Page<BinaryData>> CreateEnumerableAsync(string nextLink, int? pageSizeHint, [EnumeratorCancellation] CancellationToken cancellationToken = default)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetResourceSetRulesRequest(skipToken, context)
                        : CreateGetResourceSetRulesNextPageRequest(nextLink, skipToken, context);
                    var page = await LowLevelPageableHelpers.ProcessMessageAsync(_pipeline, message, context, "value", "nextLink", cancellationToken).ConfigureAwait(false);
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        /// <summary> Get a resource set config service model. </summary>
        /// <param name="skipToken"> The String to use. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewAdministration/Accounts/GetResourceSetRules
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   count: number, # Optional. <Description>Total item count.</Description>
        ///   nextLink: string, # Optional. <Description>The Url of next result page.</Description>
        ///   value: [
        ///     {
        ///       advancedResourceSet: {
        ///         modifiedAt: string (ISO 8601 Format), # Optional. <Description>Date at which ResourceSetProcessing property of the account is updated.</Description>
        ///         resourceSetProcessing: &quot;Default&quot; | &quot;Advanced&quot;, # Optional. <Description>The advanced resource property of the account.</Description>
        ///       }, # Optional. <Description>Gets or sets the advanced resource set property of the account.</Description>
        ///       name: string, # Optional. <Description>The name of the rule</Description>
        ///       pathPatternConfig: {
        ///         acceptedPatterns: [
        ///           {
        ///             createdBy: string, # Optional.
        ///             filterType: &quot;Pattern&quot; | &quot;Regex&quot;, # Optional.
        ///             lastUpdatedTimestamp: number, # Optional.
        ///             modifiedBy: string, # Optional.
        ///             name: string, # Required.
        ///             path: string, # Required.
        ///           }
        ///         ], # Optional.
        ///         complexReplacers: [
        ///           {
        ///             createdBy: string, # Optional.
        ///             description: string, # Optional.
        ///             disabled: boolean, # Optional.
        ///             disableRecursiveReplacerApplication: boolean, # Optional.
        ///             lastUpdatedTimestamp: number, # Optional.
        ///             modifiedBy: string, # Optional.
        ///             name: string, # Optional.
        ///             typeName: string, # Optional.
        ///           }
        ///         ], # Optional.
        ///         createdBy: string, # Required.
        ///         enableDefaultPatterns: boolean, # Required.
        ///         lastUpdatedTimestamp: number, # Optional.
        ///         modifiedBy: string, # Optional.
        ///         normalizationRules: [
        ///           {
        ///             description: string, # Optional.
        ///             disabled: boolean, # Optional.
        ///             dynamicReplacement: boolean, # Optional.
        ///             entityTypes: [string], # Optional.
        ///             lastUpdatedTimestamp: number, # Optional.
        ///             name: string, # Optional.
        ///             regex: {
        ///               maxDigits: number, # Optional.
        ///               maxLetters: number, # Optional.
        ///               minDashes: number, # Optional.
        ///               minDigits: number, # Optional.
        ///               minDigitsOrLetters: number, # Optional.
        ///               minDots: number, # Optional.
        ///               minHex: number, # Optional.
        ///               minLetters: number, # Optional.
        ///               minUnderscores: number, # Optional.
        ///               options: number, # Optional.
        ///               regexStr: string, # Optional.
        ///             }, # Optional.
        ///             replaceWith: string, # Optional.
        ///             version: number, # Optional.
        ///           }
        ///         ], # Optional.
        ///         regexReplacers: [
        ///           {
        ///             condition: string, # Optional.
        ///             createdBy: string, # Optional.
        ///             description: string, # Optional.
        ///             disabled: boolean, # Required.
        ///             disableRecursiveReplacerApplication: boolean, # Optional.
        ///             doNotReplaceRegex: FastRegex, # Optional.
        ///             lastUpdatedTimestamp: number, # Optional.
        ///             modifiedBy: string, # Optional.
        ///             name: string, # Required.
        ///             regex: FastRegex, # Optional.
        ///             replaceWith: string, # Optional.
        ///           }
        ///         ], # Optional.
        ///         rejectedPatterns: [Filter], # Optional.
        ///         scopedRules: [
        ///           {
        ///             bindingUrl: string, # Required.
        ///             rules: [
        ///               {
        ///                 displayName: string, # Optional.
        ///                 isResourceSet: boolean, # Optional.
        ///                 lastUpdatedTimestamp: number, # Optional.
        ///                 name: string, # Optional.
        ///                 qualifiedName: string, # Required.
        ///               }
        ///             ], # Optional.
        ///             storeType: string, # Required.
        ///           }
        ///         ], # Optional.
        ///         version: number, # Optional.
        ///       }, # Optional. <Description>The configuration rules for path pattern extraction.</Description>
        ///     }
        ///   ], # Required. <Description>Collection of items of type results.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Pageable<BinaryData> GetResourceSetRules(string skipToken = null, RequestContext context = null)
        {
            return GetResourceSetRulesImplementation("PurviewAccountClient.GetResourceSetRules", skipToken, context);
        }

        private Pageable<BinaryData> GetResourceSetRulesImplementation(string diagnosticsScopeName, string skipToken, RequestContext context)
        {
            return PageableHelpers.CreatePageable(CreateEnumerable, ClientDiagnostics, diagnosticsScopeName);
            IEnumerable<Page<BinaryData>> CreateEnumerable(string nextLink, int? pageSizeHint)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetResourceSetRulesRequest(skipToken, context)
                        : CreateGetResourceSetRulesNextPageRequest(nextLink, skipToken, context);
                    var page = LowLevelPageableHelpers.ProcessMessage(_pipeline, message, context, "value", "nextLink");
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        private PurviewResourceSetRule _cachedPurviewResourceSetRule;

        /// <summary> Initializes a new instance of PurviewCollection. </summary>
        /// <param name="collectionName"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="collectionName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="collectionName"/> is an empty string, and was expected to be non-empty. </exception>
        public virtual PurviewCollection GetPurviewCollectionClient(string collectionName)
        {
            Argument.AssertNotNullOrEmpty(collectionName, nameof(collectionName));

            return new PurviewCollection(ClientDiagnostics, _pipeline, _tokenCredential, _endpoint, collectionName);
        }

        /// <summary> Initializes a new instance of PurviewResourceSetRule. </summary>
        public virtual PurviewResourceSetRule GetPurviewResourceSetRuleClient()
        {
            return Volatile.Read(ref _cachedPurviewResourceSetRule) ?? Interlocked.CompareExchange(ref _cachedPurviewResourceSetRule, new PurviewResourceSetRule(ClientDiagnostics, _pipeline, _tokenCredential, _endpoint), null) ?? _cachedPurviewResourceSetRule;
        }

        internal HttpMessage CreateGetAccountPropertiesRequest(RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/", false);
            uri.AppendQuery("api-version", "2019-11-01-preview", true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateUpdateAccountPropertiesRequest(RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Patch;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/", false);
            uri.AppendQuery("api-version", "2019-11-01-preview", true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateGetAccessKeysRequest(RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/listkeys", false);
            uri.AppendQuery("api-version", "2019-11-01-preview", true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateRegenerateAccessKeyRequest(RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/regeneratekeys", false);
            uri.AppendQuery("api-version", "2019-11-01-preview", true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateGetCollectionsRequest(string skipToken, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/collections", false);
            uri.AppendQuery("api-version", "2019-11-01-preview", true);
            if (skipToken != null)
            {
                uri.AppendQuery("$skipToken", skipToken, true);
            }
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetResourceSetRulesRequest(string skipToken, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/resourceSetRuleConfigs", false);
            uri.AppendQuery("api-version", "2019-11-01-preview", true);
            if (skipToken != null)
            {
                uri.AppendQuery("$skipToken", skipToken, true);
            }
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetCollectionsNextPageRequest(string nextLink, string skipToken, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRawNextLink(nextLink, false);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetResourceSetRulesNextPageRequest(string nextLink, string skipToken, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRawNextLink(nextLink, false);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        private static ResponseClassifier _responseClassifier200;
        private static ResponseClassifier ResponseClassifier200 => _responseClassifier200 ??= new StatusCodeClassifier(stackalloc ushort[] { 200 });
    }
}
