// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.Analytics.Purview.Administration
{
    // Data plane generated client. The ScanRulesets service client.
    /// <summary> The ScanRulesets service client. </summary>
    public partial class ScanRulesetsClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "https://purview.azure.net/.default" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of ScanRulesetsClient for mocking. </summary>
        protected ScanRulesetsClient()
        {
        }

        /// <summary> Initializes a new instance of ScanRulesetsClient. </summary>
        /// <param name="endpoint"> The catalog endpoint of your Purview account. Example: https://{accountName}.purview.azure.com. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public ScanRulesetsClient(Uri endpoint, TokenCredential credential) : this(endpoint, credential, new PurviewAccountClientOptions())
        {
        }

        /// <summary> Initializes a new instance of ScanRulesetsClient. </summary>
        /// <param name="endpoint"> The catalog endpoint of your Purview account. Example: https://{accountName}.purview.azure.com. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public ScanRulesetsClient(Uri endpoint, TokenCredential credential, PurviewAccountClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            Argument.AssertNotNull(credential, nameof(credential));
            options ??= new PurviewAccountClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential, AuthorizationScopes) }, new ResponseClassifier());
            _endpoint = endpoint;
        }

        /// <summary> Get a scan ruleset. </summary>
        /// <param name="scanRulesetName"> The String to use. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <example>
        /// This sample shows how to call GetScanRulesetAsync with required parameters and parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// Response response = await client.GetScanRulesetAsync("<scanRulesetName>");
        /// 
        /// JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        /// Console.WriteLine(result.GetProperty("kind").ToString());
        /// Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
        /// Console.WriteLine(result.GetProperty("status").ToString());
        /// Console.WriteLine(result.GetProperty("version").ToString());
        /// Console.WriteLine(result.GetProperty("id").ToString());
        /// Console.WriteLine(result.GetProperty("name").ToString());
        /// ]]></code>
        /// </example>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>AzureSubscriptionScanRuleset</summary>Schema for <c>AzureSubscriptionScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSubscription, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupScanRuleset</summary>Schema for <c>AzureResourceGroupScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureResourceGroup, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseWorkspaceScanRuleset</summary>Schema for <c>AzureSynapseWorkspaceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapseWorkspace, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseScanRuleset</summary>Schema for <c>AzureSynapseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen1ScanRuleset</summary>Schema for <c>AdlsGen1ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen1, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen2ScanRuleset</summary>Schema for <c>AdlsGen2ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen2, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonAccountScanRuleset</summary>Schema for <c>AmazonAccountScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonAccount, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonS3ScanRuleset</summary>Schema for <c>AmazonS3ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonS3, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonSqlScanRuleset</summary>Schema for <c>AmazonSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureCosmosDbScanRuleset</summary>Schema for <c>AzureCosmosDbScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureCosmosDb, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureDataExplorerScanRuleset</summary>Schema for <c>AzureDataExplorerScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureDataExplorer, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureFileServiceScanRuleset</summary>Schema for <c>AzureFileServiceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureFileService, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseScanRuleset</summary>Schema for <c>AzureSqlDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonPostgreSqlScanRuleset</summary>Schema for <c>AmazonPostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonPostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzurePostgreSqlScanRuleset</summary>Schema for <c>AzurePostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzurePostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SqlServerDatabaseScanRuleset</summary>Schema for <c>SqlServerDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SqlServerDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseManagedInstanceScanRuleset</summary>Schema for <c>AzureSqlDatabaseManagedInstanceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabaseManagedInstance, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDataWarehouseScanRuleset</summary>Schema for <c>AzureSqlDataWarehouseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDataWarehouse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureMySqlScanRuleset</summary>Schema for <c>AzureMySqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureMySql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureStorageScanRuleset</summary>Schema for <c>AzureStorageScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureStorage, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>TeradataScanRuleset</summary>Schema for <c>TeradataScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Teradata, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>OracleScanRuleset</summary>Schema for <c>OracleScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Oracle, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapS4HanaScanRuleset</summary>Schema for <c>SapS4HanaScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapS4Hana, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapEccScanRuleset</summary>Schema for <c>SapEccScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapEcc, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>PowerBIScanRuleset</summary>Schema for <c>PowerBIScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: PowerBI, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetScanRulesetAsync(string scanRulesetName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(scanRulesetName, nameof(scanRulesetName));

            using var scope = ClientDiagnostics.CreateScope("ScanRulesetsClient.GetScanRuleset");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetScanRulesetRequest(scanRulesetName, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Get a scan ruleset. </summary>
        /// <param name="scanRulesetName"> The String to use. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <example>
        /// This sample shows how to call GetScanRuleset with required parameters and parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// Response response = client.GetScanRuleset("<scanRulesetName>");
        /// 
        /// JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        /// Console.WriteLine(result.GetProperty("kind").ToString());
        /// Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
        /// Console.WriteLine(result.GetProperty("status").ToString());
        /// Console.WriteLine(result.GetProperty("version").ToString());
        /// Console.WriteLine(result.GetProperty("id").ToString());
        /// Console.WriteLine(result.GetProperty("name").ToString());
        /// ]]></code>
        /// </example>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>AzureSubscriptionScanRuleset</summary>Schema for <c>AzureSubscriptionScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSubscription, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupScanRuleset</summary>Schema for <c>AzureResourceGroupScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureResourceGroup, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseWorkspaceScanRuleset</summary>Schema for <c>AzureSynapseWorkspaceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapseWorkspace, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseScanRuleset</summary>Schema for <c>AzureSynapseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen1ScanRuleset</summary>Schema for <c>AdlsGen1ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen1, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen2ScanRuleset</summary>Schema for <c>AdlsGen2ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen2, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonAccountScanRuleset</summary>Schema for <c>AmazonAccountScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonAccount, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonS3ScanRuleset</summary>Schema for <c>AmazonS3ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonS3, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonSqlScanRuleset</summary>Schema for <c>AmazonSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureCosmosDbScanRuleset</summary>Schema for <c>AzureCosmosDbScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureCosmosDb, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureDataExplorerScanRuleset</summary>Schema for <c>AzureDataExplorerScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureDataExplorer, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureFileServiceScanRuleset</summary>Schema for <c>AzureFileServiceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureFileService, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseScanRuleset</summary>Schema for <c>AzureSqlDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonPostgreSqlScanRuleset</summary>Schema for <c>AmazonPostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonPostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzurePostgreSqlScanRuleset</summary>Schema for <c>AzurePostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzurePostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SqlServerDatabaseScanRuleset</summary>Schema for <c>SqlServerDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SqlServerDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseManagedInstanceScanRuleset</summary>Schema for <c>AzureSqlDatabaseManagedInstanceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabaseManagedInstance, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDataWarehouseScanRuleset</summary>Schema for <c>AzureSqlDataWarehouseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDataWarehouse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureMySqlScanRuleset</summary>Schema for <c>AzureMySqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureMySql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureStorageScanRuleset</summary>Schema for <c>AzureStorageScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureStorage, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>TeradataScanRuleset</summary>Schema for <c>TeradataScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Teradata, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>OracleScanRuleset</summary>Schema for <c>OracleScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Oracle, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapS4HanaScanRuleset</summary>Schema for <c>SapS4HanaScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapS4Hana, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapEccScanRuleset</summary>Schema for <c>SapEccScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapEcc, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>PowerBIScanRuleset</summary>Schema for <c>PowerBIScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: PowerBI, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response GetScanRuleset(string scanRulesetName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(scanRulesetName, nameof(scanRulesetName));

            using var scope = ClientDiagnostics.CreateScope("ScanRulesetsClient.GetScanRuleset");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetScanRulesetRequest(scanRulesetName, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Creates or Updates a scan ruleset. </summary>
        /// <param name="scanRulesetName"> The String to use. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <example>
        /// This sample shows how to call CreateOrUpdateAsync with required parameters and request content, and how to parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// var data = new {
        ///     kind = "AzureSubscription",
        /// };
        /// 
        /// Response response = await client.CreateOrUpdateAsync("<scanRulesetName>", RequestContent.Create(data));
        /// 
        /// JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        /// Console.WriteLine(result.GetProperty("kind").ToString());
        /// Console.WriteLine(result.ToString());
        /// ]]></code>
        /// This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// var data = new {
        ///     properties = new {
        ///         description = "<description>",
        ///         excludedSystemClassifications = new[] {
        ///             "<String>"
        ///         },
        ///         includedCustomClassificationRuleNames = new[] {
        ///             "<String>"
        ///         },
        ///     },
        ///     kind = "AzureSubscription",
        ///     scanRulesetType = "Custom",
        /// };
        /// 
        /// Response response = await client.CreateOrUpdateAsync("<scanRulesetName>", RequestContent.Create(data));
        /// 
        /// JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        /// Console.WriteLine(result.GetProperty("kind").ToString());
        /// Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
        /// Console.WriteLine(result.GetProperty("status").ToString());
        /// Console.WriteLine(result.GetProperty("version").ToString());
        /// Console.WriteLine(result.GetProperty("id").ToString());
        /// Console.WriteLine(result.GetProperty("name").ToString());
        /// ]]></code>
        /// </example>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>AzureSubscriptionScanRuleset</summary>Schema for <c>AzureSubscriptionScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSubscription, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupScanRuleset</summary>Schema for <c>AzureResourceGroupScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureResourceGroup, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseWorkspaceScanRuleset</summary>Schema for <c>AzureSynapseWorkspaceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapseWorkspace, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseScanRuleset</summary>Schema for <c>AzureSynapseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen1ScanRuleset</summary>Schema for <c>AdlsGen1ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen1, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen2ScanRuleset</summary>Schema for <c>AdlsGen2ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen2, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonAccountScanRuleset</summary>Schema for <c>AmazonAccountScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonAccount, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonS3ScanRuleset</summary>Schema for <c>AmazonS3ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonS3, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonSqlScanRuleset</summary>Schema for <c>AmazonSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureCosmosDbScanRuleset</summary>Schema for <c>AzureCosmosDbScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureCosmosDb, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureDataExplorerScanRuleset</summary>Schema for <c>AzureDataExplorerScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureDataExplorer, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureFileServiceScanRuleset</summary>Schema for <c>AzureFileServiceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureFileService, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseScanRuleset</summary>Schema for <c>AzureSqlDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonPostgreSqlScanRuleset</summary>Schema for <c>AmazonPostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonPostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzurePostgreSqlScanRuleset</summary>Schema for <c>AzurePostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzurePostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SqlServerDatabaseScanRuleset</summary>Schema for <c>SqlServerDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SqlServerDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseManagedInstanceScanRuleset</summary>Schema for <c>AzureSqlDatabaseManagedInstanceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabaseManagedInstance, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDataWarehouseScanRuleset</summary>Schema for <c>AzureSqlDataWarehouseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDataWarehouse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureMySqlScanRuleset</summary>Schema for <c>AzureMySqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureMySql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureStorageScanRuleset</summary>Schema for <c>AzureStorageScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureStorage, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>TeradataScanRuleset</summary>Schema for <c>TeradataScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Teradata, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>OracleScanRuleset</summary>Schema for <c>OracleScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Oracle, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapS4HanaScanRuleset</summary>Schema for <c>SapS4HanaScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapS4Hana, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapEccScanRuleset</summary>Schema for <c>SapEccScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapEcc, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>PowerBIScanRuleset</summary>Schema for <c>PowerBIScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: PowerBI, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>AzureSubscriptionScanRuleset</summary>Schema for <c>AzureSubscriptionScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSubscription, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupScanRuleset</summary>Schema for <c>AzureResourceGroupScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureResourceGroup, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseWorkspaceScanRuleset</summary>Schema for <c>AzureSynapseWorkspaceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapseWorkspace, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseScanRuleset</summary>Schema for <c>AzureSynapseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen1ScanRuleset</summary>Schema for <c>AdlsGen1ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen1, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen2ScanRuleset</summary>Schema for <c>AdlsGen2ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen2, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonAccountScanRuleset</summary>Schema for <c>AmazonAccountScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonAccount, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonS3ScanRuleset</summary>Schema for <c>AmazonS3ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonS3, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonSqlScanRuleset</summary>Schema for <c>AmazonSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureCosmosDbScanRuleset</summary>Schema for <c>AzureCosmosDbScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureCosmosDb, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureDataExplorerScanRuleset</summary>Schema for <c>AzureDataExplorerScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureDataExplorer, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureFileServiceScanRuleset</summary>Schema for <c>AzureFileServiceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureFileService, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseScanRuleset</summary>Schema for <c>AzureSqlDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonPostgreSqlScanRuleset</summary>Schema for <c>AmazonPostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonPostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzurePostgreSqlScanRuleset</summary>Schema for <c>AzurePostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzurePostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SqlServerDatabaseScanRuleset</summary>Schema for <c>SqlServerDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SqlServerDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseManagedInstanceScanRuleset</summary>Schema for <c>AzureSqlDatabaseManagedInstanceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabaseManagedInstance, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDataWarehouseScanRuleset</summary>Schema for <c>AzureSqlDataWarehouseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDataWarehouse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureMySqlScanRuleset</summary>Schema for <c>AzureMySqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureMySql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureStorageScanRuleset</summary>Schema for <c>AzureStorageScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureStorage, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>TeradataScanRuleset</summary>Schema for <c>TeradataScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Teradata, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>OracleScanRuleset</summary>Schema for <c>OracleScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Oracle, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapS4HanaScanRuleset</summary>Schema for <c>SapS4HanaScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapS4Hana, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapEccScanRuleset</summary>Schema for <c>SapEccScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapEcc, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>PowerBIScanRuleset</summary>Schema for <c>PowerBIScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: PowerBI, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> CreateOrUpdateAsync(string scanRulesetName, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(scanRulesetName, nameof(scanRulesetName));

            using var scope = ClientDiagnostics.CreateScope("ScanRulesetsClient.CreateOrUpdate");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateRequest(scanRulesetName, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Creates or Updates a scan ruleset. </summary>
        /// <param name="scanRulesetName"> The String to use. </param>
        /// <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <example>
        /// This sample shows how to call CreateOrUpdate with required parameters and request content, and how to parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// var data = new {
        ///     kind = "AzureSubscription",
        /// };
        /// 
        /// Response response = client.CreateOrUpdate("<scanRulesetName>", RequestContent.Create(data));
        /// 
        /// JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        /// Console.WriteLine(result.GetProperty("kind").ToString());
        /// Console.WriteLine(result.ToString());
        /// ]]></code>
        /// This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// var data = new {
        ///     properties = new {
        ///         description = "<description>",
        ///         excludedSystemClassifications = new[] {
        ///             "<String>"
        ///         },
        ///         includedCustomClassificationRuleNames = new[] {
        ///             "<String>"
        ///         },
        ///     },
        ///     kind = "AzureSubscription",
        ///     scanRulesetType = "Custom",
        /// };
        /// 
        /// Response response = client.CreateOrUpdate("<scanRulesetName>", RequestContent.Create(data));
        /// 
        /// JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        /// Console.WriteLine(result.GetProperty("kind").ToString());
        /// Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
        /// Console.WriteLine(result.GetProperty("status").ToString());
        /// Console.WriteLine(result.GetProperty("version").ToString());
        /// Console.WriteLine(result.GetProperty("id").ToString());
        /// Console.WriteLine(result.GetProperty("name").ToString());
        /// ]]></code>
        /// </example>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// 
        /// Request Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>AzureSubscriptionScanRuleset</summary>Schema for <c>AzureSubscriptionScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSubscription, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupScanRuleset</summary>Schema for <c>AzureResourceGroupScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureResourceGroup, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseWorkspaceScanRuleset</summary>Schema for <c>AzureSynapseWorkspaceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapseWorkspace, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseScanRuleset</summary>Schema for <c>AzureSynapseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen1ScanRuleset</summary>Schema for <c>AdlsGen1ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen1, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen2ScanRuleset</summary>Schema for <c>AdlsGen2ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen2, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonAccountScanRuleset</summary>Schema for <c>AmazonAccountScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonAccount, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonS3ScanRuleset</summary>Schema for <c>AmazonS3ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonS3, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonSqlScanRuleset</summary>Schema for <c>AmazonSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureCosmosDbScanRuleset</summary>Schema for <c>AzureCosmosDbScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureCosmosDb, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureDataExplorerScanRuleset</summary>Schema for <c>AzureDataExplorerScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureDataExplorer, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureFileServiceScanRuleset</summary>Schema for <c>AzureFileServiceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureFileService, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseScanRuleset</summary>Schema for <c>AzureSqlDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonPostgreSqlScanRuleset</summary>Schema for <c>AmazonPostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonPostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzurePostgreSqlScanRuleset</summary>Schema for <c>AzurePostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzurePostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SqlServerDatabaseScanRuleset</summary>Schema for <c>SqlServerDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SqlServerDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseManagedInstanceScanRuleset</summary>Schema for <c>AzureSqlDatabaseManagedInstanceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabaseManagedInstance, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDataWarehouseScanRuleset</summary>Schema for <c>AzureSqlDataWarehouseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDataWarehouse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureMySqlScanRuleset</summary>Schema for <c>AzureMySqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureMySql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureStorageScanRuleset</summary>Schema for <c>AzureStorageScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureStorage, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>TeradataScanRuleset</summary>Schema for <c>TeradataScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Teradata, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>OracleScanRuleset</summary>Schema for <c>OracleScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Oracle, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapS4HanaScanRuleset</summary>Schema for <c>SapS4HanaScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapS4Hana, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapEccScanRuleset</summary>Schema for <c>SapEccScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapEcc, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>PowerBIScanRuleset</summary>Schema for <c>PowerBIScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: PowerBI, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>AzureSubscriptionScanRuleset</summary>Schema for <c>AzureSubscriptionScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSubscription, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupScanRuleset</summary>Schema for <c>AzureResourceGroupScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureResourceGroup, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseWorkspaceScanRuleset</summary>Schema for <c>AzureSynapseWorkspaceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapseWorkspace, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseScanRuleset</summary>Schema for <c>AzureSynapseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen1ScanRuleset</summary>Schema for <c>AdlsGen1ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen1, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen2ScanRuleset</summary>Schema for <c>AdlsGen2ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen2, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonAccountScanRuleset</summary>Schema for <c>AmazonAccountScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonAccount, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonS3ScanRuleset</summary>Schema for <c>AmazonS3ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonS3, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonSqlScanRuleset</summary>Schema for <c>AmazonSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureCosmosDbScanRuleset</summary>Schema for <c>AzureCosmosDbScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureCosmosDb, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureDataExplorerScanRuleset</summary>Schema for <c>AzureDataExplorerScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureDataExplorer, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureFileServiceScanRuleset</summary>Schema for <c>AzureFileServiceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureFileService, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseScanRuleset</summary>Schema for <c>AzureSqlDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonPostgreSqlScanRuleset</summary>Schema for <c>AmazonPostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonPostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzurePostgreSqlScanRuleset</summary>Schema for <c>AzurePostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzurePostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SqlServerDatabaseScanRuleset</summary>Schema for <c>SqlServerDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SqlServerDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseManagedInstanceScanRuleset</summary>Schema for <c>AzureSqlDatabaseManagedInstanceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabaseManagedInstance, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDataWarehouseScanRuleset</summary>Schema for <c>AzureSqlDataWarehouseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDataWarehouse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureMySqlScanRuleset</summary>Schema for <c>AzureMySqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureMySql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureStorageScanRuleset</summary>Schema for <c>AzureStorageScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureStorage, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>TeradataScanRuleset</summary>Schema for <c>TeradataScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Teradata, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>OracleScanRuleset</summary>Schema for <c>OracleScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Oracle, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapS4HanaScanRuleset</summary>Schema for <c>SapS4HanaScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapS4Hana, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapEccScanRuleset</summary>Schema for <c>SapEccScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapEcc, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>PowerBIScanRuleset</summary>Schema for <c>PowerBIScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: PowerBI, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response CreateOrUpdate(string scanRulesetName, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(scanRulesetName, nameof(scanRulesetName));

            using var scope = ClientDiagnostics.CreateScope("ScanRulesetsClient.CreateOrUpdate");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateRequest(scanRulesetName, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Deletes a scan ruleset. </summary>
        /// <param name="scanRulesetName"> The String to use. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <example>
        /// This sample shows how to call DeleteAsync with required parameters and parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// Response response = await client.DeleteAsync("<scanRulesetName>");
        /// 
        /// JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        /// Console.WriteLine(result.GetProperty("kind").ToString());
        /// Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
        /// Console.WriteLine(result.GetProperty("status").ToString());
        /// Console.WriteLine(result.GetProperty("version").ToString());
        /// Console.WriteLine(result.GetProperty("id").ToString());
        /// Console.WriteLine(result.GetProperty("name").ToString());
        /// ]]></code>
        /// </example>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>AzureSubscriptionScanRuleset</summary>Schema for <c>AzureSubscriptionScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSubscription, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupScanRuleset</summary>Schema for <c>AzureResourceGroupScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureResourceGroup, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseWorkspaceScanRuleset</summary>Schema for <c>AzureSynapseWorkspaceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapseWorkspace, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseScanRuleset</summary>Schema for <c>AzureSynapseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen1ScanRuleset</summary>Schema for <c>AdlsGen1ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen1, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen2ScanRuleset</summary>Schema for <c>AdlsGen2ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen2, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonAccountScanRuleset</summary>Schema for <c>AmazonAccountScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonAccount, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonS3ScanRuleset</summary>Schema for <c>AmazonS3ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonS3, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonSqlScanRuleset</summary>Schema for <c>AmazonSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureCosmosDbScanRuleset</summary>Schema for <c>AzureCosmosDbScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureCosmosDb, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureDataExplorerScanRuleset</summary>Schema for <c>AzureDataExplorerScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureDataExplorer, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureFileServiceScanRuleset</summary>Schema for <c>AzureFileServiceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureFileService, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseScanRuleset</summary>Schema for <c>AzureSqlDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonPostgreSqlScanRuleset</summary>Schema for <c>AmazonPostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonPostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzurePostgreSqlScanRuleset</summary>Schema for <c>AzurePostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzurePostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SqlServerDatabaseScanRuleset</summary>Schema for <c>SqlServerDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SqlServerDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseManagedInstanceScanRuleset</summary>Schema for <c>AzureSqlDatabaseManagedInstanceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabaseManagedInstance, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDataWarehouseScanRuleset</summary>Schema for <c>AzureSqlDataWarehouseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDataWarehouse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureMySqlScanRuleset</summary>Schema for <c>AzureMySqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureMySql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureStorageScanRuleset</summary>Schema for <c>AzureStorageScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureStorage, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>TeradataScanRuleset</summary>Schema for <c>TeradataScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Teradata, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>OracleScanRuleset</summary>Schema for <c>OracleScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Oracle, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapS4HanaScanRuleset</summary>Schema for <c>SapS4HanaScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapS4Hana, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapEccScanRuleset</summary>Schema for <c>SapEccScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapEcc, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>PowerBIScanRuleset</summary>Schema for <c>PowerBIScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: PowerBI, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual async Task<Response> DeleteAsync(string scanRulesetName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(scanRulesetName, nameof(scanRulesetName));

            using var scope = ClientDiagnostics.CreateScope("ScanRulesetsClient.Delete");
            scope.Start();
            try
            {
                using HttpMessage message = CreateDeleteRequest(scanRulesetName, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Deletes a scan ruleset. </summary>
        /// <param name="scanRulesetName"> The String to use. </param>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        /// <example>
        /// This sample shows how to call Delete with required parameters and parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// Response response = client.Delete("<scanRulesetName>");
        /// 
        /// JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
        /// Console.WriteLine(result.GetProperty("kind").ToString());
        /// Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
        /// Console.WriteLine(result.GetProperty("status").ToString());
        /// Console.WriteLine(result.GetProperty("version").ToString());
        /// Console.WriteLine(result.GetProperty("id").ToString());
        /// Console.WriteLine(result.GetProperty("name").ToString());
        /// ]]></code>
        /// </example>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
        /// <details><summary>AzureSubscriptionScanRuleset</summary>Schema for <c>AzureSubscriptionScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSubscription, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupScanRuleset</summary>Schema for <c>AzureResourceGroupScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureResourceGroup, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseWorkspaceScanRuleset</summary>Schema for <c>AzureSynapseWorkspaceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapseWorkspace, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSynapseScanRuleset</summary>Schema for <c>AzureSynapseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSynapse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen1ScanRuleset</summary>Schema for <c>AdlsGen1ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen1, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AdlsGen2ScanRuleset</summary>Schema for <c>AdlsGen2ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AdlsGen2, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonAccountScanRuleset</summary>Schema for <c>AmazonAccountScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonAccount, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonS3ScanRuleset</summary>Schema for <c>AmazonS3ScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonS3, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonSqlScanRuleset</summary>Schema for <c>AmazonSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureCosmosDbScanRuleset</summary>Schema for <c>AzureCosmosDbScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureCosmosDb, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureDataExplorerScanRuleset</summary>Schema for <c>AzureDataExplorerScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureDataExplorer, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureFileServiceScanRuleset</summary>Schema for <c>AzureFileServiceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureFileService, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseScanRuleset</summary>Schema for <c>AzureSqlDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AmazonPostgreSqlScanRuleset</summary>Schema for <c>AmazonPostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AmazonPostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzurePostgreSqlScanRuleset</summary>Schema for <c>AzurePostgreSqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzurePostgreSql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SqlServerDatabaseScanRuleset</summary>Schema for <c>SqlServerDatabaseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SqlServerDatabase, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDatabaseManagedInstanceScanRuleset</summary>Schema for <c>AzureSqlDatabaseManagedInstanceScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDatabaseManagedInstance, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureSqlDataWarehouseScanRuleset</summary>Schema for <c>AzureSqlDataWarehouseScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureSqlDataWarehouse, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureMySqlScanRuleset</summary>Schema for <c>AzureMySqlScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureMySql, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>AzureStorageScanRuleset</summary>Schema for <c>AzureStorageScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     scanningRule: {
        ///       fileExtensions: [&quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;], # Optional.
        ///       customFileExtensions: [
        ///         {
        ///           customFileType: {
        ///             builtInType: &quot;AVRO&quot; | &quot;ORC&quot; | &quot;PARQUET&quot; | &quot;JSON&quot; | &quot;TXT&quot; | &quot;XML&quot; | &quot;Documents&quot; | &quot;CSV&quot; | &quot;PSV&quot; | &quot;SSV&quot; | &quot;TSV&quot; | &quot;GZ&quot; | &quot;DOC&quot; | &quot;DOCM&quot; | &quot;DOCX&quot; | &quot;DOT&quot; | &quot;ODP&quot; | &quot;ODS&quot; | &quot;ODT&quot; | &quot;PDF&quot; | &quot;POT&quot; | &quot;PPS&quot; | &quot;PPSX&quot; | &quot;PPT&quot; | &quot;PPTM&quot; | &quot;PPTX&quot; | &quot;XLC&quot; | &quot;XLS&quot; | &quot;XLSB&quot; | &quot;XLSM&quot; | &quot;XLSX&quot; | &quot;XLT&quot;, # Optional.
        ///             customDelimiter: string, # Optional.
        ///           }, # Optional.
        ///           description: string, # Optional.
        ///           enabled: boolean, # Optional.
        ///           fileExtension: string, # Optional.
        ///         }
        ///       ], # Optional.
        ///     }, # Optional.
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: AzureStorage, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>TeradataScanRuleset</summary>Schema for <c>TeradataScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Teradata, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>OracleScanRuleset</summary>Schema for <c>OracleScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: Oracle, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapS4HanaScanRuleset</summary>Schema for <c>SapS4HanaScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapS4Hana, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>SapEccScanRuleset</summary>Schema for <c>SapEccScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: SapEcc, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// <details><summary>PowerBIScanRuleset</summary>Schema for <c>PowerBIScanRuleset</c>:
        /// <code>{
        ///   properties: {
        ///     createdAt: string (ISO 8601 Format), # Optional.
        ///     description: string, # Optional.
        ///     excludedSystemClassifications: [string], # Optional.
        ///     includedCustomClassificationRuleNames: [string], # Optional.
        ///     lastModifiedAt: string (ISO 8601 Format), # Optional.
        ///   }, # Optional.
        ///   kind: PowerBI, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// </details>
        /// </details>
        /// 
        /// </remarks>
        public virtual Response Delete(string scanRulesetName, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(scanRulesetName, nameof(scanRulesetName));

            using var scope = ClientDiagnostics.CreateScope("ScanRulesetsClient.Delete");
            scope.Start();
            try
            {
                using HttpMessage message = CreateDeleteRequest(scanRulesetName, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> List scan rulesets in Data catalog. </summary>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="AsyncPageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <example>
        /// This sample shows how to call GetScanRulesetsAsync and parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// await foreach (var data in client.GetScanRulesetsAsync())
        /// {
        ///     JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        ///     Console.WriteLine(result.GetProperty("kind").ToString());
        ///     Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
        ///     Console.WriteLine(result.GetProperty("status").ToString());
        ///     Console.WriteLine(result.GetProperty("version").ToString());
        ///     Console.WriteLine(result.GetProperty("id").ToString());
        ///     Console.WriteLine(result.GetProperty("name").ToString());
        /// }
        /// ]]></code>
        /// </example>
        /// <remarks>
        /// Below is the JSON schema for one item in the pageable response.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>ScanRulesetListValue</c>:
        /// <code>{
        ///   kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual AsyncPageable<BinaryData> GetScanRulesetsAsync(RequestContext context = null)
        {
            return GetScanRulesetsImplementationAsync("ScanRulesetsClient.GetScanRulesets", context);
        }

        private AsyncPageable<BinaryData> GetScanRulesetsImplementationAsync(string diagnosticsScopeName, RequestContext context)
        {
            return PageableHelpers.CreateAsyncPageable(CreateEnumerableAsync, ClientDiagnostics, diagnosticsScopeName);
            async IAsyncEnumerable<Page<BinaryData>> CreateEnumerableAsync(string nextLink, int? pageSizeHint, [EnumeratorCancellation] CancellationToken cancellationToken = default)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetScanRulesetsRequest(context)
                        : CreateGetScanRulesetsNextPageRequest(nextLink, context);
                    var page = await LowLevelPageableHelpers.ProcessMessageAsync(_pipeline, message, context, "value", "nextLink", cancellationToken).ConfigureAwait(false);
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        /// <summary> List scan rulesets in Data catalog. </summary>
        /// <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <exception cref="RequestFailedException"> Service returned a non-success status code. </exception>
        /// <returns> The <see cref="Pageable{T}"/> from the service containing a list of <see cref="BinaryData"/> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        /// <example>
        /// This sample shows how to call GetScanRulesets and parse the result.
        /// <code><![CDATA[
        /// var credential = new DefaultAzureCredential();
        /// var endpoint = new Uri("<https://my-service.azure.com>");
        /// var client = new ScanRulesetsClient(endpoint, credential);
        /// 
        /// foreach (var data in client.GetScanRulesets())
        /// {
        ///     JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
        ///     Console.WriteLine(result.GetProperty("kind").ToString());
        ///     Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
        ///     Console.WriteLine(result.GetProperty("status").ToString());
        ///     Console.WriteLine(result.GetProperty("version").ToString());
        ///     Console.WriteLine(result.GetProperty("id").ToString());
        ///     Console.WriteLine(result.GetProperty("name").ToString());
        /// }
        /// ]]></code>
        /// </example>
        /// <remarks>
        /// Below is the JSON schema for one item in the pageable response.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>ScanRulesetListValue</c>:
        /// <code>{
        ///   kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Required.
        ///   scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        ///   status: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
        ///   version: number, # Optional.
        ///   id: string, # Optional.
        ///   name: string, # Optional.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Pageable<BinaryData> GetScanRulesets(RequestContext context = null)
        {
            return GetScanRulesetsImplementation("ScanRulesetsClient.GetScanRulesets", context);
        }

        private Pageable<BinaryData> GetScanRulesetsImplementation(string diagnosticsScopeName, RequestContext context)
        {
            return PageableHelpers.CreatePageable(CreateEnumerable, ClientDiagnostics, diagnosticsScopeName);
            IEnumerable<Page<BinaryData>> CreateEnumerable(string nextLink, int? pageSizeHint)
            {
                do
                {
                    var message = string.IsNullOrEmpty(nextLink)
                        ? CreateGetScanRulesetsRequest(context)
                        : CreateGetScanRulesetsNextPageRequest(nextLink, context);
                    var page = LowLevelPageableHelpers.ProcessMessage(_pipeline, message, context, "value", "nextLink");
                    nextLink = page.ContinuationToken;
                    yield return page;
                } while (!string.IsNullOrEmpty(nextLink));
            }
        }

        internal HttpMessage CreateGetScanRulesetRequest(string scanRulesetName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/scanrulesets/", false);
            uri.AppendPath(scanRulesetName, true);
            uri.AppendQuery("api-version", "2018-12-01-preview", true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateCreateOrUpdateRequest(string scanRulesetName, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200201);
            var request = message.Request;
            request.Method = RequestMethod.Put;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/scanrulesets/", false);
            uri.AppendPath(scanRulesetName, true);
            uri.AppendQuery("api-version", "2018-12-01-preview", true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateDeleteRequest(string scanRulesetName, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200204);
            var request = message.Request;
            request.Method = RequestMethod.Delete;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/scanrulesets/", false);
            uri.AppendPath(scanRulesetName, true);
            uri.AppendQuery("api-version", "2018-12-01-preview", true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetScanRulesetsRequest(RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/scanrulesets", false);
            uri.AppendQuery("api-version", "2018-12-01-preview", true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        internal HttpMessage CreateGetScanRulesetsNextPageRequest(string nextLink, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRawNextLink(nextLink, false);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        private static ResponseClassifier _responseClassifier200;
        private static ResponseClassifier ResponseClassifier200 => _responseClassifier200 ??= new StatusCodeClassifier(stackalloc ushort[] { 200 });
        private static ResponseClassifier _responseClassifier200201;
        private static ResponseClassifier ResponseClassifier200201 => _responseClassifier200201 ??= new StatusCodeClassifier(stackalloc ushort[] { 200, 201 });
        private static ResponseClassifier _responseClassifier200204;
        private static ResponseClassifier ResponseClassifier200204 => _responseClassifier200204 ??= new StatusCodeClassifier(stackalloc ushort[] { 200, 204 });
    }
}
