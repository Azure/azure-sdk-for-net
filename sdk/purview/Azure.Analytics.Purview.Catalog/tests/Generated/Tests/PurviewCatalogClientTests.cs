// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Analytics.Purview.Catalog.Tests
{
    public partial class PurviewCatalogClientTests : AnalyticsPurviewCatalogTestBase
    {
        public PurviewCatalogClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Search_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewCatalogClient client = CreatePurviewCatalogClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.SearchAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Search_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewCatalogClient client = CreatePurviewCatalogClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                keywords = "<keywords>",
                offset = 1234,
                limit = 1234,
                filter = new object(),
                facets = new object[]
            {
new
{
count = 1234,
facet = "<facet>",
sort = new object(),
}
            },
                taxonomySetting = new
                {
                    assetTypes = new object[]
            {
"<assetTypes>"
            },
                },
            });
            Response response = await client.SearchAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Suggest_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewCatalogClient client = CreatePurviewCatalogClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.SuggestAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Suggest_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewCatalogClient client = CreatePurviewCatalogClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                keywords = "<keywords>",
                limit = 1234,
                filter = new object(),
            });
            Response response = await client.SuggestAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Browse_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewCatalogClient client = CreatePurviewCatalogClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.BrowseAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Browse_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewCatalogClient client = CreatePurviewCatalogClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                entityType = "<entityType>",
                path = "<path>",
                limit = 1234,
                offset = 1234,
            });
            Response response = await client.BrowseAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AutoComplete_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewCatalogClient client = CreatePurviewCatalogClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.AutoCompleteAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AutoComplete_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewCatalogClient client = CreatePurviewCatalogClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                keywords = "<keywords>",
                limit = 1234,
                filter = new object(),
            });
            Response response = await client.AutoCompleteAsync(content);
        }
    }
}
