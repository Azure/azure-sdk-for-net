// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.Analytics.Purview.Catalog
{
    /// <summary> The PurviewCollections service client. </summary>
    public partial class PurviewCollections
    {
        private static readonly string[] AuthorizationScopes = new string[] { "https://purview.azure.net/.default" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;
        private readonly string _apiVersion;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of PurviewCollections for mocking. </summary>
        protected PurviewCollections()
        {
        }

        /// <summary> Initializes a new instance of PurviewCollections. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="tokenCredential"> The token credential to copy. </param>
        /// <param name="endpoint"> The catalog endpoint of your Purview account. Example: https://{accountName}.purview.azure.com. </param>
        /// <param name="apiVersion"> Api Version. </param>
        internal PurviewCollections(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, TokenCredential tokenCredential, Uri endpoint, string apiVersion)
        {
            ClientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
            _tokenCredential = tokenCredential;
            _endpoint = endpoint;
            _apiVersion = apiVersion;
        }

        /// <summary>
        /// Creates or updates an entity to a collection.
        /// Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
        /// Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
        /// </summary>
        /// <param name="collection"> the collection unique name. </param>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="collection"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="collection"/> is an empty string, and was expected to be non-empty. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewCatalog/PurviewCollection/CreateOrUpdateEntity
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   referredEntities: Dictionary&lt;string, AtlasEntity&gt;, # Optional. <Description>The referred entities.</Description>
        ///   entity: {
        ///     attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///     typeName: string, # Optional. <Description>The name of the type.</Description>
        ///     lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///     businessAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>Business Attributes</Description>
        ///     classifications: [
        ///       {
        ///         attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///         typeName: string, # Optional. <Description>The name of the type.</Description>
        ///         lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///         entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///         entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///         removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///         validityPeriods: [
        ///           {
        ///             endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///             startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///             timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///           }
        ///         ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///         source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///         sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///       }
        ///     ], # Optional. <Description>An array of classifications.</Description>
        ///     createTime: number, # Optional. <Description>The created time of the record.</Description>
        ///     createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///     customAttributes: Dictionary&lt;string, string&gt;, # Optional. <Description>Custom Attribute</Description>
        ///     guid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///     homeId: string, # Optional. <Description>The home ID of the entity.</Description>
        ///     isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///     labels: [string], # Optional. <Description>labels</Description>
        ///     meanings: [
        ///       {
        ///         confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///         createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///         description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///         displayText: string, # Optional. <Description>The display text.</Description>
        ///         expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///         relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///         source: string, # Optional. <Description>The source of the term.</Description>
        ///         status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///         steward: string, # Optional. <Description>The steward of the term.</Description>
        ///         termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///       }
        ///     ], # Optional. <Description>An array of term assignment headers indicating the meanings of the entity.</Description>
        ///     provenanceType: number, # Optional. <Description>Used to record the provenance of an instance of an entity or relationship.</Description>
        ///     proxy: boolean, # Optional. <Description>Determines if there&apos;s a proxy.</Description>
        ///     relationshipAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of relationship.</Description>
        ///     status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///     updateTime: number, # Optional. <Description>The update time of the record.</Description>
        ///     updatedBy: string, # Optional. <Description>The user who updated the record.</Description>
        ///     version: number, # Optional. <Description>The version of the entity.</Description>
        ///     source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///     sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///     contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. <Description>The dictionary of contacts for terms. Key could be Expert or Owner.</Description>
        ///   }, # Optional. <Description>An instance of an entity - like hive_table, hive_database.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   guidAssignments: Dictionary&lt;string, string&gt;, # Optional. <Description>A map of GUID assignments with entities.</Description>
        ///   mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. <Description>The entity headers of mutated entities.</Description>
        ///   partialUpdatedEntities: [
        ///     {
        ///       attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///       typeName: string, # Optional. <Description>The name of the type.</Description>
        ///       lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///       classificationNames: [string], # Optional. <Description>An array of classification names.</Description>
        ///       classifications: [
        ///         {
        ///           attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///           typeName: string, # Optional. <Description>The name of the type.</Description>
        ///           lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///           entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///           entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///           removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///           validityPeriods: [
        ///             {
        ///               endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///               startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///               timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///             }
        ///           ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///           source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///           sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///         }
        ///       ], # Optional. <Description>An array of classifications.</Description>
        ///       displayText: string, # Optional. <Description>The display text.</Description>
        ///       guid: string, # Optional. <Description>The GUID of the record.</Description>
        ///       isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///       labels: [string], # Optional. <Description>labels</Description>
        ///       meaningNames: [string], # Optional. <Description>An array of meanings.</Description>
        ///       meanings: [
        ///         {
        ///           confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///           createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///           description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///           displayText: string, # Optional. <Description>The display text.</Description>
        ///           expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///           relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///           source: string, # Optional. <Description>The source of the term.</Description>
        ///           status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///           steward: string, # Optional. <Description>The steward of the term.</Description>
        ///           termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///         }
        ///       ], # Optional. <Description>An array of term assignment headers.</Description>
        ///       status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///     }
        ///   ], # Optional. <Description>An array of entity headers that partially updated.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> CreateOrUpdateEntityAsync(string collection, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(collection, nameof(collection));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewCollections.CreateOrUpdateEntity");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateEntityRequest(collection, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Creates or updates an entity to a collection.
        /// Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
        /// Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
        /// </summary>
        /// <param name="collection"> the collection unique name. </param>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="collection"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="collection"/> is an empty string, and was expected to be non-empty. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewCatalog/PurviewCollection/CreateOrUpdateEntity
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   referredEntities: Dictionary&lt;string, AtlasEntity&gt;, # Optional. <Description>The referred entities.</Description>
        ///   entity: {
        ///     attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///     typeName: string, # Optional. <Description>The name of the type.</Description>
        ///     lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///     businessAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>Business Attributes</Description>
        ///     classifications: [
        ///       {
        ///         attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///         typeName: string, # Optional. <Description>The name of the type.</Description>
        ///         lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///         entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///         entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///         removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///         validityPeriods: [
        ///           {
        ///             endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///             startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///             timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///           }
        ///         ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///         source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///         sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///       }
        ///     ], # Optional. <Description>An array of classifications.</Description>
        ///     createTime: number, # Optional. <Description>The created time of the record.</Description>
        ///     createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///     customAttributes: Dictionary&lt;string, string&gt;, # Optional. <Description>Custom Attribute</Description>
        ///     guid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///     homeId: string, # Optional. <Description>The home ID of the entity.</Description>
        ///     isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///     labels: [string], # Optional. <Description>labels</Description>
        ///     meanings: [
        ///       {
        ///         confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///         createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///         description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///         displayText: string, # Optional. <Description>The display text.</Description>
        ///         expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///         relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///         source: string, # Optional. <Description>The source of the term.</Description>
        ///         status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///         steward: string, # Optional. <Description>The steward of the term.</Description>
        ///         termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///       }
        ///     ], # Optional. <Description>An array of term assignment headers indicating the meanings of the entity.</Description>
        ///     provenanceType: number, # Optional. <Description>Used to record the provenance of an instance of an entity or relationship.</Description>
        ///     proxy: boolean, # Optional. <Description>Determines if there&apos;s a proxy.</Description>
        ///     relationshipAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of relationship.</Description>
        ///     status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///     updateTime: number, # Optional. <Description>The update time of the record.</Description>
        ///     updatedBy: string, # Optional. <Description>The user who updated the record.</Description>
        ///     version: number, # Optional. <Description>The version of the entity.</Description>
        ///     source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///     sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///     contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. <Description>The dictionary of contacts for terms. Key could be Expert or Owner.</Description>
        ///   }, # Optional. <Description>An instance of an entity - like hive_table, hive_database.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   guidAssignments: Dictionary&lt;string, string&gt;, # Optional. <Description>A map of GUID assignments with entities.</Description>
        ///   mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. <Description>The entity headers of mutated entities.</Description>
        ///   partialUpdatedEntities: [
        ///     {
        ///       attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///       typeName: string, # Optional. <Description>The name of the type.</Description>
        ///       lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///       classificationNames: [string], # Optional. <Description>An array of classification names.</Description>
        ///       classifications: [
        ///         {
        ///           attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///           typeName: string, # Optional. <Description>The name of the type.</Description>
        ///           lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///           entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///           entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///           removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///           validityPeriods: [
        ///             {
        ///               endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///               startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///               timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///             }
        ///           ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///           source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///           sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///         }
        ///       ], # Optional. <Description>An array of classifications.</Description>
        ///       displayText: string, # Optional. <Description>The display text.</Description>
        ///       guid: string, # Optional. <Description>The GUID of the record.</Description>
        ///       isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///       labels: [string], # Optional. <Description>labels</Description>
        ///       meaningNames: [string], # Optional. <Description>An array of meanings.</Description>
        ///       meanings: [
        ///         {
        ///           confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///           createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///           description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///           displayText: string, # Optional. <Description>The display text.</Description>
        ///           expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///           relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///           source: string, # Optional. <Description>The source of the term.</Description>
        ///           status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///           steward: string, # Optional. <Description>The steward of the term.</Description>
        ///           termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///         }
        ///       ], # Optional. <Description>An array of term assignment headers.</Description>
        ///       status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///     }
        ///   ], # Optional. <Description>An array of entity headers that partially updated.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response CreateOrUpdateEntity(string collection, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(collection, nameof(collection));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewCollections.CreateOrUpdateEntity");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateEntityRequest(collection, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Creates or updates entities in bulk to a collection.
        /// Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
        /// Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
        /// </summary>
        /// <param name="collection"> the collection unique name. </param>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="collection"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="collection"/> is an empty string, and was expected to be non-empty. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewCatalog/PurviewCollection/CreateOrUpdateEntityInBulk
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   referredEntities: Dictionary&lt;string, AtlasEntity&gt;, # Optional. <Description>The referred entities.</Description>
        ///   entities: [
        ///     {
        ///       attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///       typeName: string, # Optional. <Description>The name of the type.</Description>
        ///       lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///       businessAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>Business Attributes</Description>
        ///       classifications: [
        ///         {
        ///           attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///           typeName: string, # Optional. <Description>The name of the type.</Description>
        ///           lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///           entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///           entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///           removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///           validityPeriods: [
        ///             {
        ///               endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///               startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///               timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///             }
        ///           ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///           source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///           sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///         }
        ///       ], # Optional. <Description>An array of classifications.</Description>
        ///       createTime: number, # Optional. <Description>The created time of the record.</Description>
        ///       createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///       customAttributes: Dictionary&lt;string, string&gt;, # Optional. <Description>Custom Attribute</Description>
        ///       guid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///       homeId: string, # Optional. <Description>The home ID of the entity.</Description>
        ///       isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///       labels: [string], # Optional. <Description>labels</Description>
        ///       meanings: [
        ///         {
        ///           confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///           createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///           description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///           displayText: string, # Optional. <Description>The display text.</Description>
        ///           expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///           relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///           source: string, # Optional. <Description>The source of the term.</Description>
        ///           status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///           steward: string, # Optional. <Description>The steward of the term.</Description>
        ///           termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///         }
        ///       ], # Optional. <Description>An array of term assignment headers indicating the meanings of the entity.</Description>
        ///       provenanceType: number, # Optional. <Description>Used to record the provenance of an instance of an entity or relationship.</Description>
        ///       proxy: boolean, # Optional. <Description>Determines if there&apos;s a proxy.</Description>
        ///       relationshipAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of relationship.</Description>
        ///       status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///       updateTime: number, # Optional. <Description>The update time of the record.</Description>
        ///       updatedBy: string, # Optional. <Description>The user who updated the record.</Description>
        ///       version: number, # Optional. <Description>The version of the entity.</Description>
        ///       source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///       sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///       contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. <Description>The dictionary of contacts for terms. Key could be Expert or Owner.</Description>
        ///     }
        ///   ], # Optional. <Description>An array of entities.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   guidAssignments: Dictionary&lt;string, string&gt;, # Optional. <Description>A map of GUID assignments with entities.</Description>
        ///   mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. <Description>The entity headers of mutated entities.</Description>
        ///   partialUpdatedEntities: [
        ///     {
        ///       attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///       typeName: string, # Optional. <Description>The name of the type.</Description>
        ///       lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///       classificationNames: [string], # Optional. <Description>An array of classification names.</Description>
        ///       classifications: [
        ///         {
        ///           attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///           typeName: string, # Optional. <Description>The name of the type.</Description>
        ///           lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///           entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///           entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///           removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///           validityPeriods: [
        ///             {
        ///               endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///               startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///               timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///             }
        ///           ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///           source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///           sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///         }
        ///       ], # Optional. <Description>An array of classifications.</Description>
        ///       displayText: string, # Optional. <Description>The display text.</Description>
        ///       guid: string, # Optional. <Description>The GUID of the record.</Description>
        ///       isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///       labels: [string], # Optional. <Description>labels</Description>
        ///       meaningNames: [string], # Optional. <Description>An array of meanings.</Description>
        ///       meanings: [
        ///         {
        ///           confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///           createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///           description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///           displayText: string, # Optional. <Description>The display text.</Description>
        ///           expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///           relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///           source: string, # Optional. <Description>The source of the term.</Description>
        ///           status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///           steward: string, # Optional. <Description>The steward of the term.</Description>
        ///           termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///         }
        ///       ], # Optional. <Description>An array of term assignment headers.</Description>
        ///       status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///     }
        ///   ], # Optional. <Description>An array of entity headers that partially updated.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> CreateOrUpdateEntityInBulkAsync(string collection, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(collection, nameof(collection));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewCollections.CreateOrUpdateEntityInBulk");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateEntityInBulkRequest(collection, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Creates or updates entities in bulk to a collection.
        /// Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
        /// Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
        /// </summary>
        /// <param name="collection"> the collection unique name. </param>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="collection"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="collection"/> is an empty string, and was expected to be non-empty. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewCatalog/PurviewCollection/CreateOrUpdateEntityInBulk
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   referredEntities: Dictionary&lt;string, AtlasEntity&gt;, # Optional. <Description>The referred entities.</Description>
        ///   entities: [
        ///     {
        ///       attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///       typeName: string, # Optional. <Description>The name of the type.</Description>
        ///       lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///       businessAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>Business Attributes</Description>
        ///       classifications: [
        ///         {
        ///           attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///           typeName: string, # Optional. <Description>The name of the type.</Description>
        ///           lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///           entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///           entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///           removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///           validityPeriods: [
        ///             {
        ///               endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///               startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///               timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///             }
        ///           ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///           source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///           sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///         }
        ///       ], # Optional. <Description>An array of classifications.</Description>
        ///       createTime: number, # Optional. <Description>The created time of the record.</Description>
        ///       createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///       customAttributes: Dictionary&lt;string, string&gt;, # Optional. <Description>Custom Attribute</Description>
        ///       guid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///       homeId: string, # Optional. <Description>The home ID of the entity.</Description>
        ///       isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///       labels: [string], # Optional. <Description>labels</Description>
        ///       meanings: [
        ///         {
        ///           confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///           createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///           description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///           displayText: string, # Optional. <Description>The display text.</Description>
        ///           expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///           relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///           source: string, # Optional. <Description>The source of the term.</Description>
        ///           status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///           steward: string, # Optional. <Description>The steward of the term.</Description>
        ///           termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///         }
        ///       ], # Optional. <Description>An array of term assignment headers indicating the meanings of the entity.</Description>
        ///       provenanceType: number, # Optional. <Description>Used to record the provenance of an instance of an entity or relationship.</Description>
        ///       proxy: boolean, # Optional. <Description>Determines if there&apos;s a proxy.</Description>
        ///       relationshipAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of relationship.</Description>
        ///       status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///       updateTime: number, # Optional. <Description>The update time of the record.</Description>
        ///       updatedBy: string, # Optional. <Description>The user who updated the record.</Description>
        ///       version: number, # Optional. <Description>The version of the entity.</Description>
        ///       source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///       sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///       contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. <Description>The dictionary of contacts for terms. Key could be Expert or Owner.</Description>
        ///     }
        ///   ], # Optional. <Description>An array of entities.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   guidAssignments: Dictionary&lt;string, string&gt;, # Optional. <Description>A map of GUID assignments with entities.</Description>
        ///   mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. <Description>The entity headers of mutated entities.</Description>
        ///   partialUpdatedEntities: [
        ///     {
        ///       attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///       typeName: string, # Optional. <Description>The name of the type.</Description>
        ///       lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///       classificationNames: [string], # Optional. <Description>An array of classification names.</Description>
        ///       classifications: [
        ///         {
        ///           attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///           typeName: string, # Optional. <Description>The name of the type.</Description>
        ///           lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///           entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///           entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///           removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///           validityPeriods: [
        ///             {
        ///               endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///               startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///               timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///             }
        ///           ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///           source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///           sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///         }
        ///       ], # Optional. <Description>An array of classifications.</Description>
        ///       displayText: string, # Optional. <Description>The display text.</Description>
        ///       guid: string, # Optional. <Description>The GUID of the record.</Description>
        ///       isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///       labels: [string], # Optional. <Description>labels</Description>
        ///       meaningNames: [string], # Optional. <Description>An array of meanings.</Description>
        ///       meanings: [
        ///         {
        ///           confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///           createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///           description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///           displayText: string, # Optional. <Description>The display text.</Description>
        ///           expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///           relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///           source: string, # Optional. <Description>The source of the term.</Description>
        ///           status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///           steward: string, # Optional. <Description>The steward of the term.</Description>
        ///           termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///         }
        ///       ], # Optional. <Description>An array of term assignment headers.</Description>
        ///       status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///     }
        ///   ], # Optional. <Description>An array of entity headers that partially updated.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response CreateOrUpdateEntityInBulk(string collection, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(collection, nameof(collection));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewCollections.CreateOrUpdateEntityInBulk");
            scope.Start();
            try
            {
                using HttpMessage message = CreateCreateOrUpdateEntityInBulkRequest(collection, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Move existing entities to the target collection. </summary>
        /// <param name="collection"> the collection unique name. </param>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="collection"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="collection"/> is an empty string, and was expected to be non-empty. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewCatalog/PurviewCollection/MoveEntitiesToCollection
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   entityGuids: [string], # Optional. <Description>An array of entity guids to be moved to target collection.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   guidAssignments: Dictionary&lt;string, string&gt;, # Optional. <Description>A map of GUID assignments with entities.</Description>
        ///   mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. <Description>The entity headers of mutated entities.</Description>
        ///   partialUpdatedEntities: [
        ///     {
        ///       attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///       typeName: string, # Optional. <Description>The name of the type.</Description>
        ///       lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///       classificationNames: [string], # Optional. <Description>An array of classification names.</Description>
        ///       classifications: [
        ///         {
        ///           attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///           typeName: string, # Optional. <Description>The name of the type.</Description>
        ///           lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///           entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///           entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///           removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///           validityPeriods: [
        ///             {
        ///               endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///               startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///               timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///             }
        ///           ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///           source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///           sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///         }
        ///       ], # Optional. <Description>An array of classifications.</Description>
        ///       displayText: string, # Optional. <Description>The display text.</Description>
        ///       guid: string, # Optional. <Description>The GUID of the record.</Description>
        ///       isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///       labels: [string], # Optional. <Description>labels</Description>
        ///       meaningNames: [string], # Optional. <Description>An array of meanings.</Description>
        ///       meanings: [
        ///         {
        ///           confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///           createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///           description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///           displayText: string, # Optional. <Description>The display text.</Description>
        ///           expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///           relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///           source: string, # Optional. <Description>The source of the term.</Description>
        ///           status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///           steward: string, # Optional. <Description>The steward of the term.</Description>
        ///           termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///         }
        ///       ], # Optional. <Description>An array of term assignment headers.</Description>
        ///       status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///     }
        ///   ], # Optional. <Description>An array of entity headers that partially updated.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> MoveEntitiesToCollectionAsync(string collection, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(collection, nameof(collection));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewCollections.MoveEntitiesToCollection");
            scope.Start();
            try
            {
                using HttpMessage message = CreateMoveEntitiesToCollectionRequest(collection, content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Move existing entities to the target collection. </summary>
        /// <param name="collection"> the collection unique name. </param>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="collection"/> or <paramref name="content"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="collection"/> is an empty string, and was expected to be non-empty. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request and response payloads.
        /// Additional information can be found in the service REST API documentation:
        /// https://docs.microsoft.com/rest/api/PurviewCatalog/PurviewCollection/MoveEntitiesToCollection
        /// Schema for <c>Request Body</c>:
        /// <code>{
        ///   entityGuids: [string], # Optional. <Description>An array of entity guids to be moved to target collection.</Description>
        /// }
        /// </code>
        /// Schema for <c>Response Body</c>:
        /// <code>{
        ///   guidAssignments: Dictionary&lt;string, string&gt;, # Optional. <Description>A map of GUID assignments with entities.</Description>
        ///   mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. <Description>The entity headers of mutated entities.</Description>
        ///   partialUpdatedEntities: [
        ///     {
        ///       attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///       typeName: string, # Optional. <Description>The name of the type.</Description>
        ///       lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///       classificationNames: [string], # Optional. <Description>An array of classification names.</Description>
        ///       classifications: [
        ///         {
        ///           attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>The attributes of the struct.</Description>
        ///           typeName: string, # Optional. <Description>The name of the type.</Description>
        ///           lastModifiedTS: string, # Optional. <Description>ETag for concurrency control.</Description>
        ///           entityGuid: string, # Optional. <Description>The GUID of the entity.</Description>
        ///           entityStatus: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///           removePropagationsOnEntityDelete: boolean, # Optional. <Description>Determines if propagations will be removed on entity deletion.</Description>
        ///           validityPeriods: [
        ///             {
        ///               endTime: string, # Optional. <Description>The end of the time boundary.</Description>
        ///               startTime: string, # Optional. <Description>The start of the time boundary.</Description>
        ///               timeZone: string, # Optional. <Description>The timezone of the time boundary.</Description>
        ///             }
        ///           ], # Optional. <Description>An array of time boundaries indicating validity periods.</Description>
        ///           source: string, # Optional. <Description>indicate the source who create the classification detail</Description>
        ///           sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. <Description>more detail on source information</Description>
        ///         }
        ///       ], # Optional. <Description>An array of classifications.</Description>
        ///       displayText: string, # Optional. <Description>The display text.</Description>
        ///       guid: string, # Optional. <Description>The GUID of the record.</Description>
        ///       isIncomplete: boolean, # Optional. <Description>Whether it is a shell entity</Description>
        ///       labels: [string], # Optional. <Description>labels</Description>
        ///       meaningNames: [string], # Optional. <Description>An array of meanings.</Description>
        ///       meanings: [
        ///         {
        ///           confidence: number, # Optional. <Description>The confidence of the term assignment.</Description>
        ///           createdBy: string, # Optional. <Description>The user who created the record.</Description>
        ///           description: string, # Optional. <Description>The description of the term assignment.</Description>
        ///           displayText: string, # Optional. <Description>The display text.</Description>
        ///           expression: string, # Optional. <Description>The expression of the term assignment.</Description>
        ///           relationGuid: string, # Optional. <Description>The GUID of the relationship.</Description>
        ///           source: string, # Optional. <Description>The source of the term.</Description>
        ///           status: &quot;DISCOVERED&quot; | &quot;PROPOSED&quot; | &quot;IMPORTED&quot; | &quot;VALIDATED&quot; | &quot;DEPRECATED&quot; | &quot;OBSOLETE&quot; | &quot;OTHER&quot;, # Optional. <Description>The status of terms assignment.</Description>
        ///           steward: string, # Optional. <Description>The steward of the term.</Description>
        ///           termGuid: string, # Optional. <Description>The GUID of the term.</Description>
        ///         }
        ///       ], # Optional. <Description>An array of term assignment headers.</Description>
        ///       status: &quot;ACTIVE&quot; | &quot;DELETED&quot;, # Optional. <Description>Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.</Description>
        ///     }
        ///   ], # Optional. <Description>An array of entity headers that partially updated.</Description>
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response MoveEntitiesToCollection(string collection, RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(collection, nameof(collection));
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("PurviewCollections.MoveEntitiesToCollection");
            scope.Start();
            try
            {
                using HttpMessage message = CreateMoveEntitiesToCollectionRequest(collection, content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        internal HttpMessage CreateCreateOrUpdateEntityRequest(string collection, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRaw("/catalog/api", false);
            uri.AppendPath("/collections/", false);
            uri.AppendPath(collection, true);
            uri.AppendPath("/entity", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateCreateOrUpdateEntityInBulkRequest(string collection, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRaw("/catalog/api", false);
            uri.AppendPath("/collections/", false);
            uri.AppendPath(collection, true);
            uri.AppendPath("/entity/bulk", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateMoveEntitiesToCollectionRequest(string collection, RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendRaw("/catalog/api", false);
            uri.AppendPath("/collections/", false);
            uri.AppendPath(collection, true);
            uri.AppendPath("/entity/moveHere", false);
            uri.AppendQuery("api-version", _apiVersion, true);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        private static ResponseClassifier _responseClassifier200;
        private static ResponseClassifier ResponseClassifier200 => _responseClassifier200 ??= new StatusCodeClassifier(stackalloc ushort[] { 200 });
    }
}
