// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    public partial class BrowseResultValue
    {
        internal static BrowseResultValue DeserializeBrowseResultValue(JsonElement element)
        {
            Optional<string> entityType = default;
            Optional<string> id = default;
            Optional<bool> isLeaf = default;
            Optional<string> name = default;
            Optional<IReadOnlyList<BrowseResultOwner>> owner = default;
            Optional<string> path = default;
            Optional<string> qualifiedName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("entityType"))
                {
                    entityType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isLeaf"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isLeaf = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("owner"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<BrowseResultOwner> array = new List<BrowseResultOwner>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BrowseResultOwner.DeserializeBrowseResultOwner(item));
                    }
                    owner = array;
                    continue;
                }
                if (property.NameEquals("path"))
                {
                    path = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("qualifiedName"))
                {
                    qualifiedName = property.Value.GetString();
                    continue;
                }
            }
            return new BrowseResultValue(entityType.Value, id.Value, Optional.ToNullable(isLeaf), name.Value, Optional.ToList(owner), path.Value, qualifiedName.Value);
        }
    }
}
