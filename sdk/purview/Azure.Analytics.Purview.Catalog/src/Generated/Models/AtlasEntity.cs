// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    /// <summary> An instance of an entity - like hive_table, hive_database. </summary>
    public partial class AtlasEntity : AtlasStruct
    {
        /// <summary> Initializes a new instance of AtlasEntity. </summary>
        public AtlasEntity()
        {
            Classifications = new ChangeTrackingList<AtlasClassification>();
            Meanings = new ChangeTrackingList<AtlasTermAssignmentHeader>();
            RelationshipAttributes = new ChangeTrackingDictionary<string, object>();
            SourceDetails = new ChangeTrackingDictionary<string, object>();
            Contacts = new ChangeTrackingDictionary<string, IList<ContactBasic>>();
        }

        /// <summary> Initializes a new instance of AtlasEntity. </summary>
        /// <param name="attributes"> The attributes of the struct. </param>
        /// <param name="typeName"> The name of the type. </param>
        /// <param name="lastModifiedTS"> ETag for concurrency control. </param>
        /// <param name="classifications"> An array of classifications. </param>
        /// <param name="createTime"> The created time of the record. </param>
        /// <param name="createdBy"> The user who created the record. </param>
        /// <param name="guid"> The GUID of the entity. </param>
        /// <param name="homeId"> The home ID of the entity. </param>
        /// <param name="meanings"> An array of term assignment headers indicating the meanings of the entity. </param>
        /// <param name="provenanceType"> Used to record the provenance of an instance of an entity or relationship. </param>
        /// <param name="proxy"> Determines if there&apos;s a proxy. </param>
        /// <param name="relationshipAttributes"> The attributes of relationship. </param>
        /// <param name="status"> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </param>
        /// <param name="updateTime"> The update time of the record. </param>
        /// <param name="updatedBy"> The user who updated the record. </param>
        /// <param name="version"> The version of the entity. </param>
        /// <param name="source"> indicate the source who create the classification detail. </param>
        /// <param name="sourceDetails"> more detail on source information. </param>
        /// <param name="contacts"> The dictionary of contacts for terms. Key could be Expert or Owner. </param>
        internal AtlasEntity(IDictionary<string, object> attributes, string typeName, string lastModifiedTS, IList<AtlasClassification> classifications, float? createTime, string createdBy, string guid, string homeId, IList<AtlasTermAssignmentHeader> meanings, float? provenanceType, bool? proxy, IDictionary<string, object> relationshipAttributes, Status? status, float? updateTime, string updatedBy, float? version, string source, IDictionary<string, object> sourceDetails, IDictionary<string, IList<ContactBasic>> contacts) : base(attributes, typeName, lastModifiedTS)
        {
            Classifications = classifications;
            CreateTime = createTime;
            CreatedBy = createdBy;
            Guid = guid;
            HomeId = homeId;
            Meanings = meanings;
            ProvenanceType = provenanceType;
            Proxy = proxy;
            RelationshipAttributes = relationshipAttributes;
            Status = status;
            UpdateTime = updateTime;
            UpdatedBy = updatedBy;
            Version = version;
            Source = source;
            SourceDetails = sourceDetails;
            Contacts = contacts;
        }

        /// <summary> An array of classifications. </summary>
        public IList<AtlasClassification> Classifications { get; }
        /// <summary> The created time of the record. </summary>
        public float? CreateTime { get; set; }
        /// <summary> The user who created the record. </summary>
        public string CreatedBy { get; set; }
        /// <summary> The GUID of the entity. </summary>
        public string Guid { get; set; }
        /// <summary> The home ID of the entity. </summary>
        public string HomeId { get; set; }
        /// <summary> An array of term assignment headers indicating the meanings of the entity. </summary>
        public IList<AtlasTermAssignmentHeader> Meanings { get; }
        /// <summary> Used to record the provenance of an instance of an entity or relationship. </summary>
        public float? ProvenanceType { get; set; }
        /// <summary> Determines if there&apos;s a proxy. </summary>
        public bool? Proxy { get; set; }
        /// <summary> The attributes of relationship. </summary>
        public IDictionary<string, object> RelationshipAttributes { get; }
        /// <summary> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </summary>
        public Status? Status { get; set; }
        /// <summary> The update time of the record. </summary>
        public float? UpdateTime { get; set; }
        /// <summary> The user who updated the record. </summary>
        public string UpdatedBy { get; set; }
        /// <summary> The version of the entity. </summary>
        public float? Version { get; set; }
        /// <summary> indicate the source who create the classification detail. </summary>
        public string Source { get; set; }
        /// <summary> more detail on source information. </summary>
        public IDictionary<string, object> SourceDetails { get; }
        /// <summary> The dictionary of contacts for terms. Key could be Expert or Owner. </summary>
        public IDictionary<string, IList<ContactBasic>> Contacts { get; }
    }
}
