// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Analytics.Purview.Catalog.Models
{
    /// <summary> single-valued attribute or multi-valued attribute. </summary>
    public readonly partial struct Cardinality : IEquatable<Cardinality>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="Cardinality"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public Cardinality(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SingleValue = "SINGLE";
        private const string ListValue = "LIST";
        private const string SETValue = "SET";

        /// <summary> SINGLE. </summary>
        public static Cardinality Single { get; } = new Cardinality(SingleValue);
        /// <summary> LIST. </summary>
        public static Cardinality List { get; } = new Cardinality(ListValue);
        /// <summary> SET. </summary>
        public static Cardinality SET { get; } = new Cardinality(SETValue);
        /// <summary> Determines if two <see cref="Cardinality"/> values are the same. </summary>
        public static bool operator ==(Cardinality left, Cardinality right) => left.Equals(right);
        /// <summary> Determines if two <see cref="Cardinality"/> values are not the same. </summary>
        public static bool operator !=(Cardinality left, Cardinality right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="Cardinality"/>. </summary>
        public static implicit operator Cardinality(string value) => new Cardinality(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is Cardinality other && Equals(other);
        /// <inheritdoc />
        public bool Equals(Cardinality other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
