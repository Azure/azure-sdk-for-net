// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    /// <summary> Paginated-list, for returning search results. </summary>
    public partial class PList
    {
        /// <summary> Initializes a new instance of PList. </summary>
        internal PList()
        {
            List = new ChangeTrackingList<object>();
        }

        /// <summary> Initializes a new instance of PList. </summary>
        /// <param name="list"> An array of objects. </param>
        /// <param name="pageSize"> The size of the page. </param>
        /// <param name="sortBy"> The sorted by field. </param>
        /// <param name="sortType"> to specify whether the result should be sorted? If yes, whether asc or desc. </param>
        /// <param name="startIndex"> The start index of the page. </param>
        /// <param name="totalCount"> The total count of items. </param>
        internal PList(IReadOnlyList<object> list, int? pageSize, string sortBy, SortType? sortType, long? startIndex, long? totalCount)
        {
            List = list;
            PageSize = pageSize;
            SortBy = sortBy;
            SortType = sortType;
            StartIndex = startIndex;
            TotalCount = totalCount;
        }

        /// <summary> An array of objects. </summary>
        public IReadOnlyList<object> List { get; }
        /// <summary> The size of the page. </summary>
        public int? PageSize { get; }
        /// <summary> The sorted by field. </summary>
        public string SortBy { get; }
        /// <summary> to specify whether the result should be sorted? If yes, whether asc or desc. </summary>
        public SortType? SortType { get; }
        /// <summary> The start index of the page. </summary>
        public long? StartIndex { get; }
        /// <summary> The total count of items. </summary>
        public long? TotalCount { get; }
    }
}
