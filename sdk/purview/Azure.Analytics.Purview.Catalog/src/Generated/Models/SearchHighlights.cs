// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    /// <summary> A highlight list that consists of index fields id ,qualifiedName, name, description, entityType. When the keyword appears in those fields, the value of the field, attached with emphasis mark, is returned as an element of @search.highlights. </summary>
    public partial class SearchHighlights
    {
        /// <summary> Initializes a new instance of SearchHighlights. </summary>
        internal SearchHighlights()
        {
            Id = new ChangeTrackingList<string>();
            QualifiedName = new ChangeTrackingList<string>();
            Name = new ChangeTrackingList<string>();
            Description = new ChangeTrackingList<string>();
            EntityType = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of SearchHighlights. </summary>
        /// <param name="id"></param>
        /// <param name="qualifiedName"></param>
        /// <param name="name"></param>
        /// <param name="description"></param>
        /// <param name="entityType"></param>
        internal SearchHighlights(IReadOnlyList<string> id, IReadOnlyList<string> qualifiedName, IReadOnlyList<string> name, IReadOnlyList<string> description, IReadOnlyList<string> entityType)
        {
            Id = id;
            QualifiedName = qualifiedName;
            Name = name;
            Description = description;
            EntityType = entityType;
        }

        /// <summary> Gets the id. </summary>
        public IReadOnlyList<string> Id { get; }
        /// <summary> Gets the qualified name. </summary>
        public IReadOnlyList<string> QualifiedName { get; }
        /// <summary> Gets the name. </summary>
        public IReadOnlyList<string> Name { get; }
        /// <summary> Gets the description. </summary>
        public IReadOnlyList<string> Description { get; }
        /// <summary> Gets the entity type. </summary>
        public IReadOnlyList<string> EntityType { get; }
    }
}
