// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    public partial class AtlasGlossaryHeader : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DisplayText))
            {
                writer.WritePropertyName("displayText");
                writer.WriteStringValue(DisplayText);
            }
            if (Optional.IsDefined(GlossaryGuid))
            {
                writer.WritePropertyName("glossaryGuid");
                writer.WriteStringValue(GlossaryGuid);
            }
            if (Optional.IsDefined(RelationGuid))
            {
                writer.WritePropertyName("relationGuid");
                writer.WriteStringValue(RelationGuid);
            }
            writer.WriteEndObject();
        }

        internal static AtlasGlossaryHeader DeserializeAtlasGlossaryHeader(JsonElement element)
        {
            Optional<string> displayText = default;
            Optional<string> glossaryGuid = default;
            Optional<string> relationGuid = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("displayText"))
                {
                    displayText = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("glossaryGuid"))
                {
                    glossaryGuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("relationGuid"))
                {
                    relationGuid = property.Value.GetString();
                    continue;
                }
            }
            return new AtlasGlossaryHeader(displayText.Value, glossaryGuid.Value, relationGuid.Value);
        }
    }
}
