// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    public partial class SearchResult
    {
        internal static SearchResult DeserializeSearchResult(JsonElement element)
        {
            Optional<int> searchCount = default;
            Optional<SearchFacetResultValue> searchFacets = default;
            Optional<IReadOnlyList<SearchResultValue>> value = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("@search.count"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    searchCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("@search.facets"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    searchFacets = SearchFacetResultValue.DeserializeSearchFacetResultValue(property.Value);
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchResultValue> array = new List<SearchResultValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchResultValue.DeserializeSearchResultValue(item));
                    }
                    value = array;
                    continue;
                }
            }
            return new SearchResult(Optional.ToNullable(searchCount), searchFacets.Value, Optional.ToList(value));
        }
    }
}
