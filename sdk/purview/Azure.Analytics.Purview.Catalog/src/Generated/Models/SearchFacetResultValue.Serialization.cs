// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    public partial class SearchFacetResultValue
    {
        internal static SearchFacetResultValue DeserializeSearchFacetResultValue(JsonElement element)
        {
            Optional<IReadOnlyList<SearchFacetItemValue>> assetType = default;
            Optional<IReadOnlyList<SearchFacetItemValue>> classification = default;
            Optional<IReadOnlyList<SearchFacetItemValue>> classificationCategory = default;
            Optional<IReadOnlyList<SearchFacetItemValue>> contactId = default;
            Optional<IReadOnlyList<SearchFacetItemValue>> fileExtension = default;
            Optional<IReadOnlyList<SearchFacetItemValue>> label = default;
            Optional<IReadOnlyList<SearchFacetItemValue>> term = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("assetType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    assetType = array;
                    continue;
                }
                if (property.NameEquals("classification"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    classification = array;
                    continue;
                }
                if (property.NameEquals("classificationCategory"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    classificationCategory = array;
                    continue;
                }
                if (property.NameEquals("contactId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    contactId = array;
                    continue;
                }
                if (property.NameEquals("fileExtension"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    fileExtension = array;
                    continue;
                }
                if (property.NameEquals("label"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    label = array;
                    continue;
                }
                if (property.NameEquals("term"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SearchFacetItemValue> array = new List<SearchFacetItemValue>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchFacetItemValue.DeserializeSearchFacetItemValue(item));
                    }
                    term = array;
                    continue;
                }
            }
            return new SearchFacetResultValue(Optional.ToList(assetType), Optional.ToList(classification), Optional.ToList(classificationCategory), Optional.ToList(contactId), Optional.ToList(fileExtension), Optional.ToList(label), Optional.ToList(term));
        }
    }
}
