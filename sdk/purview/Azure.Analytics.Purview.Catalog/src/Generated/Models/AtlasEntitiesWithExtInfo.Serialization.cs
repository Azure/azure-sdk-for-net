// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    public partial class AtlasEntitiesWithExtInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Entities))
            {
                writer.WritePropertyName("entities");
                writer.WriteStartArray();
                foreach (var item in Entities)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ReferredEntities))
            {
                writer.WritePropertyName("referredEntities");
                writer.WriteStartObject();
                foreach (var item in ReferredEntities)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WriteEndObject();
        }

        internal static AtlasEntitiesWithExtInfo DeserializeAtlasEntitiesWithExtInfo(JsonElement element)
        {
            Optional<IList<AtlasEntity>> entities = default;
            Optional<IDictionary<string, AtlasEntity>> referredEntities = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("entities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasEntity> array = new List<AtlasEntity>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasEntity.DeserializeAtlasEntity(item));
                    }
                    entities = array;
                    continue;
                }
                if (property.NameEquals("referredEntities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, AtlasEntity> dictionary = new Dictionary<string, AtlasEntity>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, AtlasEntity.DeserializeAtlasEntity(property0.Value));
                    }
                    referredEntities = dictionary;
                    continue;
                }
            }
            return new AtlasEntitiesWithExtInfo(Optional.ToDictionary(referredEntities), Optional.ToList(entities));
        }
    }
}
