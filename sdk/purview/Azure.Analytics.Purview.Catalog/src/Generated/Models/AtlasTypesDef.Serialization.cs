// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    public partial class AtlasTypesDef : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(ClassificationDefs))
            {
                writer.WritePropertyName("classificationDefs");
                writer.WriteStartArray();
                foreach (var item in ClassificationDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(EntityDefs))
            {
                writer.WritePropertyName("entityDefs");
                writer.WriteStartArray();
                foreach (var item in EntityDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(EnumDefs))
            {
                writer.WritePropertyName("enumDefs");
                writer.WriteStartArray();
                foreach (var item in EnumDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(RelationshipDefs))
            {
                writer.WritePropertyName("relationshipDefs");
                writer.WriteStartArray();
                foreach (var item in RelationshipDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(StructDefs))
            {
                writer.WritePropertyName("structDefs");
                writer.WriteStartArray();
                foreach (var item in StructDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(TermTemplateDefs))
            {
                writer.WritePropertyName("termTemplateDefs");
                writer.WriteStartArray();
                foreach (var item in TermTemplateDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static AtlasTypesDef DeserializeAtlasTypesDef(JsonElement element)
        {
            Optional<IList<AtlasClassificationDef>> classificationDefs = default;
            Optional<IList<AtlasEntityDef>> entityDefs = default;
            Optional<IList<AtlasEnumDef>> enumDefs = default;
            Optional<IList<AtlasRelationshipDef>> relationshipDefs = default;
            Optional<IList<AtlasStructDef>> structDefs = default;
            Optional<IList<TermTemplateDef>> termTemplateDefs = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("classificationDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasClassificationDef> array = new List<AtlasClassificationDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasClassificationDef.DeserializeAtlasClassificationDef(item));
                    }
                    classificationDefs = array;
                    continue;
                }
                if (property.NameEquals("entityDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasEntityDef> array = new List<AtlasEntityDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasEntityDef.DeserializeAtlasEntityDef(item));
                    }
                    entityDefs = array;
                    continue;
                }
                if (property.NameEquals("enumDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasEnumDef> array = new List<AtlasEnumDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasEnumDef.DeserializeAtlasEnumDef(item));
                    }
                    enumDefs = array;
                    continue;
                }
                if (property.NameEquals("relationshipDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasRelationshipDef> array = new List<AtlasRelationshipDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasRelationshipDef.DeserializeAtlasRelationshipDef(item));
                    }
                    relationshipDefs = array;
                    continue;
                }
                if (property.NameEquals("structDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasStructDef> array = new List<AtlasStructDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasStructDef.DeserializeAtlasStructDef(item));
                    }
                    structDefs = array;
                    continue;
                }
                if (property.NameEquals("termTemplateDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<TermTemplateDef> array = new List<TermTemplateDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(TermTemplateDef.DeserializeTermTemplateDef(item));
                    }
                    termTemplateDefs = array;
                    continue;
                }
            }
            return new AtlasTypesDef(Optional.ToList(classificationDefs), Optional.ToList(entityDefs), Optional.ToList(enumDefs), Optional.ToList(relationshipDefs), Optional.ToList(structDefs), Optional.ToList(termTemplateDefs));
        }
    }
}
