// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Analytics.Purview.Catalog.Models
{
    /// <summary>
    /// The relationshipEndDef represents an end of the relationship. The end of the relationship is defined by a type, an
    /// attribute name, cardinality and whether it  is the container end of the relationship.
    /// </summary>
    public partial class AtlasRelationshipAttributeDef : AtlasAttributeDef
    {
        /// <summary> Initializes a new instance of AtlasRelationshipAttributeDef. </summary>
        public AtlasRelationshipAttributeDef()
        {
        }

        /// <summary> Initializes a new instance of AtlasRelationshipAttributeDef. </summary>
        /// <param name="cardinality"> single-valued attribute or multi-valued attribute. </param>
        /// <param name="constraints"> An array of constraints. </param>
        /// <param name="defaultValue"> The default value of the attribute. </param>
        /// <param name="description"> The description of the attribute. </param>
        /// <param name="includeInNotification"> Determines if it is included in notification. </param>
        /// <param name="isIndexable"> Determines if it is indexable. </param>
        /// <param name="isOptional"> Determines if it is optional. </param>
        /// <param name="isUnique"> Determines if it unique. </param>
        /// <param name="name"> The name of the attribute. </param>
        /// <param name="options"> The options for the attribute. </param>
        /// <param name="typeName"> The name of the type. </param>
        /// <param name="valuesMaxCount"> The maximum count of the values. </param>
        /// <param name="valuesMinCount"> The minimum count of the values. </param>
        /// <param name="isLegacyAttribute"> Determines if it is a legacy attribute. </param>
        /// <param name="relationshipTypeName"> The name of the relationship type. </param>
        internal AtlasRelationshipAttributeDef(Cardinality? cardinality, IList<AtlasConstraintDef> constraints, string defaultValue, string description, bool? includeInNotification, bool? isIndexable, bool? isOptional, bool? isUnique, string name, IDictionary<string, string> options, string typeName, int? valuesMaxCount, int? valuesMinCount, bool? isLegacyAttribute, string relationshipTypeName) : base(cardinality, constraints, defaultValue, description, includeInNotification, isIndexable, isOptional, isUnique, name, options, typeName, valuesMaxCount, valuesMinCount)
        {
            IsLegacyAttribute = isLegacyAttribute;
            RelationshipTypeName = relationshipTypeName;
        }

        /// <summary> Determines if it is a legacy attribute. </summary>
        public bool? IsLegacyAttribute { get; set; }
        /// <summary> The name of the relationship type. </summary>
        public string RelationshipTypeName { get; set; }
    }
}
