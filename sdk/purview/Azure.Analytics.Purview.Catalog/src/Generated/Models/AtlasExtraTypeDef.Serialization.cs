// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Catalog.Models
{
    public partial class AtlasExtraTypeDef : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(EntityTypes))
            {
                writer.WritePropertyName("entityTypes");
                writer.WriteStartArray();
                foreach (var item in EntityTypes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(SubTypes))
            {
                writer.WritePropertyName("subTypes");
                writer.WriteStartArray();
                foreach (var item in SubTypes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(SuperTypes))
            {
                writer.WritePropertyName("superTypes");
                writer.WriteStartArray();
                foreach (var item in SuperTypes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(RelationshipAttributeDefs))
            {
                writer.WritePropertyName("relationshipAttributeDefs");
                writer.WriteStartArray();
                foreach (var item in RelationshipAttributeDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(DefaultValue))
            {
                writer.WritePropertyName("defaultValue");
                writer.WriteStringValue(DefaultValue);
            }
            if (Optional.IsCollectionDefined(ElementDefs))
            {
                writer.WritePropertyName("elementDefs");
                writer.WriteStartArray();
                foreach (var item in ElementDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(EndDef1))
            {
                writer.WritePropertyName("endDef1");
                writer.WriteObjectValue(EndDef1);
            }
            if (Optional.IsDefined(EndDef2))
            {
                writer.WritePropertyName("endDef2");
                writer.WriteObjectValue(EndDef2);
            }
            if (Optional.IsDefined(RelationshipCategory))
            {
                writer.WritePropertyName("relationshipCategory");
                writer.WriteStringValue(RelationshipCategory.Value.ToString());
            }
            if (Optional.IsDefined(RelationshipLabel))
            {
                writer.WritePropertyName("relationshipLabel");
                writer.WriteStringValue(RelationshipLabel);
            }
            if (Optional.IsCollectionDefined(AttributeDefs))
            {
                writer.WritePropertyName("attributeDefs");
                writer.WriteStartArray();
                foreach (var item in AttributeDefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static AtlasExtraTypeDef DeserializeAtlasExtraTypeDef(JsonElement element)
        {
            Optional<IList<string>> entityTypes = default;
            Optional<IList<string>> subTypes = default;
            Optional<IList<string>> superTypes = default;
            Optional<IList<AtlasRelationshipAttributeDef>> relationshipAttributeDefs = default;
            Optional<string> defaultValue = default;
            Optional<IList<AtlasEnumElementDef>> elementDefs = default;
            Optional<AtlasRelationshipEndDef> endDef1 = default;
            Optional<AtlasRelationshipEndDef> endDef2 = default;
            Optional<RelationshipCategory> relationshipCategory = default;
            Optional<string> relationshipLabel = default;
            Optional<IList<AtlasAttributeDef>> attributeDefs = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("entityTypes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    entityTypes = array;
                    continue;
                }
                if (property.NameEquals("subTypes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    subTypes = array;
                    continue;
                }
                if (property.NameEquals("superTypes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    superTypes = array;
                    continue;
                }
                if (property.NameEquals("relationshipAttributeDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasRelationshipAttributeDef> array = new List<AtlasRelationshipAttributeDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasRelationshipAttributeDef.DeserializeAtlasRelationshipAttributeDef(item));
                    }
                    relationshipAttributeDefs = array;
                    continue;
                }
                if (property.NameEquals("defaultValue"))
                {
                    defaultValue = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("elementDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasEnumElementDef> array = new List<AtlasEnumElementDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasEnumElementDef.DeserializeAtlasEnumElementDef(item));
                    }
                    elementDefs = array;
                    continue;
                }
                if (property.NameEquals("endDef1"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endDef1 = AtlasRelationshipEndDef.DeserializeAtlasRelationshipEndDef(property.Value);
                    continue;
                }
                if (property.NameEquals("endDef2"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endDef2 = AtlasRelationshipEndDef.DeserializeAtlasRelationshipEndDef(property.Value);
                    continue;
                }
                if (property.NameEquals("relationshipCategory"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    relationshipCategory = new RelationshipCategory(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("relationshipLabel"))
                {
                    relationshipLabel = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("attributeDefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AtlasAttributeDef> array = new List<AtlasAttributeDef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AtlasAttributeDef.DeserializeAtlasAttributeDef(item));
                    }
                    attributeDefs = array;
                    continue;
                }
            }
            return new AtlasExtraTypeDef(Optional.ToList(entityTypes), Optional.ToList(subTypes), Optional.ToList(superTypes), Optional.ToList(relationshipAttributeDefs), defaultValue.Value, Optional.ToList(elementDefs), endDef1.Value, endDef2.Value, Optional.ToNullable(relationshipCategory), relationshipLabel.Value, Optional.ToList(attributeDefs));
        }
    }
}
