// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Analytics.Purview.Scanning.Tests
{
    public partial class PurviewClassificationRuleClientTests : AnalyticsPurviewScanningTestBase
    {
        public PurviewClassificationRuleClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetProperties_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            Response response = await client.GetPropertiesAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetProperties_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            Response response = await client.GetPropertiesAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdate_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            using RequestContent content = null;
            Response response = await client.CreateOrUpdateAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdate_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    description = "<description>",
                    classificationName = "<classificationName>",
                    ruleStatus = "Enabled",
                },
                kind = "System",
            });
            Response response = await client.CreateOrUpdateAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Delete_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            Response response = await client.DeleteAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Delete_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            Response response = await client.DeleteAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TagVersion_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            Response response = await client.TagVersionAsync(1234, "Keep", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TagVersion_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            Response response = await client.TagVersionAsync(1234, "Keep", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetVersions_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            await foreach (BinaryData item in client.GetVersionsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetVersions_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            PurviewClassificationRuleClient client = CreatePurviewClassificationRuleClient(endpoint, "<ClassificationRuleName>", credential);

            await foreach (BinaryData item in client.GetVersionsAsync(null))
            {
            }
        }
    }
}
