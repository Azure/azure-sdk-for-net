<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetPropertiesAsync(RequestContext)">
<example>
This sample shows how to call GetPropertiesAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

Response response = await client.GetPropertiesAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>SystemClassificationRule</summary>Schema for <c>SystemClassificationRule</c>:
<code>{
  properties: {
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: System, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 1 more JSON objects</summary><details><summary>CustomClassificationRule</summary>Schema for <c>CustomClassificationRule</c>:
<code>{
  properties: {
    minimumPercentageMatch: number, # Optional.
    classificationAction: &quot;Keep&quot; | &quot;Delete&quot;, # Optional.
    dataPatterns: [
      {
        kind: &quot;Regex&quot;, # Required.
      }
    ], # Optional.
    columnPatterns: [ClassificationRulePattern], # Optional.
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: Custom, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="GetProperties(RequestContext)">
<example>
This sample shows how to call GetProperties and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

Response response = client.GetProperties();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>SystemClassificationRule</summary>Schema for <c>SystemClassificationRule</c>:
<code>{
  properties: {
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: System, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 1 more JSON objects</summary><details><summary>CustomClassificationRule</summary>Schema for <c>CustomClassificationRule</c>:
<code>{
  properties: {
    minimumPercentageMatch: number, # Optional.
    classificationAction: &quot;Keep&quot; | &quot;Delete&quot;, # Optional.
    dataPatterns: [
      {
        kind: &quot;Regex&quot;, # Required.
      }
    ], # Optional.
    columnPatterns: [ClassificationRulePattern], # Optional.
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: Custom, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="CreateOrUpdateAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

var data = new {
    kind = "System",
};

Response response = await client.CreateOrUpdateAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

var data = new {
    properties = new {
        description = "<description>",
        classificationName = "<classificationName>",
        ruleStatus = "Enabled",
    },
    kind = "System",
};

Response response = await client.CreateOrUpdateAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>SystemClassificationRule</summary>Schema for <c>SystemClassificationRule</c>:
<code>{
  properties: {
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: System, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 1 more JSON objects</summary><details><summary>CustomClassificationRule</summary>Schema for <c>CustomClassificationRule</c>:
<code>{
  properties: {
    minimumPercentageMatch: number, # Optional.
    classificationAction: &quot;Keep&quot; | &quot;Delete&quot;, # Optional.
    dataPatterns: [
      {
        kind: &quot;Regex&quot;, # Required.
      }
    ], # Optional.
    columnPatterns: [ClassificationRulePattern], # Optional.
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: Custom, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>SystemClassificationRule</summary>Schema for <c>SystemClassificationRule</c>:
<code>{
  properties: {
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: System, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 1 more JSON objects</summary><details><summary>CustomClassificationRule</summary>Schema for <c>CustomClassificationRule</c>:
<code>{
  properties: {
    minimumPercentageMatch: number, # Optional.
    classificationAction: &quot;Keep&quot; | &quot;Delete&quot;, # Optional.
    dataPatterns: [
      {
        kind: &quot;Regex&quot;, # Required.
      }
    ], # Optional.
    columnPatterns: [ClassificationRulePattern], # Optional.
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: Custom, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="CreateOrUpdate(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

var data = new {
    kind = "System",
};

Response response = client.CreateOrUpdate(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

var data = new {
    properties = new {
        description = "<description>",
        classificationName = "<classificationName>",
        ruleStatus = "Enabled",
    },
    kind = "System",
};

Response response = client.CreateOrUpdate(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>SystemClassificationRule</summary>Schema for <c>SystemClassificationRule</c>:
<code>{
  properties: {
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: System, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 1 more JSON objects</summary><details><summary>CustomClassificationRule</summary>Schema for <c>CustomClassificationRule</c>:
<code>{
  properties: {
    minimumPercentageMatch: number, # Optional.
    classificationAction: &quot;Keep&quot; | &quot;Delete&quot;, # Optional.
    dataPatterns: [
      {
        kind: &quot;Regex&quot;, # Required.
      }
    ], # Optional.
    columnPatterns: [ClassificationRulePattern], # Optional.
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: Custom, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>SystemClassificationRule</summary>Schema for <c>SystemClassificationRule</c>:
<code>{
  properties: {
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: System, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 1 more JSON objects</summary><details><summary>CustomClassificationRule</summary>Schema for <c>CustomClassificationRule</c>:
<code>{
  properties: {
    minimumPercentageMatch: number, # Optional.
    classificationAction: &quot;Keep&quot; | &quot;Delete&quot;, # Optional.
    dataPatterns: [
      {
        kind: &quot;Regex&quot;, # Required.
      }
    ], # Optional.
    columnPatterns: [ClassificationRulePattern], # Optional.
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: Custom, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="DeleteAsync(RequestContext)">
<example>
This sample shows how to call DeleteAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

Response response = await client.DeleteAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>SystemClassificationRule</summary>Schema for <c>SystemClassificationRule</c>:
<code>{
  properties: {
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: System, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 1 more JSON objects</summary><details><summary>CustomClassificationRule</summary>Schema for <c>CustomClassificationRule</c>:
<code>{
  properties: {
    minimumPercentageMatch: number, # Optional.
    classificationAction: &quot;Keep&quot; | &quot;Delete&quot;, # Optional.
    dataPatterns: [
      {
        kind: &quot;Regex&quot;, # Required.
      }
    ], # Optional.
    columnPatterns: [ClassificationRulePattern], # Optional.
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: Custom, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="Delete(RequestContext)">
<example>
This sample shows how to call Delete and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

Response response = client.Delete();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>SystemClassificationRule</summary>Schema for <c>SystemClassificationRule</c>:
<code>{
  properties: {
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: System, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 1 more JSON objects</summary><details><summary>CustomClassificationRule</summary>Schema for <c>CustomClassificationRule</c>:
<code>{
  properties: {
    minimumPercentageMatch: number, # Optional.
    classificationAction: &quot;Keep&quot; | &quot;Delete&quot;, # Optional.
    dataPatterns: [
      {
        kind: &quot;Regex&quot;, # Required.
      }
    ], # Optional.
    columnPatterns: [ClassificationRulePattern], # Optional.
    description: string, # Optional.
    version: number, # Optional.
    classificationName: string, # Optional.
    ruleStatus: &quot;Enabled&quot; | &quot;Disabled&quot;, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
  }, # Optional.
  kind: Custom, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="TagVersionAsync(Int32,String,RequestContext)">
<example>
This sample shows how to call TagVersionAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

Response response = await client.TagVersionAsync(1234, "<action>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("scanResultId").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>OperationResponse</c>:
<code>{
  scanResultId: Guid, # Optional.
  startTime: string (ISO 8601 Format), # Optional.
  endTime: string (ISO 8601 Format), # Optional.
  status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;, # Optional.
  error: {
    code: string, # Optional.
    message: string, # Optional.
    target: string, # Optional.
    details: [
      {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [ErrorInfo], # Optional.
      }
    ], # Optional.
  }, # Optional.
}
</code>

</remarks>
    </member>
    <member name="TagVersion(Int32,String,RequestContext)">
<example>
This sample shows how to call TagVersion with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

Response response = client.TagVersion(1234, "<action>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("scanResultId").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>OperationResponse</c>:
<code>{
  scanResultId: Guid, # Optional.
  startTime: string (ISO 8601 Format), # Optional.
  endTime: string (ISO 8601 Format), # Optional.
  status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;, # Optional.
  error: {
    code: string, # Optional.
    message: string, # Optional.
    target: string, # Optional.
    details: [
      {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [ErrorInfo], # Optional.
      }
    ], # Optional.
  }, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetVersionsAsync(RequestContext)">
<example>
This sample shows how to call GetVersionsAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

await foreach (var data in client.GetVersionsAsync())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>ClassificationRuleListValue</c>:
<code>{
  kind: &quot;System&quot; | &quot;Custom&quot;, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetVersions(RequestContext)">
<example>
This sample shows how to call GetVersions and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewClassificationRuleClient(endpoint, "<classificationRuleName>", credential);

foreach (var data in client.GetVersions())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>ClassificationRuleListValue</c>:
<code>{
  kind: &quot;System&quot; | &quot;Custom&quot;, # Required.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
  </members>
</doc>