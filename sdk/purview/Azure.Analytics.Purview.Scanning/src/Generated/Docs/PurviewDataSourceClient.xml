<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateOrUpdateAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

var data = new {
    kind = "AzureSubscription",
};

Response response = await client.CreateOrUpdateAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

var data = new {
    properties = new {
        subscriptionId = "<subscriptionId>",
        collection = new {
            referenceName = "<referenceName>",
        },
    },
    kind = "AzureSubscription",
};

Response response = await client.CreateOrUpdateAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionDataSource</summary>Schema for <c>AzureSubscriptionDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscription, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupDataSource</summary>Schema for <c>AzureResourceGroupDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    resourceGroup: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroup, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceDataSource</summary>Schema for <c>AzureSynapseWorkspaceDataSource</c>:
<code>{
  properties: {
    dedicatedSqlEndpoint: string, # Optional.
    serverlessSqlEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspace, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseDataSource</summary>Schema for <c>AzureSynapseDataSource</c>:
<code>{
  properties: {
    sqlEndpoint: string, # Optional.
    sqlOnDemandEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1DataSource</summary>Schema for <c>AdlsGen1DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2DataSource</summary>Schema for <c>AdlsGen2DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountDataSource</summary>Schema for <c>AmazonAccountDataSource</c>:
<code>{
  properties: {
    awsAccountId: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccount, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3DataSource</summary>Schema for <c>AmazonS3DataSource</c>:
<code>{
  properties: {
    serviceUrl: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlDataSource</summary>Schema for <c>AmazonSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbDataSource</summary>Schema for <c>AzureCosmosDbDataSource</c>:
<code>{
  properties: {
    accountUri: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDb, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerDataSource</summary>Schema for <c>AzureDataExplorerDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorer, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceDataSource</summary>Schema for <c>AzureFileServiceDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileService, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseDataSource</summary>Schema for <c>AzureSqlDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlDataSource</summary>Schema for <c>AmazonPostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlDataSource</summary>Schema for <c>AzurePostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseDataSource</summary>Schema for <c>SqlServerDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceDataSource</summary>Schema for <c>AzureSqlDatabaseManagedInstanceDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstance, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseDataSource</summary>Schema for <c>AzureSqlDataWarehouseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlDataSource</summary>Schema for <c>AzureMySqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageDataSource</summary>Schema for <c>AzureStorageDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorage, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataDataSource</summary>Schema for <c>TeradataDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Teradata, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleDataSource</summary>Schema for <c>OracleDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    port: string, # Optional.
    service: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Oracle, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaDataSource</summary>Schema for <c>SapS4HanaDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4Hana, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccDataSource</summary>Schema for <c>SapEccDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEcc, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDataSource</summary>Schema for <c>PowerBIDataSource</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBI, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionDataSource</summary>Schema for <c>AzureSubscriptionDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscription, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupDataSource</summary>Schema for <c>AzureResourceGroupDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    resourceGroup: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroup, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceDataSource</summary>Schema for <c>AzureSynapseWorkspaceDataSource</c>:
<code>{
  properties: {
    dedicatedSqlEndpoint: string, # Optional.
    serverlessSqlEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspace, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseDataSource</summary>Schema for <c>AzureSynapseDataSource</c>:
<code>{
  properties: {
    sqlEndpoint: string, # Optional.
    sqlOnDemandEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1DataSource</summary>Schema for <c>AdlsGen1DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2DataSource</summary>Schema for <c>AdlsGen2DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountDataSource</summary>Schema for <c>AmazonAccountDataSource</c>:
<code>{
  properties: {
    awsAccountId: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccount, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3DataSource</summary>Schema for <c>AmazonS3DataSource</c>:
<code>{
  properties: {
    serviceUrl: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlDataSource</summary>Schema for <c>AmazonSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbDataSource</summary>Schema for <c>AzureCosmosDbDataSource</c>:
<code>{
  properties: {
    accountUri: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDb, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerDataSource</summary>Schema for <c>AzureDataExplorerDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorer, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceDataSource</summary>Schema for <c>AzureFileServiceDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileService, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseDataSource</summary>Schema for <c>AzureSqlDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlDataSource</summary>Schema for <c>AmazonPostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlDataSource</summary>Schema for <c>AzurePostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseDataSource</summary>Schema for <c>SqlServerDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceDataSource</summary>Schema for <c>AzureSqlDatabaseManagedInstanceDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstance, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseDataSource</summary>Schema for <c>AzureSqlDataWarehouseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlDataSource</summary>Schema for <c>AzureMySqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageDataSource</summary>Schema for <c>AzureStorageDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorage, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataDataSource</summary>Schema for <c>TeradataDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Teradata, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleDataSource</summary>Schema for <c>OracleDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    port: string, # Optional.
    service: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Oracle, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaDataSource</summary>Schema for <c>SapS4HanaDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4Hana, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccDataSource</summary>Schema for <c>SapEccDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEcc, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDataSource</summary>Schema for <c>PowerBIDataSource</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBI, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="CreateOrUpdate(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

var data = new {
    kind = "AzureSubscription",
};

Response response = client.CreateOrUpdate(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

var data = new {
    properties = new {
        subscriptionId = "<subscriptionId>",
        collection = new {
            referenceName = "<referenceName>",
        },
    },
    kind = "AzureSubscription",
};

Response response = client.CreateOrUpdate(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionDataSource</summary>Schema for <c>AzureSubscriptionDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscription, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupDataSource</summary>Schema for <c>AzureResourceGroupDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    resourceGroup: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroup, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceDataSource</summary>Schema for <c>AzureSynapseWorkspaceDataSource</c>:
<code>{
  properties: {
    dedicatedSqlEndpoint: string, # Optional.
    serverlessSqlEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspace, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseDataSource</summary>Schema for <c>AzureSynapseDataSource</c>:
<code>{
  properties: {
    sqlEndpoint: string, # Optional.
    sqlOnDemandEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1DataSource</summary>Schema for <c>AdlsGen1DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2DataSource</summary>Schema for <c>AdlsGen2DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountDataSource</summary>Schema for <c>AmazonAccountDataSource</c>:
<code>{
  properties: {
    awsAccountId: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccount, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3DataSource</summary>Schema for <c>AmazonS3DataSource</c>:
<code>{
  properties: {
    serviceUrl: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlDataSource</summary>Schema for <c>AmazonSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbDataSource</summary>Schema for <c>AzureCosmosDbDataSource</c>:
<code>{
  properties: {
    accountUri: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDb, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerDataSource</summary>Schema for <c>AzureDataExplorerDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorer, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceDataSource</summary>Schema for <c>AzureFileServiceDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileService, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseDataSource</summary>Schema for <c>AzureSqlDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlDataSource</summary>Schema for <c>AmazonPostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlDataSource</summary>Schema for <c>AzurePostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseDataSource</summary>Schema for <c>SqlServerDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceDataSource</summary>Schema for <c>AzureSqlDatabaseManagedInstanceDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstance, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseDataSource</summary>Schema for <c>AzureSqlDataWarehouseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlDataSource</summary>Schema for <c>AzureMySqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageDataSource</summary>Schema for <c>AzureStorageDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorage, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataDataSource</summary>Schema for <c>TeradataDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Teradata, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleDataSource</summary>Schema for <c>OracleDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    port: string, # Optional.
    service: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Oracle, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaDataSource</summary>Schema for <c>SapS4HanaDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4Hana, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccDataSource</summary>Schema for <c>SapEccDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEcc, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDataSource</summary>Schema for <c>PowerBIDataSource</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBI, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionDataSource</summary>Schema for <c>AzureSubscriptionDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscription, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupDataSource</summary>Schema for <c>AzureResourceGroupDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    resourceGroup: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroup, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceDataSource</summary>Schema for <c>AzureSynapseWorkspaceDataSource</c>:
<code>{
  properties: {
    dedicatedSqlEndpoint: string, # Optional.
    serverlessSqlEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspace, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseDataSource</summary>Schema for <c>AzureSynapseDataSource</c>:
<code>{
  properties: {
    sqlEndpoint: string, # Optional.
    sqlOnDemandEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1DataSource</summary>Schema for <c>AdlsGen1DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2DataSource</summary>Schema for <c>AdlsGen2DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountDataSource</summary>Schema for <c>AmazonAccountDataSource</c>:
<code>{
  properties: {
    awsAccountId: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccount, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3DataSource</summary>Schema for <c>AmazonS3DataSource</c>:
<code>{
  properties: {
    serviceUrl: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlDataSource</summary>Schema for <c>AmazonSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbDataSource</summary>Schema for <c>AzureCosmosDbDataSource</c>:
<code>{
  properties: {
    accountUri: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDb, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerDataSource</summary>Schema for <c>AzureDataExplorerDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorer, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceDataSource</summary>Schema for <c>AzureFileServiceDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileService, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseDataSource</summary>Schema for <c>AzureSqlDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlDataSource</summary>Schema for <c>AmazonPostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlDataSource</summary>Schema for <c>AzurePostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseDataSource</summary>Schema for <c>SqlServerDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceDataSource</summary>Schema for <c>AzureSqlDatabaseManagedInstanceDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstance, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseDataSource</summary>Schema for <c>AzureSqlDataWarehouseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlDataSource</summary>Schema for <c>AzureMySqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageDataSource</summary>Schema for <c>AzureStorageDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorage, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataDataSource</summary>Schema for <c>TeradataDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Teradata, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleDataSource</summary>Schema for <c>OracleDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    port: string, # Optional.
    service: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Oracle, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaDataSource</summary>Schema for <c>SapS4HanaDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4Hana, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccDataSource</summary>Schema for <c>SapEccDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEcc, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDataSource</summary>Schema for <c>PowerBIDataSource</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBI, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="GetPropertiesAsync(RequestContext)">
<example>
This sample shows how to call GetPropertiesAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

Response response = await client.GetPropertiesAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionDataSource</summary>Schema for <c>AzureSubscriptionDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscription, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupDataSource</summary>Schema for <c>AzureResourceGroupDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    resourceGroup: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroup, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceDataSource</summary>Schema for <c>AzureSynapseWorkspaceDataSource</c>:
<code>{
  properties: {
    dedicatedSqlEndpoint: string, # Optional.
    serverlessSqlEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspace, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseDataSource</summary>Schema for <c>AzureSynapseDataSource</c>:
<code>{
  properties: {
    sqlEndpoint: string, # Optional.
    sqlOnDemandEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1DataSource</summary>Schema for <c>AdlsGen1DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2DataSource</summary>Schema for <c>AdlsGen2DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountDataSource</summary>Schema for <c>AmazonAccountDataSource</c>:
<code>{
  properties: {
    awsAccountId: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccount, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3DataSource</summary>Schema for <c>AmazonS3DataSource</c>:
<code>{
  properties: {
    serviceUrl: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlDataSource</summary>Schema for <c>AmazonSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbDataSource</summary>Schema for <c>AzureCosmosDbDataSource</c>:
<code>{
  properties: {
    accountUri: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDb, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerDataSource</summary>Schema for <c>AzureDataExplorerDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorer, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceDataSource</summary>Schema for <c>AzureFileServiceDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileService, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseDataSource</summary>Schema for <c>AzureSqlDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlDataSource</summary>Schema for <c>AmazonPostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlDataSource</summary>Schema for <c>AzurePostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseDataSource</summary>Schema for <c>SqlServerDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceDataSource</summary>Schema for <c>AzureSqlDatabaseManagedInstanceDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstance, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseDataSource</summary>Schema for <c>AzureSqlDataWarehouseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlDataSource</summary>Schema for <c>AzureMySqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageDataSource</summary>Schema for <c>AzureStorageDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorage, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataDataSource</summary>Schema for <c>TeradataDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Teradata, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleDataSource</summary>Schema for <c>OracleDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    port: string, # Optional.
    service: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Oracle, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaDataSource</summary>Schema for <c>SapS4HanaDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4Hana, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccDataSource</summary>Schema for <c>SapEccDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEcc, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDataSource</summary>Schema for <c>PowerBIDataSource</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBI, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="GetProperties(RequestContext)">
<example>
This sample shows how to call GetProperties and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

Response response = client.GetProperties();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionDataSource</summary>Schema for <c>AzureSubscriptionDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscription, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupDataSource</summary>Schema for <c>AzureResourceGroupDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    resourceGroup: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroup, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceDataSource</summary>Schema for <c>AzureSynapseWorkspaceDataSource</c>:
<code>{
  properties: {
    dedicatedSqlEndpoint: string, # Optional.
    serverlessSqlEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspace, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseDataSource</summary>Schema for <c>AzureSynapseDataSource</c>:
<code>{
  properties: {
    sqlEndpoint: string, # Optional.
    sqlOnDemandEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1DataSource</summary>Schema for <c>AdlsGen1DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2DataSource</summary>Schema for <c>AdlsGen2DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountDataSource</summary>Schema for <c>AmazonAccountDataSource</c>:
<code>{
  properties: {
    awsAccountId: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccount, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3DataSource</summary>Schema for <c>AmazonS3DataSource</c>:
<code>{
  properties: {
    serviceUrl: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlDataSource</summary>Schema for <c>AmazonSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbDataSource</summary>Schema for <c>AzureCosmosDbDataSource</c>:
<code>{
  properties: {
    accountUri: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDb, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerDataSource</summary>Schema for <c>AzureDataExplorerDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorer, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceDataSource</summary>Schema for <c>AzureFileServiceDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileService, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseDataSource</summary>Schema for <c>AzureSqlDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlDataSource</summary>Schema for <c>AmazonPostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlDataSource</summary>Schema for <c>AzurePostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseDataSource</summary>Schema for <c>SqlServerDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceDataSource</summary>Schema for <c>AzureSqlDatabaseManagedInstanceDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstance, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseDataSource</summary>Schema for <c>AzureSqlDataWarehouseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlDataSource</summary>Schema for <c>AzureMySqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageDataSource</summary>Schema for <c>AzureStorageDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorage, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataDataSource</summary>Schema for <c>TeradataDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Teradata, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleDataSource</summary>Schema for <c>OracleDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    port: string, # Optional.
    service: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Oracle, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaDataSource</summary>Schema for <c>SapS4HanaDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4Hana, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccDataSource</summary>Schema for <c>SapEccDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEcc, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDataSource</summary>Schema for <c>PowerBIDataSource</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBI, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="DeleteAsync(RequestContext)">
<example>
This sample shows how to call DeleteAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

Response response = await client.DeleteAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionDataSource</summary>Schema for <c>AzureSubscriptionDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscription, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupDataSource</summary>Schema for <c>AzureResourceGroupDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    resourceGroup: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroup, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceDataSource</summary>Schema for <c>AzureSynapseWorkspaceDataSource</c>:
<code>{
  properties: {
    dedicatedSqlEndpoint: string, # Optional.
    serverlessSqlEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspace, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseDataSource</summary>Schema for <c>AzureSynapseDataSource</c>:
<code>{
  properties: {
    sqlEndpoint: string, # Optional.
    sqlOnDemandEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1DataSource</summary>Schema for <c>AdlsGen1DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2DataSource</summary>Schema for <c>AdlsGen2DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountDataSource</summary>Schema for <c>AmazonAccountDataSource</c>:
<code>{
  properties: {
    awsAccountId: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccount, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3DataSource</summary>Schema for <c>AmazonS3DataSource</c>:
<code>{
  properties: {
    serviceUrl: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlDataSource</summary>Schema for <c>AmazonSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbDataSource</summary>Schema for <c>AzureCosmosDbDataSource</c>:
<code>{
  properties: {
    accountUri: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDb, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerDataSource</summary>Schema for <c>AzureDataExplorerDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorer, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceDataSource</summary>Schema for <c>AzureFileServiceDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileService, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseDataSource</summary>Schema for <c>AzureSqlDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlDataSource</summary>Schema for <c>AmazonPostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlDataSource</summary>Schema for <c>AzurePostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseDataSource</summary>Schema for <c>SqlServerDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceDataSource</summary>Schema for <c>AzureSqlDatabaseManagedInstanceDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstance, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseDataSource</summary>Schema for <c>AzureSqlDataWarehouseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlDataSource</summary>Schema for <c>AzureMySqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageDataSource</summary>Schema for <c>AzureStorageDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorage, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataDataSource</summary>Schema for <c>TeradataDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Teradata, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleDataSource</summary>Schema for <c>OracleDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    port: string, # Optional.
    service: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Oracle, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaDataSource</summary>Schema for <c>SapS4HanaDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4Hana, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccDataSource</summary>Schema for <c>SapEccDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEcc, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDataSource</summary>Schema for <c>PowerBIDataSource</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBI, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="Delete(RequestContext)">
<example>
This sample shows how to call Delete and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

Response response = client.Delete();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scans")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionDataSource</summary>Schema for <c>AzureSubscriptionDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscription, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 24 more JSON objects</summary><details><summary>AzureResourceGroupDataSource</summary>Schema for <c>AzureResourceGroupDataSource</c>:
<code>{
  properties: {
    subscriptionId: string, # Optional.
    resourceGroup: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroup, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceDataSource</summary>Schema for <c>AzureSynapseWorkspaceDataSource</c>:
<code>{
  properties: {
    dedicatedSqlEndpoint: string, # Optional.
    serverlessSqlEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspace, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseDataSource</summary>Schema for <c>AzureSynapseDataSource</c>:
<code>{
  properties: {
    sqlEndpoint: string, # Optional.
    sqlOnDemandEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1DataSource</summary>Schema for <c>AdlsGen1DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2DataSource</summary>Schema for <c>AdlsGen2DataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountDataSource</summary>Schema for <c>AmazonAccountDataSource</c>:
<code>{
  properties: {
    awsAccountId: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccount, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3DataSource</summary>Schema for <c>AmazonS3DataSource</c>:
<code>{
  properties: {
    serviceUrl: string, # Optional.
    roleARN: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlDataSource</summary>Schema for <c>AmazonSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbDataSource</summary>Schema for <c>AzureCosmosDbDataSource</c>:
<code>{
  properties: {
    accountUri: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDb, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerDataSource</summary>Schema for <c>AzureDataExplorerDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorer, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceDataSource</summary>Schema for <c>AzureFileServiceDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileService, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseDataSource</summary>Schema for <c>AzureSqlDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlDataSource</summary>Schema for <c>AmazonPostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlDataSource</summary>Schema for <c>AzurePostgreSqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseDataSource</summary>Schema for <c>SqlServerDatabaseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabase, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceDataSource</summary>Schema for <c>AzureSqlDatabaseManagedInstanceDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstance, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseDataSource</summary>Schema for <c>AzureSqlDataWarehouseDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouse, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlDataSource</summary>Schema for <c>AzureMySqlDataSource</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySql, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageDataSource</summary>Schema for <c>AzureStorageDataSource</c>:
<code>{
  properties: {
    endpoint: string, # Optional.
    resourceGroup: string, # Optional.
    subscriptionId: string, # Optional.
    location: string, # Optional.
    resourceName: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorage, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataDataSource</summary>Schema for <c>TeradataDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Teradata, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleDataSource</summary>Schema for <c>OracleDataSource</c>:
<code>{
  properties: {
    host: string, # Optional.
    port: string, # Optional.
    service: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: Oracle, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaDataSource</summary>Schema for <c>SapS4HanaDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4Hana, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccDataSource</summary>Schema for <c>SapEccDataSource</c>:
<code>{
  properties: {
    applicationServer: string, # Optional.
    systemNumber: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEcc, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDataSource</summary>Schema for <c>PowerBIDataSource</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBI, # Required.
  scans: [
    {
      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
      scanResults: [
        {
          parentId: string, # Optional.
          id: string, # Optional.
          resourceId: string, # Optional.
          status: string, # Optional.
          assetsDiscovered: number, # Optional.
          assetsClassified: number, # Optional.
          diagnostics: {
            notifications: [
              {
                message: string, # Optional.
                code: number, # Optional.
              }
            ], # Optional.
            exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
          }, # Optional.
          startTime: string (ISO 8601 Format), # Optional.
          queuedTime: string (ISO 8601 Format), # Optional.
          pipelineStartTime: string (ISO 8601 Format), # Optional.
          endTime: string (ISO 8601 Format), # Optional.
          scanRulesetVersion: number, # Optional.
          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
          errorMessage: string, # Optional.
          error: {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [
              {
                code: string, # Optional.
                message: string, # Optional.
                target: string, # Optional.
                details: [ErrorModel], # Optional.
              }
            ], # Optional.
          }, # Optional.
          runType: string, # Optional.
          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
        }
      ], # Optional.
      id: string, # Optional.
      name: string, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="GetScansAsync(RequestContext)">
<example>
This sample shows how to call GetScansAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

await foreach (var data in client.GetScansAsync())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("startTime").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("endTime").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("runType").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>ScanListValue</c>:
<code>{
  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetScans(RequestContext)">
<example>
This sample shows how to call GetScans and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewDataSourceClient(endpoint, "<dataSourceName>", credential);

foreach (var data in client.GetScans())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("startTime").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("endTime").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("runType").ToString());
    Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>ScanListValue</c>:
<code>{
  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
  </members>
</doc>