<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetFilterAsync(RequestContext)">
<example>
This sample shows how to call GetFilterAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = await client.GetFilterAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("excludeUriPrefixes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("includeUriPrefixes")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Filter</c>:
<code>{
  properties: {
    excludeUriPrefixes: [string], # Optional.
    includeUriPrefixes: [string], # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetFilter(RequestContext)">
<example>
This sample shows how to call GetFilter and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = client.GetFilter();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("excludeUriPrefixes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("includeUriPrefixes")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Filter</c>:
<code>{
  properties: {
    excludeUriPrefixes: [string], # Optional.
    includeUriPrefixes: [string], # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="CreateOrUpdateFilterAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateFilterAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {};

Response response = await client.CreateOrUpdateFilterAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateFilterAsync with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {
    properties = new {
        excludeUriPrefixes = new[] {
            "<String>"
        },
        includeUriPrefixes = new[] {
            "<String>"
        },
    },
};

Response response = await client.CreateOrUpdateFilterAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("excludeUriPrefixes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("includeUriPrefixes")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Filter</c>:
<code>{
  properties: {
    excludeUriPrefixes: [string], # Optional.
    includeUriPrefixes: [string], # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

Response Body:

Schema for <c>Filter</c>:
<code>{
  properties: {
    excludeUriPrefixes: [string], # Optional.
    includeUriPrefixes: [string], # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="CreateOrUpdateFilter(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateFilter and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {};

Response response = client.CreateOrUpdateFilter(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateFilter with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {
    properties = new {
        excludeUriPrefixes = new[] {
            "<String>"
        },
        includeUriPrefixes = new[] {
            "<String>"
        },
    },
};

Response response = client.CreateOrUpdateFilter(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("excludeUriPrefixes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("includeUriPrefixes")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Filter</c>:
<code>{
  properties: {
    excludeUriPrefixes: [string], # Optional.
    includeUriPrefixes: [string], # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

Response Body:

Schema for <c>Filter</c>:
<code>{
  properties: {
    excludeUriPrefixes: [string], # Optional.
    includeUriPrefixes: [string], # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="CreateOrUpdateAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {
    kind = "AzureSubscriptionCredential",
};

Response response = await client.CreateOrUpdateAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {
    properties = new {
        resourceTypes = new {
            None = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSubscription = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureResourceGroup = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSynapseWorkspace = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSynapse = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AdlsGen1 = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AdlsGen2 = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AmazonAccount = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AmazonS3 = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AmazonSql = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureCosmosDb = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureDataExplorer = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureFileService = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSqlDatabase = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AmazonPostgreSql = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzurePostgreSql = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            SqlServerDatabase = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSqlDatabaseManagedInstance = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSqlDataWarehouse = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureMySql = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureStorage = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            Teradata = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            Oracle = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            SapS4Hana = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            SapEcc = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            PowerBI = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
        },
        credential = new {
            referenceName = "<referenceName>",
            credentialType = "AccountKey",
        },
        scanRulesetName = "<scanRulesetName>",
        scanRulesetType = "Custom",
        collection = new {
            referenceName = "<referenceName>",
        },
        workers = 1234,
        connectedVia = new {
            referenceName = "<referenceName>",
        },
    },
    kind = "AzureSubscriptionCredential",
};

Response response = await client.CreateOrUpdateAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionCredentialScan</summary>Schema for <c>AzureSubscriptionCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 42 more JSON objects</summary><details><summary>AzureSubscriptionMsiScan</summary>Schema for <c>AzureSubscriptionMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupCredentialScan</summary>Schema for <c>AzureResourceGroupCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupMsiScan</summary>Schema for <c>AzureResourceGroupMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceCredentialScan</summary>Schema for <c>AzureSynapseWorkspaceCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceMsiScan</summary>Schema for <c>AzureSynapseWorkspaceMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseCredentialScan</summary>Schema for <c>AzureSynapseCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseMsiScan</summary>Schema for <c>AzureSynapseMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1CredentialScan</summary>Schema for <c>AdlsGen1CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1MsiScan</summary>Schema for <c>AdlsGen1MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2CredentialScan</summary>Schema for <c>AdlsGen2CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2MsiScan</summary>Schema for <c>AdlsGen2MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountCredentialScan</summary>Schema for <c>AmazonAccountCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccountCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3CredentialScan</summary>Schema for <c>AmazonS3CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3RoleARNScan</summary>Schema for <c>AmazonS3RoleARNScan</c>:
<code>{
  properties: {
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3RoleARN, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlCredentialScan</summary>Schema for <c>AmazonSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbCredentialScan</summary>Schema for <c>AzureCosmosDbCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDbCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerCredentialScan</summary>Schema for <c>AzureDataExplorerCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerMsiScan</summary>Schema for <c>AzureDataExplorerMsiScan</c>:
<code>{
  properties: {
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceCredentialScan</summary>Schema for <c>AzureFileServiceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    shareName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileServiceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseCredentialScan</summary>Schema for <c>AzureSqlDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseMsiScan</summary>Schema for <c>AzureSqlDatabaseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlCredentialScan</summary>Schema for <c>AmazonPostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlCredentialScan</summary>Schema for <c>AzurePostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: number, # Optional.
    sslMode: number, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseCredentialScan</summary>Schema for <c>SqlServerDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceCredentialScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceMsiScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseCredentialScan</summary>Schema for <c>AzureSqlDataWarehouseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseMsiScan</summary>Schema for <c>AzureSqlDataWarehouseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlCredentialScan</summary>Schema for <c>AzureMySqlCredentialScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    databaseName: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageCredentialScan</summary>Schema for <c>AzureStorageCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageMsiScan</summary>Schema for <c>AzureStorageMsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataCredentialScan</summary>Schema for <c>TeradataCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataUserPassScan</summary>Schema for <c>TeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataTeradataUserPassScan</summary>Schema for <c>TeradataTeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleCredentialScan</summary>Schema for <c>OracleCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleUserPassScan</summary>Schema for <c>OracleUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaCredentialScan</summary>Schema for <c>SapS4HanaSapS4HanaCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaUserPassScan</summary>Schema for <c>SapS4HanaSapS4HanaUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccCredentialScan</summary>Schema for <c>SapEccCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccUserPassScan</summary>Schema for <c>SapEccUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDelegatedScan</summary>Schema for <c>PowerBIDelegatedScan</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    authenticationType: string, # Optional.
    clientId: string, # Optional.
    userName: string, # Optional.
    password: string, # Optional.
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIDelegated, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIMsiScan</summary>Schema for <c>PowerBIMsiScan</c>:
<code>{
  properties: {
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionCredentialScan</summary>Schema for <c>AzureSubscriptionCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 42 more JSON objects</summary><details><summary>AzureSubscriptionMsiScan</summary>Schema for <c>AzureSubscriptionMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupCredentialScan</summary>Schema for <c>AzureResourceGroupCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupMsiScan</summary>Schema for <c>AzureResourceGroupMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceCredentialScan</summary>Schema for <c>AzureSynapseWorkspaceCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceMsiScan</summary>Schema for <c>AzureSynapseWorkspaceMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseCredentialScan</summary>Schema for <c>AzureSynapseCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseMsiScan</summary>Schema for <c>AzureSynapseMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1CredentialScan</summary>Schema for <c>AdlsGen1CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1MsiScan</summary>Schema for <c>AdlsGen1MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2CredentialScan</summary>Schema for <c>AdlsGen2CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2MsiScan</summary>Schema for <c>AdlsGen2MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountCredentialScan</summary>Schema for <c>AmazonAccountCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccountCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3CredentialScan</summary>Schema for <c>AmazonS3CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3RoleARNScan</summary>Schema for <c>AmazonS3RoleARNScan</c>:
<code>{
  properties: {
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3RoleARN, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlCredentialScan</summary>Schema for <c>AmazonSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbCredentialScan</summary>Schema for <c>AzureCosmosDbCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDbCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerCredentialScan</summary>Schema for <c>AzureDataExplorerCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerMsiScan</summary>Schema for <c>AzureDataExplorerMsiScan</c>:
<code>{
  properties: {
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceCredentialScan</summary>Schema for <c>AzureFileServiceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    shareName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileServiceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseCredentialScan</summary>Schema for <c>AzureSqlDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseMsiScan</summary>Schema for <c>AzureSqlDatabaseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlCredentialScan</summary>Schema for <c>AmazonPostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlCredentialScan</summary>Schema for <c>AzurePostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: number, # Optional.
    sslMode: number, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseCredentialScan</summary>Schema for <c>SqlServerDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceCredentialScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceMsiScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseCredentialScan</summary>Schema for <c>AzureSqlDataWarehouseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseMsiScan</summary>Schema for <c>AzureSqlDataWarehouseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlCredentialScan</summary>Schema for <c>AzureMySqlCredentialScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    databaseName: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageCredentialScan</summary>Schema for <c>AzureStorageCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageMsiScan</summary>Schema for <c>AzureStorageMsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataCredentialScan</summary>Schema for <c>TeradataCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataUserPassScan</summary>Schema for <c>TeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataTeradataUserPassScan</summary>Schema for <c>TeradataTeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleCredentialScan</summary>Schema for <c>OracleCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleUserPassScan</summary>Schema for <c>OracleUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaCredentialScan</summary>Schema for <c>SapS4HanaSapS4HanaCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaUserPassScan</summary>Schema for <c>SapS4HanaSapS4HanaUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccCredentialScan</summary>Schema for <c>SapEccCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccUserPassScan</summary>Schema for <c>SapEccUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDelegatedScan</summary>Schema for <c>PowerBIDelegatedScan</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    authenticationType: string, # Optional.
    clientId: string, # Optional.
    userName: string, # Optional.
    password: string, # Optional.
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIDelegated, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIMsiScan</summary>Schema for <c>PowerBIMsiScan</c>:
<code>{
  properties: {
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="CreateOrUpdate(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {
    kind = "AzureSubscriptionCredential",
};

Response response = client.CreateOrUpdate(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {
    properties = new {
        resourceTypes = new {
            None = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSubscription = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureResourceGroup = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSynapseWorkspace = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSynapse = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AdlsGen1 = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AdlsGen2 = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AmazonAccount = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AmazonS3 = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AmazonSql = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureCosmosDb = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureDataExplorer = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureFileService = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSqlDatabase = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AmazonPostgreSql = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzurePostgreSql = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            SqlServerDatabase = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSqlDatabaseManagedInstance = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureSqlDataWarehouse = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureMySql = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            AzureStorage = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            Teradata = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            Oracle = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            SapS4Hana = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            SapEcc = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
            PowerBI = new {
                scanRulesetName = "<scanRulesetName>",
                scanRulesetType = "Custom",
                resourceNameFilter = new {
                    excludePrefixes = new[] {
                        "<String>"
                    },
                    includePrefixes = new[] {
                        "<String>"
                    },
                    resources = new[] {
                        "<String>"
                    },
                },
                credential = new {
                    referenceName = "<referenceName>",
                    credentialType = "AccountKey",
                },
            },
        },
        credential = new {
            referenceName = "<referenceName>",
            credentialType = "AccountKey",
        },
        scanRulesetName = "<scanRulesetName>",
        scanRulesetType = "Custom",
        collection = new {
            referenceName = "<referenceName>",
        },
        workers = 1234,
        connectedVia = new {
            referenceName = "<referenceName>",
        },
    },
    kind = "AzureSubscriptionCredential",
};

Response response = client.CreateOrUpdate(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionCredentialScan</summary>Schema for <c>AzureSubscriptionCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 42 more JSON objects</summary><details><summary>AzureSubscriptionMsiScan</summary>Schema for <c>AzureSubscriptionMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupCredentialScan</summary>Schema for <c>AzureResourceGroupCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupMsiScan</summary>Schema for <c>AzureResourceGroupMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceCredentialScan</summary>Schema for <c>AzureSynapseWorkspaceCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceMsiScan</summary>Schema for <c>AzureSynapseWorkspaceMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseCredentialScan</summary>Schema for <c>AzureSynapseCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseMsiScan</summary>Schema for <c>AzureSynapseMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1CredentialScan</summary>Schema for <c>AdlsGen1CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1MsiScan</summary>Schema for <c>AdlsGen1MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2CredentialScan</summary>Schema for <c>AdlsGen2CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2MsiScan</summary>Schema for <c>AdlsGen2MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountCredentialScan</summary>Schema for <c>AmazonAccountCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccountCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3CredentialScan</summary>Schema for <c>AmazonS3CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3RoleARNScan</summary>Schema for <c>AmazonS3RoleARNScan</c>:
<code>{
  properties: {
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3RoleARN, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlCredentialScan</summary>Schema for <c>AmazonSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbCredentialScan</summary>Schema for <c>AzureCosmosDbCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDbCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerCredentialScan</summary>Schema for <c>AzureDataExplorerCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerMsiScan</summary>Schema for <c>AzureDataExplorerMsiScan</c>:
<code>{
  properties: {
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceCredentialScan</summary>Schema for <c>AzureFileServiceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    shareName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileServiceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseCredentialScan</summary>Schema for <c>AzureSqlDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseMsiScan</summary>Schema for <c>AzureSqlDatabaseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlCredentialScan</summary>Schema for <c>AmazonPostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlCredentialScan</summary>Schema for <c>AzurePostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: number, # Optional.
    sslMode: number, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseCredentialScan</summary>Schema for <c>SqlServerDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceCredentialScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceMsiScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseCredentialScan</summary>Schema for <c>AzureSqlDataWarehouseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseMsiScan</summary>Schema for <c>AzureSqlDataWarehouseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlCredentialScan</summary>Schema for <c>AzureMySqlCredentialScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    databaseName: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageCredentialScan</summary>Schema for <c>AzureStorageCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageMsiScan</summary>Schema for <c>AzureStorageMsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataCredentialScan</summary>Schema for <c>TeradataCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataUserPassScan</summary>Schema for <c>TeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataTeradataUserPassScan</summary>Schema for <c>TeradataTeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleCredentialScan</summary>Schema for <c>OracleCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleUserPassScan</summary>Schema for <c>OracleUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaCredentialScan</summary>Schema for <c>SapS4HanaSapS4HanaCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaUserPassScan</summary>Schema for <c>SapS4HanaSapS4HanaUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccCredentialScan</summary>Schema for <c>SapEccCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccUserPassScan</summary>Schema for <c>SapEccUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDelegatedScan</summary>Schema for <c>PowerBIDelegatedScan</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    authenticationType: string, # Optional.
    clientId: string, # Optional.
    userName: string, # Optional.
    password: string, # Optional.
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIDelegated, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIMsiScan</summary>Schema for <c>PowerBIMsiScan</c>:
<code>{
  properties: {
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionCredentialScan</summary>Schema for <c>AzureSubscriptionCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 42 more JSON objects</summary><details><summary>AzureSubscriptionMsiScan</summary>Schema for <c>AzureSubscriptionMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupCredentialScan</summary>Schema for <c>AzureResourceGroupCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupMsiScan</summary>Schema for <c>AzureResourceGroupMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceCredentialScan</summary>Schema for <c>AzureSynapseWorkspaceCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceMsiScan</summary>Schema for <c>AzureSynapseWorkspaceMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseCredentialScan</summary>Schema for <c>AzureSynapseCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseMsiScan</summary>Schema for <c>AzureSynapseMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1CredentialScan</summary>Schema for <c>AdlsGen1CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1MsiScan</summary>Schema for <c>AdlsGen1MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2CredentialScan</summary>Schema for <c>AdlsGen2CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2MsiScan</summary>Schema for <c>AdlsGen2MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountCredentialScan</summary>Schema for <c>AmazonAccountCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccountCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3CredentialScan</summary>Schema for <c>AmazonS3CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3RoleARNScan</summary>Schema for <c>AmazonS3RoleARNScan</c>:
<code>{
  properties: {
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3RoleARN, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlCredentialScan</summary>Schema for <c>AmazonSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbCredentialScan</summary>Schema for <c>AzureCosmosDbCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDbCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerCredentialScan</summary>Schema for <c>AzureDataExplorerCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerMsiScan</summary>Schema for <c>AzureDataExplorerMsiScan</c>:
<code>{
  properties: {
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceCredentialScan</summary>Schema for <c>AzureFileServiceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    shareName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileServiceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseCredentialScan</summary>Schema for <c>AzureSqlDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseMsiScan</summary>Schema for <c>AzureSqlDatabaseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlCredentialScan</summary>Schema for <c>AmazonPostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlCredentialScan</summary>Schema for <c>AzurePostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: number, # Optional.
    sslMode: number, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseCredentialScan</summary>Schema for <c>SqlServerDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceCredentialScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceMsiScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseCredentialScan</summary>Schema for <c>AzureSqlDataWarehouseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseMsiScan</summary>Schema for <c>AzureSqlDataWarehouseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlCredentialScan</summary>Schema for <c>AzureMySqlCredentialScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    databaseName: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageCredentialScan</summary>Schema for <c>AzureStorageCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageMsiScan</summary>Schema for <c>AzureStorageMsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataCredentialScan</summary>Schema for <c>TeradataCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataUserPassScan</summary>Schema for <c>TeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataTeradataUserPassScan</summary>Schema for <c>TeradataTeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleCredentialScan</summary>Schema for <c>OracleCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleUserPassScan</summary>Schema for <c>OracleUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaCredentialScan</summary>Schema for <c>SapS4HanaSapS4HanaCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaUserPassScan</summary>Schema for <c>SapS4HanaSapS4HanaUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccCredentialScan</summary>Schema for <c>SapEccCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccUserPassScan</summary>Schema for <c>SapEccUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDelegatedScan</summary>Schema for <c>PowerBIDelegatedScan</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    authenticationType: string, # Optional.
    clientId: string, # Optional.
    userName: string, # Optional.
    password: string, # Optional.
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIDelegated, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIMsiScan</summary>Schema for <c>PowerBIMsiScan</c>:
<code>{
  properties: {
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="GetPropertiesAsync(RequestContext)">
<example>
This sample shows how to call GetPropertiesAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = await client.GetPropertiesAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionCredentialScan</summary>Schema for <c>AzureSubscriptionCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 42 more JSON objects</summary><details><summary>AzureSubscriptionMsiScan</summary>Schema for <c>AzureSubscriptionMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupCredentialScan</summary>Schema for <c>AzureResourceGroupCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupMsiScan</summary>Schema for <c>AzureResourceGroupMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceCredentialScan</summary>Schema for <c>AzureSynapseWorkspaceCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceMsiScan</summary>Schema for <c>AzureSynapseWorkspaceMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseCredentialScan</summary>Schema for <c>AzureSynapseCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseMsiScan</summary>Schema for <c>AzureSynapseMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1CredentialScan</summary>Schema for <c>AdlsGen1CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1MsiScan</summary>Schema for <c>AdlsGen1MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2CredentialScan</summary>Schema for <c>AdlsGen2CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2MsiScan</summary>Schema for <c>AdlsGen2MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountCredentialScan</summary>Schema for <c>AmazonAccountCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccountCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3CredentialScan</summary>Schema for <c>AmazonS3CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3RoleARNScan</summary>Schema for <c>AmazonS3RoleARNScan</c>:
<code>{
  properties: {
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3RoleARN, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlCredentialScan</summary>Schema for <c>AmazonSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbCredentialScan</summary>Schema for <c>AzureCosmosDbCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDbCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerCredentialScan</summary>Schema for <c>AzureDataExplorerCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerMsiScan</summary>Schema for <c>AzureDataExplorerMsiScan</c>:
<code>{
  properties: {
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceCredentialScan</summary>Schema for <c>AzureFileServiceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    shareName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileServiceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseCredentialScan</summary>Schema for <c>AzureSqlDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseMsiScan</summary>Schema for <c>AzureSqlDatabaseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlCredentialScan</summary>Schema for <c>AmazonPostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlCredentialScan</summary>Schema for <c>AzurePostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: number, # Optional.
    sslMode: number, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseCredentialScan</summary>Schema for <c>SqlServerDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceCredentialScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceMsiScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseCredentialScan</summary>Schema for <c>AzureSqlDataWarehouseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseMsiScan</summary>Schema for <c>AzureSqlDataWarehouseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlCredentialScan</summary>Schema for <c>AzureMySqlCredentialScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    databaseName: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageCredentialScan</summary>Schema for <c>AzureStorageCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageMsiScan</summary>Schema for <c>AzureStorageMsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataCredentialScan</summary>Schema for <c>TeradataCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataUserPassScan</summary>Schema for <c>TeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataTeradataUserPassScan</summary>Schema for <c>TeradataTeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleCredentialScan</summary>Schema for <c>OracleCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleUserPassScan</summary>Schema for <c>OracleUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaCredentialScan</summary>Schema for <c>SapS4HanaSapS4HanaCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaUserPassScan</summary>Schema for <c>SapS4HanaSapS4HanaUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccCredentialScan</summary>Schema for <c>SapEccCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccUserPassScan</summary>Schema for <c>SapEccUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDelegatedScan</summary>Schema for <c>PowerBIDelegatedScan</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    authenticationType: string, # Optional.
    clientId: string, # Optional.
    userName: string, # Optional.
    password: string, # Optional.
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIDelegated, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIMsiScan</summary>Schema for <c>PowerBIMsiScan</c>:
<code>{
  properties: {
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="GetProperties(RequestContext)">
<example>
This sample shows how to call GetProperties and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = client.GetProperties();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionCredentialScan</summary>Schema for <c>AzureSubscriptionCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 42 more JSON objects</summary><details><summary>AzureSubscriptionMsiScan</summary>Schema for <c>AzureSubscriptionMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupCredentialScan</summary>Schema for <c>AzureResourceGroupCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupMsiScan</summary>Schema for <c>AzureResourceGroupMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceCredentialScan</summary>Schema for <c>AzureSynapseWorkspaceCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceMsiScan</summary>Schema for <c>AzureSynapseWorkspaceMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseCredentialScan</summary>Schema for <c>AzureSynapseCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseMsiScan</summary>Schema for <c>AzureSynapseMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1CredentialScan</summary>Schema for <c>AdlsGen1CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1MsiScan</summary>Schema for <c>AdlsGen1MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2CredentialScan</summary>Schema for <c>AdlsGen2CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2MsiScan</summary>Schema for <c>AdlsGen2MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountCredentialScan</summary>Schema for <c>AmazonAccountCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccountCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3CredentialScan</summary>Schema for <c>AmazonS3CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3RoleARNScan</summary>Schema for <c>AmazonS3RoleARNScan</c>:
<code>{
  properties: {
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3RoleARN, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlCredentialScan</summary>Schema for <c>AmazonSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbCredentialScan</summary>Schema for <c>AzureCosmosDbCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDbCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerCredentialScan</summary>Schema for <c>AzureDataExplorerCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerMsiScan</summary>Schema for <c>AzureDataExplorerMsiScan</c>:
<code>{
  properties: {
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceCredentialScan</summary>Schema for <c>AzureFileServiceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    shareName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileServiceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseCredentialScan</summary>Schema for <c>AzureSqlDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseMsiScan</summary>Schema for <c>AzureSqlDatabaseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlCredentialScan</summary>Schema for <c>AmazonPostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlCredentialScan</summary>Schema for <c>AzurePostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: number, # Optional.
    sslMode: number, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseCredentialScan</summary>Schema for <c>SqlServerDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceCredentialScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceMsiScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseCredentialScan</summary>Schema for <c>AzureSqlDataWarehouseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseMsiScan</summary>Schema for <c>AzureSqlDataWarehouseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlCredentialScan</summary>Schema for <c>AzureMySqlCredentialScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    databaseName: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageCredentialScan</summary>Schema for <c>AzureStorageCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageMsiScan</summary>Schema for <c>AzureStorageMsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataCredentialScan</summary>Schema for <c>TeradataCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataUserPassScan</summary>Schema for <c>TeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataTeradataUserPassScan</summary>Schema for <c>TeradataTeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleCredentialScan</summary>Schema for <c>OracleCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleUserPassScan</summary>Schema for <c>OracleUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaCredentialScan</summary>Schema for <c>SapS4HanaSapS4HanaCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaUserPassScan</summary>Schema for <c>SapS4HanaSapS4HanaUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccCredentialScan</summary>Schema for <c>SapEccCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccUserPassScan</summary>Schema for <c>SapEccUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDelegatedScan</summary>Schema for <c>PowerBIDelegatedScan</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    authenticationType: string, # Optional.
    clientId: string, # Optional.
    userName: string, # Optional.
    password: string, # Optional.
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIDelegated, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIMsiScan</summary>Schema for <c>PowerBIMsiScan</c>:
<code>{
  properties: {
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="DeleteAsync(RequestContext)">
<example>
This sample shows how to call DeleteAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = await client.DeleteAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionCredentialScan</summary>Schema for <c>AzureSubscriptionCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 42 more JSON objects</summary><details><summary>AzureSubscriptionMsiScan</summary>Schema for <c>AzureSubscriptionMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupCredentialScan</summary>Schema for <c>AzureResourceGroupCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupMsiScan</summary>Schema for <c>AzureResourceGroupMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceCredentialScan</summary>Schema for <c>AzureSynapseWorkspaceCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceMsiScan</summary>Schema for <c>AzureSynapseWorkspaceMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseCredentialScan</summary>Schema for <c>AzureSynapseCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseMsiScan</summary>Schema for <c>AzureSynapseMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1CredentialScan</summary>Schema for <c>AdlsGen1CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1MsiScan</summary>Schema for <c>AdlsGen1MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2CredentialScan</summary>Schema for <c>AdlsGen2CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2MsiScan</summary>Schema for <c>AdlsGen2MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountCredentialScan</summary>Schema for <c>AmazonAccountCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccountCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3CredentialScan</summary>Schema for <c>AmazonS3CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3RoleARNScan</summary>Schema for <c>AmazonS3RoleARNScan</c>:
<code>{
  properties: {
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3RoleARN, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlCredentialScan</summary>Schema for <c>AmazonSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbCredentialScan</summary>Schema for <c>AzureCosmosDbCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDbCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerCredentialScan</summary>Schema for <c>AzureDataExplorerCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerMsiScan</summary>Schema for <c>AzureDataExplorerMsiScan</c>:
<code>{
  properties: {
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceCredentialScan</summary>Schema for <c>AzureFileServiceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    shareName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileServiceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseCredentialScan</summary>Schema for <c>AzureSqlDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseMsiScan</summary>Schema for <c>AzureSqlDatabaseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlCredentialScan</summary>Schema for <c>AmazonPostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlCredentialScan</summary>Schema for <c>AzurePostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: number, # Optional.
    sslMode: number, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseCredentialScan</summary>Schema for <c>SqlServerDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceCredentialScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceMsiScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseCredentialScan</summary>Schema for <c>AzureSqlDataWarehouseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseMsiScan</summary>Schema for <c>AzureSqlDataWarehouseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlCredentialScan</summary>Schema for <c>AzureMySqlCredentialScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    databaseName: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageCredentialScan</summary>Schema for <c>AzureStorageCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageMsiScan</summary>Schema for <c>AzureStorageMsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataCredentialScan</summary>Schema for <c>TeradataCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataUserPassScan</summary>Schema for <c>TeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataTeradataUserPassScan</summary>Schema for <c>TeradataTeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleCredentialScan</summary>Schema for <c>OracleCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleUserPassScan</summary>Schema for <c>OracleUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaCredentialScan</summary>Schema for <c>SapS4HanaSapS4HanaCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaUserPassScan</summary>Schema for <c>SapS4HanaSapS4HanaUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccCredentialScan</summary>Schema for <c>SapEccCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccUserPassScan</summary>Schema for <c>SapEccUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDelegatedScan</summary>Schema for <c>PowerBIDelegatedScan</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    authenticationType: string, # Optional.
    clientId: string, # Optional.
    userName: string, # Optional.
    password: string, # Optional.
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIDelegated, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIMsiScan</summary>Schema for <c>PowerBIMsiScan</c>:
<code>{
  properties: {
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="Delete(RequestContext)">
<example>
This sample shows how to call Delete and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = client.Delete();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("parentId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsDiscovered").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("assetsClassified").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("queuedTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("pipelineStartTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetVersion").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanRulesetType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("scanLevelType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("errorMessage").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("runType").ToString());
Console.WriteLine(result.GetProperty("scanResults")[0].GetProperty("dataSourceType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

This method takes one of the JSON objects below as a payload. Please select a JSON object to view the schema for this.
<details><summary>AzureSubscriptionCredentialScan</summary>Schema for <c>AzureSubscriptionCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>~+ 42 more JSON objects</summary><details><summary>AzureSubscriptionMsiScan</summary>Schema for <c>AzureSubscriptionMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSubscriptionMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupCredentialScan</summary>Schema for <c>AzureResourceGroupCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureResourceGroupMsiScan</summary>Schema for <c>AzureResourceGroupMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureResourceGroupMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceCredentialScan</summary>Schema for <c>AzureSynapseWorkspaceCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseWorkspaceMsiScan</summary>Schema for <c>AzureSynapseWorkspaceMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseWorkspaceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseCredentialScan</summary>Schema for <c>AzureSynapseCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSynapseMsiScan</summary>Schema for <c>AzureSynapseMsiScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSynapseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1CredentialScan</summary>Schema for <c>AdlsGen1CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen1MsiScan</summary>Schema for <c>AdlsGen1MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen1Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2CredentialScan</summary>Schema for <c>AdlsGen2CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AdlsGen2MsiScan</summary>Schema for <c>AdlsGen2MsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AdlsGen2Msi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonAccountCredentialScan</summary>Schema for <c>AmazonAccountCredentialScan</c>:
<code>{
  properties: {
    resourceTypes: {
      None: {
        scanRulesetName: string, # Optional.
        scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
        resourceNameFilter: {
          excludePrefixes: [string], # Optional.
          includePrefixes: [string], # Optional.
          resources: [string], # Optional.
        }, # Optional.
        credential: {
          referenceName: string, # Optional.
          credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
        }, # Optional.
      }, # Optional.
      AzureSubscription: ResourceTypeFilter, # Optional.
      AzureResourceGroup: ResourceTypeFilter, # Optional.
      AzureSynapseWorkspace: ResourceTypeFilter, # Optional.
      AzureSynapse: ResourceTypeFilter, # Optional.
      AdlsGen1: ResourceTypeFilter, # Optional.
      AdlsGen2: ResourceTypeFilter, # Optional.
      AmazonAccount: ResourceTypeFilter, # Optional.
      AmazonS3: ResourceTypeFilter, # Optional.
      AmazonSql: ResourceTypeFilter, # Optional.
      AzureCosmosDb: ResourceTypeFilter, # Optional.
      AzureDataExplorer: ResourceTypeFilter, # Optional.
      AzureFileService: ResourceTypeFilter, # Optional.
      AzureSqlDatabase: ResourceTypeFilter, # Optional.
      AmazonPostgreSql: ResourceTypeFilter, # Optional.
      AzurePostgreSql: ResourceTypeFilter, # Optional.
      SqlServerDatabase: ResourceTypeFilter, # Optional.
      AzureSqlDatabaseManagedInstance: ResourceTypeFilter, # Optional.
      AzureSqlDataWarehouse: ResourceTypeFilter, # Optional.
      AzureMySql: ResourceTypeFilter, # Optional.
      AzureStorage: ResourceTypeFilter, # Optional.
      Teradata: ResourceTypeFilter, # Optional.
      Oracle: ResourceTypeFilter, # Optional.
      SapS4Hana: ResourceTypeFilter, # Optional.
      SapEcc: ResourceTypeFilter, # Optional.
      PowerBI: ResourceTypeFilter, # Optional.
    }, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonAccountCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3CredentialScan</summary>Schema for <c>AmazonS3CredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3Credential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonS3RoleARNScan</summary>Schema for <c>AmazonS3RoleARNScan</c>:
<code>{
  properties: {
    roleARN: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonS3RoleARN, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonSqlCredentialScan</summary>Schema for <c>AmazonSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureCosmosDbCredentialScan</summary>Schema for <c>AzureCosmosDbCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureCosmosDbCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerCredentialScan</summary>Schema for <c>AzureDataExplorerCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureDataExplorerMsiScan</summary>Schema for <c>AzureDataExplorerMsiScan</c>:
<code>{
  properties: {
    database: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureDataExplorerMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureFileServiceCredentialScan</summary>Schema for <c>AzureFileServiceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    shareName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureFileServiceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseCredentialScan</summary>Schema for <c>AzureSqlDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseMsiScan</summary>Schema for <c>AzureSqlDatabaseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AmazonPostgreSqlCredentialScan</summary>Schema for <c>AmazonPostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AmazonPostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzurePostgreSqlCredentialScan</summary>Schema for <c>AzurePostgreSqlCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    port: number, # Optional.
    sslMode: number, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzurePostgreSqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SqlServerDatabaseCredentialScan</summary>Schema for <c>SqlServerDatabaseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SqlServerDatabaseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceCredentialScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDatabaseManagedInstanceMsiScan</summary>Schema for <c>AzureSqlDatabaseManagedInstanceMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDatabaseManagedInstanceMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseCredentialScan</summary>Schema for <c>AzureSqlDataWarehouseCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureSqlDataWarehouseMsiScan</summary>Schema for <c>AzureSqlDataWarehouseMsiScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    databaseName: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureSqlDataWarehouseMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureMySqlCredentialScan</summary>Schema for <c>AzureMySqlCredentialScan</c>:
<code>{
  properties: {
    serverEndpoint: string, # Optional.
    port: number, # Optional.
    databaseName: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureMySqlCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageCredentialScan</summary>Schema for <c>AzureStorageCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>AzureStorageMsiScan</summary>Schema for <c>AzureStorageMsiScan</c>:
<code>{
  properties: {
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: AzureStorageMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataCredentialScan</summary>Schema for <c>TeradataCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataUserPassScan</summary>Schema for <c>TeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>TeradataTeradataUserPassScan</summary>Schema for <c>TeradataTeradataUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: TeradataTeradataUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleCredentialScan</summary>Schema for <c>OracleCredentialScan</c>:
<code>{
  properties: {
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>OracleUserPassScan</summary>Schema for <c>OracleUserPassScan</c>:
<code>{
  properties: {
    username: string, # Optional.
    password: string, # Optional.
    schema: string, # Optional.
    driverLocation: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: OracleOracleUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaCredentialScan</summary>Schema for <c>SapS4HanaSapS4HanaCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapS4HanaSapS4HanaUserPassScan</summary>Schema for <c>SapS4HanaSapS4HanaUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapS4HanaSapS4HanaUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccCredentialScan</summary>Schema for <c>SapEccCredentialScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    credential: {
      referenceName: string, # Optional.
      credentialType: &quot;AccountKey&quot; | &quot;ServicePrincipal&quot; | &quot;BasicAuth&quot; | &quot;SqlAuth&quot; | &quot;AmazonARN&quot;, # Optional.
    }, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccCredential, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>SapEccUserPassScan</summary>Schema for <c>SapEccUserPassScan</c>:
<code>{
  properties: {
    clientId: string, # Optional.
    username: string, # Optional.
    password: string, # Optional.
    jCoLibraryPath: string, # Optional.
    maximumMemoryAllowedInGb: string, # Optional.
    mitiCache: string, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: SapEccSapEccUserPass, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIDelegatedScan</summary>Schema for <c>PowerBIDelegatedScan</c>:
<code>{
  properties: {
    tenant: string, # Optional.
    authenticationType: string, # Optional.
    clientId: string, # Optional.
    userName: string, # Optional.
    password: string, # Optional.
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIDelegated, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
<details><summary>PowerBIMsiScan</summary>Schema for <c>PowerBIMsiScan</c>:
<code>{
  properties: {
    includePersonalWorkspaces: boolean, # Optional.
    scanRulesetName: string, # Optional.
    scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
    collection: {
      lastModifiedAt: string (ISO 8601 Format), # Optional.
      referenceName: string, # Optional.
      type: string, # Optional.
    }, # Optional.
    workers: number, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    connectedVia: {
      referenceName: string, # Optional.
    }, # Optional.
  }, # Optional.
  kind: PowerBIMsi, # Required.
  scanResults: [
    {
      parentId: string, # Optional.
      id: string, # Optional.
      resourceId: string, # Optional.
      status: string, # Optional.
      assetsDiscovered: number, # Optional.
      assetsClassified: number, # Optional.
      diagnostics: {
        notifications: [
          {
            message: string, # Optional.
            code: number, # Optional.
          }
        ], # Optional.
        exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
      }, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      queuedTime: string (ISO 8601 Format), # Optional.
      pipelineStartTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      scanRulesetVersion: number, # Optional.
      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
      errorMessage: string, # Optional.
      error: {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [
          {
            code: string, # Optional.
            message: string, # Optional.
            target: string, # Optional.
            details: [ErrorModel], # Optional.
          }
        ], # Optional.
      }, # Optional.
      runType: string, # Optional.
      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
    }
  ], # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>
</details>
</details>

</remarks>
    </member>
    <member name="RunScanAsync(String,String,RequestContext)">
<example>
This sample shows how to call RunScanAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = await client.RunScanAsync("<runId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RunScanAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = await client.RunScanAsync("<runId>", "<scanLevel>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("scanResultId").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>OperationResponse</c>:
<code>{
  scanResultId: Guid, # Optional.
  startTime: string (ISO 8601 Format), # Optional.
  endTime: string (ISO 8601 Format), # Optional.
  status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;, # Optional.
  error: {
    code: string, # Optional.
    message: string, # Optional.
    target: string, # Optional.
    details: [
      {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [ErrorInfo], # Optional.
      }
    ], # Optional.
  }, # Optional.
}
</code>

</remarks>
    </member>
    <member name="RunScan(String,String,RequestContext)">
<example>
This sample shows how to call RunScan with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = client.RunScan("<runId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RunScan with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = client.RunScan("<runId>", "<scanLevel>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("scanResultId").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>OperationResponse</c>:
<code>{
  scanResultId: Guid, # Optional.
  startTime: string (ISO 8601 Format), # Optional.
  endTime: string (ISO 8601 Format), # Optional.
  status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;, # Optional.
  error: {
    code: string, # Optional.
    message: string, # Optional.
    target: string, # Optional.
    details: [
      {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [ErrorInfo], # Optional.
      }
    ], # Optional.
  }, # Optional.
}
</code>

</remarks>
    </member>
    <member name="CancelScanAsync(String,RequestContext)">
<example>
This sample shows how to call CancelScanAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = await client.CancelScanAsync("<runId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("scanResultId").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>OperationResponse</c>:
<code>{
  scanResultId: Guid, # Optional.
  startTime: string (ISO 8601 Format), # Optional.
  endTime: string (ISO 8601 Format), # Optional.
  status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;, # Optional.
  error: {
    code: string, # Optional.
    message: string, # Optional.
    target: string, # Optional.
    details: [
      {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [ErrorInfo], # Optional.
      }
    ], # Optional.
  }, # Optional.
}
</code>

</remarks>
    </member>
    <member name="CancelScan(String,RequestContext)">
<example>
This sample shows how to call CancelScan with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = client.CancelScan("<runId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("scanResultId").ToString());
Console.WriteLine(result.GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>OperationResponse</c>:
<code>{
  scanResultId: Guid, # Optional.
  startTime: string (ISO 8601 Format), # Optional.
  endTime: string (ISO 8601 Format), # Optional.
  status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;, # Optional.
  error: {
    code: string, # Optional.
    message: string, # Optional.
    target: string, # Optional.
    details: [
      {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [ErrorInfo], # Optional.
      }
    ], # Optional.
  }, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetTriggerAsync(RequestContext)">
<example>
This sample shows how to call GetTriggerAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = await client.GetTriggerAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("interval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("minutes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("hours")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("weekDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("day").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("occurrence").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("timeZone").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrenceInterval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastScheduled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scanLevel").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("incrementalScanStartTime").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Trigger</c>:
<code>{
  properties: {
    recurrence: {
      frequency: &quot;Week&quot; | &quot;Month&quot;, # Optional.
      interval: number, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      schedule: {
        additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
        minutes: [number], # Optional.
        hours: [number], # Optional.
        weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;], # Optional.
        monthDays: [number], # Optional.
        monthlyOccurrences: [
          {
            additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
            day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;, # Optional.
            occurrence: number, # Optional.
          }
        ], # Optional.
      }, # Optional.
      timeZone: string, # Optional.
    }, # Optional.
    recurrenceInterval: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    lastScheduled: string (ISO 8601 Format), # Optional.
    scanLevel: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
    incrementalScanStartTime: string (ISO 8601 Format), # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetTrigger(RequestContext)">
<example>
This sample shows how to call GetTrigger and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = client.GetTrigger();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("interval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("minutes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("hours")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("weekDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("day").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("occurrence").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("timeZone").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrenceInterval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastScheduled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scanLevel").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("incrementalScanStartTime").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Trigger</c>:
<code>{
  properties: {
    recurrence: {
      frequency: &quot;Week&quot; | &quot;Month&quot;, # Optional.
      interval: number, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      schedule: {
        additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
        minutes: [number], # Optional.
        hours: [number], # Optional.
        weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;], # Optional.
        monthDays: [number], # Optional.
        monthlyOccurrences: [
          {
            additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
            day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;, # Optional.
            occurrence: number, # Optional.
          }
        ], # Optional.
      }, # Optional.
      timeZone: string, # Optional.
    }, # Optional.
    recurrenceInterval: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    lastScheduled: string (ISO 8601 Format), # Optional.
    scanLevel: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
    incrementalScanStartTime: string (ISO 8601 Format), # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="CreateOrUpdateTriggerAsync(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateTriggerAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {};

Response response = await client.CreateOrUpdateTriggerAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateTriggerAsync with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {
    properties = new {
        recurrence = new {
            frequency = "Week",
            interval = 1234,
            startTime = "2022-05-10T18:57:31.2311892Z",
            endTime = "2022-05-10T18:57:31.2311892Z",
            schedule = new {
                additionalProperties = new {
                    key = new {},
                },
                minutes = new[] {
                    1234
                },
                hours = new[] {
                    1234
                },
                weekDays = new[] {
                    "Sunday"
                },
                monthDays = new[] {
                    1234
                },
                monthlyOccurrences = new[] {
                    new {
                        additionalProperties = new {
                            key = new {},
                        },
                        day = "Sunday",
                        occurrence = 1234,
                    }
                },
            },
            timeZone = "<timeZone>",
        },
        recurrenceInterval = "<recurrenceInterval>",
        scanLevel = "Full",
        incrementalScanStartTime = "2022-05-10T18:57:31.2311892Z",
    },
};

Response response = await client.CreateOrUpdateTriggerAsync(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("interval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("minutes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("hours")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("weekDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("day").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("occurrence").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("timeZone").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrenceInterval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastScheduled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scanLevel").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("incrementalScanStartTime").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Trigger</c>:
<code>{
  properties: {
    recurrence: {
      frequency: &quot;Week&quot; | &quot;Month&quot;, # Optional.
      interval: number, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      schedule: {
        additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
        minutes: [number], # Optional.
        hours: [number], # Optional.
        weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;], # Optional.
        monthDays: [number], # Optional.
        monthlyOccurrences: [
          {
            additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
            day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;, # Optional.
            occurrence: number, # Optional.
          }
        ], # Optional.
      }, # Optional.
      timeZone: string, # Optional.
    }, # Optional.
    recurrenceInterval: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    lastScheduled: string (ISO 8601 Format), # Optional.
    scanLevel: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
    incrementalScanStartTime: string (ISO 8601 Format), # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

Response Body:

Schema for <c>Trigger</c>:
<code>{
  properties: {
    recurrence: {
      frequency: &quot;Week&quot; | &quot;Month&quot;, # Optional.
      interval: number, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      schedule: {
        additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
        minutes: [number], # Optional.
        hours: [number], # Optional.
        weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;], # Optional.
        monthDays: [number], # Optional.
        monthlyOccurrences: [
          {
            additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
            day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;, # Optional.
            occurrence: number, # Optional.
          }
        ], # Optional.
      }, # Optional.
      timeZone: string, # Optional.
    }, # Optional.
    recurrenceInterval: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    lastScheduled: string (ISO 8601 Format), # Optional.
    scanLevel: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
    incrementalScanStartTime: string (ISO 8601 Format), # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="CreateOrUpdateTrigger(RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateTrigger and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {};

Response response = client.CreateOrUpdateTrigger(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateTrigger with all request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

var data = new {
    properties = new {
        recurrence = new {
            frequency = "Week",
            interval = 1234,
            startTime = "2022-05-10T18:57:31.2311892Z",
            endTime = "2022-05-10T18:57:31.2311892Z",
            schedule = new {
                additionalProperties = new {
                    key = new {},
                },
                minutes = new[] {
                    1234
                },
                hours = new[] {
                    1234
                },
                weekDays = new[] {
                    "Sunday"
                },
                monthDays = new[] {
                    1234
                },
                monthlyOccurrences = new[] {
                    new {
                        additionalProperties = new {
                            key = new {},
                        },
                        day = "Sunday",
                        occurrence = 1234,
                    }
                },
            },
            timeZone = "<timeZone>",
        },
        recurrenceInterval = "<recurrenceInterval>",
        scanLevel = "Full",
        incrementalScanStartTime = "2022-05-10T18:57:31.2311892Z",
    },
};

Response response = client.CreateOrUpdateTrigger(RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("interval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("minutes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("hours")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("weekDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("day").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("occurrence").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("timeZone").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrenceInterval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastScheduled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scanLevel").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("incrementalScanStartTime").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the request and response payloads.

Request Body:

Schema for <c>Trigger</c>:
<code>{
  properties: {
    recurrence: {
      frequency: &quot;Week&quot; | &quot;Month&quot;, # Optional.
      interval: number, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      schedule: {
        additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
        minutes: [number], # Optional.
        hours: [number], # Optional.
        weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;], # Optional.
        monthDays: [number], # Optional.
        monthlyOccurrences: [
          {
            additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
            day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;, # Optional.
            occurrence: number, # Optional.
          }
        ], # Optional.
      }, # Optional.
      timeZone: string, # Optional.
    }, # Optional.
    recurrenceInterval: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    lastScheduled: string (ISO 8601 Format), # Optional.
    scanLevel: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
    incrementalScanStartTime: string (ISO 8601 Format), # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

Response Body:

Schema for <c>Trigger</c>:
<code>{
  properties: {
    recurrence: {
      frequency: &quot;Week&quot; | &quot;Month&quot;, # Optional.
      interval: number, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      schedule: {
        additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
        minutes: [number], # Optional.
        hours: [number], # Optional.
        weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;], # Optional.
        monthDays: [number], # Optional.
        monthlyOccurrences: [
          {
            additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
            day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;, # Optional.
            occurrence: number, # Optional.
          }
        ], # Optional.
      }, # Optional.
      timeZone: string, # Optional.
    }, # Optional.
    recurrenceInterval: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    lastScheduled: string (ISO 8601 Format), # Optional.
    scanLevel: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
    incrementalScanStartTime: string (ISO 8601 Format), # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="DeleteTriggerAsync(RequestContext)">
<example>
This sample shows how to call DeleteTriggerAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = await client.DeleteTriggerAsync();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("interval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("minutes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("hours")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("weekDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("day").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("occurrence").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("timeZone").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrenceInterval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastScheduled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scanLevel").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("incrementalScanStartTime").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Trigger</c>:
<code>{
  properties: {
    recurrence: {
      frequency: &quot;Week&quot; | &quot;Month&quot;, # Optional.
      interval: number, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      schedule: {
        additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
        minutes: [number], # Optional.
        hours: [number], # Optional.
        weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;], # Optional.
        monthDays: [number], # Optional.
        monthlyOccurrences: [
          {
            additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
            day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;, # Optional.
            occurrence: number, # Optional.
          }
        ], # Optional.
      }, # Optional.
      timeZone: string, # Optional.
    }, # Optional.
    recurrenceInterval: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    lastScheduled: string (ISO 8601 Format), # Optional.
    scanLevel: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
    incrementalScanStartTime: string (ISO 8601 Format), # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="DeleteTrigger(RequestContext)">
<example>
This sample shows how to call DeleteTrigger and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

Response response = client.DeleteTrigger();

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("interval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("minutes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("hours")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("weekDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthDays")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("additionalProperties").GetProperty("<test>").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("day").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("schedule").GetProperty("monthlyOccurrences")[0].GetProperty("occurrence").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrence").GetProperty("timeZone").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recurrenceInterval").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("lastScheduled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scanLevel").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("incrementalScanStartTime").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
</example>
<remarks>
Below is the JSON schema for the response payload.

Response Body:

Schema for <c>Trigger</c>:
<code>{
  properties: {
    recurrence: {
      frequency: &quot;Week&quot; | &quot;Month&quot;, # Optional.
      interval: number, # Optional.
      startTime: string (ISO 8601 Format), # Optional.
      endTime: string (ISO 8601 Format), # Optional.
      schedule: {
        additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
        minutes: [number], # Optional.
        hours: [number], # Optional.
        weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;], # Optional.
        monthDays: [number], # Optional.
        monthlyOccurrences: [
          {
            additionalProperties: Dictionary&lt;string, AnyObject&gt;, # Optional. Dictionary of &lt;AnyObject&gt;
            day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;, # Optional.
            occurrence: number, # Optional.
          }
        ], # Optional.
      }, # Optional.
      timeZone: string, # Optional.
    }, # Optional.
    recurrenceInterval: string, # Optional.
    createdAt: string (ISO 8601 Format), # Optional.
    lastModifiedAt: string (ISO 8601 Format), # Optional.
    lastScheduled: string (ISO 8601 Format), # Optional.
    scanLevel: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
    incrementalScanStartTime: string (ISO 8601 Format), # Optional.
  }, # Optional.
  id: string, # Optional.
  name: string, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetRunsAsync(RequestContext)">
<example>
This sample shows how to call GetRunsAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

await foreach (var data in client.GetRunsAsync())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("assetsDiscovered").ToString());
    Console.WriteLine(result.GetProperty("assetsClassified").ToString());
    Console.WriteLine(result.GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
    Console.WriteLine(result.GetProperty("startTime").ToString());
    Console.WriteLine(result.GetProperty("queuedTime").ToString());
    Console.WriteLine(result.GetProperty("pipelineStartTime").ToString());
    Console.WriteLine(result.GetProperty("endTime").ToString());
    Console.WriteLine(result.GetProperty("scanRulesetVersion").ToString());
    Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
    Console.WriteLine(result.GetProperty("scanLevelType").ToString());
    Console.WriteLine(result.GetProperty("errorMessage").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("runType").ToString());
    Console.WriteLine(result.GetProperty("dataSourceType").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>ScanHistoryListValue</c>:
<code>{
  parentId: string, # Optional.
  id: string, # Optional.
  resourceId: string, # Optional.
  status: string, # Optional.
  assetsDiscovered: number, # Optional.
  assetsClassified: number, # Optional.
  diagnostics: {
    notifications: [
      {
        message: string, # Optional.
        code: number, # Optional.
      }
    ], # Optional.
    exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
  }, # Optional.
  startTime: string (ISO 8601 Format), # Optional.
  queuedTime: string (ISO 8601 Format), # Optional.
  pipelineStartTime: string (ISO 8601 Format), # Optional.
  endTime: string (ISO 8601 Format), # Optional.
  scanRulesetVersion: number, # Optional.
  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
  errorMessage: string, # Optional.
  error: {
    code: string, # Optional.
    message: string, # Optional.
    target: string, # Optional.
    details: [
      {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [ErrorModel], # Optional.
      }
    ], # Optional.
  }, # Optional.
  runType: string, # Optional.
  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
}
</code>

</remarks>
    </member>
    <member name="GetRuns(RequestContext)">
<example>
This sample shows how to call GetRuns and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var endpoint = new Uri("<https://my-service.azure.com>");
var client = new PurviewScanClient(endpoint, "<dataSourceName>", "<scanName>", credential);

foreach (var data in client.GetRuns())
{
    JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("parentId").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("assetsDiscovered").ToString());
    Console.WriteLine(result.GetProperty("assetsClassified").ToString());
    Console.WriteLine(result.GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("diagnostics").GetProperty("notifications")[0].GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("diagnostics").GetProperty("exceptionCountMap").GetProperty("<test>").ToString());
    Console.WriteLine(result.GetProperty("startTime").ToString());
    Console.WriteLine(result.GetProperty("queuedTime").ToString());
    Console.WriteLine(result.GetProperty("pipelineStartTime").ToString());
    Console.WriteLine(result.GetProperty("endTime").ToString());
    Console.WriteLine(result.GetProperty("scanRulesetVersion").ToString());
    Console.WriteLine(result.GetProperty("scanRulesetType").ToString());
    Console.WriteLine(result.GetProperty("scanLevelType").ToString());
    Console.WriteLine(result.GetProperty("errorMessage").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("details")[0].GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("runType").ToString());
    Console.WriteLine(result.GetProperty("dataSourceType").ToString());
}
]]></code>
</example>
<remarks>
Below is the JSON schema for one item in the pageable response.

Response Body:

Schema for <c>ScanHistoryListValue</c>:
<code>{
  parentId: string, # Optional.
  id: string, # Optional.
  resourceId: string, # Optional.
  status: string, # Optional.
  assetsDiscovered: number, # Optional.
  assetsClassified: number, # Optional.
  diagnostics: {
    notifications: [
      {
        message: string, # Optional.
        code: number, # Optional.
      }
    ], # Optional.
    exceptionCountMap: Dictionary&lt;string, number&gt;, # Optional. Dictionary of &lt;integer&gt;
  }, # Optional.
  startTime: string (ISO 8601 Format), # Optional.
  queuedTime: string (ISO 8601 Format), # Optional.
  pipelineStartTime: string (ISO 8601 Format), # Optional.
  endTime: string (ISO 8601 Format), # Optional.
  scanRulesetVersion: number, # Optional.
  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;, # Optional.
  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;, # Optional.
  errorMessage: string, # Optional.
  error: {
    code: string, # Optional.
    message: string, # Optional.
    target: string, # Optional.
    details: [
      {
        code: string, # Optional.
        message: string, # Optional.
        target: string, # Optional.
        details: [ErrorModel], # Optional.
      }
    ], # Optional.
  }, # Optional.
  runType: string, # Optional.
  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;, # Optional.
}
</code>

</remarks>
    </member>
  </members>
</doc>