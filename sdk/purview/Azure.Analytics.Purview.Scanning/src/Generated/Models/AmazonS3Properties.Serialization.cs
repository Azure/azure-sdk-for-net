// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Scanning.Models
{
    public partial class AmazonS3Properties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ServiceUrl))
            {
                writer.WritePropertyName("serviceUrl");
                writer.WriteStringValue(ServiceUrl);
            }
            if (Optional.IsDefined(RoleARN))
            {
                writer.WritePropertyName("roleARN");
                writer.WriteStringValue(RoleARN);
            }
            if (Optional.IsDefined(Collection))
            {
                writer.WritePropertyName("collection");
                writer.WriteObjectValue(Collection);
            }
            writer.WriteEndObject();
        }

        internal static AmazonS3Properties DeserializeAmazonS3Properties(JsonElement element)
        {
            Optional<string> serviceUrl = default;
            Optional<string> roleARN = default;
            Optional<DateTimeOffset> createdAt = default;
            Optional<DateTimeOffset> lastModifiedAt = default;
            Optional<DataSourcePropertiesCollection> collection = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("serviceUrl"))
                {
                    serviceUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("roleARN"))
                {
                    roleARN = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createdAt"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    createdAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastModifiedAt"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastModifiedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("collection"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    collection = DataSourcePropertiesCollection.DeserializeDataSourcePropertiesCollection(property.Value);
                    continue;
                }
            }
            return new AmazonS3Properties(Optional.ToNullable(createdAt), Optional.ToNullable(lastModifiedAt), collection.Value, serviceUrl.Value, roleARN.Value);
        }
    }
}
