// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Scanning.Models
{
    public partial class ExpandingResourceScanPropertiesResourceTypes : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(None))
            {
                writer.WritePropertyName("None");
                writer.WriteObjectValue(None);
            }
            if (Optional.IsDefined(AzureSubscription))
            {
                writer.WritePropertyName("AzureSubscription");
                writer.WriteObjectValue(AzureSubscription);
            }
            if (Optional.IsDefined(AzureResourceGroup))
            {
                writer.WritePropertyName("AzureResourceGroup");
                writer.WriteObjectValue(AzureResourceGroup);
            }
            if (Optional.IsDefined(AzureSynapseWorkspace))
            {
                writer.WritePropertyName("AzureSynapseWorkspace");
                writer.WriteObjectValue(AzureSynapseWorkspace);
            }
            if (Optional.IsDefined(AzureSynapse))
            {
                writer.WritePropertyName("AzureSynapse");
                writer.WriteObjectValue(AzureSynapse);
            }
            if (Optional.IsDefined(AdlsGen1))
            {
                writer.WritePropertyName("AdlsGen1");
                writer.WriteObjectValue(AdlsGen1);
            }
            if (Optional.IsDefined(AdlsGen2))
            {
                writer.WritePropertyName("AdlsGen2");
                writer.WriteObjectValue(AdlsGen2);
            }
            if (Optional.IsDefined(AmazonAccount))
            {
                writer.WritePropertyName("AmazonAccount");
                writer.WriteObjectValue(AmazonAccount);
            }
            if (Optional.IsDefined(AmazonS3))
            {
                writer.WritePropertyName("AmazonS3");
                writer.WriteObjectValue(AmazonS3);
            }
            if (Optional.IsDefined(AmazonSql))
            {
                writer.WritePropertyName("AmazonSql");
                writer.WriteObjectValue(AmazonSql);
            }
            if (Optional.IsDefined(AzureCosmosDb))
            {
                writer.WritePropertyName("AzureCosmosDb");
                writer.WriteObjectValue(AzureCosmosDb);
            }
            if (Optional.IsDefined(AzureDataExplorer))
            {
                writer.WritePropertyName("AzureDataExplorer");
                writer.WriteObjectValue(AzureDataExplorer);
            }
            if (Optional.IsDefined(AzureFileService))
            {
                writer.WritePropertyName("AzureFileService");
                writer.WriteObjectValue(AzureFileService);
            }
            if (Optional.IsDefined(AzureSqlDatabase))
            {
                writer.WritePropertyName("AzureSqlDatabase");
                writer.WriteObjectValue(AzureSqlDatabase);
            }
            if (Optional.IsDefined(AmazonPostgreSql))
            {
                writer.WritePropertyName("AmazonPostgreSql");
                writer.WriteObjectValue(AmazonPostgreSql);
            }
            if (Optional.IsDefined(AzurePostgreSql))
            {
                writer.WritePropertyName("AzurePostgreSql");
                writer.WriteObjectValue(AzurePostgreSql);
            }
            if (Optional.IsDefined(SqlServerDatabase))
            {
                writer.WritePropertyName("SqlServerDatabase");
                writer.WriteObjectValue(SqlServerDatabase);
            }
            if (Optional.IsDefined(AzureSqlDatabaseManagedInstance))
            {
                writer.WritePropertyName("AzureSqlDatabaseManagedInstance");
                writer.WriteObjectValue(AzureSqlDatabaseManagedInstance);
            }
            if (Optional.IsDefined(AzureSqlDataWarehouse))
            {
                writer.WritePropertyName("AzureSqlDataWarehouse");
                writer.WriteObjectValue(AzureSqlDataWarehouse);
            }
            if (Optional.IsDefined(AzureMySql))
            {
                writer.WritePropertyName("AzureMySql");
                writer.WriteObjectValue(AzureMySql);
            }
            if (Optional.IsDefined(AzureStorage))
            {
                writer.WritePropertyName("AzureStorage");
                writer.WriteObjectValue(AzureStorage);
            }
            if (Optional.IsDefined(Teradata))
            {
                writer.WritePropertyName("Teradata");
                writer.WriteObjectValue(Teradata);
            }
            if (Optional.IsDefined(Oracle))
            {
                writer.WritePropertyName("Oracle");
                writer.WriteObjectValue(Oracle);
            }
            if (Optional.IsDefined(SapS4Hana))
            {
                writer.WritePropertyName("SapS4Hana");
                writer.WriteObjectValue(SapS4Hana);
            }
            if (Optional.IsDefined(SapEcc))
            {
                writer.WritePropertyName("SapEcc");
                writer.WriteObjectValue(SapEcc);
            }
            if (Optional.IsDefined(PowerBI))
            {
                writer.WritePropertyName("PowerBI");
                writer.WriteObjectValue(PowerBI);
            }
            writer.WriteEndObject();
        }

        internal static ExpandingResourceScanPropertiesResourceTypes DeserializeExpandingResourceScanPropertiesResourceTypes(JsonElement element)
        {
            Optional<ResourceTypeFilter> none = default;
            Optional<ResourceTypeFilter> azureSubscription = default;
            Optional<ResourceTypeFilter> azureResourceGroup = default;
            Optional<ResourceTypeFilter> azureSynapseWorkspace = default;
            Optional<ResourceTypeFilter> azureSynapse = default;
            Optional<ResourceTypeFilter> adlsGen1 = default;
            Optional<ResourceTypeFilter> adlsGen2 = default;
            Optional<ResourceTypeFilter> amazonAccount = default;
            Optional<ResourceTypeFilter> amazonS3 = default;
            Optional<ResourceTypeFilter> amazonSql = default;
            Optional<ResourceTypeFilter> azureCosmosDb = default;
            Optional<ResourceTypeFilter> azureDataExplorer = default;
            Optional<ResourceTypeFilter> azureFileService = default;
            Optional<ResourceTypeFilter> azureSqlDatabase = default;
            Optional<ResourceTypeFilter> amazonPostgreSql = default;
            Optional<ResourceTypeFilter> azurePostgreSql = default;
            Optional<ResourceTypeFilter> sqlServerDatabase = default;
            Optional<ResourceTypeFilter> azureSqlDatabaseManagedInstance = default;
            Optional<ResourceTypeFilter> azureSqlDataWarehouse = default;
            Optional<ResourceTypeFilter> azureMySql = default;
            Optional<ResourceTypeFilter> azureStorage = default;
            Optional<ResourceTypeFilter> teradata = default;
            Optional<ResourceTypeFilter> oracle = default;
            Optional<ResourceTypeFilter> sapS4Hana = default;
            Optional<ResourceTypeFilter> sapEcc = default;
            Optional<ResourceTypeFilter> powerBI = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("None"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    none = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureSubscription"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureSubscription = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureResourceGroup"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureResourceGroup = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureSynapseWorkspace"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureSynapseWorkspace = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureSynapse"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureSynapse = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AdlsGen1"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    adlsGen1 = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AdlsGen2"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    adlsGen2 = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AmazonAccount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    amazonAccount = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AmazonS3"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    amazonS3 = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AmazonSql"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    amazonSql = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureCosmosDb"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureCosmosDb = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureDataExplorer"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureDataExplorer = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureFileService"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureFileService = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureSqlDatabase"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureSqlDatabase = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AmazonPostgreSql"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    amazonPostgreSql = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzurePostgreSql"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azurePostgreSql = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("SqlServerDatabase"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sqlServerDatabase = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureSqlDatabaseManagedInstance"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureSqlDatabaseManagedInstance = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureSqlDataWarehouse"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureSqlDataWarehouse = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureMySql"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureMySql = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("AzureStorage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    azureStorage = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("Teradata"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    teradata = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("Oracle"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    oracle = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("SapS4Hana"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sapS4Hana = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("SapEcc"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sapEcc = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
                if (property.NameEquals("PowerBI"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    powerBI = ResourceTypeFilter.DeserializeResourceTypeFilter(property.Value);
                    continue;
                }
            }
            return new ExpandingResourceScanPropertiesResourceTypes(none.Value, azureSubscription.Value, azureResourceGroup.Value, azureSynapseWorkspace.Value, azureSynapse.Value, adlsGen1.Value, adlsGen2.Value, amazonAccount.Value, amazonS3.Value, amazonSql.Value, azureCosmosDb.Value, azureDataExplorer.Value, azureFileService.Value, azureSqlDatabase.Value, amazonPostgreSql.Value, azurePostgreSql.Value, sqlServerDatabase.Value, azureSqlDatabaseManagedInstance.Value, azureSqlDataWarehouse.Value, azureMySql.Value, azureStorage.Value, teradata.Value, oracle.Value, sapS4Hana.Value, sapEcc.Value, powerBI.Value);
        }
    }
}
