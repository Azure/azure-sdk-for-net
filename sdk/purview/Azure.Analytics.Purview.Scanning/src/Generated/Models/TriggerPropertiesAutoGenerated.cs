// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Analytics.Purview.Scanning.Models
{
    /// <summary> The TriggerPropertiesAutoGenerated. </summary>
    public partial class TriggerPropertiesAutoGenerated
    {
        /// <summary> Initializes a new instance of TriggerPropertiesAutoGenerated. </summary>
        public TriggerPropertiesAutoGenerated()
        {
        }

        /// <summary> Initializes a new instance of TriggerPropertiesAutoGenerated. </summary>
        /// <param name="recurrence"></param>
        /// <param name="recurrenceInterval"></param>
        /// <param name="createdAt"></param>
        /// <param name="lastModifiedAt"></param>
        /// <param name="lastScheduled"></param>
        /// <param name="scanLevel"></param>
        /// <param name="incrementalScanStartTime"></param>
        internal TriggerPropertiesAutoGenerated(TriggerPropertiesRecurrence recurrence, string recurrenceInterval, DateTimeOffset? createdAt, DateTimeOffset? lastModifiedAt, DateTimeOffset? lastScheduled, ScanLevelType? scanLevel, DateTimeOffset? incrementalScanStartTime)
        {
            Recurrence = recurrence;
            RecurrenceInterval = recurrenceInterval;
            CreatedAt = createdAt;
            LastModifiedAt = lastModifiedAt;
            LastScheduled = lastScheduled;
            ScanLevel = scanLevel;
            IncrementalScanStartTime = incrementalScanStartTime;
        }

        /// <summary> Gets or sets the recurrence. </summary>
        public TriggerPropertiesRecurrence Recurrence { get; set; }
        /// <summary> Gets or sets the recurrence interval. </summary>
        public string RecurrenceInterval { get; set; }
        /// <summary> Gets the created at. </summary>
        public DateTimeOffset? CreatedAt { get; }
        /// <summary> Gets the last modified at. </summary>
        public DateTimeOffset? LastModifiedAt { get; }
        /// <summary> Gets the last scheduled. </summary>
        public DateTimeOffset? LastScheduled { get; }
        /// <summary> Gets or sets the scan level. </summary>
        public ScanLevelType? ScanLevel { get; set; }
        /// <summary> Gets or sets the incremental scan start time. </summary>
        public DateTimeOffset? IncrementalScanStartTime { get; set; }
    }
}
