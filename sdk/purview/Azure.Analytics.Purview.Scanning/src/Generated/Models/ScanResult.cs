// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Analytics.Purview.Scanning.Models
{
    /// <summary> The ScanResult. </summary>
    public partial class ScanResult
    {
        /// <summary> Initializes a new instance of ScanResult. </summary>
        internal ScanResult()
        {
        }

        /// <summary> Initializes a new instance of ScanResult. </summary>
        /// <param name="parentId"></param>
        /// <param name="id"></param>
        /// <param name="resourceId"></param>
        /// <param name="status"></param>
        /// <param name="assetsDiscovered"></param>
        /// <param name="assetsClassified"></param>
        /// <param name="diagnostics"></param>
        /// <param name="startTime"></param>
        /// <param name="queuedTime"></param>
        /// <param name="pipelineStartTime"></param>
        /// <param name="endTime"></param>
        /// <param name="scanRulesetVersion"></param>
        /// <param name="scanRulesetType"></param>
        /// <param name="scanLevelType"></param>
        /// <param name="errorMessage"></param>
        /// <param name="error"></param>
        /// <param name="runType"></param>
        /// <param name="dataSourceType"></param>
        internal ScanResult(string parentId, string id, string resourceId, string status, long? assetsDiscovered, long? assetsClassified, ScanResultDiagnostics diagnostics, DateTimeOffset? startTime, DateTimeOffset? queuedTime, DateTimeOffset? pipelineStartTime, DateTimeOffset? endTime, int? scanRulesetVersion, ScanRulesetType? scanRulesetType, ScanLevelType? scanLevelType, string errorMessage, ScanResultError error, string runType, DataSourceType? dataSourceType)
        {
            ParentId = parentId;
            Id = id;
            ResourceId = resourceId;
            Status = status;
            AssetsDiscovered = assetsDiscovered;
            AssetsClassified = assetsClassified;
            Diagnostics = diagnostics;
            StartTime = startTime;
            QueuedTime = queuedTime;
            PipelineStartTime = pipelineStartTime;
            EndTime = endTime;
            ScanRulesetVersion = scanRulesetVersion;
            ScanRulesetType = scanRulesetType;
            ScanLevelType = scanLevelType;
            ErrorMessage = errorMessage;
            Error = error;
            RunType = runType;
            DataSourceType = dataSourceType;
        }

        /// <summary> Gets the parent id. </summary>
        public string ParentId { get; }
        /// <summary> Gets the id. </summary>
        public string Id { get; }
        /// <summary> Gets the resource id. </summary>
        public string ResourceId { get; }
        /// <summary> Gets the status. </summary>
        public string Status { get; }
        /// <summary> Gets the assets discovered. </summary>
        public long? AssetsDiscovered { get; }
        /// <summary> Gets the assets classified. </summary>
        public long? AssetsClassified { get; }
        /// <summary> Gets the diagnostics. </summary>
        public ScanResultDiagnostics Diagnostics { get; }
        /// <summary> Gets the start time. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> Gets the queued time. </summary>
        public DateTimeOffset? QueuedTime { get; }
        /// <summary> Gets the pipeline start time. </summary>
        public DateTimeOffset? PipelineStartTime { get; }
        /// <summary> Gets the end time. </summary>
        public DateTimeOffset? EndTime { get; }
        /// <summary> Gets the scan ruleset version. </summary>
        public int? ScanRulesetVersion { get; }
        /// <summary> Gets the scan ruleset type. </summary>
        public ScanRulesetType? ScanRulesetType { get; }
        /// <summary> Gets the scan level type. </summary>
        public ScanLevelType? ScanLevelType { get; }
        /// <summary> Gets the error message. </summary>
        public string ErrorMessage { get; }
        /// <summary> Gets the error. </summary>
        public ScanResultError Error { get; }
        /// <summary> Gets the run type. </summary>
        public string RunType { get; }
        /// <summary> Gets the data source type. </summary>
        public DataSourceType? DataSourceType { get; }
    }
}
