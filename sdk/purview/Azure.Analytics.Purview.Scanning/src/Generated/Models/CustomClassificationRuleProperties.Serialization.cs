// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Purview.Scanning.Models
{
    public partial class CustomClassificationRuleProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MinimumPercentageMatch))
            {
                writer.WritePropertyName("minimumPercentageMatch");
                writer.WriteNumberValue(MinimumPercentageMatch.Value);
            }
            if (Optional.IsCollectionDefined(DataPatterns))
            {
                writer.WritePropertyName("dataPatterns");
                writer.WriteStartArray();
                foreach (var item in DataPatterns)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ColumnPatterns))
            {
                writer.WritePropertyName("columnPatterns");
                writer.WriteStartArray();
                foreach (var item in ColumnPatterns)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(ClassificationName))
            {
                writer.WritePropertyName("classificationName");
                writer.WriteStringValue(ClassificationName);
            }
            if (Optional.IsDefined(RuleStatus))
            {
                writer.WritePropertyName("ruleStatus");
                writer.WriteStringValue(RuleStatus.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static CustomClassificationRuleProperties DeserializeCustomClassificationRuleProperties(JsonElement element)
        {
            Optional<double> minimumPercentageMatch = default;
            Optional<ClassificationAction> classificationAction = default;
            Optional<IList<ClassificationRulePattern>> dataPatterns = default;
            Optional<IList<ClassificationRulePattern>> columnPatterns = default;
            Optional<string> description = default;
            Optional<int> version = default;
            Optional<string> classificationName = default;
            Optional<ClassificationRuleStatus> ruleStatus = default;
            Optional<DateTimeOffset> createdAt = default;
            Optional<DateTimeOffset> lastModifiedAt = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("minimumPercentageMatch"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    minimumPercentageMatch = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("classificationAction"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    classificationAction = new ClassificationAction(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("dataPatterns"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ClassificationRulePattern> array = new List<ClassificationRulePattern>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ClassificationRulePattern.DeserializeClassificationRulePattern(item));
                    }
                    dataPatterns = array;
                    continue;
                }
                if (property.NameEquals("columnPatterns"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ClassificationRulePattern> array = new List<ClassificationRulePattern>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ClassificationRulePattern.DeserializeClassificationRulePattern(item));
                    }
                    columnPatterns = array;
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("version"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    version = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("classificationName"))
                {
                    classificationName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ruleStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    ruleStatus = new ClassificationRuleStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("createdAt"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    createdAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastModifiedAt"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastModifiedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new CustomClassificationRuleProperties(Optional.ToNullable(minimumPercentageMatch), Optional.ToNullable(classificationAction), Optional.ToList(dataPatterns), Optional.ToList(columnPatterns), description.Value, Optional.ToNullable(version), classificationName.Value, Optional.ToNullable(ruleStatus), Optional.ToNullable(createdAt), Optional.ToNullable(lastModifiedAt));
        }
    }
}
