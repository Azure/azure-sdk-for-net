<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Azure.Analytics.Purview.Scanning</name>
    </assembly>
    <members>
        <member name="T:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient">
            <summary> The PurviewClassificationRule service client. </summary>
        </member>
        <member name="P:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="P:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.Pipeline">
            <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.#ctor">
            <summary> Initializes a new instance of PurviewClassificationRuleClient for mocking. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)">
            <summary> Initializes a new instance of PurviewClassificationRuleClient. </summary>
            <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
            <param name="classificationRuleName"> The String to use. </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint"/>, <paramref name="classificationRuleName"/> or <paramref name="credential"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="classificationRuleName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)">
            <summary> Initializes a new instance of PurviewClassificationRuleClient. </summary>
            <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
            <param name="classificationRuleName"> The String to use. </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
            <param name="options"> The options for configuring the client. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint"/>, <paramref name="classificationRuleName"/> or <paramref name="credential"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="classificationRuleName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.GetPropertiesAsync(Azure.RequestContext)">
            <summary> Get a classification rule. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
        <code>{
              id: string,
              name: string,
              kind: "System" | "Custom"
            }
        </code>
            Schema for <c>Response Error</c>:
        <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
        </code>

      </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.GetProperties(Azure.RequestContext)">
            <summary> Get a classification rule. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;System&quot; | &quot;Custom&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates or Updates a classification rule. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;System&quot; | &quot;Custom&quot; (required)
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;System&quot; | &quot;Custom&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates or Updates a classification rule. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;System&quot; | &quot;Custom&quot; (required)
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;System&quot; | &quot;Custom&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.DeleteAsync(Azure.RequestContext)">
            <summary> Deletes a classification rule. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;System&quot; | &quot;Custom&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.Delete(Azure.RequestContext)">
            <summary> Deletes a classification rule. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;System&quot; | &quot;Custom&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.TagVersionAsync(System.Int32,System.String,Azure.RequestContext)">
            <summary> Sets Classification Action on a specific classification rule version. </summary>
            <param name="classificationRuleVersion"> The Integer to use. </param>
            <param name="action"> The ClassificationAction to use. Allowed values: &quot;Keep&quot; | &quot;Delete&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="action"/> is null. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanResultId: OperationResponseScanResultId,
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorInfo]
                  }
                ]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.TagVersion(System.Int32,System.String,Azure.RequestContext)">
            <summary> Sets Classification Action on a specific classification rule version. </summary>
            <param name="classificationRuleVersion"> The Integer to use. </param>
            <param name="action"> The ClassificationAction to use. Allowed values: &quot;Keep&quot; | &quot;Delete&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="action"/> is null. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanResultId: OperationResponseScanResultId,
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorInfo]
                  }
                ]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.GetVersionsAsync(Azure.RequestContext)">
            <summary> Lists the rule versions of a classification rule. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: &quot;System&quot; | &quot;Custom&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient.GetVersions(Azure.RequestContext)">
            <summary> Lists the rule versions of a classification rule. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: &quot;System&quot; | &quot;Custom&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="T:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient">
            <summary> The PurviewDataSource service client. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient(System.String)">
            <summary />
        </member>
        <member name="P:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="P:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline">
            <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor">
            <summary> Initializes a new instance of PurviewDataSourceClient for mocking. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)">
            <summary> Initializes a new instance of PurviewDataSourceClient. </summary>
            <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
            <param name="dataSourceName"> The String to use. </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint"/>, <paramref name="dataSourceName"/> or <paramref name="credential"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dataSourceName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)">
            <summary> Initializes a new instance of PurviewDataSourceClient. </summary>
            <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
            <param name="dataSourceName"> The String to use. </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
            <param name="options"> The options for configuring the client. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint"/>, <paramref name="dataSourceName"/> or <paramref name="credential"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dataSourceName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates or Updates a data source. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot; (required),
              scans: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot; (required),
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ]
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;,
              scans: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates or Updates a data source. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot; (required),
              scans: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot; (required),
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ]
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;,
              scans: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync(Azure.RequestContext)">
            <summary> Get a data source. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;,
              scans: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties(Azure.RequestContext)">
            <summary> Get a data source. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;,
              scans: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync(Azure.RequestContext)">
            <summary> Deletes a data source. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;,
              scans: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete(Azure.RequestContext)">
            <summary> Deletes a data source. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;,
              scans: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync(Azure.RequestContext)">
            <summary> List scans in data source. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans(Azure.RequestContext)">
            <summary> List scans in data source. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                  scanResults: [
                    {
                      parentId: string,
                      id: string,
                      resourceId: string,
                      status: string,
                      assetsDiscovered: number,
                      assetsClassified: number,
                      diagnostics: {
                        notifications: [
                          {
                            message: string,
                            code: number
                          }
                        ],
                        exceptionCountMap: Dictionary&lt;string, number&gt;
                      },
                      startTime: string (ISO 8601 Format),
                      queuedTime: string (ISO 8601 Format),
                      pipelineStartTime: string (ISO 8601 Format),
                      endTime: string (ISO 8601 Format),
                      scanRulesetVersion: number,
                      scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                      scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                      errorMessage: string,
                      error: {
                        code: string,
                        message: string,
                        target: string,
                        details: [
                          {
                            code: string,
                            message: string,
                            target: string,
                            details: [ErrorModel]
                          }
                        ]
                      },
                      runType: string,
                      dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                    }
                  ]
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="T:Azure.Analytics.Purview.Scanning.PurviewScanClient">
            <summary> The PurviewScan service client. </summary>
        </member>
        <member name="P:Azure.Analytics.Purview.Scanning.PurviewScanClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="P:Azure.Analytics.Purview.Scanning.PurviewScanClient.Pipeline">
            <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.#ctor">
            <summary> Initializes a new instance of PurviewScanClient for mocking. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.#ctor(System.Uri,System.String,System.String,Azure.Core.TokenCredential)">
            <summary> Initializes a new instance of PurviewScanClient. </summary>
            <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
            <param name="dataSourceName"> The String to use. </param>
            <param name="scanName"> The String to use. </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint"/>, <paramref name="dataSourceName"/>, <paramref name="scanName"/> or <paramref name="credential"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dataSourceName"/> or <paramref name="scanName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.#ctor(System.Uri,System.String,System.String,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)">
            <summary> Initializes a new instance of PurviewScanClient. </summary>
            <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
            <param name="dataSourceName"> The String to use. </param>
            <param name="scanName"> The String to use. </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
            <param name="options"> The options for configuring the client. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint"/>, <paramref name="dataSourceName"/>, <paramref name="scanName"/> or <paramref name="credential"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dataSourceName"/> or <paramref name="scanName"/> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetFilterAsync(Azure.RequestContext)">
            <summary> Get a filter. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                excludeUriPrefixes: [string],
                includeUriPrefixes: [string]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetFilter(Azure.RequestContext)">
            <summary> Get a filter. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                excludeUriPrefixes: [string],
                includeUriPrefixes: [string]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.CreateOrUpdateFilterAsync(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates or updates a filter. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                excludeUriPrefixes: [string],
                includeUriPrefixes: [string]
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                excludeUriPrefixes: [string],
                includeUriPrefixes: [string]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.CreateOrUpdateFilter(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates or updates a filter. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                excludeUriPrefixes: [string],
                includeUriPrefixes: [string]
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                excludeUriPrefixes: [string],
                includeUriPrefixes: [string]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates an instance of a scan. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot; (required),
              scanResults: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ]
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
              scanResults: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates an instance of a scan. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot; (required),
              scanResults: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ]
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
              scanResults: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetPropertiesAsync(Azure.RequestContext)">
            <summary> Gets a scan information. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
              scanResults: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetProperties(Azure.RequestContext)">
            <summary> Gets a scan information. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
              scanResults: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.DeleteAsync(Azure.RequestContext)">
            <summary> Deletes the scan associated with the data source. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
              scanResults: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.Delete(Azure.RequestContext)">
            <summary> Deletes the scan associated with the data source. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
              scanResults: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.RunScanAsync(System.String,System.String,Azure.RequestContext)">
            <summary> Runs the scan. </summary>
            <param name="runId"> The String to use. </param>
            <param name="scanLevel"> The ScanLevelType to use. Allowed values: &quot;Full&quot; | &quot;Incremental&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanResultId: OperationResponseScanResultId,
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorInfo]
                  }
                ]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.RunScan(System.String,System.String,Azure.RequestContext)">
            <summary> Runs the scan. </summary>
            <param name="runId"> The String to use. </param>
            <param name="scanLevel"> The ScanLevelType to use. Allowed values: &quot;Full&quot; | &quot;Incremental&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanResultId: OperationResponseScanResultId,
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorInfo]
                  }
                ]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.CancelScanAsync(System.String,Azure.RequestContext)">
            <summary> Cancels a scan. </summary>
            <param name="runId"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanResultId: OperationResponseScanResultId,
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorInfo]
                  }
                ]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.CancelScan(System.String,Azure.RequestContext)">
            <summary> Cancels a scan. </summary>
            <param name="runId"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="runId"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="runId"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanResultId: OperationResponseScanResultId,
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              status: &quot;Accepted&quot; | &quot;InProgress&quot; | &quot;TransientFailure&quot; | &quot;Succeeded&quot; | &quot;Failed&quot; | &quot;Canceled&quot;,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorInfo]
                  }
                ]
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetTriggerAsync(Azure.RequestContext)">
            <summary> Gets trigger information. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                recurrence: {
                  frequency: &quot;Week&quot; | &quot;Month&quot;,
                  interval: number,
                  startTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  schedule: {
                    additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                    minutes: [number],
                    hours: [number],
                    weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;],
                    monthDays: [number],
                    monthlyOccurrences: [
                      {
                        additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                        day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;,
                        occurrence: number
                      }
                    ]
                  },
                  timeZone: string
                },
                recurrenceInterval: string,
                createdAt: string (ISO 8601 Format),
                lastModifiedAt: string (ISO 8601 Format),
                lastScheduled: string (ISO 8601 Format),
                scanLevel: &quot;Full&quot; | &quot;Incremental&quot;,
                incrementalScanStartTime: string (ISO 8601 Format)
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetTrigger(Azure.RequestContext)">
            <summary> Gets trigger information. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                recurrence: {
                  frequency: &quot;Week&quot; | &quot;Month&quot;,
                  interval: number,
                  startTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  schedule: {
                    additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                    minutes: [number],
                    hours: [number],
                    weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;],
                    monthDays: [number],
                    monthlyOccurrences: [
                      {
                        additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                        day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;,
                        occurrence: number
                      }
                    ]
                  },
                  timeZone: string
                },
                recurrenceInterval: string,
                createdAt: string (ISO 8601 Format),
                lastModifiedAt: string (ISO 8601 Format),
                lastScheduled: string (ISO 8601 Format),
                scanLevel: &quot;Full&quot; | &quot;Incremental&quot;,
                incrementalScanStartTime: string (ISO 8601 Format)
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.CreateOrUpdateTriggerAsync(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates an instance of a trigger. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                recurrence: {
                  frequency: &quot;Week&quot; | &quot;Month&quot;,
                  interval: number,
                  startTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  schedule: {
                    additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                    minutes: [number],
                    hours: [number],
                    weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;],
                    monthDays: [number],
                    monthlyOccurrences: [
                      {
                        additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                        day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;,
                        occurrence: number
                      }
                    ]
                  },
                  timeZone: string
                },
                recurrenceInterval: string,
                createdAt: string (ISO 8601 Format),
                lastModifiedAt: string (ISO 8601 Format),
                lastScheduled: string (ISO 8601 Format),
                scanLevel: &quot;Full&quot; | &quot;Incremental&quot;,
                incrementalScanStartTime: string (ISO 8601 Format)
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                recurrence: {
                  frequency: &quot;Week&quot; | &quot;Month&quot;,
                  interval: number,
                  startTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  schedule: {
                    additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                    minutes: [number],
                    hours: [number],
                    weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;],
                    monthDays: [number],
                    monthlyOccurrences: [
                      {
                        additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                        day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;,
                        occurrence: number
                      }
                    ]
                  },
                  timeZone: string
                },
                recurrenceInterval: string,
                createdAt: string (ISO 8601 Format),
                lastModifiedAt: string (ISO 8601 Format),
                lastScheduled: string (ISO 8601 Format),
                scanLevel: &quot;Full&quot; | &quot;Incremental&quot;,
                incrementalScanStartTime: string (ISO 8601 Format)
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.CreateOrUpdateTrigger(Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates an instance of a trigger. </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content"/> is null. </exception>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                recurrence: {
                  frequency: &quot;Week&quot; | &quot;Month&quot;,
                  interval: number,
                  startTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  schedule: {
                    additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                    minutes: [number],
                    hours: [number],
                    weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;],
                    monthDays: [number],
                    monthlyOccurrences: [
                      {
                        additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                        day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;,
                        occurrence: number
                      }
                    ]
                  },
                  timeZone: string
                },
                recurrenceInterval: string,
                createdAt: string (ISO 8601 Format),
                lastModifiedAt: string (ISO 8601 Format),
                lastScheduled: string (ISO 8601 Format),
                scanLevel: &quot;Full&quot; | &quot;Incremental&quot;,
                incrementalScanStartTime: string (ISO 8601 Format)
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                recurrence: {
                  frequency: &quot;Week&quot; | &quot;Month&quot;,
                  interval: number,
                  startTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  schedule: {
                    additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                    minutes: [number],
                    hours: [number],
                    weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;],
                    monthDays: [number],
                    monthlyOccurrences: [
                      {
                        additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                        day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;,
                        occurrence: number
                      }
                    ]
                  },
                  timeZone: string
                },
                recurrenceInterval: string,
                createdAt: string (ISO 8601 Format),
                lastModifiedAt: string (ISO 8601 Format),
                lastScheduled: string (ISO 8601 Format),
                scanLevel: &quot;Full&quot; | &quot;Incremental&quot;,
                incrementalScanStartTime: string (ISO 8601 Format)
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.DeleteTriggerAsync(Azure.RequestContext)">
            <summary> Deletes the trigger associated with the scan. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                recurrence: {
                  frequency: &quot;Week&quot; | &quot;Month&quot;,
                  interval: number,
                  startTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  schedule: {
                    additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                    minutes: [number],
                    hours: [number],
                    weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;],
                    monthDays: [number],
                    monthlyOccurrences: [
                      {
                        additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                        day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;,
                        occurrence: number
                      }
                    ]
                  },
                  timeZone: string
                },
                recurrenceInterval: string,
                createdAt: string (ISO 8601 Format),
                lastModifiedAt: string (ISO 8601 Format),
                lastScheduled: string (ISO 8601 Format),
                scanLevel: &quot;Full&quot; | &quot;Incremental&quot;,
                incrementalScanStartTime: string (ISO 8601 Format)
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.DeleteTrigger(Azure.RequestContext)">
            <summary> Deletes the trigger associated with the scan. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                recurrence: {
                  frequency: &quot;Week&quot; | &quot;Month&quot;,
                  interval: number,
                  startTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  schedule: {
                    additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                    minutes: [number],
                    hours: [number],
                    weekDays: [&quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;],
                    monthDays: [number],
                    monthlyOccurrences: [
                      {
                        additionalProperties: Dictionary&lt;string, AnyObject&gt;,
                        day: &quot;Sunday&quot; | &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot; | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot;,
                        occurrence: number
                      }
                    ]
                  },
                  timeZone: string
                },
                recurrenceInterval: string,
                createdAt: string (ISO 8601 Format),
                lastModifiedAt: string (ISO 8601 Format),
                lastScheduled: string (ISO 8601 Format),
                scanLevel: &quot;Full&quot; | &quot;Incremental&quot;,
                incrementalScanStartTime: string (ISO 8601 Format)
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRunsAsync(Azure.RequestContext)">
            <summary> Lists the scan history of a scan. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanClient.GetRuns(Azure.RequestContext)">
            <summary> Lists the scan history of a scan. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  parentId: string,
                  id: string,
                  resourceId: string,
                  status: string,
                  assetsDiscovered: number,
                  assetsClassified: number,
                  diagnostics: {
                    notifications: [
                      {
                        message: string,
                        code: number
                      }
                    ],
                    exceptionCountMap: Dictionary&lt;string, number&gt;
                  },
                  startTime: string (ISO 8601 Format),
                  queuedTime: string (ISO 8601 Format),
                  pipelineStartTime: string (ISO 8601 Format),
                  endTime: string (ISO 8601 Format),
                  scanRulesetVersion: number,
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                  errorMessage: string,
                  error: {
                    code: string,
                    message: string,
                    target: string,
                    details: [
                      {
                        code: string,
                        message: string,
                        target: string,
                        details: [ErrorModel]
                      }
                    ]
                  },
                  runType: string,
                  dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="T:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient">
            <summary> The PurviewScanningService service client. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetDataSourceClient(System.String)">
            <summary />
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetClassificationRuleClient(System.String)">
            <summary />
        </member>
        <member name="P:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="P:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.Pipeline">
            <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.#ctor">
            <summary> Initializes a new instance of PurviewScanningServiceClient for mocking. </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential)">
            <summary> Initializes a new instance of PurviewScanningServiceClient. </summary>
            <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)">
            <summary> Initializes a new instance of PurviewScanningServiceClient. </summary>
            <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
            <param name="options"> The options for configuring the client. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetKeyVaultReferenceAsync(System.String,Azure.RequestContext)">
            <summary> Gets key vault information. </summary>
            <param name="keyVaultName"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyVaultName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="keyVaultName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetKeyVaultReference(System.String,Azure.RequestContext)">
            <summary> Gets key vault information. </summary>
            <param name="keyVaultName"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyVaultName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="keyVaultName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.CreateOrUpdateKeyVaultReferenceAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates an instance of a key vault connection. </summary>
            <param name="keyVaultName"> The String to use. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyVaultName"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="keyVaultName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.CreateOrUpdateKeyVaultReference(System.String,Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates an instance of a key vault connection. </summary>
            <param name="keyVaultName"> The String to use. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyVaultName"/> or <paramref name="content"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="keyVaultName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.DeleteKeyVaultReferenceAsync(System.String,Azure.RequestContext)">
            <summary> Deletes the key vault connection associated with the account. </summary>
            <param name="keyVaultName"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyVaultName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="keyVaultName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.DeleteKeyVaultReference(System.String,Azure.RequestContext)">
            <summary> Deletes the key vault connection associated with the account. </summary>
            <param name="keyVaultName"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="keyVaultName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="keyVaultName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetScanRulesetAsync(System.String,Azure.RequestContext)">
            <summary> Get a scan ruleset. </summary>
            <param name="scanRulesetName"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetScanRuleset(System.String,Azure.RequestContext)">
            <summary> Get a scan ruleset. </summary>
            <param name="scanRulesetName"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.CreateOrUpdateScanRulesetAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates or Updates a scan ruleset. </summary>
            <param name="scanRulesetName"> The String to use. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot; (required)
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.CreateOrUpdateScanRuleset(System.String,Azure.Core.RequestContent,Azure.RequestContext)">
            <summary> Creates or Updates a scan ruleset. </summary>
            <param name="scanRulesetName"> The String to use. </param>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot; (required)
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.DeleteScanRulesetAsync(System.String,Azure.RequestContext)">
            <summary> Deletes a scan ruleset. </summary>
            <param name="scanRulesetName"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.DeleteScanRuleset(System.String,Azure.RequestContext)">
            <summary> Deletes a scan ruleset. </summary>
            <param name="scanRulesetName"> The String to use. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scanRulesetName"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="scanRulesetName"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsForDataSourceAsync(System.String,Azure.RequestContext)">
            <summary> Get a system scan ruleset for a data source. </summary>
            <param name="dataSourceType"> The DataSourceType to use. Allowed values: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSourceType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dataSourceType"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsForDataSource(System.String,Azure.RequestContext)">
            <summary> Get a system scan ruleset for a data source. </summary>
            <param name="dataSourceType"> The DataSourceType to use. Allowed values: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSourceType"/> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dataSourceType"/> is an empty string, and was expected to be non-empty. </exception>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsForVersionAsync(System.Int32,System.String,Azure.RequestContext)">
            <summary> Get a scan ruleset by version. </summary>
            <param name="version"> The Integer to use. </param>
            <param name="dataSourceType"> The DataSourceType to use. Allowed values: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsForVersion(System.Int32,System.String,Azure.RequestContext)">
            <summary> Get a scan ruleset by version. </summary>
            <param name="version"> The Integer to use. </param>
            <param name="dataSourceType"> The DataSourceType to use. Allowed values: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetLatestSystemRulesetsAsync(System.String,Azure.RequestContext)">
            <summary> Get the latest version of a system scan ruleset. </summary>
            <param name="dataSourceType"> The DataSourceType to use. Allowed values: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetLatestSystemRulesets(System.String,Azure.RequestContext)">
            <summary> Get the latest version of a system scan ruleset. </summary>
            <param name="dataSourceType"> The DataSourceType to use. Allowed values: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
              status: &quot;Enabled&quot; | &quot;Disabled&quot;,
              version: number,
              id: string,
              name: string,
              kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetKeyVaultReferencesAsync(Azure.RequestContext)">
            <summary> List key vault connections in account. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  properties: {
                    baseUrl: string,
                    description: string
                  }
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetKeyVaultReferences(Azure.RequestContext)">
            <summary> List key vault connections in account. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  properties: {
                    baseUrl: string,
                    description: string
                  }
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetClassificationRulesAsync(Azure.RequestContext)">
            <summary> List classification rules in Account. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: &quot;System&quot; | &quot;Custom&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetClassificationRules(Azure.RequestContext)">
            <summary> List classification rules in Account. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: &quot;System&quot; | &quot;Custom&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetDataSourcesAsync(Azure.RequestContext)">
            <summary> List data sources in Data catalog. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;,
                  scans: [
                    {
                      id: string,
                      name: string,
                      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                      scanResults: [
                        {
                          parentId: string,
                          id: string,
                          resourceId: string,
                          status: string,
                          assetsDiscovered: number,
                          assetsClassified: number,
                          diagnostics: {
                            notifications: [
                              {
                                message: string,
                                code: number
                              }
                            ],
                            exceptionCountMap: Dictionary&lt;string, number&gt;
                          },
                          startTime: string (ISO 8601 Format),
                          queuedTime: string (ISO 8601 Format),
                          pipelineStartTime: string (ISO 8601 Format),
                          endTime: string (ISO 8601 Format),
                          scanRulesetVersion: number,
                          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                          errorMessage: string,
                          error: {
                            code: string,
                            message: string,
                            target: string,
                            details: [
                              {
                                code: string,
                                message: string,
                                target: string,
                                details: [ErrorModel]
                              }
                            ]
                          },
                          runType: string,
                          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                        }
                      ]
                    }
                  ]
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetDataSources(Azure.RequestContext)">
            <summary> List data sources in Data catalog. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;,
                  scans: [
                    {
                      id: string,
                      name: string,
                      kind: &quot;AzureSubscriptionCredential&quot; | &quot;AzureSubscriptionMsi&quot; | &quot;AzureResourceGroupCredential&quot; | &quot;AzureResourceGroupMsi&quot; | &quot;AzureSynapseWorkspaceCredential&quot; | &quot;AzureSynapseWorkspaceMsi&quot; | &quot;AzureSynapseCredential&quot; | &quot;AzureSynapseMsi&quot; | &quot;AdlsGen1Credential&quot; | &quot;AdlsGen1Msi&quot; | &quot;AdlsGen2Credential&quot; | &quot;AdlsGen2Msi&quot; | &quot;AmazonAccountCredential&quot; | &quot;AmazonS3Credential&quot; | &quot;AmazonS3RoleARN&quot; | &quot;AmazonSqlCredential&quot; | &quot;AzureCosmosDbCredential&quot; | &quot;AzureDataExplorerCredential&quot; | &quot;AzureDataExplorerMsi&quot; | &quot;AzureFileServiceCredential&quot; | &quot;AzureSqlDatabaseCredential&quot; | &quot;AzureSqlDatabaseMsi&quot; | &quot;AmazonPostgreSqlCredential&quot; | &quot;AzurePostgreSqlCredential&quot; | &quot;SqlServerDatabaseCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceCredential&quot; | &quot;AzureSqlDatabaseManagedInstanceMsi&quot; | &quot;AzureSqlDataWarehouseCredential&quot; | &quot;AzureSqlDataWarehouseMsi&quot; | &quot;AzureMySqlCredential&quot; | &quot;AzureStorageCredential&quot; | &quot;AzureStorageMsi&quot; | &quot;TeradataTeradataCredential&quot; | &quot;TeradataTeradataUserPass&quot; | &quot;TeradataUserPass&quot; | &quot;OracleOracleCredential&quot; | &quot;OracleOracleUserPass&quot; | &quot;SapS4HanaSapS4HanaCredential&quot; | &quot;SapS4HanaSapS4HanaUserPass&quot; | &quot;SapEccSapEccCredential&quot; | &quot;SapEccSapEccUserPass&quot; | &quot;PowerBIDelegated&quot; | &quot;PowerBIMsi&quot;,
                      scanResults: [
                        {
                          parentId: string,
                          id: string,
                          resourceId: string,
                          status: string,
                          assetsDiscovered: number,
                          assetsClassified: number,
                          diagnostics: {
                            notifications: [
                              {
                                message: string,
                                code: number
                              }
                            ],
                            exceptionCountMap: Dictionary&lt;string, number&gt;
                          },
                          startTime: string (ISO 8601 Format),
                          queuedTime: string (ISO 8601 Format),
                          pipelineStartTime: string (ISO 8601 Format),
                          endTime: string (ISO 8601 Format),
                          scanRulesetVersion: number,
                          scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                          scanLevelType: &quot;Full&quot; | &quot;Incremental&quot;,
                          errorMessage: string,
                          error: {
                            code: string,
                            message: string,
                            target: string,
                            details: [
                              {
                                code: string,
                                message: string,
                                target: string,
                                details: [ErrorModel]
                              }
                            ]
                          },
                          runType: string,
                          dataSourceType: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                        }
                      ]
                    }
                  ]
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetScanRulesetsAsync(Azure.RequestContext)">
            <summary> List scan rulesets in Data catalog. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  status: &quot;Enabled&quot; | &quot;Disabled&quot;,
                  version: number,
                  id: string,
                  name: string,
                  kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetScanRulesets(Azure.RequestContext)">
            <summary> List scan rulesets in Data catalog. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  status: &quot;Enabled&quot; | &quot;Disabled&quot;,
                  version: number,
                  id: string,
                  name: string,
                  kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsAsync(Azure.RequestContext)">
            <summary> List all system scan rulesets for an account. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  status: &quot;Enabled&quot; | &quot;Disabled&quot;,
                  version: number,
                  id: string,
                  name: string,
                  kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesets(Azure.RequestContext)">
            <summary> List all system scan rulesets for an account. </summary>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  status: &quot;Enabled&quot; | &quot;Disabled&quot;,
                  version: number,
                  id: string,
                  name: string,
                  kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsVersionsAsync(System.String,Azure.RequestContext)">
            <summary> List system scan ruleset versions in Data catalog. </summary>
            <param name="dataSourceType"> The DataSourceType to use. Allowed values: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  status: &quot;Enabled&quot; | &quot;Disabled&quot;,
                  version: number,
                  id: string,
                  name: string,
                  kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsVersions(System.String,Azure.RequestContext)">
            <summary> List system scan ruleset versions in Data catalog. </summary>
            <param name="dataSourceType"> The DataSourceType to use. Allowed values: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;. </param>
            <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
            <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: &quot;Custom&quot; | &quot;System&quot;,
                  status: &quot;Enabled&quot; | &quot;Disabled&quot;,
                  version: number,
                  id: string,
                  name: string,
                  kind: &quot;None&quot; | &quot;AzureSubscription&quot; | &quot;AzureResourceGroup&quot; | &quot;AzureSynapseWorkspace&quot; | &quot;AzureSynapse&quot; | &quot;AdlsGen1&quot; | &quot;AdlsGen2&quot; | &quot;AmazonAccount&quot; | &quot;AmazonS3&quot; | &quot;AmazonSql&quot; | &quot;AzureCosmosDb&quot; | &quot;AzureDataExplorer&quot; | &quot;AzureFileService&quot; | &quot;AzureSqlDatabase&quot; | &quot;AmazonPostgreSql&quot; | &quot;AzurePostgreSql&quot; | &quot;SqlServerDatabase&quot; | &quot;AzureSqlDatabaseManagedInstance&quot; | &quot;AzureSqlDataWarehouse&quot; | &quot;AzureMySql&quot; | &quot;AzureStorage&quot; | &quot;Teradata&quot; | &quot;Oracle&quot; | &quot;SapS4Hana&quot; | &quot;SapEcc&quot; | &quot;PowerBI&quot;
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code>
            
            </remarks>
        </member>
        <member name="T:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions">
            <summary> Client options for PurviewScanningServiceClient. </summary>
        </member>
        <member name="T:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions.ServiceVersion">
            <summary> The version of the service to use. </summary>
        </member>
        <member name="F:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions.ServiceVersion.V2018_12_01_preview">
            <summary> Service version "2018-12-01-preview". </summary>
        </member>
        <member name="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions.#ctor(Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions.ServiceVersion)">
            <summary> Initializes new instance of PurviewScanningServiceClientOptions. </summary>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T"/> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1"/>, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1"/>, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity"/> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1"/>.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1"/>.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1"/> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1"/> that <paramref name="count"/> amount of data was written to the output <see cref="T:System.Span`1"/>/<see cref="T:System.Memory`1"/>.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count"/> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1"/> to write to that is at least the requested length (specified by <paramref name="sizeHint"/>).
            If no <paramref name="sizeHint"/> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint"/> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1"/>.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1"/> to write to that is at least the requested length (specified by <paramref name="sizeHint"/>).
            If no <paramref name="sizeHint"/> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint"/> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1"/>.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.LowLevelFuncOperation`1.Id">
            <inheritdoc />
        </member>
        <member name="P:Azure.Core.LowLevelFuncOperation`1.Value">
            <inheritdoc />
        </member>
        <member name="P:Azure.Core.LowLevelFuncOperation`1.HasCompleted">
            <inheritdoc />
        </member>
        <member name="P:Azure.Core.LowLevelFuncOperation`1.HasValue">
            <inheritdoc />
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.GetRawResponse">
            <inheritdoc />
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Azure.Core.LowLevelPageableHelpers.BuildPageForResponse(Azure.Response,System.String,System.String)">
            <summary>
            Returns a <see cref="T:Azure.Page`1"/> for a given response.
            </summary>
            <param name="response"></param>
            <param name="itemPropertyName"></param>
            <param name="nextLinkPropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Core.LowLevelPageableHelpers.MustRead(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonTokenType)">
            <summary>
            Reads a token, failing if it can't on the resulting token is of the wrong type,
            </summary>
        </member>
        <member name="M:Azure.Core.LowLevelPageableHelpers.ReadArrayItems(System.Text.Json.Utf8JsonReader@,System.BinaryData)">
            <summary>
            Read an array of values from a <see cref="T:System.Text.Json.Utf8JsonReader"/>. The entire array is read and
            a <see cref="T:System.BinaryData"/> is formed over the JSON text for each item in the array.
            </summary>
        </member>
        <member name="M:Azure.Core.LowLevelPageableHelpers.GetItemsAndNextLinkFromJson(System.BinaryData,System.String,System.String)">
            <summary>
            Reads the items and next link from a response for a pageable operation. The values returned are BinaryDatas formed over the underlying content.
            </summary>
        </member>
        <member name="M:Azure.Core.NextLinkOperationImplementation.GetFinalUri">
            <summary>
            This function is used to get the final request uri after the lro has completed.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternals">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternals`1">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
            <typeparam name="T">The final result of the LRO.</typeparam>
        </member>
        <member name="T:Azure.Core.OperationOrResponseInternals">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
        </member>
        <member name="T:Azure.Core.OperationOrResponseInternals`1">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
            <typeparam name="T">The final result of the LRO.</typeparam>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.SetValue(`0,System.Int64@)">
            <summary>
            Set value to the cache and to all the waiters
            </summary>
            <param name="value"></param>
            <param name="lockIndex"></param>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.Reset(System.Int64@)">
            <summary>
            Release the lock and allow next waiter acquire it
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation"/> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal"/> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal"/> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted"/></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>, used for <see cref="M:Azure.Operation.GetRawResponse"/></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)"/></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)"/></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)"/></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)"/></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal"/> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal"/> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal"/> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation"/> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation"/> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation"/>.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy"/>.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal"/> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal"/> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br/>
              {<br/>
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br/>
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br/>
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br/>
                return OperationState.Pending(response.GetRawResponse());<br/>
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState"/> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)"/> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)"/> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)"/> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal"/> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)"/> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)"/> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)"/> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState"/> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState"/> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState"/> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse"/> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState"/> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState"/> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState"/> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse"/> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() => _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted => _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =>
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted"/>.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) => _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted"/>.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)"/> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy"/>
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =>
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)"/> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval"/>, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval"/>
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =>
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)"/> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy"/>
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =>
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)"/> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval"/>, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval"/>
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =>
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1"/> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1"/> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1"/> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue"/></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted"/></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value"/></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>, used for <see cref="M:Azure.Operation.GetRawResponse"/></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)"/></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)"/></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)"/></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)"/></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1"/>.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal"/> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal"/> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation{`0},Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1"/> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/>. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1"/> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation`1"/> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation"/>.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy"/>.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue => _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value => _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)"/> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy"/>
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =>
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)"/> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval"/>, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval"/>
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =>
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)"/> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy"/>
            is then use as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =>
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)"/> until the long-running operation completes. The interval
            between calls is defined by the property <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval"/>, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval"/>
            property and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =>
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1"/> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1"/>.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1"/> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse"/> or
            <see cref="P:Azure.Core.OperationInternal`1.Value"/>, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br/>
              {<br/>
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br/>
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br/>
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br/>
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br/>
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1"/> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)"/> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)"/> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)"/> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1"/> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)"/> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)"/> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)"/> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1"/>.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1"/> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1"/> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse"/> or <paramref name="value"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1"/> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value"/> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse"/> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1"/> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1"/> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1"/> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse"/> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.DelayStrategy">
            <summary>
            Strategy to control delay behavior.
            </summary>
        </member>
        <member name="M:Azure.Core.DelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the interval of next delay iteration.
            </summary>
            <remarks> Note that the value could change per call. </remarks>
            <param name="response"> Server response. </param>
            <param name="suggestedInterval"> Suggested pollingInterval. It is up to strategy
            implementation to decide how to deal with this parameter. </param>
            <returns> Delay interval of next iteration. </returns>
        </member>
        <member name="T:Azure.Core.ConstantDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy"/> with constant polling interval.
            </summary>
            <remarks>Polling interval is always equal to the given polling interval.</remarks>
        </member>
        <member name="M:Azure.Core.ConstantDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval"/> and <paramref name="suggestedInterval"/>.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval"/> and <paramref name="suggestedInterval"/>.</returns>
        </member>
        <member name="T:Azure.Core.ExponentialDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy"/>. Polling interval changes according to
            the sequence {1, 1, 1, 2, 4, ...32}.
            </summary>
            <remarks>Polling interval always follows the given sequence.</remarks>
        </member>
        <member name="M:Azure.Core.ExponentialDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from {1, 1, 1, 2, 4, ...32}.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
        </member>
        <member name="T:Azure.Core.RetryAfterDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy"/> of which the interval is from
            retry-after header of service response.
            </summary>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.#ctor(Azure.Core.DelayStrategy)">
            <summary>
            Create a <see cref="T:Azure.Core.RetryAfterDelayStrategy"/> with a default retry-after value which normally
            comes from the initial response of an LRO operation.
            </summary>
            <param name="fallbackStrategy"> Fallback strategy if retry after is not present. </param>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of retry-after header of given service response and <paramref name="suggestedInterval"/>.
            If retry-after header is not found, adopt the value of last retry-after header.
            </summary>
            <param name="response">Service response which might carry retry-after header.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of retry-after header and <paramref name="suggestedInterval"/>.</returns>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics"/> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity"/>
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics"/> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics"/> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity"/>
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics"/> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.ExtractFailureContent(System.String,Azure.Core.ResponseHeaders,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Partial method that can optionally be defined to extract the error
            message, code, and details in a service specific manner.
            </summary>
            <param name="content">The error content.</param>
            <param name="responseHeaders">The response headers.</param>
            <param name="additionalInfo">Additional error details.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.GetActivitySource(System.String,System.String)">
            <summary>
            This method combines client namespace and operation name into an ActivitySource name and creates the activity source.
            For example:
                ns: Azure.Storage.Blobs
                name: BlobClient.DownloadTo
                result Azure.Storage.Blobs.BlobClient
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.DiagnosticScope.ActivityKind">
            <summary>
            Kind describes the relationship between the Activity, its parents, and its children in a Trace.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Internal">
            <summary>
            Default value.
            Indicates that the Activity represents an internal operation within an application, as opposed to an operations with remote parents or children.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Server">
            <summary>
            Server activity represents request incoming from external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Client">
            <summary>
            Client activity represents outgoing request to the external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Producer">
            <summary>
            Producer activity represents output provided to external components.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Consumer">
            <summary>
            Consumer activity represents output received from an external component.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until we can reference the 5.0 of System.Diagnostics.DiagnosticSource
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1"/> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1"/> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator"/> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument"/> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value"/> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value"/> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value"/> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value"/> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value"/> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value"/> is the default value for type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1"/>.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is the default value for type <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value"/> is less than the <paramref name="minimum"/> or greater than the <paramref name="maximum"/>.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1"/>.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value"/> has not been initialized; otherwise, returns <paramref name="value"/>.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value"/> is null or an empty string; otherwise, returns <paramref name="value"/>.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNull``1(``0,System.String,System.String)">
            <summary>
            Throws if <paramref name="value"/> is not null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <param name="message">The error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> is not null.</exception>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
    </members>
</doc>
