<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetReceivedInvitationAsync(string,RequestContext)">
<example>
This sample shows how to call GetReceivedInvitationAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

Response response = await client.GetReceivedInvitationAsync("<receivedInvitationName>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetReceivedInvitation(string,RequestContext)">
<example>
This sample shows how to call GetReceivedInvitation with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

Response response = client.GetReceivedInvitation("<receivedInvitationName>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="RejectAsync(string,RequestContent,string,RequestContext)">
<example>
This sample shows how to call RejectAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        targetActiveDirectoryId = "<targetActiveDirectoryId>",
        targetObjectId = "<targetObjectId>",
    },
    invitationKind = "Application",
};

Response response = await client.RejectAsync("<receivedInvitationName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RejectAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        shareKind = "InPlace",
        targetActiveDirectoryId = "<targetActiveDirectoryId>",
        targetObjectId = "<targetObjectId>",
    },
    invitationKind = "Application",
};

Response response = await client.RejectAsync("<receivedInvitationName>", RequestContent.Create(data), "<repeatabilityRequestId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="Reject(string,RequestContent,string,RequestContext)">
<example>
This sample shows how to call Reject with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        targetActiveDirectoryId = "<targetActiveDirectoryId>",
        targetObjectId = "<targetObjectId>",
    },
    invitationKind = "Application",
};

Response response = client.Reject("<receivedInvitationName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Reject with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        shareKind = "InPlace",
        targetActiveDirectoryId = "<targetActiveDirectoryId>",
        targetObjectId = "<targetObjectId>",
    },
    invitationKind = "Application",
};

Response response = client.Reject("<receivedInvitationName>", RequestContent.Create(data), "<repeatabilityRequestId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetReceivedInvitationsAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call GetReceivedInvitationsAsync and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetReceivedInvitationsAsync())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("invitationKind").ToString());
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetReceivedInvitationsAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetReceivedInvitationsAsync("<skipToken>", "<filter>", "<orderby>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("invitationKind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetReceivedInvitations(string,string,string,RequestContext)">
<example>
This sample shows how to call GetReceivedInvitations and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetReceivedInvitations())
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("invitationKind").ToString());
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetReceivedInvitations with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ReceivedInvitationsClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetReceivedInvitations("<skipToken>", "<filter>", "<orderby>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("invitationKind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>