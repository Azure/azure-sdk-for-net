<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetAssetAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetAssetAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

Response response = await client.GetAssetAsync("<sentShareName>", "<assetName>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetAsset(string,string,RequestContext)">
<example>
This sample shows how to call GetAsset with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

Response response = client.GetAsset("<sentShareName>", "<assetName>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetAssetsAsync(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetAssetsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetAssetsAsync("<sentShareName>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetAssetsAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetAssetsAsync("<sentShareName>", "<skipToken>", "<filter>", "<orderby>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetAssets(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetAssets with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetAssets("<sentShareName>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetAssets with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetAssets("<sentShareName>", "<skipToken>", "<filter>", "<orderby>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="CreateAsync(WaitUntil,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateAsync with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        paths = new[] {
            new {
                containerName = "<containerName>",
                receiverPath = "<receiverPath>",
                senderPath = "<senderPath>",
            }
        },
        receiverAssetName = "<receiverAssetName>",
        storageAccountResourceId = "<storageAccountResourceId>",
    },
    kind = "AdlsGen2Account",
};

var operation = await client.CreateAsync(WaitUntil.Completed, "<sentShareName>", "<assetName>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="Create(WaitUntil,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call Create with required parameters and request content and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        paths = new[] {
            new {
                containerName = "<containerName>",
                receiverPath = "<receiverPath>",
                senderPath = "<senderPath>",
            }
        },
        receiverAssetName = "<receiverAssetName>",
        storageAccountResourceId = "<storageAccountResourceId>",
    },
    kind = "AdlsGen2Account",
};

var operation = client.Create(WaitUntil.Completed, "<sentShareName>", "<assetName>", RequestContent.Create(data));

BinaryData responseData = operation.Value;
JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(WaitUntil,string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

var operation = await client.DeleteAsync(WaitUntil.Completed, "<sentShareName>", "<assetName>");

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Delete(WaitUntil,string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AssetsClient("<https://my-service.azure.com>", credential);

var operation = client.Delete(WaitUntil.Completed, "<sentShareName>", "<assetName>");

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
  </members>
</doc>