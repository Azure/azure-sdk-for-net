<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSentShareInvitationAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetSentShareInvitationAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

Response response = await client.GetSentShareInvitationAsync("<sentShareName>", "<sentShareInvitationName>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSentShareInvitation(string,string,RequestContext)">
<example>
This sample shows how to call GetSentShareInvitation with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

Response response = client.GetSentShareInvitation("<sentShareName>", "<sentShareInvitationName>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        targetActiveDirectoryId = "<targetActiveDirectoryId>",
        targetObjectId = "<targetObjectId>",
    },
    invitationKind = "Application",
};

Response response = await client.CreateOrUpdateAsync("<sentShareName>", "<sentShareInvitationName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        expirationDate = "2022-05-10T18:57:31.2311892Z",
        shareKind = "InPlace",
        targetActiveDirectoryId = "<targetActiveDirectoryId>",
        targetObjectId = "<targetObjectId>",
    },
    invitationKind = "Application",
};

Response response = await client.CreateOrUpdateAsync("<sentShareName>", "<sentShareInvitationName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        targetActiveDirectoryId = "<targetActiveDirectoryId>",
        targetObjectId = "<targetObjectId>",
    },
    invitationKind = "Application",
};

Response response = client.CreateOrUpdate("<sentShareName>", "<sentShareInvitationName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

var data = new {
    properties = new {
        expirationDate = "2022-05-10T18:57:31.2311892Z",
        shareKind = "InPlace",
        targetActiveDirectoryId = "<targetActiveDirectoryId>",
        targetObjectId = "<targetObjectId>",
    },
    invitationKind = "Application",
};

Response response = client.CreateOrUpdate("<sentShareName>", "<sentShareInvitationName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("invitationKind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

Response response = await client.DeleteAsync("<sentShareName>", "<sentShareInvitationName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

Response response = client.Delete("<sentShareName>", "<sentShareInvitationName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetSentShareInvitationsAsync(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetSentShareInvitationsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetSentShareInvitationsAsync("<sentShareName>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("invitationKind").ToString());
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSentShareInvitationsAsync with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

await foreach (var item in client.GetSentShareInvitationsAsync("<sentShareName>", "<skipToken>", "<filter>", "<orderby>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("invitationKind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSentShareInvitations(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetSentShareInvitations with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetSentShareInvitations("<sentShareName>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("invitationKind").ToString());
    Console.WriteLine(result.ToString());
}
]]></code>
This sample shows how to call GetSentShareInvitations with all parameters, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SentShareInvitationsClient("<https://my-service.azure.com>", credential);

foreach (var item in client.GetSentShareInvitations("<sentShareName>", "<skipToken>", "<filter>", "<orderby>"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("invitationKind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>