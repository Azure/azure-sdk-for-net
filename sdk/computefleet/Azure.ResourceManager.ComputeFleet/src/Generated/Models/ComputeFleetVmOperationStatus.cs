// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ComputeFleet.Models
{
    /// <summary> Virtual Machine operation status values. </summary>
    public readonly partial struct ComputeFleetVmOperationStatus : IEquatable<ComputeFleetVmOperationStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ComputeFleetVmOperationStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ComputeFleetVmOperationStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreatingValue = "Creating";
        private const string CanceledValue = "Canceled";
        private const string CancelFailedStatusUnknownValue = "CancelFailedStatusUnknown";
        private const string FailedValue = "Failed";
        private const string SucceededValue = "Succeeded";

        /// <summary> Indicates that the virtual machine is either in the process of being created or is scheduled to be created. </summary>
        public static ComputeFleetVmOperationStatus Creating { get; } = new ComputeFleetVmOperationStatus(CreatingValue);
        /// <summary> Indicates that the cancellation request was successful because the virtual machine had not been created yet. </summary>
        public static ComputeFleetVmOperationStatus Canceled { get; } = new ComputeFleetVmOperationStatus(CanceledValue);
        /// <summary> Indicates that the cancellation request could not be applied because the virtual machine had already been created. </summary>
        public static ComputeFleetVmOperationStatus CancelFailedStatusUnknown { get; } = new ComputeFleetVmOperationStatus(CancelFailedStatusUnknownValue);
        /// <summary> Indicates that the virtual machine operation failed. </summary>
        public static ComputeFleetVmOperationStatus Failed { get; } = new ComputeFleetVmOperationStatus(FailedValue);
        /// <summary> Indicates that the virtual machine operation completed successfully. </summary>
        public static ComputeFleetVmOperationStatus Succeeded { get; } = new ComputeFleetVmOperationStatus(SucceededValue);
        /// <summary> Determines if two <see cref="ComputeFleetVmOperationStatus"/> values are the same. </summary>
        public static bool operator ==(ComputeFleetVmOperationStatus left, ComputeFleetVmOperationStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ComputeFleetVmOperationStatus"/> values are not the same. </summary>
        public static bool operator !=(ComputeFleetVmOperationStatus left, ComputeFleetVmOperationStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ComputeFleetVmOperationStatus"/>. </summary>
        public static implicit operator ComputeFleetVmOperationStatus(string value) => new ComputeFleetVmOperationStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ComputeFleetVmOperationStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ComputeFleetVmOperationStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
