// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.MySql.FlexibleServers.Models;

namespace Azure.ResourceManager.MySql.FlexibleServers.Samples
{
    public partial class Sample_MySqlFlexibleServersMySqlFlexibleServerConfigurationResource
    {
        // Update a user configuration
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateAUserConfiguration()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/Configurations/preview/2023-06-01-preview/examples/ConfigurationUpdate.json
            // this example is just showing the usage of "Configurations_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlFlexibleServersMySqlFlexibleServerConfigurationResource created on azure
            // for more information of creating MySqlFlexibleServersMySqlFlexibleServerConfigurationResource, please refer to the document of MySqlFlexibleServersMySqlFlexibleServerConfigurationResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "testrg";
            string serverName = "testserver";
            string configurationName = "event_scheduler";
            ResourceIdentifier mySqlFlexibleServersMySqlFlexibleServerConfigurationResourceId = MySqlFlexibleServersMySqlFlexibleServerConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName, configurationName);
            MySqlFlexibleServersMySqlFlexibleServerConfigurationResource mySqlFlexibleServersMySqlFlexibleServerConfiguration = client.GetMySqlFlexibleServersMySqlFlexibleServerConfigurationResource(mySqlFlexibleServersMySqlFlexibleServerConfigurationResourceId);

            // invoke the operation
            MySqlFlexibleServersMySqlFlexibleServerConfigurationData data = new MySqlFlexibleServersMySqlFlexibleServerConfigurationData()
            {
                Value = "on",
                Source = MySqlFlexibleServerConfigurationSource.UserOverride,
            };
            ArmOperation<MySqlFlexibleServersMySqlFlexibleServerConfigurationResource> lro = await mySqlFlexibleServersMySqlFlexibleServerConfiguration.UpdateAsync(WaitUntil.Completed, data);
            MySqlFlexibleServersMySqlFlexibleServerConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MySqlFlexibleServersMySqlFlexibleServerConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get a configuration
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetAConfiguration()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/Configurations/preview/2023-06-01-preview/examples/ConfigurationGet.json
            // this example is just showing the usage of "Configurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlFlexibleServersMySqlFlexibleServerConfigurationResource created on azure
            // for more information of creating MySqlFlexibleServersMySqlFlexibleServerConfigurationResource, please refer to the document of MySqlFlexibleServersMySqlFlexibleServerConfigurationResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string serverName = "testserver";
            string configurationName = "event_scheduler";
            ResourceIdentifier mySqlFlexibleServersMySqlFlexibleServerConfigurationResourceId = MySqlFlexibleServersMySqlFlexibleServerConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName, configurationName);
            MySqlFlexibleServersMySqlFlexibleServerConfigurationResource mySqlFlexibleServersMySqlFlexibleServerConfiguration = client.GetMySqlFlexibleServersMySqlFlexibleServerConfigurationResource(mySqlFlexibleServersMySqlFlexibleServerConfigurationResourceId);

            // invoke the operation
            MySqlFlexibleServersMySqlFlexibleServerConfigurationResource result = await mySqlFlexibleServersMySqlFlexibleServerConfiguration.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MySqlFlexibleServersMySqlFlexibleServerConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
