// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;

namespace Azure.ResourceManager.MySql.FlexibleServers.Samples
{
    public partial class Sample_MySqlFlexibleServersMySqlFlexibleServerFirewallRuleCollection
    {
        // Create a firewall rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateAFirewallRule()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/Firewall/preview/2023-06-01-preview/examples/FirewallRuleCreate.json
            // this example is just showing the usage of "FirewallRules_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlFlexibleServersMySqlFlexibleServerResource created on azure
            // for more information of creating MySqlFlexibleServersMySqlFlexibleServerResource, please refer to the document of MySqlFlexibleServersMySqlFlexibleServerResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string serverName = "testserver";
            ResourceIdentifier mySqlFlexibleServersMySqlFlexibleServerResourceId = MySqlFlexibleServersMySqlFlexibleServerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName);
            MySqlFlexibleServersMySqlFlexibleServerResource mySqlFlexibleServersMySqlFlexibleServer = client.GetMySqlFlexibleServersMySqlFlexibleServerResource(mySqlFlexibleServersMySqlFlexibleServerResourceId);

            // get the collection of this MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleCollection collection = mySqlFlexibleServersMySqlFlexibleServer.GetMySqlFlexibleServersMySqlFlexibleServerFirewallRules();

            // invoke the operation
            string firewallRuleName = "rule1";
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleData data = new MySqlFlexibleServersMySqlFlexibleServerFirewallRuleData(IPAddress.Parse("0.0.0.0"), IPAddress.Parse("255.255.255.255"));
            ArmOperation<MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, firewallRuleName, data);
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get a firewall rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetAFirewallRule()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/Firewall/preview/2023-06-01-preview/examples/FirewallRuleGet.json
            // this example is just showing the usage of "FirewallRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlFlexibleServersMySqlFlexibleServerResource created on azure
            // for more information of creating MySqlFlexibleServersMySqlFlexibleServerResource, please refer to the document of MySqlFlexibleServersMySqlFlexibleServerResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string serverName = "testserver";
            ResourceIdentifier mySqlFlexibleServersMySqlFlexibleServerResourceId = MySqlFlexibleServersMySqlFlexibleServerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName);
            MySqlFlexibleServersMySqlFlexibleServerResource mySqlFlexibleServersMySqlFlexibleServer = client.GetMySqlFlexibleServersMySqlFlexibleServerResource(mySqlFlexibleServersMySqlFlexibleServerResourceId);

            // get the collection of this MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleCollection collection = mySqlFlexibleServersMySqlFlexibleServer.GetMySqlFlexibleServersMySqlFlexibleServerFirewallRules();

            // invoke the operation
            string firewallRuleName = "rule1";
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource result = await collection.GetAsync(firewallRuleName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get a firewall rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetAFirewallRule()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/Firewall/preview/2023-06-01-preview/examples/FirewallRuleGet.json
            // this example is just showing the usage of "FirewallRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlFlexibleServersMySqlFlexibleServerResource created on azure
            // for more information of creating MySqlFlexibleServersMySqlFlexibleServerResource, please refer to the document of MySqlFlexibleServersMySqlFlexibleServerResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string serverName = "testserver";
            ResourceIdentifier mySqlFlexibleServersMySqlFlexibleServerResourceId = MySqlFlexibleServersMySqlFlexibleServerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName);
            MySqlFlexibleServersMySqlFlexibleServerResource mySqlFlexibleServersMySqlFlexibleServer = client.GetMySqlFlexibleServersMySqlFlexibleServerResource(mySqlFlexibleServersMySqlFlexibleServerResourceId);

            // get the collection of this MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleCollection collection = mySqlFlexibleServersMySqlFlexibleServer.GetMySqlFlexibleServersMySqlFlexibleServerFirewallRules();

            // invoke the operation
            string firewallRuleName = "rule1";
            bool result = await collection.ExistsAsync(firewallRuleName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Get a firewall rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_GetAFirewallRule()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/Firewall/preview/2023-06-01-preview/examples/FirewallRuleGet.json
            // this example is just showing the usage of "FirewallRules_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlFlexibleServersMySqlFlexibleServerResource created on azure
            // for more information of creating MySqlFlexibleServersMySqlFlexibleServerResource, please refer to the document of MySqlFlexibleServersMySqlFlexibleServerResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string serverName = "testserver";
            ResourceIdentifier mySqlFlexibleServersMySqlFlexibleServerResourceId = MySqlFlexibleServersMySqlFlexibleServerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName);
            MySqlFlexibleServersMySqlFlexibleServerResource mySqlFlexibleServersMySqlFlexibleServer = client.GetMySqlFlexibleServersMySqlFlexibleServerResource(mySqlFlexibleServersMySqlFlexibleServerResourceId);

            // get the collection of this MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleCollection collection = mySqlFlexibleServersMySqlFlexibleServer.GetMySqlFlexibleServersMySqlFlexibleServerFirewallRules();

            // invoke the operation
            string firewallRuleName = "rule1";
            NullableResponse<MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource> response = await collection.GetIfExistsAsync(firewallRuleName);
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                MySqlFlexibleServersMySqlFlexibleServerFirewallRuleData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // List all firewall rules in a server
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ListAllFirewallRulesInAServer()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/Firewall/preview/2023-06-01-preview/examples/FirewallRulesListByServer.json
            // this example is just showing the usage of "FirewallRules_ListByServer" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlFlexibleServersMySqlFlexibleServerResource created on azure
            // for more information of creating MySqlFlexibleServersMySqlFlexibleServerResource, please refer to the document of MySqlFlexibleServersMySqlFlexibleServerResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestGroup";
            string serverName = "testserver";
            ResourceIdentifier mySqlFlexibleServersMySqlFlexibleServerResourceId = MySqlFlexibleServersMySqlFlexibleServerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName);
            MySqlFlexibleServersMySqlFlexibleServerResource mySqlFlexibleServersMySqlFlexibleServer = client.GetMySqlFlexibleServersMySqlFlexibleServerResource(mySqlFlexibleServersMySqlFlexibleServerResourceId);

            // get the collection of this MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource
            MySqlFlexibleServersMySqlFlexibleServerFirewallRuleCollection collection = mySqlFlexibleServersMySqlFlexibleServer.GetMySqlFlexibleServersMySqlFlexibleServerFirewallRules();

            // invoke the operation and iterate over the result
            await foreach (MySqlFlexibleServersMySqlFlexibleServerFirewallRuleResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                MySqlFlexibleServersMySqlFlexibleServerFirewallRuleData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}
