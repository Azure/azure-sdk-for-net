// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.MySql;
using Azure.ResourceManager.MySql.Models;

namespace Azure.ResourceManager.MySql.Samples
{
    public partial class Sample_MySqlPrivateEndpointConnectionResource
    {
        // Gets private endpoint connection.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetsPrivateEndpointConnection()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/legacy/stable/2018-06-01/examples/PrivateEndpointConnectionGet.json
            // this example is just showing the usage of "PrivateEndpointConnections_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlPrivateEndpointConnectionResource created on azure
            // for more information of creating MySqlPrivateEndpointConnectionResource, please refer to the document of MySqlPrivateEndpointConnectionResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "Default";
            string serverName = "test-svr";
            string privateEndpointConnectionName = "private-endpoint-connection-name";
            ResourceIdentifier mySqlPrivateEndpointConnectionResourceId = MySqlPrivateEndpointConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName, privateEndpointConnectionName);
            MySqlPrivateEndpointConnectionResource mySqlPrivateEndpointConnection = client.GetMySqlPrivateEndpointConnectionResource(mySqlPrivateEndpointConnectionResourceId);

            // invoke the operation
            MySqlPrivateEndpointConnectionResource result = await mySqlPrivateEndpointConnection.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MySqlPrivateEndpointConnectionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Deletes a private endpoint connection with a given name.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeletesAPrivateEndpointConnectionWithAGivenName()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/legacy/stable/2018-06-01/examples/PrivateEndpointConnectionDelete.json
            // this example is just showing the usage of "PrivateEndpointConnections_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlPrivateEndpointConnectionResource created on azure
            // for more information of creating MySqlPrivateEndpointConnectionResource, please refer to the document of MySqlPrivateEndpointConnectionResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "Default";
            string serverName = "test-svr";
            string privateEndpointConnectionName = "private-endpoint-connection-name";
            ResourceIdentifier mySqlPrivateEndpointConnectionResourceId = MySqlPrivateEndpointConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName, privateEndpointConnectionName);
            MySqlPrivateEndpointConnectionResource mySqlPrivateEndpointConnection = client.GetMySqlPrivateEndpointConnectionResource(mySqlPrivateEndpointConnectionResourceId);

            // invoke the operation
            await mySqlPrivateEndpointConnection.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Update private endpoint connection Tags
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdatePrivateEndpointConnectionTags()
        {
            // Generated from example definition: specification/mysql/resource-manager/Microsoft.DBforMySQL/legacy/stable/2018-06-01/examples/PrivateEndpointConnectionUpdateTags.json
            // this example is just showing the usage of "PrivateEndpointConnections_UpdateTags" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MySqlPrivateEndpointConnectionResource created on azure
            // for more information of creating MySqlPrivateEndpointConnectionResource, please refer to the document of MySqlPrivateEndpointConnectionResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "Default";
            string serverName = "test-svr";
            string privateEndpointConnectionName = "private-endpoint-connection-name";
            ResourceIdentifier mySqlPrivateEndpointConnectionResourceId = MySqlPrivateEndpointConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, serverName, privateEndpointConnectionName);
            MySqlPrivateEndpointConnectionResource mySqlPrivateEndpointConnection = client.GetMySqlPrivateEndpointConnectionResource(mySqlPrivateEndpointConnectionResourceId);

            // invoke the operation
            MySqlPrivateEndpointConnectionPatch patch = new MySqlPrivateEndpointConnectionPatch()
            {
                Tags =
{
["key1"] = "val1",
["key2"] = "val2",
},
            };
            ArmOperation<MySqlPrivateEndpointConnectionResource> lro = await mySqlPrivateEndpointConnection.UpdateAsync(WaitUntil.Completed, patch);
            MySqlPrivateEndpointConnectionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MySqlPrivateEndpointConnectionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
