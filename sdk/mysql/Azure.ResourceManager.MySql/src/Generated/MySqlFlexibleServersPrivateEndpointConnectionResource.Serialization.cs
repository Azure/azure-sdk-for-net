// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Text.Json;

namespace Azure.ResourceManager.MySql.FlexibleServers
{
    public partial class MySqlFlexibleServersPrivateEndpointConnectionResource : IJsonModel<MySqlFlexibleServersPrivateEndpointConnectionData>
    {
        private static MySqlFlexibleServersPrivateEndpointConnectionData s_dataDeserializationInstance;
        private static MySqlFlexibleServersPrivateEndpointConnectionData DataDeserializationInstance => s_dataDeserializationInstance ??= new();

        void IJsonModel<MySqlFlexibleServersPrivateEndpointConnectionData>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options) => ((IJsonModel<MySqlFlexibleServersPrivateEndpointConnectionData>)Data).Write(writer, options);

        MySqlFlexibleServersPrivateEndpointConnectionData IJsonModel<MySqlFlexibleServersPrivateEndpointConnectionData>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => ((IJsonModel<MySqlFlexibleServersPrivateEndpointConnectionData>)DataDeserializationInstance).Create(ref reader, options);

        BinaryData IPersistableModel<MySqlFlexibleServersPrivateEndpointConnectionData>.Write(ModelReaderWriterOptions options) => ModelReaderWriter.Write<MySqlFlexibleServersPrivateEndpointConnectionData>(Data, options, AzureResourceManagerMySqlContext.Default);

        MySqlFlexibleServersPrivateEndpointConnectionData IPersistableModel<MySqlFlexibleServersPrivateEndpointConnectionData>.Create(BinaryData data, ModelReaderWriterOptions options) => ModelReaderWriter.Read<MySqlFlexibleServersPrivateEndpointConnectionData>(data, options, AzureResourceManagerMySqlContext.Default);

        string IPersistableModel<MySqlFlexibleServersPrivateEndpointConnectionData>.GetFormatFromOptions(ModelReaderWriterOptions options) => ((IPersistableModel<MySqlFlexibleServersPrivateEndpointConnectionData>)DataDeserializationInstance).GetFormatFromOptions(options);
    }
}
