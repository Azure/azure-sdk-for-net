// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MySql.Models
{
    /// <summary> Represents Operation Results API Response. </summary>
    public partial class OperationStatusExtendedResult : OperationStatusResult
    {
        /// <summary> Initializes a new instance of <see cref="OperationStatusExtendedResult"/>. </summary>
        /// <param name="status"> Operation status. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="status"/> is null. </exception>
        internal OperationStatusExtendedResult(string status) : base(status)
        {
            Argument.AssertNotNull(status, nameof(status));
        }

        /// <summary> Initializes a new instance of <see cref="OperationStatusExtendedResult"/>. </summary>
        /// <param name="id"> Fully qualified ID for the async operation. </param>
        /// <param name="name"> Name of the async operation. </param>
        /// <param name="status"> Operation status. </param>
        /// <param name="percentComplete"> Percent of the operation that is complete. </param>
        /// <param name="startOn"> The start time of the operation. </param>
        /// <param name="endOn"> The end time of the operation. </param>
        /// <param name="operations"> The operations list. </param>
        /// <param name="error"> If present, details of the operation error. </param>
        /// <param name="resourceId"> Fully qualified ID of the resource against which the original async operation was started. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="properties"> The extended properties of Operation Results. </param>
        internal OperationStatusExtendedResult(ResourceIdentifier id, string name, string status, double? percentComplete, DateTimeOffset? startOn, DateTimeOffset? endOn, IReadOnlyList<OperationStatusResult> operations, ResponseError error, ResourceIdentifier resourceId, IDictionary<string, BinaryData> serializedAdditionalRawData, ExtendedData properties) : base(id, name, status, percentComplete, startOn, endOn, operations, error, resourceId, serializedAdditionalRawData)
        {
            Properties = properties;
        }

        /// <summary> Initializes a new instance of <see cref="OperationStatusExtendedResult"/> for deserialization. </summary>
        internal OperationStatusExtendedResult()
        {
        }

        /// <summary> The extended properties of Operation Results. </summary>
        public ExtendedData Properties { get; }
    }
}
