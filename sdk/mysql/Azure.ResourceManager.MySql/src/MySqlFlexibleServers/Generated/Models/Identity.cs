// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MySql.FlexibleServers.Models
{
    /// <summary> Properties to configure Identity for Bring your Own Keys. </summary>
    public partial class Identity
    {
        /// <summary> Initializes a new instance of Identity. </summary>
        public Identity()
        {
            UserAssignedIdentities = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of Identity. </summary>
        /// <param name="principalId"> ObjectId from the KeyVault. </param>
        /// <param name="tenantId"> TenantId from the KeyVault. </param>
        /// <param name="managedServiceIdentityType"> Type of managed service identity. </param>
        /// <param name="userAssignedIdentities"> Metadata of user assigned identity. </param>
        internal Identity(Guid? principalId, Guid? tenantId, ManagedServiceIdentityType? managedServiceIdentityType, IDictionary<string, BinaryData> userAssignedIdentities)
        {
            PrincipalId = principalId;
            TenantId = tenantId;
            ManagedServiceIdentityType = managedServiceIdentityType;
            UserAssignedIdentities = userAssignedIdentities;
        }

        /// <summary> ObjectId from the KeyVault. </summary>
        public Guid? PrincipalId { get; }
        /// <summary> TenantId from the KeyVault. </summary>
        public Guid? TenantId { get; }
        /// <summary> Type of managed service identity. </summary>
        public ManagedServiceIdentityType? ManagedServiceIdentityType { get; set; }
        /// <summary>
        /// Metadata of user assigned identity.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IDictionary<string, BinaryData> UserAssignedIdentities { get; }
    }
}
