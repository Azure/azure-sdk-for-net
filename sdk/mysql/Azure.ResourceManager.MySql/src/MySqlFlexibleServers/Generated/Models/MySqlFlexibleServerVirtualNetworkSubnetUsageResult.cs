// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.MySql.FlexibleServers.Models
{
    /// <summary> Virtual network subnet usage data. </summary>
    public partial class MySqlFlexibleServerVirtualNetworkSubnetUsageResult
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="MySqlFlexibleServerVirtualNetworkSubnetUsageResult"/>. </summary>
        internal MySqlFlexibleServerVirtualNetworkSubnetUsageResult()
        {
            DelegatedSubnetsUsage = new ChangeTrackingList<MySqlFlexibleServerDelegatedSubnetUsage>();
        }

        /// <summary> Initializes a new instance of <see cref="MySqlFlexibleServerVirtualNetworkSubnetUsageResult"/>. </summary>
        /// <param name="location"> The location name. </param>
        /// <param name="subscriptionId"> The subscription id. </param>
        /// <param name="delegatedSubnetsUsage"> A list of delegated subnet usage. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal MySqlFlexibleServerVirtualNetworkSubnetUsageResult(AzureLocation? location, string subscriptionId, IReadOnlyList<MySqlFlexibleServerDelegatedSubnetUsage> delegatedSubnetsUsage, Dictionary<string, BinaryData> rawData)
        {
            Location = location;
            SubscriptionId = subscriptionId;
            DelegatedSubnetsUsage = delegatedSubnetsUsage;
            _rawData = rawData;
        }

        /// <summary> The location name. </summary>
        public AzureLocation? Location { get; }
        /// <summary> The subscription id. </summary>
        public string SubscriptionId { get; }
        /// <summary> A list of delegated subnet usage. </summary>
        public IReadOnlyList<MySqlFlexibleServerDelegatedSubnetUsage> DelegatedSubnetsUsage { get; }
    }
}
