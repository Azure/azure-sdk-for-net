// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.MySql.FlexibleServers.Models;

namespace Azure.ResourceManager.MySql.FlexibleServers
{
    /// <summary> A class representing the Server data model. </summary>
    public partial class ServerData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of ServerData. </summary>
        /// <param name="location"> The location. </param>
        public ServerData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of ServerData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="identity"> The cmk identity for the server. </param>
        /// <param name="sku"> The SKU (pricing tier) of the server. </param>
        /// <param name="administratorLogin"> The administrator&apos;s login name of a server. Can only be specified when the server is being created (and is required for creation). </param>
        /// <param name="administratorLoginPassword"> The password of the administrator login (required for server creation). </param>
        /// <param name="version"> Server version. </param>
        /// <param name="availabilityZone"> availability Zone information of the server. </param>
        /// <param name="createMode"> The mode to create a new MySQL server. </param>
        /// <param name="sourceServerResourceId"> The source MySQL server id. </param>
        /// <param name="restorePointInOn"> Restore point creation time (ISO8601 format), specifying the time to restore from. </param>
        /// <param name="replicationRole"> The replication role. </param>
        /// <param name="replicaCapacity"> The maximum number of replicas that a primary server can have. </param>
        /// <param name="dataEncryption"> The Data Encryption for CMK. </param>
        /// <param name="state"> The state of a server. </param>
        /// <param name="fullyQualifiedDomainName"> The fully qualified domain name of a server. </param>
        /// <param name="storage"> Storage related properties of a server. </param>
        /// <param name="backup"> Backup related properties of a server. </param>
        /// <param name="highAvailability"> High availability related properties of a server. </param>
        /// <param name="network"> Network related properties of a server. </param>
        /// <param name="maintenanceWindow"> Maintenance window of a server. </param>
        internal ServerData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, Identity identity, FlexibleServersSku sku, string administratorLogin, string administratorLoginPassword, ServerVersion? version, string availabilityZone, CreateMode? createMode, string sourceServerResourceId, DateTimeOffset? restorePointInOn, ReplicationRole? replicationRole, int? replicaCapacity, DataEncryption dataEncryption, ServerState? state, string fullyQualifiedDomainName, Storage storage, Backup backup, HighAvailability highAvailability, Network network, MaintenanceWindow maintenanceWindow) : base(id, name, resourceType, systemData, tags, location)
        {
            Identity = identity;
            Sku = sku;
            AdministratorLogin = administratorLogin;
            AdministratorLoginPassword = administratorLoginPassword;
            Version = version;
            AvailabilityZone = availabilityZone;
            CreateMode = createMode;
            SourceServerResourceId = sourceServerResourceId;
            RestorePointInOn = restorePointInOn;
            ReplicationRole = replicationRole;
            ReplicaCapacity = replicaCapacity;
            DataEncryption = dataEncryption;
            State = state;
            FullyQualifiedDomainName = fullyQualifiedDomainName;
            Storage = storage;
            Backup = backup;
            HighAvailability = highAvailability;
            Network = network;
            MaintenanceWindow = maintenanceWindow;
        }

        /// <summary> The cmk identity for the server. </summary>
        public Identity Identity { get; set; }
        /// <summary> The SKU (pricing tier) of the server. </summary>
        public FlexibleServersSku Sku { get; set; }
        /// <summary> The administrator&apos;s login name of a server. Can only be specified when the server is being created (and is required for creation). </summary>
        public string AdministratorLogin { get; set; }
        /// <summary> The password of the administrator login (required for server creation). </summary>
        public string AdministratorLoginPassword { get; set; }
        /// <summary> Server version. </summary>
        public ServerVersion? Version { get; set; }
        /// <summary> availability Zone information of the server. </summary>
        public string AvailabilityZone { get; set; }
        /// <summary> The mode to create a new MySQL server. </summary>
        public CreateMode? CreateMode { get; set; }
        /// <summary> The source MySQL server id. </summary>
        public string SourceServerResourceId { get; set; }
        /// <summary> Restore point creation time (ISO8601 format), specifying the time to restore from. </summary>
        public DateTimeOffset? RestorePointInOn { get; set; }
        /// <summary> The replication role. </summary>
        public ReplicationRole? ReplicationRole { get; set; }
        /// <summary> The maximum number of replicas that a primary server can have. </summary>
        public int? ReplicaCapacity { get; }
        /// <summary> The Data Encryption for CMK. </summary>
        public DataEncryption DataEncryption { get; set; }
        /// <summary> The state of a server. </summary>
        public ServerState? State { get; }
        /// <summary> The fully qualified domain name of a server. </summary>
        public string FullyQualifiedDomainName { get; }
        /// <summary> Storage related properties of a server. </summary>
        public Storage Storage { get; set; }
        /// <summary> Backup related properties of a server. </summary>
        public Backup Backup { get; set; }
        /// <summary> High availability related properties of a server. </summary>
        public HighAvailability HighAvailability { get; set; }
        /// <summary> Network related properties of a server. </summary>
        public Network Network { get; set; }
        /// <summary> Maintenance window of a server. </summary>
        public MaintenanceWindow MaintenanceWindow { get; set; }
    }
}
