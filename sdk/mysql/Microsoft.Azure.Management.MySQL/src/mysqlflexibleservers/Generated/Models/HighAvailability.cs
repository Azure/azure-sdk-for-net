// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL.FlexibleServers.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Network related properties of a server
    /// </summary>
    public partial class HighAvailability
    {
        /// <summary>
        /// Initializes a new instance of the HighAvailability class.
        /// </summary>
        public HighAvailability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HighAvailability class.
        /// </summary>
        /// <param name="mode">High availability mode for a server. Possible
        /// values include: 'Disabled', 'ZoneRedundant', 'SameZone'</param>
        /// <param name="state">The state of server high availability. Possible
        /// values include: 'NotEnabled', 'CreatingStandby', 'Healthy',
        /// 'FailingOver', 'RemovingStandby'</param>
        /// <param name="standbyAvailabilityZone">Availability zone of the
        /// standby server.</param>
        public HighAvailability(string mode = default(string), string state = default(string), string standbyAvailabilityZone = default(string))
        {
            Mode = mode;
            State = state;
            StandbyAvailabilityZone = standbyAvailabilityZone;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets high availability mode for a server. Possible values
        /// include: 'Disabled', 'ZoneRedundant', 'SameZone'
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Gets the state of server high availability. Possible values
        /// include: 'NotEnabled', 'CreatingStandby', 'Healthy', 'FailingOver',
        /// 'RemovingStandby'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets or sets availability zone of the standby server.
        /// </summary>
        [JsonProperty(PropertyName = "standbyAvailabilityZone")]
        public string StandbyAvailabilityZone { get; set; }

    }
}
