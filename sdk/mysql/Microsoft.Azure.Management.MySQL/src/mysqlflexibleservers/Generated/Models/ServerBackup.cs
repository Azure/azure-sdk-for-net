// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL.FlexibleServers.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Server backup properties
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ServerBackup : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ServerBackup class.
        /// </summary>
        public ServerBackup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServerBackup class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="backupType">Backup type.</param>
        /// <param name="completedTime">Backup completed time (ISO8601
        /// format).</param>
        /// <param name="source">Backup source</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource.</param>
        public ServerBackup(string id = default(string), string name = default(string), string type = default(string), string backupType = default(string), System.DateTime? completedTime = default(System.DateTime?), string source = default(string), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            BackupType = backupType;
            CompletedTime = completedTime;
            Source = source;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets backup type.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupType")]
        public string BackupType { get; set; }

        /// <summary>
        /// Gets or sets backup completed time (ISO8601 format).
        /// </summary>
        [JsonProperty(PropertyName = "properties.completedTime")]
        public System.DateTime? CompletedTime { get; set; }

        /// <summary>
        /// Gets or sets backup source
        /// </summary>
        [JsonProperty(PropertyName = "properties.source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets the system metadata relating to this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
