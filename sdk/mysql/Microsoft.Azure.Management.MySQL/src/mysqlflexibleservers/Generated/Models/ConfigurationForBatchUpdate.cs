// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL.FlexibleServers.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a Configuration.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ConfigurationForBatchUpdate
    {
        /// <summary>
        /// Initializes a new instance of the ConfigurationForBatchUpdate
        /// class.
        /// </summary>
        public ConfigurationForBatchUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConfigurationForBatchUpdate
        /// class.
        /// </summary>
        /// <param name="name">Name of the configuration.</param>
        /// <param name="value">Value of the configuration.</param>
        /// <param name="source">Source of the configuration.</param>
        public ConfigurationForBatchUpdate(string name = default(string), string value = default(string), string source = default(string))
        {
            Name = name;
            Value = value;
            Source = source;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the configuration.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets value of the configuration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets source of the configuration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.source")]
        public string Source { get; set; }

    }
}
