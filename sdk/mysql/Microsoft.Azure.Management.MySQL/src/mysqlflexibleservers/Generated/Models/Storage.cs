// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL.FlexibleServers.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Storage Profile properties of a server
    /// </summary>
    public partial class Storage
    {
        /// <summary>
        /// Initializes a new instance of the Storage class.
        /// </summary>
        public Storage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Storage class.
        /// </summary>
        /// <param name="storageSizeGB">Max storage size allowed for a
        /// server.</param>
        /// <param name="iops">Storage IOPS for a server.</param>
        /// <param name="autoGrow">Enable Storage Auto Grow or not. Possible
        /// values include: 'Enabled', 'Disabled'</param>
        /// <param name="storageSku">The sku name of the server
        /// storage.</param>
        public Storage(int? storageSizeGB = default(int?), int? iops = default(int?), string autoGrow = default(string), string storageSku = default(string))
        {
            StorageSizeGB = storageSizeGB;
            Iops = iops;
            AutoGrow = autoGrow;
            StorageSku = storageSku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets max storage size allowed for a server.
        /// </summary>
        [JsonProperty(PropertyName = "storageSizeGB")]
        public int? StorageSizeGB { get; set; }

        /// <summary>
        /// Gets or sets storage IOPS for a server.
        /// </summary>
        [JsonProperty(PropertyName = "iops")]
        public int? Iops { get; set; }

        /// <summary>
        /// Gets or sets enable Storage Auto Grow or not. Possible values
        /// include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "autoGrow")]
        public string AutoGrow { get; set; }

        /// <summary>
        /// Gets the sku name of the server storage.
        /// </summary>
        [JsonProperty(PropertyName = "storageSku")]
        public string StorageSku { get; private set; }

    }
}
