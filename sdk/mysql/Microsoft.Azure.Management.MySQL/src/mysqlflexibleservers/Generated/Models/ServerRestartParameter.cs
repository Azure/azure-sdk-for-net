// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL.FlexibleServers.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Server restart parameters.
    /// </summary>
    public partial class ServerRestartParameter
    {
        /// <summary>
        /// Initializes a new instance of the ServerRestartParameter class.
        /// </summary>
        public ServerRestartParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServerRestartParameter class.
        /// </summary>
        /// <param name="restartWithFailover">Whether or not failover to
        /// standby server when restarting a server with high availability
        /// enabled. Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="maxFailoverSeconds">The maximum allowed failover time
        /// in seconds.</param>
        public ServerRestartParameter(string restartWithFailover = default(string), int? maxFailoverSeconds = default(int?))
        {
            RestartWithFailover = restartWithFailover;
            MaxFailoverSeconds = maxFailoverSeconds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether or not failover to standby server when
        /// restarting a server with high availability enabled. Possible values
        /// include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "restartWithFailover")]
        public string RestartWithFailover { get; set; }

        /// <summary>
        /// Gets or sets the maximum allowed failover time in seconds.
        /// </summary>
        [JsonProperty(PropertyName = "maxFailoverSeconds")]
        public int? MaxFailoverSeconds { get; set; }

    }
}
