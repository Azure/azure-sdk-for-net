// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL.FlexibleServers.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// storage edition capability
    /// </summary>
    public partial class StorageEditionCapability
    {
        /// <summary>
        /// Initializes a new instance of the StorageEditionCapability class.
        /// </summary>
        public StorageEditionCapability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageEditionCapability class.
        /// </summary>
        /// <param name="name">storage edition name</param>
        /// <param name="minStorageSize">The minimal supported storage
        /// size.</param>
        /// <param name="maxStorageSize">The maximum supported storage
        /// size.</param>
        /// <param name="minBackupRetentionDays">Minimal backup retention
        /// days</param>
        /// <param name="maxBackupRetentionDays">Maximum backup retention
        /// days</param>
        public StorageEditionCapability(string name = default(string), long? minStorageSize = default(long?), long? maxStorageSize = default(long?), long? minBackupRetentionDays = default(long?), long? maxBackupRetentionDays = default(long?))
        {
            Name = name;
            MinStorageSize = minStorageSize;
            MaxStorageSize = maxStorageSize;
            MinBackupRetentionDays = minBackupRetentionDays;
            MaxBackupRetentionDays = maxBackupRetentionDays;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets storage edition name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the minimal supported storage size.
        /// </summary>
        [JsonProperty(PropertyName = "minStorageSize")]
        public long? MinStorageSize { get; private set; }

        /// <summary>
        /// Gets the maximum supported storage size.
        /// </summary>
        [JsonProperty(PropertyName = "maxStorageSize")]
        public long? MaxStorageSize { get; private set; }

        /// <summary>
        /// Gets minimal backup retention days
        /// </summary>
        [JsonProperty(PropertyName = "minBackupRetentionDays")]
        public long? MinBackupRetentionDays { get; private set; }

        /// <summary>
        /// Gets maximum backup retention days
        /// </summary>
        [JsonProperty(PropertyName = "maxBackupRetentionDays")]
        public long? MaxBackupRetentionDays { get; private set; }

    }
}
