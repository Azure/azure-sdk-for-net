// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Service level objectives for performance tier.
    /// </summary>
    public partial class PerformanceTierServiceLevelObjectives
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PerformanceTierServiceLevelObjectives class.
        /// </summary>
        public PerformanceTierServiceLevelObjectives()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PerformanceTierServiceLevelObjectives class.
        /// </summary>
        /// <param name="id">ID for the service level objective.</param>
        /// <param name="edition">Edition of the performance tier.</param>
        /// <param name="vCore">vCore associated with the service level
        /// objective</param>
        /// <param name="hardwareGeneration">Hardware generation associated
        /// with the service level objective</param>
        /// <param name="maxBackupRetentionDays">Maximum Backup retention in
        /// days for the performance tier edition</param>
        /// <param name="minBackupRetentionDays">Minimum Backup retention in
        /// days for the performance tier edition</param>
        /// <param name="maxStorageMB">Max storage allowed for a
        /// server.</param>
        /// <param name="minStorageMB">Max storage allowed for a
        /// server.</param>
        public PerformanceTierServiceLevelObjectives(string id = default(string), string edition = default(string), int? vCore = default(int?), string hardwareGeneration = default(string), int? maxBackupRetentionDays = default(int?), int? minBackupRetentionDays = default(int?), int? maxStorageMB = default(int?), int? minStorageMB = default(int?))
        {
            Id = id;
            Edition = edition;
            VCore = vCore;
            HardwareGeneration = hardwareGeneration;
            MaxBackupRetentionDays = maxBackupRetentionDays;
            MinBackupRetentionDays = minBackupRetentionDays;
            MaxStorageMB = maxStorageMB;
            MinStorageMB = minStorageMB;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ID for the service level objective.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets edition of the performance tier.
        /// </summary>
        [JsonProperty(PropertyName = "edition")]
        public string Edition { get; set; }

        /// <summary>
        /// Gets or sets vCore associated with the service level objective
        /// </summary>
        [JsonProperty(PropertyName = "vCore")]
        public int? VCore { get; set; }

        /// <summary>
        /// Gets or sets hardware generation associated with the service level
        /// objective
        /// </summary>
        [JsonProperty(PropertyName = "hardwareGeneration")]
        public string HardwareGeneration { get; set; }

        /// <summary>
        /// Gets or sets maximum Backup retention in days for the performance
        /// tier edition
        /// </summary>
        [JsonProperty(PropertyName = "maxBackupRetentionDays")]
        public int? MaxBackupRetentionDays { get; set; }

        /// <summary>
        /// Gets or sets minimum Backup retention in days for the performance
        /// tier edition
        /// </summary>
        [JsonProperty(PropertyName = "minBackupRetentionDays")]
        public int? MinBackupRetentionDays { get; set; }

        /// <summary>
        /// Gets or sets max storage allowed for a server.
        /// </summary>
        [JsonProperty(PropertyName = "maxStorageMB")]
        public int? MaxStorageMB { get; set; }

        /// <summary>
        /// Gets or sets max storage allowed for a server.
        /// </summary>
        [JsonProperty(PropertyName = "minStorageMB")]
        public int? MinStorageMB { get; set; }

    }
}
