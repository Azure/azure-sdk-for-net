// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a Recommendation Action.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class RecommendationAction : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the RecommendationAction class.
        /// </summary>
        public RecommendationAction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecommendationAction class.
        /// </summary>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        /// <param name="advisorName">Advisor name.</param>
        /// <param name="sessionId">Recommendation action session
        /// identifier.</param>
        /// <param name="actionId">Recommendation action identifier.</param>
        /// <param name="createdTime">Recommendation action creation
        /// time.</param>
        /// <param name="expirationTime">Recommendation action expiration
        /// time.</param>
        /// <param name="reason">Recommendation action reason.</param>
        /// <param name="recommendationType">Recommendation action
        /// type.</param>
        /// <param name="details">Recommendation action details.</param>
        public RecommendationAction(string id = default(string), string name = default(string), string type = default(string), string advisorName = default(string), string sessionId = default(string), int? actionId = default(int?), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? expirationTime = default(System.DateTime?), string reason = default(string), string recommendationType = default(string), IDictionary<string, string> details = default(IDictionary<string, string>))
            : base(id, name, type)
        {
            AdvisorName = advisorName;
            SessionId = sessionId;
            ActionId = actionId;
            CreatedTime = createdTime;
            ExpirationTime = expirationTime;
            Reason = reason;
            RecommendationType = recommendationType;
            Details = details;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets advisor name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.advisorName")]
        public string AdvisorName { get; set; }

        /// <summary>
        /// Gets or sets recommendation action session identifier.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sessionId")]
        public string SessionId { get; set; }

        /// <summary>
        /// Gets or sets recommendation action identifier.
        /// </summary>
        [JsonProperty(PropertyName = "properties.actionId")]
        public int? ActionId { get; set; }

        /// <summary>
        /// Gets or sets recommendation action creation time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdTime")]
        public System.DateTime? CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets recommendation action expiration time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.expirationTime")]
        public System.DateTime? ExpirationTime { get; set; }

        /// <summary>
        /// Gets or sets recommendation action reason.
        /// </summary>
        [JsonProperty(PropertyName = "properties.reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Gets or sets recommendation action type.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recommendationType")]
        public string RecommendationType { get; set; }

        /// <summary>
        /// Gets or sets recommendation action details.
        /// </summary>
        [JsonProperty(PropertyName = "properties.details")]
        public IDictionary<string, string> Details { get; set; }

    }
}
