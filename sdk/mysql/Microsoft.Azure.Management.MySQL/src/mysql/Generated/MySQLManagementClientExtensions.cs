// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.MySQL
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for MySQLManagementClient.
    /// </summary>
    public static partial class MySQLManagementClientExtensions
    {
            /// <summary>
            /// Create recommendation action session for the advisor.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='advisorName'>
            /// The advisor name for recommendation action.
            /// </param>
            /// <param name='databaseName'>
            /// The name of the database.
            /// </param>
            public static void CreateRecommendedActionSession(this IMySQLManagementClient operations, string resourceGroupName, string serverName, string advisorName, string databaseName)
            {
                operations.CreateRecommendedActionSessionAsync(resourceGroupName, serverName, advisorName, databaseName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create recommendation action session for the advisor.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='advisorName'>
            /// The advisor name for recommendation action.
            /// </param>
            /// <param name='databaseName'>
            /// The name of the database.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreateRecommendedActionSessionAsync(this IMySQLManagementClient operations, string resourceGroupName, string serverName, string advisorName, string databaseName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CreateRecommendedActionSessionWithHttpMessagesAsync(resourceGroupName, serverName, advisorName, databaseName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create recommendation action session for the advisor.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='advisorName'>
            /// The advisor name for recommendation action.
            /// </param>
            /// <param name='databaseName'>
            /// The name of the database.
            /// </param>
            public static void BeginCreateRecommendedActionSession(this IMySQLManagementClient operations, string resourceGroupName, string serverName, string advisorName, string databaseName)
            {
                operations.BeginCreateRecommendedActionSessionAsync(resourceGroupName, serverName, advisorName, databaseName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create recommendation action session for the advisor.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='serverName'>
            /// The name of the server.
            /// </param>
            /// <param name='advisorName'>
            /// The advisor name for recommendation action.
            /// </param>
            /// <param name='databaseName'>
            /// The name of the database.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginCreateRecommendedActionSessionAsync(this IMySQLManagementClient operations, string resourceGroupName, string serverName, string advisorName, string databaseName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginCreateRecommendedActionSessionWithHttpMessagesAsync(resourceGroupName, serverName, advisorName, databaseName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
