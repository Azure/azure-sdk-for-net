// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.PureStorageBlock.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.PureStorageBlock.Samples
{
    public partial class Sample_PureStorageReservationResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetResourceLimits_ReservationsGetResourceLimits()
        {
            // Generated from example definition: 2024-11-01-preview/Reservations_GetResourceLimits_MaximumSet_Gen.json
            // this example is just showing the usage of "Reservations_GetResourceLimits" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PureStorageReservationResource created on azure
            // for more information of creating PureStorageReservationResource, please refer to the document of PureStorageReservationResource
            string subscriptionId = "BC47D6CC-AA80-4374-86F8-19D94EC70666";
            string resourceGroupName = "rgpurestorage";
            string reservationName = "storagePoolname";
            ResourceIdentifier pureStorageReservationResourceId = PureStorageReservationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, reservationName);
            PureStorageReservationResource pureStorageReservation = client.GetPureStorageReservationResource(pureStorageReservationResourceId);

            // invoke the operation
            PureStorageResourceLimitDetails result = await pureStorageReservation.GetResourceLimitsAsync();

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetBillingStatus_ReservationsGetBillingStatusMaximumSet()
        {
            // Generated from example definition: 2024-11-01-preview/Reservations_GetBillingStatus_MaximumSet_Gen.json
            // this example is just showing the usage of "Reservations_GetBillingStatus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PureStorageReservationResource created on azure
            // for more information of creating PureStorageReservationResource, please refer to the document of PureStorageReservationResource
            string subscriptionId = "BC47D6CC-AA80-4374-86F8-19D94EC70666";
            string resourceGroupName = "rgpurestorage";
            string reservationName = "reservationname";
            ResourceIdentifier pureStorageReservationResourceId = PureStorageReservationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, reservationName);
            PureStorageReservationResource pureStorageReservation = client.GetPureStorageReservationResource(pureStorageReservationResourceId);

            // invoke the operation
            ReservationBillingStatus result = await pureStorageReservation.GetBillingStatusAsync();

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetBillingReport_ReservationsGetBillingReportMaximumSet()
        {
            // Generated from example definition: 2024-11-01-preview/Reservations_GetBillingReport_MaximumSet_Gen.json
            // this example is just showing the usage of "Reservations_GetBillingReport" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PureStorageReservationResource created on azure
            // for more information of creating PureStorageReservationResource, please refer to the document of PureStorageReservationResource
            string subscriptionId = "BC47D6CC-AA80-4374-86F8-19D94EC70666";
            string resourceGroupName = "rgpurestorage";
            string reservationName = "reservationname";
            ResourceIdentifier pureStorageReservationResourceId = PureStorageReservationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, reservationName);
            PureStorageReservationResource pureStorageReservation = client.GetPureStorageReservationResource(pureStorageReservationResourceId);

            // invoke the operation
            ReservationBillingUsageReport result = await pureStorageReservation.GetBillingReportAsync();

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
