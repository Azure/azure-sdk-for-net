// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.ClientModel.Primitives;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.PureStorageBlock
{
    internal class StoragePoolOperationSource : IOperationSource<StoragePoolResource>
    {
        private readonly ArmClient _client;

        internal StoragePoolOperationSource(ArmClient client)
        {
            _client = client;
        }

        StoragePoolResource IOperationSource<StoragePoolResource>.CreateResult(Response response, CancellationToken cancellationToken)
        {
            var data = ModelReaderWriter.Read<StoragePoolData>(response.Content);
            return new StoragePoolResource(_client, data);
        }

        async ValueTask<StoragePoolResource> IOperationSource<StoragePoolResource>.CreateResultAsync(Response response, CancellationToken cancellationToken)
        {
            var data = ModelReaderWriter.Read<StoragePoolData>(response.Content);
            return await Task.FromResult(new StoragePoolResource(_client, data)).ConfigureAwait(false);
        }
    }
}
