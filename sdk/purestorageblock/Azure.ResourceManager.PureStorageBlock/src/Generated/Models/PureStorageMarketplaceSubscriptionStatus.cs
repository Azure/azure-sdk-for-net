// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.PureStorageBlock.Models
{
    /// <summary> Marketplace subscription status. </summary>
    public readonly partial struct PureStorageMarketplaceSubscriptionStatus : IEquatable<PureStorageMarketplaceSubscriptionStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PureStorageMarketplaceSubscriptionStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PureStorageMarketplaceSubscriptionStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string PendingFulfillmentStartValue = "PendingFulfillmentStart";
        private const string SubscribedValue = "Subscribed";
        private const string SuspendedValue = "Suspended";
        private const string UnsubscribedValue = "Unsubscribed";

        /// <summary> Marketplace subscription purchased but not yet activated. </summary>
        public static PureStorageMarketplaceSubscriptionStatus PendingFulfillmentStart { get; } = new PureStorageMarketplaceSubscriptionStatus(PendingFulfillmentStartValue);
        /// <summary> Marketplace subscription activated. </summary>
        public static PureStorageMarketplaceSubscriptionStatus Subscribed { get; } = new PureStorageMarketplaceSubscriptionStatus(SubscribedValue);
        /// <summary> Marketplace subscription suspended due to missing customer payment. </summary>
        public static PureStorageMarketplaceSubscriptionStatus Suspended { get; } = new PureStorageMarketplaceSubscriptionStatus(SuspendedValue);
        /// <summary> Marketplace subscription cancelled. </summary>
        public static PureStorageMarketplaceSubscriptionStatus Unsubscribed { get; } = new PureStorageMarketplaceSubscriptionStatus(UnsubscribedValue);
        /// <summary> Determines if two <see cref="PureStorageMarketplaceSubscriptionStatus"/> values are the same. </summary>
        public static bool operator ==(PureStorageMarketplaceSubscriptionStatus left, PureStorageMarketplaceSubscriptionStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PureStorageMarketplaceSubscriptionStatus"/> values are not the same. </summary>
        public static bool operator !=(PureStorageMarketplaceSubscriptionStatus left, PureStorageMarketplaceSubscriptionStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="PureStorageMarketplaceSubscriptionStatus"/>. </summary>
        public static implicit operator PureStorageMarketplaceSubscriptionStatus(string value) => new PureStorageMarketplaceSubscriptionStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PureStorageMarketplaceSubscriptionStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PureStorageMarketplaceSubscriptionStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
