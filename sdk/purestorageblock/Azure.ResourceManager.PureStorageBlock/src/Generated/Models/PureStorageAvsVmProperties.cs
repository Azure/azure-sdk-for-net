// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.PureStorageBlock.Models
{
    /// <summary> AVS VM properties. </summary>
    public partial class PureStorageAvsVmProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="PureStorageAvsVmProperties"/>. </summary>
        internal PureStorageAvsVmProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="PureStorageAvsVmProperties"/>. </summary>
        /// <param name="storagePoolInternalId"> Pure Storage's internal ID for the storage pool. </param>
        /// <param name="storagePoolResourceId"> Azure resource ID of the storage pool. </param>
        /// <param name="displayName"> Human-readable name of the AVS VM. </param>
        /// <param name="createdOn"> Date at which the AVS VM was created, as an RFC 3339 timestamp. </param>
        /// <param name="softDeletion"> AVS VM's soft-deletion state. </param>
        /// <param name="volumeContainerType"> Specify which control plane handles the lifecycle of the volume container. </param>
        /// <param name="avs"> AVS VM details. </param>
        /// <param name="space"> Contains properties related to used Flash space. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PureStorageAvsVmProperties(string storagePoolInternalId, ResourceIdentifier storagePoolResourceId, string displayName, DateTimeOffset? createdOn, PureStorageSoftDeletionState softDeletion, PureStorageAvsVmVolumeContainerType? volumeContainerType, PureStorageAvsVmDetails avs, PureStorageSpaceUsage space, PureStorageResourceProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            StoragePoolInternalId = storagePoolInternalId;
            StoragePoolResourceId = storagePoolResourceId;
            DisplayName = displayName;
            CreatedOn = createdOn;
            SoftDeletion = softDeletion;
            VolumeContainerType = volumeContainerType;
            Avs = avs;
            Space = space;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Pure Storage's internal ID for the storage pool. </summary>
        public string StoragePoolInternalId { get; }
        /// <summary> Azure resource ID of the storage pool. </summary>
        public ResourceIdentifier StoragePoolResourceId { get; }
        /// <summary> Human-readable name of the AVS VM. </summary>
        public string DisplayName { get; }
        /// <summary> Date at which the AVS VM was created, as an RFC 3339 timestamp. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> AVS VM's soft-deletion state. </summary>
        public PureStorageSoftDeletionState SoftDeletion { get; }
        /// <summary> Specify which control plane handles the lifecycle of the volume container. </summary>
        public PureStorageAvsVmVolumeContainerType? VolumeContainerType { get; }
        /// <summary> AVS VM details. </summary>
        public PureStorageAvsVmDetails Avs { get; }
        /// <summary> Contains properties related to used Flash space. </summary>
        public PureStorageSpaceUsage Space { get; }
        /// <summary> Provisioning state of the resource. </summary>
        public PureStorageResourceProvisioningState? ProvisioningState { get; }
    }
}
