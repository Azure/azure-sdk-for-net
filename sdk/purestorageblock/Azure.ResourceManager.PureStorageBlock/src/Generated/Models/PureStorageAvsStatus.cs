// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.PureStorageBlock.Models
{
    /// <summary> Status of storage pool / AVS connection. </summary>
    public partial class PureStorageAvsStatus
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="PureStorageAvsStatus"/>. </summary>
        /// <param name="isAvsEnabled"> If true, an AVS connection has been successfully completed. </param>
        /// <param name="currentConnectionStatus"> Human-readable current AVS connection status. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="currentConnectionStatus"/> is null. </exception>
        internal PureStorageAvsStatus(bool isAvsEnabled, string currentConnectionStatus)
        {
            Argument.AssertNotNull(currentConnectionStatus, nameof(currentConnectionStatus));

            IsAvsEnabled = isAvsEnabled;
            CurrentConnectionStatus = currentConnectionStatus;
        }

        /// <summary> Initializes a new instance of <see cref="PureStorageAvsStatus"/>. </summary>
        /// <param name="isAvsEnabled"> If true, an AVS connection has been successfully completed. </param>
        /// <param name="currentConnectionStatus"> Human-readable current AVS connection status. </param>
        /// <param name="clusterResourceId"> Azure resource ID of the AVS SDDC the pool is connected to. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PureStorageAvsStatus(bool isAvsEnabled, string currentConnectionStatus, ResourceIdentifier clusterResourceId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            IsAvsEnabled = isAvsEnabled;
            CurrentConnectionStatus = currentConnectionStatus;
            ClusterResourceId = clusterResourceId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="PureStorageAvsStatus"/> for deserialization. </summary>
        internal PureStorageAvsStatus()
        {
        }

        /// <summary> If true, an AVS connection has been successfully completed. </summary>
        public bool IsAvsEnabled { get; }
        /// <summary> Human-readable current AVS connection status. </summary>
        public string CurrentConnectionStatus { get; }
        /// <summary> Azure resource ID of the AVS SDDC the pool is connected to. </summary>
        public ResourceIdentifier ClusterResourceId { get; }
    }
}
