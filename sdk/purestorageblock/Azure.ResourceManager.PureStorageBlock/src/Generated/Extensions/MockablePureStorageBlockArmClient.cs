// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;

namespace Azure.ResourceManager.PureStorageBlock.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockablePureStorageBlockArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockablePureStorageBlockArmClient"/> class for mocking. </summary>
        protected MockablePureStorageBlockArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockablePureStorageBlockArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockablePureStorageBlockArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockablePureStorageBlockArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="ReservationResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ReservationResource.CreateResourceIdentifier" /> to create a <see cref="ReservationResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ReservationResource"/> object. </returns>
        public virtual ReservationResource GetReservationResource(ResourceIdentifier id)
        {
            ReservationResource.ValidateResourceId(id);
            return new ReservationResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="StoragePoolResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="StoragePoolResource.CreateResourceIdentifier" /> to create a <see cref="StoragePoolResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="StoragePoolResource"/> object. </returns>
        public virtual StoragePoolResource GetStoragePoolResource(ResourceIdentifier id)
        {
            StoragePoolResource.ValidateResourceId(id);
            return new StoragePoolResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AvsStorageContainerResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AvsStorageContainerResource.CreateResourceIdentifier" /> to create an <see cref="AvsStorageContainerResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AvsStorageContainerResource"/> object. </returns>
        public virtual AvsStorageContainerResource GetAvsStorageContainerResource(ResourceIdentifier id)
        {
            AvsStorageContainerResource.ValidateResourceId(id);
            return new AvsStorageContainerResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AvsStorageContainerVolumeResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AvsStorageContainerVolumeResource.CreateResourceIdentifier" /> to create an <see cref="AvsStorageContainerVolumeResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AvsStorageContainerVolumeResource"/> object. </returns>
        public virtual AvsStorageContainerVolumeResource GetAvsStorageContainerVolumeResource(ResourceIdentifier id)
        {
            AvsStorageContainerVolumeResource.ValidateResourceId(id);
            return new AvsStorageContainerVolumeResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AvsVmResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AvsVmResource.CreateResourceIdentifier" /> to create an <see cref="AvsVmResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AvsVmResource"/> object. </returns>
        public virtual AvsVmResource GetAvsVmResource(ResourceIdentifier id)
        {
            AvsVmResource.ValidateResourceId(id);
            return new AvsVmResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AvsVmVolumeResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AvsVmVolumeResource.CreateResourceIdentifier" /> to create an <see cref="AvsVmVolumeResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AvsVmVolumeResource"/> object. </returns>
        public virtual AvsVmVolumeResource GetAvsVmVolumeResource(ResourceIdentifier id)
        {
            AvsVmVolumeResource.ValidateResourceId(id);
            return new AvsVmVolumeResource(Client, id);
        }
    }
}
