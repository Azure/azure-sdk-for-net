// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.EventHubs.Models
{
    /// <summary> Capture storage details for capture description. </summary>
    public partial class Destination
    {
        /// <summary> Initializes a new instance of Destination. </summary>
        public Destination()
        {
        }

        /// <summary> Initializes a new instance of Destination. </summary>
        /// <param name="name"> Name for capture destination. </param>
        /// <param name="storageAccountResourceId"> Resource id of the storage account to be used to create the blobs. </param>
        /// <param name="blobContainer"> Blob container Name. </param>
        /// <param name="archiveNameFormat"> Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order. </param>
        internal Destination(string name, string storageAccountResourceId, string blobContainer, string archiveNameFormat)
        {
            Name = name;
            StorageAccountResourceId = storageAccountResourceId;
            BlobContainer = blobContainer;
            ArchiveNameFormat = archiveNameFormat;
        }

        /// <summary> Name for capture destination. </summary>
        public string Name { get; set; }
        /// <summary> Resource id of the storage account to be used to create the blobs. </summary>
        public string StorageAccountResourceId { get; set; }
        /// <summary> Blob container Name. </summary>
        public string BlobContainer { get; set; }
        /// <summary> Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order. </summary>
        public string ArchiveNameFormat { get; set; }
    }
}
