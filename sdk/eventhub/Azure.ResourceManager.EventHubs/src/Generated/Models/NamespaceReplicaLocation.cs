// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.EventHubs.Models
{
    /// <summary> Namespace replication properties. </summary>
    public partial class NamespaceReplicaLocation
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NamespaceReplicaLocation"/>. </summary>
        public NamespaceReplicaLocation()
        {
        }

        /// <summary> Initializes a new instance of <see cref="NamespaceReplicaLocation"/>. </summary>
        /// <param name="locationName"> Azure regions where a replica of the namespace is maintained. </param>
        /// <param name="roleType"> GeoDR Role Types. </param>
        /// <param name="clusterArmId"> Optional property that denotes the ARM ID of the Cluster. This is required, if a namespace replica should be placed in a Dedicated Event Hub Cluster. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NamespaceReplicaLocation(string locationName, NamespaceGeoDRRoleType? roleType, ResourceIdentifier clusterArmId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            LocationName = locationName;
            RoleType = roleType;
            ClusterArmId = clusterArmId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Azure regions where a replica of the namespace is maintained. </summary>
        [WirePath("locationName")]
        public string LocationName { get; set; }
        /// <summary> GeoDR Role Types. </summary>
        [WirePath("roleType")]
        public NamespaceGeoDRRoleType? RoleType { get; set; }
        /// <summary> Optional property that denotes the ARM ID of the Cluster. This is required, if a namespace replica should be placed in a Dedicated Event Hub Cluster. </summary>
        [WirePath("clusterArmId")]
        public ResourceIdentifier ClusterArmId { get; set; }
    }
}
