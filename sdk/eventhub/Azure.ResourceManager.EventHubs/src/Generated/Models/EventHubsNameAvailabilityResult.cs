// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.EventHubs.Models
{
    /// <summary> The Result of the CheckNameAvailability operation. </summary>
    public partial class EventHubsNameAvailabilityResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="EventHubsNameAvailabilityResult"/>. </summary>
        internal EventHubsNameAvailabilityResult()
        {
        }

        /// <summary> Initializes a new instance of <see cref="EventHubsNameAvailabilityResult"/>. </summary>
        /// <param name="message"> The detailed info regarding the reason associated with the Namespace. </param>
        /// <param name="nameAvailable"> Value indicating Namespace is availability, true if the Namespace is available; otherwise, false. </param>
        /// <param name="reason"> The reason for unavailability of a Namespace. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal EventHubsNameAvailabilityResult(string message, bool? nameAvailable, EventHubsNameUnavailableReason? reason, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Message = message;
            NameAvailable = nameAvailable;
            Reason = reason;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The detailed info regarding the reason associated with the Namespace. </summary>
        public string Message { get; }
        /// <summary> Value indicating Namespace is availability, true if the Namespace is available; otherwise, false. </summary>
        public bool? NameAvailable { get; }
        /// <summary> The reason for unavailability of a Namespace. </summary>
        public EventHubsNameUnavailableReason? Reason { get; }
    }
}
