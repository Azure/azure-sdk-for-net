// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EventHubs.Models
{
    public partial class RetentionDescription : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(CleanupPolicy))
            {
                writer.WritePropertyName("cleanupPolicy"u8);
                writer.WriteStringValue(CleanupPolicy.Value.ToString());
            }
            if (Optional.IsDefined(RetentionTimeInHours))
            {
                writer.WritePropertyName("retentionTimeInHours"u8);
                writer.WriteNumberValue(RetentionTimeInHours.Value);
            }
            if (Optional.IsDefined(TombstoneRetentionTimeInHours))
            {
                writer.WritePropertyName("tombstoneRetentionTimeInHours"u8);
                writer.WriteNumberValue(TombstoneRetentionTimeInHours.Value);
            }
            writer.WriteEndObject();
        }

        internal static RetentionDescription DeserializeRetentionDescription(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<CleanupPolicyRetentionDescription> cleanupPolicy = default;
            Optional<long> retentionTimeInHours = default;
            Optional<int> tombstoneRetentionTimeInHours = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("cleanupPolicy"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    cleanupPolicy = new CleanupPolicyRetentionDescription(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("retentionTimeInHours"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    retentionTimeInHours = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("tombstoneRetentionTimeInHours"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    tombstoneRetentionTimeInHours = property.Value.GetInt32();
                    continue;
                }
            }
            return new RetentionDescription(Optional.ToNullable(cleanupPolicy), Optional.ToNullable(retentionTimeInHours), Optional.ToNullable(tombstoneRetentionTimeInHours));
        }
    }
}
