// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EventHubs.Models
{
    public partial class ArmDisasterRecovery : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(Type))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(ProvisioningState))
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState.Value.ToSerialString());
            }
            if (Optional.IsDefined(PartnerNamespace))
            {
                writer.WritePropertyName("partnerNamespace");
                writer.WriteStringValue(PartnerNamespace);
            }
            if (Optional.IsDefined(AlternateName))
            {
                writer.WritePropertyName("alternateName");
                writer.WriteStringValue(AlternateName);
            }
            if (Optional.IsDefined(Role))
            {
                writer.WritePropertyName("role");
                writer.WriteStringValue(Role.Value.ToSerialString());
            }
            if (Optional.IsDefined(PendingReplicationOperationsCount))
            {
                writer.WritePropertyName("pendingReplicationOperationsCount");
                writer.WriteNumberValue(PendingReplicationOperationsCount.Value);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static ArmDisasterRecovery DeserializeArmDisasterRecovery(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<ProvisioningStateDR> provisioningState = default;
            Optional<string> partnerNamespace = default;
            Optional<string> alternateName = default;
            Optional<RoleDisasterRecovery> role = default;
            Optional<long> pendingReplicationOperationsCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("provisioningState"))
                        {
                            provisioningState = property0.Value.GetString().ToProvisioningStateDR();
                            continue;
                        }
                        if (property0.NameEquals("partnerNamespace"))
                        {
                            partnerNamespace = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("alternateName"))
                        {
                            alternateName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("role"))
                        {
                            role = property0.Value.GetString().ToRoleDisasterRecovery();
                            continue;
                        }
                        if (property0.NameEquals("pendingReplicationOperationsCount"))
                        {
                            pendingReplicationOperationsCount = property0.Value.GetInt64();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new ArmDisasterRecovery(id.HasValue ? id.Value : null, name.HasValue ? name.Value : null, type.HasValue ? type.Value : null, provisioningState.HasValue ? provisioningState.Value : (ProvisioningStateDR?)null, partnerNamespace.HasValue ? partnerNamespace.Value : null, alternateName.HasValue ? alternateName.Value : null, role.HasValue ? role.Value : (RoleDisasterRecovery?)null, pendingReplicationOperationsCount.HasValue ? pendingReplicationOperationsCount.Value : (long?)null);
        }
    }
}
