// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.EventHubs.Models
{
    /// <summary> Single item in List or Get Consumer group operation. </summary>
    public partial class ConsumerGroup : Resource
    {
        /// <summary> Initializes a new instance of ConsumerGroup. </summary>
        public ConsumerGroup()
        {
        }

        /// <summary> Initializes a new instance of ConsumerGroup. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="createdAt"> Exact time the message was created. </param>
        /// <param name="updatedAt"> The exact time the message was updated. </param>
        /// <param name="userMetadata"> User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored. </param>
        internal ConsumerGroup(string id, string name, string type, DateTimeOffset? createdAt, DateTimeOffset? updatedAt, string userMetadata) : base(id, name, type)
        {
            CreatedAt = createdAt;
            UpdatedAt = updatedAt;
            UserMetadata = userMetadata;
        }

        /// <summary> Exact time the message was created. </summary>
        public DateTimeOffset? CreatedAt { get; }
        /// <summary> The exact time the message was updated. </summary>
        public DateTimeOffset? UpdatedAt { get; }
        /// <summary> User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored. </summary>
        public string UserMetadata { get; set; }
    }
}
