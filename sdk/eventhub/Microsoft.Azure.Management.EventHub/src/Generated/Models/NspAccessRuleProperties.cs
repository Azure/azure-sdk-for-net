// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventHub.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties of Access Rule
    /// </summary>
    public partial class NspAccessRuleProperties
    {
        /// <summary>
        /// Initializes a new instance of the NspAccessRuleProperties class.
        /// </summary>
        public NspAccessRuleProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NspAccessRuleProperties class.
        /// </summary>
        /// <param name="direction">Direction of Access Rule. Possible values
        /// include: 'Inbound', 'Outbound'</param>
        /// <param name="addressPrefixes">Address prefixes in the CIDR format
        /// for inbound rules</param>
        /// <param name="subscriptions">Subscriptions for inbound rules</param>
        /// <param name="networkSecurityPerimeters">NetworkSecurityPerimeters
        /// for inbound rules</param>
        /// <param name="fullyQualifiedDomainNames">FQDN for outbound
        /// rules</param>
        public NspAccessRuleProperties(string direction = default(string), IList<string> addressPrefixes = default(IList<string>), IList<NspAccessRulePropertiesSubscriptionsItem> subscriptions = default(IList<NspAccessRulePropertiesSubscriptionsItem>), IList<NetworkSecurityPerimeter> networkSecurityPerimeters = default(IList<NetworkSecurityPerimeter>), IList<string> fullyQualifiedDomainNames = default(IList<string>))
        {
            Direction = direction;
            AddressPrefixes = addressPrefixes;
            Subscriptions = subscriptions;
            NetworkSecurityPerimeters = networkSecurityPerimeters;
            FullyQualifiedDomainNames = fullyQualifiedDomainNames;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets direction of Access Rule. Possible values include:
        /// 'Inbound', 'Outbound'
        /// </summary>
        [JsonProperty(PropertyName = "direction")]
        public string Direction { get; set; }

        /// <summary>
        /// Gets or sets address prefixes in the CIDR format for inbound rules
        /// </summary>
        [JsonProperty(PropertyName = "addressPrefixes")]
        public IList<string> AddressPrefixes { get; set; }

        /// <summary>
        /// Gets or sets subscriptions for inbound rules
        /// </summary>
        [JsonProperty(PropertyName = "subscriptions")]
        public IList<NspAccessRulePropertiesSubscriptionsItem> Subscriptions { get; set; }

        /// <summary>
        /// Gets networkSecurityPerimeters for inbound rules
        /// </summary>
        [JsonProperty(PropertyName = "networkSecurityPerimeters")]
        public IList<NetworkSecurityPerimeter> NetworkSecurityPerimeters { get; private set; }

        /// <summary>
        /// Gets FQDN for outbound rules
        /// </summary>
        [JsonProperty(PropertyName = "fullyQualifiedDomainNames")]
        public IList<string> FullyQualifiedDomainNames { get; private set; }

    }
}
