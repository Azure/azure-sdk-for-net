// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventHub.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of the throttling policy
    /// </summary>
    public partial class ThrottlingPolicy : ApplicationGroupPolicy
    {
        /// <summary>
        /// Initializes a new instance of the ThrottlingPolicy class.
        /// </summary>
        public ThrottlingPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ThrottlingPolicy class.
        /// </summary>
        /// <param name="name">The Name of this policy</param>
        /// <param name="rateLimitThreshold">The Threshold limit above which
        /// the application group will be throttled.Rate limit is always per
        /// second.</param>
        /// <param name="metricId">Metric Id on which the throttle limit should
        /// be set, MetricId can be discovered by hovering over Metric in the
        /// Metrics section of Event Hub Namespace inside Azure Portal.
        /// Possible values include: 'IncomingBytes', 'OutgoingBytes',
        /// 'IncomingMessages', 'OutgoingMessages'</param>
        public ThrottlingPolicy(string name, long rateLimitThreshold, string metricId)
            : base(name)
        {
            RateLimitThreshold = rateLimitThreshold;
            MetricId = metricId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Threshold limit above which the application group
        /// will be throttled.Rate limit is always per second.
        /// </summary>
        [JsonProperty(PropertyName = "rateLimitThreshold")]
        public long RateLimitThreshold { get; set; }

        /// <summary>
        /// Gets or sets metric Id on which the throttle limit should be set,
        /// MetricId can be discovered by hovering over Metric in the Metrics
        /// section of Event Hub Namespace inside Azure Portal. Possible values
        /// include: 'IncomingBytes', 'OutgoingBytes', 'IncomingMessages',
        /// 'OutgoingMessages'
        /// </summary>
        [JsonProperty(PropertyName = "metricId")]
        public string MetricId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (MetricId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MetricId");
            }
        }
    }
}
