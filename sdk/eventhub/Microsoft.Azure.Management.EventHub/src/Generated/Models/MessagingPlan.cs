// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventHub.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Messaging Plan for the namespace
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class MessagingPlan : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the MessagingPlan class.
        /// </summary>
        public MessagingPlan()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MessagingPlan class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="location">Resource location</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="sku">Sku type</param>
        /// <param name="selectedEventHubUnit">Selected event hub unit</param>
        /// <param name="updatedAt">The exact time the messaging plan was
        /// updated.</param>
        /// <param name="revision">revision number</param>
        public MessagingPlan(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), int? sku = default(int?), int? selectedEventHubUnit = default(int?), System.DateTime? updatedAt = default(System.DateTime?), long? revision = default(long?))
            : base(id, name, type, location, tags)
        {
            Sku = sku;
            SelectedEventHubUnit = selectedEventHubUnit;
            UpdatedAt = updatedAt;
            Revision = revision;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets sku type
        /// </summary>
        [JsonProperty(PropertyName = "properties.sku")]
        public int? Sku { get; private set; }

        /// <summary>
        /// Gets selected event hub unit
        /// </summary>
        [JsonProperty(PropertyName = "properties.selectedEventHubUnit")]
        public int? SelectedEventHubUnit { get; private set; }

        /// <summary>
        /// Gets the exact time the messaging plan was updated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.updatedAt")]
        public System.DateTime? UpdatedAt { get; private set; }

        /// <summary>
        /// Gets revision number
        /// </summary>
        [JsonProperty(PropertyName = "properties.revision")]
        public long? Revision { get; private set; }

    }
}
