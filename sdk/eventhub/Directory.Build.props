<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!--
    Extend the criteria for identifying a samples project, to allow for the pattern:
    Azure.Messaging.EventHubs.Samples.[[ SCENARIO ]].  This is intended to support breaking
    the samples into self-contained executables.

    Because the common SDK build properties need this value in order to recognize the desired
    target frameworks and related, this needs to be set before the common properties import.
  -->
  <PropertyGroup Condition="$(MSBuildProjectName.StartsWith('Azure.')) and $(MSBuildProjectName.Contains('.Samples'))">
    <IsSamplesProject>true</IsSamplesProject>
    <IsTestSupportProject>true</IsTestSupportProject>
  </PropertyGroup>
  
  <!-- 
    OptOut of the global NUnit test timeout for all Event Hubs libraries.
    
    The approach that NUnit uses to measure timing for tests does not play well with parallel execution
    and highly asynchronous code.  Many of the Event Hubs tests run against non-deterministic background
    operations where timing is longer than normal unit tests and the exact timing is difficult to pin down.
    
    Tests currently use an environment variable with cancellation-based timeout control, which allows for
    more generous timeouts in the CI environments, where resources are often more constrained and 
    continuations take longer to be scheduled.    
  -->
  <PropertyGroup>
        <IsOptOutOfGlobalTestTimeout>true</IsOptOutOfGlobalTestTimeout>
  </PropertyGroup>

  <!-- Import the common SDK build properties. -->
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory).., Directory.Build.props))\Directory.Build.props" />

  <!--
    Force the language version in test projects to avoid overload resolution errors for
    NUnit assertsions in the RC version of the compiler.  This should be fixed with the RC2
    release of the .NET 6 SDK.  (see: https://github.com/dotnet/roslyn/issues/56167)

    Because the common SDK build properties define this value and the intent is to override,
    this needs to be set after the common properties import.
  -->
  <PropertyGroup Condition="$(MSBuildProjectName.StartsWith('Azure.')) and $(MSBuildProjectName.EndsWith('.Tests'))">
    <LangVersion>9.0</LangVersion>
  </PropertyGroup>
</Project>
