// <auto-generated/>

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using Azure.ResourceManager.MigrationDiscoverySap;
using Azure.ResourceManager.MigrationDiscoverySap.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.MigrationDiscoverySap;

[ModelReaderWriterBuildable(typeof(SapDiscoveryServerInstanceData))]
[ModelReaderWriterBuildable(typeof(SapDiscoveryServerInstanceResource))]
[ModelReaderWriterBuildable(typeof(SapDiscoverySiteData))]
[ModelReaderWriterBuildable(typeof(SapDiscoverySiteResource))]
[ModelReaderWriterBuildable(typeof(SapInstanceData))]
[ModelReaderWriterBuildable(typeof(SapInstanceResource))]
[ModelReaderWriterBuildable(typeof(ConfigurationDetail))]
[ModelReaderWriterBuildable(typeof(ExcelPerformanceDetail))]
[ModelReaderWriterBuildable(typeof(NativePerformanceDetail))]
[ModelReaderWriterBuildable(typeof(PerformanceDetail))]
[ModelReaderWriterBuildable(typeof(SapDiscoveryErrorDetail))]
[ModelReaderWriterBuildable(typeof(SapDiscoveryExtendedLocation))]
[ModelReaderWriterBuildable(typeof(SapDiscoveryServerInstancePatch))]
[ModelReaderWriterBuildable(typeof(SapDiscoverySiteListResult))]
[ModelReaderWriterBuildable(typeof(SapDiscoverySitePatch))]
[ModelReaderWriterBuildable(typeof(SapInstanceListResult))]
[ModelReaderWriterBuildable(typeof(SapInstancePatch))]
[ModelReaderWriterBuildable(typeof(SapMigrateError))]
[ModelReaderWriterBuildable(typeof(ServerInstanceListResult))]
[ModelReaderWriterBuildable(typeof(ServerInstanceProperties))]
[ModelReaderWriterBuildable(typeof(UnknownPerformanceData))]
public partial class AzureResourceManagerMigrationDiscoverySapContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(OperationStatusResult), () => ArmContext.GetTypeBuilder(typeof(OperationStatusResult)));
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
    }
}
