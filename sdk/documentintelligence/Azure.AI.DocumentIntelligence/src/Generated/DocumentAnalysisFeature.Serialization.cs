// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.DocumentIntelligence
{
    internal static partial class DocumentAnalysisFeatureExtensions
    {
        public static string ToSerialString(this DocumentAnalysisFeature value) => value switch
        {
            DocumentAnalysisFeature.OcrHighResolution => "ocrHighResolution",
            DocumentAnalysisFeature.Languages => "languages",
            DocumentAnalysisFeature.Barcodes => "barcodes",
            DocumentAnalysisFeature.Formulas => "formulas",
            DocumentAnalysisFeature.KeyValuePairs => "keyValuePairs",
            DocumentAnalysisFeature.StyleFont => "styleFont",
            DocumentAnalysisFeature.QueryFields => "queryFields",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DocumentAnalysisFeature value.")
        };

        public static DocumentAnalysisFeature ToDocumentAnalysisFeature(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "ocrHighResolution")) return DocumentAnalysisFeature.OcrHighResolution;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "languages")) return DocumentAnalysisFeature.Languages;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "barcodes")) return DocumentAnalysisFeature.Barcodes;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "formulas")) return DocumentAnalysisFeature.Formulas;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "keyValuePairs")) return DocumentAnalysisFeature.KeyValuePairs;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "styleFont")) return DocumentAnalysisFeature.StyleFont;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "queryFields")) return DocumentAnalysisFeature.QueryFields;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DocumentAnalysisFeature value.");
        }
    }
}
