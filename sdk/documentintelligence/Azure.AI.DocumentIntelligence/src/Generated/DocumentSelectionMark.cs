// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.DocumentIntelligence
{
    /// <summary>
    /// A selection mark object representing check boxes, radio buttons, and other
    /// elements indicating a selection.
    /// </summary>
    public partial class DocumentSelectionMark
    {
        /// <summary> Initializes a new instance of <see cref="DocumentSelectionMark"/>. </summary>
        /// <param name="state"> State of the selection mark. </param>
        /// <param name="span"> Location of the selection mark in the reading order concatenated content. </param>
        /// <param name="confidence"> Confidence of correctly extracting the selection mark. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="span"/> is null. </exception>
        internal DocumentSelectionMark(DocumentSelectionMarkState state, DocumentSpan span, float confidence)
        {
            Argument.AssertNotNull(span, nameof(span));

            State = state;
            Polygon = new ChangeTrackingList<float>();
            Span = span;
            Confidence = confidence;
        }

        /// <summary> Initializes a new instance of <see cref="DocumentSelectionMark"/>. </summary>
        /// <param name="state"> State of the selection mark. </param>
        /// <param name="polygon">
        /// Bounding polygon of the selection mark, with coordinates specified relative
        /// to the top-left of the page. The numbers represent the x, y values of the
        /// polygon vertices, clockwise from the left (-180 degrees inclusive) relative
        /// to the element orientation.
        /// </param>
        /// <param name="span"> Location of the selection mark in the reading order concatenated content. </param>
        /// <param name="confidence"> Confidence of correctly extracting the selection mark. </param>
        internal DocumentSelectionMark(DocumentSelectionMarkState state, IReadOnlyList<float> polygon, DocumentSpan span, float confidence)
        {
            State = state;
            Polygon = polygon;
            Span = span;
            Confidence = confidence;
        }

        /// <summary> State of the selection mark. </summary>
        public DocumentSelectionMarkState State { get; }
        /// <summary>
        /// Bounding polygon of the selection mark, with coordinates specified relative
        /// to the top-left of the page. The numbers represent the x, y values of the
        /// polygon vertices, clockwise from the left (-180 degrees inclusive) relative
        /// to the element orientation.
        /// </summary>
        public IReadOnlyList<float> Polygon { get; }
        /// <summary> Location of the selection mark in the reading order concatenated content. </summary>
        public DocumentSpan Span { get; }
        /// <summary> Confidence of correctly extracting the selection mark. </summary>
        public float Confidence { get; }
    }
}
