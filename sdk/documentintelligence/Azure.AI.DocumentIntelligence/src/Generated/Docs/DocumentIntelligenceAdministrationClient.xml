<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="AuthorizeModelCopyAsync(AuthorizeCopyContent,CancellationToken)">
      <example>
This sample shows how to call AuthorizeModelCopyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

AuthorizeCopyContent authorizeCopyRequest = new AuthorizeCopyContent("targetModel")
{
    Description = "Target model description",
};
Response<CopyAuthorization> response = await client.AuthorizeModelCopyAsync(authorizeCopyRequest);
]]></code></example>
    </member>
    <member name="AuthorizeModelCopy(AuthorizeCopyContent,CancellationToken)">
      <example>
This sample shows how to call AuthorizeModelCopy.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

AuthorizeCopyContent authorizeCopyRequest = new AuthorizeCopyContent("targetModel")
{
    Description = "Target model description",
};
Response<CopyAuthorization> response = client.AuthorizeModelCopy(authorizeCopyRequest);
]]></code></example>
    </member>
    <member name="AuthorizeModelCopyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call AuthorizeModelCopyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    modelId = "targetModel",
    description = "Target model description",
});
Response response = await client.AuthorizeModelCopyAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("targetResourceId").ToString());
Console.WriteLine(result.GetProperty("targetResourceRegion").ToString());
Console.WriteLine(result.GetProperty("targetModelId").ToString());
Console.WriteLine(result.GetProperty("targetModelLocation").ToString());
Console.WriteLine(result.GetProperty("accessToken").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
]]></code></example>
    </member>
    <member name="AuthorizeModelCopy(RequestContent,RequestContext)">
      <example>
This sample shows how to call AuthorizeModelCopy and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    modelId = "targetModel",
    description = "Target model description",
});
Response response = client.AuthorizeModelCopy(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("targetResourceId").ToString());
Console.WriteLine(result.GetProperty("targetResourceRegion").ToString());
Console.WriteLine(result.GetProperty("targetModelId").ToString());
Console.WriteLine(result.GetProperty("targetModelLocation").ToString());
Console.WriteLine(result.GetProperty("accessToken").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
]]></code></example>
    </member>
    <member name="GetModelAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetModelAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<DocumentModelDetails> response = await client.GetModelAsync("myCustomModel");
]]></code>
This sample shows how to call GetModelAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<DocumentModelDetails> response = await client.GetModelAsync("prebuilt-invoice");
]]></code></example>
    </member>
    <member name="GetModel(string,CancellationToken)">
      <example>
This sample shows how to call GetModel.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<DocumentModelDetails> response = client.GetModel("myCustomModel");
]]></code>
This sample shows how to call GetModel.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<DocumentModelDetails> response = client.GetModel("prebuilt-invoice");
]]></code></example>
    </member>
    <member name="GetModelAsync(string,RequestContext)">
      <example>
This sample shows how to call GetModelAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = await client.GetModelAsync("myCustomModel", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code>
This sample shows how to call GetModelAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = await client.GetModelAsync("prebuilt-invoice", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code></example>
    </member>
    <member name="GetModel(string,RequestContext)">
      <example>
This sample shows how to call GetModel and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = client.GetModel("myCustomModel", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code>
This sample shows how to call GetModel and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = client.GetModel("prebuilt-invoice", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code></example>
    </member>
    <member name="DeleteModelAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteModelAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = await client.DeleteModelAsync("myCustomModel");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteModel(string,RequestContext)">
      <example>
This sample shows how to call DeleteModel.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = client.DeleteModel("myCustomModel");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetResourceInfoAsync(CancellationToken)">
      <example>
This sample shows how to call GetResourceInfoAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<ResourceDetails> response = await client.GetResourceInfoAsync();
]]></code></example>
    </member>
    <member name="GetResourceInfo(CancellationToken)">
      <example>
This sample shows how to call GetResourceInfo.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<ResourceDetails> response = client.GetResourceInfo();
]]></code></example>
    </member>
    <member name="GetResourceInfoAsync(RequestContext)">
      <example>
This sample shows how to call GetResourceInfoAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = await client.GetResourceInfoAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("customDocumentModels").GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("customDocumentModels").GetProperty("limit").ToString());
]]></code></example>
    </member>
    <member name="GetResourceInfo(RequestContext)">
      <example>
This sample shows how to call GetResourceInfo and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = client.GetResourceInfo(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("customDocumentModels").GetProperty("count").ToString());
Console.WriteLine(result.GetProperty("customDocumentModels").GetProperty("limit").ToString());
]]></code></example>
    </member>
    <member name="GetOperationAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetOperationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<OperationDetails> response = await client.GetOperationAsync("b704bb00-d130-4f3f-a1d8-ca96de3eabb4");
]]></code></example>
    </member>
    <member name="GetOperation(string,CancellationToken)">
      <example>
This sample shows how to call GetOperation.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<OperationDetails> response = client.GetOperation("b704bb00-d130-4f3f-a1d8-ca96de3eabb4");
]]></code></example>
    </member>
    <member name="GetOperationAsync(string,RequestContext)">
      <example>
This sample shows how to call GetOperationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = await client.GetOperationAsync("b704bb00-d130-4f3f-a1d8-ca96de3eabb4", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("operationId").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("resourceLocation").ToString());
]]></code></example>
    </member>
    <member name="GetOperation(string,RequestContext)">
      <example>
This sample shows how to call GetOperation and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = client.GetOperation("b704bb00-d130-4f3f-a1d8-ca96de3eabb4", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("operationId").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("resourceLocation").ToString());
]]></code></example>
    </member>
    <member name="AuthorizeClassifierCopyAsync(AuthorizeClassifierCopyContent,CancellationToken)">
      <example>
This sample shows how to call AuthorizeClassifierCopyAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

AuthorizeClassifierCopyContent authorizeCopyRequest = new AuthorizeClassifierCopyContent("targetClassifier")
{
    Description = "Target classifier description",
};
Response<ClassifierCopyAuthorization> response = await client.AuthorizeClassifierCopyAsync(authorizeCopyRequest);
]]></code></example>
    </member>
    <member name="AuthorizeClassifierCopy(AuthorizeClassifierCopyContent,CancellationToken)">
      <example>
This sample shows how to call AuthorizeClassifierCopy.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

AuthorizeClassifierCopyContent authorizeCopyRequest = new AuthorizeClassifierCopyContent("targetClassifier")
{
    Description = "Target classifier description",
};
Response<ClassifierCopyAuthorization> response = client.AuthorizeClassifierCopy(authorizeCopyRequest);
]]></code></example>
    </member>
    <member name="AuthorizeClassifierCopyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call AuthorizeClassifierCopyAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    classifierId = "targetClassifier",
    description = "Target classifier description",
});
Response response = await client.AuthorizeClassifierCopyAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("targetResourceId").ToString());
Console.WriteLine(result.GetProperty("targetResourceRegion").ToString());
Console.WriteLine(result.GetProperty("targetClassifierId").ToString());
Console.WriteLine(result.GetProperty("targetClassifierLocation").ToString());
Console.WriteLine(result.GetProperty("accessToken").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
]]></code></example>
    </member>
    <member name="AuthorizeClassifierCopy(RequestContent,RequestContext)">
      <example>
This sample shows how to call AuthorizeClassifierCopy and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    classifierId = "targetClassifier",
    description = "Target classifier description",
});
Response response = client.AuthorizeClassifierCopy(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("targetResourceId").ToString());
Console.WriteLine(result.GetProperty("targetResourceRegion").ToString());
Console.WriteLine(result.GetProperty("targetClassifierId").ToString());
Console.WriteLine(result.GetProperty("targetClassifierLocation").ToString());
Console.WriteLine(result.GetProperty("accessToken").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
]]></code></example>
    </member>
    <member name="GetClassifierAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetClassifierAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<DocumentClassifierDetails> response = await client.GetClassifierAsync("myClassifier");
]]></code></example>
    </member>
    <member name="GetClassifier(string,CancellationToken)">
      <example>
This sample shows how to call GetClassifier.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response<DocumentClassifierDetails> response = client.GetClassifier("myClassifier");
]]></code></example>
    </member>
    <member name="GetClassifierAsync(string,RequestContext)">
      <example>
This sample shows how to call GetClassifierAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = await client.GetClassifierAsync("myClassifier", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("classifierId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("apiVersion").ToString());
Console.WriteLine(result.GetProperty("docTypes").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetClassifier(string,RequestContext)">
      <example>
This sample shows how to call GetClassifier and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = client.GetClassifier("myClassifier", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("classifierId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("apiVersion").ToString());
Console.WriteLine(result.GetProperty("docTypes").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="DeleteClassifierAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteClassifierAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = await client.DeleteClassifierAsync("myClassifier");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteClassifier(string,RequestContext)">
      <example>
This sample shows how to call DeleteClassifier.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

Response response = client.DeleteClassifier("myClassifier");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetModelsAsync(CancellationToken)">
      <example>
This sample shows how to call GetModelsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

await foreach (DocumentModelDetails item in client.GetModelsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetModels(CancellationToken)">
      <example>
This sample shows how to call GetModels.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

foreach (DocumentModelDetails item in client.GetModels())
{
}
]]></code></example>
    </member>
    <member name="GetModelsAsync(RequestContext)">
      <example>
This sample shows how to call GetModelsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

await foreach (BinaryData item in client.GetModelsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
}
]]></code></example>
    </member>
    <member name="GetModels(RequestContext)">
      <example>
This sample shows how to call GetModels and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

foreach (BinaryData item in client.GetModels(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
}
]]></code></example>
    </member>
    <member name="GetOperationsAsync(CancellationToken)">
      <example>
This sample shows how to call GetOperationsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

await foreach (OperationDetails item in client.GetOperationsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetOperations(CancellationToken)">
      <example>
This sample shows how to call GetOperations.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

foreach (OperationDetails item in client.GetOperations())
{
}
]]></code></example>
    </member>
    <member name="GetOperationsAsync(RequestContext)">
      <example>
This sample shows how to call GetOperationsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

await foreach (BinaryData item in client.GetOperationsAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("operationId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("resourceLocation").ToString());
}
]]></code></example>
    </member>
    <member name="GetOperations(RequestContext)">
      <example>
This sample shows how to call GetOperations and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

foreach (BinaryData item in client.GetOperations(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("operationId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("resourceLocation").ToString());
}
]]></code></example>
    </member>
    <member name="GetClassifiersAsync(CancellationToken)">
      <example>
This sample shows how to call GetClassifiersAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

await foreach (DocumentClassifierDetails item in client.GetClassifiersAsync())
{
}
]]></code></example>
    </member>
    <member name="GetClassifiers(CancellationToken)">
      <example>
This sample shows how to call GetClassifiers.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

foreach (DocumentClassifierDetails item in client.GetClassifiers())
{
}
]]></code></example>
    </member>
    <member name="GetClassifiersAsync(RequestContext)">
      <example>
This sample shows how to call GetClassifiersAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

await foreach (BinaryData item in client.GetClassifiersAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("classifierId").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("apiVersion").ToString());
    Console.WriteLine(result.GetProperty("docTypes").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="GetClassifiers(RequestContext)">
      <example>
This sample shows how to call GetClassifiers and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

foreach (BinaryData item in client.GetClassifiers(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("classifierId").ToString());
    Console.WriteLine(result.GetProperty("createdDateTime").ToString());
    Console.WriteLine(result.GetProperty("apiVersion").ToString());
    Console.WriteLine(result.GetProperty("docTypes").GetProperty("<key>").ToString());
}
]]></code></example>
    </member>
    <member name="BuildDocumentModelAsync(WaitUntil,BuildDocumentModelContent,CancellationToken)">
      <example>
This sample shows how to call BuildDocumentModelAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

BuildDocumentModelContent buildRequest = new BuildDocumentModelContent("myCustomModel", DocumentBuildMode.Template)
{
    Description = "Custom model description",
    AzureBlobSource = new AzureBlobContentSource(new Uri("https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken"))
    {
        Prefix = "trainingDocs/",
    },
    Tags =
    {
        ["createdBy"] = "myUserId"
    },
};
Operation<DocumentModelDetails> operation = await client.BuildDocumentModelAsync(WaitUntil.Completed, buildRequest);
DocumentModelDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="BuildDocumentModel(WaitUntil,BuildDocumentModelContent,CancellationToken)">
      <example>
This sample shows how to call BuildDocumentModel.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

BuildDocumentModelContent buildRequest = new BuildDocumentModelContent("myCustomModel", DocumentBuildMode.Template)
{
    Description = "Custom model description",
    AzureBlobSource = new AzureBlobContentSource(new Uri("https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken"))
    {
        Prefix = "trainingDocs/",
    },
    Tags =
    {
        ["createdBy"] = "myUserId"
    },
};
Operation<DocumentModelDetails> operation = client.BuildDocumentModel(WaitUntil.Completed, buildRequest);
DocumentModelDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="BuildDocumentModelAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call BuildDocumentModelAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    modelId = "myCustomModel",
    description = "Custom model description",
    buildMode = "template",
    azureBlobSource = new
    {
        containerUrl = "https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken",
        prefix = "trainingDocs/",
    },
    tags = new
    {
        createdBy = "myUserId",
    },
});
Operation<BinaryData> operation = await client.BuildDocumentModelAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code></example>
    </member>
    <member name="BuildDocumentModel(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call BuildDocumentModel and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    modelId = "myCustomModel",
    description = "Custom model description",
    buildMode = "template",
    azureBlobSource = new
    {
        containerUrl = "https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken",
        prefix = "trainingDocs/",
    },
    tags = new
    {
        createdBy = "myUserId",
    },
});
Operation<BinaryData> operation = client.BuildDocumentModel(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code></example>
    </member>
    <member name="ComposeModelAsync(WaitUntil,ComposeDocumentModelContent,CancellationToken)">
      <example>
This sample shows how to call ComposeModelAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

ComposeDocumentModelContent composeRequest = new ComposeDocumentModelContent("composedModel", "customClassifier", new Dictionary<string, DocumentTypeDetails>
{
    ["formA"] = new DocumentTypeDetails
    {
        ModelId = "model1",
    },
    ["formB"] = new DocumentTypeDetails
    {
        ModelId = "model2",
    }
})
{
    Description = "Composed model description",
};
Operation<DocumentModelDetails> operation = await client.ComposeModelAsync(WaitUntil.Completed, composeRequest);
DocumentModelDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="ComposeModel(WaitUntil,ComposeDocumentModelContent,CancellationToken)">
      <example>
This sample shows how to call ComposeModel.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

ComposeDocumentModelContent composeRequest = new ComposeDocumentModelContent("composedModel", "customClassifier", new Dictionary<string, DocumentTypeDetails>
{
    ["formA"] = new DocumentTypeDetails
    {
        ModelId = "model1",
    },
    ["formB"] = new DocumentTypeDetails
    {
        ModelId = "model2",
    }
})
{
    Description = "Composed model description",
};
Operation<DocumentModelDetails> operation = client.ComposeModel(WaitUntil.Completed, composeRequest);
DocumentModelDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="ComposeModelAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call ComposeModelAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    modelId = "composedModel",
    description = "Composed model description",
    classifierId = "customClassifier",
    docTypes = new
    {
        formA = new
        {
            modelId = "model1",
        },
        formB = new
        {
            modelId = "model2",
        },
    },
});
Operation<BinaryData> operation = await client.ComposeModelAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code></example>
    </member>
    <member name="ComposeModel(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call ComposeModel and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    modelId = "composedModel",
    description = "Composed model description",
    classifierId = "customClassifier",
    docTypes = new
    {
        formA = new
        {
            modelId = "model1",
        },
        formB = new
        {
            modelId = "model2",
        },
    },
});
Operation<BinaryData> operation = client.ComposeModel(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code></example>
    </member>
    <member name="CopyModelToAsync(WaitUntil,string,CopyAuthorization,CancellationToken)">
      <example>
This sample shows how to call CopyModelToAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

CopyAuthorization copyToRequest = new CopyAuthorization(
"/subscriptions/targetSub/resourceGroups/targetRG/providers/Microsoft.CognitiveServices/accounts/targetService",
"targetResourceRegion",
"targetModel",
new Uri("https://targetEndpoint.cognitiveservices.azure.com/documentintelligence/documentModels/targetModel"),
"accessToken",
DateTimeOffset.Parse("2021-09-23T09:12:54.552Z"));
Operation<DocumentModelDetails> operation = await client.CopyModelToAsync(WaitUntil.Completed, "sourceModel", copyToRequest);
DocumentModelDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CopyModelTo(WaitUntil,string,CopyAuthorization,CancellationToken)">
      <example>
This sample shows how to call CopyModelTo.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

CopyAuthorization copyToRequest = new CopyAuthorization(
"/subscriptions/targetSub/resourceGroups/targetRG/providers/Microsoft.CognitiveServices/accounts/targetService",
"targetResourceRegion",
"targetModel",
new Uri("https://targetEndpoint.cognitiveservices.azure.com/documentintelligence/documentModels/targetModel"),
"accessToken",
DateTimeOffset.Parse("2021-09-23T09:12:54.552Z"));
Operation<DocumentModelDetails> operation = client.CopyModelTo(WaitUntil.Completed, "sourceModel", copyToRequest);
DocumentModelDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CopyModelToAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CopyModelToAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    targetResourceId = "/subscriptions/targetSub/resourceGroups/targetRG/providers/Microsoft.CognitiveServices/accounts/targetService",
    targetResourceRegion = "targetResourceRegion",
    targetModelId = "targetModel",
    targetModelLocation = "https://targetEndpoint.cognitiveservices.azure.com/documentintelligence/documentModels/targetModel",
    accessToken = "accessToken",
    expirationDateTime = "2021-09-23T09:12:54.552Z",
});
Operation<BinaryData> operation = await client.CopyModelToAsync(WaitUntil.Completed, "sourceModel", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code></example>
    </member>
    <member name="CopyModelTo(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CopyModelTo and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    targetResourceId = "/subscriptions/targetSub/resourceGroups/targetRG/providers/Microsoft.CognitiveServices/accounts/targetService",
    targetResourceRegion = "targetResourceRegion",
    targetModelId = "targetModel",
    targetModelLocation = "https://targetEndpoint.cognitiveservices.azure.com/documentintelligence/documentModels/targetModel",
    accessToken = "accessToken",
    expirationDateTime = "2021-09-23T09:12:54.552Z",
});
Operation<BinaryData> operation = client.CopyModelTo(WaitUntil.Completed, "sourceModel", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
]]></code></example>
    </member>
    <member name="BuildClassifierAsync(WaitUntil,BuildDocumentClassifierContent,CancellationToken)">
      <example>
This sample shows how to call BuildClassifierAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

BuildDocumentClassifierContent buildRequest = new BuildDocumentClassifierContent("myClassifier", new Dictionary<string, ClassifierDocumentTypeDetails>
{
    ["formA"] = new ClassifierDocumentTypeDetails
    {
        AzureBlobSource = new AzureBlobContentSource(new Uri("https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken"))
        {
            Prefix = "formADocs/",
        },
    },
    ["formB"] = new ClassifierDocumentTypeDetails
    {
        AzureBlobFileListSource = new AzureBlobFileListContentSource(new Uri("https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken"), "formB.jsonl"),
    }
})
{
    Description = "Classifier description",
};
Operation<DocumentClassifierDetails> operation = await client.BuildClassifierAsync(WaitUntil.Completed, buildRequest);
DocumentClassifierDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="BuildClassifier(WaitUntil,BuildDocumentClassifierContent,CancellationToken)">
      <example>
This sample shows how to call BuildClassifier.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

BuildDocumentClassifierContent buildRequest = new BuildDocumentClassifierContent("myClassifier", new Dictionary<string, ClassifierDocumentTypeDetails>
{
    ["formA"] = new ClassifierDocumentTypeDetails
    {
        AzureBlobSource = new AzureBlobContentSource(new Uri("https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken"))
        {
            Prefix = "formADocs/",
        },
    },
    ["formB"] = new ClassifierDocumentTypeDetails
    {
        AzureBlobFileListSource = new AzureBlobFileListContentSource(new Uri("https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken"), "formB.jsonl"),
    }
})
{
    Description = "Classifier description",
};
Operation<DocumentClassifierDetails> operation = client.BuildClassifier(WaitUntil.Completed, buildRequest);
DocumentClassifierDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="BuildClassifierAsync(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call BuildClassifierAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    classifierId = "myClassifier",
    description = "Classifier description",
    docTypes = new
    {
        formA = new
        {
            azureBlobSource = new
            {
                containerUrl = "https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken",
                prefix = "formADocs/",
            },
        },
        formB = new
        {
            azureBlobFileListSource = new
            {
                containerUrl = "https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken",
                fileList = "formB.jsonl",
            },
        },
    },
});
Operation<BinaryData> operation = await client.BuildClassifierAsync(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("classifierId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("apiVersion").ToString());
Console.WriteLine(result.GetProperty("docTypes").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="BuildClassifier(WaitUntil,RequestContent,RequestContext)">
      <example>
This sample shows how to call BuildClassifier and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    classifierId = "myClassifier",
    description = "Classifier description",
    docTypes = new
    {
        formA = new
        {
            azureBlobSource = new
            {
                containerUrl = "https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken",
                prefix = "formADocs/",
            },
        },
        formB = new
        {
            azureBlobFileListSource = new
            {
                containerUrl = "https://myStorageAccount.blob.core.windows.net/myContainer?mySasToken",
                fileList = "formB.jsonl",
            },
        },
    },
});
Operation<BinaryData> operation = client.BuildClassifier(WaitUntil.Completed, content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("classifierId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("apiVersion").ToString());
Console.WriteLine(result.GetProperty("docTypes").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CopyClassifierToAsync(WaitUntil,string,ClassifierCopyAuthorization,CancellationToken)">
      <example>
This sample shows how to call CopyClassifierToAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

ClassifierCopyAuthorization copyToRequest = new ClassifierCopyAuthorization(
"/subscriptions/targetSub/resourceGroups/targetRG/providers/Microsoft.CognitiveServices/accounts/targetService",
"targetResourceRegion",
"targetClassifier",
new Uri("https://targetEndpoint.cognitiveservices.azure.com/documentintelligence/documentClassifiers/targetClassifier"),
"accessToken",
DateTimeOffset.Parse("2021-09-23T09:12:54.552Z"));
Operation<DocumentClassifierDetails> operation = await client.CopyClassifierToAsync(WaitUntil.Completed, "sourceClassifier", copyToRequest);
DocumentClassifierDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CopyClassifierTo(WaitUntil,string,ClassifierCopyAuthorization,CancellationToken)">
      <example>
This sample shows how to call CopyClassifierTo.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

ClassifierCopyAuthorization copyToRequest = new ClassifierCopyAuthorization(
"/subscriptions/targetSub/resourceGroups/targetRG/providers/Microsoft.CognitiveServices/accounts/targetService",
"targetResourceRegion",
"targetClassifier",
new Uri("https://targetEndpoint.cognitiveservices.azure.com/documentintelligence/documentClassifiers/targetClassifier"),
"accessToken",
DateTimeOffset.Parse("2021-09-23T09:12:54.552Z"));
Operation<DocumentClassifierDetails> operation = client.CopyClassifierTo(WaitUntil.Completed, "sourceClassifier", copyToRequest);
DocumentClassifierDetails responseData = operation.Value;
]]></code></example>
    </member>
    <member name="CopyClassifierToAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CopyClassifierToAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    targetResourceId = "/subscriptions/targetSub/resourceGroups/targetRG/providers/Microsoft.CognitiveServices/accounts/targetService",
    targetResourceRegion = "targetResourceRegion",
    targetClassifierId = "targetClassifier",
    targetClassifierLocation = "https://targetEndpoint.cognitiveservices.azure.com/documentintelligence/documentClassifiers/targetClassifier",
    accessToken = "accessToken",
    expirationDateTime = "2021-09-23T09:12:54.552Z",
});
Operation<BinaryData> operation = await client.CopyClassifierToAsync(WaitUntil.Completed, "sourceClassifier", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("classifierId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("apiVersion").ToString());
Console.WriteLine(result.GetProperty("docTypes").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="CopyClassifierTo(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CopyClassifierTo and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DocumentIntelligenceAdministrationClient client = new DocumentIntelligenceAdministrationClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    targetResourceId = "/subscriptions/targetSub/resourceGroups/targetRG/providers/Microsoft.CognitiveServices/accounts/targetService",
    targetResourceRegion = "targetResourceRegion",
    targetClassifierId = "targetClassifier",
    targetClassifierLocation = "https://targetEndpoint.cognitiveservices.azure.com/documentintelligence/documentClassifiers/targetClassifier",
    accessToken = "accessToken",
    expirationDateTime = "2021-09-23T09:12:54.552Z",
});
Operation<BinaryData> operation = client.CopyClassifierTo(WaitUntil.Completed, "sourceClassifier", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("classifierId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("apiVersion").ToString());
Console.WriteLine(result.GetProperty("docTypes").GetProperty("<key>").ToString());
]]></code></example>
    </member>
  </members>
</doc>