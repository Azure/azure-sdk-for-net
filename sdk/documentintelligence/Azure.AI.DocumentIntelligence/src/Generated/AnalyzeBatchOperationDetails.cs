// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.DocumentIntelligence
{
    /// <summary> Status and result of the analyze batch operation. </summary>
    public partial class AnalyzeBatchOperationDetails
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AnalyzeBatchOperationDetails"/>. </summary>
        /// <param name="status"> Operation status.  notStarted, running, succeeded, or failed. </param>
        /// <param name="createdOn"> Date and time (UTC) when the operation was submitted. </param>
        /// <param name="lastUpdatedOn"> Date and time (UTC) when the status was last updated. </param>
        internal AnalyzeBatchOperationDetails(DocumentIntelligenceOperationStatus status, DateTimeOffset createdOn, DateTimeOffset lastUpdatedOn)
        {
            Status = status;
            CreatedOn = createdOn;
            LastUpdatedOn = lastUpdatedOn;
        }

        /// <summary> Initializes a new instance of <see cref="AnalyzeBatchOperationDetails"/>. </summary>
        /// <param name="resultId"> Analyze batch operation result ID. </param>
        /// <param name="status"> Operation status.  notStarted, running, succeeded, or failed. </param>
        /// <param name="createdOn"> Date and time (UTC) when the operation was submitted. </param>
        /// <param name="lastUpdatedOn"> Date and time (UTC) when the status was last updated. </param>
        /// <param name="percentCompleted"> Operation progress (0-100). </param>
        /// <param name="error"> Encountered error during batch document analysis. </param>
        /// <param name="result"> Batch document analysis result. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AnalyzeBatchOperationDetails(string resultId, DocumentIntelligenceOperationStatus status, DateTimeOffset createdOn, DateTimeOffset lastUpdatedOn, int? percentCompleted, DocumentIntelligenceError error, AnalyzeBatchResult result, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ResultId = resultId;
            Status = status;
            CreatedOn = createdOn;
            LastUpdatedOn = lastUpdatedOn;
            PercentCompleted = percentCompleted;
            Error = error;
            Result = result;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AnalyzeBatchOperationDetails"/> for deserialization. </summary>
        internal AnalyzeBatchOperationDetails()
        {
        }
        /// <summary> Operation status.  notStarted, running, succeeded, or failed. </summary>
        public DocumentIntelligenceOperationStatus Status { get; }
        /// <summary> Date and time (UTC) when the operation was submitted. </summary>
        public DateTimeOffset CreatedOn { get; }
        /// <summary> Date and time (UTC) when the status was last updated. </summary>
        public DateTimeOffset LastUpdatedOn { get; }
        /// <summary> Operation progress (0-100). </summary>
        public int? PercentCompleted { get; }
        /// <summary> Encountered error during batch document analysis. </summary>
        public DocumentIntelligenceError Error { get; }
        /// <summary> Batch document analysis result. </summary>
        public AnalyzeBatchResult Result { get; }
    }
}
