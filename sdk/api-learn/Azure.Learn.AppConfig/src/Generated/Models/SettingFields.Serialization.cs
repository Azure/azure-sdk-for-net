// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Learn.AppConfig.Models
{
    internal static class SettingFieldsExtensions
    {
        public static string ToSerialString(this SettingFields value) => value switch
        {
            SettingFields.Key => "key",
            SettingFields.Label => "label",
            SettingFields.ContentType => "content_type",
            SettingFields.Value => "value",
            SettingFields.LastModified => "last_modified",
            SettingFields.Tags => "tags",
            SettingFields.Locked => "locked",
            SettingFields.Etag => "etag",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SettingFields value.")
        };

        public static SettingFields ToSettingFields(this string value)
        {
            if (string.Equals(value, "key", StringComparison.InvariantCultureIgnoreCase)) return SettingFields.Key;
            if (string.Equals(value, "label", StringComparison.InvariantCultureIgnoreCase)) return SettingFields.Label;
            if (string.Equals(value, "content_type", StringComparison.InvariantCultureIgnoreCase)) return SettingFields.ContentType;
            if (string.Equals(value, "value", StringComparison.InvariantCultureIgnoreCase)) return SettingFields.Value;
            if (string.Equals(value, "last_modified", StringComparison.InvariantCultureIgnoreCase)) return SettingFields.LastModified;
            if (string.Equals(value, "tags", StringComparison.InvariantCultureIgnoreCase)) return SettingFields.Tags;
            if (string.Equals(value, "locked", StringComparison.InvariantCultureIgnoreCase)) return SettingFields.Locked;
            if (string.Equals(value, "etag", StringComparison.InvariantCultureIgnoreCase)) return SettingFields.Etag;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SettingFields value.");
        }
    }
}
