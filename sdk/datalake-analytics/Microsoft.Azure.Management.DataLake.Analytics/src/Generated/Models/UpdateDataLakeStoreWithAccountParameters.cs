// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The parameters used to update a Data Lake Store account while updating
    /// a Data Lake Analytics account.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class UpdateDataLakeStoreWithAccountParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// UpdateDataLakeStoreWithAccountParameters class.
        /// </summary>
        public UpdateDataLakeStoreWithAccountParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// UpdateDataLakeStoreWithAccountParameters class.
        /// </summary>
        /// <param name="name">The unique name of the Data Lake Store account
        /// to update.</param>
        /// <param name="suffix">The optional suffix for the Data Lake Store
        /// account.</param>
        public UpdateDataLakeStoreWithAccountParameters(string name, string suffix = default(string))
        {
            Name = name;
            Suffix = suffix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique name of the Data Lake Store account to
        /// update.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the optional suffix for the Data Lake Store account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.suffix")]
        public string Suffix { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
