// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataLakeAnalytics.Models
{
    public partial class DataLakeAnalyticsCapabilityInformation
    {
        internal static DataLakeAnalyticsCapabilityInformation DeserializeDataLakeAnalyticsCapabilityInformation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<Guid> subscriptionId = default;
            Core.Optional<DataLakeAnalyticsSubscriptionState> state = default;
            Core.Optional<int> maxAccountCount = default;
            Core.Optional<int> accountCount = default;
            Core.Optional<bool> migrationState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("subscriptionId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    subscriptionId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("state"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    state = new DataLakeAnalyticsSubscriptionState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("maxAccountCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxAccountCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("accountCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    accountCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("migrationState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    migrationState = property.Value.GetBoolean();
                    continue;
                }
            }
            return new DataLakeAnalyticsCapabilityInformation(Core.Optional.ToNullable(subscriptionId), Core.Optional.ToNullable(state), Core.Optional.ToNullable(maxAccountCount), Core.Optional.ToNullable(accountCount), Core.Optional.ToNullable(migrationState));
        }
    }
}
