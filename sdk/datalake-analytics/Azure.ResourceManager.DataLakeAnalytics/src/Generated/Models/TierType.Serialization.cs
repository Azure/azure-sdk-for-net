// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataLakeAnalytics.Models
{
    internal static partial class TierTypeExtensions
    {
        public static string ToSerialString(this TierType value) => value switch
        {
            TierType.Consumption => "Consumption",
            TierType.Commitment100AUHours => "Commitment_100AUHours",
            TierType.Commitment500AUHours => "Commitment_500AUHours",
            TierType.Commitment1000AUHours => "Commitment_1000AUHours",
            TierType.Commitment5000AUHours => "Commitment_5000AUHours",
            TierType.Commitment10000AUHours => "Commitment_10000AUHours",
            TierType.Commitment50000AUHours => "Commitment_50000AUHours",
            TierType.Commitment100000AUHours => "Commitment_100000AUHours",
            TierType.Commitment500000AUHours => "Commitment_500000AUHours",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TierType value.")
        };

        public static TierType ToTierType(this string value)
        {
            if (string.Equals(value, "Consumption", StringComparison.InvariantCultureIgnoreCase)) return TierType.Consumption;
            if (string.Equals(value, "Commitment_100AUHours", StringComparison.InvariantCultureIgnoreCase)) return TierType.Commitment100AUHours;
            if (string.Equals(value, "Commitment_500AUHours", StringComparison.InvariantCultureIgnoreCase)) return TierType.Commitment500AUHours;
            if (string.Equals(value, "Commitment_1000AUHours", StringComparison.InvariantCultureIgnoreCase)) return TierType.Commitment1000AUHours;
            if (string.Equals(value, "Commitment_5000AUHours", StringComparison.InvariantCultureIgnoreCase)) return TierType.Commitment5000AUHours;
            if (string.Equals(value, "Commitment_10000AUHours", StringComparison.InvariantCultureIgnoreCase)) return TierType.Commitment10000AUHours;
            if (string.Equals(value, "Commitment_50000AUHours", StringComparison.InvariantCultureIgnoreCase)) return TierType.Commitment50000AUHours;
            if (string.Equals(value, "Commitment_100000AUHours", StringComparison.InvariantCultureIgnoreCase)) return TierType.Commitment100000AUHours;
            if (string.Equals(value, "Commitment_500000AUHours", StringComparison.InvariantCultureIgnoreCase)) return TierType.Commitment500000AUHours;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TierType value.");
        }
    }
}
