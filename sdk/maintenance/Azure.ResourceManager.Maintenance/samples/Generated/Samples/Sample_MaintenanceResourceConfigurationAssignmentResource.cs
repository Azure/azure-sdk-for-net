// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Maintenance;
using Azure.ResourceManager.Maintenance.Models;

namespace Azure.ResourceManager.Maintenance.Samples
{
    public partial class Sample_MaintenanceResourceConfigurationAssignmentResource
    {
        // ConfigurationAssignments_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ConfigurationAssignmentsGet()
        {
            // Generated from example definition: specification/maintenance/resource-manager/Microsoft.Maintenance/stable/2023-04-01/examples/ConfigurationAssignments_Get.json
            // this example is just showing the usage of "ConfigurationAssignments_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MaintenanceResourceConfigurationAssignmentResource created on azure
            // for more information of creating MaintenanceResourceConfigurationAssignmentResource, please refer to the document of MaintenanceResourceConfigurationAssignmentResource
            string subscriptionId = "5b4b650e-28b9-4790-b3ab-ddbd88d727c4";
            string resourceGroupName = "examplerg";
            string providerName = "Microsoft.Compute";
            string resourceType = "virtualMachineScaleSets";
            string resourceName = "smdtest1";
            string configurationAssignmentName = "workervmConfiguration";
            ResourceIdentifier maintenanceResourceConfigurationAssignmentResourceId = MaintenanceResourceConfigurationAssignmentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, providerName, resourceType, resourceName, configurationAssignmentName);
            MaintenanceResourceConfigurationAssignmentResource maintenanceResourceConfigurationAssignment = client.GetMaintenanceResourceConfigurationAssignmentResource(maintenanceResourceConfigurationAssignmentResourceId);

            // invoke the operation
            MaintenanceResourceConfigurationAssignmentResource result = await maintenanceResourceConfigurationAssignment.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MaintenanceConfigurationAssignmentData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ConfigurationAssignments_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_ConfigurationAssignmentsCreateOrUpdate()
        {
            // Generated from example definition: specification/maintenance/resource-manager/Microsoft.Maintenance/stable/2023-04-01/examples/ConfigurationAssignments_CreateOrUpdate.json
            // this example is just showing the usage of "ConfigurationAssignments_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MaintenanceResourceConfigurationAssignmentResource created on azure
            // for more information of creating MaintenanceResourceConfigurationAssignmentResource, please refer to the document of MaintenanceResourceConfigurationAssignmentResource
            string subscriptionId = "5b4b650e-28b9-4790-b3ab-ddbd88d727c4";
            string resourceGroupName = "examplerg";
            string providerName = "Microsoft.Compute";
            string resourceType = "virtualMachineScaleSets";
            string resourceName = "smdtest1";
            string configurationAssignmentName = "workervmConfiguration";
            ResourceIdentifier maintenanceResourceConfigurationAssignmentResourceId = MaintenanceResourceConfigurationAssignmentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, providerName, resourceType, resourceName, configurationAssignmentName);
            MaintenanceResourceConfigurationAssignmentResource maintenanceResourceConfigurationAssignment = client.GetMaintenanceResourceConfigurationAssignmentResource(maintenanceResourceConfigurationAssignmentResourceId);

            // invoke the operation
            MaintenanceConfigurationAssignmentData data = new MaintenanceConfigurationAssignmentData()
            {
                MaintenanceConfigurationId = new ResourceIdentifier("/subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourcegroups/examplerg/providers/Microsoft.Maintenance/maintenanceConfigurations/configuration1"),
            };
            ArmOperation<MaintenanceResourceConfigurationAssignmentResource> lro = await maintenanceResourceConfigurationAssignment.UpdateAsync(WaitUntil.Completed, data);
            MaintenanceResourceConfigurationAssignmentResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MaintenanceConfigurationAssignmentData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ConfigurationAssignments_Delete
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_ConfigurationAssignmentsDelete()
        {
            // Generated from example definition: specification/maintenance/resource-manager/Microsoft.Maintenance/stable/2023-04-01/examples/ConfigurationAssignments_Delete.json
            // this example is just showing the usage of "ConfigurationAssignments_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MaintenanceResourceConfigurationAssignmentResource created on azure
            // for more information of creating MaintenanceResourceConfigurationAssignmentResource, please refer to the document of MaintenanceResourceConfigurationAssignmentResource
            string subscriptionId = "5b4b650e-28b9-4790-b3ab-ddbd88d727c4";
            string resourceGroupName = "examplerg";
            string providerName = "Microsoft.Compute";
            string resourceType = "virtualMachineScaleSets";
            string resourceName = "smdtest1";
            string configurationAssignmentName = "workervmConfiguration";
            ResourceIdentifier maintenanceResourceConfigurationAssignmentResourceId = MaintenanceResourceConfigurationAssignmentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, providerName, resourceType, resourceName, configurationAssignmentName);
            MaintenanceResourceConfigurationAssignmentResource maintenanceResourceConfigurationAssignment = client.GetMaintenanceResourceConfigurationAssignmentResource(maintenanceResourceConfigurationAssignmentResourceId);

            // invoke the operation
            ArmOperation<MaintenanceResourceConfigurationAssignmentResource> lro = await maintenanceResourceConfigurationAssignment.DeleteAsync(WaitUntil.Completed);
            MaintenanceResourceConfigurationAssignmentResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MaintenanceConfigurationAssignmentData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
