// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Maintenance.Models
{
    /// <summary> Input properties for patching a Windows machine. </summary>
    public partial class MaintenanceWindowsPatchSettings
    {
        /// <summary> Initializes a new instance of <see cref="MaintenanceWindowsPatchSettings"/>. </summary>
        public MaintenanceWindowsPatchSettings()
        {
            KbNumbersToExclude = new ChangeTrackingList<string>();
            KbNumbersToInclude = new ChangeTrackingList<string>();
            ClassificationsToInclude = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="MaintenanceWindowsPatchSettings"/>. </summary>
        /// <param name="kbNumbersToExclude"> Windows KBID to be excluded for patching. </param>
        /// <param name="kbNumbersToInclude"> Windows KBID to be included for patching. </param>
        /// <param name="classificationsToInclude"> Classification category of patches to be patched. </param>
        /// <param name="isExcludeKbsRebootRequired"> Exclude patches which need reboot. </param>
        internal MaintenanceWindowsPatchSettings(IList<string> kbNumbersToExclude, IList<string> kbNumbersToInclude, IList<string> classificationsToInclude, bool? isExcludeKbsRebootRequired)
        {
            KbNumbersToExclude = kbNumbersToExclude;
            KbNumbersToInclude = kbNumbersToInclude;
            ClassificationsToInclude = classificationsToInclude;
            IsExcludeKbsRebootRequired = isExcludeKbsRebootRequired;
        }

        /// <summary> Windows KBID to be excluded for patching. </summary>
        public IList<string> KbNumbersToExclude { get; }
        /// <summary> Windows KBID to be included for patching. </summary>
        public IList<string> KbNumbersToInclude { get; }
        /// <summary> Classification category of patches to be patched. </summary>
        public IList<string> ClassificationsToInclude { get; }
        /// <summary> Exclude patches which need reboot. </summary>
        public bool? IsExcludeKbsRebootRequired { get; set; }
    }
}
