// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Maintenance.Models
{
    /// <summary> Input configuration for a patch run. </summary>
    public partial class InputPatchConfiguration
    {
        /// <summary> Initializes a new instance of InputPatchConfiguration. </summary>
        public InputPatchConfiguration()
        {
            PreTasks = new ChangeTrackingList<TaskProperties>();
            PostTasks = new ChangeTrackingList<TaskProperties>();
        }

        /// <summary> Initializes a new instance of InputPatchConfiguration. </summary>
        /// <param name="rebootSetting"> Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed. </param>
        /// <param name="windowsParameters"> Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property. </param>
        /// <param name="linuxParameters"> Input parameters specific to patching Linux machine. For Windows machines, do not pass this property. </param>
        /// <param name="preTasks"> List of pre tasks. e.g. [{&apos;source&apos; :&apos;runbook&apos;, &apos;taskScope&apos;: &apos;Global&apos;, &apos;parameters&apos;: { &apos;arg1&apos;: &apos;value1&apos;}}]. </param>
        /// <param name="postTasks"> List of post tasks. e.g. [{&apos;source&apos; :&apos;runbook&apos;, &apos;taskScope&apos;: &apos;Resource&apos;, &apos;parameters&apos;: { &apos;arg1&apos;: &apos;value1&apos;}}]. </param>
        internal InputPatchConfiguration(RebootOption? rebootSetting, InputWindowsParameters windowsParameters, InputLinuxParameters linuxParameters, IList<TaskProperties> preTasks, IList<TaskProperties> postTasks)
        {
            RebootSetting = rebootSetting;
            WindowsParameters = windowsParameters;
            LinuxParameters = linuxParameters;
            PreTasks = preTasks;
            PostTasks = postTasks;
        }

        /// <summary> Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed. </summary>
        public RebootOption? RebootSetting { get; set; }
        /// <summary> Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property. </summary>
        public InputWindowsParameters WindowsParameters { get; set; }
        /// <summary> Input parameters specific to patching Linux machine. For Windows machines, do not pass this property. </summary>
        public InputLinuxParameters LinuxParameters { get; set; }
        /// <summary> List of pre tasks. e.g. [{&apos;source&apos; :&apos;runbook&apos;, &apos;taskScope&apos;: &apos;Global&apos;, &apos;parameters&apos;: { &apos;arg1&apos;: &apos;value1&apos;}}]. </summary>
        public IList<TaskProperties> PreTasks { get; }
        /// <summary> List of post tasks. e.g. [{&apos;source&apos; :&apos;runbook&apos;, &apos;taskScope&apos;: &apos;Resource&apos;, &apos;parameters&apos;: { &apos;arg1&apos;: &apos;value1&apos;}}]. </summary>
        public IList<TaskProperties> PostTasks { get; }
    }
}
