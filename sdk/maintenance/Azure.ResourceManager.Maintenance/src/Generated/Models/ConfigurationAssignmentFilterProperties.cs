// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Maintenance.Models
{
    /// <summary> Azure query for the update configuration. </summary>
    public partial class ConfigurationAssignmentFilterProperties
    {
        /// <summary> Initializes a new instance of ConfigurationAssignmentFilterProperties. </summary>
        public ConfigurationAssignmentFilterProperties()
        {
            ResourceTypes = new ChangeTrackingList<string>();
            ResourceGroups = new ChangeTrackingList<string>();
            OSTypes = new ChangeTrackingList<string>();
            Locations = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of ConfigurationAssignmentFilterProperties. </summary>
        /// <param name="resourceTypes"> List of allowed resources. </param>
        /// <param name="resourceGroups"> List of allowed resource groups. </param>
        /// <param name="osTypes"> List of allowed operating systems. </param>
        /// <param name="locations"> List of locations to scope the query to. </param>
        /// <param name="tagSettings"> Tag settings for the VM. </param>
        internal ConfigurationAssignmentFilterProperties(IList<string> resourceTypes, IList<string> resourceGroups, IList<string> osTypes, IList<string> locations, TagSettingsProperties tagSettings)
        {
            ResourceTypes = resourceTypes;
            ResourceGroups = resourceGroups;
            OSTypes = osTypes;
            Locations = locations;
            TagSettings = tagSettings;
        }

        /// <summary> List of allowed resources. </summary>
        public IList<string> ResourceTypes { get; }
        /// <summary> List of allowed resource groups. </summary>
        public IList<string> ResourceGroups { get; }
        /// <summary> List of allowed operating systems. </summary>
        public IList<string> OSTypes { get; }
        /// <summary> List of locations to scope the query to. </summary>
        public IList<string> Locations { get; }
        /// <summary> Tag settings for the VM. </summary>
        public TagSettingsProperties TagSettings { get; set; }
    }
}
