// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Maintenance
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for MaintenanceConfigurationsOperations.
    /// </summary>
    public static partial class MaintenanceConfigurationsOperationsExtensions
    {
            /// <summary>
            /// Get Configuration record
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource Group Name
            /// </param>
            /// <param name='resourceName'>
            /// Maintenance Configuration Name
            /// </param>
            public static MaintenanceConfiguration Get(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName)
            {
                return operations.GetAsync(resourceGroupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Configuration record
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource Group Name
            /// </param>
            /// <param name='resourceName'>
            /// Maintenance Configuration Name
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MaintenanceConfiguration> GetAsync(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or Update configuration record
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource Group Name
            /// </param>
            /// <param name='resourceName'>
            /// Maintenance Configuration Name
            /// </param>
            /// <param name='configuration'>
            /// The configuration
            /// </param>
            public static MaintenanceConfiguration CreateOrUpdate(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, MaintenanceConfiguration configuration)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, resourceName, configuration).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or Update configuration record
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource Group Name
            /// </param>
            /// <param name='resourceName'>
            /// Maintenance Configuration Name
            /// </param>
            /// <param name='configuration'>
            /// The configuration
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MaintenanceConfiguration> CreateOrUpdateAsync(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, MaintenanceConfiguration configuration, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, resourceName, configuration, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete Configuration record
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource Group Name
            /// </param>
            /// <param name='resourceName'>
            /// Maintenance Configuration Name
            /// </param>
            public static MaintenanceConfiguration Delete(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName)
            {
                return operations.DeleteAsync(resourceGroupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Configuration record
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource Group Name
            /// </param>
            /// <param name='resourceName'>
            /// Maintenance Configuration Name
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MaintenanceConfiguration> DeleteAsync(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Patch configuration record
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource Group Name
            /// </param>
            /// <param name='resourceName'>
            /// Maintenance Configuration Name
            /// </param>
            /// <param name='configuration'>
            /// The configuration
            /// </param>
            public static MaintenanceConfiguration UpdateMethod(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, MaintenanceConfiguration configuration)
            {
                return operations.UpdateMethodAsync(resourceGroupName, resourceName, configuration).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Patch configuration record
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource Group Name
            /// </param>
            /// <param name='resourceName'>
            /// Maintenance Configuration Name
            /// </param>
            /// <param name='configuration'>
            /// The configuration
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MaintenanceConfiguration> UpdateMethodAsync(this IMaintenanceConfigurationsOperations operations, string resourceGroupName, string resourceName, MaintenanceConfiguration configuration, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateMethodWithHttpMessagesAsync(resourceGroupName, resourceName, configuration, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get Configuration records within a subscription
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IEnumerable<MaintenanceConfiguration> List(this IMaintenanceConfigurationsOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Configuration records within a subscription
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<MaintenanceConfiguration>> ListAsync(this IMaintenanceConfigurationsOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
