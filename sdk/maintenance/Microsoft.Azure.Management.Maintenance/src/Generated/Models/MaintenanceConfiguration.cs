// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Maintenance.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Maintenance configuration record type
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class MaintenanceConfiguration : Resource
    {
        /// <summary>
        /// Initializes a new instance of the MaintenanceConfiguration class.
        /// </summary>
        public MaintenanceConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MaintenanceConfiguration class.
        /// </summary>
        /// <param name="id">Fully qualified identifier of the resource</param>
        /// <param name="name">Name of the resource</param>
        /// <param name="type">Type of the resource</param>
        /// <param name="location">Gets or sets location of the
        /// resource</param>
        /// <param name="tags">Gets or sets tags of the resource</param>
        /// <param name="namespaceProperty">Gets or sets namespace of the
        /// resource e.g. Microsoft.Maintenance or Microsoft.Sql</param>
        /// <param name="extensionProperties">Gets or sets extensionProperties
        /// of the maintenanceConfiguration. This is for future use only and
        /// would be a set of key value pairs for additional information e.g.
        /// whether to follow SDP etc.</param>
        /// <param name="maintenanceScope">Gets or sets maintenanceScope of the
        /// configuration. It represent the impact area of the maintenance.
        /// Possible values include: 'All', 'Host', 'Resource',
        /// 'InResource'</param>
        public MaintenanceConfiguration(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string namespaceProperty = default(string), IDictionary<string, string> extensionProperties = default(IDictionary<string, string>), string maintenanceScope = default(string))
            : base(id, name, type)
        {
            Location = location;
            Tags = tags;
            NamespaceProperty = namespaceProperty;
            ExtensionProperties = extensionProperties;
            MaintenanceScope = maintenanceScope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets location of the resource
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets tags of the resource
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets namespace of the resource e.g. Microsoft.Maintenance
        /// or Microsoft.Sql
        /// </summary>
        [JsonProperty(PropertyName = "properties.namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets extensionProperties of the maintenanceConfiguration.
        /// This is for future use only and would be a set of key value pairs
        /// for additional information e.g. whether to follow SDP etc.
        /// </summary>
        [JsonProperty(PropertyName = "properties.extensionProperties")]
        public IDictionary<string, string> ExtensionProperties { get; set; }

        /// <summary>
        /// Gets or sets maintenanceScope of the configuration. It represent
        /// the impact area of the maintenance. Possible values include: 'All',
        /// 'Host', 'Resource', 'InResource'
        /// </summary>
        [JsonProperty(PropertyName = "properties.maintenanceScope")]
        public string MaintenanceScope { get; set; }

    }
}
