// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Maintenance.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Apply Update request
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ApplyUpdate : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ApplyUpdate class.
        /// </summary>
        public ApplyUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplyUpdate class.
        /// </summary>
        /// <param name="id">Fully qualified identifier of the resource</param>
        /// <param name="name">Name of the resource</param>
        /// <param name="type">Type of the resource</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="status">The status. Possible values include:
        /// 'Pending', 'InProgress', 'Completed', 'RetryNow',
        /// 'RetryLater'</param>
        /// <param name="resourceId">The resourceId</param>
        /// <param name="lastUpdateTime">Last Update time</param>
        public ApplyUpdate(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string status = default(string), string resourceId = default(string), System.DateTime? lastUpdateTime = default(System.DateTime?))
            : base(id, name, type, systemData)
        {
            Status = status;
            ResourceId = resourceId;
            LastUpdateTime = lastUpdateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the status. Possible values include: 'Pending',
        /// 'InProgress', 'Completed', 'RetryNow', 'RetryLater'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the resourceId
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets last Update time
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastUpdateTime")]
        public System.DateTime? LastUpdateTime { get; set; }

    }
}
