// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Maintenance.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Maintenance update on a resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Update
    {
        /// <summary>
        /// Initializes a new instance of the Update class.
        /// </summary>
        public Update()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Update class.
        /// </summary>
        /// <param name="maintenanceScope">The impact area. Possible values
        /// include: 'All', 'Host', 'Resource', 'InResource', 'OSImage',
        /// 'Extension', 'InGuestPatch', 'SQLDB', 'SQLManagedInstance'</param>
        /// <param name="impactType">The impact type. Possible values include:
        /// 'None', 'Freeze', 'Restart', 'Redeploy'</param>
        /// <param name="status">The status. Possible values include:
        /// 'Pending', 'InProgress', 'Completed', 'RetryNow',
        /// 'RetryLater'</param>
        /// <param name="impactDurationInSec">Duration of impact in
        /// seconds</param>
        /// <param name="notBefore">Time when Azure will start force updates if
        /// not self-updated by customer before this time</param>
        /// <param name="resourceId">The resourceId</param>
        public Update(string maintenanceScope = default(string), string impactType = default(string), string status = default(string), int? impactDurationInSec = default(int?), System.DateTime? notBefore = default(System.DateTime?), string resourceId = default(string))
        {
            MaintenanceScope = maintenanceScope;
            ImpactType = impactType;
            Status = status;
            ImpactDurationInSec = impactDurationInSec;
            NotBefore = notBefore;
            ResourceId = resourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the impact area. Possible values include: 'All',
        /// 'Host', 'Resource', 'InResource', 'OSImage', 'Extension',
        /// 'InGuestPatch', 'SQLDB', 'SQLManagedInstance'
        /// </summary>
        [JsonProperty(PropertyName = "maintenanceScope")]
        public string MaintenanceScope { get; set; }

        /// <summary>
        /// Gets or sets the impact type. Possible values include: 'None',
        /// 'Freeze', 'Restart', 'Redeploy'
        /// </summary>
        [JsonProperty(PropertyName = "impactType")]
        public string ImpactType { get; set; }

        /// <summary>
        /// Gets or sets the status. Possible values include: 'Pending',
        /// 'InProgress', 'Completed', 'RetryNow', 'RetryLater'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets duration of impact in seconds
        /// </summary>
        [JsonProperty(PropertyName = "impactDurationInSec")]
        public int? ImpactDurationInSec { get; set; }

        /// <summary>
        /// Gets or sets time when Azure will start force updates if not
        /// self-updated by customer before this time
        /// </summary>
        [JsonProperty(PropertyName = "notBefore")]
        public System.DateTime? NotBefore { get; set; }

        /// <summary>
        /// Gets or sets the resourceId
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceId")]
        public string ResourceId { get; set; }

    }
}
