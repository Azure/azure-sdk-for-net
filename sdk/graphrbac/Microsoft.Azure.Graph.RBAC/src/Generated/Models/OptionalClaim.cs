// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifying the claims to be included in a token.
    /// </summary>
    public partial class OptionalClaim
    {
        /// <summary>
        /// Initializes a new instance of the OptionalClaim class.
        /// </summary>
        public OptionalClaim()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OptionalClaim class.
        /// </summary>
        /// <param name="name">Claim name.</param>
        /// <param name="source">Claim source.</param>
        /// <param name="essential">Is this a required claim.</param>
        public OptionalClaim(string name = default(string), string source = default(string), bool? essential = default(bool?), object additionalProperties = default(object))
        {
            Name = name;
            Source = source;
            Essential = essential;
            AdditionalProperties = additionalProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets claim name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets claim source.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets is this a required claim.
        /// </summary>
        [JsonProperty(PropertyName = "essential")]
        public bool? Essential { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "additionalProperties")]
        public object AdditionalProperties { get; set; }

    }
}
