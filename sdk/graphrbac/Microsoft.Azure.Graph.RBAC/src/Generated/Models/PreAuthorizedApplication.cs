// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Contains information about pre authorized client application.
    /// </summary>
    public partial class PreAuthorizedApplication
    {
        /// <summary>
        /// Initializes a new instance of the PreAuthorizedApplication class.
        /// </summary>
        public PreAuthorizedApplication()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PreAuthorizedApplication class.
        /// </summary>
        /// <param name="appId">Represents the application id.</param>
        /// <param name="permissions">Collection of required app
        /// permissions/entitlements from the resource application.</param>
        /// <param name="extensions">Collection of extensions from the resource
        /// application.</param>
        public PreAuthorizedApplication(string appId = default(string), IList<PreAuthorizedApplicationPermission> permissions = default(IList<PreAuthorizedApplicationPermission>), IList<PreAuthorizedApplicationExtension> extensions = default(IList<PreAuthorizedApplicationExtension>))
        {
            AppId = appId;
            Permissions = permissions;
            Extensions = extensions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets represents the application id.
        /// </summary>
        [JsonProperty(PropertyName = "appId")]
        public string AppId { get; set; }

        /// <summary>
        /// Gets or sets collection of required app permissions/entitlements
        /// from the resource application.
        /// </summary>
        [JsonProperty(PropertyName = "permissions")]
        public IList<PreAuthorizedApplicationPermission> Permissions { get; set; }

        /// <summary>
        /// Gets or sets collection of extensions from the resource
        /// application.
        /// </summary>
        [JsonProperty(PropertyName = "extensions")]
        public IList<PreAuthorizedApplicationExtension> Extensions { get; set; }

    }
}
