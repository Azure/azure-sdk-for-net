// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Specifies an OAuth 2.0 permission scope or an app role that an
    /// application requires. The resourceAccess property of the
    /// RequiredResourceAccess type is a collection of ResourceAccess.
    /// </summary>
    public partial class ResourceAccess
    {
        /// <summary>
        /// Initializes a new instance of the ResourceAccess class.
        /// </summary>
        public ResourceAccess()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceAccess class.
        /// </summary>
        /// <param name="id">The unique identifier for one of the
        /// OAuth2Permission or AppRole instances that the resource application
        /// exposes.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="type">Specifies whether the id property references an
        /// OAuth2Permission or an AppRole. Possible values are "scope" or
        /// "role".</param>
        public ResourceAccess(string id, IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string type = default(string))
        {
            AdditionalProperties = additionalProperties;
            Id = id;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier for one of the OAuth2Permission
        /// or AppRole instances that the resource application exposes.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets specifies whether the id property references an
        /// OAuth2Permission or an AppRole. Possible values are "scope" or
        /// "role".
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
