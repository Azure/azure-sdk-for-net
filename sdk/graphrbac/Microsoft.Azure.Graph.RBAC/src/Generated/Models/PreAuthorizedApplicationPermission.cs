// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Contains information about the pre-authorized permissions.
    /// </summary>
    public partial class PreAuthorizedApplicationPermission
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PreAuthorizedApplicationPermission class.
        /// </summary>
        public PreAuthorizedApplicationPermission()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PreAuthorizedApplicationPermission class.
        /// </summary>
        /// <param name="directAccessGrant">Indicates whether the permission
        /// set is DirectAccess or impersonation.</param>
        /// <param name="accessGrants">The list of permissions.</param>
        public PreAuthorizedApplicationPermission(bool? directAccessGrant = default(bool?), IList<string> accessGrants = default(IList<string>))
        {
            DirectAccessGrant = directAccessGrant;
            AccessGrants = accessGrants;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets indicates whether the permission set is DirectAccess
        /// or impersonation.
        /// </summary>
        [JsonProperty(PropertyName = "directAccessGrant")]
        public bool? DirectAccessGrant { get; set; }

        /// <summary>
        /// Gets or sets the list of permissions.
        /// </summary>
        [JsonProperty(PropertyName = "accessGrants")]
        public IList<string> AccessGrants { get; set; }

    }
}
