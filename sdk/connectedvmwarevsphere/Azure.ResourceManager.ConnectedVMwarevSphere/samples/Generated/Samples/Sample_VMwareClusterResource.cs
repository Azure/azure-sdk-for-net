// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ConnectedVMwarevSphere.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ConnectedVMwarevSphere.Samples
{
    public partial class Sample_VMwareClusterResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetCluster()
        {
            // Generated from example definition: specification/connectedvmware/resource-manager/Microsoft.ConnectedVMwarevSphere/stable/2023-12-01/examples/GetCluster.json
            // this example is just showing the usage of "Clusters_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VMwareClusterResource created on azure
            // for more information of creating VMwareClusterResource, please refer to the document of VMwareClusterResource
            string subscriptionId = "fd3c3665-1729-4b7b-9a38-238e83b0f98b";
            string resourceGroupName = "testrg";
            string clusterName = "HRCluster";
            ResourceIdentifier vMwareClusterResourceId = VMwareClusterResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, clusterName);
            VMwareClusterResource vMwareCluster = client.GetVMwareClusterResource(vMwareClusterResourceId);

            // invoke the operation
            VMwareClusterResource result = await vMwareCluster.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            VMwareClusterData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteCluster()
        {
            // Generated from example definition: specification/connectedvmware/resource-manager/Microsoft.ConnectedVMwarevSphere/stable/2023-12-01/examples/DeleteCluster.json
            // this example is just showing the usage of "Clusters_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VMwareClusterResource created on azure
            // for more information of creating VMwareClusterResource, please refer to the document of VMwareClusterResource
            string subscriptionId = "fd3c3665-1729-4b7b-9a38-238e83b0f98b";
            string resourceGroupName = "testrg";
            string clusterName = "HRCluster";
            ResourceIdentifier vMwareClusterResourceId = VMwareClusterResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, clusterName);
            VMwareClusterResource vMwareCluster = client.GetVMwareClusterResource(vMwareClusterResourceId);

            // invoke the operation
            await vMwareCluster.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdateCluster()
        {
            // Generated from example definition: specification/connectedvmware/resource-manager/Microsoft.ConnectedVMwarevSphere/stable/2023-12-01/examples/UpdateCluster.json
            // this example is just showing the usage of "Clusters_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VMwareClusterResource created on azure
            // for more information of creating VMwareClusterResource, please refer to the document of VMwareClusterResource
            string subscriptionId = "fd3c3665-1729-4b7b-9a38-238e83b0f98b";
            string resourceGroupName = "testrg";
            string clusterName = "HRCluster";
            ResourceIdentifier vMwareClusterResourceId = VMwareClusterResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, clusterName);
            VMwareClusterResource vMwareCluster = client.GetVMwareClusterResource(vMwareClusterResourceId);

            // invoke the operation
            VMwareResourcePatchContent content = new VMwareResourcePatchContent
            {
                Tags =
{
["tag1"] = "value1",
["tag2"] = "value2"
},
            };
            VMwareClusterResource result = await vMwareCluster.UpdateAsync(content);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            VMwareClusterData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
