// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricManagedClusters.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a scaling mechanism for adding or removing instances of
    /// stateless service partition.
    /// </summary>
    [Newtonsoft.Json.JsonObject("ScalePartitionInstanceCount")]
    public partial class PartitionInstanceCountScaleMechanism : ScalingMechanism
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PartitionInstanceCountScaleMechanism class.
        /// </summary>
        public PartitionInstanceCountScaleMechanism()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PartitionInstanceCountScaleMechanism class.
        /// </summary>
        /// <param name="minInstanceCount">Minimum number of instances of the
        /// partition.</param>
        /// <param name="maxInstanceCount">Maximum number of instances of the
        /// partition.</param>
        /// <param name="scaleIncrement">The number of instances to add or
        /// remove during a scaling operation.</param>
        public PartitionInstanceCountScaleMechanism(int minInstanceCount, int maxInstanceCount, int scaleIncrement)
        {
            MinInstanceCount = minInstanceCount;
            MaxInstanceCount = maxInstanceCount;
            ScaleIncrement = scaleIncrement;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets minimum number of instances of the partition.
        /// </summary>
        [JsonProperty(PropertyName = "minInstanceCount")]
        public int MinInstanceCount { get; set; }

        /// <summary>
        /// Gets or sets maximum number of instances of the partition.
        /// </summary>
        [JsonProperty(PropertyName = "maxInstanceCount")]
        public int MaxInstanceCount { get; set; }

        /// <summary>
        /// Gets or sets the number of instances to add or remove during a
        /// scaling operation.
        /// </summary>
        [JsonProperty(PropertyName = "scaleIncrement")]
        public int ScaleIncrement { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
