// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricManagedClusters.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Creates a particular correlation between services.
    /// </summary>
    public partial class ServiceCorrelation
    {
        /// <summary>
        /// Initializes a new instance of the ServiceCorrelation class.
        /// </summary>
        public ServiceCorrelation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceCorrelation class.
        /// </summary>
        /// <param name="scheme">The ServiceCorrelationScheme which describes
        /// the relationship between this service and the service specified via
        /// ServiceName. Possible values include: 'AlignedAffinity',
        /// 'NonAlignedAffinity'</param>
        /// <param name="serviceName">The Arm Resource ID of the service that
        /// the correlation relationship is established with.</param>
        public ServiceCorrelation(string scheme, string serviceName)
        {
            Scheme = scheme;
            ServiceName = serviceName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ServiceCorrelationScheme which describes the
        /// relationship between this service and the service specified via
        /// ServiceName. Possible values include: 'AlignedAffinity',
        /// 'NonAlignedAffinity'
        /// </summary>
        [JsonProperty(PropertyName = "scheme")]
        public string Scheme { get; set; }

        /// <summary>
        /// Gets or sets the Arm Resource ID of the service that the
        /// correlation relationship is established with.
        /// </summary>
        [JsonProperty(PropertyName = "serviceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Scheme == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Scheme");
            }
            if (ServiceName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ServiceName");
            }
        }
    }
}
