// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabricManagedClusters.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Node type update request
    /// </summary>
    public partial class NodeTypeUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the NodeTypeUpdateParameters class.
        /// </summary>
        public NodeTypeUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeTypeUpdateParameters class.
        /// </summary>
        /// <param name="tags">Node type update parameters</param>
        /// <param name="sku">The node type sku.</param>
        public NodeTypeUpdateParameters(object tags = default(object), NodeTypeSku sku = default(NodeTypeSku), string additionalProperties = default(string))
        {
            Tags = tags;
            Sku = sku;
            AdditionalProperties = additionalProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets node type update parameters
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public object Tags { get; set; }

        /// <summary>
        /// Gets or sets the node type sku.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public NodeTypeSku Sku { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "additionalProperties")]
        public string AdditionalProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku != null)
            {
                Sku.Validate();
            }
        }
    }
}
