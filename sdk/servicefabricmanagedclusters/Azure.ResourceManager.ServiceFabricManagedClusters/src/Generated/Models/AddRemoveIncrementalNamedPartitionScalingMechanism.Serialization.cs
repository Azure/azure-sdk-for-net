// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    public partial class AddRemoveIncrementalNamedPartitionScalingMechanism : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("minPartitionCount");
            writer.WriteNumberValue(MinPartitionCount);
            writer.WritePropertyName("maxPartitionCount");
            writer.WriteNumberValue(MaxPartitionCount);
            writer.WritePropertyName("scaleIncrement");
            writer.WriteNumberValue(ScaleIncrement);
            writer.WritePropertyName("kind");
            writer.WriteStringValue(Kind.ToString());
            writer.WriteEndObject();
        }

        internal static AddRemoveIncrementalNamedPartitionScalingMechanism DeserializeAddRemoveIncrementalNamedPartitionScalingMechanism(JsonElement element)
        {
            int minPartitionCount = default;
            int maxPartitionCount = default;
            int scaleIncrement = default;
            ServiceScalingMechanismKind kind = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("minPartitionCount"))
                {
                    minPartitionCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maxPartitionCount"))
                {
                    maxPartitionCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("scaleIncrement"))
                {
                    scaleIncrement = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("kind"))
                {
                    kind = new ServiceScalingMechanismKind(property.Value.GetString());
                    continue;
                }
            }
            return new AddRemoveIncrementalNamedPartitionScalingMechanism(kind, minPartitionCount, maxPartitionCount, scaleIncrement);
        }
    }
}
