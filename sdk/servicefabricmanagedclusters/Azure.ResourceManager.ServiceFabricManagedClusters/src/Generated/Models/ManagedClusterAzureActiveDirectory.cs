// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    /// <summary> The settings to enable AAD authentication on the cluster. </summary>
    public partial class ManagedClusterAzureActiveDirectory
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ManagedClusterAzureActiveDirectory"/>. </summary>
        public ManagedClusterAzureActiveDirectory()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ManagedClusterAzureActiveDirectory"/>. </summary>
        /// <param name="tenantId"> Azure active directory tenant id. </param>
        /// <param name="clusterApplication"> Azure active directory cluster application id. </param>
        /// <param name="clientApplication"> Azure active directory client application id. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ManagedClusterAzureActiveDirectory(Guid? tenantId, string clusterApplication, string clientApplication, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            TenantId = tenantId;
            ClusterApplication = clusterApplication;
            ClientApplication = clientApplication;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Azure active directory tenant id. </summary>
        public Guid? TenantId { get; set; }
        /// <summary> Azure active directory cluster application id. </summary>
        public string ClusterApplication { get; set; }
        /// <summary> Azure active directory client application id. </summary>
        public string ClientApplication { get; set; }
    }
}
