// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    /// <summary> IPTag associated with the object. </summary>
    public partial class ManagedClusterIPTag
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ManagedClusterIPTag"/>. </summary>
        /// <param name="ipTagType"> The IP tag type. </param>
        /// <param name="tag"> The value of the IP tag. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="ipTagType"/> or <paramref name="tag"/> is null. </exception>
        public ManagedClusterIPTag(string ipTagType, string tag)
        {
            Argument.AssertNotNull(ipTagType, nameof(ipTagType));
            Argument.AssertNotNull(tag, nameof(tag));

            IPTagType = ipTagType;
            Tag = tag;
        }

        /// <summary> Initializes a new instance of <see cref="ManagedClusterIPTag"/>. </summary>
        /// <param name="ipTagType"> The IP tag type. </param>
        /// <param name="tag"> The value of the IP tag. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ManagedClusterIPTag(string ipTagType, string tag, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            IPTagType = ipTagType;
            Tag = tag;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ManagedClusterIPTag"/> for deserialization. </summary>
        internal ManagedClusterIPTag()
        {
        }

        /// <summary> The IP tag type. </summary>
        public string IPTagType { get; set; }
        /// <summary> The value of the IP tag. </summary>
        public string Tag { get; set; }
    }
}
