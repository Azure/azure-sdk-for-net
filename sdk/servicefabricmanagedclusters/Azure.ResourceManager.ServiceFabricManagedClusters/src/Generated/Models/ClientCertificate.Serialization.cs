// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    public partial class ClientCertificate : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("isAdmin");
            writer.WriteBooleanValue(IsAdmin);
            if (Optional.IsDefined(Thumbprint))
            {
                writer.WritePropertyName("thumbprint");
                writer.WriteStringValue(Thumbprint);
            }
            if (Optional.IsDefined(CommonName))
            {
                writer.WritePropertyName("commonName");
                writer.WriteStringValue(CommonName);
            }
            if (Optional.IsDefined(IssuerThumbprint))
            {
                writer.WritePropertyName("issuerThumbprint");
                writer.WriteStringValue(IssuerThumbprint);
            }
            writer.WriteEndObject();
        }

        internal static ClientCertificate DeserializeClientCertificate(JsonElement element)
        {
            bool isAdmin = default;
            Optional<string> thumbprint = default;
            Optional<string> commonName = default;
            Optional<string> issuerThumbprint = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("isAdmin"))
                {
                    isAdmin = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("thumbprint"))
                {
                    thumbprint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("commonName"))
                {
                    commonName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("issuerThumbprint"))
                {
                    issuerThumbprint = property.Value.GetString();
                    continue;
                }
            }
            return new ClientCertificate(isAdmin, thumbprint.Value, commonName.Value, issuerThumbprint.Value);
        }
    }
}
