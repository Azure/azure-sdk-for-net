// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    /// <summary> The provisioning state of the managed resource. </summary>
    public readonly partial struct ManagedResourceProvisioningState : IEquatable<ManagedResourceProvisioningState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ManagedResourceProvisioningState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ManagedResourceProvisioningState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string CreatingValue = "Creating";
        private const string CreatedValue = "Created";
        private const string UpdatingValue = "Updating";
        private const string SucceededValue = "Succeeded";
        private const string FailedValue = "Failed";
        private const string CanceledValue = "Canceled";
        private const string DeletingValue = "Deleting";
        private const string DeletedValue = "Deleted";
        private const string OtherValue = "Other";

        /// <summary> None. </summary>
        public static ManagedResourceProvisioningState None { get; } = new ManagedResourceProvisioningState(NoneValue);
        /// <summary> Creating. </summary>
        public static ManagedResourceProvisioningState Creating { get; } = new ManagedResourceProvisioningState(CreatingValue);
        /// <summary> Created. </summary>
        public static ManagedResourceProvisioningState Created { get; } = new ManagedResourceProvisioningState(CreatedValue);
        /// <summary> Updating. </summary>
        public static ManagedResourceProvisioningState Updating { get; } = new ManagedResourceProvisioningState(UpdatingValue);
        /// <summary> Succeeded. </summary>
        public static ManagedResourceProvisioningState Succeeded { get; } = new ManagedResourceProvisioningState(SucceededValue);
        /// <summary> Failed. </summary>
        public static ManagedResourceProvisioningState Failed { get; } = new ManagedResourceProvisioningState(FailedValue);
        /// <summary> Canceled. </summary>
        public static ManagedResourceProvisioningState Canceled { get; } = new ManagedResourceProvisioningState(CanceledValue);
        /// <summary> Deleting. </summary>
        public static ManagedResourceProvisioningState Deleting { get; } = new ManagedResourceProvisioningState(DeletingValue);
        /// <summary> Deleted. </summary>
        public static ManagedResourceProvisioningState Deleted { get; } = new ManagedResourceProvisioningState(DeletedValue);
        /// <summary> Other. </summary>
        public static ManagedResourceProvisioningState Other { get; } = new ManagedResourceProvisioningState(OtherValue);
        /// <summary> Determines if two <see cref="ManagedResourceProvisioningState"/> values are the same. </summary>
        public static bool operator ==(ManagedResourceProvisioningState left, ManagedResourceProvisioningState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ManagedResourceProvisioningState"/> values are not the same. </summary>
        public static bool operator !=(ManagedResourceProvisioningState left, ManagedResourceProvisioningState right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ManagedResourceProvisioningState"/>. </summary>
        public static implicit operator ManagedResourceProvisioningState(string value) => new ManagedResourceProvisioningState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ManagedResourceProvisioningState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ManagedResourceProvisioningState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
