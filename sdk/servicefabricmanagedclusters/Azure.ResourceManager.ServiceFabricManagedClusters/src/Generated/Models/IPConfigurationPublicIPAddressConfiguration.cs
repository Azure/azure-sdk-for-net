// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    /// <summary> The public IP address configuration of the network interface. </summary>
    public partial class IPConfigurationPublicIPAddressConfiguration
    {
        /// <summary> Initializes a new instance of <see cref="IPConfigurationPublicIPAddressConfiguration"/>. </summary>
        /// <param name="name"> Name of the network interface. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public IPConfigurationPublicIPAddressConfiguration(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
            IPTags = new ChangeTrackingList<ManagedClusterIPTag>();
        }

        /// <summary> Initializes a new instance of <see cref="IPConfigurationPublicIPAddressConfiguration"/>. </summary>
        /// <param name="name"> Name of the network interface. </param>
        /// <param name="ipTags"> Specifies the list of IP tags associated with the public IP address. </param>
        /// <param name="publicIPAddressVersion"> Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4. </param>
        internal IPConfigurationPublicIPAddressConfiguration(string name, IList<ManagedClusterIPTag> ipTags, PublicIPAddressVersion? publicIPAddressVersion)
        {
            Name = name;
            IPTags = ipTags;
            PublicIPAddressVersion = publicIPAddressVersion;
        }

        /// <summary> Name of the network interface. </summary>
        public string Name { get; set; }
        /// <summary> Specifies the list of IP tags associated with the public IP address. </summary>
        public IList<ManagedClusterIPTag> IPTags { get; }
        /// <summary> Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4. </summary>
        public PublicIPAddressVersion? PublicIPAddressVersion { get; set; }
    }
}
