// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    /// <summary> The service correlation scheme. </summary>
    public readonly partial struct ManagedClusterServiceCorrelationScheme : IEquatable<ManagedClusterServiceCorrelationScheme>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ManagedClusterServiceCorrelationScheme"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ManagedClusterServiceCorrelationScheme(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AlignedAffinityValue = "AlignedAffinity";
        private const string NonAlignedAffinityValue = "NonAlignedAffinity";

        /// <summary> Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0. </summary>
        public static ManagedClusterServiceCorrelationScheme AlignedAffinity { get; } = new ManagedClusterServiceCorrelationScheme(AlignedAffinityValue);
        /// <summary> Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1. </summary>
        public static ManagedClusterServiceCorrelationScheme NonAlignedAffinity { get; } = new ManagedClusterServiceCorrelationScheme(NonAlignedAffinityValue);
        /// <summary> Determines if two <see cref="ManagedClusterServiceCorrelationScheme"/> values are the same. </summary>
        public static bool operator ==(ManagedClusterServiceCorrelationScheme left, ManagedClusterServiceCorrelationScheme right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ManagedClusterServiceCorrelationScheme"/> values are not the same. </summary>
        public static bool operator !=(ManagedClusterServiceCorrelationScheme left, ManagedClusterServiceCorrelationScheme right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ManagedClusterServiceCorrelationScheme"/>. </summary>
        public static implicit operator ManagedClusterServiceCorrelationScheme(string value) => new ManagedClusterServiceCorrelationScheme(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ManagedClusterServiceCorrelationScheme other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ManagedClusterServiceCorrelationScheme other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
