// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    /// <summary>
    /// Describes the policy to be used for placement of a Service Fabric service where two replicas
    /// from the same partition should never be placed in the same fault or upgrade domain.
    /// 
    /// While this is not common it can expose the service to an increased risk of concurrent failures
    /// due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider
    /// a case where replicas are deployed across different data center, with one replica per location.
    /// In the event that one of the datacenters goes offline, normally the replica that was placed in that
    /// datacenter will be packed into one of the remaining datacenters. If this is not desirable then this
    /// policy should be set.
    /// 
    /// </summary>
    public partial class ServicePlacementRequireDomainDistributionPolicy : ServicePlacementPolicy
    {
        /// <summary> Initializes a new instance of ServicePlacementRequireDomainDistributionPolicy. </summary>
        /// <param name="domainName"> The name of the domain that should used for placement as per this policy. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="domainName"/> is null. </exception>
        public ServicePlacementRequireDomainDistributionPolicy(string domainName)
        {
            if (domainName == null)
            {
                throw new ArgumentNullException(nameof(domainName));
            }

            DomainName = domainName;
            PolicyType = ServicePlacementPolicyType.RequiredDomainDistribution;
        }

        /// <summary> Initializes a new instance of ServicePlacementRequireDomainDistributionPolicy. </summary>
        /// <param name="policyType"> The type of placement policy for a service fabric service. Following are the possible values. </param>
        /// <param name="domainName"> The name of the domain that should used for placement as per this policy. </param>
        internal ServicePlacementRequireDomainDistributionPolicy(ServicePlacementPolicyType policyType, string domainName) : base(policyType)
        {
            DomainName = domainName;
            PolicyType = policyType;
        }

        /// <summary> The name of the domain that should used for placement as per this policy. </summary>
        public string DomainName { get; set; }
    }
}
