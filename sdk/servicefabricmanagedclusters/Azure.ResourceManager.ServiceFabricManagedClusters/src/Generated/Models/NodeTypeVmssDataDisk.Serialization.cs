// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    public partial class NodeTypeVmssDataDisk : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("lun");
            writer.WriteNumberValue(Lun);
            writer.WritePropertyName("diskSizeGB");
            writer.WriteNumberValue(DiskSizeInGB);
            writer.WritePropertyName("diskType");
            writer.WriteStringValue(DiskType.ToString());
            writer.WritePropertyName("diskLetter");
            writer.WriteStringValue(DiskLetter);
            writer.WriteEndObject();
        }

        internal static NodeTypeVmssDataDisk DeserializeNodeTypeVmssDataDisk(JsonElement element)
        {
            int lun = default;
            int diskSizeGB = default;
            ServiceFabricManagedDataDiskType diskType = default;
            string diskLetter = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lun"))
                {
                    lun = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("diskSizeGB"))
                {
                    diskSizeGB = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("diskType"))
                {
                    diskType = new ServiceFabricManagedDataDiskType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("diskLetter"))
                {
                    diskLetter = property.Value.GetString();
                    continue;
                }
            }
            return new NodeTypeVmssDataDisk(lun, diskSizeGB, diskType, diskLetter);
        }
    }
}
