// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Models
{
    /// <summary> Describes the maintenance window status of the Service Fabric Managed Cluster. </summary>
    public partial class ManagedMaintenanceWindowStatus
    {
        /// <summary> Initializes a new instance of <see cref="ManagedMaintenanceWindowStatus"/>. </summary>
        internal ManagedMaintenanceWindowStatus()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ManagedMaintenanceWindowStatus"/>. </summary>
        /// <param name="isWindowEnabled"> If maintenance window is enabled on this cluster. </param>
        /// <param name="isRegionReady"> Indicates if the region is ready to configure maintenance windows. </param>
        /// <param name="isWindowActive"> If maintenance window is active. </param>
        /// <param name="canApplyUpdates"> If updates can be applied. </param>
        /// <param name="lastWindowStatusUpdateAtUTC"> Last window update time in UTC. </param>
        /// <param name="lastWindowStartTimeUTC"> Last window start time in UTC. </param>
        /// <param name="lastWindowEndTimeUTC"> Last window end time in UTC. </param>
        internal ManagedMaintenanceWindowStatus(bool? isWindowEnabled, bool? isRegionReady, bool? isWindowActive, bool? canApplyUpdates, DateTimeOffset? lastWindowStatusUpdateAtUTC, DateTimeOffset? lastWindowStartTimeUTC, DateTimeOffset? lastWindowEndTimeUTC)
        {
            IsWindowEnabled = isWindowEnabled;
            IsRegionReady = isRegionReady;
            IsWindowActive = isWindowActive;
            CanApplyUpdates = canApplyUpdates;
            LastWindowStatusUpdateAtUTC = lastWindowStatusUpdateAtUTC;
            LastWindowStartTimeUTC = lastWindowStartTimeUTC;
            LastWindowEndTimeUTC = lastWindowEndTimeUTC;
        }

        /// <summary> If maintenance window is enabled on this cluster. </summary>
        public bool? IsWindowEnabled { get; }
        /// <summary> Indicates if the region is ready to configure maintenance windows. </summary>
        public bool? IsRegionReady { get; }
        /// <summary> If maintenance window is active. </summary>
        public bool? IsWindowActive { get; }
        /// <summary> If updates can be applied. </summary>
        public bool? CanApplyUpdates { get; }
        /// <summary> Last window update time in UTC. </summary>
        public DateTimeOffset? LastWindowStatusUpdateAtUTC { get; }
        /// <summary> Last window start time in UTC. </summary>
        public DateTimeOffset? LastWindowStartTimeUTC { get; }
        /// <summary> Last window end time in UTC. </summary>
        public DateTimeOffset? LastWindowEndTimeUTC { get; }
    }
}
