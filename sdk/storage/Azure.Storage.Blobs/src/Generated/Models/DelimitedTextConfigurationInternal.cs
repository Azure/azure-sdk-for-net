// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Storage.Blobs.Models
{
    /// <summary> delimited text configuration. </summary>
    internal partial class DelimitedTextConfigurationInternal
    {
        /// <summary> Initializes a new instance of DelimitedTextConfigurationInternal. </summary>
        /// <param name="columnSeparator"> column separator. </param>
        /// <param name="fieldQuote"> field quote. </param>
        /// <param name="recordSeparator"> record separator. </param>
        /// <param name="escapeChar"> escape char. </param>
        /// <param name="headersPresent"> has headers. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="columnSeparator"/>, <paramref name="fieldQuote"/>, <paramref name="recordSeparator"/>, or <paramref name="escapeChar"/> is null. </exception>
        public DelimitedTextConfigurationInternal(string columnSeparator, string fieldQuote, string recordSeparator, string escapeChar, bool headersPresent)
        {
            if (columnSeparator == null)
            {
                throw new ArgumentNullException(nameof(columnSeparator));
            }
            if (fieldQuote == null)
            {
                throw new ArgumentNullException(nameof(fieldQuote));
            }
            if (recordSeparator == null)
            {
                throw new ArgumentNullException(nameof(recordSeparator));
            }
            if (escapeChar == null)
            {
                throw new ArgumentNullException(nameof(escapeChar));
            }

            ColumnSeparator = columnSeparator;
            FieldQuote = fieldQuote;
            RecordSeparator = recordSeparator;
            EscapeChar = escapeChar;
            HeadersPresent = headersPresent;
        }

        /// <summary> column separator. </summary>
        public string ColumnSeparator { get; }
        /// <summary> field quote. </summary>
        public string FieldQuote { get; }
        /// <summary> record separator. </summary>
        public string RecordSeparator { get; }
        /// <summary> escape char. </summary>
        public string EscapeChar { get; }
        /// <summary> has headers. </summary>
        public bool HeadersPresent { get; }
    }
}
