// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Storage.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// SasPolicy assigned to the storage account.
    /// </summary>
    public partial class SasPolicy
    {
        /// <summary>
        /// Initializes a new instance of the SasPolicy class.
        /// </summary>
        public SasPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SasPolicy class.
        /// </summary>
        /// <param name="sasExpirationPeriod">The SAS expiration period,
        /// DD.HH:MM:SS.</param>
        public SasPolicy(string sasExpirationPeriod)
        {
            SasExpirationPeriod = sasExpirationPeriod;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for SasPolicy class.
        /// </summary>
        static SasPolicy()
        {
            ExpirationAction = "Log";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the SAS expiration period, DD.HH:MM:SS.
        /// </summary>
        [JsonProperty(PropertyName = "sasExpirationPeriod")]
        public string SasExpirationPeriod { get; set; }

        /// <summary>
        /// The SAS expiration action. Can only be Log.
        /// </summary>
        [JsonProperty(PropertyName = "expirationAction")]
        public static string ExpirationAction { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SasExpirationPeriod == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SasExpirationPeriod");
            }
        }
    }
}
