// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Management.Storage.Models
{
    /// <summary> The file share properties be listed out. </summary>
    public partial class FileShareItem : AzureEntityResource
    {
        /// <summary> Initializes a new instance of FileShareItem. </summary>
        public FileShareItem()
        {
        }

        /// <summary> Initializes a new instance of FileShareItem. </summary>
        /// <param name="lastModifiedTime"> Returns the date and time the share was last modified. </param>
        /// <param name="metadata"> A name-value pair to associate with the share as metadata. </param>
        /// <param name="shareQuota"> The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. </param>
        /// <param name="etag"> Resource Etag. </param>
        /// <param name="id"> Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts. </param>
        internal FileShareItem(DateTimeOffset? lastModifiedTime, IDictionary<string, string> metadata, int? shareQuota, string etag, string id, string name, string type) : base(etag, id, name, type)
        {
            LastModifiedTime = lastModifiedTime;
            Metadata = metadata;
            ShareQuota = shareQuota;
        }

        /// <summary> Returns the date and time the share was last modified. </summary>
        public DateTimeOffset? LastModifiedTime { get; }
        /// <summary> A name-value pair to associate with the share as metadata. </summary>
        public IDictionary<string, string> Metadata { get; set; }
        /// <summary> The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. </summary>
        public int? ShareQuota { get; set; }
    }
}
