// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.Storage.Models
{
    public partial class BlobServiceProperties2 : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Cors != null)
            {
                writer.WritePropertyName("cors");
                writer.WriteObjectValue(Cors);
            }
            if (DefaultServiceVersion != null)
            {
                writer.WritePropertyName("defaultServiceVersion");
                writer.WriteStringValue(DefaultServiceVersion);
            }
            if (DeleteRetentionPolicy != null)
            {
                writer.WritePropertyName("deleteRetentionPolicy");
                writer.WriteObjectValue(DeleteRetentionPolicy);
            }
            if (IsVersioningEnabled != null)
            {
                writer.WritePropertyName("isVersioningEnabled");
                writer.WriteBooleanValue(IsVersioningEnabled.Value);
            }
            if (AutomaticSnapshotPolicyEnabled != null)
            {
                writer.WritePropertyName("automaticSnapshotPolicyEnabled");
                writer.WriteBooleanValue(AutomaticSnapshotPolicyEnabled.Value);
            }
            if (ChangeFeed != null)
            {
                writer.WritePropertyName("changeFeed");
                writer.WriteObjectValue(ChangeFeed);
            }
            if (RestorePolicy != null)
            {
                writer.WritePropertyName("restorePolicy");
                writer.WriteObjectValue(RestorePolicy);
            }
            if (ContainerDeleteRetentionPolicy != null)
            {
                writer.WritePropertyName("containerDeleteRetentionPolicy");
                writer.WriteObjectValue(ContainerDeleteRetentionPolicy);
            }
            writer.WriteEndObject();
        }
        internal static BlobServiceProperties2 DeserializeBlobServiceProperties2(JsonElement element)
        {
            BlobServiceProperties2 result = new BlobServiceProperties2();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("cors"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Cors = CorsRules.DeserializeCorsRules(property.Value);
                    continue;
                }
                if (property.NameEquals("defaultServiceVersion"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DefaultServiceVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deleteRetentionPolicy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DeleteRetentionPolicy = DeleteRetentionPolicy.DeserializeDeleteRetentionPolicy(property.Value);
                    continue;
                }
                if (property.NameEquals("isVersioningEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.IsVersioningEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("automaticSnapshotPolicyEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.AutomaticSnapshotPolicyEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("changeFeed"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ChangeFeed = ChangeFeed.DeserializeChangeFeed(property.Value);
                    continue;
                }
                if (property.NameEquals("restorePolicy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.RestorePolicy = RestorePolicyProperties.DeserializeRestorePolicyProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("containerDeleteRetentionPolicy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ContainerDeleteRetentionPolicy = DeleteRetentionPolicy.DeserializeDeleteRetentionPolicy(property.Value);
                    continue;
                }
            }
            return result;
        }
    }
}
