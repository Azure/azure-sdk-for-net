// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.Storage.Models
{
    public partial class ServiceSasParameters : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("canonicalizedResource");
            writer.WriteStringValue(CanonicalizedResource);
            if (Resource != null)
            {
                writer.WritePropertyName("signedResource");
                writer.WriteStringValue(Resource.Value.ToString());
            }
            if (Permissions != null)
            {
                writer.WritePropertyName("signedPermission");
                writer.WriteStringValue(Permissions.Value.ToString());
            }
            if (IPAddressOrRange != null)
            {
                writer.WritePropertyName("signedIp");
                writer.WriteStringValue(IPAddressOrRange);
            }
            if (Protocols != null)
            {
                writer.WritePropertyName("signedProtocol");
                writer.WriteStringValue(Protocols.Value.ToSerialString());
            }
            if (SharedAccessStartTime != null)
            {
                writer.WritePropertyName("signedStart");
                writer.WriteStringValue(SharedAccessStartTime.Value, "S");
            }
            if (SharedAccessExpiryTime != null)
            {
                writer.WritePropertyName("signedExpiry");
                writer.WriteStringValue(SharedAccessExpiryTime.Value, "S");
            }
            if (Identifier != null)
            {
                writer.WritePropertyName("signedIdentifier");
                writer.WriteStringValue(Identifier);
            }
            if (PartitionKeyStart != null)
            {
                writer.WritePropertyName("startPk");
                writer.WriteStringValue(PartitionKeyStart);
            }
            if (PartitionKeyEnd != null)
            {
                writer.WritePropertyName("endPk");
                writer.WriteStringValue(PartitionKeyEnd);
            }
            if (RowKeyStart != null)
            {
                writer.WritePropertyName("startRk");
                writer.WriteStringValue(RowKeyStart);
            }
            if (RowKeyEnd != null)
            {
                writer.WritePropertyName("endRk");
                writer.WriteStringValue(RowKeyEnd);
            }
            if (KeyToSign != null)
            {
                writer.WritePropertyName("keyToSign");
                writer.WriteStringValue(KeyToSign);
            }
            if (CacheControl != null)
            {
                writer.WritePropertyName("rscc");
                writer.WriteStringValue(CacheControl);
            }
            if (ContentDisposition != null)
            {
                writer.WritePropertyName("rscd");
                writer.WriteStringValue(ContentDisposition);
            }
            if (ContentEncoding != null)
            {
                writer.WritePropertyName("rsce");
                writer.WriteStringValue(ContentEncoding);
            }
            if (ContentLanguage != null)
            {
                writer.WritePropertyName("rscl");
                writer.WriteStringValue(ContentLanguage);
            }
            if (ContentType != null)
            {
                writer.WritePropertyName("rsct");
                writer.WriteStringValue(ContentType);
            }
            writer.WriteEndObject();
        }
        internal static ServiceSasParameters DeserializeServiceSasParameters(JsonElement element)
        {
            ServiceSasParameters result = new ServiceSasParameters();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("canonicalizedResource"))
                {
                    result.CanonicalizedResource = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("signedResource"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Resource = new SignedResource(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("signedPermission"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Permissions = new Permissions(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("signedIp"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.IPAddressOrRange = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("signedProtocol"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Protocols = property.Value.GetString().ToHttpProtocol();
                    continue;
                }
                if (property.NameEquals("signedStart"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SharedAccessStartTime = property.Value.GetDateTimeOffset("S");
                    continue;
                }
                if (property.NameEquals("signedExpiry"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SharedAccessExpiryTime = property.Value.GetDateTimeOffset("S");
                    continue;
                }
                if (property.NameEquals("signedIdentifier"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Identifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startPk"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.PartitionKeyStart = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("endPk"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.PartitionKeyEnd = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startRk"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.RowKeyStart = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("endRk"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.RowKeyEnd = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("keyToSign"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.KeyToSign = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rscc"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.CacheControl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rscd"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ContentDisposition = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rsce"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ContentEncoding = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rscl"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ContentLanguage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rsct"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ContentType = property.Value.GetString();
                    continue;
                }
            }
            return result;
        }
    }
}
