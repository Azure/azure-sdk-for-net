{{- include "stress-test-addons.deploy-job-template.from-pod" (list . "stress.deploy-example") -}}
  {{- define "stress.deploy-example" -}}
metadata:
  labels:
    chaos: "{{ default false .Stress.chaos }}"
    testInstance: "{{.Stress.Scenario}}-{{ .Stress.BaseName }}-{{ .Release.Revision }}"
spec:
  nodeSelector:
    sku: default
  shareProcessNamespace: true
  containers:
    - name: fault-injector
      image: azsdkengsys.azurecr.io/stress/httpfaultinjector
      imagePullPolicy: Always
      command: ['sh', '-c']
      args:
        - |
          set -ex;
          dotnet dev-certs https --export-path /mnt/outputs/dev-cert.pfx;
          /root/.dotnet/tools/http-fault-injector;
      resources:
        limits:
          memory: 1Gi
          cpu: "0.5"
      {{- include "stress-test-addons.container-env" . | nindent 6 }}
    - name: main
      image:  {{ .Stress.imageTag }}
      command: ['sh', '-c']
      args:
        - |
          set -xa;
          set -o pipefail;
          keytool -import -alias test -file /mnt/outputs/dev-cert.pfx -keystore ${JAVA_HOME}/lib/security/cacerts -noprompt -keypass changeit -storepass changeit;
          mkdir -p "$DEBUG_SHARE";
          . /mnt/outputs/.env;
          export AZURE_HTTP_CLIENT_IMPLEMENTATION=com.azure.core.http.netty.NettyAsyncHttpClientProvider;
          echo "setting http client implementation to $AZURE_HTTP_CLIENT_IMPLEMENTATION";
          java \
            -Dotel.service.name={{ .Release.Name }}-{{ .Stress.BaseName }} \
            -Dotel.traces.sampler=traceidratio \
            -Dotel.traces.sampler.arg=0.001 \
            -XX:InitialRAMPercentage=50 \
            -XX:MaxRAMPercentage=50 \
            -XX:+HeapDumpOnOutOfMemoryError \
            -XX:HeapDumpPath="${DEBUG_SHARE}" \
            -Dreactor.schedulers.defaultBoundedElasticSize={{ .Stress.parallelRuns }} \
            -jar /app/azure-storage-blob-stress-1.0.0-beta.1-jar-with-dependencies.jar \
            {{ .Stress.testScenario }} \
            --parallel {{ .Stress.parallelRuns }} \
            --duration {{ mul 60 .Stress.durationMin }} \
            --size {{ .Stress.sizeBytes }} \
            {{ ternary "--sync" "" .Stress.sync }} \
            {{ ternary "--downloadFaults" "" (default false .Stress.downloadFaults) }} \
            {{ ternary "--uploadFaults" "" (default false .Stress.uploadFaults) }} \
            --warmup 0 \
            2>&1 | tee -a "${DEBUG_SHARE}/{{ .Stress.testScenario }}-`date +%s`.log";
          code=$?;
          echo "before the kill command";
          kill `pidof http-fault-injector`;
          echo "HTTP Fault Injector killed";
          exit $code;
      imagePullPolicy: Always
      resources:
        limits:
          memory: {{ default "1Gi" .Stress.memory }}
          cpu: "0.7"
      {{- include "stress-test-addons.container-env" . | nindent 6 }}

{{- end -}}