// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace Azure.Storage.Queues.Models
{
    public partial class AccessPolicy : IXmlSerializable
    {
        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "AccessPolicy");
            if (Optional.IsDefined(Start))
            {
                writer.WriteStartElement("Start");
                writer.WriteValue(Start.Value, "O");
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Expiry))
            {
                writer.WriteStartElement("Expiry");
                writer.WriteValue(Expiry.Value, "O");
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Permission))
            {
                writer.WriteStartElement("Permission");
                writer.WriteValue(Permission);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        internal static AccessPolicy DeserializeAccessPolicy(XElement element)
        {
            DateTimeOffset? start = default;
            DateTimeOffset? expiry = default;
            string permission = default;
            if (element.Element("Start") is XElement startElement)
            {
                start = startElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("Expiry") is XElement expiryElement)
            {
                expiry = expiryElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("Permission") is XElement permissionElement)
            {
                permission = (string)permissionElement;
            }
            return new AccessPolicy(start, expiry, permission);
        }
    }
}
