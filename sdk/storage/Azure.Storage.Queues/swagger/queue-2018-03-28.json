{
    "swagger": "2.0",
    "info": {
      "title": "Azure Queue Storage",
      "version": "2018-03-28",
      "x-ms-code-generation-settings": {
        "header": "MIT",
        "strictSpecAdherence": false
      }
    },
    "x-ms-parameterized-host": {
      "hostTemplate": "{url}",
      "useSchemePrefix": false,
      "positionInOperation": "first",
      "parameters": [
        {
          "$ref": "#/parameters/Url"
        }
      ]
    },
    "securityDefinitions": {
      "queue_shared_key": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/xml"
    ],
    "produces": [
      "application/xml"
    ],
    "paths": {},
    "x-ms-paths": {
      "/?restype=service&comp=properties": {
        "put": {
          "tags": [
            "service"
          ],
          "operationId": "Service_SetProperties",
          "description": "Sets properties for a storage account's Queue service endpoint, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules",
          "parameters": [
            {
              "$ref": "#/parameters/StorageServiceProperties"
            },
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "202": {
              "description": "Success (Accepted)",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "get": {
          "tags": [
            "service"
          ],
          "operationId": "Service_GetProperties",
          "description": "gets the properties of a storage account's Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
          "parameters": [
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageServiceProperties"
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "restype",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "service"
            ]
          },
          {
            "name": "comp",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "properties"
            ]
          }
        ]
      },
      "/?restype=service&comp=stats": {
        "get": {
          "tags": [
            "service"
          ],
          "operationId": "Service_GetStatistics",
          "description": "Retrieves statistics related to replication for the Queue service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the storage account.",
          "parameters": [
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageServiceStats"
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "restype",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "service"
            ]
          },
          {
            "name": "comp",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "stats"
            ]
          }
        ]
      },
      "/?comp=list": {
        "get": {
          "tags": [
            "service"
          ],
          "operationId": "Service_ListQueuesSegment",
          "description": "The List Queues Segment operation returns a list of the queues under the specified account",
          "parameters": [
            {
              "$ref": "#/parameters/Prefix"
            },
            {
              "$ref": "#/parameters/Marker"
            },
            {
              "$ref": "#/parameters/MaxResults"
            },
            {
              "$ref": "#/parameters/ListQueuesInclude"
            },
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              },
              "schema": {
                "$ref": "#/definitions/ListQueuesSegmentResponse"
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "NextMarker"
          }
        },
        "parameters": [
          {
            "name": "comp",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "list"
            ]
          }
        ]
      },
      "/{queueName}": {
        "put": {
          "tags": [
            "service"
          ],
          "operationId": "Queue_Create",
          "description": "creates a new queue under the given account.",
          "parameters": [
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/Metadata"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "201": {
              "description": "Success, queue created.",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              }
            },
            "204": {
              "description": "Success, queue created.",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "queue"
          ],
          "operationId": "Queue_Delete",
          "description": "operation permanently deletes the specified queue",
          "parameters": [
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": []
      },
      "/{queueName}?comp=metadata": {
        "get": {
          "tags": [
            "queue"
          ],
          "operationId": "Queue_GetProperties",
          "description": "Retrieves user-defined metadata and queue properties on the specified queue. Metadata is associated with the queue as name-values pairs.",
          "parameters": [
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-ms-meta": {
                  "type": "string",
                  "x-ms-client-name": "Metadata",
                  "x-ms-header-collection-prefix": "x-ms-meta-"
                },
                "x-ms-approximate-messages-count": {
                  "type": "integer",
                  "x-ms-client-name": "ApproximateMessagesCount",
                  "description": "The approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher."
                },
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "put": {
          "tags": [
            "queue"
          ],
          "operationId": "Queue_SetMetadata",
          "description": "sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.",
          "parameters": [
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/Metadata"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "comp",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "metadata"
            ]
          }
        ]
      },
      "/{queueName}?comp=acl": {
        "get": {
          "tags": [
            "queue"
          ],
          "operationId": "Queue_GetAccessPolicy",
          "description": "returns details about any stored access policies specified on the queue that may be used with Shared Access Signatures.",
          "parameters": [
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              },
              "schema": {
                "$ref": "#/definitions/SignedIdentifiers"
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "put": {
          "tags": [
            "queue"
          ],
          "operationId": "Queue_SetAccessPolicy",
          "description": "sets stored access policies for the queue that may be used with Shared Access Signatures",
          "parameters": [
            {
              "$ref": "#/parameters/QueueAcl"
            },
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "comp",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "acl"
            ]
          }
        ]
      },
      "/{queueName}/messages": {
        "get": {
          "tags": [
            "message"
          ],
          "operationId": "Messages_Dequeue",
          "description": "The Dequeue operation retrieves one or more messages from the front of the queue.",
          "parameters": [
            {
              "$ref": "#/parameters/NumOfMessages"
            },
            {
              "$ref": "#/parameters/VisibilityTimeout"
            },
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              },
              "schema": {
                "$ref": "#/definitions/DequeuedMessagesList"
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "message"
          ],
          "operationId": "Messages_Clear",
          "description": "The Clear operation deletes all messages from the specified queue.",
          "parameters": [
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": []
      },
      "/{queueName}/messages?visibilitytimeout={visibilityTimeout}&messagettl={messageTimeToLive}": {
        "post": {
          "tags": [
            "message"
          ],
          "operationId": "Messages_Enqueue",
          "description": "The Enqueue operation adds a new message to the back of the message queue. A visibility timeout can also be specified to make the message invisible until the visibility timeout expires. A message must be in a format that can be included in an XML request with UTF-8 encoding. The encoded message can be up to 64 KB in size for versions 2011-08-18 and newer, or 8 KB in size for previous versions.",
          "parameters": [
            {
              "$ref": "#/parameters/QueueMessage"
            },
            {
              "$ref": "#/parameters/VisibilityTimeout"
            },
            {
              "$ref": "#/parameters/MessageTTL"
            },
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              },
              "schema": {
                "$ref": "#/definitions/EnqueuedMessageList"
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": []
      },
      "/{queueName}/messages?peekonly=true": {
        "get": {
          "tags": [
            "message"
          ],
          "operationId": "Messages_Peek",
          "description": "The Peek operation retrieves one or more messages from the front of the queue, but does not alter the visibility of the message.",
          "parameters": [
            {
              "$ref": "#/parameters/NumOfMessages"
            },
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              },
              "schema": {
                "$ref": "#/definitions/PeekedMessagesList"
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "peekonly",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "true"
            ]
          }
        ]
      },
      "/{queueName}/messages/{messageid}?popreceipt={popReceipt}&visibilitytimeout={visibilityTimeout}": {
        "put": {
          "tags": [
            "messageId"
          ],
          "operationId": "MessageId_Update",
          "description": "The Update operation was introduced with version 2011-08-18 of the Queue service API. The Update Message operation updates the visibility timeout of a message. You can also use this operation to update the contents of a message. A message must be in a format that can be included in an XML request with UTF-8 encoding, and the encoded message can be up to 64KB in size.",
          "parameters": [
            {
              "$ref": "#/parameters/QueueMessage"
            },
            {
              "$ref": "#/parameters/PopReceipt"
            },
            {
              "$ref": "#/parameters/VisibilityTimeoutRequired"
            },
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                },
                "x-ms-popreceipt": {
                  "x-ms-client-name": "PopReceipt",
                  "type": "string",
                  "description": "The pop receipt of the queue message."
                },
                "x-ms-time-next-visible": {
                  "x-ms-client-name": "TimeNextVisible",
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "A UTC date/time value that represents when the message will be visible on the queue."
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": []
      },
      "/{queueName}/messages/{messageid}?popreceipt={popReceipt}": {
        "delete": {
          "tags": [
            "messageId"
          ],
          "operationId": "MessageId_Delete",
          "description": "The Delete operation deletes the specified message.",
          "parameters": [
            {
              "$ref": "#/parameters/PopReceipt"
            },
            {
              "$ref": "#/parameters/Timeout"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content",
              "headers": {
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "type": "string",
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "type": "string",
                  "description": "Indicates the version of the Queue service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "type": "string",
                  "format": "date-time-rfc1123",
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "type": "string"
                }
              },
              "schema": {
                "$ref": "#/definitions/StorageError"
              }
            }
          }
        },
        "parameters": []
      }
    },
    "definitions": {
      "AccessPolicy": {
        "type": "object",
        "required": [
          "Start",
          "Expiry",
          "Permission"
        ],
        "description": "An Access policy",
        "properties": {
          "Start": {
            "description": "the date-time the policy is active",
            "type": "string",
            "format": "date-time"
          },
          "Expiry": {
            "description": "the date-time the policy expires",
            "type": "string",
            "format": "date-time"
          },
          "Permission": {
            "description": "the permissions for the acl policy",
            "type": "string"
          }
        }
      },
      "ListQueuesSegmentResponse": {
        "xml": {
          "name": "EnumerationResults"
        },
        "description": "The object returned when calling List Queues on a Queue Service.",
        "type": "object",
        "required": [
          "ServiceEndpoint",
          "Prefix",
          "MaxResults",
          "NextMarker"
        ],
        "properties": {
          "ServiceEndpoint": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "Prefix": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          },
          "MaxResults": {
            "type": "integer"
          },
          "QueueItems": {
            "xml": {
              "wrapped": true,
              "name": "Queues"
            },
            "type": "array",
            "items": {
              "$ref": "#/definitions/QueueItem"
            }
          },
          "NextMarker": {
            "type": "string"
          }
        }
      },
      "CorsRule": {
        "description": "CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain",
        "type": "object",
        "required": [
          "AllowedOrigins",
          "AllowedMethods",
          "AllowedHeaders",
          "ExposedHeaders",
          "MaxAgeInSeconds"
        ],
        "properties": {
          "AllowedOrigins": {
            "description": "The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS.",
            "type": "string"
          },
          "AllowedMethods": {
            "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated)",
            "type": "string"
          },
          "AllowedHeaders": {
            "description": "the request headers that the origin domain may specify on the CORS request.",
            "type": "string"
          },
          "ExposedHeaders": {
            "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer",
            "type": "string"
          },
          "MaxAgeInSeconds": {
            "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "ErrorCode": {
        "description": "Error codes returned by the service",
        "type": "string",
        "enum": [
          "AccountAlreadyExists",
          "AccountBeingCreated",
          "AccountIsDisabled",
          "AuthenticationFailed",
          "AuthorizationFailure",
          "ConditionHeadersNotSupported",
          "ConditionNotMet",
          "EmptyMetadataKey",
          "InsufficientAccountPermissions",
          "InternalError",
          "InvalidAuthenticationInfo",
          "InvalidHeaderValue",
          "InvalidHttpVerb",
          "InvalidInput",
          "InvalidMd5",
          "InvalidMetadata",
          "InvalidQueryParameterValue",
          "InvalidRange",
          "InvalidResourceName",
          "InvalidUri",
          "InvalidXmlDocument",
          "InvalidXmlNodeValue",
          "Md5Mismatch",
          "MetadataTooLarge",
          "MissingContentLengthHeader",
          "MissingRequiredQueryParameter",
          "MissingRequiredHeader",
          "MissingRequiredXmlNode",
          "MultipleConditionHeadersNotSupported",
          "OperationTimedOut",
          "OutOfRangeInput",
          "OutOfRangeQueryParameterValue",
          "RequestBodyTooLarge",
          "ResourceTypeMismatch",
          "RequestUrlFailedToParse",
          "ResourceAlreadyExists",
          "ResourceNotFound",
          "ServerBusy",
          "UnsupportedHeader",
          "UnsupportedXmlNode",
          "UnsupportedQueryParameter",
          "UnsupportedHttpVerb",
          "InvalidMarker",
          "MessageNotFound",
          "MessageTooLarge",
          "PopReceiptMismatch",
          "QueueAlreadyExists",
          "QueueBeingDeleted",
          "QueueDisabled",
          "QueueNotEmpty",
          "QueueNotFound"
        ],
        "x-ms-enum": {
          "name": "StorageErrorCode",
          "modelAsString": true
        }
      },
      "GeoReplication": {
        "type": "object",
        "required": [
          "Status",
          "LastSyncTime"
        ],
        "properties": {
          "Status": {
            "description": "The status of the secondary location",
            "type": "string",
            "enum": [
              "live",
              "bootstrap",
              "unavailable"
            ],
            "x-ms-enum": {
              "name": "GeoReplicationStatusType",
              "modelAsString": true
            }
          },
          "LastSyncTime": {
            "description": "A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads.",
            "type": "string",
            "format": "date-time-rfc1123"
          }
        }
      },
      "Logging": {
        "description": "Azure Analytics Logging settings.",
        "type": "object",
        "required": [
          "Version",
          "Delete",
          "Read",
          "Write",
          "RetentionPolicy"
        ],
        "properties": {
          "Version": {
            "description": "The version of Storage Analytics to configure.",
            "type": "string"
          },
          "Delete": {
            "description": "Indicates whether all delete requests should be logged.",
            "type": "boolean"
          },
          "Read": {
            "description": "Indicates whether all read requests should be logged.",
            "type": "boolean"
          },
          "Write": {
            "description": "Indicates whether all write requests should be logged.",
            "type": "boolean"
          },
          "RetentionPolicy": {
            "$ref": "#/definitions/RetentionPolicy"
          }
        }
      },
      "Metadata": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "StorageError": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          }
        }
      },
      "Metrics": {
        "description": "",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Version": {
            "description": "The version of Storage Analytics to configure.",
            "type": "string"
          },
          "Enabled": {
            "description": "Indicates whether metrics are enabled for the Queue service.",
            "type": "boolean"
          },
          "IncludeAPIs": {
            "description": "Indicates whether metrics should generate summary statistics for called API operations.",
            "type": "boolean"
          },
          "RetentionPolicy": {
            "$ref": "#/definitions/RetentionPolicy"
          }
        }
      },
      "QueueItem": {
        "description": "An Azure Storage Queue.",
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "type": "string",
            "description": "The name of the Queue."
          },
          "Metadata": {
            "$ref": "#/definitions/Metadata"
          }
        },
        "xml": {
          "name": "Queue"
        }
      },
      "QueueMessage": {
        "description": "A Message object which can be stored in a Queue",
        "type": "object",
        "required": [
          "MessageText"
        ],
        "properties": {
          "MessageText": {
            "type": "string",
            "description": "The content of the message"
          }
        }
      },
      "DequeuedMessageItem": {
        "description": "The object returned in the QueueMessageList array when calling Get Messages on a Queue.",
        "type": "object",
        "required": [
          "MessageId",
          "InsertionTime",
          "ExpirationTime",
          "PopReceipt",
          "TimeNextVisible",
          "DequeueCount",
          "MessageText"
        ],
        "properties": {
          "MessageId": {
            "type": "string",
            "description": "The Id of the Message."
          },
          "InsertionTime": {
            "type": "string",
            "format": "date-time-rfc1123",
            "description": "The time the Message was inserted into the Queue."
          },
          "ExpirationTime": {
            "type": "string",
            "format": "date-time-rfc1123",
            "description": "The time that the Message will expire and be automatically deleted."
          },
          "PopReceipt": {
            "type": "string",
            "description": "This value is required to delete the Message. If deletion fails using this popreceipt then the message has been dequeued by another client."
          },
          "TimeNextVisible": {
            "type": "string",
            "format": "date-time-rfc1123",
            "description": "The time that the message will again become visible in the Queue."
          },
          "DequeueCount": {
            "type": "integer",
            "format": "int64",
            "description": "The number of times the message has been dequeued."
          },
          "MessageText": {
            "type": "string",
            "description": "The content of the Message."
          }
        },
        "xml": {
          "wrapped": true,
          "name": "QueueMessage"
        }
      },
      "PeekedMessageItem": {
        "description": "The object returned in the QueueMessageList array when calling Peek Messages on a Queue",
        "type": "object",
        "required": [
          "MessageId",
          "InsertionTime",
          "ExpirationTime",
          "DequeueCount",
          "MessageText"
        ],
        "properties": {
          "MessageId": {
            "type": "string",
            "description": "The Id of the Message."
          },
          "InsertionTime": {
            "type": "string",
            "format": "date-time-rfc1123",
            "description": "The time the Message was inserted into the Queue."
          },
          "ExpirationTime": {
            "type": "string",
            "format": "date-time-rfc1123",
            "description": "The time that the Message will expire and be automatically deleted."
          },
          "DequeueCount": {
            "type": "integer",
            "format": "int64",
            "description": "The number of times the message has been dequeued."
          },
          "MessageText": {
            "type": "string",
            "description": "The content of the Message."
          }
        },
        "xml": {
          "wrapped": true,
          "name": "QueueMessage"
        }
      },
      "EnqueuedMessage": {
        "description": "The object returned in the QueueMessageList array when calling Put Message on a Queue",
        "type": "object",
        "required": [
          "MessageId",
          "InsertionTime",
          "ExpirationTime",
          "PopReceipt",
          "TimeNextVisible"
        ],
        "properties": {
          "MessageId": {
            "type": "string",
            "description": "The Id of the Message."
          },
          "InsertionTime": {
            "type": "string",
            "format": "date-time-rfc1123",
            "description": "The time the Message was inserted into the Queue."
          },
          "ExpirationTime": {
            "type": "string",
            "format": "date-time-rfc1123",
            "description": "The time that the Message will expire and be automatically deleted."
          },
          "PopReceipt": {
            "type": "string",
            "description": "This value is required to delete the Message. If deletion fails using this popreceipt then the message has been dequeued by another client."
          },
          "TimeNextVisible": {
            "type": "string",
            "format": "date-time-rfc1123",
            "description": "The time that the message will again become visible in the Queue."
          }
        },
        "xml": {
          "wrapped": true,
          "name": "QueueMessage"
        }
      },
      "DequeuedMessagesList": {
        "description": "The object returned when calling Get Messages on a Queue",
        "type": "array",
        "items": {
          "$ref": "#/definitions/DequeuedMessageItem",
          "xml": {
            "name": "QueueMessage"
          }
        },
        "xml": {
          "wrapped": true,
          "name": "QueueMessagesList"
        }
      },
      "PeekedMessagesList": {
        "description": "The object returned when calling Peek Messages on a Queue",
        "type": "array",
        "items": {
          "$ref": "#/definitions/PeekedMessageItem",
          "xml": {
            "name": "QueueMessage"
          }
        },
        "xml": {
          "wrapped": true,
          "name": "QueueMessagesList"
        }
      },
      "EnqueuedMessageList": {
        "description": "The object returned when calling Put Message on a Queue",
        "type": "array",
        "items": {
          "$ref": "#/definitions/EnqueuedMessage",
          "xml": {
            "name": "QueueMessage"
          }
        },
        "xml": {
          "wrapped": true,
          "name": "QueueMessagesList"
        }
      },
      "RetentionPolicy": {
        "description": "the retention policy",
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "description": "Indicates whether a retention policy is enabled for the storage service",
            "type": "boolean"
          },
          "Days": {
            "description": "Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted",
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "SignedIdentifier": {
        "description": "signed identifier",
        "type": "object",
        "required": [
          "Id",
          "AccessPolicy"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "description": "a unique id"
          },
          "AccessPolicy": {
            "description": "The access policy",
            "$ref": "#/definitions/AccessPolicy"
          }
        }
      },
      "SignedIdentifiers": {
        "description": "a collection of signed identifiers",
        "type": "array",
        "items": {
          "$ref": "#/definitions/SignedIdentifier",
          "xml": {
            "name": "SignedIdentifier"
          }
        },
        "xml": {
          "wrapped": true,
          "name": "SignedIdentifiers"
        }
      },
      "StorageServiceProperties": {
        "description": "Storage Service Properties.",
        "type": "object",
        "properties": {
          "Logging": {
            "description": "Azure Analytics Logging settings",
            "$ref": "#/definitions/Logging"
          },
          "HourMetrics": {
            "description": "A summary of request statistics grouped by API in hourly aggregates for queues",
            "$ref": "#/definitions/Metrics"
          },
          "MinuteMetrics": {
            "description": "a summary of request statistics grouped by API in minute aggregates for queues",
            "$ref": "#/definitions/Metrics"
          },
          "Cors": {
            "description": "The set of CORS rules.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/CorsRule",
              "xml": {
                "name": "CorsRule"
              }
            },
            "xml": {
              "wrapped": true
            }
          }
        }
      },
      "StorageServiceStats": {
        "description": "Stats for the storage service.",
        "type": "object",
        "properties": {
          "GeoReplication": {
            "description": "Geo-Replication information for the Secondary Storage Service",
            "$ref": "#/definitions/GeoReplication"
          }
        }
      }
    },
    "parameters": {
      "Url": {
        "name": "url",
        "description": "The URL of the service account, queue or message that is the targe of the desired operation.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      },
      "ApiVersionParameter": {
        "name": "x-ms-version",
        "x-ms-client-name": "version",
        "in": "header",
        "required": true,
        "type": "string",
        "description": "Specifies the version of the operation to use for this request.",
        "enum": [
          "2018-03-28"
        ]
      },
      "Body": {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": {
          "type": "object",
          "format": "file"
        },
        "x-ms-parameter-location": "method",
        "description": "Initial data"
      },
      "QueueAcl": {
        "name": "queueAcl",
        "in": "body",
        "schema": {
          "$ref": "#/definitions/SignedIdentifiers"
        },
        "x-ms-parameter-location": "method",
        "description": "the acls for the queue"
      },
      "ClientRequestId": {
        "name": "x-ms-client-request-id",
        "x-ms-client-name": "requestId",
        "in": "header",
        "required": false,
        "type": "string",
        "x-ms-parameter-location": "method",
        "description": "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
      },
      "ContentLength": {
        "name": "Content-Length",
        "in": "header",
        "required": true,
        "type": "integer",
        "format": "int64",
        "x-ms-parameter-location": "method",
        "description": "The length of the request."
      },
      "ListQueuesInclude": {
        "name": "include", 
        "in": "query", 
        "required": false, 
        "type": "array",
        "collectionFormat": "csv",
        "items": {
        "type": "string", 
        "enum": [ 
          "metadata" 
        ], 
        "x-ms-enum": { 
          "name": "ListQueuesIncludeType", 
          "modelAsString": false 
          }
        },
        "x-ms-parameter-location": "method",
        "description": "Include this parameter to specify that the queues's metadata be returned as part of the response body."
      },
      "Marker": {
        "name": "marker",
        "in": "query",
        "required": false,
        "type": "string",
        "description": "A string value that identifies the portion of the list of queues to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all queues remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.",
        "x-ms-parameter-location": "method"
      },
      "MaxResults": {
        "name": "maxresults",
        "in": "query",
        "required": false,
        "type": "integer",
        "minimum": 1,
        "x-ms-parameter-location": "method",
        "description": "Specifies the maximum number of queues to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000."
      },
      "MessageId": {
        "name": "messageid",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method",
        "description": "The container name."
      },
      "MessageTTL": {
        "name": "messagettl",
        "x-ms-client-name": "MessageTimeToLive",
        "in": "query",
        "required": false,
        "type": "integer",
        "minimum": -1,
        "x-ms-parameter-location": "method",
        "description": "Optional. Specifies the time-to-live interval for the message, in seconds. Prior to version 2017-07-29, the maximum time-to-live allowed is 7 days. For version 2017-07-29 or later, the maximum time-to-live can be any positive number, as well as -1 indicating that the message does not expire. If this parameter is omitted, the default time-to-live is 7 days."
      },
      "Metadata": {
        "name": "x-ms-meta",
        "x-ms-client-name": "metadata",
        "in": "header",
        "required": false,
        "type": "string",
        "x-ms-parameter-location": "method",
        "description": "Optional. Include this parameter to specify that the queue's metadata be returned as part of the response body. Note that metadata requested with this parameter must be stored in accordance with the naming restrictions imposed by the 2009-09-19 version of the Queue service. Beginning with this version, all metadata names must adhere to the naming conventions for C# identifiers.",
        "x-ms-header-collection-prefix": "x-ms-meta-"
      },
      "NumOfMessages": {
        "name": "numofmessages",
        "x-ms-client-name": "numberOfMessages",
        "in": "query",
        "required": false,
        "type": "integer",
        "minimum": 1,
        "x-ms-parameter-location": "method",
        "description": "Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation."
      },
      "PopReceipt": {
        "name": "popreceipt",
        "x-ms-client-name": "popReceipt",
        "in": "query",
        "required": true,
        "x-ms-parameter-location": "method",
        "description": "Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.",
        "type": "string"
      },
      "Prefix": {
        "name": "prefix",
        "in": "query",
        "required": false,
        "type": "string",
        "description": "Filters the results to return only queues whose name begins with the specified prefix.",
        "x-ms-parameter-location": "method"
      },
      "QueueMessage": {
        "name": "QueueMessage",
        "in": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/QueueMessage"
        },
        "x-ms-parameter-location": "method",
        "description": "A Message object which can be stored in a Queue"
      },
      "QueueName": {
        "name": "queueName",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method",
        "description": "The queue name."
      },
      "StorageServiceProperties": {
        "name": "StorageServiceProperties",
        "in": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/StorageServiceProperties"
        },
        "x-ms-parameter-location": "method",
        "description": "The StorageService properties."
      },
      "Timeout": {
        "name": "timeout",
        "in": "query",
        "required": false,
        "type": "integer",
        "minimum": 0,
        "x-ms-parameter-location": "method",
        "description": "The The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting Timeouts for Queue Service Operations.</a>"
      },
      "VisibilityTimeout": {
        "name": "visibilitytimeout",
        "in": "query",
        "required": false,
        "type": "integer",
        "minimum": 0,
        "maximum": 604800,
        "x-ms-parameter-location": "method",
        "description": "Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time."
      },
      "VisibilityTimeoutRequired": {
        "name": "visibilitytimeout",
        "in": "query",
        "required": true,
        "type": "integer",
        "minimum": 0,
        "maximum": 604800,
        "x-ms-parameter-location": "method",
        "description": "Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time."
      }
    }
  }