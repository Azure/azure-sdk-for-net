// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Storage.Models
{
    /// <summary> Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing. </summary>
    public partial class StorageRoutingPreference
    {
        /// <summary> Initializes a new instance of <see cref="StorageRoutingPreference"/>. </summary>
        public StorageRoutingPreference()
        {
        }

        /// <summary> Initializes a new instance of <see cref="StorageRoutingPreference"/>. </summary>
        /// <param name="routingChoice"> Routing Choice defines the kind of network routing opted by the user. </param>
        /// <param name="isMicrosoftEndpointsPublished"> A boolean flag which indicates whether microsoft routing storage endpoints are to be published. </param>
        /// <param name="isInternetEndpointsPublished"> A boolean flag which indicates whether internet routing storage endpoints are to be published. </param>
        internal StorageRoutingPreference(StorageRoutingChoice? routingChoice, bool? isMicrosoftEndpointsPublished, bool? isInternetEndpointsPublished)
        {
            RoutingChoice = routingChoice;
            IsMicrosoftEndpointsPublished = isMicrosoftEndpointsPublished;
            IsInternetEndpointsPublished = isInternetEndpointsPublished;
        }

        /// <summary> Routing Choice defines the kind of network routing opted by the user. </summary>
        public StorageRoutingChoice? RoutingChoice { get; set; }
        /// <summary> A boolean flag which indicates whether microsoft routing storage endpoints are to be published. </summary>
        public bool? IsMicrosoftEndpointsPublished { get; set; }
        /// <summary> A boolean flag which indicates whether internet routing storage endpoints are to be published. </summary>
        public bool? IsInternetEndpointsPublished { get; set; }
    }
}
