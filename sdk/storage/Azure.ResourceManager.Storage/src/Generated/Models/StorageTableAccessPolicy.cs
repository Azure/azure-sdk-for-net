// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Storage.Models
{
    /// <summary> Table Access Policy Properties Object. </summary>
    public partial class StorageTableAccessPolicy
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="StorageTableAccessPolicy"/>. </summary>
        /// <param name="permission"> Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="permission"/> is null. </exception>
        public StorageTableAccessPolicy(string permission)
        {
            Argument.AssertNotNull(permission, nameof(permission));

            Permission = permission;
        }

        /// <summary> Initializes a new instance of <see cref="StorageTableAccessPolicy"/>. </summary>
        /// <param name="startOn"> Start time of the access policy. </param>
        /// <param name="expireOn"> Expiry time of the access policy. </param>
        /// <param name="permission"> Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal StorageTableAccessPolicy(DateTimeOffset? startOn, DateTimeOffset? expireOn, string permission, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            StartOn = startOn;
            ExpireOn = expireOn;
            Permission = permission;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="StorageTableAccessPolicy"/> for deserialization. </summary>
        internal StorageTableAccessPolicy()
        {
        }

        /// <summary> Start time of the access policy. </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary> Expiry time of the access policy. </summary>
        public DateTimeOffset? ExpireOn { get; set; }
        /// <summary> Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'. </summary>
        public string Permission { get; set; }
    }
}
