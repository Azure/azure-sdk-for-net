// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Storage.Models
{
    /// <summary> The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). </summary>
    public readonly partial struct AccountSasSignedService : IEquatable<AccountSasSignedService>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AccountSasSignedService"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AccountSasSignedService(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string BValue = "b";
        private const string QValue = "q";
        private const string TValue = "t";
        private const string FValue = "f";

        /// <summary> b. </summary>
        public static AccountSasSignedService B { get; } = new AccountSasSignedService(BValue);
        /// <summary> q. </summary>
        public static AccountSasSignedService Q { get; } = new AccountSasSignedService(QValue);
        /// <summary> t. </summary>
        public static AccountSasSignedService T { get; } = new AccountSasSignedService(TValue);
        /// <summary> f. </summary>
        public static AccountSasSignedService F { get; } = new AccountSasSignedService(FValue);
        /// <summary> Determines if two <see cref="AccountSasSignedService"/> values are the same. </summary>
        public static bool operator ==(AccountSasSignedService left, AccountSasSignedService right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AccountSasSignedService"/> values are not the same. </summary>
        public static bool operator !=(AccountSasSignedService left, AccountSasSignedService right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AccountSasSignedService"/>. </summary>
        public static implicit operator AccountSasSignedService(string value) => new AccountSasSignedService(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AccountSasSignedService other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AccountSasSignedService other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
