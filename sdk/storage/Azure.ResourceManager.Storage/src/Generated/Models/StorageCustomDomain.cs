// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.Storage.Models
{
    /// <summary> The custom domain assigned to this storage account. This can be set via Update. </summary>
    public partial class StorageCustomDomain
    {
        /// <summary> Initializes a new instance of <see cref="StorageCustomDomain"/>. </summary>
        /// <param name="name"> Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public StorageCustomDomain(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="StorageCustomDomain"/>. </summary>
        /// <param name="name"> Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source. </param>
        /// <param name="isUseSubDomainNameEnabled"> Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates. </param>
        internal StorageCustomDomain(string name, bool? isUseSubDomainNameEnabled)
        {
            Name = name;
            IsUseSubDomainNameEnabled = isUseSubDomainNameEnabled;
        }

        /// <summary> Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source. </summary>
        public string Name { get; set; }
        /// <summary> Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates. </summary>
        public bool? IsUseSubDomainNameEnabled { get; set; }
    }
}
