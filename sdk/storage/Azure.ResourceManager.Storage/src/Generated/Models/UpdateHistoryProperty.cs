// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Storage.Models
{
    /// <summary> An update history of the ImmutabilityPolicy of a blob container. </summary>
    public partial class UpdateHistoryProperty
    {
        /// <summary> Initializes a new instance of UpdateHistoryProperty. </summary>
        internal UpdateHistoryProperty()
        {
        }

        /// <summary> Initializes a new instance of UpdateHistoryProperty. </summary>
        /// <param name="update"> The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend. </param>
        /// <param name="immutabilityPeriodSinceCreationInDays"> The immutability period for the blobs in the container since the policy creation, in days. </param>
        /// <param name="timestamp"> Returns the date and time the ImmutabilityPolicy was updated. </param>
        /// <param name="objectIdentifier"> Returns the Object ID of the user who updated the ImmutabilityPolicy. </param>
        /// <param name="tenantId"> Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy. </param>
        /// <param name="upn"> Returns the User Principal Name of the user who updated the ImmutabilityPolicy. </param>
        internal UpdateHistoryProperty(ImmutabilityPolicyUpdateType? update, int? immutabilityPeriodSinceCreationInDays, DateTimeOffset? timestamp, string objectIdentifier, string tenantId, string upn)
        {
            Update = update;
            ImmutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
            Timestamp = timestamp;
            ObjectIdentifier = objectIdentifier;
            TenantId = tenantId;
            Upn = upn;
        }

        /// <summary> The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend. </summary>
        public ImmutabilityPolicyUpdateType? Update { get; }
        /// <summary> The immutability period for the blobs in the container since the policy creation, in days. </summary>
        public int? ImmutabilityPeriodSinceCreationInDays { get; }
        /// <summary> Returns the date and time the ImmutabilityPolicy was updated. </summary>
        public DateTimeOffset? Timestamp { get; }
        /// <summary> Returns the Object ID of the user who updated the ImmutabilityPolicy. </summary>
        public string ObjectIdentifier { get; }
        /// <summary> Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy. </summary>
        public string TenantId { get; }
        /// <summary> Returns the User Principal Name of the user who updated the ImmutabilityPolicy. </summary>
        public string Upn { get; }
    }
}
