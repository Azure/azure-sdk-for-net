// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Storage.Files.DataLake.Models
{
    internal partial class SetAccessControlRecursiveResponse
    {
        internal static SetAccessControlRecursiveResponse DeserializeSetAccessControlRecursiveResponse(JsonElement element)
        {
            Optional<int> directoriesSuccessful = default;
            Optional<int> filesSuccessful = default;
            Optional<int> failureCount = default;
            Optional<IReadOnlyList<AclFailedEntry>> failedEntries = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("directoriesSuccessful"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    directoriesSuccessful = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("filesSuccessful"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    filesSuccessful = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("failureCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    failureCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("failedEntries"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AclFailedEntry> array = new List<AclFailedEntry>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AclFailedEntry.DeserializeAclFailedEntry(item));
                    }
                    failedEntries = array;
                    continue;
                }
            }
            return new SetAccessControlRecursiveResponse(Optional.ToNullable(directoriesSuccessful), Optional.ToNullable(filesSuccessful), Optional.ToNullable(failureCount), Optional.ToList(failedEntries));
        }
    }
}
