// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Storage.Files.DataLake.Models
{
    internal partial class Path
    {
        internal static Path DeserializePath(JsonElement element)
        {
            Optional<string> name = default;
            Optional<bool> isDirectory = default;
            Optional<string> lastModified = default;
            Optional<string> eTag = default;
            Optional<long> contentLength = default;
            Optional<string> owner = default;
            Optional<string> group = default;
            Optional<string> permissions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isDirectory"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isDirectory = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("lastModified"))
                {
                    lastModified = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eTag"))
                {
                    eTag = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("contentLength"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    contentLength = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("owner"))
                {
                    owner = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("group"))
                {
                    group = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("permissions"))
                {
                    permissions = property.Value.GetString();
                    continue;
                }
            }
            return new Path(name.Value, Optional.ToNullable(isDirectory), lastModified.Value, eTag.Value, Optional.ToNullable(contentLength), owner.Value, group.Value, permissions.Value);
        }
    }
}
