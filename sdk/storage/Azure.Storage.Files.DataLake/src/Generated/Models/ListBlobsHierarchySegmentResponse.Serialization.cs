// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Storage.Files.DataLake.Models
{
    internal partial class ListBlobsHierarchySegmentResponse
    {
        internal static ListBlobsHierarchySegmentResponse DeserializeListBlobsHierarchySegmentResponse(JsonElement element)
        {
            string serviceEndpoint = default;
            string containerName = default;
            Optional<string> prefix = default;
            Optional<string> marker = default;
            Optional<int> maxResults = default;
            Optional<string> delimiter = default;
            BlobHierarchyListSegment segment = default;
            Optional<string> nextMarker = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("ServiceEndpoint"))
                {
                    serviceEndpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ContainerName"))
                {
                    containerName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Prefix"))
                {
                    prefix = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Marker"))
                {
                    marker = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("MaxResults"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxResults = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("Delimiter"))
                {
                    delimiter = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Segment"))
                {
                    segment = BlobHierarchyListSegment.DeserializeBlobHierarchyListSegment(property.Value);
                    continue;
                }
                if (property.NameEquals("NextMarker"))
                {
                    nextMarker = property.Value.GetString();
                    continue;
                }
            }
            return new ListBlobsHierarchySegmentResponse(serviceEndpoint, containerName, prefix.Value, marker.Value, Optional.ToNullable(maxResults), delimiter.Value, segment, nextMarker.Value);
        }
    }
}
