// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Storage.Files.DataLake.Models
{
    internal partial class BlobHierarchyListSegment
    {
        internal static BlobHierarchyListSegment DeserializeBlobHierarchyListSegment(JsonElement element)
        {
            Optional<IReadOnlyList<BlobPrefix>> blobPrefixes = default;
            IReadOnlyList<BlobItemInternal> blobItems = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("BlobPrefixes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<BlobPrefix> array = new List<BlobPrefix>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BlobPrefix.DeserializeBlobPrefix(item));
                    }
                    blobPrefixes = array;
                    continue;
                }
                if (property.NameEquals("BlobItems"))
                {
                    List<BlobItemInternal> array = new List<BlobItemInternal>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BlobItemInternal.DeserializeBlobItemInternal(item));
                    }
                    blobItems = array;
                    continue;
                }
            }
            return new BlobHierarchyListSegment(Optional.ToList(blobPrefixes), blobItems);
        }
    }
}
