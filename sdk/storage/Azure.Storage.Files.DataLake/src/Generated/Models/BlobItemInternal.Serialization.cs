// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Storage.Files.DataLake.Models
{
    internal partial class BlobItemInternal
    {
        internal static BlobItemInternal DeserializeBlobItemInternal(JsonElement element)
        {
            string name = default;
            bool deleted = default;
            string snapshot = default;
            Optional<string> versionId = default;
            Optional<bool> isCurrentVersion = default;
            BlobPropertiesInternal properties = default;
            Optional<string> deletionId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("Name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Deleted"))
                {
                    deleted = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("Snapshot"))
                {
                    snapshot = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("VersionId"))
                {
                    versionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("IsCurrentVersion"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isCurrentVersion = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("Properties"))
                {
                    properties = BlobPropertiesInternal.DeserializeBlobPropertiesInternal(property.Value);
                    continue;
                }
                if (property.NameEquals("DeletionId"))
                {
                    deletionId = property.Value.GetString();
                    continue;
                }
            }
            return new BlobItemInternal(name, deleted, snapshot, versionId.Value, Optional.ToNullable(isCurrentVersion), properties, deletionId.Value);
        }
    }
}
