// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Xml.Linq;
using Azure.Core;

namespace Azure.Storage.Files.Shares.Models
{
    public partial class ShareFileHandle
    {
        internal static ShareFileHandle DeserializeShareFileHandle(XElement element)
        {
            string handleId = default;
            string path = default;
            string fileId = default;
            string parentId = default;
            string sessionId = default;
            string clientIp = default;
            DateTimeOffset? openedOn = default;
            DateTimeOffset? lastReconnectedOn = default;
            if (element.Element("HandleId") is XElement handleIdElement)
            {
                handleId = (string)handleIdElement;
            }
            if (element.Element("Path") is XElement pathElement)
            {
                path = (string)pathElement;
            }
            if (element.Element("FileId") is XElement fileIdElement)
            {
                fileId = (string)fileIdElement;
            }
            if (element.Element("ParentId") is XElement parentIdElement)
            {
                parentId = (string)parentIdElement;
            }
            if (element.Element("SessionId") is XElement sessionIdElement)
            {
                sessionId = (string)sessionIdElement;
            }
            if (element.Element("ClientIp") is XElement clientIpElement)
            {
                clientIp = (string)clientIpElement;
            }
            if (element.Element("OpenTime") is XElement openTimeElement)
            {
                openedOn = openTimeElement.GetDateTimeOffsetValue("R");
            }
            if (element.Element("LastReconnectTime") is XElement lastReconnectTimeElement)
            {
                lastReconnectedOn = lastReconnectTimeElement.GetDateTimeOffsetValue("R");
            }
            return new ShareFileHandle(handleId, path, fileId, parentId, sessionId, clientIp, openedOn, lastReconnectedOn);
        }
    }
}
