// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Storage.Files.Shares.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ShareModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.ShareServiceUsageProperties"/>. </summary>
        /// <param name="accountLimits"> Information about the limits on this storage account. </param>
        /// <param name="shareLimits"> Information about the limits on shares in this storage account. </param>
        /// <param name="shareRecomendations"> Information about the recommended limits to set on shares in this storage account. </param>
        /// <param name="burstingConstants"> Information about the busting settings on this storage account. </param>
        /// <param name="accountUsage"> Information about the account usage storage account. </param>
        /// <returns> A new <see cref="Models.ShareServiceUsageProperties"/> instance for mocking. </returns>
        public static ShareServiceUsageProperties ShareServiceUsageProperties(ShareAccountLimits accountLimits = null, ShareAccountShareLimits shareLimits = null, ShareAccountShareRecommendations shareRecomendations = null, ShareAccountBurstingConstants burstingConstants = null, FileServiceUsageAccountUsage accountUsage = null)
        {
            return new ShareServiceUsageProperties(accountLimits, shareLimits, shareRecomendations, burstingConstants, accountUsage);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ShareAccountLimits"/>. </summary>
        /// <param name="maxFileShares"></param>
        /// <param name="maxProvisionedStorageGiB"></param>
        /// <param name="maxProvisionedIops"></param>
        /// <param name="maxProvisionedBandwidthMiBPerSec"></param>
        /// <returns> A new <see cref="Models.ShareAccountLimits"/> instance for mocking. </returns>
        public static ShareAccountLimits ShareAccountLimits(long? maxFileShares = null, long? maxProvisionedStorageGiB = null, long? maxProvisionedIops = null, long? maxProvisionedBandwidthMiBPerSec = null)
        {
            return new ShareAccountLimits(maxFileShares, maxProvisionedStorageGiB, maxProvisionedIops, maxProvisionedBandwidthMiBPerSec);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ShareAccountShareLimits"/>. </summary>
        /// <param name="minProvisionedStorageGiB"></param>
        /// <param name="maxProvisionedStorageGiB"></param>
        /// <param name="minProvisionedIops"></param>
        /// <param name="maxProvisionedIops"></param>
        /// <param name="minProvisionedBandwidthMiBPerSec"></param>
        /// <param name="maxProvisionedBandwidthMiBPerSec"></param>
        /// <returns> A new <see cref="Models.ShareAccountShareLimits"/> instance for mocking. </returns>
        public static ShareAccountShareLimits ShareAccountShareLimits(long? minProvisionedStorageGiB = null, long? maxProvisionedStorageGiB = null, long? minProvisionedIops = null, long? maxProvisionedIops = null, long? minProvisionedBandwidthMiBPerSec = null, long? maxProvisionedBandwidthMiBPerSec = null)
        {
            return new ShareAccountShareLimits(
                minProvisionedStorageGiB,
                maxProvisionedStorageGiB,
                minProvisionedIops,
                maxProvisionedIops,
                minProvisionedBandwidthMiBPerSec,
                maxProvisionedBandwidthMiBPerSec);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ShareAccountShareRecommendations"/>. </summary>
        /// <param name="baseIops"></param>
        /// <param name="ioScalar"></param>
        /// <param name="baseBandwidthMiBPerSec"></param>
        /// <param name="bandwidthScalar"></param>
        /// <returns> A new <see cref="Models.ShareAccountShareRecommendations"/> instance for mocking. </returns>
        public static ShareAccountShareRecommendations ShareAccountShareRecommendations(long? baseIops = null, double? ioScalar = null, long? baseBandwidthMiBPerSec = null, double? bandwidthScalar = null)
        {
            return new ShareAccountShareRecommendations(baseIops, ioScalar, baseBandwidthMiBPerSec, bandwidthScalar);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ShareAccountBurstingConstants"/>. </summary>
        /// <param name="burstFloorIops"></param>
        /// <param name="burstIOScalar"></param>
        /// <param name="burstTimeframeSeconds"></param>
        /// <returns> A new <see cref="Models.ShareAccountBurstingConstants"/> instance for mocking. </returns>
        public static ShareAccountBurstingConstants ShareAccountBurstingConstants(long? burstFloorIops = null, double? burstIOScalar = null, long? burstTimeframeSeconds = null)
        {
            return new ShareAccountBurstingConstants(burstFloorIops, burstIOScalar, burstTimeframeSeconds);
        }

        /// <summary> Initializes a new instance of <see cref="Models.FileServiceUsageAccountUsage"/>. </summary>
        /// <param name="liveShares"></param>
        /// <param name="softDeletedShares"></param>
        /// <returns> A new <see cref="Models.FileServiceUsageAccountUsage"/> instance for mocking. </returns>
        public static FileServiceUsageAccountUsage FileServiceUsageAccountUsage(ShareAccountSharesStats liveShares = null, ShareAccountSharesStats softDeletedShares = null)
        {
            return new FileServiceUsageAccountUsage(liveShares, softDeletedShares);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ShareAccountSharesStats"/>. </summary>
        /// <param name="fileShareCount"></param>
        /// <param name="provisionedStorageGiB"></param>
        /// <param name="provisionedIops"></param>
        /// <param name="provisionedBandwidthMiBPerSec"></param>
        /// <returns> A new <see cref="Models.ShareAccountSharesStats"/> instance for mocking. </returns>
        public static ShareAccountSharesStats ShareAccountSharesStats(long? fileShareCount = null, long? provisionedStorageGiB = null, long? provisionedIops = null, long? provisionedBandwidthMiBPerSec = null)
        {
            return new ShareAccountSharesStats(fileShareCount, provisionedStorageGiB, provisionedIops, provisionedBandwidthMiBPerSec);
        }
    }
}
