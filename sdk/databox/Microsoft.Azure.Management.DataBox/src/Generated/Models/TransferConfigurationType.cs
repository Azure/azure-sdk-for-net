// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TransferConfigurationType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TransferConfigurationType
    {
        /// <summary>
        /// Transfer all the data.
        /// </summary>
        [EnumMember(Value = "TransferAll")]
        TransferAll,
        /// <summary>
        /// Transfer using filter.
        /// </summary>
        [EnumMember(Value = "TransferUsingFilter")]
        TransferUsingFilter
    }
    internal static class TransferConfigurationTypeEnumExtension
    {
        internal static string ToSerializedValue(this TransferConfigurationType? value)
        {
            return value == null ? null : ((TransferConfigurationType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TransferConfigurationType value)
        {
            switch( value )
            {
                case TransferConfigurationType.TransferAll:
                    return "TransferAll";
                case TransferConfigurationType.TransferUsingFilter:
                    return "TransferUsingFilter";
            }
            return null;
        }

        internal static TransferConfigurationType? ParseTransferConfigurationType(this string value)
        {
            switch( value )
            {
                case "TransferAll":
                    return TransferConfigurationType.TransferAll;
                case "TransferUsingFilter":
                    return TransferConfigurationType.TransferUsingFilter;
            }
            return null;
        }
    }
}
