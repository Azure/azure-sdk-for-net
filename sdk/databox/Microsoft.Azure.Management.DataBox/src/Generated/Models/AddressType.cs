// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AddressType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AddressType
    {
        /// <summary>
        /// Address type not known.
        /// </summary>
        [EnumMember(Value = "None")]
        None,
        /// <summary>
        /// Residential Address.
        /// </summary>
        [EnumMember(Value = "Residential")]
        Residential,
        /// <summary>
        /// Commercial Address.
        /// </summary>
        [EnumMember(Value = "Commercial")]
        Commercial
    }
    internal static class AddressTypeEnumExtension
    {
        internal static string ToSerializedValue(this AddressType? value)
        {
            return value == null ? null : ((AddressType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AddressType value)
        {
            switch( value )
            {
                case AddressType.None:
                    return "None";
                case AddressType.Residential:
                    return "Residential";
                case AddressType.Commercial:
                    return "Commercial";
            }
            return null;
        }

        internal static AddressType? ParseAddressType(this string value)
        {
            switch( value )
            {
                case "None":
                    return AddressType.None;
                case "Residential":
                    return AddressType.Residential;
                case "Commercial":
                    return AddressType.Commercial;
            }
            return null;
        }
    }
}
