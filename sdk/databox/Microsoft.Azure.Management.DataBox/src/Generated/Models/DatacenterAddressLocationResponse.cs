// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Datacenter address for given storage location.
    /// </summary>
    [Newtonsoft.Json.JsonObject("DatacenterAddressLocation")]
    public partial class DatacenterAddressLocationResponse : DatacenterAddressResponse
    {
        /// <summary>
        /// Initializes a new instance of the DatacenterAddressLocationResponse
        /// class.
        /// </summary>
        public DatacenterAddressLocationResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatacenterAddressLocationResponse
        /// class.
        /// </summary>
        /// <param name="supportedCarriersForReturnShipment">List of supported
        /// carriers for return shipment.</param>
        /// <param name="dataCenterAzureLocation">Azure Location where the Data
        /// Center serves primarily.</param>
        /// <param name="contactPersonName">Contact person name</param>
        /// <param name="company">Company name</param>
        /// <param name="street1">Street address line 1</param>
        /// <param name="street2">Street address line 2</param>
        /// <param name="street3">Street address line 3</param>
        /// <param name="city">City name</param>
        /// <param name="state">name of the state</param>
        /// <param name="zip">Zip code</param>
        /// <param name="country">name of the country</param>
        /// <param name="phone">Phone number</param>
        /// <param name="phoneExtension">Phone extension</param>
        /// <param name="addressType">Address type</param>
        /// <param name="additionalShippingInformation">Special instruction for
        /// shipping</param>
        public DatacenterAddressLocationResponse(IList<string> supportedCarriersForReturnShipment = default(IList<string>), string dataCenterAzureLocation = default(string), string contactPersonName = default(string), string company = default(string), string street1 = default(string), string street2 = default(string), string street3 = default(string), string city = default(string), string state = default(string), string zip = default(string), string country = default(string), string phone = default(string), string phoneExtension = default(string), string addressType = default(string), string additionalShippingInformation = default(string))
            : base(supportedCarriersForReturnShipment, dataCenterAzureLocation)
        {
            ContactPersonName = contactPersonName;
            Company = company;
            Street1 = street1;
            Street2 = street2;
            Street3 = street3;
            City = city;
            State = state;
            Zip = zip;
            Country = country;
            Phone = phone;
            PhoneExtension = phoneExtension;
            AddressType = addressType;
            AdditionalShippingInformation = additionalShippingInformation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets contact person name
        /// </summary>
        [JsonProperty(PropertyName = "contactPersonName")]
        public string ContactPersonName { get; private set; }

        /// <summary>
        /// Gets company name
        /// </summary>
        [JsonProperty(PropertyName = "company")]
        public string Company { get; private set; }

        /// <summary>
        /// Gets street address line 1
        /// </summary>
        [JsonProperty(PropertyName = "street1")]
        public string Street1 { get; private set; }

        /// <summary>
        /// Gets street address line 2
        /// </summary>
        [JsonProperty(PropertyName = "street2")]
        public string Street2 { get; private set; }

        /// <summary>
        /// Gets street address line 3
        /// </summary>
        [JsonProperty(PropertyName = "street3")]
        public string Street3 { get; private set; }

        /// <summary>
        /// Gets city name
        /// </summary>
        [JsonProperty(PropertyName = "city")]
        public string City { get; private set; }

        /// <summary>
        /// Gets name of the state
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets zip code
        /// </summary>
        [JsonProperty(PropertyName = "zip")]
        public string Zip { get; private set; }

        /// <summary>
        /// Gets name of the country
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; private set; }

        /// <summary>
        /// Gets phone number
        /// </summary>
        [JsonProperty(PropertyName = "phone")]
        public string Phone { get; private set; }

        /// <summary>
        /// Gets phone extension
        /// </summary>
        [JsonProperty(PropertyName = "phoneExtension")]
        public string PhoneExtension { get; private set; }

        /// <summary>
        /// Gets address type
        /// </summary>
        [JsonProperty(PropertyName = "addressType")]
        public string AddressType { get; private set; }

        /// <summary>
        /// Gets special instruction for shipping
        /// </summary>
        [JsonProperty(PropertyName = "additionalShippingInformation")]
        public string AdditionalShippingInformation { get; private set; }

    }
}
