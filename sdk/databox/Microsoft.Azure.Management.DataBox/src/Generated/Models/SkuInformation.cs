// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Information of the sku.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SkuInformation
    {
        /// <summary>
        /// Initializes a new instance of the SkuInformation class.
        /// </summary>
        public SkuInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SkuInformation class.
        /// </summary>
        /// <param name="sku">The Sku.</param>
        /// <param name="enabled">The sku is enabled or not.</param>
        /// <param name="dataLocationToServiceLocationMap">The map of data
        /// location to service location.</param>
        /// <param name="capacity">Capacity of the Sku.</param>
        /// <param name="costs">Cost of the Sku.</param>
        /// <param name="apiVersions">Api versions that support this
        /// Sku.</param>
        /// <param name="disabledReason">Reason why the Sku is disabled.
        /// Possible values include: 'None', 'Country', 'Region', 'Feature',
        /// 'OfferType', 'NoSubscriptionInfo'</param>
        /// <param name="disabledReasonMessage">Message for why the Sku is
        /// disabled.</param>
        /// <param name="requiredFeature">Required feature to access the
        /// sku.</param>
        public SkuInformation(Sku sku = default(Sku), bool? enabled = default(bool?), IList<DataLocationToServiceLocationMap> dataLocationToServiceLocationMap = default(IList<DataLocationToServiceLocationMap>), SkuCapacity capacity = default(SkuCapacity), IList<SkuCost> costs = default(IList<SkuCost>), IList<string> apiVersions = default(IList<string>), SkuDisabledReason? disabledReason = default(SkuDisabledReason?), string disabledReasonMessage = default(string), string requiredFeature = default(string))
        {
            Sku = sku;
            Enabled = enabled;
            DataLocationToServiceLocationMap = dataLocationToServiceLocationMap;
            Capacity = capacity;
            Costs = costs;
            ApiVersions = apiVersions;
            DisabledReason = disabledReason;
            DisabledReasonMessage = disabledReasonMessage;
            RequiredFeature = requiredFeature;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Sku.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; private set; }

        /// <summary>
        /// Gets the sku is enabled or not.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; private set; }

        /// <summary>
        /// Gets the map of data location to service location.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataLocationToServiceLocationMap")]
        public IList<DataLocationToServiceLocationMap> DataLocationToServiceLocationMap { get; private set; }

        /// <summary>
        /// Gets capacity of the Sku.
        /// </summary>
        [JsonProperty(PropertyName = "properties.capacity")]
        public SkuCapacity Capacity { get; private set; }

        /// <summary>
        /// Gets cost of the Sku.
        /// </summary>
        [JsonProperty(PropertyName = "properties.costs")]
        public IList<SkuCost> Costs { get; private set; }

        /// <summary>
        /// Gets api versions that support this Sku.
        /// </summary>
        [JsonProperty(PropertyName = "properties.apiVersions")]
        public IList<string> ApiVersions { get; private set; }

        /// <summary>
        /// Gets reason why the Sku is disabled. Possible values include:
        /// 'None', 'Country', 'Region', 'Feature', 'OfferType',
        /// 'NoSubscriptionInfo'
        /// </summary>
        [JsonProperty(PropertyName = "properties.disabledReason")]
        public SkuDisabledReason? DisabledReason { get; private set; }

        /// <summary>
        /// Gets message for why the Sku is disabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.disabledReasonMessage")]
        public string DisabledReasonMessage { get; private set; }

        /// <summary>
        /// Gets required feature to access the sku.
        /// </summary>
        [JsonProperty(PropertyName = "properties.requiredFeature")]
        public string RequiredFeature { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku != null)
            {
                Sku.Validate();
            }
        }
    }
}
