// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Encryption key containing details about key to encrypt different keys.
    /// </summary>
    public partial class KeyEncryptionKey
    {
        /// <summary>
        /// Initializes a new instance of the KeyEncryptionKey class.
        /// </summary>
        public KeyEncryptionKey()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KeyEncryptionKey class.
        /// </summary>
        /// <param name="kekType">Type of encryption key used for key
        /// encryption. Possible values include: 'MicrosoftManaged',
        /// 'CustomerManaged'</param>
        /// <param name="identityProperties">Managed identity properties used
        /// for key encryption.</param>
        /// <param name="kekUrl">Key encryption key. It is required in case of
        /// Customer managed KekType.</param>
        /// <param name="kekVaultResourceID">Kek vault resource id. It is
        /// required in case of Customer managed KekType.</param>
        public KeyEncryptionKey(KekType kekType, IdentityProperties identityProperties = default(IdentityProperties), string kekUrl = default(string), string kekVaultResourceID = default(string))
        {
            KekType = kekType;
            IdentityProperties = identityProperties;
            KekUrl = kekUrl;
            KekVaultResourceID = kekVaultResourceID;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of encryption key used for key encryption.
        /// Possible values include: 'MicrosoftManaged', 'CustomerManaged'
        /// </summary>
        [JsonProperty(PropertyName = "kekType")]
        public KekType KekType { get; set; }

        /// <summary>
        /// Gets or sets managed identity properties used for key encryption.
        /// </summary>
        [JsonProperty(PropertyName = "identityProperties")]
        public IdentityProperties IdentityProperties { get; set; }

        /// <summary>
        /// Gets or sets key encryption key. It is required in case of Customer
        /// managed KekType.
        /// </summary>
        [JsonProperty(PropertyName = "kekUrl")]
        public string KekUrl { get; set; }

        /// <summary>
        /// Gets or sets kek vault resource id. It is required in case of
        /// Customer managed KekType.
        /// </summary>
        [JsonProperty(PropertyName = "kekVaultResourceID")]
        public string KekVaultResourceID { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
