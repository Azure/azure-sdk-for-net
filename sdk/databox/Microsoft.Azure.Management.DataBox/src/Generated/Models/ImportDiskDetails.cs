// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Import disk details
    /// </summary>
    public partial class ImportDiskDetails
    {
        /// <summary>
        /// Initializes a new instance of the ImportDiskDetails class.
        /// </summary>
        public ImportDiskDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImportDiskDetails class.
        /// </summary>
        /// <param name="manifestFile">The relative path of the manifest file
        /// on the disk.</param>
        /// <param name="manifestHash">The Base16-encoded MD5 hash of the
        /// manifest file on the disk.</param>
        /// <param name="bitLockerKey">BitLocker key used to encrypt the
        /// disk.</param>
        /// <param name="backupManifestCloudPath">Path to backed up manifest,
        /// only returned if enableManifestBackup is true.</param>
        public ImportDiskDetails(string manifestFile, string manifestHash, string bitLockerKey, string backupManifestCloudPath = default(string))
        {
            ManifestFile = manifestFile;
            ManifestHash = manifestHash;
            BitLockerKey = bitLockerKey;
            BackupManifestCloudPath = backupManifestCloudPath;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the relative path of the manifest file on the disk.
        /// </summary>
        [JsonProperty(PropertyName = "manifestFile")]
        public string ManifestFile { get; set; }

        /// <summary>
        /// Gets or sets the Base16-encoded MD5 hash of the manifest file on
        /// the disk.
        /// </summary>
        [JsonProperty(PropertyName = "manifestHash")]
        public string ManifestHash { get; set; }

        /// <summary>
        /// Gets or sets bitLocker key used to encrypt the disk.
        /// </summary>
        [JsonProperty(PropertyName = "bitLockerKey")]
        public string BitLockerKey { get; set; }

        /// <summary>
        /// Gets path to backed up manifest, only returned if
        /// enableManifestBackup is true.
        /// </summary>
        [JsonProperty(PropertyName = "backupManifestCloudPath")]
        public string BackupManifestCloudPath { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ManifestFile == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ManifestFile");
            }
            if (ManifestHash == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ManifestHash");
            }
            if (BitLockerKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BitLockerKey");
            }
        }
    }
}
