// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Job details for update.
    /// </summary>
    public partial class UpdateJobDetails
    {
        /// <summary>
        /// Initializes a new instance of the UpdateJobDetails class.
        /// </summary>
        public UpdateJobDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateJobDetails class.
        /// </summary>
        /// <param name="contactDetails">Contact details for notification and
        /// shipping.</param>
        /// <param name="shippingAddress">Shipping address of the
        /// customer.</param>
        /// <param name="keyEncryptionKey">Key encryption key for the
        /// job.</param>
        public UpdateJobDetails(ContactDetails contactDetails = default(ContactDetails), ShippingAddress shippingAddress = default(ShippingAddress), KeyEncryptionKey keyEncryptionKey = default(KeyEncryptionKey))
        {
            ContactDetails = contactDetails;
            ShippingAddress = shippingAddress;
            KeyEncryptionKey = keyEncryptionKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets contact details for notification and shipping.
        /// </summary>
        [JsonProperty(PropertyName = "contactDetails")]
        public ContactDetails ContactDetails { get; set; }

        /// <summary>
        /// Gets or sets shipping address of the customer.
        /// </summary>
        [JsonProperty(PropertyName = "shippingAddress")]
        public ShippingAddress ShippingAddress { get; set; }

        /// <summary>
        /// Gets or sets key encryption key for the job.
        /// </summary>
        [JsonProperty(PropertyName = "keyEncryptionKey")]
        public KeyEncryptionKey KeyEncryptionKey { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ContactDetails != null)
            {
                ContactDetails.Validate();
            }
            if (ShippingAddress != null)
            {
                ShippingAddress.Validate();
            }
            if (KeyEncryptionKey != null)
            {
                KeyEncryptionKey.Validate();
            }
        }
    }
}
