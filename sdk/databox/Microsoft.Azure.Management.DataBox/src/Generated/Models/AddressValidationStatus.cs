// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AddressValidationStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AddressValidationStatus
    {
        /// <summary>
        /// Address provided is valid.
        /// </summary>
        [EnumMember(Value = "Valid")]
        Valid,
        /// <summary>
        /// Address provided is invalid or not supported.
        /// </summary>
        [EnumMember(Value = "Invalid")]
        Invalid,
        /// <summary>
        /// Address provided is ambiguous, please choose one of the alternate
        /// addresses returned.
        /// </summary>
        [EnumMember(Value = "Ambiguous")]
        Ambiguous
    }
    internal static class AddressValidationStatusEnumExtension
    {
        internal static string ToSerializedValue(this AddressValidationStatus? value)
        {
            return value == null ? null : ((AddressValidationStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AddressValidationStatus value)
        {
            switch( value )
            {
                case AddressValidationStatus.Valid:
                    return "Valid";
                case AddressValidationStatus.Invalid:
                    return "Invalid";
                case AddressValidationStatus.Ambiguous:
                    return "Ambiguous";
            }
            return null;
        }

        internal static AddressValidationStatus? ParseAddressValidationStatus(this string value)
        {
            switch( value )
            {
                case "Valid":
                    return AddressValidationStatus.Valid;
                case "Invalid":
                    return AddressValidationStatus.Invalid;
                case "Ambiguous":
                    return AddressValidationStatus.Ambiguous;
            }
            return null;
        }
    }
}
