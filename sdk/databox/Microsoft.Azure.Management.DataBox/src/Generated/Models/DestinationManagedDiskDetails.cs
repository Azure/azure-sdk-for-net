// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Details for the destination compute disks.
    /// </summary>
    [Newtonsoft.Json.JsonObject("ManagedDisk")]
    public partial class DestinationManagedDiskDetails : DestinationAccountDetails
    {
        /// <summary>
        /// Initializes a new instance of the DestinationManagedDiskDetails
        /// class.
        /// </summary>
        public DestinationManagedDiskDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DestinationManagedDiskDetails
        /// class.
        /// </summary>
        /// <param name="resourceGroupId">Destination Resource Group Id where
        /// the Compute disks should be created.</param>
        /// <param name="stagingStorageAccountId">Arm Id of the storage account
        /// that can be used to copy the vhd for staging.</param>
        /// <param name="accountId">Arm Id of the destination where the data
        /// has to be moved.</param>
        /// <param name="sharePassword">Share password to be shared by all
        /// shares in SA.</param>
        public DestinationManagedDiskDetails(string resourceGroupId, string stagingStorageAccountId, string accountId = default(string), string sharePassword = default(string))
            : base(accountId, sharePassword)
        {
            ResourceGroupId = resourceGroupId;
            StagingStorageAccountId = stagingStorageAccountId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets destination Resource Group Id where the Compute disks
        /// should be created.
        /// </summary>
        [JsonProperty(PropertyName = "resourceGroupId")]
        public string ResourceGroupId { get; set; }

        /// <summary>
        /// Gets or sets arm Id of the storage account that can be used to copy
        /// the vhd for staging.
        /// </summary>
        [JsonProperty(PropertyName = "stagingStorageAccountId")]
        public string StagingStorageAccountId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ResourceGroupId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceGroupId");
            }
            if (StagingStorageAccountId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StagingStorageAccountId");
            }
        }
    }
}
