// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DataBox.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DataBox.Samples
{
    public partial class Sample_DataBoxJobResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Mitigate_Mitigate()
        {
            // Generated from example definition: 2025-07-01/JobMitigate.json
            // this example is just showing the usage of "DataBox_Mitigate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DataBoxJobResource created on azure
            // for more information of creating DataBoxJobResource, please refer to the document of DataBoxJobResource
            string subscriptionId = "YourSubscriptionId";
            string resourceGroupName = "YourResourceGroupName";
            string jobName = "TestJobName1";
            ResourceIdentifier dataBoxJobResourceId = DataBoxJobResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, jobName);
            DataBoxJobResource dataBoxJob = client.GetDataBoxJobResource(dataBoxJobResourceId);

            // invoke the operation
            MitigateJobContent content = new MitigateJobContent
            {
                SerialNumberCustomerResolutionMap =
{
["testDISK-1"] = CustomerResolutionCode.MoveToCleanUpDevice,
["testDISK-2"] = CustomerResolutionCode.Resume
},
            };
            await dataBoxJob.MitigateAsync(content);

            Console.WriteLine("Succeeded");
        }
    }
}
