// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBox.Models
{
    public partial class TransferFilterDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("dataAccountType"u8);
            writer.WriteStringValue(DataAccountType.ToSerialString());
            if (Optional.IsDefined(BlobFilterDetails))
            {
                writer.WritePropertyName("blobFilterDetails"u8);
                writer.WriteObjectValue(BlobFilterDetails);
            }
            if (Optional.IsDefined(AzureFileFilterDetails))
            {
                writer.WritePropertyName("azureFileFilterDetails"u8);
                writer.WriteObjectValue(AzureFileFilterDetails);
            }
            if (Optional.IsCollectionDefined(FilterFileDetails))
            {
                writer.WritePropertyName("filterFileDetails"u8);
                writer.WriteStartArray();
                foreach (var item in FilterFileDetails)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static TransferFilterDetails DeserializeTransferFilterDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DataAccountType dataAccountType = default;
            Optional<BlobFilterDetails> blobFilterDetails = default;
            Optional<AzureFileFilterDetails> azureFileFilterDetails = default;
            Optional<IList<FilterFileDetails>> filterFileDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dataAccountType"u8))
                {
                    dataAccountType = property.Value.GetString().ToDataAccountType();
                    continue;
                }
                if (property.NameEquals("blobFilterDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blobFilterDetails = BlobFilterDetails.DeserializeBlobFilterDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("azureFileFilterDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    azureFileFilterDetails = AzureFileFilterDetails.DeserializeAzureFileFilterDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("filterFileDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<FilterFileDetails> array = new List<FilterFileDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Models.FilterFileDetails.DeserializeFilterFileDetails(item));
                    }
                    filterFileDetails = array;
                    continue;
                }
            }
            return new TransferFilterDetails(dataAccountType, blobFilterDetails.Value, azureFileFilterDetails.Value, Optional.ToList(filterFileDetails));
        }
    }
}
