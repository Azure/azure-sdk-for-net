// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure;
using Azure.Core;

namespace Azure.ResourceManager.DataBox.Models
{
    /// <summary> The secrets related to disk job. </summary>
    public partial class DataBoxDiskJobSecrets : JobSecrets
    {
        /// <summary> Initializes a new instance of DataBoxDiskJobSecrets. </summary>
        internal DataBoxDiskJobSecrets()
        {
            DiskSecrets = new ChangeTrackingList<DiskSecret>();
            JobSecretsType = ClassDiscriminator.DataBoxDisk;
        }

        /// <summary> Initializes a new instance of DataBoxDiskJobSecrets. </summary>
        /// <param name="jobSecretsType"> Used to indicate what type of job secrets object. </param>
        /// <param name="dcAccessSecurityCode"> Dc Access Security Code for Customer Managed Shipping. </param>
        /// <param name="error"> Error while fetching the secrets. </param>
        /// <param name="diskSecrets"> Contains the list of secrets object for that device. </param>
        /// <param name="passKey"> PassKey for the disk Job. </param>
        /// <param name="isPasskeyUserDefined"> Whether passkey was provided by user. </param>
        internal DataBoxDiskJobSecrets(ClassDiscriminator jobSecretsType, DcAccessSecurityCode dcAccessSecurityCode, ResponseError error, IReadOnlyList<DiskSecret> diskSecrets, string passKey, bool? isPasskeyUserDefined) : base(jobSecretsType, dcAccessSecurityCode, error)
        {
            DiskSecrets = diskSecrets;
            PassKey = passKey;
            IsPasskeyUserDefined = isPasskeyUserDefined;
            JobSecretsType = jobSecretsType;
        }

        /// <summary> Contains the list of secrets object for that device. </summary>
        public IReadOnlyList<DiskSecret> DiskSecrets { get; }
        /// <summary> PassKey for the disk Job. </summary>
        public string PassKey { get; }
        /// <summary> Whether passkey was provided by user. </summary>
        public bool? IsPasskeyUserDefined { get; }
    }
}
