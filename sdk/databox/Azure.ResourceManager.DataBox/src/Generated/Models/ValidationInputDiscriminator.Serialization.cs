// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataBox.Models
{
    internal static partial class ValidationInputDiscriminatorExtensions
    {
        public static string ToSerialString(this ValidationInputDiscriminator value) => value switch
        {
            ValidationInputDiscriminator.ValidateAddress => "ValidateAddress",
            ValidationInputDiscriminator.ValidateSubscriptionIsAllowedToCreateJob => "ValidateSubscriptionIsAllowedToCreateJob",
            ValidationInputDiscriminator.ValidatePreferences => "ValidatePreferences",
            ValidationInputDiscriminator.ValidateCreateOrderLimit => "ValidateCreateOrderLimit",
            ValidationInputDiscriminator.ValidateSkuAvailability => "ValidateSkuAvailability",
            ValidationInputDiscriminator.ValidateDataTransferDetails => "ValidateDataTransferDetails",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ValidationInputDiscriminator value.")
        };

        public static ValidationInputDiscriminator ToValidationInputDiscriminator(this string value)
        {
            if (string.Equals(value, "ValidateAddress", StringComparison.InvariantCultureIgnoreCase)) return ValidationInputDiscriminator.ValidateAddress;
            if (string.Equals(value, "ValidateSubscriptionIsAllowedToCreateJob", StringComparison.InvariantCultureIgnoreCase)) return ValidationInputDiscriminator.ValidateSubscriptionIsAllowedToCreateJob;
            if (string.Equals(value, "ValidatePreferences", StringComparison.InvariantCultureIgnoreCase)) return ValidationInputDiscriminator.ValidatePreferences;
            if (string.Equals(value, "ValidateCreateOrderLimit", StringComparison.InvariantCultureIgnoreCase)) return ValidationInputDiscriminator.ValidateCreateOrderLimit;
            if (string.Equals(value, "ValidateSkuAvailability", StringComparison.InvariantCultureIgnoreCase)) return ValidationInputDiscriminator.ValidateSkuAvailability;
            if (string.Equals(value, "ValidateDataTransferDetails", StringComparison.InvariantCultureIgnoreCase)) return ValidationInputDiscriminator.ValidateDataTransferDetails;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ValidationInputDiscriminator value.");
        }
    }
}
