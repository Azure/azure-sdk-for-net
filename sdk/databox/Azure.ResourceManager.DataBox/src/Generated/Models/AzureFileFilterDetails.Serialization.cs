// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBox.Models
{
    public partial class AzureFileFilterDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(FilePrefixList))
            {
                writer.WritePropertyName("filePrefixList"u8);
                writer.WriteStartArray();
                foreach (var item in FilePrefixList)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(FilePathList))
            {
                writer.WritePropertyName("filePathList"u8);
                writer.WriteStartArray();
                foreach (var item in FilePathList)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(FileShareList))
            {
                writer.WritePropertyName("fileShareList"u8);
                writer.WriteStartArray();
                foreach (var item in FileShareList)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static AzureFileFilterDetails DeserializeAzureFileFilterDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<string>> filePrefixList = default;
            Optional<IList<string>> filePathList = default;
            Optional<IList<string>> fileShareList = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("filePrefixList"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    filePrefixList = array;
                    continue;
                }
                if (property.NameEquals("filePathList"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    filePathList = array;
                    continue;
                }
                if (property.NameEquals("fileShareList"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    fileShareList = array;
                    continue;
                }
            }
            return new AzureFileFilterDetails(Optional.ToList(filePrefixList), Optional.ToList(filePathList), Optional.ToList(fileShareList));
        }
    }
}
