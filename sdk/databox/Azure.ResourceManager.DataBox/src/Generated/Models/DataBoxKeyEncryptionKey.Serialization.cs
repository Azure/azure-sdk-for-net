// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBox.Models
{
    public partial class DataBoxKeyEncryptionKey : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("kekType"u8);
            writer.WriteStringValue(KekType.ToSerialString());
            if (Optional.IsDefined(ManagedIdentity))
            {
                writer.WritePropertyName("identityProperties"u8);
                writer.WriteObjectValue(ManagedIdentity);
            }
            if (Optional.IsDefined(KekUri))
            {
                writer.WritePropertyName("kekUrl"u8);
                writer.WriteStringValue(KekUri.AbsoluteUri);
            }
            if (Optional.IsDefined(KekVaultResourceId))
            {
                writer.WritePropertyName("kekVaultResourceID"u8);
                writer.WriteStringValue(KekVaultResourceId);
            }
            writer.WriteEndObject();
        }

        internal static DataBoxKeyEncryptionKey DeserializeDataBoxKeyEncryptionKey(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DataBoxKeyEncryptionKeyType kekType = default;
            Optional<DataBoxManagedIdentity> identityProperties = default;
            Optional<Uri> kekUrl = default;
            Optional<ResourceIdentifier> kekVaultResourceId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kekType"u8))
                {
                    kekType = property.Value.GetString().ToDataBoxKeyEncryptionKeyType();
                    continue;
                }
                if (property.NameEquals("identityProperties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    identityProperties = DataBoxManagedIdentity.DeserializeDataBoxManagedIdentity(property.Value);
                    continue;
                }
                if (property.NameEquals("kekUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    kekUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("kekVaultResourceID"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    kekVaultResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
            }
            return new DataBoxKeyEncryptionKey(kekType, identityProperties.Value, kekUrl.Value, kekVaultResourceId.Value);
        }
    }
}
