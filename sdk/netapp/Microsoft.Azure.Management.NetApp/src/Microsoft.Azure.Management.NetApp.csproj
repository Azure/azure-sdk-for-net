<Project Sdk="Microsoft.NET.Sdk">
  <!-- Please do not move/edit code below this line -->
  <Import Project="$(RepoEngPath)/mgmt/AzSdk.reference.props" />
  <!-- Please do not move/edit code below this line -->

  <PropertyGroup>
    <PackageId>Microsoft.Azure.Management.NetApp</PackageId>
        
    <Description>Provides NetApp storage management capabilities for Microsoft Azure.</Description>
    <AssemblyTitle>Microsoft Azure NetApp Management</AssemblyTitle>
    <AssemblyName>Microsoft.Azure.Management.NetApp</AssemblyName>
    <Version>1.16.0</Version>
    <PackageTags>MicrosoftAzure Management;NetApp</PackageTags>
    <PackageReleaseNotes>
      <![CDATA[
        Version 1.16.0.0 relates to NetApp Files (ANF) 2021-10-01.
          - Added support for Subvolumes
		  - Added support for Volume Groups https://docs.microsoft.com/en-us/azure/azure-netapp-files/application-volume-group-introduction				
          - Added RestoreFiles operation to Snapshots, To restore the specified files from the specified snapshot to the active filesystem
		  - Added LdapSearchScope to ActiveDirectory
          - Added SystemData to BackupPolicy, CapacityPool, Volumes and SnapshotPolicy
          - Added RestoreFiles operation to Snapshots for Single File Snapshot Restore
		  - Added MaximumNumberOfFiles and EnableSubvolumes to Volume
		  - Added UnixPermissions to volumePatch
		  - Added forceDelete flag to volume delete, An option to force delete the volume in case of failed replication for example. Will cleanup resources connected to the particular volume  	
          					
        Breaking changes:
          - Minimum and maximum size for capacity pool has changed to allow for smaller capacitypools
		  - Snapshots operation signagure has changed in line with Azure SDK conventions.
            
        Azure NetApp Files:
          Provides the capability to create multiple file system volumes through Microsoft Azure.
          Volumes reside within an account pool, a container representing the total data allocation available. A typical usage might be:
          Create an account and pool:
            var accountResource = CreateAccount(netAppMgmtClient, accountName);
            var poolResource = netAppMgmtClient.Pools.CreateOrUpdate(pool, resourceGroup, accountName, poolName);
          Create the volume (a mount target for this is automatically generated and returned)
            var volumeResource = netAppMgmtClient.Volumes.CreateOrUpdate(volume, resourceGroup, accountName, poolName, volumeName);
          Create a snapshot of the volume
            var snapshotResource = netAppMgmtClient.Snapshots.Create(snapshot, resourceGroup, accountName, poolName, volumeName, snapshotName);
      ]]>
    </PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>$(SdkTargetFx)</TargetFrameworks>
  </PropertyGroup>

  <!-- Please do not move/edit code below this line -->
  <Import Condition=" Exists('$([MSBuild]::GetPathOfFileAbove(AzSdk.RP.props))') " Project="$([MSBuild]::GetPathOfFileAbove('AzSdk.RP.props'))" />
  <!-- Please do not move/edit code above this line -->
</Project>
