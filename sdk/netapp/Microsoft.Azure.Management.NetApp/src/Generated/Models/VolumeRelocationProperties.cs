// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.NetApp.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Volume relocation properties
    /// </summary>
    public partial class VolumeRelocationProperties
    {
        /// <summary>
        /// Initializes a new instance of the VolumeRelocationProperties class.
        /// </summary>
        public VolumeRelocationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VolumeRelocationProperties class.
        /// </summary>
        /// <param name="oldVolumeId">The id of the old volume that is being
        /// relocated</param>
        /// <param name="oldBareMetalTenantId">The id of the bare metal tenant
        /// owned by the existing volume</param>
        /// <param name="relocationRequested">Has relocation been requested for
        /// this volume</param>
        public VolumeRelocationProperties(string oldVolumeId = default(string), string oldBareMetalTenantId = default(string), bool? relocationRequested = default(bool?))
        {
            OldVolumeId = oldVolumeId;
            OldBareMetalTenantId = oldBareMetalTenantId;
            RelocationRequested = relocationRequested;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id of the old volume that is being relocated
        /// </summary>
        [JsonProperty(PropertyName = "oldVolumeId")]
        public string OldVolumeId { get; set; }

        /// <summary>
        /// Gets or sets the id of the bare metal tenant owned by the existing
        /// volume
        /// </summary>
        [JsonProperty(PropertyName = "oldBareMetalTenantId")]
        public string OldBareMetalTenantId { get; set; }

        /// <summary>
        /// Gets or sets has relocation been requested for this volume
        /// </summary>
        [JsonProperty(PropertyName = "relocationRequested")]
        public bool? RelocationRequested { get; set; }

    }
}
