// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.NetApp.Models
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ResourceModelWithAllowedPropertySetIdentity : Identity
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ResourceModelWithAllowedPropertySetIdentity class.
        /// </summary>
        public ResourceModelWithAllowedPropertySetIdentity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ResourceModelWithAllowedPropertySetIdentity class.
        /// </summary>
        /// <param name="type">The identity type. Possible values include:
        /// 'None', 'SystemAssigned', 'UserAssigned',
        /// 'SystemAssigned,UserAssigned'</param>
        /// <param name="principalId">The principal ID of resource
        /// identity.</param>
        /// <param name="tenantId">The tenant ID of resource.</param>
        /// <param name="userAssignedIdentities">Gets or sets a list of key
        /// value pairs that describe the set of User Assigned identities that
        /// will be used with this storage account. The key is the ARM resource
        /// identifier of the identity. Only 1 User Assigned identity is
        /// permitted here.</param>
        public ResourceModelWithAllowedPropertySetIdentity(string type, string principalId = default(string), string tenantId = default(string), IDictionary<string, UserAssignedIdentity> userAssignedIdentities = default(IDictionary<string, UserAssignedIdentity>))
            : base(type, principalId, tenantId, userAssignedIdentities)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
