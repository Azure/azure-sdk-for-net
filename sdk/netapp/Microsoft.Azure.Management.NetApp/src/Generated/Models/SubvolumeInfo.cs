// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.NetApp.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Subvolume Information properties
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SubvolumeInfo : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the SubvolumeInfo class.
        /// </summary>
        public SubvolumeInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubvolumeInfo class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="path">path</param>
        /// <param name="size">size</param>
        /// <param name="parentPath">name</param>
        /// <param name="provisioningState">Azure lifecycle management</param>
        /// <param name="systemData">The system meta data relating to this
        /// resource.</param>
        public SubvolumeInfo(string id = default(string), string name = default(string), string type = default(string), string path = default(string), long? size = default(long?), string parentPath = default(string), string provisioningState = default(string), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            Path = path;
            Size = size;
            ParentPath = parentPath;
            ProvisioningState = provisioningState;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets path
        /// </summary>
        /// <remarks>
        /// Path to the subvolume
        /// </remarks>
        [JsonProperty(PropertyName = "properties.path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets size
        /// </summary>
        /// <remarks>
        /// Truncate subvolume to the provided size in bytes
        /// </remarks>
        [JsonProperty(PropertyName = "properties.size")]
        public long? Size { get; set; }

        /// <summary>
        /// Gets or sets name
        /// </summary>
        /// <remarks>
        /// parent path to the subvolume
        /// </remarks>
        [JsonProperty(PropertyName = "properties.parentPath")]
        public string ParentPath { get; set; }

        /// <summary>
        /// Gets azure lifecycle management
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets the system meta data relating to this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
