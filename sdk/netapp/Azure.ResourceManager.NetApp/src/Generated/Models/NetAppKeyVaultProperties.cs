// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.NetApp.Models
{
    /// <summary>
    /// Properties of key vault.
    /// Serialized Name: KeyVaultProperties
    /// </summary>
    public partial class NetAppKeyVaultProperties
    {
        /// <summary> Initializes a new instance of <see cref="NetAppKeyVaultProperties"/>. </summary>
        /// <param name="keyVaultUri">
        /// The Uri of KeyVault.
        /// Serialized Name: KeyVaultProperties.keyVaultUri
        /// </param>
        /// <param name="keyName">
        /// The name of KeyVault key.
        /// Serialized Name: KeyVaultProperties.keyName
        /// </param>
        /// <param name="keyVaultResourceId">
        /// The resource ID of KeyVault.
        /// Serialized Name: KeyVaultProperties.keyVaultResourceId
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyVaultUri"/>, <paramref name="keyName"/> or <paramref name="keyVaultResourceId"/> is null. </exception>
        public NetAppKeyVaultProperties(Uri keyVaultUri, string keyName, string keyVaultResourceId)
        {
            Argument.AssertNotNull(keyVaultUri, nameof(keyVaultUri));
            Argument.AssertNotNull(keyName, nameof(keyName));
            Argument.AssertNotNull(keyVaultResourceId, nameof(keyVaultResourceId));

            KeyVaultUri = keyVaultUri;
            KeyName = keyName;
            KeyVaultResourceId = keyVaultResourceId;
        }

        /// <summary> Initializes a new instance of <see cref="NetAppKeyVaultProperties"/>. </summary>
        /// <param name="keyVaultId">
        /// UUID v4 used to identify the Azure Key Vault configuration
        /// Serialized Name: KeyVaultProperties.keyVaultId
        /// </param>
        /// <param name="keyVaultUri">
        /// The Uri of KeyVault.
        /// Serialized Name: KeyVaultProperties.keyVaultUri
        /// </param>
        /// <param name="keyName">
        /// The name of KeyVault key.
        /// Serialized Name: KeyVaultProperties.keyName
        /// </param>
        /// <param name="keyVaultResourceId">
        /// The resource ID of KeyVault.
        /// Serialized Name: KeyVaultProperties.keyVaultResourceId
        /// </param>
        /// <param name="status">
        /// Status of the KeyVault connection.
        /// Serialized Name: KeyVaultProperties.status
        /// </param>
        internal NetAppKeyVaultProperties(string keyVaultId, Uri keyVaultUri, string keyName, string keyVaultResourceId, NetAppKeyVaultStatus? status)
        {
            KeyVaultId = keyVaultId;
            KeyVaultUri = keyVaultUri;
            KeyName = keyName;
            KeyVaultResourceId = keyVaultResourceId;
            Status = status;
        }

        /// <summary>
        /// UUID v4 used to identify the Azure Key Vault configuration
        /// Serialized Name: KeyVaultProperties.keyVaultId
        /// </summary>
        public string KeyVaultId { get; }
        /// <summary>
        /// The Uri of KeyVault.
        /// Serialized Name: KeyVaultProperties.keyVaultUri
        /// </summary>
        public Uri KeyVaultUri { get; set; }
        /// <summary>
        /// The name of KeyVault key.
        /// Serialized Name: KeyVaultProperties.keyName
        /// </summary>
        public string KeyName { get; set; }
        /// <summary>
        /// The resource ID of KeyVault.
        /// Serialized Name: KeyVaultProperties.keyVaultResourceId
        /// </summary>
        public string KeyVaultResourceId { get; set; }
        /// <summary>
        /// Status of the KeyVault connection.
        /// Serialized Name: KeyVaultProperties.status
        /// </summary>
        public NetAppKeyVaultStatus? Status { get; }
    }
}
