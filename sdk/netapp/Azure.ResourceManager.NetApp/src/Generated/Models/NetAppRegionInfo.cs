// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetApp.Models
{
    /// <summary>
    /// Provides region specific information.
    /// Serialized Name: RegionInfo
    /// </summary>
    public partial class NetAppRegionInfo
    {
        /// <summary> Initializes a new instance of <see cref="NetAppRegionInfo"/>. </summary>
        internal NetAppRegionInfo()
        {
            AvailabilityZoneMappings = new ChangeTrackingList<AvailabilityZoneMapping>();
        }

        /// <summary> Initializes a new instance of <see cref="NetAppRegionInfo"/>. </summary>
        /// <param name="storageToNetworkProximity">
        /// Provides storage to network proximity information in the region.
        /// Serialized Name: RegionInfo.storageToNetworkProximity
        /// </param>
        /// <param name="availabilityZoneMappings">
        /// Provides logical availability zone mappings for the subscription for a region.
        /// Serialized Name: RegionInfo.availabilityZoneMappings
        /// </param>
        internal NetAppRegionInfo(RegionStorageToNetworkProximity? storageToNetworkProximity, IReadOnlyList<AvailabilityZoneMapping> availabilityZoneMappings)
        {
            StorageToNetworkProximity = storageToNetworkProximity;
            AvailabilityZoneMappings = availabilityZoneMappings;
        }

        /// <summary>
        /// Provides storage to network proximity information in the region.
        /// Serialized Name: RegionInfo.storageToNetworkProximity
        /// </summary>
        public RegionStorageToNetworkProximity? StorageToNetworkProximity { get; }
        /// <summary>
        /// Provides logical availability zone mappings for the subscription for a region.
        /// Serialized Name: RegionInfo.availabilityZoneMappings
        /// </summary>
        public IReadOnlyList<AvailabilityZoneMapping> AvailabilityZoneMappings { get; }
    }
}
