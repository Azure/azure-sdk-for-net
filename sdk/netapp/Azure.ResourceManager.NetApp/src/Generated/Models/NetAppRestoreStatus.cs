// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.NetApp.Models
{
    /// <summary>
    /// Restore status
    /// Serialized Name: RestoreStatus
    /// </summary>
    public partial class NetAppRestoreStatus
    {
        /// <summary> Initializes a new instance of <see cref="NetAppRestoreStatus"/>. </summary>
        internal NetAppRestoreStatus()
        {
        }

        /// <summary> Initializes a new instance of <see cref="NetAppRestoreStatus"/>. </summary>
        /// <param name="isHealthy">
        /// Restore health status
        /// Serialized Name: RestoreStatus.healthy
        /// </param>
        /// <param name="relationshipStatus">
        /// Status of the restore SnapMirror relationship
        /// Serialized Name: RestoreStatus.relationshipStatus
        /// </param>
        /// <param name="mirrorState">
        /// The status of the restore
        /// Serialized Name: RestoreStatus.mirrorState
        /// </param>
        /// <param name="unhealthyReason">
        /// Reason for the unhealthy restore relationship
        /// Serialized Name: RestoreStatus.unhealthyReason
        /// </param>
        /// <param name="errorMessage">
        /// Displays error message if the restore is in an error state
        /// Serialized Name: RestoreStatus.errorMessage
        /// </param>
        /// <param name="totalTransferBytes">
        /// Displays the total bytes transferred
        /// Serialized Name: RestoreStatus.totalTransferBytes
        /// </param>
        internal NetAppRestoreStatus(bool? isHealthy, NetAppRelationshipStatus? relationshipStatus, NetAppMirrorState? mirrorState, string unhealthyReason, string errorMessage, long? totalTransferBytes)
        {
            IsHealthy = isHealthy;
            RelationshipStatus = relationshipStatus;
            MirrorState = mirrorState;
            UnhealthyReason = unhealthyReason;
            ErrorMessage = errorMessage;
            TotalTransferBytes = totalTransferBytes;
        }

        /// <summary>
        /// Restore health status
        /// Serialized Name: RestoreStatus.healthy
        /// </summary>
        public bool? IsHealthy { get; }
        /// <summary>
        /// Status of the restore SnapMirror relationship
        /// Serialized Name: RestoreStatus.relationshipStatus
        /// </summary>
        public NetAppRelationshipStatus? RelationshipStatus { get; }
        /// <summary>
        /// The status of the restore
        /// Serialized Name: RestoreStatus.mirrorState
        /// </summary>
        public NetAppMirrorState? MirrorState { get; }
        /// <summary>
        /// Reason for the unhealthy restore relationship
        /// Serialized Name: RestoreStatus.unhealthyReason
        /// </summary>
        public string UnhealthyReason { get; }
        /// <summary>
        /// Displays error message if the restore is in an error state
        /// Serialized Name: RestoreStatus.errorMessage
        /// </summary>
        public string ErrorMessage { get; }
        /// <summary>
        /// Displays the total bytes transferred
        /// Serialized Name: RestoreStatus.totalTransferBytes
        /// </summary>
        public long? TotalTransferBytes { get; }
    }
}
