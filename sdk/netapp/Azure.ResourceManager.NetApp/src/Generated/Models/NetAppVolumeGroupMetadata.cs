// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetApp.Models
{
    /// <summary>
    /// Volume group properties
    /// Serialized Name: VolumeGroupMetaData
    /// </summary>
    public partial class NetAppVolumeGroupMetadata
    {
        /// <summary> Initializes a new instance of <see cref="NetAppVolumeGroupMetadata"/>. </summary>
        public NetAppVolumeGroupMetadata()
        {
            GlobalPlacementRules = new ChangeTrackingList<NetAppVolumePlacementRule>();
        }

        /// <summary> Initializes a new instance of <see cref="NetAppVolumeGroupMetadata"/>. </summary>
        /// <param name="groupDescription">
        /// Group Description
        /// Serialized Name: VolumeGroupMetaData.groupDescription
        /// </param>
        /// <param name="applicationType">
        /// Application Type
        /// Serialized Name: VolumeGroupMetaData.applicationType
        /// </param>
        /// <param name="applicationIdentifier">
        /// Application specific identifier
        /// Serialized Name: VolumeGroupMetaData.applicationIdentifier
        /// </param>
        /// <param name="globalPlacementRules">
        /// Application specific placement rules for the volume group
        /// Serialized Name: VolumeGroupMetaData.globalPlacementRules
        /// </param>
        /// <param name="volumesCount">
        /// Number of volumes in volume group
        /// Serialized Name: VolumeGroupMetaData.volumesCount
        /// </param>
        internal NetAppVolumeGroupMetadata(string groupDescription, NetAppApplicationType? applicationType, string applicationIdentifier, IList<NetAppVolumePlacementRule> globalPlacementRules, long? volumesCount)
        {
            GroupDescription = groupDescription;
            ApplicationType = applicationType;
            ApplicationIdentifier = applicationIdentifier;
            GlobalPlacementRules = globalPlacementRules;
            VolumesCount = volumesCount;
        }

        /// <summary>
        /// Group Description
        /// Serialized Name: VolumeGroupMetaData.groupDescription
        /// </summary>
        public string GroupDescription { get; set; }
        /// <summary>
        /// Application Type
        /// Serialized Name: VolumeGroupMetaData.applicationType
        /// </summary>
        public NetAppApplicationType? ApplicationType { get; set; }
        /// <summary>
        /// Application specific identifier
        /// Serialized Name: VolumeGroupMetaData.applicationIdentifier
        /// </summary>
        public string ApplicationIdentifier { get; set; }
        /// <summary>
        /// Application specific placement rules for the volume group
        /// Serialized Name: VolumeGroupMetaData.globalPlacementRules
        /// </summary>
        public IList<NetAppVolumePlacementRule> GlobalPlacementRules { get; }
        /// <summary>
        /// Number of volumes in volume group
        /// Serialized Name: VolumeGroupMetaData.volumesCount
        /// </summary>
        public long? VolumesCount { get; }
    }
}
