// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.NetApp.Models
{
    /// <summary>
    /// Identity used to authenticate with key vault.
    /// Serialized Name: EncryptionIdentity
    /// </summary>
    public partial class NetAppEncryptionIdentity
    {
        /// <summary> Initializes a new instance of <see cref="NetAppEncryptionIdentity"/>. </summary>
        public NetAppEncryptionIdentity()
        {
        }

        /// <summary> Initializes a new instance of <see cref="NetAppEncryptionIdentity"/>. </summary>
        /// <param name="principalId">
        /// The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
        /// Serialized Name: EncryptionIdentity.principalId
        /// </param>
        /// <param name="userAssignedIdentity">
        /// The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
        /// Serialized Name: EncryptionIdentity.userAssignedIdentity
        /// </param>
        internal NetAppEncryptionIdentity(string principalId, string userAssignedIdentity)
        {
            PrincipalId = principalId;
            UserAssignedIdentity = userAssignedIdentity;
        }

        /// <summary>
        /// The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
        /// Serialized Name: EncryptionIdentity.principalId
        /// </summary>
        public string PrincipalId { get; }
        /// <summary>
        /// The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
        /// Serialized Name: EncryptionIdentity.userAssignedIdentity
        /// </summary>
        public string UserAssignedIdentity { get; set; }
    }
}
