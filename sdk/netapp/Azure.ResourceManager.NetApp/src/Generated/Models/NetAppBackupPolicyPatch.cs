// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.NetApp.Models
{
    /// <summary>
    /// Backup policy Details for create and update
    /// Serialized Name: BackupPolicyPatch
    /// </summary>
    public partial class NetAppBackupPolicyPatch : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="NetAppBackupPolicyPatch"/>. </summary>
        /// <param name="location"> The location. </param>
        public NetAppBackupPolicyPatch(AzureLocation location) : base(location)
        {
            VolumeBackups = new ChangeTrackingList<NetAppVolumeBackupDetail>();
        }

        /// <summary>
        /// Backup Policy Resource ID
        /// Serialized Name: BackupPolicyPatch.properties.backupPolicyId
        /// </summary>
        public ResourceIdentifier BackupPolicyId { get; }
        /// <summary>
        /// Azure lifecycle management
        /// Serialized Name: BackupPolicyPatch.properties.provisioningState
        /// </summary>
        public string ProvisioningState { get; }
        /// <summary>
        /// Daily backups count to keep
        /// Serialized Name: BackupPolicyPatch.properties.dailyBackupsToKeep
        /// </summary>
        public int? DailyBackupsToKeep { get; set; }
        /// <summary>
        /// Weekly backups count to keep
        /// Serialized Name: BackupPolicyPatch.properties.weeklyBackupsToKeep
        /// </summary>
        public int? WeeklyBackupsToKeep { get; set; }
        /// <summary>
        /// Monthly backups count to keep
        /// Serialized Name: BackupPolicyPatch.properties.monthlyBackupsToKeep
        /// </summary>
        public int? MonthlyBackupsToKeep { get; set; }
        /// <summary>
        /// Volumes using current backup policy
        /// Serialized Name: BackupPolicyPatch.properties.volumesAssigned
        /// </summary>
        public int? VolumesAssigned { get; }
        /// <summary>
        /// The property to decide policy is enabled or not
        /// Serialized Name: BackupPolicyPatch.properties.enabled
        /// </summary>
        public bool? IsEnabled { get; set; }
        /// <summary>
        /// A list of volumes assigned to this policy
        /// Serialized Name: BackupPolicyPatch.properties.volumeBackups
        /// </summary>
        public IReadOnlyList<NetAppVolumeBackupDetail> VolumeBackups { get; }
    }
}
