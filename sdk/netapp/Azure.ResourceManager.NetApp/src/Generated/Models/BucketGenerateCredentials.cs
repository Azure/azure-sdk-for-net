// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.NetApp.Models
{
    /// <summary>
    /// Bucket Access Key, Secret Key, and Expiry date and time of the key pair
    /// Serialized Name: BucketGenerateCredentials
    /// </summary>
    public partial class BucketGenerateCredentials
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="BucketGenerateCredentials"/>. </summary>
        internal BucketGenerateCredentials()
        {
        }

        /// <summary> Initializes a new instance of <see cref="BucketGenerateCredentials"/>. </summary>
        /// <param name="accessKey">
        /// The Access Key that is required along with the Secret Key to access the bucket.
        /// Serialized Name: BucketGenerateCredentials.accessKey
        /// </param>
        /// <param name="secretKey">
        /// The Secret Key that is required along with the Access Key to access the bucket.
        /// Serialized Name: BucketGenerateCredentials.secretKey
        /// </param>
        /// <param name="keyPairExpiry">
        /// The bucket's Access and Secret key pair expiry date and time (in UTC).
        /// Serialized Name: BucketGenerateCredentials.keyPairExpiry
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal BucketGenerateCredentials(string accessKey, string secretKey, DateTimeOffset? keyPairExpiry, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            AccessKey = accessKey;
            SecretKey = secretKey;
            KeyPairExpiry = keyPairExpiry;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// The Access Key that is required along with the Secret Key to access the bucket.
        /// Serialized Name: BucketGenerateCredentials.accessKey
        /// </summary>
        public string AccessKey { get; }
        /// <summary>
        /// The Secret Key that is required along with the Access Key to access the bucket.
        /// Serialized Name: BucketGenerateCredentials.secretKey
        /// </summary>
        public string SecretKey { get; }
        /// <summary>
        /// The bucket's Access and Secret key pair expiry date and time (in UTC).
        /// Serialized Name: BucketGenerateCredentials.keyPairExpiry
        /// </summary>
        public DateTimeOffset? KeyPairExpiry { get; }
    }
}
