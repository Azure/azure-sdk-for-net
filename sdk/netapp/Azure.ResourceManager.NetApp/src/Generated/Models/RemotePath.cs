// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.NetApp.Models
{
    /// <summary>
    /// The full path to a volume that is to be migrated into ANF. Required for Migration volumes
    /// Serialized Name: RemotePath
    /// </summary>
    public partial class RemotePath
    {
        /// <summary> Initializes a new instance of <see cref="RemotePath"/>. </summary>
        /// <param name="externalHostName">
        /// The Path to a Ontap Host
        /// Serialized Name: RemotePath.externalHostName
        /// </param>
        /// <param name="serverName">
        /// The name of a server on the Ontap Host
        /// Serialized Name: RemotePath.serverName
        /// </param>
        /// <param name="volumeName">
        /// The name of a volume on the server
        /// Serialized Name: RemotePath.volumeName
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="externalHostName"/>, <paramref name="serverName"/> or <paramref name="volumeName"/> is null. </exception>
        public RemotePath(string externalHostName, string serverName, string volumeName)
        {
            Argument.AssertNotNull(externalHostName, nameof(externalHostName));
            Argument.AssertNotNull(serverName, nameof(serverName));
            Argument.AssertNotNull(volumeName, nameof(volumeName));

            ExternalHostName = externalHostName;
            ServerName = serverName;
            VolumeName = volumeName;
        }

        /// <summary>
        /// The Path to a Ontap Host
        /// Serialized Name: RemotePath.externalHostName
        /// </summary>
        public string ExternalHostName { get; set; }
        /// <summary>
        /// The name of a server on the Ontap Host
        /// Serialized Name: RemotePath.serverName
        /// </summary>
        public string ServerName { get; set; }
        /// <summary>
        /// The name of a volume on the server
        /// Serialized Name: RemotePath.volumeName
        /// </summary>
        public string VolumeName { get; set; }
    }
}
