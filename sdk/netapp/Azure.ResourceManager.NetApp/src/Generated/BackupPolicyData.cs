// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.NetApp.Models;

namespace Azure.ResourceManager.NetApp
{
    /// <summary> A class representing the BackupPolicy data model. </summary>
    public partial class BackupPolicyData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of BackupPolicyData. </summary>
        /// <param name="location"> The location. </param>
        public BackupPolicyData(AzureLocation location) : base(location)
        {
            VolumeBackups = new ChangeTrackingList<VolumeBackups>();
        }

        /// <summary> Initializes a new instance of BackupPolicyData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="backupPolicyId"> Backup Policy Resource ID. </param>
        /// <param name="provisioningState"> Azure lifecycle management. </param>
        /// <param name="dailyBackupsToKeep"> Daily backups count to keep. </param>
        /// <param name="weeklyBackupsToKeep"> Weekly backups count to keep. </param>
        /// <param name="monthlyBackupsToKeep"> Monthly backups count to keep. </param>
        /// <param name="volumesAssigned"> Volumes using current backup policy. </param>
        /// <param name="enabled"> The property to decide policy is enabled or not. </param>
        /// <param name="volumeBackups"> A list of volumes assigned to this policy. </param>
        internal BackupPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ETag? etag, string backupPolicyId, string provisioningState, int? dailyBackupsToKeep, int? weeklyBackupsToKeep, int? monthlyBackupsToKeep, int? volumesAssigned, bool? enabled, IReadOnlyList<VolumeBackups> volumeBackups) : base(id, name, resourceType, systemData, tags, location)
        {
            ETag = etag;
            BackupPolicyId = backupPolicyId;
            ProvisioningState = provisioningState;
            DailyBackupsToKeep = dailyBackupsToKeep;
            WeeklyBackupsToKeep = weeklyBackupsToKeep;
            MonthlyBackupsToKeep = monthlyBackupsToKeep;
            VolumesAssigned = volumesAssigned;
            Enabled = enabled;
            VolumeBackups = volumeBackups;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public ETag? ETag { get; }
        /// <summary> Backup Policy Resource ID. </summary>
        public string BackupPolicyId { get; }
        /// <summary> Azure lifecycle management. </summary>
        public string ProvisioningState { get; }
        /// <summary> Daily backups count to keep. </summary>
        public int? DailyBackupsToKeep { get; set; }
        /// <summary> Weekly backups count to keep. </summary>
        public int? WeeklyBackupsToKeep { get; set; }
        /// <summary> Monthly backups count to keep. </summary>
        public int? MonthlyBackupsToKeep { get; set; }
        /// <summary> Volumes using current backup policy. </summary>
        public int? VolumesAssigned { get; }
        /// <summary> The property to decide policy is enabled or not. </summary>
        public bool? Enabled { get; set; }
        /// <summary> A list of volumes assigned to this policy. </summary>
        public IReadOnlyList<VolumeBackups> VolumeBackups { get; }
    }
}
