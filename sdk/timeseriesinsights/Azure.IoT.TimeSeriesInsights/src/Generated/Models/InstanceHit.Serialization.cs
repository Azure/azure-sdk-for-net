// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;

namespace Azure.IoT.TimeSeriesInsights
{
    internal partial class InstanceHit
    {
        internal static InstanceHit DeserializeInstanceHit(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            IReadOnlyList<object> timeSeriesId = default;
            string name = default;
            string typeId = default;
            IReadOnlyList<string> hierarchyIds = default;
            InstanceHitHighlights highlights = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("timeSeriesId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<object> array = new List<object>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(item.GetObject());
                        }
                    }
                    timeSeriesId = array;
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("typeId"u8))
                {
                    typeId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("hierarchyIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    hierarchyIds = array;
                    continue;
                }
                if (property.NameEquals("highlights"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    highlights = InstanceHitHighlights.DeserializeInstanceHitHighlights(property.Value);
                    continue;
                }
            }
            return new InstanceHit(timeSeriesId ?? new ChangeTrackingList<object>(), name, typeId, hierarchyIds ?? new ChangeTrackingList<string>(), highlights);
        }
    }
}
