// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.IoT.TimeSeriesInsights
{
    /// <summary> Parameter of how to return time series instance hierarchies by search instances call. </summary>
    internal partial class SearchInstancesHierarchiesParameters
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SearchInstancesHierarchiesParameters"/>. </summary>
        public SearchInstancesHierarchiesParameters()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SearchInstancesHierarchiesParameters"/>. </summary>
        /// <param name="expand"> Definition of whether to expand hierarchy nodes in the same search instances call. Optional, default is 'UntilChildren'. </param>
        /// <param name="sort"> Definition of sorting of hierarchy nodes. Optional, default is 'CumulativeInstanceCount'. </param>
        /// <param name="pageSize"> Maximum number of hierarchies in the same level to return in the same page. Optional, default is 10 when not set. Range is from 1 to 100. If there are results beyond the page size, the continuation token can be used to fetch the next page. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SearchInstancesHierarchiesParameters(HierarchiesExpandParameter expand, HierarchiesSortParameter sort, int? pageSize, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Expand = expand;
            Sort = sort;
            PageSize = pageSize;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Definition of whether to expand hierarchy nodes in the same search instances call. Optional, default is 'UntilChildren'. </summary>
        public HierarchiesExpandParameter Expand { get; set; }
        /// <summary> Definition of sorting of hierarchy nodes. Optional, default is 'CumulativeInstanceCount'. </summary>
        public HierarchiesSortParameter Sort { get; set; }
        /// <summary> Maximum number of hierarchies in the same level to return in the same page. Optional, default is 10 when not set. Range is from 1 to 100. If there are results beyond the page size, the continuation token can be used to fetch the next page. </summary>
        public int? PageSize { get; set; }
    }
}
