// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.IoT.TimeSeriesInsights
{
    public partial class TimeSeriesHierarchy : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            writer.WritePropertyName("name");
            writer.WriteStringValue(Name);
            writer.WritePropertyName("source");
            writer.WriteObjectValue(Source);
            writer.WriteEndObject();
        }

        internal static TimeSeriesHierarchy DeserializeTimeSeriesHierarchy(JsonElement element)
        {
            Optional<string> id = default;
            string name = default;
            TimeSeriesHierarchySource source = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("source"))
                {
                    source = TimeSeriesHierarchySource.DeserializeTimeSeriesHierarchySource(property.Value);
                    continue;
                }
            }
            return new TimeSeriesHierarchy(id.Value, name, source);
        }
    }
}
