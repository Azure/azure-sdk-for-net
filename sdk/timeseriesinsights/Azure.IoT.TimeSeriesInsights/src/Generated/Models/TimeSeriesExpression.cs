// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.IoT.TimeSeriesInsights
{
    /// <summary> Time series expression (TSX) written as a single string. Examples: "$event.Status.String='Good'", "avg($event.Temperature)". Refer to the documentation on how to write time series expressions. </summary>
    public partial class TimeSeriesExpression
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="TimeSeriesExpression"/>. </summary>
        /// <param name="expression"> Time series expression (TSX) written as a single string. Examples: "$event.Status.String='Good'", "avg($event.Temperature)". Refer to the documentation on how to write time series expressions. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="expression"/> is null. </exception>
        public TimeSeriesExpression(string expression)
        {
            Argument.AssertNotNull(expression, nameof(expression));

            Expression = expression;
        }

        /// <summary> Initializes a new instance of <see cref="TimeSeriesExpression"/>. </summary>
        /// <param name="expression"> Time series expression (TSX) written as a single string. Examples: "$event.Status.String='Good'", "avg($event.Temperature)". Refer to the documentation on how to write time series expressions. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal TimeSeriesExpression(string expression, Dictionary<string, BinaryData> rawData)
        {
            Expression = expression;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="TimeSeriesExpression"/> for deserialization. </summary>
        internal TimeSeriesExpression()
        {
        }
    }
}
