// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Iot.TimeSeriesInsights.Models
{
    /// <summary> Category used in categorical variables. A category is defined by &apos;label&apos; and the &apos;values&apos; that are assigned this label. </summary>
    public partial class TimeSeriesAggregateCategory
    {
        /// <summary> Initializes a new instance of TimeSeriesAggregateCategory. </summary>
        /// <param name="label"> The name of the category which will be used in constructing the output variable names. </param>
        /// <param name="values"> The list of values that a category maps to. Can be either a unique list of string or list of long. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="label"/> or <paramref name="values"/> is null. </exception>
        public TimeSeriesAggregateCategory(string label, IEnumerable<object> values)
        {
            if (label == null)
            {
                throw new ArgumentNullException(nameof(label));
            }
            if (values == null)
            {
                throw new ArgumentNullException(nameof(values));
            }

            Label = label;
            Values = values.ToList();
        }

        /// <summary> Initializes a new instance of TimeSeriesAggregateCategory. </summary>
        /// <param name="label"> The name of the category which will be used in constructing the output variable names. </param>
        /// <param name="values"> The list of values that a category maps to. Can be either a unique list of string or list of long. </param>
        internal TimeSeriesAggregateCategory(string label, IList<object> values)
        {
            Label = label;
            Values = values;
        }

        /// <summary> The name of the category which will be used in constructing the output variable names. </summary>
        public string Label { get; set; }
        /// <summary> The list of values that a category maps to. Can be either a unique list of string or list of long. </summary>
        public IList<object> Values { get; }
    }
}
