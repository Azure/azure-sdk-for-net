// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.BotService.Models
{
    /// <summary> Microsoft App Type for the bot. </summary>
    public readonly partial struct MsaAppType : IEquatable<MsaAppType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MsaAppType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MsaAppType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UserAssignedMSIValue = "UserAssignedMSI";
        private const string SingleTenantValue = "SingleTenant";
        private const string MultiTenantValue = "MultiTenant";

        /// <summary> UserAssignedMSI. </summary>
        public static MsaAppType UserAssignedMSI { get; } = new MsaAppType(UserAssignedMSIValue);
        /// <summary> SingleTenant. </summary>
        public static MsaAppType SingleTenant { get; } = new MsaAppType(SingleTenantValue);
        /// <summary> MultiTenant. </summary>
        public static MsaAppType MultiTenant { get; } = new MsaAppType(MultiTenantValue);
        /// <summary> Determines if two <see cref="MsaAppType"/> values are the same. </summary>
        public static bool operator ==(MsaAppType left, MsaAppType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MsaAppType"/> values are not the same. </summary>
        public static bool operator !=(MsaAppType left, MsaAppType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MsaAppType"/>. </summary>
        public static implicit operator MsaAppType(string value) => new MsaAppType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MsaAppType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MsaAppType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
