// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.BotService.Models
{
    public partial class MsTeamsChannelProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(EnableCalling))
            {
                writer.WritePropertyName("enableCalling");
                writer.WriteBooleanValue(EnableCalling.Value);
            }
            if (Optional.IsDefined(CallingWebhook))
            {
                writer.WritePropertyName("callingWebhook");
                writer.WriteStringValue(CallingWebhook);
            }
            writer.WritePropertyName("isEnabled");
            writer.WriteBooleanValue(IsEnabled);
            if (Optional.IsDefined(IncomingCallRoute))
            {
                writer.WritePropertyName("incomingCallRoute");
                writer.WriteStringValue(IncomingCallRoute);
            }
            if (Optional.IsDefined(DeploymentEnvironment))
            {
                writer.WritePropertyName("deploymentEnvironment");
                writer.WriteStringValue(DeploymentEnvironment);
            }
            if (Optional.IsDefined(AcceptedTerms))
            {
                if (AcceptedTerms != null)
                {
                    writer.WritePropertyName("acceptedTerms");
                    writer.WriteBooleanValue(AcceptedTerms.Value);
                }
                else
                {
                    writer.WriteNull("acceptedTerms");
                }
            }
            writer.WriteEndObject();
        }

        internal static MsTeamsChannelProperties DeserializeMsTeamsChannelProperties(JsonElement element)
        {
            Optional<bool> enableCalling = default;
            Optional<string> callingWebhook = default;
            bool isEnabled = default;
            Optional<string> incomingCallRoute = default;
            Optional<string> deploymentEnvironment = default;
            Optional<bool?> acceptedTerms = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("enableCalling"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    enableCalling = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("callingWebhook"))
                {
                    callingWebhook = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isEnabled"))
                {
                    isEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("incomingCallRoute"))
                {
                    incomingCallRoute = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deploymentEnvironment"))
                {
                    deploymentEnvironment = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("acceptedTerms"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        acceptedTerms = null;
                        continue;
                    }
                    acceptedTerms = property.Value.GetBoolean();
                    continue;
                }
            }
            return new MsTeamsChannelProperties(Optional.ToNullable(enableCalling), callingWebhook.Value, isEnabled, incomingCallRoute.Value, deploymentEnvironment.Value, Optional.ToNullable(acceptedTerms));
        }
    }
}
