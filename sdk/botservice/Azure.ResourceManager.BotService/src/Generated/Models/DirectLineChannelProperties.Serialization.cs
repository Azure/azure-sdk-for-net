// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.BotService.Models
{
    public partial class DirectLineChannelProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Sites))
            {
                writer.WritePropertyName("sites"u8);
                writer.WriteStartArray();
                foreach (var item in Sites)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(ExtensionKey1))
            {
                writer.WritePropertyName("extensionKey1"u8);
                writer.WriteStringValue(ExtensionKey1);
            }
            if (Optional.IsDefined(ExtensionKey2))
            {
                writer.WritePropertyName("extensionKey2"u8);
                writer.WriteStringValue(ExtensionKey2);
            }
            if (Optional.IsDefined(DirectLineEmbedCode))
            {
                writer.WritePropertyName("DirectLineEmbedCode"u8);
                writer.WriteStringValue(DirectLineEmbedCode);
            }
            writer.WriteEndObject();
        }

        internal static DirectLineChannelProperties DeserializeDirectLineChannelProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<DirectLineSite>> sites = default;
            Optional<string> extensionKey1 = default;
            Optional<string> extensionKey2 = default;
            Optional<string> directLineEmbedCode = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sites"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<DirectLineSite> array = new List<DirectLineSite>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DirectLineSite.DeserializeDirectLineSite(item));
                    }
                    sites = array;
                    continue;
                }
                if (property.NameEquals("extensionKey1"u8))
                {
                    extensionKey1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("extensionKey2"u8))
                {
                    extensionKey2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("DirectLineEmbedCode"u8))
                {
                    directLineEmbedCode = property.Value.GetString();
                    continue;
                }
            }
            return new DirectLineChannelProperties(Optional.ToList(sites), extensionKey1.Value, extensionKey2.Value, directLineEmbedCode.Value);
        }
    }
}
