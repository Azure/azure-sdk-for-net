// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.BotService;

namespace Azure.ResourceManager.BotService.Models
{
    public partial class BotProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("displayName"u8);
            writer.WriteStringValue(DisplayName);
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description"u8);
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(IconUri))
            {
                writer.WritePropertyName("iconUrl"u8);
                writer.WriteStringValue(IconUri.AbsoluteUri);
            }
            if (Endpoint != null)
            {
                writer.WritePropertyName("endpoint"u8);
                writer.WriteStringValue(Endpoint.AbsoluteUri);
            }
            else
            {
                writer.WriteNull("endpoint");
            }
            if (Optional.IsCollectionDefined(AllSettings))
            {
                writer.WritePropertyName("allSettings"u8);
                writer.WriteStartObject();
                foreach (var item in AllSettings)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsCollectionDefined(Parameters))
            {
                writer.WritePropertyName("parameters"u8);
                writer.WriteStartObject();
                foreach (var item in Parameters)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Optional.IsDefined(ManifestUri))
            {
                writer.WritePropertyName("manifestUrl"u8);
                writer.WriteStringValue(ManifestUri.AbsoluteUri);
            }
            if (Optional.IsDefined(MsaAppType))
            {
                writer.WritePropertyName("msaAppType"u8);
                writer.WriteStringValue(MsaAppType.Value.ToString());
            }
            writer.WritePropertyName("msaAppId"u8);
            writer.WriteStringValue(MsaAppId);
            if (Optional.IsDefined(MsaAppTenantId))
            {
                writer.WritePropertyName("msaAppTenantId"u8);
                writer.WriteStringValue(MsaAppTenantId);
            }
            if (Optional.IsDefined(MsaAppMSIResourceId))
            {
                writer.WritePropertyName("msaAppMSIResourceId"u8);
                writer.WriteStringValue(MsaAppMSIResourceId);
            }
            if (Optional.IsDefined(DeveloperAppInsightKey))
            {
                writer.WritePropertyName("developerAppInsightKey"u8);
                writer.WriteStringValue(DeveloperAppInsightKey);
            }
            if (Optional.IsDefined(DeveloperAppInsightsApiKey))
            {
                writer.WritePropertyName("developerAppInsightsApiKey"u8);
                writer.WriteStringValue(DeveloperAppInsightsApiKey);
            }
            if (Optional.IsDefined(DeveloperAppInsightsApplicationId))
            {
                writer.WritePropertyName("developerAppInsightsApplicationId"u8);
                writer.WriteStringValue(DeveloperAppInsightsApplicationId);
            }
            if (Optional.IsCollectionDefined(LuisAppIds))
            {
                writer.WritePropertyName("luisAppIds"u8);
                writer.WriteStartArray();
                foreach (var item in LuisAppIds)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(LuisKey))
            {
                writer.WritePropertyName("luisKey"u8);
                writer.WriteStringValue(LuisKey);
            }
            if (Optional.IsDefined(IsCmekEnabled))
            {
                writer.WritePropertyName("isCmekEnabled"u8);
                writer.WriteBooleanValue(IsCmekEnabled.Value);
            }
            if (Optional.IsDefined(CmekKeyVaultUri))
            {
                writer.WritePropertyName("cmekKeyVaultUrl"u8);
                writer.WriteStringValue(CmekKeyVaultUri.AbsoluteUri);
            }
            if (Optional.IsDefined(TenantId))
            {
                writer.WritePropertyName("tenantId"u8);
                writer.WriteStringValue(TenantId.Value);
            }
            if (Optional.IsDefined(PublicNetworkAccess))
            {
                writer.WritePropertyName("publicNetworkAccess"u8);
                writer.WriteStringValue(PublicNetworkAccess.Value.ToString());
            }
            if (Optional.IsDefined(IsStreamingSupported))
            {
                writer.WritePropertyName("isStreamingSupported"u8);
                writer.WriteBooleanValue(IsStreamingSupported.Value);
            }
            if (Optional.IsDefined(IsLocalAuthDisabled))
            {
                writer.WritePropertyName("disableLocalAuth"u8);
                writer.WriteBooleanValue(IsLocalAuthDisabled.Value);
            }
            if (Optional.IsDefined(SchemaTransformationVersion))
            {
                if (SchemaTransformationVersion != null)
                {
                    writer.WritePropertyName("schemaTransformationVersion"u8);
                    writer.WriteStringValue(SchemaTransformationVersion);
                }
                else
                {
                    writer.WriteNull("schemaTransformationVersion");
                }
            }
            if (Optional.IsDefined(StorageResourceId))
            {
                writer.WritePropertyName("storageResourceId"u8);
                writer.WriteStringValue(StorageResourceId);
            }
            if (Optional.IsDefined(OpenWithHint))
            {
                writer.WritePropertyName("openWithHint"u8);
                writer.WriteStringValue(OpenWithHint);
            }
            if (Optional.IsDefined(AppPasswordHint))
            {
                writer.WritePropertyName("appPasswordHint"u8);
                writer.WriteStringValue(AppPasswordHint);
            }
            if (Optional.IsDefined(PublishingCredentials))
            {
                writer.WritePropertyName("publishingCredentials"u8);
                writer.WriteStringValue(PublishingCredentials);
            }
            writer.WriteEndObject();
        }

        internal static BotProperties DeserializeBotProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string displayName = default;
            Optional<string> description = default;
            Optional<Uri> iconUrl = default;
            Uri endpoint = default;
            Optional<string> endpointVersion = default;
            Optional<IDictionary<string, string>> allSettings = default;
            Optional<IDictionary<string, string>> parameters = default;
            Optional<Uri> manifestUrl = default;
            Optional<BotMsaAppType> msaAppType = default;
            string msaAppId = default;
            Optional<string> msaAppTenantId = default;
            Optional<ResourceIdentifier> msaAppMSIResourceId = default;
            Optional<IReadOnlyList<string>> configuredChannels = default;
            Optional<IReadOnlyList<string>> enabledChannels = default;
            Optional<string> developerAppInsightKey = default;
            Optional<string> developerAppInsightsApiKey = default;
            Optional<string> developerAppInsightsApplicationId = default;
            Optional<IList<string>> luisAppIds = default;
            Optional<string> luisKey = default;
            Optional<bool> isCmekEnabled = default;
            Optional<Uri> cmekKeyVaultUrl = default;
            Optional<string> cmekEncryptionStatus = default;
            Optional<Guid> tenantId = default;
            Optional<BotServicePublicNetworkAccess> publicNetworkAccess = default;
            Optional<bool> isStreamingSupported = default;
            Optional<bool> isDeveloperAppInsightsApiKeySet = default;
            Optional<string> migrationToken = default;
            Optional<bool> disableLocalAuth = default;
            Optional<string> schemaTransformationVersion = default;
            Optional<ResourceIdentifier> storageResourceId = default;
            Optional<IReadOnlyList<BotServicePrivateEndpointConnectionData>> privateEndpointConnections = default;
            Optional<string> openWithHint = default;
            Optional<string> appPasswordHint = default;
            Optional<string> provisioningState = default;
            Optional<string> publishingCredentials = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("displayName"u8))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("iconUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    iconUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("endpoint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        endpoint = null;
                        continue;
                    }
                    endpoint = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("endpointVersion"u8))
                {
                    endpointVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("allSettings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    allSettings = dictionary;
                    continue;
                }
                if (property.NameEquals("parameters"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    parameters = dictionary;
                    continue;
                }
                if (property.NameEquals("manifestUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    manifestUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("msaAppType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    msaAppType = new BotMsaAppType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("msaAppId"u8))
                {
                    msaAppId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("msaAppTenantId"u8))
                {
                    msaAppTenantId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("msaAppMSIResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    msaAppMSIResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("configuredChannels"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    configuredChannels = array;
                    continue;
                }
                if (property.NameEquals("enabledChannels"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    enabledChannels = array;
                    continue;
                }
                if (property.NameEquals("developerAppInsightKey"u8))
                {
                    developerAppInsightKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("developerAppInsightsApiKey"u8))
                {
                    developerAppInsightsApiKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("developerAppInsightsApplicationId"u8))
                {
                    developerAppInsightsApplicationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("luisAppIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    luisAppIds = array;
                    continue;
                }
                if (property.NameEquals("luisKey"u8))
                {
                    luisKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isCmekEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isCmekEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("cmekKeyVaultUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    cmekKeyVaultUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("cmekEncryptionStatus"u8))
                {
                    cmekEncryptionStatus = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tenantId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    tenantId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("publicNetworkAccess"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    publicNetworkAccess = new BotServicePublicNetworkAccess(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("isStreamingSupported"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isStreamingSupported = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isDeveloperAppInsightsApiKeySet"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isDeveloperAppInsightsApiKeySet = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("migrationToken"u8))
                {
                    migrationToken = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("disableLocalAuth"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    disableLocalAuth = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("schemaTransformationVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        schemaTransformationVersion = null;
                        continue;
                    }
                    schemaTransformationVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("storageResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    storageResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("privateEndpointConnections"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<BotServicePrivateEndpointConnectionData> array = new List<BotServicePrivateEndpointConnectionData>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BotServicePrivateEndpointConnectionData.DeserializeBotServicePrivateEndpointConnectionData(item));
                    }
                    privateEndpointConnections = array;
                    continue;
                }
                if (property.NameEquals("openWithHint"u8))
                {
                    openWithHint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("appPasswordHint"u8))
                {
                    appPasswordHint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"u8))
                {
                    provisioningState = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("publishingCredentials"u8))
                {
                    publishingCredentials = property.Value.GetString();
                    continue;
                }
            }
            return new BotProperties(displayName, description.Value, iconUrl.Value, endpoint, endpointVersion.Value, Optional.ToDictionary(allSettings), Optional.ToDictionary(parameters), manifestUrl.Value, Optional.ToNullable(msaAppType), msaAppId, msaAppTenantId.Value, msaAppMSIResourceId.Value, Optional.ToList(configuredChannels), Optional.ToList(enabledChannels), developerAppInsightKey.Value, developerAppInsightsApiKey.Value, developerAppInsightsApplicationId.Value, Optional.ToList(luisAppIds), luisKey.Value, Optional.ToNullable(isCmekEnabled), cmekKeyVaultUrl.Value, cmekEncryptionStatus.Value, Optional.ToNullable(tenantId), Optional.ToNullable(publicNetworkAccess), Optional.ToNullable(isStreamingSupported), Optional.ToNullable(isDeveloperAppInsightsApiKeySet), migrationToken.Value, Optional.ToNullable(disableLocalAuth), schemaTransformationVersion.Value, storageResourceId.Value, Optional.ToList(privateEndpointConnections), openWithHint.Value, appPasswordHint.Value, provisioningState.Value, publishingCredentials.Value);
        }
    }
}
