// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.BotService.Models
{
    public partial class ChannelSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Sites))
            {
                writer.WritePropertyName("sites"u8);
                writer.WriteStartArray();
                foreach (var item in Sites)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(ChannelId))
            {
                writer.WritePropertyName("channelId"u8);
                writer.WriteStringValue(ChannelId);
            }
            if (Optional.IsDefined(ChannelDisplayName))
            {
                writer.WritePropertyName("channelDisplayName"u8);
                writer.WriteStringValue(ChannelDisplayName);
            }
            if (Optional.IsDefined(BotId))
            {
                writer.WritePropertyName("botId"u8);
                writer.WriteStringValue(BotId);
            }
            if (Optional.IsDefined(BotIconUri))
            {
                writer.WritePropertyName("botIconUrl"u8);
                writer.WriteStringValue(BotIconUri.AbsoluteUri);
            }
            if (Optional.IsDefined(IsEnabled))
            {
                writer.WritePropertyName("isEnabled"u8);
                writer.WriteBooleanValue(IsEnabled.Value);
            }
            if (Optional.IsDefined(DisableLocalAuth))
            {
                writer.WritePropertyName("disableLocalAuth"u8);
                writer.WriteBooleanValue(DisableLocalAuth.Value);
            }
            writer.WriteEndObject();
        }

        internal static ChannelSettings DeserializeChannelSettings(JsonElement element)
        {
            Optional<string> extensionKey1 = default;
            Optional<string> extensionKey2 = default;
            Optional<IList<Site>> sites = default;
            Optional<string> channelId = default;
            Optional<string> channelDisplayName = default;
            Optional<string> botId = default;
            Optional<Uri> botIconUrl = default;
            Optional<bool> isEnabled = default;
            Optional<bool> disableLocalAuth = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("extensionKey1"u8))
                {
                    extensionKey1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("extensionKey2"u8))
                {
                    extensionKey2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sites"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<Site> array = new List<Site>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Site.DeserializeSite(item));
                    }
                    sites = array;
                    continue;
                }
                if (property.NameEquals("channelId"u8))
                {
                    channelId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("channelDisplayName"u8))
                {
                    channelDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("botId"u8))
                {
                    botId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("botIconUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        botIconUrl = null;
                        continue;
                    }
                    botIconUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("isEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("disableLocalAuth"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    disableLocalAuth = property.Value.GetBoolean();
                    continue;
                }
            }
            return new ChannelSettings(extensionKey1.Value, extensionKey2.Value, Optional.ToList(sites), channelId.Value, channelDisplayName.Value, botId.Value, botIconUrl.Value, Optional.ToNullable(isEnabled), Optional.ToNullable(disableLocalAuth));
        }
    }
}
