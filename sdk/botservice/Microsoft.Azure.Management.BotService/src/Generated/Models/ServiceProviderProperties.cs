// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BotService.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Object used to describe a Service Provider supported by Bot Service
    /// </summary>
    public partial class ServiceProviderProperties
    {
        /// <summary>
        /// Initializes a new instance of the ServiceProviderProperties class.
        /// </summary>
        public ServiceProviderProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceProviderProperties class.
        /// </summary>
        /// <param name="id">Id for Service Provider</param>
        /// <param name="displayName">Display Name of the Service
        /// Provider</param>
        /// <param name="serviceProviderName">Display Name of the Service
        /// Provider</param>
        /// <param name="devPortalUrl">Display Name of the Service
        /// Provider</param>
        /// <param name="iconUrl">Display Name of the Service Provider</param>
        /// <param name="parameters">The list of parameters for the Service
        /// Provider</param>
        public ServiceProviderProperties(string id = default(string), string displayName = default(string), string serviceProviderName = default(string), string devPortalUrl = default(string), string iconUrl = default(string), IList<ServiceProviderParameter> parameters = default(IList<ServiceProviderParameter>))
        {
            Id = id;
            DisplayName = displayName;
            ServiceProviderName = serviceProviderName;
            DevPortalUrl = devPortalUrl;
            IconUrl = iconUrl;
            Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets id for Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets display Name of the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; private set; }

        /// <summary>
        /// Gets display Name of the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "serviceProviderName")]
        public string ServiceProviderName { get; private set; }

        /// <summary>
        /// Gets display Name of the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "devPortalUrl")]
        public string DevPortalUrl { get; private set; }

        /// <summary>
        /// Gets display Name of the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "iconUrl")]
        public string IconUrl { get; private set; }

        /// <summary>
        /// Gets or sets the list of parameters for the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<ServiceProviderParameter> Parameters { get; set; }

    }
}
