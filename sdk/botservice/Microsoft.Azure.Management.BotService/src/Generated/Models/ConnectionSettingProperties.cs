// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BotService.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties for a Connection Setting Item
    /// </summary>
    public partial class ConnectionSettingProperties
    {
        /// <summary>
        /// Initializes a new instance of the ConnectionSettingProperties
        /// class.
        /// </summary>
        public ConnectionSettingProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectionSettingProperties
        /// class.
        /// </summary>
        /// <param name="clientId">Client Id associated with the Connection
        /// Setting.</param>
        /// <param name="settingId">Setting Id set by the service for the
        /// Connection Setting.</param>
        /// <param name="clientSecret">Client Secret associated with the
        /// Connection Setting</param>
        /// <param name="scopes">Scopes associated with the Connection
        /// Setting</param>
        /// <param name="serviceProviderId">Service Provider Id associated with
        /// the Connection Setting</param>
        /// <param name="serviceProviderDisplayName">Service Provider Display
        /// Name associated with the Connection Setting</param>
        /// <param name="parameters">Service Provider Parameters associated
        /// with the Connection Setting</param>
        public ConnectionSettingProperties(string clientId = default(string), string settingId = default(string), string clientSecret = default(string), string scopes = default(string), string serviceProviderId = default(string), string serviceProviderDisplayName = default(string), IList<ConnectionSettingParameter> parameters = default(IList<ConnectionSettingParameter>))
        {
            ClientId = clientId;
            SettingId = settingId;
            ClientSecret = clientSecret;
            Scopes = scopes;
            ServiceProviderId = serviceProviderId;
            ServiceProviderDisplayName = serviceProviderDisplayName;
            Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets client Id associated with the Connection Setting.
        /// </summary>
        [JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; set; }

        /// <summary>
        /// Gets setting Id set by the service for the Connection Setting.
        /// </summary>
        [JsonProperty(PropertyName = "settingId")]
        public string SettingId { get; private set; }

        /// <summary>
        /// Gets or sets client Secret associated with the Connection Setting
        /// </summary>
        [JsonProperty(PropertyName = "clientSecret")]
        public string ClientSecret { get; set; }

        /// <summary>
        /// Gets or sets scopes associated with the Connection Setting
        /// </summary>
        [JsonProperty(PropertyName = "scopes")]
        public string Scopes { get; set; }

        /// <summary>
        /// Gets or sets service Provider Id associated with the Connection
        /// Setting
        /// </summary>
        [JsonProperty(PropertyName = "serviceProviderId")]
        public string ServiceProviderId { get; set; }

        /// <summary>
        /// Gets or sets service Provider Display Name associated with the
        /// Connection Setting
        /// </summary>
        [JsonProperty(PropertyName = "serviceProviderDisplayName")]
        public string ServiceProviderDisplayName { get; set; }

        /// <summary>
        /// Gets or sets service Provider Parameters associated with the
        /// Connection Setting
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<ConnectionSettingParameter> Parameters { get; set; }

    }
}
