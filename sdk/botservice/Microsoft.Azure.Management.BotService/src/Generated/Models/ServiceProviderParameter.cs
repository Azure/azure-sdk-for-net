// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BotService.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Extra Parameters specific to each Service Provider
    /// </summary>
    public partial class ServiceProviderParameter
    {
        /// <summary>
        /// Initializes a new instance of the ServiceProviderParameter class.
        /// </summary>
        public ServiceProviderParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceProviderParameter class.
        /// </summary>
        /// <param name="name">Name of the Service Provider</param>
        /// <param name="type">Type of the Service Provider</param>
        /// <param name="displayName">Display Name of the Service
        /// Provider</param>
        /// <param name="description">Description of the Service
        /// Provider</param>
        /// <param name="helpUrl">Help Url for the  Service Provider</param>
        /// <param name="defaultProperty">Default Name for the Service
        /// Provider</param>
        public ServiceProviderParameter(string name = default(string), string type = default(string), string displayName = default(string), string description = default(string), string helpUrl = default(string), string defaultProperty = default(string))
        {
            Name = name;
            Type = type;
            DisplayName = displayName;
            Description = description;
            HelpUrl = helpUrl;
            DefaultProperty = defaultProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets type of the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets display Name of the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; private set; }

        /// <summary>
        /// Gets description of the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets help Url for the  Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "helpUrl")]
        public string HelpUrl { get; private set; }

        /// <summary>
        /// Gets default Name for the Service Provider
        /// </summary>
        [JsonProperty(PropertyName = "default")]
        public string DefaultProperty { get; private set; }

    }
}
