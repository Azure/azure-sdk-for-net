// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;
using Azure.ResourceManager.ManagementGroups.Models;

namespace Azure.ResourceManager.ManagementGroups
{
    /// <summary> The HierarchySettings service client. </summary>
    public partial class HierarchySettingsOperations
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal HierarchySettingsRestOperations RestClient { get; }

        /// <summary> Initializes a new instance of HierarchySettingsOperations for mocking. </summary>
        protected HierarchySettingsOperations()
        {
        }

        /// <summary> Initializes a new instance of HierarchySettingsOperations. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="apiVersion"> Api Version. </param>
        internal HierarchySettingsOperations(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint = null, string apiVersion = "2021-04-01")
        {
            RestClient = new HierarchySettingsRestOperations(clientDiagnostics, pipeline, endpoint, apiVersion);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <summary>
        /// Gets all the hierarchy settings defined at the Management Group level. Settings can only be set on the root Management Group of the hierarchy.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<HierarchySettingsList>> ListAsync(string groupId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.List");
            scope.Start();
            try
            {
                return await RestClient.ListAsync(groupId, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Gets all the hierarchy settings defined at the Management Group level. Settings can only be set on the root Management Group of the hierarchy.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<HierarchySettingsList> List(string groupId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.List");
            scope.Start();
            try
            {
                return RestClient.List(groupId, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Gets the hierarchy settings defined at the Management Group level. Settings can only be set on the root Management Group of the hierarchy.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<HierarchySettings>> GetAsync(string groupId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.Get");
            scope.Start();
            try
            {
                return await RestClient.GetAsync(groupId, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Gets the hierarchy settings defined at the Management Group level. Settings can only be set on the root Management Group of the hierarchy.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<HierarchySettings> Get(string groupId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.Get");
            scope.Start();
            try
            {
                return RestClient.Get(groupId, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Creates or updates the hierarchy settings defined at the Management Group level.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="createTenantSettingsRequest"> Tenant level settings request parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<HierarchySettings>> CreateOrUpdateAsync(string groupId, CreateOrUpdateSettingsRequest createTenantSettingsRequest, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.CreateOrUpdate");
            scope.Start();
            try
            {
                return await RestClient.CreateOrUpdateAsync(groupId, createTenantSettingsRequest, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Creates or updates the hierarchy settings defined at the Management Group level.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="createTenantSettingsRequest"> Tenant level settings request parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<HierarchySettings> CreateOrUpdate(string groupId, CreateOrUpdateSettingsRequest createTenantSettingsRequest, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.CreateOrUpdate");
            scope.Start();
            try
            {
                return RestClient.CreateOrUpdate(groupId, createTenantSettingsRequest, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Updates the hierarchy settings defined at the Management Group level.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="createTenantSettingsRequest"> Tenant level settings request parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<HierarchySettings>> UpdateAsync(string groupId, CreateOrUpdateSettingsRequest createTenantSettingsRequest, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.Update");
            scope.Start();
            try
            {
                return await RestClient.UpdateAsync(groupId, createTenantSettingsRequest, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Updates the hierarchy settings defined at the Management Group level.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="createTenantSettingsRequest"> Tenant level settings request parameter. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<HierarchySettings> Update(string groupId, CreateOrUpdateSettingsRequest createTenantSettingsRequest, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.Update");
            scope.Start();
            try
            {
                return RestClient.Update(groupId, createTenantSettingsRequest, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Deletes the hierarchy settings defined at the Management Group level.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response> DeleteAsync(string groupId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.Delete");
            scope.Start();
            try
            {
                return await RestClient.DeleteAsync(groupId, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary>
        /// Deletes the hierarchy settings defined at the Management Group level.
        /// .
        /// </summary>
        /// <param name="groupId"> Management Group ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response Delete(string groupId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("HierarchySettingsOperations.Delete");
            scope.Start();
            try
            {
                return RestClient.Delete(groupId, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
