// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ManagementGroups.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines headers for CreateOrUpdate operation.
    /// </summary>
    public partial class ManagementGroupsCreateOrUpdateHeaders
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ManagementGroupsCreateOrUpdateHeaders class.
        /// </summary>
        public ManagementGroupsCreateOrUpdateHeaders()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ManagementGroupsCreateOrUpdateHeaders class.
        /// </summary>
        /// <param name="location">URL for determining when an operation has
        /// completed. Send a GET request to the URL in Location header.
        /// The URI should return a 202 until the operation reaches a terminal
        /// state and 200 once it reaches a terminal state.
        ///
        /// For more info:
        /// https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers</param>
        /// <param name="azureAsyncOperation">URL for checking the ongoing
        /// status of the operation.
        /// To get the status of the asynchronous operation, send a GET request
        /// to the URL in Azure-AsyncOperation header value.
        ///
        /// For more info:
        /// https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations</param>
        public ManagementGroupsCreateOrUpdateHeaders(string location = default(string), string azureAsyncOperation = default(string))
        {
            Location = location;
            AzureAsyncOperation = azureAsyncOperation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets URL for determining when an operation has completed.
        /// Send a GET request to the URL in Location header.
        /// The URI should return a 202 until the operation reaches a terminal
        /// state and 200 once it reaches a terminal state.
        ///
        /// For more info:
        /// https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers
        /// </summary>
        [JsonProperty(PropertyName = "Location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets URL for checking the ongoing status of the operation.
        /// To get the status of the asynchronous operation, send a GET request
        /// to the URL in Azure-AsyncOperation header value.
        ///
        /// For more info:
        /// https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        /// </summary>
        [JsonProperty(PropertyName = "Azure-AsyncOperation")]
        public string AzureAsyncOperation { get; set; }

    }
}
