// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ManagementGroups.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The entity.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EntityInfo
    {
        /// <summary>
        /// Initializes a new instance of the EntityInfo class.
        /// </summary>
        public EntityInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EntityInfo class.
        /// </summary>
        /// <param name="id">The fully qualified ID for the entity.  For
        /// example,
        /// /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000</param>
        /// <param name="type">The type of the resource. For example,
        /// /providers/Microsoft.Management/managementGroups</param>
        /// <param name="name">The name of the entity. For example,
        /// 00000000-0000-0000-0000-000000000000</param>
        /// <param name="tenantId">The AAD Tenant ID associated with the
        /// entity. For example, 00000000-0000-0000-0000-000000000000</param>
        /// <param name="displayName">The friendly name of the management
        /// group.</param>
        /// <param name="parent">Parent</param>
        /// <param name="permissions">Permissions</param>
        /// <param name="inheritedPermissions">Inherited Permissions</param>
        /// <param name="numberOfDescendants">Number of Descendants</param>
        /// <param name="parentDisplayNameChain">The parent display name chain
        /// from the root group to the immediate parent</param>
        /// <param name="parentNameChain">The parent name chain from the root
        /// group to the immediate parent</param>
        public EntityInfo(string id = default(string), string type = default(string), string name = default(string), string tenantId = default(string), string displayName = default(string), EntityParentGroupInfo parent = default(EntityParentGroupInfo), string permissions = default(string), string inheritedPermissions = default(string), int? numberOfDescendants = default(int?), IList<string> parentDisplayNameChain = default(IList<string>), IList<string> parentNameChain = default(IList<string>))
        {
            Id = id;
            Type = type;
            Name = name;
            TenantId = tenantId;
            DisplayName = displayName;
            Parent = parent;
            Permissions = permissions;
            InheritedPermissions = inheritedPermissions;
            NumberOfDescendants = numberOfDescendants;
            ParentDisplayNameChain = parentDisplayNameChain;
            ParentNameChain = parentNameChain;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the fully qualified ID for the entity.  For example,
        /// /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the type of the resource. For example,
        /// /providers/Microsoft.Management/managementGroups
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets the name of the entity. For example,
        /// 00000000-0000-0000-0000-000000000000
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets the AAD Tenant ID associated with the entity. For
        /// example, 00000000-0000-0000-0000-000000000000
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or sets the friendly name of the management group.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets parent
        /// </summary>
        [JsonProperty(PropertyName = "properties.parent")]
        public EntityParentGroupInfo Parent { get; set; }

        /// <summary>
        /// Gets or sets permissions
        /// </summary>
        /// <remarks>
        /// Possible values include: 'noaccess', 'view', 'edit', 'delete'
        /// </remarks>
        [JsonProperty(PropertyName = "properties.permissions")]
        public string Permissions { get; set; }

        /// <summary>
        /// Gets or sets inherited Permissions
        /// </summary>
        /// <remarks>
        /// Possible values include: 'noaccess', 'view', 'edit', 'delete'
        /// </remarks>
        [JsonProperty(PropertyName = "properties.inheritedPermissions")]
        public string InheritedPermissions { get; set; }

        /// <summary>
        /// Gets or sets number of Descendants
        /// </summary>
        [JsonProperty(PropertyName = "properties.numberOfDescendants")]
        public int? NumberOfDescendants { get; set; }

        /// <summary>
        /// Gets or sets the parent display name chain from the root group to
        /// the immediate parent
        /// </summary>
        [JsonProperty(PropertyName = "properties.parentDisplayNameChain")]
        public IList<string> ParentDisplayNameChain { get; set; }

        /// <summary>
        /// Gets or sets the parent name chain from the root group to the
        /// immediate parent
        /// </summary>
        [JsonProperty(PropertyName = "properties.parentNameChain")]
        public IList<string> ParentNameChain { get; set; }

    }
}
