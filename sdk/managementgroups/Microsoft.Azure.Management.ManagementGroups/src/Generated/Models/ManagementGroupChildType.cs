// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ManagementGroups.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ManagementGroupChildType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ManagementGroupChildType
    {
        [EnumMember(Value = "Microsoft.Management/managementGroups")]
        MicrosoftManagementManagementGroups,
        [EnumMember(Value = "/subscriptions")]
        HyphenMinussubscriptions
    }
    internal static class ManagementGroupChildTypeEnumExtension
    {
        internal static string ToSerializedValue(this ManagementGroupChildType? value)
        {
            return value == null ? null : ((ManagementGroupChildType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ManagementGroupChildType value)
        {
            switch( value )
            {
                case ManagementGroupChildType.MicrosoftManagementManagementGroups:
                    return "Microsoft.Management/managementGroups";
                case ManagementGroupChildType.HyphenMinussubscriptions:
                    return "/subscriptions";
            }
            return null;
        }

        internal static ManagementGroupChildType? ParseManagementGroupChildType(this string value)
        {
            switch( value )
            {
                case "Microsoft.Management/managementGroups":
                    return ManagementGroupChildType.MicrosoftManagementManagementGroups;
                case "/subscriptions":
                    return ManagementGroupChildType.HyphenMinussubscriptions;
            }
            return null;
        }
    }
}
