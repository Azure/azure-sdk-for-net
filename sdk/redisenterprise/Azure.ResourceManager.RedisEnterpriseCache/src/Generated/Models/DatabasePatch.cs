// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.RedisEnterpriseCache.Models
{
    /// <summary> A partial update to the RedisEnterprise database. </summary>
    public partial class DatabasePatch
    {
        /// <summary> Initializes a new instance of DatabasePatch. </summary>
        public DatabasePatch()
        {
            Modules = new ChangeTrackingList<Module>();
        }

        /// <summary> Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted. </summary>
        public Protocol? ClientProtocol { get; set; }
        /// <summary> TCP port of the database endpoint. Specified at create time. Defaults to an available port. </summary>
        public int? Port { get; set; }
        /// <summary> Current provisioning status of the database. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Current resource status of the database. </summary>
        public ResourceState? ResourceState { get; }
        /// <summary> Clustering policy - default is OSSCluster. Specified at create time. </summary>
        public ClusteringPolicy? ClusteringPolicy { get; set; }
        /// <summary> Redis eviction policy - default is VolatileLRU. </summary>
        public EvictionPolicy? EvictionPolicy { get; set; }
        /// <summary> Persistence settings. </summary>
        public Persistence Persistence { get; set; }
        /// <summary> Optional set of redis modules to enable in this database - modules can only be added at creation time. </summary>
        public IList<Module> Modules { get; }
        /// <summary> Optional set of properties to configure geo replication for this database. </summary>
        public DatabasePropertiesGeoReplication GeoReplication { get; set; }
    }
}
