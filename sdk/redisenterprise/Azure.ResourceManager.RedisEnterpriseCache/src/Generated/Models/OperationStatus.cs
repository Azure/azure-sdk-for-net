// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure;

namespace Azure.ResourceManager.RedisEnterpriseCache.Models
{
    /// <summary> The status of a long-running operation. </summary>
    public partial class OperationStatus
    {
        /// <summary> Initializes a new instance of OperationStatus. </summary>
        internal OperationStatus()
        {
        }

        /// <summary> Initializes a new instance of OperationStatus. </summary>
        /// <param name="id"> The operation&apos;s unique id. </param>
        /// <param name="name"> The operation&apos;s name. </param>
        /// <param name="startTime"> The start time of the operation. </param>
        /// <param name="endTime"> The end time of the operation. </param>
        /// <param name="status"> The current status of the operation. </param>
        /// <param name="errorResponse"> Error response describing why the operation failed. </param>
        internal OperationStatus(string id, string name, string startTime, string endTime, string status, ErrorResponse errorResponse)
        {
            Id = id;
            Name = name;
            StartTime = startTime;
            EndTime = endTime;
            Status = status;
            ErrorResponse = errorResponse;
        }

        /// <summary> The operation&apos;s unique id. </summary>
        public string Id { get; }
        /// <summary> The operation&apos;s name. </summary>
        public string Name { get; }
        /// <summary> The start time of the operation. </summary>
        public string StartTime { get; }
        /// <summary> The end time of the operation. </summary>
        public string EndTime { get; }
        /// <summary> The current status of the operation. </summary>
        public string Status { get; }
        /// <summary> Error response describing why the operation failed. </summary>
        internal ErrorResponse ErrorResponse { get; }
        /// <summary> The error object. </summary>
        public ResponseError Error
        {
            get => ErrorResponse?.Error;
        }
    }
}
