// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.RedisEnterpriseCache.Models;

namespace Azure.ResourceManager.RedisEnterpriseCache
{
    /// <summary> A class representing the Database data model. </summary>
    public partial class DatabaseData : ResourceData
    {
        /// <summary> Initializes a new instance of DatabaseData. </summary>
        public DatabaseData()
        {
            Modules = new ChangeTrackingList<Module>();
        }

        /// <summary> Initializes a new instance of DatabaseData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="clientProtocol"> Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted. </param>
        /// <param name="port"> TCP port of the database endpoint. Specified at create time. Defaults to an available port. </param>
        /// <param name="provisioningState"> Current provisioning status of the database. </param>
        /// <param name="resourceState"> Current resource status of the database. </param>
        /// <param name="clusteringPolicy"> Clustering policy - default is OSSCluster. Specified at create time. </param>
        /// <param name="evictionPolicy"> Redis eviction policy - default is VolatileLRU. </param>
        /// <param name="persistence"> Persistence settings. </param>
        /// <param name="modules"> Optional set of redis modules to enable in this database - modules can only be added at creation time. </param>
        /// <param name="geoReplication"> Optional set of properties to configure geo replication for this database. </param>
        internal DatabaseData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Protocol? clientProtocol, int? port, ProvisioningState? provisioningState, ResourceState? resourceState, ClusteringPolicy? clusteringPolicy, EvictionPolicy? evictionPolicy, Persistence persistence, IList<Module> modules, DatabasePropertiesGeoReplication geoReplication) : base(id, name, resourceType, systemData)
        {
            ClientProtocol = clientProtocol;
            Port = port;
            ProvisioningState = provisioningState;
            ResourceState = resourceState;
            ClusteringPolicy = clusteringPolicy;
            EvictionPolicy = evictionPolicy;
            Persistence = persistence;
            Modules = modules;
            GeoReplication = geoReplication;
        }

        /// <summary> Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted. </summary>
        public Protocol? ClientProtocol { get; set; }
        /// <summary> TCP port of the database endpoint. Specified at create time. Defaults to an available port. </summary>
        public int? Port { get; set; }
        /// <summary> Current provisioning status of the database. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Current resource status of the database. </summary>
        public ResourceState? ResourceState { get; }
        /// <summary> Clustering policy - default is OSSCluster. Specified at create time. </summary>
        public ClusteringPolicy? ClusteringPolicy { get; set; }
        /// <summary> Redis eviction policy - default is VolatileLRU. </summary>
        public EvictionPolicy? EvictionPolicy { get; set; }
        /// <summary> Persistence settings. </summary>
        public Persistence Persistence { get; set; }
        /// <summary> Optional set of redis modules to enable in this database - modules can only be added at creation time. </summary>
        public IList<Module> Modules { get; }
        /// <summary> Optional set of properties to configure geo replication for this database. </summary>
        public DatabasePropertiesGeoReplication GeoReplication { get; set; }
    }
}
