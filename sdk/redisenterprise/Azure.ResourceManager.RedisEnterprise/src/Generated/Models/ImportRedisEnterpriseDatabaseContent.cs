// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.RedisEnterprise.Models
{
    /// <summary> Parameters for a Redis Enterprise import operation. </summary>
    public partial class ImportRedisEnterpriseDatabaseContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ImportRedisEnterpriseDatabaseContent"/>. </summary>
        /// <param name="sasUris"> SAS URIs for the target blobs to import from. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sasUris"/> is null. </exception>
        public ImportRedisEnterpriseDatabaseContent(IEnumerable<Uri> sasUris)
        {
            Argument.AssertNotNull(sasUris, nameof(sasUris));

            SasUris = sasUris.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="ImportRedisEnterpriseDatabaseContent"/>. </summary>
        /// <param name="sasUris"> SAS URIs for the target blobs to import from. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ImportRedisEnterpriseDatabaseContent(IList<Uri> sasUris, Dictionary<string, BinaryData> rawData)
        {
            SasUris = sasUris;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="ImportRedisEnterpriseDatabaseContent"/> for deserialization. </summary>
        internal ImportRedisEnterpriseDatabaseContent()
        {
        }

        /// <summary> SAS URIs for the target blobs to import from. </summary>
        public IList<Uri> SasUris { get; }
    }
}
