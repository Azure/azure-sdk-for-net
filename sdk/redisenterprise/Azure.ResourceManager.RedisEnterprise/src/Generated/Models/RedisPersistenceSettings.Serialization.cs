// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.RedisEnterprise.Models
{
    public partial class RedisPersistenceSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(IsAofEnabled))
            {
                writer.WritePropertyName("aofEnabled");
                writer.WriteBooleanValue(IsAofEnabled.Value);
            }
            if (Optional.IsDefined(IsRdbEnabled))
            {
                writer.WritePropertyName("rdbEnabled");
                writer.WriteBooleanValue(IsRdbEnabled.Value);
            }
            if (Optional.IsDefined(AofFrequency))
            {
                writer.WritePropertyName("aofFrequency");
                writer.WriteStringValue(AofFrequency.Value.ToString());
            }
            if (Optional.IsDefined(RdbFrequency))
            {
                writer.WritePropertyName("rdbFrequency");
                writer.WriteStringValue(RdbFrequency.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static RedisPersistenceSettings DeserializeRedisPersistenceSettings(JsonElement element)
        {
            Optional<bool> aofEnabled = default;
            Optional<bool> rdbEnabled = default;
            Optional<PersistenceSettingAofFrequency> aofFrequency = default;
            Optional<PersistenceSettingRdbFrequency> rdbFrequency = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("aofEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    aofEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("rdbEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rdbEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("aofFrequency"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    aofFrequency = new PersistenceSettingAofFrequency(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("rdbFrequency"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rdbFrequency = new PersistenceSettingRdbFrequency(property.Value.GetString());
                    continue;
                }
            }
            return new RedisPersistenceSettings(Optional.ToNullable(aofEnabled), Optional.ToNullable(rdbEnabled), Optional.ToNullable(aofFrequency), Optional.ToNullable(rdbFrequency));
        }
    }
}
