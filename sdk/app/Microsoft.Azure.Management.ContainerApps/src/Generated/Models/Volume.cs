// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerApps.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Volume definitions for the Container App.
    /// </summary>
    public partial class Volume
    {
        /// <summary>
        /// Initializes a new instance of the Volume class.
        /// </summary>
        public Volume()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Volume class.
        /// </summary>
        /// <param name="name">Volume name.</param>
        /// <param name="storageType">Storage type for the volume. If not
        /// provided, use EmptyDir. Possible values include: 'AzureFile',
        /// 'EmptyDir'</param>
        /// <param name="storageName">Name of storage resource. No need to
        /// provide for EmptyDir.</param>
        public Volume(string name = default(string), string storageType = default(string), string storageName = default(string))
        {
            Name = name;
            StorageType = storageType;
            StorageName = storageName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets volume name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets storage type for the volume. If not provided, use
        /// EmptyDir. Possible values include: 'AzureFile', 'EmptyDir'
        /// </summary>
        [JsonProperty(PropertyName = "storageType")]
        public string StorageType { get; set; }

        /// <summary>
        /// Gets or sets name of storage resource. No need to provide for
        /// EmptyDir.
        /// </summary>
        [JsonProperty(PropertyName = "storageName")]
        public string StorageName { get; set; }

    }
}
