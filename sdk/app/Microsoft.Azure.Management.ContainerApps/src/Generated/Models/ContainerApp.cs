// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerApps.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Container App.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ContainerApp : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the ContainerApp class.
        /// </summary>
        public ContainerApp()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerApp class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="identity">managed identities for the Container App to
        /// interact with other Azure services without maintaining any secrets
        /// or credentials in code.</param>
        /// <param name="provisioningState">Provisioning state of the Container
        /// App. Possible values include: 'InProgress', 'Succeeded', 'Failed',
        /// 'Canceled'</param>
        /// <param name="managedEnvironmentId">Resource ID of the Container
        /// App's environment.</param>
        /// <param name="latestRevisionName">Name of the latest revision of the
        /// Container App.</param>
        /// <param name="latestRevisionFqdn">Fully Qualified Domain Name of the
        /// latest revision of the Container App.</param>
        /// <param name="customDomainVerificationId">Id used to verify domain
        /// name ownership</param>
        /// <param name="configuration">Non versioned Container App
        /// configuration properties.</param>
        /// <param name="template">Container App versioned application
        /// definition.</param>
        /// <param name="outboundIPAddresses">Outbound IP Addresses for
        /// container app.</param>
        public ContainerApp(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), ManagedServiceIdentity identity = default(ManagedServiceIdentity), string provisioningState = default(string), string managedEnvironmentId = default(string), string latestRevisionName = default(string), string latestRevisionFqdn = default(string), string customDomainVerificationId = default(string), Configuration configuration = default(Configuration), Template template = default(Template), IList<string> outboundIPAddresses = default(IList<string>))
            : base(location, id, name, type, systemData, tags)
        {
            Identity = identity;
            ProvisioningState = provisioningState;
            ManagedEnvironmentId = managedEnvironmentId;
            LatestRevisionName = latestRevisionName;
            LatestRevisionFqdn = latestRevisionFqdn;
            CustomDomainVerificationId = customDomainVerificationId;
            Configuration = configuration;
            Template = template;
            OutboundIPAddresses = outboundIPAddresses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets managed identities for the Container App to interact
        /// with other Azure services without maintaining any secrets or
        /// credentials in code.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public ManagedServiceIdentity Identity { get; set; }

        /// <summary>
        /// Gets provisioning state of the Container App. Possible values
        /// include: 'InProgress', 'Succeeded', 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets resource ID of the Container App's environment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.managedEnvironmentId")]
        public string ManagedEnvironmentId { get; set; }

        /// <summary>
        /// Gets name of the latest revision of the Container App.
        /// </summary>
        [JsonProperty(PropertyName = "properties.latestRevisionName")]
        public string LatestRevisionName { get; private set; }

        /// <summary>
        /// Gets fully Qualified Domain Name of the latest revision of the
        /// Container App.
        /// </summary>
        [JsonProperty(PropertyName = "properties.latestRevisionFqdn")]
        public string LatestRevisionFqdn { get; private set; }

        /// <summary>
        /// Gets id used to verify domain name ownership
        /// </summary>
        [JsonProperty(PropertyName = "properties.customDomainVerificationId")]
        public string CustomDomainVerificationId { get; private set; }

        /// <summary>
        /// Gets or sets non versioned Container App configuration properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.configuration")]
        public Configuration Configuration { get; set; }

        /// <summary>
        /// Gets or sets container App versioned application definition.
        /// </summary>
        [JsonProperty(PropertyName = "properties.template")]
        public Template Template { get; set; }

        /// <summary>
        /// Gets outbound IP Addresses for container app.
        /// </summary>
        [JsonProperty(PropertyName = "properties.outboundIPAddresses")]
        public IList<string> OutboundIPAddresses { get; private set; }

    }
}
