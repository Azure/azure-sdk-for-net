// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerApps.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Container App SourceControl.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SourceControl : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the SourceControl class.
        /// </summary>
        public SourceControl()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SourceControl class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="operationState">Current provisioning State of the
        /// operation. Possible values include: 'InProgress', 'Succeeded',
        /// 'Failed', 'Canceled'</param>
        /// <param name="repoUrl">The repo url which will be integrated to
        /// ContainerApp.</param>
        /// <param name="branch">The branch which will trigger the auto
        /// deployment</param>
        /// <param name="githubActionConfiguration">Container App Revision
        /// Template with all possible settings and the
        /// defaults if user did not provide them. The defaults are populated
        /// as they were at the creation time</param>
        public SourceControl(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string operationState = default(string), string repoUrl = default(string), string branch = default(string), GithubActionConfiguration githubActionConfiguration = default(GithubActionConfiguration))
            : base(id, name, type, systemData)
        {
            OperationState = operationState;
            RepoUrl = repoUrl;
            Branch = branch;
            GithubActionConfiguration = githubActionConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets current provisioning State of the operation. Possible values
        /// include: 'InProgress', 'Succeeded', 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.operationState")]
        public string OperationState { get; private set; }

        /// <summary>
        /// Gets or sets the repo url which will be integrated to ContainerApp.
        /// </summary>
        [JsonProperty(PropertyName = "properties.repoUrl")]
        public string RepoUrl { get; set; }

        /// <summary>
        /// Gets or sets the branch which will trigger the auto deployment
        /// </summary>
        [JsonProperty(PropertyName = "properties.branch")]
        public string Branch { get; set; }

        /// <summary>
        /// Gets or sets container App Revision Template with all possible
        /// settings and the
        /// defaults if user did not provide them. The defaults are populated
        /// as they were at the creation time
        /// </summary>
        [JsonProperty(PropertyName = "properties.githubActionConfiguration")]
        public GithubActionConfiguration GithubActionConfiguration { get; set; }

    }
}
