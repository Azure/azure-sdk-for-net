// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerApps.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Configuration properties for apps environment to join a Virtual Network
    /// </summary>
    public partial class VnetConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the VnetConfiguration class.
        /// </summary>
        public VnetConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VnetConfiguration class.
        /// </summary>
        /// <param name="internalProperty">Boolean indicating the environment
        /// only has an internal load balancer. These environments do not have
        /// a public static IP resource, must provide
        /// ControlPlaneSubnetResourceId and AppSubnetResourceId if enabling
        /// this property</param>
        /// <param name="infrastructureSubnetId">Resource ID of a subnet for
        /// infrastructure components. This subnet must be in the same VNET as
        /// the subnet defined in runtimeSubnetId. Must not overlap with any
        /// other provided IP ranges.</param>
        /// <param name="runtimeSubnetId">Resource ID of a subnet that
        /// Container App containers are injected into. This subnet must be in
        /// the same VNET as the subnet defined in infrastructureSubnetId. Must
        /// not overlap with any other provided IP ranges.</param>
        /// <param name="dockerBridgeCidr">CIDR notation IP range assigned to
        /// the Docker bridge, network. Must not overlap with any other
        /// provided IP ranges.</param>
        /// <param name="platformReservedCidr">IP range in CIDR notation that
        /// can be reserved for environment infrastructure IP addresses. Must
        /// not overlap with any other provided IP ranges.</param>
        /// <param name="platformReservedDnsIP"> An IP address from the IP
        /// range defined by platformReservedCidr that will be reserved for the
        /// internal DNS server.</param>
        public VnetConfiguration(bool? internalProperty = default(bool?), string infrastructureSubnetId = default(string), string runtimeSubnetId = default(string), string dockerBridgeCidr = default(string), string platformReservedCidr = default(string), string platformReservedDnsIP = default(string))
        {
            InternalProperty = internalProperty;
            InfrastructureSubnetId = infrastructureSubnetId;
            RuntimeSubnetId = runtimeSubnetId;
            DockerBridgeCidr = dockerBridgeCidr;
            PlatformReservedCidr = platformReservedCidr;
            PlatformReservedDnsIP = platformReservedDnsIP;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets boolean indicating the environment only has an
        /// internal load balancer. These environments do not have a public
        /// static IP resource, must provide ControlPlaneSubnetResourceId and
        /// AppSubnetResourceId if enabling this property
        /// </summary>
        [JsonProperty(PropertyName = "internal")]
        public bool? InternalProperty { get; set; }

        /// <summary>
        /// Gets or sets resource ID of a subnet for infrastructure components.
        /// This subnet must be in the same VNET as the subnet defined in
        /// runtimeSubnetId. Must not overlap with any other provided IP
        /// ranges.
        /// </summary>
        [JsonProperty(PropertyName = "infrastructureSubnetId")]
        public string InfrastructureSubnetId { get; set; }

        /// <summary>
        /// Gets or sets resource ID of a subnet that Container App containers
        /// are injected into. This subnet must be in the same VNET as the
        /// subnet defined in infrastructureSubnetId. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        [JsonProperty(PropertyName = "runtimeSubnetId")]
        public string RuntimeSubnetId { get; set; }

        /// <summary>
        /// Gets or sets CIDR notation IP range assigned to the Docker bridge,
        /// network. Must not overlap with any other provided IP ranges.
        /// </summary>
        [JsonProperty(PropertyName = "dockerBridgeCidr")]
        public string DockerBridgeCidr { get; set; }

        /// <summary>
        /// Gets or sets IP range in CIDR notation that can be reserved for
        /// environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        [JsonProperty(PropertyName = "platformReservedCidr")]
        public string PlatformReservedCidr { get; set; }

        /// <summary>
        /// Gets or sets  An IP address from the IP range defined by
        /// platformReservedCidr that will be reserved for the internal DNS
        /// server.
        /// </summary>
        [JsonProperty(PropertyName = "platformReservedDnsIP")]
        public string PlatformReservedDnsIP { get; set; }

    }
}
