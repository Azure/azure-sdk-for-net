// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerApps.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// HTTPGet specifies the http request to perform.
    /// </summary>
    public partial class ContainerAppProbeHttpGet
    {
        /// <summary>
        /// Initializes a new instance of the ContainerAppProbeHttpGet class.
        /// </summary>
        public ContainerAppProbeHttpGet()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerAppProbeHttpGet class.
        /// </summary>
        /// <param name="port">Name or number of the port to access on the
        /// container. Number must be in the range 1 to 65535. Name must be an
        /// IANA_SVC_NAME.</param>
        /// <param name="host">Host name to connect to, defaults to the pod IP.
        /// You probably want to set "Host" in httpHeaders instead.</param>
        /// <param name="httpHeaders">Custom headers to set in the request.
        /// HTTP allows repeated headers.</param>
        /// <param name="path">Path to access on the HTTP server.</param>
        /// <param name="scheme">Scheme to use for connecting to the host.
        /// Defaults to HTTP. Possible values include: 'HTTP', 'HTTPS'</param>
        public ContainerAppProbeHttpGet(int port, string host = default(string), IList<ContainerAppProbeHttpGetHttpHeadersItem> httpHeaders = default(IList<ContainerAppProbeHttpGetHttpHeadersItem>), string path = default(string), string scheme = default(string))
        {
            Host = host;
            HttpHeaders = httpHeaders;
            Path = path;
            Port = port;
            Scheme = scheme;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets host name to connect to, defaults to the pod IP. You
        /// probably want to set "Host" in httpHeaders instead.
        /// </summary>
        [JsonProperty(PropertyName = "host")]
        public string Host { get; set; }

        /// <summary>
        /// Gets or sets custom headers to set in the request. HTTP allows
        /// repeated headers.
        /// </summary>
        [JsonProperty(PropertyName = "httpHeaders")]
        public IList<ContainerAppProbeHttpGetHttpHeadersItem> HttpHeaders { get; set; }

        /// <summary>
        /// Gets or sets path to access on the HTTP server.
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets name or number of the port to access on the container.
        /// Number must be in the range 1 to 65535. Name must be an
        /// IANA_SVC_NAME.
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int Port { get; set; }

        /// <summary>
        /// Gets or sets scheme to use for connecting to the host. Defaults to
        /// HTTP. Possible values include: 'HTTP', 'HTTPS'
        /// </summary>
        [JsonProperty(PropertyName = "scheme")]
        public string Scheme { get; set; }

    }
}
