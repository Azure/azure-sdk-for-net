// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerApps.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Configuration properties that define the mutable settings of a
    /// Container App SourceControl
    /// </summary>
    public partial class GithubActionConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the GithubActionConfiguration class.
        /// </summary>
        public GithubActionConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GithubActionConfiguration class.
        /// </summary>
        /// <param name="registryInfo">Registry configurations.</param>
        /// <param name="azureCredentials">AzureCredentials
        /// configurations.</param>
        /// <param name="contextPath">Context path</param>
        /// <param name="image">Image name</param>
        /// <param name="publishType">Code or Image</param>
        /// <param name="os">Operation system</param>
        /// <param name="runtimeStack">Runtime stack</param>
        /// <param name="runtimeVersion">Runtime version</param>
        public GithubActionConfiguration(RegistryInfo registryInfo = default(RegistryInfo), AzureCredentials azureCredentials = default(AzureCredentials), string contextPath = default(string), string image = default(string), string publishType = default(string), string os = default(string), string runtimeStack = default(string), string runtimeVersion = default(string))
        {
            RegistryInfo = registryInfo;
            AzureCredentials = azureCredentials;
            ContextPath = contextPath;
            Image = image;
            PublishType = publishType;
            Os = os;
            RuntimeStack = runtimeStack;
            RuntimeVersion = runtimeVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets registry configurations.
        /// </summary>
        [JsonProperty(PropertyName = "registryInfo")]
        public RegistryInfo RegistryInfo { get; set; }

        /// <summary>
        /// Gets or sets azureCredentials configurations.
        /// </summary>
        [JsonProperty(PropertyName = "azureCredentials")]
        public AzureCredentials AzureCredentials { get; set; }

        /// <summary>
        /// Gets or sets context path
        /// </summary>
        [JsonProperty(PropertyName = "contextPath")]
        public string ContextPath { get; set; }

        /// <summary>
        /// Gets or sets image name
        /// </summary>
        [JsonProperty(PropertyName = "image")]
        public string Image { get; set; }

        /// <summary>
        /// Gets or sets code or Image
        /// </summary>
        [JsonProperty(PropertyName = "publishType")]
        public string PublishType { get; set; }

        /// <summary>
        /// Gets or sets operation system
        /// </summary>
        [JsonProperty(PropertyName = "os")]
        public string Os { get; set; }

        /// <summary>
        /// Gets or sets runtime stack
        /// </summary>
        [JsonProperty(PropertyName = "runtimeStack")]
        public string RuntimeStack { get; set; }

        /// <summary>
        /// Gets or sets runtime version
        /// </summary>
        [JsonProperty(PropertyName = "runtimeVersion")]
        public string RuntimeVersion { get; set; }

    }
}
