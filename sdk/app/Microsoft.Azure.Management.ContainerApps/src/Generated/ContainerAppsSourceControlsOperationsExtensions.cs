// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerApps
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ContainerAppsSourceControlsOperations.
    /// </summary>
    public static partial class ContainerAppsSourceControlsOperationsExtensions
    {
            /// <summary>
            /// Get the Container App SourceControls in a given resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            public static IPage<SourceControl> ListByContainerApp(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName)
            {
                return operations.ListByContainerAppAsync(resourceGroupName, containerAppName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the Container App SourceControls in a given resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SourceControl>> ListByContainerAppAsync(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByContainerAppWithHttpMessagesAsync(resourceGroupName, containerAppName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a SourceControl of a Container App.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            public static SourceControl Get(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name)
            {
                return operations.GetAsync(resourceGroupName, containerAppName, name).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a SourceControl of a Container App.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SourceControl> GetAsync(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, containerAppName, name, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update the SourceControl for a Container App.
            /// </summary>
            /// <remarks>
            /// Description for Create or update the SourceControl for a Container App.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            /// <param name='sourceControlEnvelope'>
            /// Properties used to create a Container App SourceControl
            /// </param>
            public static SourceControl CreateOrUpdate(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name, SourceControl sourceControlEnvelope)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, containerAppName, name, sourceControlEnvelope).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update the SourceControl for a Container App.
            /// </summary>
            /// <remarks>
            /// Description for Create or update the SourceControl for a Container App.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            /// <param name='sourceControlEnvelope'>
            /// Properties used to create a Container App SourceControl
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SourceControl> CreateOrUpdateAsync(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name, SourceControl sourceControlEnvelope, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, containerAppName, name, sourceControlEnvelope, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a Container App SourceControl.
            /// </summary>
            /// <remarks>
            /// Description for Delete a Container App SourceControl.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            public static void Delete(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name)
            {
                operations.DeleteAsync(resourceGroupName, containerAppName, name).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a Container App SourceControl.
            /// </summary>
            /// <remarks>
            /// Description for Delete a Container App SourceControl.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, containerAppName, name, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create or update the SourceControl for a Container App.
            /// </summary>
            /// <remarks>
            /// Description for Create or update the SourceControl for a Container App.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            /// <param name='sourceControlEnvelope'>
            /// Properties used to create a Container App SourceControl
            /// </param>
            public static SourceControl BeginCreateOrUpdate(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name, SourceControl sourceControlEnvelope)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, containerAppName, name, sourceControlEnvelope).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update the SourceControl for a Container App.
            /// </summary>
            /// <remarks>
            /// Description for Create or update the SourceControl for a Container App.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            /// <param name='sourceControlEnvelope'>
            /// Properties used to create a Container App SourceControl
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SourceControl> BeginCreateOrUpdateAsync(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name, SourceControl sourceControlEnvelope, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, containerAppName, name, sourceControlEnvelope, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a Container App SourceControl.
            /// </summary>
            /// <remarks>
            /// Description for Delete a Container App SourceControl.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            public static void BeginDelete(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name)
            {
                operations.BeginDeleteAsync(resourceGroupName, containerAppName, name).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a Container App SourceControl.
            /// </summary>
            /// <remarks>
            /// Description for Delete a Container App SourceControl.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='containerAppName'>
            /// Name of the Container App.
            /// </param>
            /// <param name='name'>
            /// Name of the Container App SourceControl.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IContainerAppsSourceControlsOperations operations, string resourceGroupName, string containerAppName, string name, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, containerAppName, name, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Get the Container App SourceControls in a given resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SourceControl> ListByContainerAppNext(this IContainerAppsSourceControlsOperations operations, string nextPageLink)
            {
                return operations.ListByContainerAppNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the Container App SourceControls in a given resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SourceControl>> ListByContainerAppNextAsync(this IContainerAppsSourceControlsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByContainerAppNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
