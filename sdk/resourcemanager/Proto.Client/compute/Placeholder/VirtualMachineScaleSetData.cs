// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Core;
using Azure.ResourceManager.Core.Adapters;
using System.Collections.Generic;

namespace Proto.Compute
{
    /// <summary> A class representing the VirtualMachineScaleSet data model. </summary>
    public partial class VirtualMachineScaleSetData : TrackedResource<ResourceGroupResourceIdentifier, Azure.ResourceManager.Compute.Models.VirtualMachineScaleSet>
    {
        /// <summary> Initializes a new instance of VirtualMachineScaleSetData. </summary>
        public VirtualMachineScaleSetData(Azure.ResourceManager.Compute.Models.VirtualMachineScaleSet vmScaleSet)
            : base(vmScaleSet.Id, vmScaleSet.Location, vmScaleSet)
        {
            Sku = vmScaleSet.Sku;
            Plan = vmScaleSet.Plan;
            Identity = vmScaleSet.Identity;
            Zones = vmScaleSet.Zones;
            UpgradePolicy = vmScaleSet.UpgradePolicy;
            AutomaticRepairsPolicy = vmScaleSet.AutomaticRepairsPolicy;
            VirtualMachineProfile = vmScaleSet.VirtualMachineProfile;
            ProvisioningState = vmScaleSet.ProvisioningState;
            Overprovision = vmScaleSet.Overprovision;
            DoNotRunExtensionsOnOverprovisionedVMs = vmScaleSet.DoNotRunExtensionsOnOverprovisionedVMs;
            UniqueId = vmScaleSet.UniqueId;
            SinglePlacementGroup = vmScaleSet.SinglePlacementGroup;
            ZoneBalance = vmScaleSet.ZoneBalance;
            PlatformFaultDomainCount = vmScaleSet.PlatformFaultDomainCount;
            ProximityPlacementGroup = vmScaleSet.ProximityPlacementGroup;
            AdditionalCapabilities = vmScaleSet.AdditionalCapabilities;
            ScaleInPolicy = vmScaleSet.ScaleInPolicy;
        }

        /// <summary> The virtual machine scale set sku. </summary>
        public Azure.ResourceManager.Compute.Models.Sku Sku { get; set; }
        /// <summary> Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**. </summary>
        public Azure.ResourceManager.Compute.Models.Plan Plan { get; set; }
        /// <summary> The identity of the virtual machine scale set, if configured. </summary>
        public VirtualMachineScaleSetIdentity Identity { get; set; }
        /// <summary> The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set. </summary>
        public IList<string> Zones { get; }
        /// <summary> The upgrade policy. </summary>
        public UpgradePolicy UpgradePolicy { get; set; }
        /// <summary> Policy for automatic repairs. </summary>
        public AutomaticRepairsPolicy AutomaticRepairsPolicy { get; set; }
        /// <summary> The virtual machine profile. </summary>
        public VirtualMachineScaleSetVMProfile VirtualMachineProfile { get; set; }
        /// <summary> The provisioning state, which only appears in the response. </summary>
        public string ProvisioningState { get; }
        /// <summary> Specifies whether the Virtual Machine Scale Set should be overprovisioned. </summary>
        public bool? Overprovision { get; set; }
        /// <summary> When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs. </summary>
        public bool? DoNotRunExtensionsOnOverprovisionedVMs { get; set; }
        /// <summary> Specifies the ID which uniquely identifies a Virtual Machine Scale Set. </summary>
        public string UniqueId { get; }
        /// <summary> When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true. </summary>
        public bool? SinglePlacementGroup { get; set; }
        /// <summary> Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. </summary>
        public bool? ZoneBalance { get; set; }
        /// <summary> Fault Domain count for each placement group. </summary>
        public int? PlatformFaultDomainCount { get; set; }
        /// <summary> Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01. </summary>
        public Azure.ResourceManager.Compute.Models.SubResource ProximityPlacementGroup { get; set; }
        /// <summary> Specifies information about the dedicated host group that the virtual machine scale set resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01. </summary>
        public Azure.ResourceManager.Compute.Models.SubResource HostGroup { get; set; }
        /// <summary> Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type. </summary>
        public AdditionalCapabilities AdditionalCapabilities { get; set; }
        /// <summary> Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in. </summary>
        public ScaleInPolicy ScaleInPolicy { get; set; }
    }
}
