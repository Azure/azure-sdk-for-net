// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Billing.Models;

namespace Azure.ResourceManager.Billing
{
    /// <summary> The Address service client. </summary>
    public partial class AddressOperations
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal AddressRestOperations RestClient { get; }

        /// <summary> Initializes a new instance of AddressOperations for mocking. </summary>
        protected AddressOperations()
        {
        }

        /// <summary> Initializes a new instance of AddressOperations. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="endpoint"> server parameter. </param>
        internal AddressOperations(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint = null)
        {
            RestClient = new AddressRestOperations(clientDiagnostics, pipeline, endpoint);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <summary> Validates an address. Use the operation to validate an address before using it as soldTo or a billTo address. </summary>
        /// <param name="address"> The AddressDetails to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<ValidateAddressResponse>> ValidateAsync(AddressDetails address, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AddressOperations.Validate");
            scope.Start();
            try
            {
                return await RestClient.ValidateAsync(address, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Validates an address. Use the operation to validate an address before using it as soldTo or a billTo address. </summary>
        /// <param name="address"> The AddressDetails to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<ValidateAddressResponse> Validate(AddressDetails address, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("AddressOperations.Validate");
            scope.Start();
            try
            {
                return RestClient.Validate(address, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
