// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Billing.Models
{
    public partial class Transaction : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind.Value.ToString());
            }
            if (Optional.IsDefined(TransactionType))
            {
                writer.WritePropertyName("transactionType");
                writer.WriteStringValue(TransactionType.Value.ToString());
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static Transaction DeserializeTransaction(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<TransactionTypeKind> kind = default;
            Optional<DateTimeOffset> date = default;
            Optional<string> invoice = default;
            Optional<string> invoiceId = default;
            Optional<string> orderId = default;
            Optional<string> orderName = default;
            Optional<string> productFamily = default;
            Optional<string> productTypeId = default;
            Optional<string> productType = default;
            Optional<string> productDescription = default;
            Optional<ReservationType> transactionType = default;
            Optional<Amount> transactionAmount = default;
            Optional<int> quantity = default;
            Optional<string> invoiceSectionId = default;
            Optional<string> invoiceSectionDisplayName = default;
            Optional<string> billingProfileId = default;
            Optional<string> billingProfileDisplayName = default;
            Optional<string> customerId = default;
            Optional<string> customerDisplayName = default;
            Optional<string> subscriptionId = default;
            Optional<string> subscriptionName = default;
            Optional<string> azurePlan = default;
            Optional<Amount> azureCreditApplied = default;
            Optional<string> billingCurrency = default;
            Optional<float> discount = default;
            Optional<Amount> effectivePrice = default;
            Optional<float> exchangeRate = default;
            Optional<Amount> marketPrice = default;
            Optional<string> pricingCurrency = default;
            Optional<DateTimeOffset> servicePeriodStartDate = default;
            Optional<DateTimeOffset> servicePeriodEndDate = default;
            Optional<Amount> subTotal = default;
            Optional<Amount> tax = default;
            Optional<string> unitOfMeasure = default;
            Optional<float> units = default;
            Optional<string> unitType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("kind"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            kind = new TransactionTypeKind(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("date"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            date = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("invoice"))
                        {
                            invoice = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceId"))
                        {
                            invoiceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("orderId"))
                        {
                            orderId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("orderName"))
                        {
                            orderName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productFamily"))
                        {
                            productFamily = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productTypeId"))
                        {
                            productTypeId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productType"))
                        {
                            productType = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productDescription"))
                        {
                            productDescription = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("transactionType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            transactionType = new ReservationType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("transactionAmount"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            transactionAmount = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("quantity"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            quantity = property0.Value.GetInt32();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionId"))
                        {
                            invoiceSectionId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionDisplayName"))
                        {
                            invoiceSectionDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileId"))
                        {
                            billingProfileId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileDisplayName"))
                        {
                            billingProfileDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("customerId"))
                        {
                            customerId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("customerDisplayName"))
                        {
                            customerDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("subscriptionId"))
                        {
                            subscriptionId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("subscriptionName"))
                        {
                            subscriptionName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("azurePlan"))
                        {
                            azurePlan = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("azureCreditApplied"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            azureCreditApplied = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("billingCurrency"))
                        {
                            billingCurrency = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("discount"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            discount = property0.Value.GetSingle();
                            continue;
                        }
                        if (property0.NameEquals("effectivePrice"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            effectivePrice = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("exchangeRate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            exchangeRate = property0.Value.GetSingle();
                            continue;
                        }
                        if (property0.NameEquals("marketPrice"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            marketPrice = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("pricingCurrency"))
                        {
                            pricingCurrency = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("servicePeriodStartDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            servicePeriodStartDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("servicePeriodEndDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            servicePeriodEndDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("subTotal"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            subTotal = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("tax"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            tax = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("unitOfMeasure"))
                        {
                            unitOfMeasure = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("units"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            units = property0.Value.GetSingle();
                            continue;
                        }
                        if (property0.NameEquals("unitType"))
                        {
                            unitType = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new Transaction(id.Value, name.Value, type.Value, Optional.ToNullable(kind), Optional.ToNullable(date), invoice.Value, invoiceId.Value, orderId.Value, orderName.Value, productFamily.Value, productTypeId.Value, productType.Value, productDescription.Value, Optional.ToNullable(transactionType), transactionAmount.Value, Optional.ToNullable(quantity), invoiceSectionId.Value, invoiceSectionDisplayName.Value, billingProfileId.Value, billingProfileDisplayName.Value, customerId.Value, customerDisplayName.Value, subscriptionId.Value, subscriptionName.Value, azurePlan.Value, azureCreditApplied.Value, billingCurrency.Value, Optional.ToNullable(discount), effectivePrice.Value, Optional.ToNullable(exchangeRate), marketPrice.Value, pricingCurrency.Value, Optional.ToNullable(servicePeriodStartDate), Optional.ToNullable(servicePeriodEndDate), subTotal.Value, tax.Value, unitOfMeasure.Value, Optional.ToNullable(units), unitType.Value);
        }
    }
}
