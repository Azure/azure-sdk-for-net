// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Billing.Models
{
    public partial class AddressDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(FirstName))
            {
                writer.WritePropertyName("firstName");
                writer.WriteStringValue(FirstName);
            }
            if (Optional.IsDefined(LastName))
            {
                writer.WritePropertyName("lastName");
                writer.WriteStringValue(LastName);
            }
            if (Optional.IsDefined(CompanyName))
            {
                writer.WritePropertyName("companyName");
                writer.WriteStringValue(CompanyName);
            }
            writer.WritePropertyName("addressLine1");
            writer.WriteStringValue(AddressLine1);
            if (Optional.IsDefined(AddressLine2))
            {
                writer.WritePropertyName("addressLine2");
                writer.WriteStringValue(AddressLine2);
            }
            if (Optional.IsDefined(AddressLine3))
            {
                writer.WritePropertyName("addressLine3");
                writer.WriteStringValue(AddressLine3);
            }
            if (Optional.IsDefined(City))
            {
                writer.WritePropertyName("city");
                writer.WriteStringValue(City);
            }
            if (Optional.IsDefined(District))
            {
                writer.WritePropertyName("district");
                writer.WriteStringValue(District);
            }
            if (Optional.IsDefined(Region))
            {
                writer.WritePropertyName("region");
                writer.WriteStringValue(Region);
            }
            writer.WritePropertyName("country");
            writer.WriteStringValue(Country);
            if (Optional.IsDefined(PostalCode))
            {
                writer.WritePropertyName("postalCode");
                writer.WriteStringValue(PostalCode);
            }
            if (Optional.IsDefined(Email))
            {
                writer.WritePropertyName("email");
                writer.WriteStringValue(Email);
            }
            if (Optional.IsDefined(PhoneNumber))
            {
                writer.WritePropertyName("phoneNumber");
                writer.WriteStringValue(PhoneNumber);
            }
            writer.WriteEndObject();
        }

        internal static AddressDetails DeserializeAddressDetails(JsonElement element)
        {
            Optional<string> firstName = default;
            Optional<string> lastName = default;
            Optional<string> companyName = default;
            string addressLine1 = default;
            Optional<string> addressLine2 = default;
            Optional<string> addressLine3 = default;
            Optional<string> city = default;
            Optional<string> district = default;
            Optional<string> region = default;
            string country = default;
            Optional<string> postalCode = default;
            Optional<string> email = default;
            Optional<string> phoneNumber = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("firstName"))
                {
                    firstName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastName"))
                {
                    lastName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("companyName"))
                {
                    companyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("addressLine1"))
                {
                    addressLine1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("addressLine2"))
                {
                    addressLine2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("addressLine3"))
                {
                    addressLine3 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("city"))
                {
                    city = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("district"))
                {
                    district = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("region"))
                {
                    region = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("postalCode"))
                {
                    postalCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("email"))
                {
                    email = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("phoneNumber"))
                {
                    phoneNumber = property.Value.GetString();
                    continue;
                }
            }
            return new AddressDetails(firstName.Value, lastName.Value, companyName.Value, addressLine1, addressLine2.Value, addressLine3.Value, city.Value, district.Value, region.Value, country, postalCode.Value, email.Value, phoneNumber.Value);
        }
    }
}
