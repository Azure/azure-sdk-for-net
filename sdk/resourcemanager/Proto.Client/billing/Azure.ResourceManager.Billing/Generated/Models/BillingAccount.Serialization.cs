// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Billing.Models
{
    public partial class BillingAccount : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(DisplayName))
            {
                writer.WritePropertyName("displayName");
                writer.WriteStringValue(DisplayName);
            }
            if (Optional.IsDefined(SoldTo))
            {
                writer.WritePropertyName("soldTo");
                writer.WriteObjectValue(SoldTo);
            }
            if (Optional.IsDefined(BillingProfiles))
            {
                writer.WritePropertyName("billingProfiles");
                writer.WriteObjectValue(BillingProfiles);
            }
            if (Optional.IsCollectionDefined(Departments))
            {
                writer.WritePropertyName("departments");
                writer.WriteStartArray();
                foreach (var item in Departments)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(EnrollmentAccounts))
            {
                writer.WritePropertyName("enrollmentAccounts");
                writer.WriteStartArray();
                foreach (var item in EnrollmentAccounts)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static BillingAccount DeserializeBillingAccount(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<string> displayName = default;
            Optional<AddressDetails> soldTo = default;
            Optional<AgreementType> agreementType = default;
            Optional<AccountType> accountType = default;
            Optional<AccountStatus> accountStatus = default;
            Optional<BillingProfilesOnExpand> billingProfiles = default;
            Optional<Enrollment> enrollmentDetails = default;
            Optional<IList<Department>> departments = default;
            Optional<IList<EnrollmentAccount>> enrollmentAccounts = default;
            Optional<bool> hasReadAccess = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("displayName"))
                        {
                            displayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("soldTo"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            soldTo = AddressDetails.DeserializeAddressDetails(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("agreementType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            agreementType = new AgreementType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("accountType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            accountType = new AccountType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("accountStatus"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            accountStatus = new AccountStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("billingProfiles"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            billingProfiles = BillingProfilesOnExpand.DeserializeBillingProfilesOnExpand(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("enrollmentDetails"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            enrollmentDetails = Enrollment.DeserializeEnrollment(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("departments"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<Department> array = new List<Department>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(Department.DeserializeDepartment(item));
                            }
                            departments = array;
                            continue;
                        }
                        if (property0.NameEquals("enrollmentAccounts"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<EnrollmentAccount> array = new List<EnrollmentAccount>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(EnrollmentAccount.DeserializeEnrollmentAccount(item));
                            }
                            enrollmentAccounts = array;
                            continue;
                        }
                        if (property0.NameEquals("hasReadAccess"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            hasReadAccess = property0.Value.GetBoolean();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new BillingAccount(id.Value, name.Value, type.Value, displayName.Value, soldTo.Value, Optional.ToNullable(agreementType), Optional.ToNullable(accountType), Optional.ToNullable(accountStatus), billingProfiles.Value, enrollmentDetails.Value, Optional.ToList(departments), Optional.ToList(enrollmentAccounts), Optional.ToNullable(hasReadAccess));
        }
    }
}
