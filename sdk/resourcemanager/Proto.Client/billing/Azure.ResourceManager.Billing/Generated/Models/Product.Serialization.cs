// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Billing.Models
{
    public partial class Product : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(AutoRenew))
            {
                writer.WritePropertyName("autoRenew");
                writer.WriteStringValue(AutoRenew.Value.ToString());
            }
            if (Optional.IsDefined(Status))
            {
                writer.WritePropertyName("status");
                writer.WriteStringValue(Status.Value.ToString());
            }
            if (Optional.IsDefined(BillingFrequency))
            {
                writer.WritePropertyName("billingFrequency");
                writer.WriteStringValue(BillingFrequency.Value.ToString());
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static Product DeserializeProduct(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<AutoRenew> autoRenew = default;
            Optional<string> displayName = default;
            Optional<DateTimeOffset> purchaseDate = default;
            Optional<string> productTypeId = default;
            Optional<string> productType = default;
            Optional<ProductStatusType> status = default;
            Optional<DateTimeOffset> endDate = default;
            Optional<BillingFrequency> billingFrequency = default;
            Optional<Amount> lastCharge = default;
            Optional<DateTimeOffset> lastChargeDate = default;
            Optional<float> quantity = default;
            Optional<string> skuId = default;
            Optional<string> skuDescription = default;
            Optional<string> tenantId = default;
            Optional<string> availabilityId = default;
            Optional<string> invoiceSectionId = default;
            Optional<string> invoiceSectionDisplayName = default;
            Optional<string> billingProfileId = default;
            Optional<string> billingProfileDisplayName = default;
            Optional<string> customerId = default;
            Optional<string> customerDisplayName = default;
            Optional<Reseller> reseller = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("autoRenew"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            autoRenew = new AutoRenew(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("displayName"))
                        {
                            displayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("purchaseDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            purchaseDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("productTypeId"))
                        {
                            productTypeId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productType"))
                        {
                            productType = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("status"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            status = new ProductStatusType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("endDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            endDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("billingFrequency"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            billingFrequency = new BillingFrequency(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("lastCharge"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            lastCharge = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("lastChargeDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            lastChargeDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("quantity"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            quantity = property0.Value.GetSingle();
                            continue;
                        }
                        if (property0.NameEquals("skuId"))
                        {
                            skuId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("skuDescription"))
                        {
                            skuDescription = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("tenantId"))
                        {
                            tenantId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("availabilityId"))
                        {
                            availabilityId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionId"))
                        {
                            invoiceSectionId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionDisplayName"))
                        {
                            invoiceSectionDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileId"))
                        {
                            billingProfileId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileDisplayName"))
                        {
                            billingProfileDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("customerId"))
                        {
                            customerId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("customerDisplayName"))
                        {
                            customerDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("reseller"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            reseller = Reseller.DeserializeReseller(property0.Value);
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new Product(id.Value, name.Value, type.Value, Optional.ToNullable(autoRenew), displayName.Value, Optional.ToNullable(purchaseDate), productTypeId.Value, productType.Value, Optional.ToNullable(status), Optional.ToNullable(endDate), Optional.ToNullable(billingFrequency), lastCharge.Value, Optional.ToNullable(lastChargeDate), Optional.ToNullable(quantity), skuId.Value, skuDescription.Value, tenantId.Value, availabilityId.Value, invoiceSectionId.Value, invoiceSectionDisplayName.Value, billingProfileId.Value, billingProfileDisplayName.Value, customerId.Value, customerDisplayName.Value, reseller.Value);
        }
    }
}
