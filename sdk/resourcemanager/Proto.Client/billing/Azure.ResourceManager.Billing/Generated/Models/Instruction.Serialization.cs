// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Billing.Models
{
    public partial class Instruction : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(Amount))
            {
                writer.WritePropertyName("amount");
                writer.WriteNumberValue(Amount.Value);
            }
            if (Optional.IsDefined(StartDate))
            {
                writer.WritePropertyName("startDate");
                writer.WriteStringValue(StartDate.Value, "O");
            }
            if (Optional.IsDefined(EndDate))
            {
                writer.WritePropertyName("endDate");
                writer.WriteStringValue(EndDate.Value, "O");
            }
            if (Optional.IsDefined(CreationDate))
            {
                writer.WritePropertyName("creationDate");
                writer.WriteStringValue(CreationDate.Value, "O");
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static Instruction DeserializeInstruction(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<float> amount = default;
            Optional<DateTimeOffset> startDate = default;
            Optional<DateTimeOffset> endDate = default;
            Optional<DateTimeOffset> creationDate = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("amount"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            amount = property0.Value.GetSingle();
                            continue;
                        }
                        if (property0.NameEquals("startDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            startDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("endDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            endDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("creationDate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            creationDate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new Instruction(id.Value, name.Value, type.Value, Optional.ToNullable(amount), Optional.ToNullable(startDate), Optional.ToNullable(endDate), Optional.ToNullable(creationDate));
        }
    }
}
