// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Billing.Models
{
    public partial class BillingProperty : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(CostCenter))
            {
                writer.WritePropertyName("costCenter");
                writer.WriteStringValue(CostCenter);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static BillingProperty DeserializeBillingProperty(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<string> accountAdminNotificationEmailAddress = default;
            Optional<string> billingTenantId = default;
            Optional<string> billingAccountId = default;
            Optional<string> billingAccountDisplayName = default;
            Optional<string> billingProfileId = default;
            Optional<string> billingProfileDisplayName = default;
            Optional<BillingProfileStatus> billingProfileStatus = default;
            Optional<BillingProfileStatusReasonCode> billingProfileStatusReasonCode = default;
            Optional<BillingProfileSpendingLimit> billingProfileSpendingLimit = default;
            Optional<string> costCenter = default;
            Optional<string> invoiceSectionId = default;
            Optional<string> invoiceSectionDisplayName = default;
            Optional<bool> isAccountAdmin = default;
            Optional<string> productId = default;
            Optional<string> productName = default;
            Optional<string> skuId = default;
            Optional<string> skuDescription = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("accountAdminNotificationEmailAddress"))
                        {
                            accountAdminNotificationEmailAddress = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingTenantId"))
                        {
                            billingTenantId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingAccountId"))
                        {
                            billingAccountId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingAccountDisplayName"))
                        {
                            billingAccountDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileId"))
                        {
                            billingProfileId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileDisplayName"))
                        {
                            billingProfileDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileStatus"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            billingProfileStatus = new BillingProfileStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("billingProfileStatusReasonCode"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            billingProfileStatusReasonCode = new BillingProfileStatusReasonCode(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("billingProfileSpendingLimit"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            billingProfileSpendingLimit = new BillingProfileSpendingLimit(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("costCenter"))
                        {
                            costCenter = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionId"))
                        {
                            invoiceSectionId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionDisplayName"))
                        {
                            invoiceSectionDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("isAccountAdmin"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            isAccountAdmin = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("productId"))
                        {
                            productId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("productName"))
                        {
                            productName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("skuId"))
                        {
                            skuId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("skuDescription"))
                        {
                            skuDescription = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new BillingProperty(id.Value, name.Value, type.Value, accountAdminNotificationEmailAddress.Value, billingTenantId.Value, billingAccountId.Value, billingAccountDisplayName.Value, billingProfileId.Value, billingProfileDisplayName.Value, Optional.ToNullable(billingProfileStatus), Optional.ToNullable(billingProfileStatusReasonCode), Optional.ToNullable(billingProfileSpendingLimit), costCenter.Value, invoiceSectionId.Value, invoiceSectionDisplayName.Value, Optional.ToNullable(isAccountAdmin), productId.Value, productName.Value, skuId.Value, skuDescription.Value);
        }
    }
}
