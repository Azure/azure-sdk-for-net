// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Billing.Models
{
    /// <summary> A transaction. </summary>
    public partial class Transaction : Resource
    {
        /// <summary> Initializes a new instance of Transaction. </summary>
        public Transaction()
        {
        }

        /// <summary> Initializes a new instance of Transaction. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="kind"> The kind of transaction. Options are all or reservation. </param>
        /// <param name="date"> The date of transaction. </param>
        /// <param name="invoice"> Invoice on which the transaction was billed or &apos;pending&apos; if the transaction is not billed. </param>
        /// <param name="invoiceId"> The ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed. </param>
        /// <param name="orderId"> The order ID of the reservation. The field is only applicable for transaction of kind reservation. </param>
        /// <param name="orderName"> The name of the reservation order. The field is only applicable for transactions of kind reservation. </param>
        /// <param name="productFamily"> The family of the product for which the transaction took place. </param>
        /// <param name="productTypeId"> The ID of the product type for which the transaction took place. </param>
        /// <param name="productType"> The type of the product for which the transaction took place. </param>
        /// <param name="productDescription"> The description of the product for which the transaction took place. </param>
        /// <param name="transactionType"> The type of transaction. </param>
        /// <param name="transactionAmount"> The charge associated with the transaction. </param>
        /// <param name="quantity"> The quantity purchased in the transaction. </param>
        /// <param name="invoiceSectionId"> The ID of the invoice section which will be billed for the transaction. </param>
        /// <param name="invoiceSectionDisplayName"> The name of the invoice section which will be billed for the transaction. </param>
        /// <param name="billingProfileId"> The ID of the billing profile which will be billed for the transaction. </param>
        /// <param name="billingProfileDisplayName"> The name of the billing profile which will be billed for the transaction. </param>
        /// <param name="customerId"> The ID of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement billing account. </param>
        /// <param name="customerDisplayName"> The name of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement billing account. </param>
        /// <param name="subscriptionId"> The ID of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation. </param>
        /// <param name="subscriptionName"> The name of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation. </param>
        /// <param name="azurePlan"> The type of azure plan of the subscription that was used for the transaction. </param>
        /// <param name="azureCreditApplied"> The amount of any Azure credits automatically applied to this transaction. </param>
        /// <param name="billingCurrency"> The ISO 4217 code for the currency in which this transaction is billed. </param>
        /// <param name="discount"> The percentage discount, if any, applied to this transaction. </param>
        /// <param name="effectivePrice"> The price of the product after applying any discounts. </param>
        /// <param name="exchangeRate"> The exchange rate used to convert charged amount to billing currency, if applicable. </param>
        /// <param name="marketPrice"> The retail price of the product. </param>
        /// <param name="pricingCurrency"> The ISO 4217 code for the currency in which the product is priced. </param>
        /// <param name="servicePeriodStartDate"> The date of the purchase of the product, or the start date of the month in which usage started. </param>
        /// <param name="servicePeriodEndDate"> The end date of the product term, or the end date of the month in which usage ended. </param>
        /// <param name="subTotal"> The pre-tax charged amount for the transaction. </param>
        /// <param name="tax"> The tax amount applied to the transaction. </param>
        /// <param name="unitOfMeasure"> The unit of measure used to bill for the product. For example, compute services are billed per hour. </param>
        /// <param name="units"> The number of units used for a given product. </param>
        /// <param name="unitType"> The description for the unit of measure for a given product. </param>
        internal Transaction(string id, string name, string type, TransactionTypeKind? kind, DateTimeOffset? date, string invoice, string invoiceId, string orderId, string orderName, string productFamily, string productTypeId, string productType, string productDescription, ReservationType? transactionType, Amount transactionAmount, int? quantity, string invoiceSectionId, string invoiceSectionDisplayName, string billingProfileId, string billingProfileDisplayName, string customerId, string customerDisplayName, string subscriptionId, string subscriptionName, string azurePlan, Amount azureCreditApplied, string billingCurrency, float? discount, Amount effectivePrice, float? exchangeRate, Amount marketPrice, string pricingCurrency, DateTimeOffset? servicePeriodStartDate, DateTimeOffset? servicePeriodEndDate, Amount subTotal, Amount tax, string unitOfMeasure, float? units, string unitType) : base(id, name, type)
        {
            Kind = kind;
            Date = date;
            Invoice = invoice;
            InvoiceId = invoiceId;
            OrderId = orderId;
            OrderName = orderName;
            ProductFamily = productFamily;
            ProductTypeId = productTypeId;
            ProductType = productType;
            ProductDescription = productDescription;
            TransactionType = transactionType;
            TransactionAmount = transactionAmount;
            Quantity = quantity;
            InvoiceSectionId = invoiceSectionId;
            InvoiceSectionDisplayName = invoiceSectionDisplayName;
            BillingProfileId = billingProfileId;
            BillingProfileDisplayName = billingProfileDisplayName;
            CustomerId = customerId;
            CustomerDisplayName = customerDisplayName;
            SubscriptionId = subscriptionId;
            SubscriptionName = subscriptionName;
            AzurePlan = azurePlan;
            AzureCreditApplied = azureCreditApplied;
            BillingCurrency = billingCurrency;
            Discount = discount;
            EffectivePrice = effectivePrice;
            ExchangeRate = exchangeRate;
            MarketPrice = marketPrice;
            PricingCurrency = pricingCurrency;
            ServicePeriodStartDate = servicePeriodStartDate;
            ServicePeriodEndDate = servicePeriodEndDate;
            SubTotal = subTotal;
            Tax = tax;
            UnitOfMeasure = unitOfMeasure;
            Units = units;
            UnitType = unitType;
        }

        /// <summary> The kind of transaction. Options are all or reservation. </summary>
        public TransactionTypeKind? Kind { get; set; }
        /// <summary> The date of transaction. </summary>
        public DateTimeOffset? Date { get; }
        /// <summary> Invoice on which the transaction was billed or &apos;pending&apos; if the transaction is not billed. </summary>
        public string Invoice { get; }
        /// <summary> The ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed. </summary>
        public string InvoiceId { get; }
        /// <summary> The order ID of the reservation. The field is only applicable for transaction of kind reservation. </summary>
        public string OrderId { get; }
        /// <summary> The name of the reservation order. The field is only applicable for transactions of kind reservation. </summary>
        public string OrderName { get; }
        /// <summary> The family of the product for which the transaction took place. </summary>
        public string ProductFamily { get; }
        /// <summary> The ID of the product type for which the transaction took place. </summary>
        public string ProductTypeId { get; }
        /// <summary> The type of the product for which the transaction took place. </summary>
        public string ProductType { get; }
        /// <summary> The description of the product for which the transaction took place. </summary>
        public string ProductDescription { get; }
        /// <summary> The type of transaction. </summary>
        public ReservationType? TransactionType { get; set; }
        /// <summary> The charge associated with the transaction. </summary>
        public Amount TransactionAmount { get; }
        /// <summary> The quantity purchased in the transaction. </summary>
        public int? Quantity { get; }
        /// <summary> The ID of the invoice section which will be billed for the transaction. </summary>
        public string InvoiceSectionId { get; }
        /// <summary> The name of the invoice section which will be billed for the transaction. </summary>
        public string InvoiceSectionDisplayName { get; }
        /// <summary> The ID of the billing profile which will be billed for the transaction. </summary>
        public string BillingProfileId { get; }
        /// <summary> The name of the billing profile which will be billed for the transaction. </summary>
        public string BillingProfileDisplayName { get; }
        /// <summary> The ID of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement billing account. </summary>
        public string CustomerId { get; }
        /// <summary> The name of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement billing account. </summary>
        public string CustomerDisplayName { get; }
        /// <summary> The ID of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation. </summary>
        public string SubscriptionId { get; }
        /// <summary> The name of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation. </summary>
        public string SubscriptionName { get; }
        /// <summary> The type of azure plan of the subscription that was used for the transaction. </summary>
        public string AzurePlan { get; }
        /// <summary> The amount of any Azure credits automatically applied to this transaction. </summary>
        public Amount AzureCreditApplied { get; }
        /// <summary> The ISO 4217 code for the currency in which this transaction is billed. </summary>
        public string BillingCurrency { get; }
        /// <summary> The percentage discount, if any, applied to this transaction. </summary>
        public float? Discount { get; }
        /// <summary> The price of the product after applying any discounts. </summary>
        public Amount EffectivePrice { get; }
        /// <summary> The exchange rate used to convert charged amount to billing currency, if applicable. </summary>
        public float? ExchangeRate { get; }
        /// <summary> The retail price of the product. </summary>
        public Amount MarketPrice { get; }
        /// <summary> The ISO 4217 code for the currency in which the product is priced. </summary>
        public string PricingCurrency { get; }
        /// <summary> The date of the purchase of the product, or the start date of the month in which usage started. </summary>
        public DateTimeOffset? ServicePeriodStartDate { get; }
        /// <summary> The end date of the product term, or the end date of the month in which usage ended. </summary>
        public DateTimeOffset? ServicePeriodEndDate { get; }
        /// <summary> The pre-tax charged amount for the transaction. </summary>
        public Amount SubTotal { get; }
        /// <summary> The tax amount applied to the transaction. </summary>
        public Amount Tax { get; }
        /// <summary> The unit of measure used to bill for the product. For example, compute services are billed per hour. </summary>
        public string UnitOfMeasure { get; }
        /// <summary> The number of units used for a given product. </summary>
        public float? Units { get; }
        /// <summary> The description for the unit of measure for a given product. </summary>
        public string UnitType { get; }
    }
}
