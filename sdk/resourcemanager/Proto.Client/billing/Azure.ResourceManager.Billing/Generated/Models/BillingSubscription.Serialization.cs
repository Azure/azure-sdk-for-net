// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Billing.Models
{
    public partial class BillingSubscription : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(SubscriptionBillingStatus))
            {
                writer.WritePropertyName("subscriptionBillingStatus");
                writer.WriteStringValue(SubscriptionBillingStatus.Value.ToString());
            }
            if (Optional.IsDefined(CostCenter))
            {
                writer.WritePropertyName("costCenter");
                writer.WriteStringValue(CostCenter);
            }
            if (Optional.IsDefined(SkuId))
            {
                writer.WritePropertyName("skuId");
                writer.WriteStringValue(SkuId);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static BillingSubscription DeserializeBillingSubscription(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<string> displayName = default;
            Optional<Guid> subscriptionId = default;
            Optional<BillingSubscriptionStatusType> subscriptionBillingStatus = default;
            Optional<Amount> lastMonthCharges = default;
            Optional<Amount> monthToDateCharges = default;
            Optional<string> billingProfileId = default;
            Optional<string> billingProfileDisplayName = default;
            Optional<string> costCenter = default;
            Optional<string> customerId = default;
            Optional<string> customerDisplayName = default;
            Optional<string> invoiceSectionId = default;
            Optional<string> invoiceSectionDisplayName = default;
            Optional<Reseller> reseller = default;
            Optional<string> skuId = default;
            Optional<string> skuDescription = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("displayName"))
                        {
                            displayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("subscriptionId"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            subscriptionId = property0.Value.GetGuid();
                            continue;
                        }
                        if (property0.NameEquals("subscriptionBillingStatus"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            subscriptionBillingStatus = new BillingSubscriptionStatusType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("lastMonthCharges"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            lastMonthCharges = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("monthToDateCharges"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            monthToDateCharges = Amount.DeserializeAmount(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("billingProfileId"))
                        {
                            billingProfileId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("billingProfileDisplayName"))
                        {
                            billingProfileDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("costCenter"))
                        {
                            costCenter = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("customerId"))
                        {
                            customerId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("customerDisplayName"))
                        {
                            customerDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionId"))
                        {
                            invoiceSectionId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("invoiceSectionDisplayName"))
                        {
                            invoiceSectionDisplayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("reseller"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            reseller = Reseller.DeserializeReseller(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("skuId"))
                        {
                            skuId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("skuDescription"))
                        {
                            skuDescription = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new BillingSubscription(id.Value, name.Value, type.Value, displayName.Value, Optional.ToNullable(subscriptionId), Optional.ToNullable(subscriptionBillingStatus), lastMonthCharges.Value, monthToDateCharges.Value, billingProfileId.Value, billingProfileDisplayName.Value, costCenter.Value, customerId.Value, customerDisplayName.Value, invoiceSectionId.Value, invoiceSectionDisplayName.Value, reseller.Value, skuId.Value, skuDescription.Value);
        }
    }
}
