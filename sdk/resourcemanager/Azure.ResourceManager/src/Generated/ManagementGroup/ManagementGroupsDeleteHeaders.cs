// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure;
using Azure.Core;

namespace Azure.ResourceManager.Core
{
    internal partial class ManagementGroupsDeleteHeaders
    {
        private readonly Response _response;
        public ManagementGroupsDeleteHeaders(Response response)
        {
            _response = response;
        }
        /// <summary>
        /// URL for determining when an operation has completed. Send a GET request to the URL in Location header.
        /// The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.
        /// 
        /// For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.
        /// </summary>
        public string Location => _response.Headers.TryGetValue("Location", out string value) ? value : null;
        /// <summary>
        /// URL for checking the ongoing status of the operation.
        /// To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.
        /// 
        /// For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations.
        /// </summary>
        public string AzureAsyncOperation => _response.Headers.TryGetValue("Azure-AsyncOperation", out string value) ? value : null;
    }
}
