// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using System.ClientModel.Primitives;

namespace Azure.ResourceManager
{
    /// <inheritdoc/>
    public abstract class ArmOperation : Operation
    {
        /// <summary>
        /// Rehydrates an operation from a <see cref="RehydrationToken"/>.
        /// </summary>
        /// <param name="client">The Arm client.</param>
        /// <param name="rehydrationToken">The rehydration token.</param>
        /// <param name="options">The Arm client options.</param>
        /// <returns>The long-running operation.</returns>
        public static Operation Rehydrate(ArmClient client, RehydrationToken? rehydrationToken, ArmClientOptions? options = null)
            => Operation.Rehydrate(client.Pipeline, rehydrationToken, options);
            
        /// <summary>
        /// Rehydrates an operation from a <see cref="RehydrationToken"/>.
        /// </summary>
        /// <param name="client">The Arm client.</param>
        /// <param name="rehydrationToken">The rehydration token.</param>
        /// <param name="options">The Arm client options.</param>
        /// <returns>The long-running operation.</returns>
        public static Operation<T> Rehydrate<T>(ArmClient client, RehydrationToken? rehydrationToken, ArmClientOptions? options = null) where T : notnull
            => new RehydrationOperation<T>(client, rehydrationToken, options);
    }
}
