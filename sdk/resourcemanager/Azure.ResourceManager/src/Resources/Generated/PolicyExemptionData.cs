// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Resources
{
    /// <summary> A class representing the PolicyExemption data model. </summary>
    public partial class PolicyExemptionData : Resource
    {
        /// <summary> Initializes a new instance of PolicyExemptionData. </summary>
        /// <param name="policyAssignmentId"> The ID of the policy assignment that is being exempted. </param>
        /// <param name="exemptionCategory"> The policy exemption category. Possible values are Waiver and Mitigated. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="policyAssignmentId"/> is null. </exception>
        public PolicyExemptionData(string policyAssignmentId, ExemptionCategory exemptionCategory)
        {
            if (policyAssignmentId == null)
            {
                throw new ArgumentNullException(nameof(policyAssignmentId));
            }

            PolicyAssignmentId = policyAssignmentId;
            PolicyDefinitionReferenceIds = new ChangeTrackingList<string>();
            ExemptionCategory = exemptionCategory;
        }

        /// <summary> Initializes a new instance of PolicyExemptionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="policyAssignmentId"> The ID of the policy assignment that is being exempted. </param>
        /// <param name="policyDefinitionReferenceIds"> The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition. </param>
        /// <param name="exemptionCategory"> The policy exemption category. Possible values are Waiver and Mitigated. </param>
        /// <param name="expiresOn"> The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption. </param>
        /// <param name="displayName"> The display name of the policy exemption. </param>
        /// <param name="description"> The description of the policy exemption. </param>
        /// <param name="metadata"> The policy exemption metadata. Metadata is an open ended object and is typically a collection of key value pairs. </param>
        internal PolicyExemptionData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string policyAssignmentId, IList<string> policyDefinitionReferenceIds, ExemptionCategory exemptionCategory, DateTimeOffset? expiresOn, string displayName, string description, object metadata) : base(id, name, type, systemData)
        {
            PolicyAssignmentId = policyAssignmentId;
            PolicyDefinitionReferenceIds = policyDefinitionReferenceIds;
            ExemptionCategory = exemptionCategory;
            ExpiresOn = expiresOn;
            DisplayName = displayName;
            Description = description;
            Metadata = metadata;
        }

        /// <summary> The ID of the policy assignment that is being exempted. </summary>
        public string PolicyAssignmentId { get; set; }
        /// <summary> The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition. </summary>
        public IList<string> PolicyDefinitionReferenceIds { get; }
        /// <summary> The policy exemption category. Possible values are Waiver and Mitigated. </summary>
        public ExemptionCategory ExemptionCategory { get; set; }
        /// <summary> The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption. </summary>
        public DateTimeOffset? ExpiresOn { get; set; }
        /// <summary> The display name of the policy exemption. </summary>
        public string DisplayName { get; set; }
        /// <summary> The description of the policy exemption. </summary>
        public string Description { get; set; }
        /// <summary> The policy exemption metadata. Metadata is an open ended object and is typically a collection of key value pairs. </summary>
        public object Metadata { get; set; }
    }
}
