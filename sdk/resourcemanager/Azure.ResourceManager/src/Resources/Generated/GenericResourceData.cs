// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Resources
{
    /// <summary>
    /// A class representing the GenericResource data model.
    /// Resource information.
    /// </summary>
    public partial class GenericResourceData : TrackedResourceExtendedData
    {
        /// <summary> Initializes a new instance of <see cref="GenericResourceData"/>. </summary>
        public GenericResourceData()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="GenericResourceData"/>. </summary>
        /// <param name="plan"> The plan of the resource. </param>
        /// <param name="properties"> The resource properties. </param>
        /// <param name="kind"> The kind of the resource. </param>
        /// <param name="managedBy"> ID of the resource that manages this resource. </param>
        /// <param name="sku"> The SKU of the resource. </param>
        /// <param name="identity"> The identity of the resource. </param>
        /// <param name="createdOn"> The created time of the resource. This is only present if requested via the $expand query parameter. </param>
        /// <param name="changedOn"> The changed time of the resource. This is only present if requested via the $expand query parameter. </param>
        /// <param name="provisioningState"> The provisioning state of the resource. This is only present if requested via the $expand query parameter. </param>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="resourceType"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="extendedLocation"> Resource extended location. </param>
        /// <param name="tags"> Resource tags. </param>
        internal GenericResourceData(ArmPlan plan, BinaryData properties, string kind, string managedBy, ResourcesSku sku, ManagedServiceIdentity identity, DateTimeOffset? createdOn, DateTimeOffset? changedOn, string provisioningState, ResourceIdentifier id, string name, ResourceType resourceType, AzureLocation location, ExtendedLocation extendedLocation, IDictionary<string, string> tags)
        {
            Plan = plan;
            Properties = properties;
            Kind = kind;
            ManagedBy = managedBy;
            Sku = sku;
            Identity = identity;
            CreatedOn = createdOn;
            ChangedOn = changedOn;
            ProvisioningState = provisioningState;
            Id = id;
            Name = name;
            ResourceType = resourceType;
            Location = location;
            ExtendedLocation = extendedLocation;
            Tags = tags;
        }

        /// <summary> The plan of the resource. </summary>
        [WirePath("plan")]
        public ArmPlan Plan { get; set; }
        /// <summary>
        /// The resource properties.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        [WirePath("properties")]
        public BinaryData Properties { get; set; }
        /// <summary> The kind of the resource. </summary>
        [WirePath("kind")]
        public string Kind { get; set; }
        /// <summary> ID of the resource that manages this resource. </summary>
        [WirePath("managedBy")]
        public string ManagedBy { get; set; }
        /// <summary> The SKU of the resource. </summary>
        [WirePath("sku")]
        public ResourcesSku Sku { get; set; }
        /// <summary> The identity of the resource. </summary>
        [WirePath("identity")]
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary> The created time of the resource. This is only present if requested via the $expand query parameter. </summary>
        [WirePath("createdTime")]
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> The changed time of the resource. This is only present if requested via the $expand query parameter. </summary>
        [WirePath("changedTime")]
        public DateTimeOffset? ChangedOn { get; }
        /// <summary> The provisioning state of the resource. This is only present if requested via the $expand query parameter. </summary>
        [WirePath("provisioningState")]
        public string ProvisioningState { get; }
        /// <summary> Resource ID. </summary>
        [WirePath("id")]
        public ResourceIdentifier Id { get; }
        /// <summary> Resource name. </summary>
        [WirePath("name")]
        public string Name { get; }
        /// <summary> Resource type. </summary>
        [WirePath("type")]
        public ResourceType ResourceType { get; }
        /// <summary> Resource location. </summary>
        [WirePath("location")]
        public AzureLocation Location { get; set; }
        /// <summary> Resource extended location. </summary>
        [WirePath("extendedLocation")]
        public ExtendedLocation ExtendedLocation { get; set; }
        /// <summary> Resource tags. </summary>
        [WirePath("tags")]
        public IDictionary<string, string> Tags { get; }
    }
}
