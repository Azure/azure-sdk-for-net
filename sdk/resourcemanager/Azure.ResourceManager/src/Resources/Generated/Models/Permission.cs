// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Resources.Models
{
    /// <summary> Role definition permissions. </summary>
    public partial class Permission
    {
        /// <summary> Initializes a new instance of <see cref="Permission"/>. </summary>
        internal Permission()
        {
            AllowedActions = new ChangeTrackingList<string>();
            DeniedActions = new ChangeTrackingList<string>();
            AllowedDataActions = new ChangeTrackingList<string>();
            DeniedDataActions = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="Permission"/>. </summary>
        /// <param name="allowedActions"> Allowed actions. </param>
        /// <param name="deniedActions"> Denied actions. </param>
        /// <param name="allowedDataActions"> Allowed Data actions. </param>
        /// <param name="deniedDataActions"> Denied Data actions. </param>
        internal Permission(IReadOnlyList<string> allowedActions, IReadOnlyList<string> deniedActions, IReadOnlyList<string> allowedDataActions, IReadOnlyList<string> deniedDataActions)
        {
            AllowedActions = allowedActions;
            DeniedActions = deniedActions;
            AllowedDataActions = allowedDataActions;
            DeniedDataActions = deniedDataActions;
        }

        /// <summary> Allowed actions. </summary>
        public IReadOnlyList<string> AllowedActions { get; }
        /// <summary> Denied actions. </summary>
        public IReadOnlyList<string> DeniedActions { get; }
        /// <summary> Allowed Data actions. </summary>
        public IReadOnlyList<string> AllowedDataActions { get; }
        /// <summary> Denied Data actions. </summary>
        public IReadOnlyList<string> DeniedDataActions { get; }
    }
}
