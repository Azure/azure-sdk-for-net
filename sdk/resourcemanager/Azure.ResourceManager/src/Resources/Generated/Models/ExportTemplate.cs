// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Resources.Models
{
    /// <summary> Export resource group template request parameters. </summary>
    public partial class ExportTemplate
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ExportTemplate"/>. </summary>
        public ExportTemplate()
        {
            Resources = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="ExportTemplate"/>. </summary>
        /// <param name="resources"> The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'. </param>
        /// <param name="options"> The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization'. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ExportTemplate(IList<string> resources, string options, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Resources = resources;
            Options = options;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'. </summary>
        public IList<string> Resources { get; }
        /// <summary> The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization'. </summary>
        public string Options { get; set; }
    }
}
