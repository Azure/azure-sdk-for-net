// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Resources.Models
{
    /// <summary> Role definition properties. </summary>
    public partial class AzureRoleDefinition
    {
        /// <summary> Initializes a new instance of <see cref="AzureRoleDefinition"/>. </summary>
        internal AzureRoleDefinition()
        {
            Permissions = new ChangeTrackingList<Permission>();
            Scopes = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="AzureRoleDefinition"/>. </summary>
        /// <param name="id"> The role definition ID. </param>
        /// <param name="name"> The role definition name. </param>
        /// <param name="isServiceRole"> If this is a service role. </param>
        /// <param name="permissions"> Role definition permissions. </param>
        /// <param name="scopes"> Role definition assignable scopes. </param>
        internal AzureRoleDefinition(string id, string name, bool? isServiceRole, IReadOnlyList<Permission> permissions, IReadOnlyList<string> scopes)
        {
            Id = id;
            Name = name;
            IsServiceRole = isServiceRole;
            Permissions = permissions;
            Scopes = scopes;
        }

        /// <summary> The role definition ID. </summary>
        public string Id { get; }
        /// <summary> The role definition name. </summary>
        public string Name { get; }
        /// <summary> If this is a service role. </summary>
        public bool? IsServiceRole { get; }
        /// <summary> Role definition permissions. </summary>
        public IReadOnlyList<Permission> Permissions { get; }
        /// <summary> Role definition assignable scopes. </summary>
        public IReadOnlyList<string> Scopes { get; }
    }
}
