{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/tenants?api-version=2021-01-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-cbd8b98638a48d44a96f5ec381d0b75a-453789dfaf522042-00",
        "User-Agent": "azsdk-net-ResourceManager/1.0.0-alpha.20220112.1 (.NET Framework 4.8.4420.0; Microsoft Windows 10.0.22000 )",
        "x-ms-client-request-id": "7e74e0da4344a3ed5bb6988ad56138ba",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "140",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 12 Jan 2022 05:49:56 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "45b20740-2ce6-4f04-be25-54783a2d68c6",
        "x-ms-ratelimit-remaining-tenant-reads": "11997",
        "x-ms-request-id": "45b20740-2ce6-4f04-be25-54783a2d68c6",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20220112T054956Z:45b20740-2ce6-4f04-be25-54783a2d68c6"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/tenants/72f988bf-86f1-41af-91ab-2d7cd011db47",
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "tenantCategory": "Home"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/providers/Microsoft.Authorization/policyDefinitions?api-version=2020-09-01\u0026$filter=category eq \u0027Compute\u0027",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-a044a7a5347993428f8243606a62f537-0aa54bc3c2804741-00",
        "User-Agent": "azsdk-net-ResourceManager/1.0.0-alpha.20220112.1 (.NET Framework 4.8.4420.0; Microsoft Windows 10.0.22000 )",
        "x-ms-client-request-id": "383481d9f5d9f5fe3dbfcc6a3f37dfc6",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "58474",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 12 Jan 2022 05:49:56 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8981a8d4-c3db-403c-b701-5f5fd6f670c2",
        "x-ms-ratelimit-remaining-tenant-reads": "11996",
        "x-ms-request-id": "8981a8d4-c3db-403c-b701-5f5fd6f670c2",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20220112T054957Z:8981a8d4-c3db-403c-b701-5f5fd6f670c2"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "displayName": "Audit virtual machines without disaster recovery configured",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Audit virtual machines which do not have disaster recovery configured. To learn more about disaster recovery, visit https://aka.ms/asr-doc.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines"
                  ]
                },
                "then": {
                  "effect": "auditIfNotExists",
                  "details": {
                    "type": "Microsoft.Resources/links",
                    "existenceCondition": {
                      "field": "name",
                      "like": "ASR-Protect-*"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/0015ea4d-51ff-4ce3-8d8c-f3f8f0179a56",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "0015ea4d-51ff-4ce3-8d8c-f3f8f0179a56"
          },
          {
            "properties": {
              "displayName": "Audit VMs that do not use managed disks",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy audits VMs that do not use managed disks",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/osDisk.uri",
                          "exists": "True"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/VirtualMachineScaleSets"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/VirtualMachineScaleSets/osDisk.vhdContainers",
                              "exists": "True"
                            },
                            {
                              "field": "Microsoft.Compute/VirtualMachineScaleSets/osdisk.imageUrl",
                              "exists": "True"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "audit"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "06a78e20-9358-41c9-923c-fb736d382a4d"
          },
          {
            "properties": {
              "displayName": "Virtual machines should be migrated to new Azure Resource Manager resources",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Use new Azure Resource Manager for your virtual machines to provide security enhancements such as: stronger access control (RBAC), better auditing, Azure Resource Manager based deployment and governance, access to managed identities, access to key vault for secrets, Azure AD-based authentication and support for tags and resource groups for easier security management",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "in": [
                        "Microsoft.ClassicCompute/virtualMachines",
                        "Microsoft.Compute/virtualMachines"
                      ]
                    },
                    {
                      "value": "[field(\u0027type\u0027)]",
                      "equals": "Microsoft.ClassicCompute/virtualMachines"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "1d84d5fb-01f6-4d12-ba4f-4a26081d403d"
          },
          {
            "properties": {
              "displayName": "Deploy default Microsoft IaaSAntimalware extension for Windows Server",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy deploys a Microsoft IaaSAntimalware extension with a default configuration when a VM is not configured with the antimalware extension.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "MicrosoftWindowsServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageOffer",
                      "equals": "WindowsServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "in": [
                        "2008-R2-SP1",
                        "2008-R2-SP1-smalldisk",
                        "2012-Datacenter",
                        "2012-Datacenter-smalldisk",
                        "2012-R2-Datacenter",
                        "2012-R2-Datacenter-smalldisk",
                        "2016-Datacenter",
                        "2016-Datacenter-Server-Core",
                        "2016-Datacenter-Server-Core-smalldisk",
                        "2016-Datacenter-smalldisk",
                        "2016-Datacenter-with-Containers",
                        "2016-Datacenter-with-RDSH",
                        "2019-Datacenter",
                        "2019-Datacenter-Core",
                        "2019-Datacenter-Core-smalldisk",
                        "2019-Datacenter-Core-with-Containers",
                        "2019-Datacenter-Core-with-Containers-smalldisk",
                        "2019-Datacenter-smalldisk",
                        "2019-Datacenter-with-Containers",
                        "2019-Datacenter-with-Containers-smalldisk"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "IaaSAntimalware"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Security"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "ExclusionsPaths": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Semicolon delimited list of file paths or locations to exclude from scanning"
                              }
                            },
                            "ExclusionsExtensions": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Semicolon delimited list of file extensions to exclude from scanning"
                              }
                            },
                            "ExclusionsProcesses": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Semicolon delimited list of process names to exclude from scanning"
                              }
                            },
                            "RealtimeProtectionEnabled": {
                              "type": "string",
                              "defaultValue": "true",
                              "metadata": {
                                "description": "Indicates whether or not real time protection is enabled (default is true)"
                              }
                            },
                            "ScheduledScanSettingsIsEnabled": {
                              "type": "string",
                              "defaultValue": "false",
                              "metadata": {
                                "description": "Indicates whether or not custom scheduled scan settings are enabled (default is false)"
                              }
                            },
                            "ScheduledScanSettingsScanType": {
                              "type": "string",
                              "defaultValue": "Quick",
                              "metadata": {
                                "description": "Indicates whether scheduled scan setting type is set to Quick or Full (default is Quick)"
                              }
                            },
                            "ScheduledScanSettingsDay": {
                              "type": "string",
                              "defaultValue": "7",
                              "metadata": {
                                "description": "Day of the week for scheduled scan (1-Sunday, 2-Monday, ..., 7-Saturday)"
                              }
                            },
                            "ScheduledScanSettingsTime": {
                              "type": "string",
                              "defaultValue": "120",
                              "metadata": {
                                "description": "When to perform the scheduled scan, measured in minutes from midnight (0-1440). For example: 0 = 12AM, 60 = 1AM, 120 = 2AM."
                              }
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027),\u0027/IaaSAntimalware\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2017-12-01",
                              "properties": {
                                "publisher": "Microsoft.Azure.Security",
                                "type": "IaaSAntimalware",
                                "typeHandlerVersion": "1.3",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "AntimalwareEnabled": true,
                                  "RealtimeProtectionEnabled": "[parameters(\u0027RealtimeProtectionEnabled\u0027)]",
                                  "ScheduledScanSettings": {
                                    "isEnabled": "[parameters(\u0027ScheduledScanSettingsIsEnabled\u0027)]",
                                    "day": "[parameters(\u0027ScheduledScanSettingsDay\u0027)]",
                                    "time": "[parameters(\u0027ScheduledScanSettingsTime\u0027)]",
                                    "scanType": "[parameters(\u0027ScheduledScanSettingsScanType\u0027)]"
                                  },
                                  "Exclusions": {
                                    "Extensions": "[parameters(\u0027ExclusionsExtensions\u0027)]",
                                    "Paths": "[parameters(\u0027ExclusionsPaths\u0027)]",
                                    "Processes": "[parameters(\u0027ExclusionsProcesses\u0027)]"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "RealtimeProtectionEnabled": {
                            "value": "true"
                          },
                          "ScheduledScanSettingsIsEnabled": {
                            "value": "true"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2835b622-407b-4114-9198-6f7064cbe0dc",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2835b622-407b-4114-9198-6f7064cbe0dc"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Unattached disks should be encrypted",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy audits any unattached disk without encryption enabled.",
              "metadata": {
                "version": "1.0.0-deprecated",
                "category": "Compute",
                "deprecated": true
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/disks"
                    },
                    {
                      "field": "Microsoft.Compute/disks/diskState",
                      "equals": "Unattached"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/disks/encryptionSettingsCollection.enabled",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Compute/disks/encryptionSettingsCollection.enabled",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/2c89a2e5-7285-40fe-afe0-ae8654b92fb2",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "2c89a2e5-7285-40fe-afe0-ae8654b92fb2"
          },
          {
            "properties": {
              "displayName": "[Deprecated]: Deploy default Log Analytics Extension for Ubuntu VMs",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy deploys the Log Analytics Extension on Ubuntu VMs, and connects to the selected Log Analytics workspace",
              "metadata": {
                "version": "1.0.1-deprecated",
                "category": "Compute",
                "deprecated": true
              },
              "parameters": {
                "logAnalytics": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant \u0027Log Analytics Contributor\u0027 permissions (or similar) to the policy assignment\u0027s principal ID.",
                    "strongType": "omsWorkspace"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "Canonical"
                    },
                    {
                      "field": "Microsoft.Compute/imageOffer",
                      "equals": "UbuntuServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "in": [
                        "18.04-LTS",
                        "16.04-LTS",
                        "16.04.0-LTS",
                        "14.04.2-LTS",
                        "12.04.5-LTS"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "deployIfNotExists",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "OmsAgentForLinux"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.EnterpriseCloud.Monitoring"
                        }
                      ]
                    },
                    "roleDefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "vmName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalytics": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027vmName\u0027),\u0027/omsPolicy\u0027)]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "location": "[parameters(\u0027location\u0027)]",
                              "apiVersion": "2017-12-01",
                              "properties": {
                                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                                "type": "OmsAgentForLinux",
                                "typeHandlerVersion": "1.4",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "workspaceId": "[reference(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).customerId]"
                                },
                                "protectedSettings": {
                                  "workspaceKey": "[listKeys(parameters(\u0027logAnalytics\u0027), \u00272015-03-20\u0027).primarySharedKey]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policy": {
                              "type": "string",
                              "value": "[concat(\u0027Enabled monitoring for Linux VM\u0027, \u0027: \u0027, parameters(\u0027vmName\u0027))]"
                            }
                          }
                        },
                        "parameters": {
                          "vmName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          },
                          "logAnalytics": {
                            "value": "[parameters(\u0027logAnalytics\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/3d8640fc-63f6-4734-8dcb-cfd3d8c78f38",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "3d8640fc-63f6-4734-8dcb-cfd3d8c78f38"
          },
          {
            "properties": {
              "displayName": "Require automatic OS image patching on Virtual Machine Scale Sets",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "This policy enforces enabling automatic OS image patching on Virtual Machine Scale Sets to always keep Virtual Machines secure by safely applying latest security patches every month.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {},
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "field": "Microsoft.Compute/VirtualMachineScaleSets/upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade",
                      "notEquals": "True"
                    },
                    {
                      "field": "Microsoft.Compute/VirtualMachineScaleSets/upgradePolicy.automaticOSUpgrade",
                      "notEquals": "True"
                    }
                  ]
                },
                "then": {
                  "effect": "deny"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/465f0161-0087-490a-9ad9-ad6217f4f43a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "465f0161-0087-490a-9ad9-ad6217f4f43a"
          },
          {
            "properties": {
              "displayName": "Configure disk access resources with private endpoints",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Private endpoints connect your virtual networks to Azure services without a public IP address at the source or destination. By mapping private endpoints to disk access resources, you can reduce data leakage risks. Learn more about private links at: https://aka.ms/disksprivatelinksdoc.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                },
                "location": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Location",
                    "strongType": "location",
                    "description": "All disk access resources in this region are validated and private endpoints are created in this region."
                  }
                },
                "privateEndpointSubnetId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private endpoint subnet ID",
                    "description": "A subnet with private endpoint network policies disabled.",
                    "strongType": "Microsoft.Network/virtualNetworks/subnets"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/diskAccesses"
                    },
                    {
                      "field": "location",
                      "equals": "[parameters(\u0027location\u0027)]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/diskAccesses/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.Compute/diskAccesses/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    },
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "parameters": {
                          "name": {
                            "value": "[concat(\u0027pe\u0027,\u0027-\u0027,field(\u0027name\u0027))]"
                          },
                          "serviceId": {
                            "value": "[field(\u0027id\u0027)]"
                          },
                          "privateEndpointSubnetId": {
                            "value": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "serviceId": {
                              "type": "string"
                            },
                            "privateEndpointSubnetId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[parameters(\u0027name\u0027)]",
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2019-11-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "tags": {},
                              "properties": {
                                "subnet": {
                                  "id": "[parameters(\u0027privateEndpointSubnetId\u0027)]"
                                },
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters(\u0027name\u0027)]",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters(\u0027serviceId\u0027)]",
                                      "groupIds": [
                                        "disks"
                                      ]
                                    }
                                  }
                                ],
                                "manualPrivateLinkServiceConnections": []
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/582bd7a6-a5f6-4dc6-b9dc-9cb81fe0d4c5",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "582bd7a6-a5f6-4dc6-b9dc-9cb81fe0d4c5"
          },
          {
            "properties": {
              "displayName": "OS and data disks should be encrypted with a customer-managed key",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use customer-managed keys to manage the encryption at rest of the contents of your managed disks. By default, the data is encrypted at rest with platform-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/disks-cmk.",
              "metadata": {
                "category": "Compute",
                "version": "3.0.0"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.managedDisk.diskEncryptionSet.id",
                          "exists": "False"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "value": "[length(field(\u0027Microsoft.Compute/virtualMachines/storageProfile.dataDisks\u0027))]",
                          "greater": 0
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/storageProfile.dataDisks[*].managedDisk.id",
                          "exists": "False"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/storageProfile.dataDisks[*].managedDisk.diskEncryptionSet.id",
                          "exists": "False"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachineScaleSets"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.storageProfile.osDisk.managedDisk.diskEncryptionSet.id",
                          "exists": "False"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachineScaleSets"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.storageProfile.dataDisks[*]"
                          },
                          "greater": 0
                        },
                        {
                          "not": {
                            "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.storageProfile.dataDisks[*].managedDisk.diskEncryptionSet.id",
                            "exists": "true"
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/disks"
                        },
                        {
                          "field": "Microsoft.Compute/disks/encryption.diskEncryptionSetId",
                          "exists": "False"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/galleries/images/versions"
                        },
                        {
                          "value": "[length(field(\u0027Microsoft.Compute/galleries/images/versions/publishingProfile.targetRegions[*].encryption.osDiskImage.diskEncryptionSetId\u0027))]",
                          "notEquals": "[length(field(\u0027Microsoft.Compute/galleries/images/versions/publishingProfile.targetRegions[*]\u0027))]"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/galleries/images/versions"
                        },
                        {
                          "value": "[length(field(\u0027Microsoft.Compute/galleries/images/versions/storageProfile.dataDiskImages[*]\u0027))]",
                          "greater": 0
                        },
                        {
                          "anyOf": [
                            {
                              "count": {
                                "field": "Microsoft.Compute/galleries/images/versions/publishingProfile.targetRegions[*]",
                                "where": {
                                  "value": "[length(current(\u0027Microsoft.Compute/galleries/images/versions/publishingProfile.targetRegions[*].encryption.dataDiskImages[*].diskEncryptionSetId\u0027))]",
                                  "notEquals": "[length(field(\u0027Microsoft.Compute/galleries/images/versions/storageProfile.dataDiskImages[*]\u0027))]"
                                }
                              },
                              "greater": 0
                            },
                            {
                              "not": {
                                "field": "Microsoft.Compute/galleries/images/versions/publishingProfile.targetRegions[*].encryption.dataDiskImages[*].diskEncryptionSetId",
                                "exists": "true"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/images"
                        },
                        {
                          "field": "Microsoft.Compute/images/storageProfile.osDisk.diskEncryptionSet.id",
                          "exists": "False"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/images"
                        },
                        {
                          "value": "[length(field(\u0027Microsoft.Compute/images/storageProfile.dataDisks[*]\u0027))]",
                          "greater": 0
                        },
                        {
                          "not": {
                            "field": "Microsoft.Compute/images/storageProfile.dataDisks[*].diskEncryptionSet.id",
                            "exists": "true"
                          }
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/702dd420-7fcc-42c5-afe8-4026edd20fe0",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "702dd420-7fcc-42c5-afe8-4026edd20fe0"
          },
          {
            "properties": {
              "displayName": "Resource logs in Virtual Machine Scale Sets should be enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "It is recommended to enable Logs so that activity trail can be recreated when investigations are required in the event of an incident or a compromise.",
              "metadata": {
                "version": "2.1.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                },
                "includeAKSClusters": {
                  "type": "Boolean",
                  "metadata": {
                    "displayName": "Include AKS Clusters",
                    "description": "Whether to include AKS Clusters to resource logs extension - True or False"
                  },
                  "defaultValue": false
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachineScaleSets"
                        },
                        {
                          "value": "[parameters(\u0027includeAKSClusters\u0027)]",
                          "equals": true
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachineScaleSets"
                        },
                        {
                          "value": "[parameters(\u0027includeAKSClusters\u0027)]",
                          "equals": false
                        },
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "notEquals": "microsoft-aks"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "notEquals": "aks"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "aks*"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                    "existenceCondition": {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                          "equals": "Microsoft.AKS"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                              "equals": "IaaSDiagnostics"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                              "equals": "Microsoft.Azure.Diagnostics"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                              "equals": "LinuxDiagnostic"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                              "in": [
                                "Microsoft.OSTCExtensions",
                                "Microsoft.Azure.Diagnostics"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/7c1b1214-f927-48bf-8882-84f0af6588b1",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "7c1b1214-f927-48bf-8882-84f0af6588b1"
          },
          {
            "properties": {
              "displayName": "Managed disks should disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disabling public network access improves security by ensuring that a managed disk isn\u0027t exposed on the public internet. Creating private endpoints can limit exposure of managed disks. Learn more at: https://aka.ms/disksprivatelinksdoc.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/disks"
                    },
                    {
                      "field": "Microsoft.Compute/disks/networkAccessPolicy",
                      "notIn": [
                        "DenyAll",
                        "AllowPrivate"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/8405fdab-1faf-48aa-b702-999c9c172094",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "8405fdab-1faf-48aa-b702-999c9c172094"
          },
          {
            "properties": {
              "displayName": "Configure managed disks to disable public network access",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Disable public network access for your managed disk resource so that it\u0027s not accessible over the public internet. This can reduce data leakage risks. Learn more at: https://aka.ms/disksprivatelinksdoc.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Modify",
                    "Disabled"
                  ],
                  "defaultValue": "Modify"
                },
                "location": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Location",
                    "strongType": "location",
                    "description": "All disks in this region are validated and disk access resource would be associated with them."
                  }
                },
                "diskAccessId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Resource Id for the DiskAccess in the given location to which the disk resource needs to be linked",
                    "strongType": "Microsoft.Compute/diskAccesses",
                    "description": "Disk access resources enable exporting managed disks securely via private endpoints. Learn more at: https://aka.ms/disksprivatelinksdoc"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/disks"
                    },
                    {
                      "field": "location",
                      "equals": "[parameters(\u0027location\u0027)]"
                    },
                    {
                      "field": "Microsoft.Compute/disks/networkAccessPolicy",
                      "notIn": [
                        "AllowPrivate",
                        "DenyAll"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                    ],
                    "conflictEffect": "audit",
                    "operations": [
                      {
                        "operation": "addOrReplace",
                        "field": "Microsoft.Compute/disks/diskAccessId",
                        "value": "[parameters(\u0027diskAccessId\u0027)]"
                      },
                      {
                        "operation": "addOrReplace",
                        "field": "Microsoft.Compute/disks/networkAccessPolicy",
                        "value": "AllowPrivate"
                      }
                    ]
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/8426280e-b5be-43d9-979e-653d12a08638",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "8426280e-b5be-43d9-979e-653d12a08638"
          },
          {
            "properties": {
              "displayName": "Microsoft IaaSAntimalware extension should be deployed on Windows servers",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy audits any Windows server VM without Microsoft IaaSAntimalware extension deployed.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "equals": "MicrosoftWindowsServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageOffer",
                      "equals": "WindowsServer"
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "in": [
                        "2008-R2-SP1",
                        "2008-R2-SP1-smalldisk",
                        "2012-Datacenter",
                        "2012-Datacenter-smalldisk",
                        "2012-R2-Datacenter",
                        "2012-R2-Datacenter-smalldisk",
                        "2016-Datacenter",
                        "2016-Datacenter-Server-Core",
                        "2016-Datacenter-Server-Core-smalldisk",
                        "2016-Datacenter-smalldisk",
                        "2016-Datacenter-with-Containers",
                        "2016-Datacenter-with-RDSH",
                        "2019-Datacenter",
                        "2019-Datacenter-Core",
                        "2019-Datacenter-Core-smalldisk",
                        "2019-Datacenter-Core-with-Containers",
                        "2019-Datacenter-Core-with-Containers-smalldisk",
                        "2019-Datacenter-smalldisk",
                        "2019-Datacenter-with-Containers",
                        "2019-Datacenter-with-Containers-smalldisk"
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "IaaSAntimalware"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Security"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/9b597639-28e4-48eb-b506-56b05d366257",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "9b597639-28e4-48eb-b506-56b05d366257"
          },
          {
            "properties": {
              "displayName": "Configure disaster recovery on virtual machines by enabling replication via Azure Site Recovery",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Virtual machines without disaster recovery configurations are vulnerable to outages and other disruptions. If the virtual machine does not already have disaster recovery configured, this would initiate the same by enabling replication using preset configurations to facilitate business continuity.  You can optionally include/exclude virtual machines containing a specified tag to control the scope of assignment. To learn more about disaster recovery, visit https://aka.ms/asr-doc.",
              "metadata": {
                "version": "2.0.0",
                "category": "Compute"
              },
              "parameters": {
                "sourceRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Source Region",
                    "description": "Region in which the source virtual machine is deployed",
                    "strongType": "location",
                    "serviceName": "ASR"
                  }
                },
                "targetRegion": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Target Region",
                    "description": "Region to be used to deploy the virtual machine in case of a disaster",
                    "strongType": "location",
                    "serviceName": "ASR"
                  }
                },
                "targetResourceGroupId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Target Resource Group",
                    "description": "Resource group to be used to create the virtual machine in the target region",
                    "strongType": "Microsoft.Resources/resourceGroups",
                    "assignPermissions": true,
                    "serviceName": "ASR"
                  }
                },
                "vaultResourceGroupId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Vault Resource Group",
                    "description": "The resource group containing the recovery services vault used for disaster recovery configurations",
                    "strongType": "Microsoft.Resources/resourceGroups",
                    "assignPermissions": true,
                    "serviceName": "ASR"
                  }
                },
                "vaultId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Recovery Services Vault",
                    "description": "Recovery services vault to be used for disaster recovery configurations",
                    "strongType": "Microsoft.RecoveryServices/vaults",
                    "serviceName": "ASR"
                  }
                },
                "recoveryNetworkId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Recovery Virtual Network",
                    "description": "Id of an existing virtual network in the target region or name of the virtual network to be created in target region",
                    "strongType": "Microsoft.Network/virtualNetworks",
                    "serviceName": "ASR"
                  },
                  "defaultValue": ""
                },
                "targetZone": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Target Availability Zone",
                    "description": "Availability zone in the designated target region to be used by virtual machines during disaster",
                    "strongType": "zone",
                    "serviceName": "ASR"
                  },
                  "defaultValue": ""
                },
                "cacheStorageAccountId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Cache storage account",
                    "description": "Existing cache storage account ID or prefix for the cache storage account name to be created in source region.",
                    "strongType": "Microsoft.Storage/storageAccounts",
                    "serviceName": "ASR"
                  },
                  "defaultValue": ""
                },
                "tagName": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Tag Name",
                    "description": "Name of the tag to use for including or excluding VMs in the scope of this policy. This should be used along with the tag value parameter.",
                    "serviceName": "ASR"
                  },
                  "defaultValue": ""
                },
                "tagValue": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Tag Values",
                    "description": "Values of the tag to use for including or excluding VMs in the scope of this policy (in case of multiple values, use a comma-separated list). This should be used along with the tag name parameter.",
                    "serviceName": "ASR"
                  },
                  "defaultValue": []
                },
                "tagType": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Tag Type",
                    "description": "Tag type can be either Inclusion Tag or Exclusion Tag. Inclusion tag type will make sure VMs with tag name and tag value are included in replication, Exclusion tag type will make sure VMs with tag name and tag value are excluded from replication.",
                    "serviceName": "ASR"
                  },
                  "allowedValues": [
                    "Inclusion",
                    "Exclusion",
                    ""
                  ],
                  "defaultValue": ""
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "location",
                      "equals": "[parameters(\u0027sourceRegion\u0027)]"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "value": "[parameters(\u0027tagType\u0027)]",
                              "equals": "Inclusion"
                            },
                            {
                              "field": "[concat(\u0027tags[\u0027, parameters(\u0027tagName\u0027), \u0027]\u0027)]",
                              "in": "[parameters(\u0027tagValue\u0027)]"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "value": "[parameters(\u0027tagType\u0027)]",
                              "equals": "Exclusion"
                            },
                            {
                              "field": "[concat(\u0027tags[\u0027, parameters(\u0027tagName\u0027), \u0027]\u0027)]",
                              "notIn": "[parameters(\u0027tagValue\u0027)]"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "value": "[empty(parameters(\u0027tagName\u0027))]",
                              "equals": "true"
                            },
                            {
                              "value": "[empty(parameters(\u0027tagValue\u0027))]",
                              "equals": "true"
                            },
                            {
                              "value": "[empty(parameters(\u0027tagType\u0027))]",
                              "equals": "true"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Resources/links",
                    "evaluationDelay": "PT15M",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                    ],
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "name",
                          "like": "ASR-Policy-Protect-*"
                        },
                        {
                          "field": "Microsoft.Resources/links/targetId",
                          "contains": "/replicationProtectedItems/"
                        }
                      ]
                    },
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "apiVersion": {
                              "type": "String"
                            },
                            "avSetId": {
                              "type": "String"
                            },
                            "dataDiskIds": {
                              "type": "object"
                            },
                            "osDiskId": {
                              "type": "String"
                            },
                            "ppgId": {
                              "type": "String"
                            },
                            "recoveryNetworkId": {
                              "type": "String"
                            },
                            "recoverySubscriptionId": {
                              "type": "String"
                            },
                            "sourceRegion": {
                              "type": "String"
                            },
                            "sourceResourceGroupName": {
                              "type": "String"
                            },
                            "targetRegion": {
                              "type": "String"
                            },
                            "targetResourceGroupName": {
                              "type": "String"
                            },
                            "targetZone": {
                              "type": "String"
                            },
                            "vaultName": {
                              "type": "String"
                            },
                            "vaultResourceGroupName": {
                              "type": "String"
                            },
                            "vmId": {
                              "type": "String"
                            },
                            "vmZones": {
                              "type": "Object"
                            },
                            "cacheStorageAccountId": {
                              "type": "String"
                            }
                          },
                          "variables": {
                            "avSetApiVersion": "2019-03-01",
                            "deploymentApiVersion": "2017-05-10",
                            "vmApiVersion": "2019-07-01",
                            "ppgApiVersion": "2019-12-01",
                            "storageAccountApiVersion": "2018-07-01",
                            "portalLinkPrefix": "https://portal.azure.com/#@microsoft.onmicrosoft.com/resource",
                            "schemaLink": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "defaultAvSet": "defaultAvSet-asr",
                            "defaultPPG": "defaultPPG-asr",
                            "eligibilityResultsDefault": "default",
                            "protectedItemSuffix": "-policy",
                            "recoveryAvSetPrefix": "RecoveryAvSet-",
                            "recoveryPPGPrefix": "RecoveryPPG-",
                            "storagePrefix": "Storage-",
                            "avSetType": "Microsoft.Compute/availabilitySets",
                            "deploymentType": "Microsoft.Resources/deployments",
                            "networkType": "Microsoft.Network/virtualNetworks",
                            "ppgType": "Microsoft.Compute/proximityPlacementGroups",
                            "replicationEligibilityResultsType": "Microsoft.RecoveryServices/replicationEligibilityResults",
                            "storageType": "Microsoft.Storage/storageAccounts",
                            "vaultType": "Microsoft.RecoveryServices/vaults",
                            "avSetTemplateName": "[concat(variables(\u0027recoveryAvSetPrefix\u0027), last(split(parameters(\u0027vmId\u0027), \u0027/\u0027)))]",
                            "avSetTemplateName64": "[if(greater(length(variables(\u0027avSetTemplateName\u0027)), 64), substring(variables(\u0027avSetTemplateName\u0027), 0, 64), variables(\u0027avSetTemplateName\u0027))]",
                            "ppgTemplateName": "[concat(variables(\u0027recoveryPPGPrefix\u0027), last(split(parameters(\u0027vmId\u0027), \u0027/\u0027)))]",
                            "ppgTemplateName64": "[if(greater(length(variables(\u0027ppgTemplateName\u0027)), 64), substring(variables(\u0027ppgTemplateName\u0027), 0, 64), variables(\u0027ppgTemplateName\u0027))]",
                            "storageAccountTemplateName": "[concat(variables(\u0027storagePrefix\u0027), last(split(parameters(\u0027vmId\u0027), \u0027/\u0027)))]",
                            "storageAccountTemplateName64": "[concat(variables(\u0027storagePrefix\u0027), uniqueString(variables(\u0027storageAccountTemplateName\u0027)))]",
                            "replicationProtectedIntentTemplateName": "[concat(\u0027ASR-\u0027, parameters(\u0027sourceResourceGroupName\u0027), \u0027-\u0027, last(split(parameters(\u0027vmId\u0027), \u0027/\u0027)))]",
                            "replicationProtectedIntentTemplateName64": "[if(greater(length(variables(\u0027replicationProtectedIntentTemplateName\u0027)), 64), substring(variables(\u0027replicationProtectedIntentTemplateName\u0027), 0, 64), variables(\u0027replicationProtectedIntentTemplateName\u0027))]",
                            "vmDataDiskIds": "[array(parameters(\u0027dataDiskIds\u0027).rawValue)]",
                            "vmDiskCount": "[add(length(variables(\u0027vmDataDiskIds\u0027)), int(1))]",
                            "diskIds": "[concat(array(parameters(\u0027osDiskId\u0027)), array(parameters(\u0027dataDiskIds\u0027).rawValue))]",
                            "vaultId": "[resourceId(parameters(\u0027vaultResourceGroupName\u0027), variables(\u0027vaultType\u0027), parameters(\u0027vaultName\u0027))]",
                            "eligibilityResultsId": "[extensionResourceId(parameters(\u0027vmId\u0027), variables(\u0027replicationEligibilityResultsType\u0027), variables(\u0027eligibilityResultsDefault\u0027))]",
                            "protectedIntentName": "[concat(parameters(\u0027vaultName\u0027), \u0027/\u0027, guid(resourceGroup().id, last(split(parameters(\u0027vmId\u0027), \u0027/\u0027))), variables(\u0027protectedItemSuffix\u0027))]",
                            "recoveryAvSetName": "[if(empty(parameters(\u0027avSetId\u0027)), variables(\u0027defaultAvSet\u0027), concat(last(split(parameters(\u0027avSetId\u0027), \u0027/\u0027)), \u0027-asr\u0027))]",
                            "recoveryAvSetId": "[if(empty(parameters(\u0027avSetId\u0027)), \u0027\u0027, resourceId(parameters(\u0027targetResourceGroupName\u0027), variables(\u0027avSetType\u0027), variables(\u0027recoveryAvSetName\u0027)))]",
                            "recoveryAvType": "[if(not(empty(parameters(\u0027avSetId\u0027))), \u0027AvailabilitySet\u0027, if(not(empty(parameters(\u0027targetZone\u0027))), \u0027AvailabilityZone\u0027, \u0027Single\u0027))]",
                            "recoveryAvZone": "[parameters(\u0027targetZone\u0027)]",
                            "recoveryPPGName": "[if(empty(parameters(\u0027ppgId\u0027)), variables(\u0027defaultPPG\u0027), concat(last(split(parameters(\u0027ppgId\u0027), \u0027/\u0027)), \u0027-asr\u0027))]",
                            "recoveryPPGId": "[if(empty(parameters(\u0027ppgId\u0027)), \u0027\u0027, resourceId(parameters(\u0027targetResourceGroupName\u0027), variables(\u0027ppgType\u0027), variables(\u0027recoveryPPGName\u0027)))]",
                            "targetResourceGroupId": "[concat(\u0027/subscriptions/\u0027, parameters(\u0027recoverySubscriptionId\u0027), \u0027/resourceGroups/\u0027, parameters(\u0027targetResourceGroupName\u0027))]",
                            "storageAccountSKUName": "Standard_LRS",
                            "storageAccountKind": "Storage",
                            "cacheStorageAccountArmId": "[if(empty(parameters(\u0027cacheStorageAccountId\u0027)),\u0027\u0027,if(contains(parameters(\u0027cacheStorageAccountId\u0027),\u0027/\u0027),parameters(\u0027cacheStorageAccountId\u0027),resourceId(parameters(\u0027vaultResourceGroupName\u0027), variables(\u0027storageType\u0027), parameters(\u0027cacheStorageAccountId\u0027))))]"
                          },
                          "resources": [
                            {
                              "condition": "[not(empty(parameters(\u0027ppgId\u0027)))]",
                              "apiVersion": "[variables(\u0027deploymentApiVersion\u0027)]",
                              "name": "[variables(\u0027ppgTemplateName64\u0027)]",
                              "type": "Microsoft.Resources/deployments",
                              "resourceGroup": "[parameters(\u0027targetResourceGroupName\u0027)]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "[variables(\u0027schemaLink\u0027)]",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "variables": {},
                                  "resources": [
                                    {
                                      "condition": "[not(empty(parameters(\u0027ppgId\u0027)))]",
                                      "type": "[variables(\u0027ppgType\u0027)]",
                                      "name": "[variables(\u0027recoveryPPGName\u0027)]",
                                      "apiVersion": "[variables(\u0027ppgApiVersion\u0027)]",
                                      "location": "[parameters(\u0027targetRegion\u0027)]",
                                      "properties": {
                                        "proximityPlacementGroupType": "[if(empty(parameters(\u0027ppgId\u0027)), \u0027Standard\u0027, reference(parameters(\u0027ppgId\u0027), variables(\u0027ppgApiVersion\u0027)).proximityPlacementGroupType)]"
                                      }
                                    }
                                  ]
                                },
                                "parameters": {}
                              }
                            },
                            {
                              "condition": "[not(empty(parameters(\u0027avSetId\u0027)))]",
                              "apiVersion": "[variables(\u0027deploymentApiVersion\u0027)]",
                              "name": "[variables(\u0027avSetTemplateName64\u0027)]",
                              "type": "Microsoft.Resources/deployments",
                              "resourceGroup": "[parameters(\u0027targetResourceGroupName\u0027)]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "[variables(\u0027schemaLink\u0027)]",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "variables": {},
                                  "resources": [
                                    {
                                      "condition": "[not(empty(parameters(\u0027avSetId\u0027)))]",
                                      "type": "[variables(\u0027avSetType\u0027)]",
                                      "sku": {
                                        "name": "[if(empty(parameters(\u0027avSetId\u0027)), \u0027Aligned\u0027, reference(parameters(\u0027avSetId\u0027), variables(\u0027avSetApiVersion\u0027), \u0027Full\u0027).sku.name)]"
                                      },
                                      "name": "[variables(\u0027recoveryAvSetName\u0027)]",
                                      "apiVersion": "[variables(\u0027avSetApiVersion\u0027)]",
                                      "location": "[parameters(\u0027targetRegion\u0027)]",
                                      "tags": {},
                                      "properties": {
                                        "platformUpdateDomainCount": "[if(empty(parameters(\u0027avSetId\u0027)), \u00275\u0027, reference(parameters(\u0027avSetId\u0027), variables(\u0027avSetApiVersion\u0027)).platformUpdateDomainCount)]",
                                        "platformFaultDomainCount": "[if(empty(parameters(\u0027avSetId\u0027)), \u00272\u0027, reference(parameters(\u0027avSetId\u0027), variables(\u0027avSetApiVersion\u0027)).platformFaultDomainCount)]",
                                        "proximityPlacementGroup": "[if(empty(parameters(\u0027ppgId\u0027)), json(\u0027null\u0027), json(concat(\u0027{\u0027, \u0027\u0022id\u0022\u0027, \u0027:\u0027, \u0027\u0022\u0027, variables(\u0027recoveryPPGId\u0027), \u0027\u0022\u0027, \u0027}\u0027)))]"
                                      }
                                    }
                                  ]
                                },
                                "parameters": {}
                              },
                              "dependsOn": [
                                "[variables(\u0027ppgTemplateName64\u0027)]"
                              ]
                            },
                            {
                              "condition": "[and(not(empty(parameters(\u0027cacheStorageAccountId\u0027))), not(contains(parameters(\u0027cacheStorageAccountId\u0027), \u0027/\u0027)))]",
                              "apiVersion": "[variables(\u0027deploymentApiVersion\u0027)]",
                              "name": "[variables(\u0027storageAccountTemplateName64\u0027)]",
                              "type": "Microsoft.Resources/deployments",
                              "resourceGroup": "[parameters(\u0027vaultResourceGroupName\u0027)]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "[variables(\u0027schemaLink\u0027)]",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "variables": {},
                                  "resources": [
                                    {
                                      "condition": "[and(not(empty(parameters(\u0027cacheStorageAccountId\u0027))), not(contains(parameters(\u0027cacheStorageAccountId\u0027), \u0027/\u0027)))]",
                                      "type": "[variables(\u0027storageType\u0027)]",
                                      "name": "[parameters(\u0027cacheStorageAccountId\u0027)]",
                                      "apiVersion": "[variables(\u0027storageAccountApiVersion\u0027)]",
                                      "location": "[parameters(\u0027sourceRegion\u0027)]",
                                      "sku": {
                                        "name": "[variables(\u0027storageAccountSKUName\u0027)]"
                                      },
                                      "kind": "[variables(\u0027storageAccountKind\u0027)]",
                                      "properties": {
                                        "supportsHttpsTrafficOnly": true
                                      }
                                    }
                                  ]
                                },
                                "parameters": {}
                              }
                            },
                            {
                              "apiVersion": "[variables(\u0027deploymentApiVersion\u0027)]",
                              "name": "[variables(\u0027replicationProtectedIntentTemplateName64\u0027)]",
                              "type": "Microsoft.Resources/deployments",
                              "resourceGroup": "[parameters(\u0027vaultResourceGroupName\u0027)]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "[variables(\u0027schemaLink\u0027)]",
                                  "contentVersion": "1.0.0.0",
                                  "parameters": {},
                                  "variables": {},
                                  "resources": [
                                    {
                                      "condition": "[lessOrEquals(length(reference(variables(\u0027eligibilityResultsId\u0027), \u00272018-07-10\u0027).errors), int(\u00270\u0027))]",
                                      "type": "Microsoft.RecoveryServices/vaults/replicationProtectionIntents",
                                      "name": "[variables(\u0027protectedIntentName\u0027)]",
                                      "apiVersion": "[parameters(\u0027apiVersion\u0027)]",
                                      "properties": {
                                        "providerSpecificDetails": {
                                          "instanceType": "A2A",
                                          "fabricObjectId": "[parameters(\u0027vmId\u0027)]",
                                          "primaryLocation": "[parameters(\u0027sourceRegion\u0027)]",
                                          "recoveryLocation": "[parameters(\u0027targetRegion\u0027)]",
                                          "recoverySubscriptionId": "[parameters(\u0027recoverySubscriptionId\u0027)]",
                                          "recoveryAvailabilityType": "[variables(\u0027recoveryAvType\u0027)]",
                                          "recoveryAvailabilityZone": "[variables(\u0027recoveryAvZone\u0027)]",
                                          "recoveryResourceGroupId": "[variables(\u0027targetResourceGroupId\u0027)]",
                                          "recoveryAvailabilitySetCustomInput": "[if(empty(parameters(\u0027avSetId\u0027)), json(\u0027null\u0027), json(concat(\u0027{\u0027, \u0027\u0022resourceType\u0022\u0027, \u0027:\u0027, \u0027\u0022Existing\u0022,\u0027, \u0027\u0022recoveryAvailabilitySetId\u0022\u0027, \u0027:\u0027, \u0027\u0022\u0027, variables(\u0027recoveryAvSetId\u0027), \u0027\u0022\u0027, \u0027}\u0027)))]",
                                          "recoveryProximityPlacementGroupCustomInput": "[if(empty(parameters(\u0027ppgId\u0027)), json(\u0027null\u0027), json(concat(\u0027{\u0027, \u0027\u0022resourceType\u0022\u0027, \u0027:\u0027, \u0027\u0022Existing\u0022,\u0027, \u0027\u0022recoveryProximityPlacementGroupId\u0022\u0027, \u0027:\u0027, \u0027\u0022\u0027, variables(\u0027recoveryPPGId\u0027), \u0027\u0022\u0027, \u0027}\u0027)))]",
                                          "recoveryVirtualNetworkCustomInput": "[if(contains(parameters(\u0027recoveryNetworkId\u0027), \u0027/\u0027), json(concat(\u0027{\u0027, \u0027\u0022resourceType\u0022\u0027, \u0027:\u0027, \u0027\u0022Existing\u0022,\u0027, \u0027\u0022recoveryVirtualNetworkId\u0022\u0027, \u0027:\u0027, \u0027\u0022\u0027, parameters(\u0027recoveryNetworkId\u0027), \u0027\u0022\u0027, \u0027}\u0027)),if(empty(parameters(\u0027recoveryNetworkId\u0027)), json(\u0027null\u0027), json(concat(\u0027{\u0027, \u0027\u0022resourceType\u0022\u0027, \u0027:\u0027, \u0027\u0022New\u0022,\u0027, \u0027\u0022recoveryVirtualNetworkName\u0022\u0027, \u0027:\u0027, \u0027\u0022\u0027, parameters(\u0027recoveryNetworkId\u0027), \u0027\u0022\u0027, \u0027}\u0027))))]",
                                          "primaryStagingStorageAccountCustomInput": "[if(empty(variables(\u0027cacheStorageAccountArmId\u0027)),json(\u0027null\u0027),json(concat(\u0027{\u0027, \u0027\u0022resourceType\u0022\u0027, \u0027:\u0027, \u0027\u0022Existing\u0022,\u0027, \u0027\u0022azureStorageAccountId\u0022\u0027, \u0027:\u0027, \u0027\u0022\u0027, variables(\u0027cacheStorageAccountArmId\u0027), \u0027\u0022\u0027, \u0027}\u0027)))]",
                                          "vmDisks": [],
                                          "copy": [
                                            {
                                              "name": "vmManagedDisks",
                                              "count": "[variables(\u0027vmDiskCount\u0027)]",
                                              "input": {
                                                "diskId": "[if(equals(copyIndex(\u0027vmManagedDisks\u0027), int(0)), reference(parameters(\u0027vmId\u0027), variables(\u0027vmApiVersion\u0027)).storageProfile.osDisk.managedDisk.Id, variables(\u0027vmDataDiskIds\u0027)[sub(copyIndex(\u0027vmManagedDisks\u0027), int(1))])]",
                                                "recoveryResourceGroupCustomInput": {
                                                  "resourceType": "Existing",
                                                  "recoveryResourceGroupId": "[variables(\u0027targetResourceGroupId\u0027)]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "vmName": {
                                      "value": "[last(split(parameters(\u0027vmId\u0027), \u0027/\u0027))]",
                                      "type": "string"
                                    },
                                    "availabilitySetUrl": {
                                      "value": "[if(empty(parameters(\u0027avSetId\u0027)), \u0027\u0027, concat(variables(\u0027portalLinkPrefix\u0027), variables(\u0027recoveryAvSetId\u0027)))]",
                                      "type": "string"
                                    },
                                    "proximityPlacementGroupUrl": {
                                      "value": "[if(empty(parameters(\u0027ppgId\u0027)), \u0027\u0027, concat(variables(\u0027portalLinkPrefix\u0027), variables(\u0027recoveryPPGId\u0027)))]",
                                      "type": "string"
                                    },
                                    "replicationEligibilityResults": {
                                      "value": "[reference(variables(\u0027eligibilityResultsId\u0027), parameters(\u0027apiVersion\u0027))]",
                                      "type": "Object"
                                    }
                                  }
                                },
                                "parameters": {}
                              },
                              "dependsOn": [
                                "[variables(\u0027ppgTemplateName64\u0027)]",
                                "[variables(\u0027avSetTemplateName64\u0027)]",
                                "[variables(\u0027storageAccountTemplateName64\u0027)]"
                              ]
                            }
                          ],
                          "outputs": {}
                        },
                        "parameters": {
                          "apiVersion": {
                            "value": "2018-07-10"
                          },
                          "avSetId": {
                            "value": "[field(\u0027Microsoft.Compute/virtualMachines/availabilitySet.id\u0027)]"
                          },
                          "dataDiskIds": {
                            "value": {
                              "rawValue": "[field(\u0027Microsoft.Compute/virtualMachines/storageProfile.dataDisks[*].managedDisk.id\u0027)]",
                              "emptyArray": []
                            }
                          },
                          "osDiskId": {
                            "value": "[field(\u0027Microsoft.Compute/virtualMachines/storageProfile.osDisk.managedDisk.id\u0027)]"
                          },
                          "ppgId": {
                            "value": "[field(\u0027Microsoft.Compute/virtualMachines/proximityPlacementGroup.id\u0027)]"
                          },
                          "recoveryNetworkId": {
                            "value": "[parameters(\u0027recoveryNetworkId\u0027)]"
                          },
                          "recoverySubscriptionId": {
                            "value": "[subscription().subscriptionId]"
                          },
                          "sourceRegion": {
                            "value": "[parameters(\u0027sourceRegion\u0027)]"
                          },
                          "sourceResourceGroupName": {
                            "value": "[resourcegroup().Name]"
                          },
                          "targetRegion": {
                            "value": "[parameters(\u0027targetRegion\u0027)]"
                          },
                          "targetResourceGroupName": {
                            "value": "[last(split(parameters(\u0027targetResourceGroupId\u0027), \u0027/\u0027))]"
                          },
                          "targetZone": {
                            "value": "[parameters(\u0027targetZone\u0027)]"
                          },
                          "vaultName": {
                            "value": "[last(split(parameters(\u0027vaultId\u0027), \u0027/\u0027))]"
                          },
                          "vaultResourceGroupName": {
                            "value": "[last(split(parameters(\u0027vaultResourceGroupId\u0027), \u0027/\u0027))]"
                          },
                          "vmId": {
                            "value": "[field(\u0027id\u0027)]"
                          },
                          "vmZones": {
                            "value": {
                              "rawValue": "[field(\u0027Microsoft.Compute/virtualMachines/zones\u0027)]",
                              "emptyArray": []
                            }
                          },
                          "cacheStorageAccountId": {
                            "value": "[parameters(\u0027cacheStorageAccountId\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/ac34a73f-9fa5-4067-9247-a3ecae514468",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "ac34a73f-9fa5-4067-9247-a3ecae514468"
          },
          {
            "properties": {
              "displayName": "Configure disk access resources to use private DNS zones",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use private DNS zones to override the DNS resolution for a private endpoint. A private DNS zone links to your virtual network to resolve to a managed disk. Learn more at: https://aka.ms/disksprivatelinksdoc.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "privateDnsZoneId": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Private DNS Zone ID for managed disks",
                    "description": "The private DNS zone name required for managed disks to resolve a private DNS Zone.",
                    "strongType": "Microsoft.Network/privateDnsZones",
                    "assignPermissions": true
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "DeployIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Network/privateEndpoints"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
                        "where": {
                          "allOf": [
                            {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                              "contains": "Microsoft.Compute/diskAccesses"
                            },
                            {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "disks"
                            }
                          ]
                        }
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                    "roleDefinitionIds": [
                      "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                    ],
                    "deployment": {
                      "properties": {
                        "mode": "incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "privateDnsZoneId": {
                              "type": "string"
                            },
                            "privateEndpointName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "name": "[concat(parameters(\u0027privateEndpointName\u0027), \u0027/deployedByPolicy\u0027)]",
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-03-01",
                              "location": "[parameters(\u0027location\u0027)]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "diskAccess-privateDnsZone",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters(\u0027privateDnsZoneId\u0027)]"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "parameters": {
                          "privateDnsZoneId": {
                            "value": "[parameters(\u0027privateDnsZoneId\u0027)]"
                          },
                          "privateEndpointName": {
                            "value": "[field(\u0027name\u0027)]"
                          },
                          "location": {
                            "value": "[field(\u0027location\u0027)]"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/bc05b96c-0b36-4ca9-82f0-5c53f96ce05a",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "bc05b96c-0b36-4ca9-82f0-5c53f96ce05a"
          },
          {
            "properties": {
              "displayName": "Only approved VM extensions should be installed",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy governs the virtual machine extensions that are not approved.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "The effect determines what happens when the policy rule is evaluated to match"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                },
                "approvedExtensions": {
                  "type": "Array",
                  "metadata": {
                    "description": "The list of approved extension types that can be installed. Example: AzureDiskEncryption",
                    "displayName": "Approved extensions"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines/extensions"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "notIn": "[parameters(\u0027approvedExtensions\u0027)]"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/c0e996f8-39cf-4af9-9f45-83fbde810432",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "c0e996f8-39cf-4af9-9f45-83fbde810432"
          },
          {
            "properties": {
              "displayName": "Microsoft Antimalware for Azure should be configured to automatically update protection signatures",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy audits any Windows virtual machine not configured with automatic update of Microsoft Antimalware protection signatures.",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "equals": "Windows"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "existenceCondition": {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/type",
                          "equals": "IaaSAntimalware"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                          "equals": "Microsoft.Azure.Security"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/extensions/autoUpgradeMinorVersion",
                          "equals": "true"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/c43e4a30-77cb-48ab-a4dd-93f175c63b57",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "c43e4a30-77cb-48ab-a4dd-93f175c63b57"
          },
          {
            "properties": {
              "displayName": "Managed disks should be double encrypted with both platform-managed and customer-managed keys",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "High security sensitive customers who are concerned of the risk associated with any particular encryption algorithm, implementation, or key being compromised can opt for additional layer of encryption using a different encryption algorithm/mode at the infrastructure layer using platform managed encryption keys. The disk encryption sets are required to use double encryption. Learn more at https://aka.ms/disks-doubleEncryption.",
              "metadata": {
                "category": "Compute",
                "version": "1.0.0"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/diskEncryptionSets"
                    },
                    {
                      "field": "Microsoft.Compute/diskEncryptionSets/encryptionType",
                      "notEquals": "EncryptionAtRestWithPlatformAndCustomerKeys"
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/ca91455f-eace-4f96-be59-e6e2c35b4816",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "ca91455f-eace-4f96-be59-e6e2c35b4816"
          },
          {
            "properties": {
              "displayName": "Allowed virtual machine size SKUs",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "This policy enables you to specify a set of virtual machine size SKUs that your organization can deploy.",
              "metadata": {
                "version": "1.0.1",
                "category": "Compute"
              },
              "parameters": {
                "listOfAllowedSKUs": {
                  "type": "Array",
                  "metadata": {
                    "description": "The list of size SKUs that can be specified for virtual machines.",
                    "displayName": "Allowed Size SKUs",
                    "strongType": "VMSKUs"
                  }
                }
              },
              "policyRule": {
                "if": {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "not": {
                        "field": "Microsoft.Compute/virtualMachines/sku.name",
                        "in": "[parameters(\u0027listOfAllowedSKUs\u0027)]"
                      }
                    }
                  ]
                },
                "then": {
                  "effect": "Deny"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/cccc23c7-8427-4f53-ad12-b6a63eb452b3",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "cccc23c7-8427-4f53-ad12-b6a63eb452b3"
          },
          {
            "properties": {
              "displayName": "Managed disks should use a specific set of disk encryption sets for the customer-managed key encryption",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Requiring a specific set of disk encryption sets to be used with managed disks give you control over the keys used for encryption at rest. You are able to select the allowed encrypted sets and all others are rejected when attached to a disk. Learn more at https://aka.ms/disks-cmk.",
              "metadata": {
                "category": "Compute",
                "version": "2.0.0"
              },
              "parameters": {
                "allowedEncryptionSets": {
                  "type": "Array",
                  "metadata": {
                    "displayName": "Allowed disk encryption set",
                    "description": "The list of allowed disk encryption sets for managed disks.",
                    "strongType": "Microsoft.Compute/diskEncryptionSets"
                  }
                },
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/disks"
                        },
                        {
                          "field": "Microsoft.Compute/disks/managedBy",
                          "exists": "False"
                        },
                        {
                          "field": "Microsoft.Compute/disks/encryption.diskEncryptionSetId",
                          "notIn": "[parameters(\u0027allowedEncryptionSets\u0027)]"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.managedDisk.diskEncryptionSet.id",
                          "notIn": "[parameters(\u0027allowedEncryptionSets\u0027)]"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachineScaleSets"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.storageProfile.osDisk.managedDisk.diskEncryptionSet.id",
                          "notIn": "[parameters(\u0027allowedEncryptionSets\u0027)]"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachineScaleSets"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.storageProfile.dataDisks[*]"
                          },
                          "greater": 0
                        },
                        {
                          "not": {
                            "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.storageProfile.dataDisks[*].managedDisk.diskEncryptionSet.id",
                            "in": "[parameters(\u0027allowedEncryptionSets\u0027)]"
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/galleries/images/versions"
                        },
                        {
                          "not": {
                            "field": "Microsoft.Compute/galleries/images/versions/publishingProfile.targetRegions[*].encryption.osDiskImage.diskEncryptionSetId",
                            "in": "[parameters(\u0027allowedEncryptionSets\u0027)]"
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/galleries/images/versions"
                        },
                        {
                          "value": "[length(field(\u0027Microsoft.Compute/galleries/images/versions/storageProfile.dataDiskImages[*]\u0027))]",
                          "greater": 0
                        },
                        {
                          "not": {
                            "field": "Microsoft.Compute/galleries/images/versions/publishingProfile.targetRegions[*].encryption.dataDiskImages[*].diskEncryptionSetId",
                            "in": "[parameters(\u0027allowedEncryptionSets\u0027)]"
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/images"
                        },
                        {
                          "field": "Microsoft.Compute/images/storageProfile.osDisk.diskEncryptionSet.id",
                          "notIn": "[parameters(\u0027allowedEncryptionSets\u0027)]"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/images"
                        },
                        {
                          "value": "[length(field(\u0027Microsoft.Compute/images/storageProfile.dataDisks[*]\u0027))]",
                          "greater": 0
                        },
                        {
                          "field": "Microsoft.Compute/images/storageProfile.dataDisks[*].diskEncryptionSet.id",
                          "notIn": "[parameters(\u0027allowedEncryptionSets\u0027)]"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/d461a302-a187-421a-89ac-84acdb4edc04",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "d461a302-a187-421a-89ac-84acdb4edc04"
          },
          {
            "properties": {
              "displayName": "Disk access resources should use private link",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to diskAccesses, data leakage risks are reduced. Learn more about private links at: https://aka.ms/disksprivatelinksdoc. ",
              "metadata": {
                "version": "1.0.0",
                "category": "Compute"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "AuditIfNotExists",
                    "Disabled"
                  ],
                  "defaultValue": "AuditIfNotExists"
                }
              },
              "policyRule": {
                "if": {
                  "field": "type",
                  "equals": "Microsoft.Compute/diskAccesses"
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]",
                  "details": {
                    "type": "Microsoft.Compute/diskAccesses/privateEndpointConnections",
                    "existenceCondition": {
                      "field": "Microsoft.Compute/diskAccesses/privateEndpointConnections/privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  }
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/f39f5f49-4abf-44de-8c70-0756997bfb51",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "f39f5f49-4abf-44de-8c70-0756997bfb51"
          },
          {
            "properties": {
              "displayName": "Virtual machines and virtual machine scale sets should have encryption at host enabled",
              "policyType": "BuiltIn",
              "mode": "Indexed",
              "description": "Use encryption at host to get end-to-end encryption for your virtual machine and virtual machine scale set data. Encryption at host enables encryption at rest for your temporary disk and OS/data disk caches. Temporary and ephemeral OS disks are encrypted with platform-managed keys when encryption at host is enabled. OS/data disk caches are encrypted at rest with either customer-managed or platform-managed key, depending on the encryption type selected on the disk. Learn more at https://aka.ms/vm-hbe.",
              "metadata": {
                "category": "Compute",
                "version": "1.0.0"
              },
              "parameters": {
                "effect": {
                  "type": "String",
                  "metadata": {
                    "displayName": "Effect",
                    "description": "Enable or disable the execution of the policy"
                  },
                  "allowedValues": [
                    "Audit",
                    "Deny",
                    "Disabled"
                  ],
                  "defaultValue": "Audit"
                }
              },
              "policyRule": {
                "if": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachines/securityProfile.encryptionAtHost",
                          "notEquals": "true"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachineScaleSets"
                        },
                        {
                          "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.encryptionAtHost",
                          "notEquals": "true"
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "effect": "[parameters(\u0027effect\u0027)]"
                }
              }
            },
            "id": "/providers/Microsoft.Authorization/policyDefinitions/fc4d8e41-e223-45ea-9bf5-eada37891d87",
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "fc4d8e41-e223-45ea-9bf5-eada37891d87"
          }
        ]
      }
    }
  ],
  "Variables": {
    "RandomSeed": "701353413",
    "RESOURCE_MANAGER_URL": "https://management.azure.com",
    "SUBSCRIPTION_ID": "db1ab6f0-4769-4b27-930e-01e2ef9c123c"
  }
}