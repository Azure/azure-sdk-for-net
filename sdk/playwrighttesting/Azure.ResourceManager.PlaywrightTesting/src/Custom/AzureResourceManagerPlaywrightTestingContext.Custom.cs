// <auto-generated/>

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.PlaywrightTesting;
using Azure.ResourceManager.PlaywrightTesting.Models;

namespace Azure.ResourceManager.PlaywrightTesting;

[ModelReaderWriterBuildable(typeof(PlaywrightTestingAccountData))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingAccountQuotaData))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingAccountQuotaResource))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingAccountResource))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingQuotaData))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingQuotaResource))]
[ModelReaderWriterBuildable(typeof(AccountListResult))]
[ModelReaderWriterBuildable(typeof(AccountQuotaListResult))]
[ModelReaderWriterBuildable(typeof(AccountUpdateProperties))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingAccountFreeTrialProperties))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingAccountPatch))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingAccountProperties))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingAccountQuotaProperties))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingFreeTrialProperties))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingNameAvailabilityContent))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingNameAvailabilityResult))]
[ModelReaderWriterBuildable(typeof(PlaywrightTestingQuotaProperties))]
[ModelReaderWriterBuildable(typeof(QuotaListResult))]
public partial class AzureResourceManagerPlaywrightTestingContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
    }
}
