// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.DeploymentManager;

namespace Azure.ResourceManager.DeploymentManager.Samples
{
    public partial class Sample_RolloutResource
    {
        // Get rollout
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetRollout()
        {
            // Generated from example definition: specification/deploymentmanager/resource-manager/Microsoft.DeploymentManager/preview/2019-11-01-preview/examples/rollout_get.json
            // this example is just showing the usage of "Rollouts_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RolloutResource created on azure
            // for more information of creating RolloutResource, please refer to the document of RolloutResource
            string subscriptionId = "caac1590-e859-444f-a9e0-62091c0f5929";
            string resourceGroupName = "myResourceGroup";
            string rolloutName = "myRollout";
            ResourceIdentifier rolloutResourceId = RolloutResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rolloutName);
            RolloutResource rollout = client.GetRolloutResource(rolloutResourceId);

            // invoke the operation
            RolloutResource result = await rollout.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RolloutData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete rollout
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteRollout()
        {
            // Generated from example definition: specification/deploymentmanager/resource-manager/Microsoft.DeploymentManager/preview/2019-11-01-preview/examples/rollout_delete.json
            // this example is just showing the usage of "Rollouts_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RolloutResource created on azure
            // for more information of creating RolloutResource, please refer to the document of RolloutResource
            string subscriptionId = "caac1590-e859-444f-a9e0-62091c0f5929";
            string resourceGroupName = "myResourceGroup";
            string rolloutName = "myRollout";
            ResourceIdentifier rolloutResourceId = RolloutResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rolloutName);
            RolloutResource rollout = client.GetRolloutResource(rolloutResourceId);

            // invoke the operation
            await rollout.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Cancel rollout
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Cancel_CancelRollout()
        {
            // Generated from example definition: specification/deploymentmanager/resource-manager/Microsoft.DeploymentManager/preview/2019-11-01-preview/examples/rollout_post_cancel.json
            // this example is just showing the usage of "Rollouts_Cancel" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RolloutResource created on azure
            // for more information of creating RolloutResource, please refer to the document of RolloutResource
            string subscriptionId = "caac1590-e859-444f-a9e0-62091c0f5929";
            string resourceGroupName = "myResourceGroup";
            string rolloutName = "myRollout";
            ResourceIdentifier rolloutResourceId = RolloutResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rolloutName);
            RolloutResource rollout = client.GetRolloutResource(rolloutResourceId);

            // invoke the operation
            RolloutResource result = await rollout.CancelAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RolloutData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Restart rollout
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Restart_RestartRollout()
        {
            // Generated from example definition: specification/deploymentmanager/resource-manager/Microsoft.DeploymentManager/preview/2019-11-01-preview/examples/rollout_post_restart.json
            // this example is just showing the usage of "Rollouts_Restart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RolloutResource created on azure
            // for more information of creating RolloutResource, please refer to the document of RolloutResource
            string subscriptionId = "caac1590-e859-444f-a9e0-62091c0f5929";
            string resourceGroupName = "myResourceGroup";
            string rolloutName = "myRollout";
            ResourceIdentifier rolloutResourceId = RolloutResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, rolloutName);
            RolloutResource rollout = client.GetRolloutResource(rolloutResourceId);

            // invoke the operation
            bool? skipSucceeded = true;
            RolloutResource result = await rollout.RestartAsync(skipSucceeded: skipSucceeded);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RolloutData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
