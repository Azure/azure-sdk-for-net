// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DeploymentManager.Models
{
    /// <summary> The properties that define a Step group in a rollout. </summary>
    public partial class StepGroup
    {
        /// <summary> Initializes a new instance of StepGroup. </summary>
        /// <param name="name"> The name of the step group. </param>
        /// <param name="deploymentTargetId"> The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="deploymentTargetId"/> is null. </exception>
        public StepGroup(string name, string deploymentTargetId)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(deploymentTargetId, nameof(deploymentTargetId));

            Name = name;
            DependsOnStepGroups = new ChangeTrackingList<string>();
            PreDeploymentSteps = new ChangeTrackingList<PrePostStep>();
            DeploymentTargetId = deploymentTargetId;
            PostDeploymentSteps = new ChangeTrackingList<PrePostStep>();
        }

        /// <summary> Initializes a new instance of StepGroup. </summary>
        /// <param name="name"> The name of the step group. </param>
        /// <param name="dependsOnStepGroups"> The list of step group names on which this step group depends on. </param>
        /// <param name="preDeploymentSteps"> The list of steps to be run before deploying the target. </param>
        /// <param name="deploymentTargetId"> The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId. </param>
        /// <param name="postDeploymentSteps"> The list of steps to be run after deploying the target. </param>
        internal StepGroup(string name, IList<string> dependsOnStepGroups, IList<PrePostStep> preDeploymentSteps, string deploymentTargetId, IList<PrePostStep> postDeploymentSteps)
        {
            Name = name;
            DependsOnStepGroups = dependsOnStepGroups;
            PreDeploymentSteps = preDeploymentSteps;
            DeploymentTargetId = deploymentTargetId;
            PostDeploymentSteps = postDeploymentSteps;
        }

        /// <summary> The name of the step group. </summary>
        public string Name { get; set; }
        /// <summary> The list of step group names on which this step group depends on. </summary>
        public IList<string> DependsOnStepGroups { get; }
        /// <summary> The list of steps to be run before deploying the target. </summary>
        public IList<PrePostStep> PreDeploymentSteps { get; }
        /// <summary> The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId. </summary>
        public string DeploymentTargetId { get; set; }
        /// <summary> The list of steps to be run after deploying the target. </summary>
        public IList<PrePostStep> PostDeploymentSteps { get; }
    }
}
