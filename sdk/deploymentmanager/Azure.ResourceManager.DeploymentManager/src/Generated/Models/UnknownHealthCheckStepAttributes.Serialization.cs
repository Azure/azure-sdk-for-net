// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DeploymentManager.Models
{
    internal partial class UnknownHealthCheckStepAttributes : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("type"u8);
            writer.WriteStringValue(HealthCheckStepAttributesType);
            if (Optional.IsDefined(WaitDuration))
            {
                writer.WritePropertyName("waitDuration"u8);
                writer.WriteStringValue(WaitDuration.Value, "P");
            }
            if (Optional.IsDefined(MaxElasticDuration))
            {
                writer.WritePropertyName("maxElasticDuration"u8);
                writer.WriteStringValue(MaxElasticDuration.Value, "P");
            }
            writer.WritePropertyName("healthyStateDuration"u8);
            writer.WriteStringValue(HealthyStateDuration, "P");
            writer.WriteEndObject();
        }

        internal static UnknownHealthCheckStepAttributes DeserializeUnknownHealthCheckStepAttributes(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string type = "Unknown";
            Optional<TimeSpan> waitDuration = default;
            Optional<TimeSpan> maxElasticDuration = default;
            TimeSpan healthyStateDuration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("waitDuration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    waitDuration = property.Value.GetTimeSpan("P");
                    continue;
                }
                if (property.NameEquals("maxElasticDuration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxElasticDuration = property.Value.GetTimeSpan("P");
                    continue;
                }
                if (property.NameEquals("healthyStateDuration"u8))
                {
                    healthyStateDuration = property.Value.GetTimeSpan("P");
                    continue;
                }
            }
            return new UnknownHealthCheckStepAttributes(type, Optional.ToNullable(waitDuration), Optional.ToNullable(maxElasticDuration), healthyStateDuration);
        }
    }
}
