// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DeploymentManager.Models
{
    /// <summary> A REST based health check. </summary>
    public partial class RestHealthCheck
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="RestHealthCheck"/>. </summary>
        /// <param name="name"> A unique name for this check. </param>
        /// <param name="request"> The request to the health provider. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="request"/> is null. </exception>
        public RestHealthCheck(string name, RestRequest request)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(request, nameof(request));

            Name = name;
            Request = request;
        }

        /// <summary> Initializes a new instance of <see cref="RestHealthCheck"/>. </summary>
        /// <param name="name"> A unique name for this check. </param>
        /// <param name="request"> The request to the health provider. </param>
        /// <param name="response"> The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal RestHealthCheck(string name, RestRequest request, RestResponse response, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Name = name;
            Request = request;
            Response = response;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="RestHealthCheck"/> for deserialization. </summary>
        internal RestHealthCheck()
        {
        }

        /// <summary> A unique name for this check. </summary>
        public string Name { get; set; }
        /// <summary> The request to the health provider. </summary>
        public RestRequest Request { get; set; }
        /// <summary> The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK. </summary>
        public RestResponse Response { get; set; }
    }
}
