// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DeploymentManager.Models
{
    public partial class ServiceUnit
    {
        internal static ServiceUnit DeserializeServiceUnit(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> name = default;
            Optional<IReadOnlyList<RolloutStep>> steps = default;
            string targetResourceGroup = default;
            DeploymentMode deploymentMode = default;
            Optional<ServiceUnitArtifacts> artifacts = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("steps"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<RolloutStep> array = new List<RolloutStep>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RolloutStep.DeserializeRolloutStep(item));
                    }
                    steps = array;
                    continue;
                }
                if (property.NameEquals("targetResourceGroup"u8))
                {
                    targetResourceGroup = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deploymentMode"u8))
                {
                    deploymentMode = property.Value.GetString().ToDeploymentMode();
                    continue;
                }
                if (property.NameEquals("artifacts"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    artifacts = ServiceUnitArtifacts.DeserializeServiceUnitArtifacts(property.Value);
                    continue;
                }
            }
            return new ServiceUnit(targetResourceGroup, deploymentMode, artifacts.Value, name.Value, Optional.ToList(steps));
        }
    }
}
