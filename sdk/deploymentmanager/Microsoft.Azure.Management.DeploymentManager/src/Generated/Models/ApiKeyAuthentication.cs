// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DeploymentManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// ApiKey authentication gives a name and a value that can be included in
    /// either the request header or query parameters.
    /// </summary>
    [Newtonsoft.Json.JsonObject("ApiKey")]
    public partial class ApiKeyAuthentication : RestRequestAuthentication
    {
        /// <summary>
        /// Initializes a new instance of the ApiKeyAuthentication class.
        /// </summary>
        public ApiKeyAuthentication()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiKeyAuthentication class.
        /// </summary>
        /// <param name="name">The key name of the authentication key/value
        /// pair.</param>
        /// <param name="inProperty">The location of the authentication
        /// key/value pair in the request. Possible values include: 'Query',
        /// 'Header'</param>
        /// <param name="value">The value of the authentication key/value
        /// pair.</param>
        public ApiKeyAuthentication(string name, RestAuthLocation inProperty, string value)
        {
            Name = name;
            InProperty = inProperty;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the key name of the authentication key/value pair.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the location of the authentication key/value pair in
        /// the request. Possible values include: 'Query', 'Header'
        /// </summary>
        [JsonProperty(PropertyName = "in")]
        public RestAuthLocation InProperty { get; set; }

        /// <summary>
        /// Gets or sets the value of the authentication key/value pair.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Value == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Value");
            }
        }
    }
}
