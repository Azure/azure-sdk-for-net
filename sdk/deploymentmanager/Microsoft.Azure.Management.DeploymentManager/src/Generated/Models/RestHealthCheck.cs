// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DeploymentManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A REST based health check
    /// </summary>
    public partial class RestHealthCheck
    {
        /// <summary>
        /// Initializes a new instance of the RestHealthCheck class.
        /// </summary>
        public RestHealthCheck()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestHealthCheck class.
        /// </summary>
        /// <param name="name">A unique name for this check.</param>
        /// <param name="request">The request to the health provider.</param>
        /// <param name="response">The expected response from the health
        /// provider. If no expected response is provided, the default is to
        /// expect the received response to have an HTTP status code of 200
        /// OK.</param>
        public RestHealthCheck(string name, RestRequest request, RestResponse response = default(RestResponse))
        {
            Name = name;
            Request = request;
            Response = response;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a unique name for this check.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the request to the health provider.
        /// </summary>
        [JsonProperty(PropertyName = "request")]
        public RestRequest Request { get; set; }

        /// <summary>
        /// Gets or sets the expected response from the health provider. If no
        /// expected response is provided, the default is to expect the
        /// received response to have an HTTP status code of 200 OK.
        /// </summary>
        [JsonProperty(PropertyName = "response")]
        public RestResponse Response { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Request == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Request");
            }
            if (Request != null)
            {
                Request.Validate();
            }
        }
    }
}
