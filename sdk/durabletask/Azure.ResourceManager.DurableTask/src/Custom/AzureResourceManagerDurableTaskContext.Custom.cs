// <auto-generated/>

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using Azure.ResourceManager.DurableTask;
using Azure.ResourceManager.DurableTask.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DurableTask;

[ModelReaderWriterBuildable(typeof(DurableTaskHubData))]
[ModelReaderWriterBuildable(typeof(DurableTaskHubResource))]
[ModelReaderWriterBuildable(typeof(DurableTaskRetentionPolicyData))]
[ModelReaderWriterBuildable(typeof(DurableTaskRetentionPolicyResource))]
[ModelReaderWriterBuildable(typeof(DurableTaskSchedulerData))]
[ModelReaderWriterBuildable(typeof(DurableTaskSchedulerResource))]
[ModelReaderWriterBuildable(typeof(DurableTaskHubProperties))]
[ModelReaderWriterBuildable(typeof(DurableTaskRetentionPolicyDetails))]
[ModelReaderWriterBuildable(typeof(DurableTaskRetentionPolicyProperties))]
[ModelReaderWriterBuildable(typeof(DurableTaskSchedulerPatch))]
[ModelReaderWriterBuildable(typeof(DurableTaskSchedulerPatchProperties))]
[ModelReaderWriterBuildable(typeof(DurableTaskSchedulerProperties))]
[ModelReaderWriterBuildable(typeof(DurableTaskSchedulerSku))]
[ModelReaderWriterBuildable(typeof(DurableTaskSchedulerSkuUpdate))]
[ModelReaderWriterBuildable(typeof(RetentionPolicyListResult))]
[ModelReaderWriterBuildable(typeof(SchedulerListResult))]
[ModelReaderWriterBuildable(typeof(TaskHubListResult))]
public partial class AzureResourceManagerDurableTaskContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
    }
}
