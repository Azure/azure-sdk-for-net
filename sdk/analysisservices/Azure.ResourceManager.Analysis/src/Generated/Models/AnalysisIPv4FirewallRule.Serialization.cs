// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Analysis.Models
{
    public partial class AnalysisIPv4FirewallRule : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(FirewallRuleName))
            {
                writer.WritePropertyName("firewallRuleName");
                writer.WriteStringValue(FirewallRuleName);
            }
            if (Optional.IsDefined(RangeStart))
            {
                writer.WritePropertyName("rangeStart");
                writer.WriteStringValue(RangeStart);
            }
            if (Optional.IsDefined(RangeEnd))
            {
                writer.WritePropertyName("rangeEnd");
                writer.WriteStringValue(RangeEnd);
            }
            writer.WriteEndObject();
        }

        internal static AnalysisIPv4FirewallRule DeserializeAnalysisIPv4FirewallRule(JsonElement element)
        {
            Optional<string> firewallRuleName = default;
            Optional<string> rangeStart = default;
            Optional<string> rangeEnd = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("firewallRuleName"))
                {
                    firewallRuleName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rangeStart"))
                {
                    rangeStart = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rangeEnd"))
                {
                    rangeEnd = property.Value.GetString();
                    continue;
                }
            }
            return new AnalysisIPv4FirewallRule(firewallRuleName.Value, rangeStart.Value, rangeEnd.Value);
        }
    }
}
