// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppComplianceAutomation.Models
{
    public partial class SnapshotProperties
    {
        internal static SnapshotProperties DeserializeSnapshotProperties(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> snapshotName = default;
            Optional<DateTimeOffset> createdAt = default;
            Optional<ProvisioningState> provisioningState = default;
            Optional<ReportProperties> reportProperties = default;
            Optional<SystemData> reportSystemData = default;
            Optional<IReadOnlyList<ComplianceResult>> complianceResults = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("snapshotName"))
                {
                    snapshotName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createdAt"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    createdAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("reportProperties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    reportProperties = ReportProperties.DeserializeReportProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("reportSystemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    reportSystemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("complianceResults"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ComplianceResult> array = new List<ComplianceResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ComplianceResult.DeserializeComplianceResult(item));
                    }
                    complianceResults = array;
                    continue;
                }
            }
            return new SnapshotProperties(id.Value, snapshotName.Value, Optional.ToNullable(createdAt), Optional.ToNullable(provisioningState), reportProperties.Value, reportSystemData, Optional.ToList(complianceResults));
        }
    }
}
