// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.AppComplianceAutomation.Models
{
    /// <summary> webhook deliveryStatus. </summary>
    public readonly partial struct DeliveryStatus : IEquatable<DeliveryStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DeliveryStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DeliveryStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SucceededValue = "Succeeded";
        private const string FailedValue = "Failed";
        private const string NotStartedValue = "NotStarted";

        /// <summary> The webhook is delivered successfully. </summary>
        public static DeliveryStatus Succeeded { get; } = new DeliveryStatus(SucceededValue);
        /// <summary> The webhook is failed to deliver. </summary>
        public static DeliveryStatus Failed { get; } = new DeliveryStatus(FailedValue);
        /// <summary> The webhook is not delivered. </summary>
        public static DeliveryStatus NotStarted { get; } = new DeliveryStatus(NotStartedValue);
        /// <summary> Determines if two <see cref="DeliveryStatus"/> values are the same. </summary>
        public static bool operator ==(DeliveryStatus left, DeliveryStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DeliveryStatus"/> values are not the same. </summary>
        public static bool operator !=(DeliveryStatus left, DeliveryStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DeliveryStatus"/>. </summary>
        public static implicit operator DeliveryStatus(string value) => new DeliveryStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DeliveryStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DeliveryStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
