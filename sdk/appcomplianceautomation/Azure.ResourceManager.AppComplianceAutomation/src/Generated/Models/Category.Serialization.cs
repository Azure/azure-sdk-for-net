// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppComplianceAutomation.Models
{
    public partial class Category
    {
        internal static Category DeserializeCategory(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> categoryName = default;
            Core.Optional<CategoryType> categoryType = default;
            Core.Optional<CategoryStatus> categoryStatus = default;
            Core.Optional<IReadOnlyList<ControlFamily>> controlFamilies = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("categoryName"u8))
                {
                    categoryName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("categoryType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    categoryType = new CategoryType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("categoryStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    categoryStatus = new CategoryStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("controlFamilies"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ControlFamily> array = new List<ControlFamily>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ControlFamily.DeserializeControlFamily(item));
                    }
                    controlFamilies = array;
                    continue;
                }
            }
            return new Category(categoryName.Value, Core.Optional.ToNullable(categoryType), Core.Optional.ToNullable(categoryStatus), Core.Optional.ToList(controlFamilies));
        }
    }
}
