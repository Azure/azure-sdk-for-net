// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.VirtualEnclaves.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.VirtualEnclaves.Samples
{
    public partial class Sample_ApprovalResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ApprovalGet()
        {
            // Generated from example definition: 2025-05-01-preview/Approvals_Get.json
            // this example is just showing the usage of "ApprovalResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ApprovalResource created on azure
            // for more information of creating ApprovalResource, please refer to the document of ApprovalResource
            string resourceUri = "subscriptions/c64f6eca-bdc5-4bc2-88d6-f8f1dc23f86c/resourceGroups/TestMyRg/providers/Microsoft.Mission/enclaveconnections/TestMyEnclaveConnection";
            string approvalName = "TestApprovals";
            ResourceIdentifier approvalResourceId = ApprovalResource.CreateResourceIdentifier(resourceUri, approvalName);
            ApprovalResource approvalResource = client.GetApprovalResource(approvalResourceId);

            // invoke the operation
            ApprovalResource result = await approvalResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ApprovalResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ApprovalDelete()
        {
            // Generated from example definition: 2025-05-01-preview/Approvals_Delete.json
            // this example is just showing the usage of "ApprovalResource_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ApprovalResource created on azure
            // for more information of creating ApprovalResource, please refer to the document of ApprovalResource
            string resourceUri = "subscriptions/c64f6eca-bdc5-4bc2-88d6-f8f1dc23f86c/resourceGroups/TestMyRg/providers/Microsoft.Mission/enclaveconnections/TestMyEnclaveConnection";
            string approvalName = "TestApprovals";
            ResourceIdentifier approvalResourceId = ApprovalResource.CreateResourceIdentifier(resourceUri, approvalName);
            ApprovalResource approvalResource = client.GetApprovalResource(approvalResourceId);

            // invoke the operation
            await approvalResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ApprovalUpdate()
        {
            // Generated from example definition: 2025-05-01-preview/Approvals_Update.json
            // this example is just showing the usage of "ApprovalResource_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ApprovalResource created on azure
            // for more information of creating ApprovalResource, please refer to the document of ApprovalResource
            string resourceUri = "subscriptions/c64f6eca-bdc5-4bc2-88d6-f8f1dc23f86c/resourceGroups/TestMyRg/providers/Microsoft.Mission/enclaveconnections/TestMyEnclaveConnection";
            string approvalName = "TestApprovals";
            ResourceIdentifier approvalResourceId = ApprovalResource.CreateResourceIdentifier(resourceUri, approvalName);
            ApprovalResource approvalResource = client.GetApprovalResource(approvalResourceId);

            // invoke the operation
            ApprovalResourcePatch patch = new ApprovalResourcePatch
            {
                Properties = new ApprovalPatchProperties(new RequestMetadataUpdatableProperties("string")
                {
                    ApprovalCallbackRoute = "approvalCallback",
                    ApprovalCallbackPayload = "{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\"\n}",
                    ApprovalStatus = ApprovalStatus.Approved,
                })
                {
                    ParentResourceId = new ResourceIdentifier("/subscriptions/c64f6eca-bdc5-4bc2-88d6-f8f1dc23f86c/resourceGroups/TestMyRg/providers/microsoft.mission/virtualenclaves/TestMyEnclave"),
                    GrandparentResourceId = new ResourceIdentifier("/subscriptions/c64f6eca-bdc5-4bc2-88d6-f8f1dc23f86c/resourceGroups/testrg/providers/Microsoft.Mission/communities/TestMyCommunity"),
                    Approvers = {new Approver("00000000-0000-0000-0000-000000000000", DateTimeOffset.Parse("2023-03-17T20:43:17.760Z"))
{
ActionPerformed = ActionPerformed.Approved,
}},
                    TicketId = "string",
                    CreatedOn = DateTimeOffset.Parse("2023-03-17T20:43:17.760Z"),
                    StateChangedOn = DateTimeOffset.Parse("2023-03-17T20:43:17.760Z"),
                },
            };
            ArmOperation<ApprovalResource> lro = await approvalResource.UpdateAsync(WaitUntil.Completed, patch);
            ApprovalResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ApprovalResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task NotifyInitiator_ApprovalNotifyInitiator()
        {
            // Generated from example definition: 2025-05-01-preview/Approvals_NotifyInitiator.json
            // this example is just showing the usage of "Approval_NotifyInitiator" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ApprovalResource created on azure
            // for more information of creating ApprovalResource, please refer to the document of ApprovalResource
            string resourceUri = "subscriptions/c64f6eca-bdc5-4bc2-88d6-f8f1dc23f86c/resourceGroups/TestMyRg/providers/Microsoft.Mission/enclaveconnections/TestMyEnclaveConnection";
            string approvalName = "TestApprovals";
            ResourceIdentifier approvalResourceId = ApprovalResource.CreateResourceIdentifier(resourceUri, approvalName);
            ApprovalResource approvalResource = client.GetApprovalResource(approvalResourceId);

            // invoke the operation
            ApprovalActionContent content = new ApprovalActionContent(ApprovalActionRequestApprovalStatus.Approved);
            ArmOperation<ApprovalActionResponse> lro = await approvalResource.NotifyInitiatorAsync(WaitUntil.Completed, content);
            ApprovalActionResponse result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
