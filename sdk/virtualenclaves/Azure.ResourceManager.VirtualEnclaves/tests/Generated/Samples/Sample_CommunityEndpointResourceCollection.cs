// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.VirtualEnclaves.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.VirtualEnclaves.Samples
{
    public partial class Sample_CommunityEndpointResourceCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_CommunityEndpointsCreateOrUpdate()
        {
            // Generated from example definition: 2025-05-01-preview/CommunityEndpoints_CreateOrUpdate.json
            // this example is just showing the usage of "CommunityEndpointResource_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CommunityResource created on azure
            // for more information of creating CommunityResource, please refer to the document of CommunityResource
            string subscriptionId = "73CEECEF-2C30-488E-946F-D20F414D99BA";
            string resourceGroupName = "rgopenapi";
            string communityName = "TestMyCommunity";
            ResourceIdentifier communityResourceId = CommunityResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, communityName);
            CommunityResource communityResource = client.GetCommunityResource(communityResourceId);

            // get the collection of this CommunityEndpointResource
            CommunityEndpointResourceCollection collection = communityResource.GetCommunityEndpointResources();

            // invoke the operation
            string communityEndpointName = "TestMyCommunityEndpoint";
            CommunityEndpointResourceData data = new CommunityEndpointResourceData(new AzureLocation("West US"))
            {
                Properties = new CommunityEndpointProperties(new CommunityEndpointDestinationRule[]
            {
new CommunityEndpointDestinationRule
{
DestinationType = DestinationType.FQDNTag,
Protocols = {CommunityEndpointProtocol.TCP},
TransitHubResourceId = new ResourceIdentifier("/subscriptions/c64f6eca-bdc5-4bc2-88d6-f8f1dc23f86c/resourceGroups/testrg/providers/Microsoft.Mission/communities/TestMyCommunity/transitHubs/TestThName"),
Destination = "foo.example.com",
Ports = "443",
}
            }),
                Tags =
{
["sampletag"] = "samplevalue"
},
            };
            ArmOperation<CommunityEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, communityEndpointName, data);
            CommunityEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CommunityEndpointResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_CommunityEndpointsGet()
        {
            // Generated from example definition: 2025-05-01-preview/CommunityEndpoints_Get.json
            // this example is just showing the usage of "CommunityEndpointResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CommunityResource created on azure
            // for more information of creating CommunityResource, please refer to the document of CommunityResource
            string subscriptionId = "73CEECEF-2C30-488E-946F-D20F414D99BA";
            string resourceGroupName = "rgopenapi";
            string communityName = "TestMyCommunity";
            ResourceIdentifier communityResourceId = CommunityResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, communityName);
            CommunityResource communityResource = client.GetCommunityResource(communityResourceId);

            // get the collection of this CommunityEndpointResource
            CommunityEndpointResourceCollection collection = communityResource.GetCommunityEndpointResources();

            // invoke the operation
            string communityEndpointName = "TestMyCommunityEndpoint";
            CommunityEndpointResource result = await collection.GetAsync(communityEndpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            CommunityEndpointResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_CommunityEndpointsListByCommunityResource()
        {
            // Generated from example definition: 2025-05-01-preview/CommunityEndpoints_ListByCommunityResource.json
            // this example is just showing the usage of "CommunityEndpointResource_ListByCommunityResource" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CommunityResource created on azure
            // for more information of creating CommunityResource, please refer to the document of CommunityResource
            string subscriptionId = "73CEECEF-2C30-488E-946F-D20F414D99BA";
            string resourceGroupName = "rgopenapi";
            string communityName = "TestMyCommunity";
            ResourceIdentifier communityResourceId = CommunityResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, communityName);
            CommunityResource communityResource = client.GetCommunityResource(communityResourceId);

            // get the collection of this CommunityEndpointResource
            CommunityEndpointResourceCollection collection = communityResource.GetCommunityEndpointResources();

            // invoke the operation and iterate over the result
            await foreach (CommunityEndpointResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                CommunityEndpointResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_CommunityEndpointsGet()
        {
            // Generated from example definition: 2025-05-01-preview/CommunityEndpoints_Get.json
            // this example is just showing the usage of "CommunityEndpointResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CommunityResource created on azure
            // for more information of creating CommunityResource, please refer to the document of CommunityResource
            string subscriptionId = "73CEECEF-2C30-488E-946F-D20F414D99BA";
            string resourceGroupName = "rgopenapi";
            string communityName = "TestMyCommunity";
            ResourceIdentifier communityResourceId = CommunityResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, communityName);
            CommunityResource communityResource = client.GetCommunityResource(communityResourceId);

            // get the collection of this CommunityEndpointResource
            CommunityEndpointResourceCollection collection = communityResource.GetCommunityEndpointResources();

            // invoke the operation
            string communityEndpointName = "TestMyCommunityEndpoint";
            bool result = await collection.ExistsAsync(communityEndpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_CommunityEndpointsGet()
        {
            // Generated from example definition: 2025-05-01-preview/CommunityEndpoints_Get.json
            // this example is just showing the usage of "CommunityEndpointResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this CommunityResource created on azure
            // for more information of creating CommunityResource, please refer to the document of CommunityResource
            string subscriptionId = "73CEECEF-2C30-488E-946F-D20F414D99BA";
            string resourceGroupName = "rgopenapi";
            string communityName = "TestMyCommunity";
            ResourceIdentifier communityResourceId = CommunityResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, communityName);
            CommunityResource communityResource = client.GetCommunityResource(communityResourceId);

            // get the collection of this CommunityEndpointResource
            CommunityEndpointResourceCollection collection = communityResource.GetCommunityEndpointResources();

            // invoke the operation
            string communityEndpointName = "TestMyCommunityEndpoint";
            NullableResponse<CommunityEndpointResource> response = await collection.GetIfExistsAsync(communityEndpointName);
            CommunityEndpointResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                CommunityEndpointResourceData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
