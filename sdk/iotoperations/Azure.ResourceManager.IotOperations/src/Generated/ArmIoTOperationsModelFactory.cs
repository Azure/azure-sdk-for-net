// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.IoTOperations.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmIoTOperationsModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="IoTOperations.DataflowEndpointResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> Edge location of the resource. </param>
        /// <returns> A new <see cref="IoTOperations.DataflowEndpointResourceData"/> instance for mocking. </returns>
        public static DataflowEndpointResourceData DataflowEndpointResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, DataflowEndpointProperties properties = null, ExtendedLocation extendedLocation = null)
        {
            return new DataflowEndpointResourceData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                extendedLocation,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.DataflowEndpointProperties"/>. </summary>
        /// <param name="endpointType"> Endpoint Type. </param>
        /// <param name="dataExplorerSettings"> Azure Data Explorer endpoint. </param>
        /// <param name="dataLakeStorageSettings"> Azure Data Lake endpoint. </param>
        /// <param name="fabricOneLakeSettings"> Microsoft Fabric endpoint. </param>
        /// <param name="kafkaSettings"> Kafka endpoint. </param>
        /// <param name="localStoragePersistentVolumeClaimRef"> Local persistent volume endpoint. </param>
        /// <param name="mqttSettings"> Broker endpoint. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <returns> A new <see cref="Models.DataflowEndpointProperties"/> instance for mocking. </returns>
        public static DataflowEndpointProperties DataflowEndpointProperties(EndpointType endpointType = default, DataflowEndpointDataExplorer dataExplorerSettings = null, DataflowEndpointDataLakeStorage dataLakeStorageSettings = null, DataflowEndpointFabricOneLake fabricOneLakeSettings = null, DataflowEndpointKafka kafkaSettings = null, string localStoragePersistentVolumeClaimRef = null, DataflowEndpointMqtt mqttSettings = null, ProvisioningState? provisioningState = null)
        {
            return new DataflowEndpointProperties(
                endpointType,
                dataExplorerSettings,
                dataLakeStorageSettings,
                fabricOneLakeSettings,
                kafkaSettings,
                localStoragePersistentVolumeClaimRef != null ? new DataflowEndpointLocalStorage(localStoragePersistentVolumeClaimRef, serializedAdditionalRawData: null) : null,
                mqttSettings,
                provisioningState,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="IoTOperations.DataflowResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> Edge location of the resource. </param>
        /// <returns> A new <see cref="IoTOperations.DataflowResourceData"/> instance for mocking. </returns>
        public static DataflowResourceData DataflowResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, DataflowProperties properties = null, ExtendedLocation extendedLocation = null)
        {
            return new DataflowResourceData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                extendedLocation,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.DataflowProperties"/>. </summary>
        /// <param name="mode"> Mode for Dataflow. Optional; defaults to Enabled. </param>
        /// <param name="operations"> List of operations including source and destination references as well as transformation. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <returns> A new <see cref="Models.DataflowProperties"/> instance for mocking. </returns>
        public static DataflowProperties DataflowProperties(OperationalMode? mode = null, IEnumerable<DataflowOperation> operations = null, ProvisioningState? provisioningState = null)
        {
            operations ??= new List<DataflowOperation>();

            return new DataflowProperties(mode, operations?.ToList(), provisioningState, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="IoTOperations.DataflowProfileResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> Edge location of the resource. </param>
        /// <returns> A new <see cref="IoTOperations.DataflowProfileResourceData"/> instance for mocking. </returns>
        public static DataflowProfileResourceData DataflowProfileResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, DataflowProfileProperties properties = null, ExtendedLocation extendedLocation = null)
        {
            return new DataflowProfileResourceData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                extendedLocation,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.DataflowProfileProperties"/>. </summary>
        /// <param name="diagnostics"> Spec defines the desired identities of NBC diagnostics settings. </param>
        /// <param name="instanceCount"> To manually scale the dataflow profile, specify the maximum number of instances you want to run. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <returns> A new <see cref="Models.DataflowProfileProperties"/> instance for mocking. </returns>
        public static DataflowProfileProperties DataflowProfileProperties(ProfileDiagnostics diagnostics = null, int? instanceCount = null, ProvisioningState? provisioningState = null)
        {
            return new DataflowProfileProperties(diagnostics, instanceCount, provisioningState, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="IoTOperations.BrokerAuthorizationResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> Edge location of the resource. </param>
        /// <returns> A new <see cref="IoTOperations.BrokerAuthorizationResourceData"/> instance for mocking. </returns>
        public static BrokerAuthorizationResourceData BrokerAuthorizationResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, BrokerAuthorizationProperties properties = null, ExtendedLocation extendedLocation = null)
        {
            return new BrokerAuthorizationResourceData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                extendedLocation,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.BrokerAuthorizationProperties"/>. </summary>
        /// <param name="authorizationPolicies"> The list of authorization policies supported by the Authorization Resource. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <returns> A new <see cref="Models.BrokerAuthorizationProperties"/> instance for mocking. </returns>
        public static BrokerAuthorizationProperties BrokerAuthorizationProperties(AuthorizationConfig authorizationPolicies = null, ProvisioningState? provisioningState = null)
        {
            return new BrokerAuthorizationProperties(authorizationPolicies, provisioningState, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="IoTOperations.BrokerAuthenticationResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> Edge location of the resource. </param>
        /// <returns> A new <see cref="IoTOperations.BrokerAuthenticationResourceData"/> instance for mocking. </returns>
        public static BrokerAuthenticationResourceData BrokerAuthenticationResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, BrokerAuthenticationProperties properties = null, ExtendedLocation extendedLocation = null)
        {
            return new BrokerAuthenticationResourceData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                extendedLocation,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.BrokerAuthenticationProperties"/>. </summary>
        /// <param name="authenticationMethods"> Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <returns> A new <see cref="Models.BrokerAuthenticationProperties"/> instance for mocking. </returns>
        public static BrokerAuthenticationProperties BrokerAuthenticationProperties(IEnumerable<BrokerAuthenticatorMethods> authenticationMethods = null, ProvisioningState? provisioningState = null)
        {
            authenticationMethods ??= new List<BrokerAuthenticatorMethods>();

            return new BrokerAuthenticationProperties(authenticationMethods?.ToList(), provisioningState, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="IoTOperations.BrokerListenerResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> Edge location of the resource. </param>
        /// <returns> A new <see cref="IoTOperations.BrokerListenerResourceData"/> instance for mocking. </returns>
        public static BrokerListenerResourceData BrokerListenerResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, BrokerListenerProperties properties = null, ExtendedLocation extendedLocation = null)
        {
            return new BrokerListenerResourceData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                extendedLocation,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.BrokerListenerProperties"/>. </summary>
        /// <param name="serviceName"> Kubernetes Service name of this listener. </param>
        /// <param name="ports"> Ports on which this listener accepts client connections. </param>
        /// <param name="serviceType"> Kubernetes Service type of this listener. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <returns> A new <see cref="Models.BrokerListenerProperties"/> instance for mocking. </returns>
        public static BrokerListenerProperties BrokerListenerProperties(string serviceName = null, IEnumerable<ListenerPort> ports = null, ServiceType? serviceType = null, ProvisioningState? provisioningState = null)
        {
            ports ??= new List<ListenerPort>();

            return new BrokerListenerProperties(serviceName, ports?.ToList(), serviceType, provisioningState, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="IoTOperations.BrokerResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> Edge location of the resource. </param>
        /// <returns> A new <see cref="IoTOperations.BrokerResourceData"/> instance for mocking. </returns>
        public static BrokerResourceData BrokerResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, BrokerProperties properties = null, ExtendedLocation extendedLocation = null)
        {
            return new BrokerResourceData(
                id,
                name,
                resourceType,
                systemData,
                properties,
                extendedLocation,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.BrokerProperties"/>. </summary>
        /// <param name="advanced"> Advanced settings of Broker. </param>
        /// <param name="cardinality"> The cardinality details of the broker. </param>
        /// <param name="diagnostics"> Spec defines the desired identities of Broker diagnostics settings. </param>
        /// <param name="diskBackedMessageBuffer"> Settings of Disk Backed Message Buffer. </param>
        /// <param name="generateResourceLimitsCpu"> This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted. </param>
        /// <param name="memoryProfile"> Memory profile of Broker. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <returns> A new <see cref="Models.BrokerProperties"/> instance for mocking. </returns>
        public static BrokerProperties BrokerProperties(AdvancedSettings advanced = null, Cardinality cardinality = null, BrokerDiagnostics diagnostics = null, DiskBackedMessageBuffer diskBackedMessageBuffer = null, OperationalMode? generateResourceLimitsCpu = null, BrokerMemoryProfile? memoryProfile = null, ProvisioningState? provisioningState = null)
        {
            return new BrokerProperties(
                advanced,
                cardinality,
                diagnostics,
                diskBackedMessageBuffer,
                generateResourceLimitsCpu != null ? new GenerateResourceLimits(generateResourceLimitsCpu, serializedAdditionalRawData: null) : null,
                memoryProfile,
                provisioningState,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="IoTOperations.InstanceResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"> Edge location of the resource. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        /// <returns> A new <see cref="IoTOperations.InstanceResourceData"/> instance for mocking. </returns>
        public static InstanceResourceData InstanceResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, InstanceProperties properties = null, ExtendedLocation extendedLocation = null, ManagedServiceIdentity identity = null)
        {
            tags ??= new Dictionary<string, string>();

            return new InstanceResourceData(
                id,
                name,
                resourceType,
                systemData,
                tags,
                location,
                properties,
                extendedLocation,
                identity,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.InstanceProperties"/>. </summary>
        /// <param name="description"> Detailed description of the Instance. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="version"> The Azure IoT Operations version. </param>
        /// <param name="schemaRegistryNamespace"> The reference to the Schema Registry for this AIO Instance. </param>
        /// <param name="components"> The configuration for components of the AIO Instance. </param>
        /// <returns> A new <see cref="Models.InstanceProperties"/> instance for mocking. </returns>
        public static InstanceProperties InstanceProperties(string description = null, ProvisioningState? provisioningState = null, string version = null, string schemaRegistryNamespace = null, Components components = null)
        {
            return new InstanceProperties(
                description,
                provisioningState,
                version,
                schemaRegistryNamespace,
                components,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.Operation"/>. </summary>
        /// <param name="name"> The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action". </param>
        /// <param name="isDataAction"> Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for Azure Resource Manager/control-plane operations. </param>
        /// <param name="display"> Localized display information for this particular operation. </param>
        /// <param name="origin"> The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system". </param>
        /// <param name="actionType"> Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs. </param>
        /// <returns> A new <see cref="Models.Operation"/> instance for mocking. </returns>
        public static Operation Operation(string name = null, bool? isDataAction = null, OperationDisplay display = null, Origin? origin = null, ActionType? actionType = null)
        {
            return new Operation(
                name,
                isDataAction,
                display,
                origin,
                actionType,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.OperationDisplay"/>. </summary>
        /// <param name="provider"> The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute". </param>
        /// <param name="resource"> The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections". </param>
        /// <param name="operation"> The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine". </param>
        /// <param name="description"> The short, localized friendly description of the operation; suitable for tool tips and detailed views. </param>
        /// <returns> A new <see cref="Models.OperationDisplay"/> instance for mocking. </returns>
        public static OperationDisplay OperationDisplay(string provider = null, string resource = null, string operation = null, string description = null)
        {
            return new OperationDisplay(provider, resource, operation, description, serializedAdditionalRawData: null);
        }
    }
}
