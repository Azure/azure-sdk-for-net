// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> AkriConnectorTemplateHelmConfiguration properties. </summary>
    public partial class AkriConnectorTemplateHelmConfigurationSettings
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AkriConnectorTemplateHelmConfigurationSettings"/>. </summary>
        /// <param name="releaseName"> The release name of the Helm chart. </param>
        /// <param name="repositoryName"> The name of the repository. </param>
        /// <param name="version"> The version of the Helm chart. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="releaseName"/>, <paramref name="repositoryName"/> or <paramref name="version"/> is null. </exception>
        public AkriConnectorTemplateHelmConfigurationSettings(string releaseName, string repositoryName, string version)
        {
            Argument.AssertNotNull(releaseName, nameof(releaseName));
            Argument.AssertNotNull(repositoryName, nameof(repositoryName));
            Argument.AssertNotNull(version, nameof(version));

            ReleaseName = releaseName;
            RepositoryName = repositoryName;
            Version = version;
            Values = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="AkriConnectorTemplateHelmConfigurationSettings"/>. </summary>
        /// <param name="registrySettings">
        /// The registry settings for the helm chart to be used.
        /// Please note <see cref="AkriConnectorTemplateHelmRegistrySettings"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AkriConnectorTemplateHelmContainerRegistry"/> and <see cref="AkriConnectorTemplateHelmRegistryEndpointRef"/>.
        /// </param>
        /// <param name="releaseName"> The release name of the Helm chart. </param>
        /// <param name="repositoryName"> The name of the repository. </param>
        /// <param name="version"> The version of the Helm chart. </param>
        /// <param name="advancedConfiguration">
        /// Advanced configuration for the Helm chart.
        /// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
        /// </param>
        /// <param name="values"> A map of values to pass to the helm chart. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AkriConnectorTemplateHelmConfigurationSettings(AkriConnectorTemplateHelmRegistrySettings registrySettings, string releaseName, string repositoryName, string version, AkriConnectorTemplateHelmAdvancedConfiguration advancedConfiguration, IDictionary<string, string> values, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            RegistrySettings = registrySettings;
            ReleaseName = releaseName;
            RepositoryName = repositoryName;
            Version = version;
            AdvancedConfiguration = advancedConfiguration;
            Values = values;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AkriConnectorTemplateHelmConfigurationSettings"/> for deserialization. </summary>
        internal AkriConnectorTemplateHelmConfigurationSettings()
        {
        }

        /// <summary>
        /// The registry settings for the helm chart to be used.
        /// Please note <see cref="AkriConnectorTemplateHelmRegistrySettings"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AkriConnectorTemplateHelmContainerRegistry"/> and <see cref="AkriConnectorTemplateHelmRegistryEndpointRef"/>.
        /// </summary>
        public AkriConnectorTemplateHelmRegistrySettings RegistrySettings { get; set; }
        /// <summary> The release name of the Helm chart. </summary>
        public string ReleaseName { get; set; }
        /// <summary> The name of the repository. </summary>
        public string RepositoryName { get; set; }
        /// <summary> The version of the Helm chart. </summary>
        public string Version { get; set; }
        /// <summary>
        /// Advanced configuration for the Helm chart.
        /// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
        /// </summary>
        public AkriConnectorTemplateHelmAdvancedConfiguration AdvancedConfiguration { get; set; }
        /// <summary> A map of values to pass to the helm chart. </summary>
        public IDictionary<string, string> Values { get; }
    }
}
