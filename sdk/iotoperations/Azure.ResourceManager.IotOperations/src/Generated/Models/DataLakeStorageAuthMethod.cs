// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IoTOperations.Models
{
    /// <summary> DataflowEndpoint Data Lake Storage Authentication Method properties. </summary>
    public readonly partial struct DataLakeStorageAuthMethod : IEquatable<DataLakeStorageAuthMethod>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataLakeStorageAuthMethod"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataLakeStorageAuthMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SystemAssignedManagedIdentityValue = "SystemAssignedManagedIdentity";
        private const string UserAssignedManagedIdentityValue = "UserAssignedManagedIdentity";
        private const string AccessTokenValue = "AccessToken";

        /// <summary> SystemAssignedManagedIdentity type. </summary>
        public static DataLakeStorageAuthMethod SystemAssignedManagedIdentity { get; } = new DataLakeStorageAuthMethod(SystemAssignedManagedIdentityValue);
        /// <summary> UserAssignedManagedIdentity type. </summary>
        public static DataLakeStorageAuthMethod UserAssignedManagedIdentity { get; } = new DataLakeStorageAuthMethod(UserAssignedManagedIdentityValue);
        /// <summary> AccessToken Option. </summary>
        public static DataLakeStorageAuthMethod AccessToken { get; } = new DataLakeStorageAuthMethod(AccessTokenValue);
        /// <summary> Determines if two <see cref="DataLakeStorageAuthMethod"/> values are the same. </summary>
        public static bool operator ==(DataLakeStorageAuthMethod left, DataLakeStorageAuthMethod right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataLakeStorageAuthMethod"/> values are not the same. </summary>
        public static bool operator !=(DataLakeStorageAuthMethod left, DataLakeStorageAuthMethod right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DataLakeStorageAuthMethod"/>. </summary>
        public static implicit operator DataLakeStorageAuthMethod(string value) => new DataLakeStorageAuthMethod(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataLakeStorageAuthMethod other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataLakeStorageAuthMethod other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
