// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> AkriConnectorTemplateBucketizedAllocation properties. </summary>
    public partial class AkriConnectorTemplateBucketizedAllocation : AkriConnectorTemplateAllocation
    {
        /// <summary> Initializes a new instance of <see cref="AkriConnectorTemplateBucketizedAllocation"/>. </summary>
        /// <param name="bucketSize"> The bucketized allocation of AEPs for connectors. </param>
        public AkriConnectorTemplateBucketizedAllocation(int bucketSize)
        {
            BucketSize = bucketSize;
            Policy = AkriConnectorTemplateAllocationPolicy.Bucketized;
        }

        /// <summary> Initializes a new instance of <see cref="AkriConnectorTemplateBucketizedAllocation"/>. </summary>
        /// <param name="policy"> The allocation policy type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="bucketSize"> The bucketized allocation of AEPs for connectors. </param>
        internal AkriConnectorTemplateBucketizedAllocation(AkriConnectorTemplateAllocationPolicy policy, IDictionary<string, BinaryData> serializedAdditionalRawData, int bucketSize) : base(policy, serializedAdditionalRawData)
        {
            BucketSize = bucketSize;
            Policy = policy;
        }

        /// <summary> Initializes a new instance of <see cref="AkriConnectorTemplateBucketizedAllocation"/> for deserialization. </summary>
        internal AkriConnectorTemplateBucketizedAllocation()
        {
        }

        /// <summary> The bucketized allocation of AEPs for connectors. </summary>
        public int BucketSize { get; set; }
    }
}
