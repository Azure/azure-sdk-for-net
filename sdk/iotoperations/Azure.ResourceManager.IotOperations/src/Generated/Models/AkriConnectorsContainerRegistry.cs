// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> AkriConnectorsContainerRegistry properties. </summary>
    public partial class AkriConnectorsContainerRegistry : AkriConnectorsRegistrySettings
    {
        /// <summary> Initializes a new instance of <see cref="AkriConnectorsContainerRegistry"/>. </summary>
        /// <param name="containerRegistrySettings"> The registry settings for the container registry. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="containerRegistrySettings"/> is null. </exception>
        public AkriConnectorsContainerRegistry(AkriConnectorsContainerRegistrySettings containerRegistrySettings)
        {
            Argument.AssertNotNull(containerRegistrySettings, nameof(containerRegistrySettings));

            ContainerRegistrySettings = containerRegistrySettings;
            RegistrySettingsType = AkriConnectorsRegistrySettingsType.ContainerRegistry;
        }

        /// <summary> Initializes a new instance of <see cref="AkriConnectorsContainerRegistry"/>. </summary>
        /// <param name="registrySettingsType"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="containerRegistrySettings"> The registry settings for the container registry. </param>
        internal AkriConnectorsContainerRegistry(AkriConnectorsRegistrySettingsType registrySettingsType, IDictionary<string, BinaryData> serializedAdditionalRawData, AkriConnectorsContainerRegistrySettings containerRegistrySettings) : base(registrySettingsType, serializedAdditionalRawData)
        {
            ContainerRegistrySettings = containerRegistrySettings;
            RegistrySettingsType = registrySettingsType;
        }

        /// <summary> Initializes a new instance of <see cref="AkriConnectorsContainerRegistry"/> for deserialization. </summary>
        internal AkriConnectorsContainerRegistry()
        {
        }

        /// <summary> The registry settings for the container registry. </summary>
        public AkriConnectorsContainerRegistrySettings ContainerRegistrySettings { get; set; }
    }
}
