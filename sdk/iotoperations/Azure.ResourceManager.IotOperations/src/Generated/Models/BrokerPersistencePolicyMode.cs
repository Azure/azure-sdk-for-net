// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> Broker Persistence Policy Mode values. </summary>
    internal readonly partial struct BrokerPersistencePolicyMode : IEquatable<BrokerPersistencePolicyMode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="BrokerPersistencePolicyMode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public BrokerPersistencePolicyMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AllValue = "All";
        private const string NoneValue = "None";
        private const string CustomValue = "Custom";

        /// <summary> Policy mode for All. </summary>
        public static BrokerPersistencePolicyMode All { get; } = new BrokerPersistencePolicyMode(AllValue);
        /// <summary> Policy mode for None. </summary>
        public static BrokerPersistencePolicyMode None { get; } = new BrokerPersistencePolicyMode(NoneValue);
        /// <summary> Indicates that the policy is a custom policy. </summary>
        public static BrokerPersistencePolicyMode Custom { get; } = new BrokerPersistencePolicyMode(CustomValue);
        /// <summary> Determines if two <see cref="BrokerPersistencePolicyMode"/> values are the same. </summary>
        public static bool operator ==(BrokerPersistencePolicyMode left, BrokerPersistencePolicyMode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="BrokerPersistencePolicyMode"/> values are not the same. </summary>
        public static bool operator !=(BrokerPersistencePolicyMode left, BrokerPersistencePolicyMode right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="BrokerPersistencePolicyMode"/>. </summary>
        public static implicit operator BrokerPersistencePolicyMode(string value) => new BrokerPersistencePolicyMode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is BrokerPersistencePolicyMode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(BrokerPersistencePolicyMode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
