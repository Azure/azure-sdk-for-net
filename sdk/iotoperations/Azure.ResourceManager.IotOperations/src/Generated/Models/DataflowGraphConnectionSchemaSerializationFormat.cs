// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> Serialization format for dataflow graph connection. </summary>
    public readonly partial struct DataflowGraphConnectionSchemaSerializationFormat : IEquatable<DataflowGraphConnectionSchemaSerializationFormat>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataflowGraphConnectionSchemaSerializationFormat"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataflowGraphConnectionSchemaSerializationFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DeltaValue = "Delta";
        private const string JsonValue = "Json";
        private const string ParquetValue = "Parquet";
        private const string AvroValue = "Avro";

        /// <summary> Delta Format. </summary>
        public static DataflowGraphConnectionSchemaSerializationFormat Delta { get; } = new DataflowGraphConnectionSchemaSerializationFormat(DeltaValue);
        /// <summary> JSON Format. </summary>
        public static DataflowGraphConnectionSchemaSerializationFormat Json { get; } = new DataflowGraphConnectionSchemaSerializationFormat(JsonValue);
        /// <summary> Parquet Format. </summary>
        public static DataflowGraphConnectionSchemaSerializationFormat Parquet { get; } = new DataflowGraphConnectionSchemaSerializationFormat(ParquetValue);
        /// <summary> Avro serialization format. </summary>
        public static DataflowGraphConnectionSchemaSerializationFormat Avro { get; } = new DataflowGraphConnectionSchemaSerializationFormat(AvroValue);
        /// <summary> Determines if two <see cref="DataflowGraphConnectionSchemaSerializationFormat"/> values are the same. </summary>
        public static bool operator ==(DataflowGraphConnectionSchemaSerializationFormat left, DataflowGraphConnectionSchemaSerializationFormat right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataflowGraphConnectionSchemaSerializationFormat"/> values are not the same. </summary>
        public static bool operator !=(DataflowGraphConnectionSchemaSerializationFormat left, DataflowGraphConnectionSchemaSerializationFormat right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DataflowGraphConnectionSchemaSerializationFormat"/>. </summary>
        public static implicit operator DataflowGraphConnectionSchemaSerializationFormat(string value) => new DataflowGraphConnectionSchemaSerializationFormat(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataflowGraphConnectionSchemaSerializationFormat other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataflowGraphConnectionSchemaSerializationFormat other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
