// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> Custom Broker Retain Message Policy. </summary>
    public partial class BrokerRetainMessagesCustomPolicy : BrokerRetainMessagesPolicy
    {
        /// <summary> Initializes a new instance of <see cref="BrokerRetainMessagesCustomPolicy"/>. </summary>
        /// <param name="retainSettings"> Settings for the policy. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="retainSettings"/> is null. </exception>
        public BrokerRetainMessagesCustomPolicy(BrokerRetainMessagesSettings retainSettings)
        {
            Argument.AssertNotNull(retainSettings, nameof(retainSettings));

            RetainSettings = retainSettings;
            Mode = BrokerPersistencePolicyMode.Custom;
        }

        /// <summary> Initializes a new instance of <see cref="BrokerRetainMessagesCustomPolicy"/>. </summary>
        /// <param name="mode"> 'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="retainSettings"> Settings for the policy. </param>
        internal BrokerRetainMessagesCustomPolicy(BrokerPersistencePolicyMode mode, IDictionary<string, BinaryData> serializedAdditionalRawData, BrokerRetainMessagesSettings retainSettings) : base(mode, serializedAdditionalRawData)
        {
            RetainSettings = retainSettings;
            Mode = mode;
        }

        /// <summary> Initializes a new instance of <see cref="BrokerRetainMessagesCustomPolicy"/> for deserialization. </summary>
        internal BrokerRetainMessagesCustomPolicy()
        {
        }

        /// <summary> Settings for the policy. </summary>
        public BrokerRetainMessagesSettings RetainSettings { get; set; }
    }
}
