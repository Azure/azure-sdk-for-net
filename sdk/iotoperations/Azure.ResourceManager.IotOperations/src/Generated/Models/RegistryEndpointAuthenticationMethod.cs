// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> The authentication method. </summary>
    internal readonly partial struct RegistryEndpointAuthenticationMethod : IEquatable<RegistryEndpointAuthenticationMethod>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RegistryEndpointAuthenticationMethod"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RegistryEndpointAuthenticationMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SystemAssignedManagedIdentityValue = "SystemAssignedManagedIdentity";
        private const string UserAssignedManagedIdentityValue = "UserAssignedManagedIdentity";
        private const string AnonymousValue = "Anonymous";
        private const string ArtifactPullSecretValue = "ArtifactPullSecret";

        /// <summary> SystemAssignedManagedIdentity type. </summary>
        public static RegistryEndpointAuthenticationMethod SystemAssignedManagedIdentity { get; } = new RegistryEndpointAuthenticationMethod(SystemAssignedManagedIdentityValue);
        /// <summary> UserAssignedManagedIdentity type. </summary>
        public static RegistryEndpointAuthenticationMethod UserAssignedManagedIdentity { get; } = new RegistryEndpointAuthenticationMethod(UserAssignedManagedIdentityValue);
        /// <summary> Anonymous Option. </summary>
        public static RegistryEndpointAuthenticationMethod Anonymous { get; } = new RegistryEndpointAuthenticationMethod(AnonymousValue);
        /// <summary> Artifact Pull Secret authentication. </summary>
        public static RegistryEndpointAuthenticationMethod ArtifactPullSecret { get; } = new RegistryEndpointAuthenticationMethod(ArtifactPullSecretValue);
        /// <summary> Determines if two <see cref="RegistryEndpointAuthenticationMethod"/> values are the same. </summary>
        public static bool operator ==(RegistryEndpointAuthenticationMethod left, RegistryEndpointAuthenticationMethod right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RegistryEndpointAuthenticationMethod"/> values are not the same. </summary>
        public static bool operator !=(RegistryEndpointAuthenticationMethod left, RegistryEndpointAuthenticationMethod right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="RegistryEndpointAuthenticationMethod"/>. </summary>
        public static implicit operator RegistryEndpointAuthenticationMethod(string value) => new RegistryEndpointAuthenticationMethod(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RegistryEndpointAuthenticationMethod other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RegistryEndpointAuthenticationMethod other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
