// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> Settings for RegistryEndpoint trust provided through a secret. </summary>
    public partial class RegistryEndpointTrustedSigningKeySecret : RegistryEndpointTrustedSigningKey
    {
        /// <summary> Initializes a new instance of <see cref="RegistryEndpointTrustedSigningKeySecret"/>. </summary>
        /// <param name="secretRef"> The name of the secret. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="secretRef"/> is null. </exception>
        public RegistryEndpointTrustedSigningKeySecret(string secretRef)
        {
            Argument.AssertNotNull(secretRef, nameof(secretRef));

            SecretRef = secretRef;
            Type = RegistryEndpointTrustedSigningKeyType.Secret;
        }

        /// <summary> Initializes a new instance of <see cref="RegistryEndpointTrustedSigningKeySecret"/>. </summary>
        /// <param name="type"> The trust type for the registry endpoint. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="secretRef"> The name of the secret. </param>
        internal RegistryEndpointTrustedSigningKeySecret(RegistryEndpointTrustedSigningKeyType type, IDictionary<string, BinaryData> serializedAdditionalRawData, string secretRef) : base(type, serializedAdditionalRawData)
        {
            SecretRef = secretRef;
            Type = type;
        }

        /// <summary> Initializes a new instance of <see cref="RegistryEndpointTrustedSigningKeySecret"/> for deserialization. </summary>
        internal RegistryEndpointTrustedSigningKeySecret()
        {
        }

        /// <summary> The name of the secret. </summary>
        public string SecretRef { get; set; }
    }
}
