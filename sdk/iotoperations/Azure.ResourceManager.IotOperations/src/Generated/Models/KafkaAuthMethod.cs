// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IoTOperations.Models
{
    /// <summary> DataflowEndpoint Kafka Authentication Method properties. </summary>
    public readonly partial struct KafkaAuthMethod : IEquatable<KafkaAuthMethod>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="KafkaAuthMethod"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public KafkaAuthMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SystemAssignedManagedIdentityValue = "SystemAssignedManagedIdentity";
        private const string UserAssignedManagedIdentityValue = "UserAssignedManagedIdentity";
        private const string SaslValue = "Sasl";
        private const string X509CertificateValue = "X509Certificate";
        private const string AnonymousValue = "Anonymous";

        /// <summary> SystemAssignedManagedIdentity type. </summary>
        public static KafkaAuthMethod SystemAssignedManagedIdentity { get; } = new KafkaAuthMethod(SystemAssignedManagedIdentityValue);
        /// <summary> UserAssignedManagedIdentity type. </summary>
        public static KafkaAuthMethod UserAssignedManagedIdentity { get; } = new KafkaAuthMethod(UserAssignedManagedIdentityValue);
        /// <summary> Sasl Option. </summary>
        public static KafkaAuthMethod Sasl { get; } = new KafkaAuthMethod(SaslValue);
        /// <summary> x509Certificate Option. </summary>
        public static KafkaAuthMethod X509Certificate { get; } = new KafkaAuthMethod(X509CertificateValue);
        /// <summary> Anonymous Option. </summary>
        public static KafkaAuthMethod Anonymous { get; } = new KafkaAuthMethod(AnonymousValue);
        /// <summary> Determines if two <see cref="KafkaAuthMethod"/> values are the same. </summary>
        public static bool operator ==(KafkaAuthMethod left, KafkaAuthMethod right) => left.Equals(right);
        /// <summary> Determines if two <see cref="KafkaAuthMethod"/> values are not the same. </summary>
        public static bool operator !=(KafkaAuthMethod left, KafkaAuthMethod right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="KafkaAuthMethod"/>. </summary>
        public static implicit operator KafkaAuthMethod(string value) => new KafkaAuthMethod(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is KafkaAuthMethod other && Equals(other);
        /// <inheritdoc />
        public bool Equals(KafkaAuthMethod other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
