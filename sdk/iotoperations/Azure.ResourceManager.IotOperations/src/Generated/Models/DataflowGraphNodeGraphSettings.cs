// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> DataflowGraph graph node settings. </summary>
    public partial class DataflowGraphNodeGraphSettings
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DataflowGraphNodeGraphSettings"/>. </summary>
        /// <param name="registryEndpointRef"> Reference to the registry endpoint for pulling the artifact. </param>
        /// <param name="artifact"> The artifact name and version to pull. This should be in the format `&lt;artifact-name&gt;:&lt;version&gt;`. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="registryEndpointRef"/> or <paramref name="artifact"/> is null. </exception>
        public DataflowGraphNodeGraphSettings(string registryEndpointRef, string artifact)
        {
            Argument.AssertNotNull(registryEndpointRef, nameof(registryEndpointRef));
            Argument.AssertNotNull(artifact, nameof(artifact));

            RegistryEndpointRef = registryEndpointRef;
            Artifact = artifact;
            Configuration = new ChangeTrackingList<DataflowGraphGraphNodeConfiguration>();
        }

        /// <summary> Initializes a new instance of <see cref="DataflowGraphNodeGraphSettings"/>. </summary>
        /// <param name="registryEndpointRef"> Reference to the registry endpoint for pulling the artifact. </param>
        /// <param name="artifact"> The artifact name and version to pull. This should be in the format `&lt;artifact-name&gt;:&lt;version&gt;`. </param>
        /// <param name="configuration"> Configuration key-value pairs. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DataflowGraphNodeGraphSettings(string registryEndpointRef, string artifact, IList<DataflowGraphGraphNodeConfiguration> configuration, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            RegistryEndpointRef = registryEndpointRef;
            Artifact = artifact;
            Configuration = configuration;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DataflowGraphNodeGraphSettings"/> for deserialization. </summary>
        internal DataflowGraphNodeGraphSettings()
        {
        }

        /// <summary> Reference to the registry endpoint for pulling the artifact. </summary>
        public string RegistryEndpointRef { get; set; }
        /// <summary> The artifact name and version to pull. This should be in the format `&lt;artifact-name&gt;:&lt;version&gt;`. </summary>
        public string Artifact { get; set; }
        /// <summary> Configuration key-value pairs. </summary>
        public IList<DataflowGraphGraphNodeConfiguration> Configuration { get; }
    }
}
