// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> AkriConnectorsServiceAccountAuthentication properties. </summary>
    public partial class AkriConnectorsServiceAccountAuthentication : AkriConnectorsMqttAuthentication
    {
        /// <summary> Initializes a new instance of <see cref="AkriConnectorsServiceAccountAuthentication"/>. </summary>
        /// <param name="serviceAccountTokenSettings"> The service account token for the MQTT connection. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="serviceAccountTokenSettings"/> is null. </exception>
        public AkriConnectorsServiceAccountAuthentication(AkriConnectorsServiceAccountTokenSettings serviceAccountTokenSettings)
        {
            Argument.AssertNotNull(serviceAccountTokenSettings, nameof(serviceAccountTokenSettings));

            ServiceAccountTokenSettings = serviceAccountTokenSettings;
            Method = AkriConnectorsMqttAuthenticationMethod.ServiceAccountToken;
        }

        /// <summary> Initializes a new instance of <see cref="AkriConnectorsServiceAccountAuthentication"/>. </summary>
        /// <param name="method"> The authentication method for the MQTT connection. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="serviceAccountTokenSettings"> The service account token for the MQTT connection. </param>
        internal AkriConnectorsServiceAccountAuthentication(AkriConnectorsMqttAuthenticationMethod method, IDictionary<string, BinaryData> serializedAdditionalRawData, AkriConnectorsServiceAccountTokenSettings serviceAccountTokenSettings) : base(method, serializedAdditionalRawData)
        {
            ServiceAccountTokenSettings = serviceAccountTokenSettings;
            Method = method;
        }

        /// <summary> Initializes a new instance of <see cref="AkriConnectorsServiceAccountAuthentication"/> for deserialization. </summary>
        internal AkriConnectorsServiceAccountAuthentication()
        {
        }

        /// <summary> The service account token for the MQTT connection. </summary>
        internal AkriConnectorsServiceAccountTokenSettings ServiceAccountTokenSettings { get; set; }
        /// <summary> The audience for the service account token. </summary>
        public string ServiceAccountTokenAudience
        {
            get => ServiceAccountTokenSettings is null ? default : ServiceAccountTokenSettings.Audience;
            set => ServiceAccountTokenSettings = new AkriConnectorsServiceAccountTokenSettings(value);
        }
    }
}
