// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IotOperations.Models
{
    /// <summary> DataflowEndpoint Type properties. </summary>
    public readonly partial struct DataflowEndpointType : IEquatable<DataflowEndpointType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataflowEndpointType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataflowEndpointType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DataExplorerValue = "DataExplorer";
        private const string DataLakeStorageValue = "DataLakeStorage";
        private const string FabricOneLakeValue = "FabricOneLake";
        private const string KafkaValue = "Kafka";
        private const string LocalStorageValue = "LocalStorage";
        private const string MqttValue = "Mqtt";

        /// <summary> Azure Data Explorer Type. </summary>
        public static DataflowEndpointType DataExplorer { get; } = new DataflowEndpointType(DataExplorerValue);
        /// <summary> Azure Data Lake Type. </summary>
        public static DataflowEndpointType DataLakeStorage { get; } = new DataflowEndpointType(DataLakeStorageValue);
        /// <summary> Microsoft Fabric Type. </summary>
        public static DataflowEndpointType FabricOneLake { get; } = new DataflowEndpointType(FabricOneLakeValue);
        /// <summary> Kafka Type. </summary>
        public static DataflowEndpointType Kafka { get; } = new DataflowEndpointType(KafkaValue);
        /// <summary> Local Storage Type. </summary>
        public static DataflowEndpointType LocalStorage { get; } = new DataflowEndpointType(LocalStorageValue);
        /// <summary> Broker Type. </summary>
        public static DataflowEndpointType Mqtt { get; } = new DataflowEndpointType(MqttValue);
        /// <summary> Determines if two <see cref="DataflowEndpointType"/> values are the same. </summary>
        public static bool operator ==(DataflowEndpointType left, DataflowEndpointType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataflowEndpointType"/> values are not the same. </summary>
        public static bool operator !=(DataflowEndpointType left, DataflowEndpointType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DataflowEndpointType"/>. </summary>
        public static implicit operator DataflowEndpointType(string value) => new DataflowEndpointType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataflowEndpointType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataflowEndpointType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
