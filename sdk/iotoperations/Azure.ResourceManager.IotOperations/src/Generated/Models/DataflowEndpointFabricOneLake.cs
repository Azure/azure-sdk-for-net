// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IoTOperations.Models
{
    /// <summary> Microsoft Fabric endpoint properties. </summary>
    public partial class DataflowEndpointFabricOneLake
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DataflowEndpointFabricOneLake"/>. </summary>
        /// <param name="authentication"> Authentication configuration. NOTE - only one authentication property is allowed per entry. </param>
        /// <param name="names"> Names of the workspace and lakehouse. </param>
        /// <param name="oneLakePathType"> Type of location of the data in the workspace. Can be either tables or files. </param>
        /// <param name="host"> Host of the Microsoft Fabric in the form of https://&lt;host&gt;.fabric.microsoft.com. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="authentication"/>, <paramref name="names"/> or <paramref name="host"/> is null. </exception>
        public DataflowEndpointFabricOneLake(DataflowEndpointFabricOneLakeAuthentication authentication, DataflowEndpointFabricOneLakeNames names, DataflowEndpointFabricPathType oneLakePathType, string host)
        {
            Argument.AssertNotNull(authentication, nameof(authentication));
            Argument.AssertNotNull(names, nameof(names));
            Argument.AssertNotNull(host, nameof(host));

            Authentication = authentication;
            Names = names;
            OneLakePathType = oneLakePathType;
            Host = host;
        }

        /// <summary> Initializes a new instance of <see cref="DataflowEndpointFabricOneLake"/>. </summary>
        /// <param name="authentication"> Authentication configuration. NOTE - only one authentication property is allowed per entry. </param>
        /// <param name="names"> Names of the workspace and lakehouse. </param>
        /// <param name="oneLakePathType"> Type of location of the data in the workspace. Can be either tables or files. </param>
        /// <param name="host"> Host of the Microsoft Fabric in the form of https://&lt;host&gt;.fabric.microsoft.com. </param>
        /// <param name="batching"> Batching configuration. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DataflowEndpointFabricOneLake(DataflowEndpointFabricOneLakeAuthentication authentication, DataflowEndpointFabricOneLakeNames names, DataflowEndpointFabricPathType oneLakePathType, string host, BatchingConfiguration batching, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Authentication = authentication;
            Names = names;
            OneLakePathType = oneLakePathType;
            Host = host;
            Batching = batching;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="DataflowEndpointFabricOneLake"/> for deserialization. </summary>
        internal DataflowEndpointFabricOneLake()
        {
        }

        /// <summary> Authentication configuration. NOTE - only one authentication property is allowed per entry. </summary>
        public DataflowEndpointFabricOneLakeAuthentication Authentication { get; set; }
        /// <summary> Names of the workspace and lakehouse. </summary>
        public DataflowEndpointFabricOneLakeNames Names { get; set; }
        /// <summary> Type of location of the data in the workspace. Can be either tables or files. </summary>
        public DataflowEndpointFabricPathType OneLakePathType { get; set; }
        /// <summary> Host of the Microsoft Fabric in the form of https://&lt;host&gt;.fabric.microsoft.com. </summary>
        public string Host { get; set; }
        /// <summary> Batching configuration. </summary>
        public BatchingConfiguration Batching { get; set; }
    }
}
