// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IoTOperations.Models
{
    /// <summary> BrokerResourceDefinitionMethods methods allowed. </summary>
    public readonly partial struct BrokerResourceDefinitionMethod : IEquatable<BrokerResourceDefinitionMethod>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="BrokerResourceDefinitionMethod"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public BrokerResourceDefinitionMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ConnectValue = "Connect";
        private const string PublishValue = "Publish";
        private const string SubscribeValue = "Subscribe";

        /// <summary> Allowed Connecting to Broker. </summary>
        public static BrokerResourceDefinitionMethod Connect { get; } = new BrokerResourceDefinitionMethod(ConnectValue);
        /// <summary> Allowed Publishing to Broker. </summary>
        public static BrokerResourceDefinitionMethod Publish { get; } = new BrokerResourceDefinitionMethod(PublishValue);
        /// <summary> Allowed Subscribing to Broker. </summary>
        public static BrokerResourceDefinitionMethod Subscribe { get; } = new BrokerResourceDefinitionMethod(SubscribeValue);
        /// <summary> Determines if two <see cref="BrokerResourceDefinitionMethod"/> values are the same. </summary>
        public static bool operator ==(BrokerResourceDefinitionMethod left, BrokerResourceDefinitionMethod right) => left.Equals(right);
        /// <summary> Determines if two <see cref="BrokerResourceDefinitionMethod"/> values are not the same. </summary>
        public static bool operator !=(BrokerResourceDefinitionMethod left, BrokerResourceDefinitionMethod right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="BrokerResourceDefinitionMethod"/>. </summary>
        public static implicit operator BrokerResourceDefinitionMethod(string value) => new BrokerResourceDefinitionMethod(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is BrokerResourceDefinitionMethod other && Equals(other);
        /// <inheritdoc />
        public bool Equals(BrokerResourceDefinitionMethod other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
