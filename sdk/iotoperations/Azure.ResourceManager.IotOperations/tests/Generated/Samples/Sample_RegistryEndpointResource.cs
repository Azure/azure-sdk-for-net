// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.IotOperations.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.IotOperations.Samples
{
    public partial class Sample_RegistryEndpointResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_RegistryEndpointGetMaximumSet()
        {
            // Generated from example definition: 2025-07-01-preview/RegistryEndpoint_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "RegistryEndpointResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RegistryEndpointResource created on azure
            // for more information of creating RegistryEndpointResource, please refer to the document of RegistryEndpointResource
            string subscriptionId = "F8C729F9-DF9C-4743-848F-96EE433D8E53";
            string resourceGroupName = "rgiotoperations";
            string instanceName = "resource-123";
            string registryEndpointName = "resource-123";
            ResourceIdentifier registryEndpointResourceId = RegistryEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, instanceName, registryEndpointName);
            RegistryEndpointResource registryEndpointResource = client.GetRegistryEndpointResource(registryEndpointResourceId);

            // invoke the operation
            RegistryEndpointResource result = await registryEndpointResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RegistryEndpointResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_RegistryEndpointDeleteMaximumSet()
        {
            // Generated from example definition: 2025-07-01-preview/RegistryEndpoint_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "RegistryEndpointResource_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RegistryEndpointResource created on azure
            // for more information of creating RegistryEndpointResource, please refer to the document of RegistryEndpointResource
            string subscriptionId = "F8C729F9-DF9C-4743-848F-96EE433D8E53";
            string resourceGroupName = "rgiotoperations";
            string instanceName = "resource-123";
            string registryEndpointName = "resource-123";
            ResourceIdentifier registryEndpointResourceId = RegistryEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, instanceName, registryEndpointName);
            RegistryEndpointResource registryEndpointResource = client.GetRegistryEndpointResource(registryEndpointResourceId);

            // invoke the operation
            await registryEndpointResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_RegistryEndpointCreateOrUpdateMaximumSet()
        {
            // Generated from example definition: 2025-07-01-preview/RegistryEndpoint_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "RegistryEndpointResource_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this RegistryEndpointResource created on azure
            // for more information of creating RegistryEndpointResource, please refer to the document of RegistryEndpointResource
            string subscriptionId = "F8C729F9-DF9C-4743-848F-96EE433D8E53";
            string resourceGroupName = "rgiotoperations";
            string instanceName = "resource-123";
            string registryEndpointName = "resource-123";
            ResourceIdentifier registryEndpointResourceId = RegistryEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, instanceName, registryEndpointName);
            RegistryEndpointResource registryEndpointResource = client.GetRegistryEndpointResource(registryEndpointResourceId);

            // invoke the operation
            RegistryEndpointResourceData data = new RegistryEndpointResourceData
            {
                Properties = new RegistryEndpointProperties("contoso.azurecr.io", new RegistryEndpointAnonymousAuthentication(new RegistryEndpointAnonymousSettings())),
                ExtendedLocation = new IotOperationsExtendedLocation("/subscriptions/F8C729F9-DF9C-4743-848F-96EE433D8E53/resourceGroups/rgiotoperations/providers/Microsoft.ExtendedLocation/customLocations/resource-123", IotOperationsExtendedLocationType.CustomLocation),
            };
            ArmOperation<RegistryEndpointResource> lro = await registryEndpointResource.UpdateAsync(WaitUntil.Completed, data);
            RegistryEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            RegistryEndpointResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
