// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IoTOperations.Models
{
    /// <summary> Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc. </summary>
    public partial class BrokerResourceRule
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="BrokerResourceRule"/>. </summary>
        /// <param name="method"> Give access for a Broker method (i.e., Connect, Subscribe, or Publish). </param>
        public BrokerResourceRule(BrokerResourceDefinitionMethod method)
        {
            Method = method;
            ClientIds = new ChangeTrackingList<string>();
            Topics = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="BrokerResourceRule"/>. </summary>
        /// <param name="method"> Give access for a Broker method (i.e., Connect, Subscribe, or Publish). </param>
        /// <param name="clientIds"> A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect. </param>
        /// <param name="topics"> A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal BrokerResourceRule(BrokerResourceDefinitionMethod method, IList<string> clientIds, IList<string> topics, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Method = method;
            ClientIds = clientIds;
            Topics = topics;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="BrokerResourceRule"/> for deserialization. </summary>
        internal BrokerResourceRule()
        {
        }

        /// <summary> Give access for a Broker method (i.e., Connect, Subscribe, or Publish). </summary>
        public BrokerResourceDefinitionMethod Method { get; set; }
        /// <summary> A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect. </summary>
        public IList<string> ClientIds { get; }
        /// <summary> A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe. </summary>
        public IList<string> Topics { get; }
    }
}
