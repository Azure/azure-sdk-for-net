// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IoTOperations.Models
{
    /// <summary> Dataflow BuiltIn Transformation properties. </summary>
    public partial class DataflowBuiltInTransformationSettings
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DataflowBuiltInTransformationSettings"/>. </summary>
        public DataflowBuiltInTransformationSettings()
        {
            Datasets = new ChangeTrackingList<DataflowBuiltInTransformationDataset>();
            Filter = new ChangeTrackingList<DataflowBuiltInTransformationFilter>();
            Map = new ChangeTrackingList<DataflowBuiltInTransformationMap>();
        }

        /// <summary> Initializes a new instance of <see cref="DataflowBuiltInTransformationSettings"/>. </summary>
        /// <param name="serializationFormat"> Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json. </param>
        /// <param name="schemaRef"> Reference to the schema that describes the output of the transformation. </param>
        /// <param name="datasets"> Enrich data from Broker State Store. Dataset references a key in Broker State Store. </param>
        /// <param name="filter"> Filters input record or datapoints based on condition. </param>
        /// <param name="map"> Maps input to output message. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DataflowBuiltInTransformationSettings(TransformationSerializationFormat? serializationFormat, string schemaRef, IList<DataflowBuiltInTransformationDataset> datasets, IList<DataflowBuiltInTransformationFilter> filter, IList<DataflowBuiltInTransformationMap> map, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            SerializationFormat = serializationFormat;
            SchemaRef = schemaRef;
            Datasets = datasets;
            Filter = filter;
            Map = map;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json. </summary>
        public TransformationSerializationFormat? SerializationFormat { get; set; }
        /// <summary> Reference to the schema that describes the output of the transformation. </summary>
        public string SchemaRef { get; set; }
        /// <summary> Enrich data from Broker State Store. Dataset references a key in Broker State Store. </summary>
        public IList<DataflowBuiltInTransformationDataset> Datasets { get; }
        /// <summary> Filters input record or datapoints based on condition. </summary>
        public IList<DataflowBuiltInTransformationFilter> Filter { get; }
        /// <summary> Maps input to output message. </summary>
        public IList<DataflowBuiltInTransformationMap> Map { get; }
    }
}
