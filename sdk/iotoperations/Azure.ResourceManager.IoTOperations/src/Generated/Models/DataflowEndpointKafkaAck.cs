// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IoTOperations.Models
{
    /// <summary> DataflowEndpoint Kafka Acks properties. </summary>
    public readonly partial struct DataflowEndpointKafkaAck : IEquatable<DataflowEndpointKafkaAck>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataflowEndpointKafkaAck"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataflowEndpointKafkaAck(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ZeroValue = "Zero";
        private const string OneValue = "One";
        private const string AllValue = "All";

        /// <summary> ZERO Option. </summary>
        public static DataflowEndpointKafkaAck Zero { get; } = new DataflowEndpointKafkaAck(ZeroValue);
        /// <summary> ONE Option. </summary>
        public static DataflowEndpointKafkaAck One { get; } = new DataflowEndpointKafkaAck(OneValue);
        /// <summary> ALL Option. </summary>
        public static DataflowEndpointKafkaAck All { get; } = new DataflowEndpointKafkaAck(AllValue);
        /// <summary> Determines if two <see cref="DataflowEndpointKafkaAck"/> values are the same. </summary>
        public static bool operator ==(DataflowEndpointKafkaAck left, DataflowEndpointKafkaAck right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataflowEndpointKafkaAck"/> values are not the same. </summary>
        public static bool operator !=(DataflowEndpointKafkaAck left, DataflowEndpointKafkaAck right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DataflowEndpointKafkaAck"/>. </summary>
        public static implicit operator DataflowEndpointKafkaAck(string value) => new DataflowEndpointKafkaAck(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataflowEndpointKafkaAck other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataflowEndpointKafkaAck other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
