// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.OracleDatabase.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.OracleDatabase.Samples
{
    public partial class Sample_OracleDBSystemResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DbSystemsGetMaximumSet()
        {
            // Generated from example definition: 2025-09-01/DbSystems_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DbSystem_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleDBSystemResource created on azure
            // for more information of creating OracleDBSystemResource, please refer to the document of OracleDBSystemResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string dbSystemName = "dbsystem1";
            ResourceIdentifier oracleDBSystemResourceId = OracleDBSystemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dbSystemName);
            OracleDBSystemResource oracleDBSystem = client.GetOracleDBSystemResource(oracleDBSystemResourceId);

            // invoke the operation
            OracleDBSystemResource result = await oracleDBSystem.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OracleDBSystemData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DbSystemsDeleteMaximumSet()
        {
            // Generated from example definition: 2025-09-01/DbSystems_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "DbSystem_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleDBSystemResource created on azure
            // for more information of creating OracleDBSystemResource, please refer to the document of OracleDBSystemResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string dbSystemName = "dbsystem1";
            ResourceIdentifier oracleDBSystemResourceId = OracleDBSystemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dbSystemName);
            OracleDBSystemResource oracleDBSystem = client.GetOracleDBSystemResource(oracleDBSystemResourceId);

            // invoke the operation
            await oracleDBSystem.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DbSystemsDeleteMinimumSet()
        {
            // Generated from example definition: 2025-09-01/DbSystems_Delete_MinimumSet_Gen.json
            // this example is just showing the usage of "DbSystem_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleDBSystemResource created on azure
            // for more information of creating OracleDBSystemResource, please refer to the document of OracleDBSystemResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string dbSystemName = "dbsystem1";
            ResourceIdentifier oracleDBSystemResourceId = OracleDBSystemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dbSystemName);
            OracleDBSystemResource oracleDBSystem = client.GetOracleDBSystemResource(oracleDBSystemResourceId);

            // invoke the operation
            await oracleDBSystem.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_DbSystemsUpdateMaximumSet()
        {
            // Generated from example definition: 2025-09-01/DbSystems_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "DbSystem_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleDBSystemResource created on azure
            // for more information of creating OracleDBSystemResource, please refer to the document of OracleDBSystemResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string dbSystemName = "dbsystem1";
            ResourceIdentifier oracleDBSystemResourceId = OracleDBSystemResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, dbSystemName);
            OracleDBSystemResource oracleDBSystem = client.GetOracleDBSystemResource(oracleDBSystemResourceId);

            // invoke the operation
            OracleDBSystemPatch patch = new OracleDBSystemPatch
            {
                Zones = { "zone1" },
                Tags =
{
["key5457"] = "loashrzuxxqkberqvpnkr"
},
                DbSystemUpdateSource = DBSystemSourceType.None,
            };
            ArmOperation<OracleDBSystemResource> lro = await oracleDBSystem.UpdateAsync(WaitUntil.Completed, patch);
            OracleDBSystemResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OracleDBSystemData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
