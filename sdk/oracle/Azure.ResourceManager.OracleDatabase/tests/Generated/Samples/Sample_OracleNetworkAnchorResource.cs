// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.OracleDatabase.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.OracleDatabase.Samples
{
    public partial class Sample_OracleNetworkAnchorResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_NetworkAnchorsGetMaximumSet()
        {
            // Generated from example definition: 2025-09-01/NetworkAnchors_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkAnchor_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleNetworkAnchorResource created on azure
            // for more information of creating OracleNetworkAnchorResource, please refer to the document of OracleNetworkAnchorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string networkAnchorName = "networkanchor1";
            ResourceIdentifier oracleNetworkAnchorResourceId = OracleNetworkAnchorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkAnchorName);
            OracleNetworkAnchorResource oracleNetworkAnchor = client.GetOracleNetworkAnchorResource(oracleNetworkAnchorResourceId);

            // invoke the operation
            OracleNetworkAnchorResource result = await oracleNetworkAnchor.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OracleNetworkAnchorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_NetworkAnchorsDeleteMaximumSet()
        {
            // Generated from example definition: 2025-09-01/NetworkAnchors_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkAnchor_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleNetworkAnchorResource created on azure
            // for more information of creating OracleNetworkAnchorResource, please refer to the document of OracleNetworkAnchorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string networkAnchorName = "networkAnchor1";
            ResourceIdentifier oracleNetworkAnchorResourceId = OracleNetworkAnchorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkAnchorName);
            OracleNetworkAnchorResource oracleNetworkAnchor = client.GetOracleNetworkAnchorResource(oracleNetworkAnchorResourceId);

            // invoke the operation
            await oracleNetworkAnchor.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_NetworkAnchorsUpdateMaximumSet()
        {
            // Generated from example definition: 2025-09-01/NetworkAnchors_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "NetworkAnchor_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleNetworkAnchorResource created on azure
            // for more information of creating OracleNetworkAnchorResource, please refer to the document of OracleNetworkAnchorResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string networkAnchorName = "networkanchor1";
            ResourceIdentifier oracleNetworkAnchorResourceId = OracleNetworkAnchorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkAnchorName);
            OracleNetworkAnchorResource oracleNetworkAnchor = client.GetOracleNetworkAnchorResource(oracleNetworkAnchorResourceId);

            // invoke the operation
            OracleNetworkAnchorPatch patch = new OracleNetworkAnchorPatch
            {
                Zones = { "zone1" },
                Tags =
{
["key8038"] = "oqbirdmumdslewkcradmyvojgorraz"
},
                Properties = new NetworkAnchorUpdateProperties
                {
                    OciBackupCidrBlock = "waoztwkdpplgjtkiwkfnnohu",
                    IsOracleToAzureDnsZoneSyncEnabled = true,
                    IsOracleDnsListeningEndpointEnabled = true,
                    IsOracleDnsForwardingEndpointEnabled = true,
                },
            };
            ArmOperation<OracleNetworkAnchorResource> lro = await oracleNetworkAnchor.UpdateAsync(WaitUntil.Completed, patch);
            OracleNetworkAnchorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OracleNetworkAnchorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
