// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.OracleDatabase.Samples
{
    public partial class Sample_OracleDnsPrivateZoneResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetADnsPrivateZoneByNameGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2025-09-01/DnsPrivateZones_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DnsPrivateZone_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleDnsPrivateZoneResource created on azure
            // for more information of creating OracleDnsPrivateZoneResource, please refer to the document of OracleDnsPrivateZoneResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            AzureLocation location = new AzureLocation("eastus");
            string dnsprivatezonename = "dnsprivatezone1";
            ResourceIdentifier oracleDnsPrivateZoneResourceId = OracleDnsPrivateZoneResource.CreateResourceIdentifier(subscriptionId, location, dnsprivatezonename);
            OracleDnsPrivateZoneResource oracleDnsPrivateZone = client.GetOracleDnsPrivateZoneResource(oracleDnsPrivateZoneResourceId);

            // invoke the operation
            OracleDnsPrivateZoneResource result = await oracleDnsPrivateZone.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OracleDnsPrivateZoneData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetADnsPrivateZoneByNameGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2025-09-01/DnsPrivateZones_Get_MinimumSet_Gen.json
            // this example is just showing the usage of "DnsPrivateZone_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleDnsPrivateZoneResource created on azure
            // for more information of creating OracleDnsPrivateZoneResource, please refer to the document of OracleDnsPrivateZoneResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            AzureLocation location = new AzureLocation("eastus");
            string dnsprivatezonename = "dnsprivatezone1";
            ResourceIdentifier oracleDnsPrivateZoneResourceId = OracleDnsPrivateZoneResource.CreateResourceIdentifier(subscriptionId, location, dnsprivatezonename);
            OracleDnsPrivateZoneResource oracleDnsPrivateZone = client.GetOracleDnsPrivateZoneResource(oracleDnsPrivateZoneResourceId);

            // invoke the operation
            OracleDnsPrivateZoneResource result = await oracleDnsPrivateZone.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OracleDnsPrivateZoneData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DnsPrivateZonesGet()
        {
            // Generated from example definition: 2025-09-01/dnsPrivateZones_get.json
            // this example is just showing the usage of "DnsPrivateZone_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OracleDnsPrivateZoneResource created on azure
            // for more information of creating OracleDnsPrivateZoneResource, please refer to the document of OracleDnsPrivateZoneResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            AzureLocation location = new AzureLocation("eastus");
            string dnsprivatezonename = "example-dns-private-zone";
            ResourceIdentifier oracleDnsPrivateZoneResourceId = OracleDnsPrivateZoneResource.CreateResourceIdentifier(subscriptionId, location, dnsprivatezonename);
            OracleDnsPrivateZoneResource oracleDnsPrivateZone = client.GetOracleDnsPrivateZoneResource(oracleDnsPrivateZoneResourceId);

            // invoke the operation
            OracleDnsPrivateZoneResource result = await oracleDnsPrivateZone.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OracleDnsPrivateZoneData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
