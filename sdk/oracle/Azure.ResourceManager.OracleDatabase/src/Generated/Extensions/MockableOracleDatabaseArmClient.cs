// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.OracleDatabase;

namespace Azure.ResourceManager.OracleDatabase.Mocking
{
    /// <summary> A class to add extension methods to <see cref="ArmClient"/>. </summary>
    public partial class MockableOracleDatabaseArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of MockableOracleDatabaseArmClient for mocking. </summary>
        protected MockableOracleDatabaseArmClient()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MockableOracleDatabaseArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableOracleDatabaseArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        /// <summary> Gets an object representing a <see cref="CloudExadataInfrastructureResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CloudExadataInfrastructureResource"/> object. </returns>
        public virtual CloudExadataInfrastructureResource GetCloudExadataInfrastructureResource(ResourceIdentifier id)
        {
            CloudExadataInfrastructureResource.ValidateResourceId(id);
            return new CloudExadataInfrastructureResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleDBServerResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleDBServerResource"/> object. </returns>
        public virtual OracleDBServerResource GetOracleDBServerResource(ResourceIdentifier id)
        {
            OracleDBServerResource.ValidateResourceId(id);
            return new OracleDBServerResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="CloudVmClusterResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CloudVmClusterResource"/> object. </returns>
        public virtual CloudVmClusterResource GetCloudVmClusterResource(ResourceIdentifier id)
        {
            CloudVmClusterResource.ValidateResourceId(id);
            return new CloudVmClusterResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="CloudVmClusterVirtualNetworkAddressResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CloudVmClusterVirtualNetworkAddressResource"/> object. </returns>
        public virtual CloudVmClusterVirtualNetworkAddressResource GetCloudVmClusterVirtualNetworkAddressResource(ResourceIdentifier id)
        {
            CloudVmClusterVirtualNetworkAddressResource.ValidateResourceId(id);
            return new CloudVmClusterVirtualNetworkAddressResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleSystemVersionResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleSystemVersionResource"/> object. </returns>
        public virtual OracleSystemVersionResource GetOracleSystemVersionResource(ResourceIdentifier id)
        {
            OracleSystemVersionResource.ValidateResourceId(id);
            return new OracleSystemVersionResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleSubscriptionResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleSubscriptionResource"/> object. </returns>
        public virtual OracleSubscriptionResource GetOracleSubscriptionResource(ResourceIdentifier id)
        {
            OracleSubscriptionResource.ValidateResourceId(id);
            return new OracleSubscriptionResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="CloudVmClusterDBNodeResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CloudVmClusterDBNodeResource"/> object. </returns>
        public virtual CloudVmClusterDBNodeResource GetCloudVmClusterDBNodeResource(ResourceIdentifier id)
        {
            CloudVmClusterDBNodeResource.ValidateResourceId(id);
            return new CloudVmClusterDBNodeResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleGIVersionResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleGIVersionResource"/> object. </returns>
        public virtual OracleGIVersionResource GetOracleGIVersionResource(ResourceIdentifier id)
        {
            OracleGIVersionResource.ValidateResourceId(id);
            return new OracleGIVersionResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleGIMinorVersionResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleGIMinorVersionResource"/> object. </returns>
        public virtual OracleGIMinorVersionResource GetOracleGIMinorVersionResource(ResourceIdentifier id)
        {
            OracleGIMinorVersionResource.ValidateResourceId(id);
            return new OracleGIMinorVersionResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleDBSystemShapeResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleDBSystemShapeResource"/> object. </returns>
        public virtual OracleDBSystemShapeResource GetOracleDBSystemShapeResource(ResourceIdentifier id)
        {
            OracleDBSystemShapeResource.ValidateResourceId(id);
            return new OracleDBSystemShapeResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleDnsPrivateViewResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleDnsPrivateViewResource"/> object. </returns>
        public virtual OracleDnsPrivateViewResource GetOracleDnsPrivateViewResource(ResourceIdentifier id)
        {
            OracleDnsPrivateViewResource.ValidateResourceId(id);
            return new OracleDnsPrivateViewResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleDnsPrivateZoneResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleDnsPrivateZoneResource"/> object. </returns>
        public virtual OracleDnsPrivateZoneResource GetOracleDnsPrivateZoneResource(ResourceIdentifier id)
        {
            OracleDnsPrivateZoneResource.ValidateResourceId(id);
            return new OracleDnsPrivateZoneResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="OracleFlexComponentResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OracleFlexComponentResource"/> object. </returns>
        public virtual OracleFlexComponentResource GetOracleFlexComponentResource(ResourceIdentifier id)
        {
            OracleFlexComponentResource.ValidateResourceId(id);
            return new OracleFlexComponentResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="AutonomousDatabaseResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AutonomousDatabaseResource"/> object. </returns>
        public virtual AutonomousDatabaseResource GetAutonomousDatabaseResource(ResourceIdentifier id)
        {
            AutonomousDatabaseResource.ValidateResourceId(id);
            return new AutonomousDatabaseResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="AutonomousDatabaseBackupResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AutonomousDatabaseBackupResource"/> object. </returns>
        public virtual AutonomousDatabaseBackupResource GetAutonomousDatabaseBackupResource(ResourceIdentifier id)
        {
            AutonomousDatabaseBackupResource.ValidateResourceId(id);
            return new AutonomousDatabaseBackupResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="AutonomousDatabaseCharacterSetResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AutonomousDatabaseCharacterSetResource"/> object. </returns>
        public virtual AutonomousDatabaseCharacterSetResource GetAutonomousDatabaseCharacterSetResource(ResourceIdentifier id)
        {
            AutonomousDatabaseCharacterSetResource.ValidateResourceId(id);
            return new AutonomousDatabaseCharacterSetResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="AutonomousDatabaseNationalCharacterSetResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AutonomousDatabaseNationalCharacterSetResource"/> object. </returns>
        public virtual AutonomousDatabaseNationalCharacterSetResource GetAutonomousDatabaseNationalCharacterSetResource(ResourceIdentifier id)
        {
            AutonomousDatabaseNationalCharacterSetResource.ValidateResourceId(id);
            return new AutonomousDatabaseNationalCharacterSetResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="AutonomousDBVersionResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AutonomousDBVersionResource"/> object. </returns>
        public virtual AutonomousDBVersionResource GetAutonomousDBVersionResource(ResourceIdentifier id)
        {
            AutonomousDBVersionResource.ValidateResourceId(id);
            return new AutonomousDBVersionResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="ExadbVmClusterResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExadbVmClusterResource"/> object. </returns>
        public virtual ExadbVmClusterResource GetExadbVmClusterResource(ResourceIdentifier id)
        {
            ExadbVmClusterResource.ValidateResourceId(id);
            return new ExadbVmClusterResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="ExascaleDBNodeResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExascaleDBNodeResource"/> object. </returns>
        public virtual ExascaleDBNodeResource GetExascaleDBNodeResource(ResourceIdentifier id)
        {
            ExascaleDBNodeResource.ValidateResourceId(id);
            return new ExascaleDBNodeResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="ExascaleDBStorageVaultResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExascaleDBStorageVaultResource"/> object. </returns>
        public virtual ExascaleDBStorageVaultResource GetExascaleDBStorageVaultResource(ResourceIdentifier id)
        {
            ExascaleDBStorageVaultResource.ValidateResourceId(id);
            return new ExascaleDBStorageVaultResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="NetworkAnchorResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkAnchorResource"/> object. </returns>
        public virtual NetworkAnchorResource GetNetworkAnchorResource(ResourceIdentifier id)
        {
            NetworkAnchorResource.ValidateResourceId(id);
            return new NetworkAnchorResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="ResourceAnchorResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResourceAnchorResource"/> object. </returns>
        public virtual ResourceAnchorResource GetResourceAnchorResource(ResourceIdentifier id)
        {
            ResourceAnchorResource.ValidateResourceId(id);
            return new ResourceAnchorResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="DbSystemResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DbSystemResource"/> object. </returns>
        public virtual DbSystemResource GetDbSystemResource(ResourceIdentifier id)
        {
            DbSystemResource.ValidateResourceId(id);
            return new DbSystemResource(Client, id);
        }

        /// <summary> Gets an object representing a <see cref="DbVersionResource"/> along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DbVersionResource"/> object. </returns>
        public virtual DbVersionResource GetDbVersionResource(ResourceIdentifier id)
        {
            DbVersionResource.ValidateResourceId(id);
            return new DbVersionResource(Client, id);
        }
    }
}
