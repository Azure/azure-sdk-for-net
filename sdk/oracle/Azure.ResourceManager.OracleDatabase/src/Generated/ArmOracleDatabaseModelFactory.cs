// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.OracleDatabase;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> A factory class for creating instances of the models for mocking. </summary>
    public static partial class ArmOracleDatabaseModelFactory
    {

        /// <summary> CloudExadataInfrastructure resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="zones"> CloudExadataInfrastructure zones. </param>
        /// <returns> A new <see cref="OracleDatabase.CloudExadataInfrastructureData"/> instance for mocking. </returns>
        public static CloudExadataInfrastructureData CloudExadataInfrastructureData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, CloudExadataInfrastructureProperties properties = default, IEnumerable<string> zones = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();
            zones ??= new ChangeTrackingList<string>();

            return new CloudExadataInfrastructureData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties,
                zones.ToList());
        }

        /// <summary> CloudExadataInfrastructure resource model. </summary>
        /// <param name="definedFileSystemConfiguration"> Defined file system configurations. </param>
        /// <param name="exadataInfraOcid"> Exadata infra ocid. </param>
        /// <param name="computeCount"> The number of compute servers for the cloud Exadata infrastructure. </param>
        /// <param name="storageCount"> The number of storage servers for the cloud Exadata infrastructure. </param>
        /// <param name="totalStorageSizeInGbs"> The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB). </param>
        /// <param name="availableStorageSizeInGbs"> The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB). </param>
        /// <param name="createdOn"> The date and time the cloud Exadata infrastructure resource was created. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="maintenanceWindow"> maintenanceWindow property. </param>
        /// <param name="estimatedPatchingTime"> The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching). </param>
        /// <param name="customerContacts"> The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. . </param>
        /// <param name="provisioningState"> CloudExadataInfrastructure provisioning state. </param>
        /// <param name="lifecycleState"> CloudExadataInfrastructure lifecycle state. </param>
        /// <param name="shape"> The model name of the cloud Exadata infrastructure resource. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="cpuCount"> The total number of CPU cores allocated. </param>
        /// <param name="maxCpuCount"> The total number of CPU cores available. </param>
        /// <param name="memorySizeInGbs"> The memory allocated in GBs. </param>
        /// <param name="maxMemoryInGbs"> The total memory available in GBs. </param>
        /// <param name="dbNodeStorageSizeInGbs"> The local node storage to be allocated in GBs. </param>
        /// <param name="maxDBNodeStorageSizeInGbs"> The total local node storage available in GBs. </param>
        /// <param name="dataStorageSizeInTbs"> The quantity of data in the database, in terabytes. </param>
        /// <param name="maxDataStorageInTbs"> The total available DATA disk group size. </param>
        /// <param name="dbServerVersion"> The software version of the database servers (dom0) in the Exadata infrastructure. </param>
        /// <param name="storageServerVersion"> The software version of the storage servers (cells) in the Exadata infrastructure. </param>
        /// <param name="activatedStorageCount"> The requested number of additional storage servers activated for the Exadata infrastructure. </param>
        /// <param name="additionalStorageCount"> The requested number of additional storage servers for the Exadata infrastructure. </param>
        /// <param name="displayName"> The name for the Exadata infrastructure. </param>
        /// <param name="lastMaintenanceRunOcid"> The OCID of the last maintenance run. </param>
        /// <param name="nextMaintenanceRunOcid"> The OCID of the next maintenance run. </param>
        /// <param name="monthlyDBServerVersion"> Monthly Db Server version. </param>
        /// <param name="monthlyStorageServerVersion"> Monthly Storage Server version. </param>
        /// <param name="databaseServerType"> The database server model type of the cloud Exadata infrastructure resource. </param>
        /// <param name="storageServerType"> The storage server model type of the cloud Exadata infrastructure resource. </param>
        /// <param name="computeModel"> The compute model of the Exadata Infrastructure. </param>
        /// <param name="exascaleConfig"> The exascale config details for the cloud Exadata infrastructure. </param>
        /// <returns> A new <see cref="Models.CloudExadataInfrastructureProperties"/> instance for mocking. </returns>
        public static CloudExadataInfrastructureProperties CloudExadataInfrastructureProperties(IEnumerable<DefinedFileSystemConfiguration> definedFileSystemConfiguration = default, string exadataInfraOcid = default, int? computeCount = default, int? storageCount = default, int? totalStorageSizeInGbs = default, int? availableStorageSizeInGbs = default, DateTimeOffset? createdOn = default, string lifecycleDetails = default, OracleDatabaseMaintenanceWindow maintenanceWindow = default, EstimatedPatchingTime estimatedPatchingTime = default, IEnumerable<OracleCustomerContact> customerContacts = default, OracleDatabaseProvisioningState? provisioningState = default, CloudExadataInfrastructureLifecycleState? lifecycleState = default, string shape = default, Uri ociUri = default, int? cpuCount = default, int? maxCpuCount = default, int? memorySizeInGbs = default, int? maxMemoryInGbs = default, int? dbNodeStorageSizeInGbs = default, int? maxDBNodeStorageSizeInGbs = default, double? dataStorageSizeInTbs = default, double? maxDataStorageInTbs = default, string dbServerVersion = default, string storageServerVersion = default, int? activatedStorageCount = default, int? additionalStorageCount = default, string displayName = default, string lastMaintenanceRunOcid = default, string nextMaintenanceRunOcid = default, string monthlyDBServerVersion = default, string monthlyStorageServerVersion = default, string databaseServerType = default, string storageServerType = default, OracleDatabaseComputeModel? computeModel = default, ExascaleConfigDetails exascaleConfig = default)
        {
            definedFileSystemConfiguration ??= new ChangeTrackingList<DefinedFileSystemConfiguration>();
            customerContacts ??= new ChangeTrackingList<OracleCustomerContact>();

            return new CloudExadataInfrastructureProperties(
                definedFileSystemConfiguration.ToList(),
                exadataInfraOcid,
                computeCount,
                storageCount,
                totalStorageSizeInGbs,
                availableStorageSizeInGbs,
                createdOn,
                lifecycleDetails,
                maintenanceWindow,
                estimatedPatchingTime,
                customerContacts.ToList(),
                provisioningState,
                lifecycleState,
                shape,
                ociUri,
                cpuCount,
                maxCpuCount,
                memorySizeInGbs,
                maxMemoryInGbs,
                dbNodeStorageSizeInGbs,
                maxDBNodeStorageSizeInGbs,
                dataStorageSizeInTbs,
                maxDataStorageInTbs,
                dbServerVersion,
                storageServerVersion,
                activatedStorageCount,
                additionalStorageCount,
                displayName,
                lastMaintenanceRunOcid,
                nextMaintenanceRunOcid,
                monthlyDBServerVersion,
                monthlyStorageServerVersion,
                databaseServerType,
                storageServerType,
                computeModel,
                exascaleConfig,
                additionalBinaryDataProperties: null);
        }

        /// <summary> Predefined configurations for the file system. </summary>
        /// <param name="isBackupPartition"> Checks if the data can be backed up. </param>
        /// <param name="isResizable"> Checks if the mount path is resizable. </param>
        /// <param name="minSizeGb"> Minimum size of mount path in Gb. </param>
        /// <param name="mountPoint"> Mount path for the file system. </param>
        /// <returns> A new <see cref="Models.DefinedFileSystemConfiguration"/> instance for mocking. </returns>
        public static DefinedFileSystemConfiguration DefinedFileSystemConfiguration(bool? isBackupPartition = default, bool? isResizable = default, int? minSizeGb = default, string mountPoint = default)
        {
            return new DefinedFileSystemConfiguration(isBackupPartition, isResizable, minSizeGb, mountPoint, additionalBinaryDataProperties: null);
        }

        /// <summary> MaintenanceWindow resource properties. </summary>
        /// <param name="preference"> The maintenance window scheduling preference. </param>
        /// <param name="months"> Months during the year when maintenance should be performed. </param>
        /// <param name="weeksOfMonth"> Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. . </param>
        /// <param name="daysOfWeek"> Days during the week when maintenance should be performed. </param>
        /// <param name="hoursOfDay"> The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC. </param>
        /// <param name="leadTimeInWeeks"> Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. . </param>
        /// <param name="patchingMode"> Cloud Exadata infrastructure node patching method. </param>
        /// <param name="customActionTimeoutInMins"> Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive). </param>
        /// <param name="isCustomActionTimeoutEnabled"> If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations. </param>
        /// <param name="isMonthlyPatchingEnabled"> is Monthly Patching Enabled. </param>
        /// <returns> A new <see cref="Models.OracleDatabaseMaintenanceWindow"/> instance for mocking. </returns>
        public static OracleDatabaseMaintenanceWindow OracleDatabaseMaintenanceWindow(MaintenancePreference? preference = default, IEnumerable<MaintenanceMonth> months = default, IEnumerable<int> weeksOfMonth = default, IEnumerable<OracleDatabaseDayOfWeek> daysOfWeek = default, IEnumerable<int> hoursOfDay = default, int? leadTimeInWeeks = default, MaintenancePatchingMode? patchingMode = default, int? customActionTimeoutInMins = default, bool? isCustomActionTimeoutEnabled = default, bool? isMonthlyPatchingEnabled = default)
        {
            months ??= new ChangeTrackingList<MaintenanceMonth>();
            weeksOfMonth ??= new ChangeTrackingList<int>();
            daysOfWeek ??= new ChangeTrackingList<OracleDatabaseDayOfWeek>();
            hoursOfDay ??= new ChangeTrackingList<int>();

            return new OracleDatabaseMaintenanceWindow(
                preference,
                months.ToList(),
                weeksOfMonth.ToList(),
                daysOfWeek.ToList(),
                hoursOfDay.ToList(),
                leadTimeInWeeks,
                patchingMode,
                customActionTimeoutInMins,
                isCustomActionTimeoutEnabled,
                isMonthlyPatchingEnabled,
                additionalBinaryDataProperties: null);
        }

        /// <summary> The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching). </summary>
        /// <param name="estimatedDBServerPatchingTime"> The estimated time required in minutes for database server patching. </param>
        /// <param name="estimatedNetworkSwitchesPatchingTime"> The estimated time required in minutes for network switch patching. </param>
        /// <param name="estimatedStorageServerPatchingTime"> The estimated time required in minutes for storage server patching. </param>
        /// <param name="totalEstimatedPatchingTime"> The estimated total time required in minutes for all patching operations. </param>
        /// <returns> A new <see cref="Models.EstimatedPatchingTime"/> instance for mocking. </returns>
        public static EstimatedPatchingTime EstimatedPatchingTime(int? estimatedDBServerPatchingTime = default, int? estimatedNetworkSwitchesPatchingTime = default, int? estimatedStorageServerPatchingTime = default, int? totalEstimatedPatchingTime = default)
        {
            return new EstimatedPatchingTime(estimatedDBServerPatchingTime, estimatedNetworkSwitchesPatchingTime, estimatedStorageServerPatchingTime, totalEstimatedPatchingTime, additionalBinaryDataProperties: null);
        }

        /// <summary> The exascale config response details for the cloud Exadata infrastructure. </summary>
        /// <param name="totalStorageInGbs"> Storage size needed for Exascale in GBs. </param>
        /// <param name="availableStorageInGbs"> Available storage size for Exascale in GBs. </param>
        /// <returns> A new <see cref="Models.ExascaleConfigDetails"/> instance for mocking. </returns>
        public static ExascaleConfigDetails ExascaleConfigDetails(int totalStorageInGbs = default, int? availableStorageInGbs = default)
        {
            return new ExascaleConfigDetails(totalStorageInGbs, availableStorageInGbs, additionalBinaryDataProperties: null);
        }

        /// <summary> The type used for update operations of the CloudExadataInfrastructure. </summary>
        /// <param name="zones"> CloudExadataInfrastructure zones. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="Models.CloudExadataInfrastructurePatch"/> instance for mocking. </returns>
        public static CloudExadataInfrastructurePatch CloudExadataInfrastructurePatch(IEnumerable<string> zones = default, IDictionary<string, string> tags = default, CloudExadataInfrastructureUpdateProperties properties = default)
        {
            zones ??= new ChangeTrackingList<string>();
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new CloudExadataInfrastructurePatch(zones.ToList(), tags, properties, additionalBinaryDataProperties: null);
        }

        /// <summary> The updatable properties of the CloudExadataInfrastructure. </summary>
        /// <param name="computeCount"> The number of compute servers for the cloud Exadata infrastructure. </param>
        /// <param name="storageCount"> The number of storage servers for the cloud Exadata infrastructure. </param>
        /// <param name="maintenanceWindow"> maintenanceWindow property. </param>
        /// <param name="customerContacts"> The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. . </param>
        /// <param name="displayName"> The name for the Exadata infrastructure. </param>
        /// <returns> A new <see cref="Models.CloudExadataInfrastructureUpdateProperties"/> instance for mocking. </returns>
        public static CloudExadataInfrastructureUpdateProperties CloudExadataInfrastructureUpdateProperties(int? computeCount = default, int? storageCount = default, OracleDatabaseMaintenanceWindow maintenanceWindow = default, IEnumerable<OracleCustomerContact> customerContacts = default, string displayName = default)
        {
            customerContacts ??= new ChangeTrackingList<OracleCustomerContact>();

            return new CloudExadataInfrastructureUpdateProperties(
                computeCount,
                storageCount,
                maintenanceWindow,
                customerContacts.ToList(),
                displayName,
                additionalBinaryDataProperties: null);
        }

        /// <summary> The exascale config request details for the Cloud Exadata infrastructure. </summary>
        /// <param name="totalStorageInGbs"> Storage size needed for Exascale in GBs. </param>
        /// <returns> A new <see cref="Models.ConfigureExascaleCloudExadataInfrastructureDetails"/> instance for mocking. </returns>
        public static ConfigureExascaleCloudExadataInfrastructureDetails ConfigureExascaleCloudExadataInfrastructureDetails(int totalStorageInGbs = default)
        {
            return new ConfigureExascaleCloudExadataInfrastructureDetails(totalStorageInGbs, additionalBinaryDataProperties: null);
        }

        /// <summary> DbServer resource model. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleDBServerData"/> instance for mocking. </returns>
        public static OracleDBServerData OracleDBServerData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, OracleDBServerProperties properties = default)
        {
            return new OracleDBServerData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> DbServer resource properties. </summary>
        /// <param name="dbServerOcid"> Db server name. </param>
        /// <param name="displayName"> The name for the Db Server. </param>
        /// <param name="compartmentOcid"> The OCID of the compartment. </param>
        /// <param name="exadataInfrastructureOcid"> The OCID of the Exadata infrastructure. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores enabled on the Db server. </param>
        /// <param name="dbServerPatchingDetails"> dbServerPatching details of the Db server. </param>
        /// <param name="maxMemoryInGbs"> The total memory available in GBs. </param>
        /// <param name="dbNodeStorageSizeInGbs"> The allocated local node storage in GBs on the Db server. </param>
        /// <param name="vmClusterOcids"> The OCID of the VM Clusters associated with the Db server. </param>
        /// <param name="dbNodeOcids"> The OCID of the Db nodes associated with the Db server. </param>
        /// <param name="lifecycleDetails"> Lifecycle details of dbServer. </param>
        /// <param name="lifecycleState"> DbServer provisioning state. </param>
        /// <param name="maxCpuCount"> The total number of CPU cores available. </param>
        /// <param name="autonomousVmClusterOcids"> The list of OCIDs of the Autonomous VM Clusters associated with the Db server. </param>
        /// <param name="autonomousVirtualMachineOcids"> The list of OCIDs of the Autonomous Virtual Machines associated with the Db server. </param>
        /// <param name="maxDBNodeStorageInGbs"> The total max dbNode storage in GBs. </param>
        /// <param name="memorySizeInGbs"> The total memory size in GBs. </param>
        /// <param name="shape"> The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available. </param>
        /// <param name="createdOn"> The date and time that the Db Server was created. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <param name="computeModel"> The compute model of the Exadata Infrastructure. </param>
        /// <returns> A new <see cref="Models.OracleDBServerProperties"/> instance for mocking. </returns>
        public static OracleDBServerProperties OracleDBServerProperties(string dbServerOcid = default, string displayName = default, string compartmentOcid = default, ResourceIdentifier exadataInfrastructureOcid = default, int? cpuCoreCount = default, DBServerPatchingDetails dbServerPatchingDetails = default, int? maxMemoryInGbs = default, int? dbNodeStorageSizeInGbs = default, IEnumerable<string> vmClusterOcids = default, IEnumerable<string> dbNodeOcids = default, string lifecycleDetails = default, DBServerProvisioningState? lifecycleState = default, int? maxCpuCount = default, IEnumerable<string> autonomousVmClusterOcids = default, IEnumerable<string> autonomousVirtualMachineOcids = default, int? maxDBNodeStorageInGbs = default, int? memorySizeInGbs = default, string shape = default, DateTimeOffset? createdOn = default, OracleDatabaseResourceProvisioningState? provisioningState = default, OracleDatabaseComputeModel? computeModel = default)
        {
            vmClusterOcids ??= new ChangeTrackingList<string>();
            dbNodeOcids ??= new ChangeTrackingList<string>();
            autonomousVmClusterOcids ??= new ChangeTrackingList<string>();
            autonomousVirtualMachineOcids ??= new ChangeTrackingList<string>();

            return new OracleDBServerProperties(
                dbServerOcid,
                displayName,
                compartmentOcid,
                exadataInfrastructureOcid,
                cpuCoreCount,
                dbServerPatchingDetails,
                maxMemoryInGbs,
                dbNodeStorageSizeInGbs,
                vmClusterOcids.ToList(),
                dbNodeOcids.ToList(),
                lifecycleDetails,
                lifecycleState,
                maxCpuCount,
                autonomousVmClusterOcids.ToList(),
                autonomousVirtualMachineOcids.ToList(),
                maxDBNodeStorageInGbs,
                memorySizeInGbs,
                shape,
                createdOn,
                provisioningState,
                computeModel,
                additionalBinaryDataProperties: null);
        }

        /// <summary> DbServer Patching Properties. </summary>
        /// <param name="estimatedPatchDuration"> Estimated Patch Duration. </param>
        /// <param name="patchingStatus"> Patching Status. </param>
        /// <param name="patchingEndedOn"> Time Patching Ended. </param>
        /// <param name="patchingStartedOn"> Time Patching Started. </param>
        /// <returns> A new <see cref="Models.DBServerPatchingDetails"/> instance for mocking. </returns>
        public static DBServerPatchingDetails DBServerPatchingDetails(int? estimatedPatchDuration = default, DBServerPatchingStatus? patchingStatus = default, DateTimeOffset? patchingEndedOn = default, DateTimeOffset? patchingStartedOn = default)
        {
            return new DBServerPatchingDetails(estimatedPatchDuration, patchingStatus, patchingEndedOn, patchingStartedOn, additionalBinaryDataProperties: null);
        }

        /// <summary> CloudVmCluster resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.CloudVmClusterData"/> instance for mocking. </returns>
        public static CloudVmClusterData CloudVmClusterData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, CloudVmClusterProperties properties = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new CloudVmClusterData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties);
        }

        /// <summary> CloudVmCluster resource model. </summary>
        /// <param name="cloudVmClusterOcid"> Cloud VM Cluster ocid. </param>
        /// <param name="listenerPort"> The port number configured for the listener on the cloud VM cluster. </param>
        /// <param name="nodeCount"> The number of nodes in the cloud VM cluster. . </param>
        /// <param name="storageSizeInGbs"> The data disk group size to be allocated in GBs per VM. </param>
        /// <param name="fileSystemConfigurationDetails"> Array of mount path and size. </param>
        /// <param name="dataStorageSizeInTbs"> The data disk group size to be allocated in TBs. </param>
        /// <param name="dbNodeStorageSizeInGbs"> The local node storage to be allocated in GBs. </param>
        /// <param name="memorySizeInGbs"> The memory to be allocated in GBs. </param>
        /// <param name="createdOn"> The date and time that the cloud VM cluster was created. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="timeZone"> The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm). </param>
        /// <param name="zoneOcid"> The OCID of the zone the cloud VM cluster is associated with. </param>
        /// <param name="hostname"> The hostname for the cloud VM cluster. </param>
        /// <param name="domain"> The domain name for the cloud VM cluster. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores enabled on the cloud VM cluster. </param>
        /// <param name="ocpuCount"> The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part. </param>
        /// <param name="clusterName"> The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. . </param>
        /// <param name="dataStoragePercentage"> The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage. . </param>
        /// <param name="isLocalBackupEnabled"> If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster. . </param>
        /// <param name="cloudExadataInfrastructureId"> Cloud Exadata Infrastructure ID. </param>
        /// <param name="isSparseDiskgroupEnabled"> If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created. . </param>
        /// <param name="systemVersion"> Operating system version of the image. </param>
        /// <param name="sshPublicKeys"> The public key portion of one or more key pairs used for SSH access to the cloud VM cluster. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. . </param>
        /// <param name="diskRedundancy"> The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. . </param>
        /// <param name="scanIpIds"> The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty. </param>
        /// <param name="vipIds"> The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty. </param>
        /// <param name="scanDnsName"> The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster. . </param>
        /// <param name="scanListenerPortTcp"> The TCP Single Client Access Name (SCAN) port. The default port is 1521. </param>
        /// <param name="scanListenerPortTcpSsl"> The TCPS Single Client Access Name (SCAN) port. The default port is 2484. </param>
        /// <param name="scanDnsRecordOcid"> The OCID of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster. </param>
        /// <param name="shape"> The model name of the Exadata hardware running the cloud VM cluster. </param>
        /// <param name="provisioningState"> CloudVmCluster provisioning state. </param>
        /// <param name="lifecycleState"> CloudVmCluster lifecycle state. </param>
        /// <param name="vnetId"> VNET for network connectivity. </param>
        /// <param name="giVersion"> Oracle Grid Infrastructure (GI) software version. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="nsgUri"> HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface. </param>
        /// <param name="subnetId"> Client subnet. </param>
        /// <param name="backupSubnetCidr"> Client OCI backup subnet CIDR, default is 192.168.252.0/22. </param>
        /// <param name="nsgCidrs"> CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default. </param>
        /// <param name="dataCollectionOptions"> Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS. </param>
        /// <param name="displayName"> Display Name. </param>
        /// <param name="computeNodeOcids"> The list of compute servers to be added to the cloud VM cluster. </param>
        /// <param name="iormConfigCache"> iormConfigCache details for cloud VM cluster. </param>
        /// <param name="lastUpdateHistoryEntryOcid"> The OCID of the last maintenance update history entry. </param>
        /// <param name="dbServerOcids"> The list of DB servers. </param>
        /// <param name="compartmentOcid"> Cluster compartmentId. </param>
        /// <param name="clusterSubnetOcid"> Cluster subnet ocid. </param>
        /// <param name="computeModel"> The compute model of the VM Cluster. </param>
        /// <param name="exascaleDbStorageVaultId"> Exadata Database Storage Vault ID. </param>
        /// <param name="storageManagementType"> Specifies whether the type of storage management for the VM cluster is ASM or Exascale. </param>
        /// <returns> A new <see cref="Models.CloudVmClusterProperties"/> instance for mocking. </returns>
        public static CloudVmClusterProperties CloudVmClusterProperties(string cloudVmClusterOcid = default, long? listenerPort = default, int? nodeCount = default, int? storageSizeInGbs = default, IEnumerable<FileSystemConfigurationDetails> fileSystemConfigurationDetails = default, double? dataStorageSizeInTbs = default, int? dbNodeStorageSizeInGbs = default, int? memorySizeInGbs = default, DateTimeOffset? createdOn = default, string lifecycleDetails = default, string timeZone = default, string zoneOcid = default, string hostname = default, string domain = default, int cpuCoreCount = default, float? ocpuCount = default, string clusterName = default, int? dataStoragePercentage = default, bool? isLocalBackupEnabled = default, ResourceIdentifier cloudExadataInfrastructureId = default, bool? isSparseDiskgroupEnabled = default, string systemVersion = default, IEnumerable<string> sshPublicKeys = default, OracleLicenseModel? licenseModel = default, CloudVmClusterDiskRedundancy? diskRedundancy = default, IEnumerable<string> scanIpIds = default, IEnumerable<string> vipIds = default, string scanDnsName = default, int? scanListenerPortTcp = default, int? scanListenerPortTcpSsl = default, string scanDnsRecordOcid = default, string shape = default, OracleDatabaseProvisioningState? provisioningState = default, CloudVmClusterLifecycleState? lifecycleState = default, ResourceIdentifier vnetId = default, string giVersion = default, Uri ociUri = default, Uri nsgUri = default, ResourceIdentifier subnetId = default, string backupSubnetCidr = default, IEnumerable<CloudVmClusterNsgCidr> nsgCidrs = default, DiagnosticCollectionConfig dataCollectionOptions = default, string displayName = default, IEnumerable<string> computeNodeOcids = default, ExadataIormConfig iormConfigCache = default, string lastUpdateHistoryEntryOcid = default, IEnumerable<string> dbServerOcids = default, string compartmentOcid = default, string clusterSubnetOcid = default, OracleDatabaseComputeModel? computeModel = default, ResourceIdentifier exascaleDbStorageVaultId = default, ExadataVmClusterStorageManagementType? storageManagementType = default)
        {
            fileSystemConfigurationDetails ??= new ChangeTrackingList<FileSystemConfigurationDetails>();
            sshPublicKeys ??= new ChangeTrackingList<string>();
            scanIpIds ??= new ChangeTrackingList<string>();
            vipIds ??= new ChangeTrackingList<string>();
            nsgCidrs ??= new ChangeTrackingList<CloudVmClusterNsgCidr>();
            computeNodeOcids ??= new ChangeTrackingList<string>();
            dbServerOcids ??= new ChangeTrackingList<string>();

            return new CloudVmClusterProperties(
                cloudVmClusterOcid,
                listenerPort,
                nodeCount,
                storageSizeInGbs,
                fileSystemConfigurationDetails.ToList(),
                dataStorageSizeInTbs,
                dbNodeStorageSizeInGbs,
                memorySizeInGbs,
                createdOn,
                lifecycleDetails,
                timeZone,
                zoneOcid,
                hostname,
                domain,
                cpuCoreCount,
                ocpuCount,
                clusterName,
                dataStoragePercentage,
                isLocalBackupEnabled,
                cloudExadataInfrastructureId,
                isSparseDiskgroupEnabled,
                systemVersion,
                sshPublicKeys.ToList(),
                licenseModel,
                diskRedundancy,
                scanIpIds.ToList(),
                vipIds.ToList(),
                scanDnsName,
                scanListenerPortTcp,
                scanListenerPortTcpSsl,
                scanDnsRecordOcid,
                shape,
                provisioningState,
                lifecycleState,
                vnetId,
                giVersion,
                ociUri,
                nsgUri,
                subnetId,
                backupSubnetCidr,
                nsgCidrs.ToList(),
                dataCollectionOptions,
                displayName,
                computeNodeOcids.ToList(),
                iormConfigCache,
                lastUpdateHistoryEntryOcid,
                dbServerOcids.ToList(),
                compartmentOcid,
                clusterSubnetOcid,
                computeModel,
                exascaleDbStorageVaultId,
                storageManagementType,
                additionalBinaryDataProperties: null);
        }

        /// <summary> ExadataIormConfig for cloud vm cluster. </summary>
        /// <param name="dbPlans"> An array of IORM settings for all the database in the Exadata DB system. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycleState. </param>
        /// <param name="lifecycleState"> The current state of IORM configuration for the Exadata DB system. </param>
        /// <param name="objective"> The current value for the IORM objective. The default is AUTO. </param>
        /// <returns> A new <see cref="Models.ExadataIormConfig"/> instance for mocking. </returns>
        public static ExadataIormConfig ExadataIormConfig(IEnumerable<DBIormConfig> dbPlans = default, string lifecycleDetails = default, IormLifecycleState? lifecycleState = default, IormObjective? objective = default)
        {
            dbPlans ??= new ChangeTrackingList<DBIormConfig>();

            return new ExadataIormConfig(dbPlans.ToList(), lifecycleDetails, lifecycleState, objective, additionalBinaryDataProperties: null);
        }

        /// <summary> DbIormConfig for cloud vm cluster. </summary>
        /// <param name="dbName"> The database name. For the default DbPlan, the dbName is default. </param>
        /// <param name="flashCacheLimit"> The flash cache limit for this database. This value is internally configured based on the share value assigned to the database. </param>
        /// <param name="share"> The relative priority of this database. </param>
        /// <returns> A new <see cref="Models.DBIormConfig"/> instance for mocking. </returns>
        public static DBIormConfig DBIormConfig(string dbName = default, string flashCacheLimit = default, int? share = default)
        {
            return new DBIormConfig(dbName, flashCacheLimit, share, additionalBinaryDataProperties: null);
        }

        /// <summary> The type used for update operations of the CloudVmCluster. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="Models.CloudVmClusterPatch"/> instance for mocking. </returns>
        public static CloudVmClusterPatch CloudVmClusterPatch(IDictionary<string, string> tags = default, CloudVmClusterUpdateProperties properties = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new CloudVmClusterPatch(tags, properties, additionalBinaryDataProperties: null);
        }

        /// <summary> The updatable properties of the CloudVmCluster. </summary>
        /// <param name="storageSizeInGbs"> The data disk group size to be allocated in GBs per VM. </param>
        /// <param name="fileSystemConfigurationDetails"> Array of mount path and size. </param>
        /// <param name="dataStorageSizeInTbs"> The data disk group size to be allocated in TBs. </param>
        /// <param name="dbNodeStorageSizeInGbs"> The local node storage to be allocated in GBs. </param>
        /// <param name="memorySizeInGbs"> The memory to be allocated in GBs. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores enabled on the cloud VM cluster. </param>
        /// <param name="ocpuCount"> The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part. </param>
        /// <param name="sshPublicKeys"> The public key portion of one or more key pairs used for SSH access to the cloud VM cluster. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. . </param>
        /// <param name="dataCollectionOptions"> Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS. </param>
        /// <param name="displayName"> Display Name. </param>
        /// <param name="computeNodeOcids"> The list of compute servers to be added to the cloud VM cluster. </param>
        /// <returns> A new <see cref="Models.CloudVmClusterUpdateProperties"/> instance for mocking. </returns>
        public static CloudVmClusterUpdateProperties CloudVmClusterUpdateProperties(int? storageSizeInGbs = default, IEnumerable<FileSystemConfigurationDetails> fileSystemConfigurationDetails = default, double? dataStorageSizeInTbs = default, int? dbNodeStorageSizeInGbs = default, int? memorySizeInGbs = default, int? cpuCoreCount = default, float? ocpuCount = default, IEnumerable<string> sshPublicKeys = default, OracleLicenseModel? licenseModel = default, DiagnosticCollectionConfig dataCollectionOptions = default, string displayName = default, IEnumerable<string> computeNodeOcids = default)
        {
            fileSystemConfigurationDetails ??= new ChangeTrackingList<FileSystemConfigurationDetails>();
            sshPublicKeys ??= new ChangeTrackingList<string>();
            computeNodeOcids ??= new ChangeTrackingList<string>();

            return new CloudVmClusterUpdateProperties(
                storageSizeInGbs,
                fileSystemConfigurationDetails.ToList(),
                dataStorageSizeInTbs,
                dbNodeStorageSizeInGbs,
                memorySizeInGbs,
                cpuCoreCount,
                ocpuCount,
                sshPublicKeys.ToList(),
                licenseModel,
                dataCollectionOptions,
                displayName,
                computeNodeOcids.ToList(),
                additionalBinaryDataProperties: null);
        }

        /// <summary> Add/Remove (Virtual Machine) DbNode model. </summary>
        /// <param name="dbServerOcids"> Db servers ocids. </param>
        /// <returns> A new <see cref="Models.CloudVmClusterDBNodeContent"/> instance for mocking. </returns>
        public static CloudVmClusterDBNodeContent CloudVmClusterDBNodeContent(IEnumerable<string> dbServerOcids = default)
        {
            dbServerOcids ??= new ChangeTrackingList<string>();

            return new CloudVmClusterDBNodeContent(dbServerOcids.ToList(), additionalBinaryDataProperties: null);
        }

        /// <summary> Private Ip Addresses filter. </summary>
        /// <param name="subnetOcid"> Subnet OCID. </param>
        /// <param name="vnicOcid"> VCN OCID. </param>
        /// <returns> A new <see cref="Models.PrivateIPAddressesContent"/> instance for mocking. </returns>
        public static PrivateIPAddressesContent PrivateIPAddressesContent(string subnetOcid = default, string vnicOcid = default)
        {
            return new PrivateIPAddressesContent(subnetOcid, vnicOcid, additionalBinaryDataProperties: null);
        }

        /// <summary> PrivateIpAddress resource properties. </summary>
        /// <param name="displayName"> PrivateIpAddresses displayName. </param>
        /// <param name="hostnameLabel"> PrivateIpAddresses hostnameLabel. </param>
        /// <param name="privateIPAddressesOcid"> PrivateIpAddresses Id. </param>
        /// <param name="ipAddress"> PrivateIpAddresses ipAddress. </param>
        /// <param name="subnetOcid"> PrivateIpAddresses subnetId. </param>
        /// <returns> A new <see cref="Models.PrivateIPAddressResult"/> instance for mocking. </returns>
        public static PrivateIPAddressResult PrivateIPAddressResult(string displayName = default, string hostnameLabel = default, string privateIPAddressesOcid = default, string ipAddress = default, string subnetOcid = default)
        {
            return new PrivateIPAddressResult(
                displayName,
                hostnameLabel,
                privateIPAddressesOcid,
                ipAddress,
                subnetOcid,
                additionalBinaryDataProperties: null);
        }

        /// <summary> Virtual IP resource belonging to a vm cluster resource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.CloudVmClusterVirtualNetworkAddressData"/> instance for mocking. </returns>
        public static CloudVmClusterVirtualNetworkAddressData CloudVmClusterVirtualNetworkAddressData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, CloudVmClusterVirtualNetworkAddressProperties properties = default)
        {
            return new CloudVmClusterVirtualNetworkAddressData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> virtualNetworkAddress resource properties. </summary>
        /// <param name="ipAddress"> Virtual network Address address. </param>
        /// <param name="vipVmOcid"> Virtual Machine OCID. </param>
        /// <param name="vipOcid"> Application VIP OCID. </param>
        /// <param name="domain"> Virtual network address fully qualified domain name. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state of the application virtual IP (VIP) address. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <param name="lifecycleState"> virtual network address lifecycle state. </param>
        /// <param name="assignedOn"> The date and time when the create operation for the application virtual IP (VIP) address completed. </param>
        /// <returns> A new <see cref="Models.CloudVmClusterVirtualNetworkAddressProperties"/> instance for mocking. </returns>
        public static CloudVmClusterVirtualNetworkAddressProperties CloudVmClusterVirtualNetworkAddressProperties(string ipAddress = default, string vipVmOcid = default, string vipOcid = default, string domain = default, string lifecycleDetails = default, OracleDatabaseProvisioningState? provisioningState = default, VirtualNetworkAddressLifecycleState? lifecycleState = default, DateTimeOffset? assignedOn = default)
        {
            return new CloudVmClusterVirtualNetworkAddressProperties(
                ipAddress,
                vipVmOcid,
                vipOcid,
                domain,
                lifecycleDetails,
                provisioningState,
                lifecycleState,
                assignedOn,
                additionalBinaryDataProperties: null);
        }

        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="oracleSystemVersion"> A valid Oracle System Version. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleSystemVersionData"/> instance for mocking. </returns>
        public static OracleSystemVersionData OracleSystemVersionData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, string oracleSystemVersion = default)
        {
            return new OracleSystemVersionData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                oracleSystemVersion is null ? default : new OracleSystemVersionProperties(oracleSystemVersion, new Dictionary<string, BinaryData>()));
        }

        /// <summary> OracleSubscription resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="plan"> Details of the resource plan. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleSubscriptionData"/> instance for mocking. </returns>
        public static OracleSubscriptionData OracleSubscriptionData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, OracleSubscriptionProperties properties = default, OracleDatabasePlan plan = default)
        {
            return new OracleSubscriptionData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties,
                plan);
        }

        /// <summary> Oracle Subscription resource model. </summary>
        /// <param name="provisioningState"> OracleSubscriptionProvisioningState provisioning state. </param>
        /// <param name="saasSubscriptionId"> SAAS subscription ID generated by Marketplace. </param>
        /// <param name="cloudAccountOcid"> Cloud Account Id. </param>
        /// <param name="cloudAccountState"> Cloud Account provisioning state. </param>
        /// <param name="termUnit"> Term Unit. P1Y, P3Y, etc, see Durations https://en.wikipedia.org/wiki/ISO_8601. </param>
        /// <param name="productCode"> Product code for the term unit. </param>
        /// <param name="intent"> Intent for the update operation. </param>
        /// <param name="azureSubscriptionIds"> Azure subscriptions to be added. </param>
        /// <param name="addSubscriptionOperationState"> State of the add Azure subscription operation on Oracle subscription. </param>
        /// <param name="lastOperationStatusDetail"> Status details of the last operation on Oracle subscription. </param>
        /// <returns> A new <see cref="Models.OracleSubscriptionProperties"/> instance for mocking. </returns>
        public static OracleSubscriptionProperties OracleSubscriptionProperties(OracleSubscriptionProvisioningState? provisioningState = default, string saasSubscriptionId = default, string cloudAccountOcid = default, CloudAccountProvisioningState? cloudAccountState = default, string termUnit = default, string productCode = default, OracleSubscriptionUpdateIntent? intent = default, IEnumerable<string> azureSubscriptionIds = default, AddSubscriptionOperationState? addSubscriptionOperationState = default, string lastOperationStatusDetail = default)
        {
            azureSubscriptionIds ??= new ChangeTrackingList<string>();

            return new OracleSubscriptionProperties(
                provisioningState,
                saasSubscriptionId,
                cloudAccountOcid,
                cloudAccountState,
                termUnit,
                productCode,
                intent,
                azureSubscriptionIds.ToList(),
                addSubscriptionOperationState,
                lastOperationStatusDetail,
                additionalBinaryDataProperties: null);
        }

        /// <summary> Cloud Account Details model. </summary>
        /// <param name="cloudAccountName"> Cloud Account name. </param>
        /// <param name="cloudAccountHomeRegion"> Cloud Account Home region. </param>
        /// <returns> A new <see cref="Models.CloudAccountDetails"/> instance for mocking. </returns>
        public static CloudAccountDetails CloudAccountDetails(string cloudAccountName = default, string cloudAccountHomeRegion = default)
        {
            return new CloudAccountDetails(cloudAccountName, cloudAccountHomeRegion, additionalBinaryDataProperties: null);
        }

        /// <summary> SaaS Subscription Details model. </summary>
        /// <param name="id"> Purchased SaaS subscription ID. </param>
        /// <param name="subscriptionName"> SaaS subscription name. </param>
        /// <param name="createdOn"> Creation Date and Time. </param>
        /// <param name="offerId"> Purchased offer ID. </param>
        /// <param name="planId"> Purchased offer's plan ID. </param>
        /// <param name="saasSubscriptionStatus"> Indicates the status of the Subscription. </param>
        /// <param name="publisherId"> Publisher ID. </param>
        /// <param name="purchaserEmailId"> Purchaser Email ID. </param>
        /// <param name="purchaserTenantId"> Purchaser Tenant ID. </param>
        /// <param name="termUnit"> Purchase Term Unit. </param>
        /// <param name="isAutoRenew"> AutoRenew flag. </param>
        /// <param name="isFreeTrial"> FreeTrial flag. </param>
        /// <returns> A new <see cref="Models.SaasSubscriptionDetails"/> instance for mocking. </returns>
        public static SaasSubscriptionDetails SaasSubscriptionDetails(string id = default, string subscriptionName = default, DateTimeOffset? createdOn = default, string offerId = default, string planId = default, string saasSubscriptionStatus = default, string publisherId = default, string purchaserEmailId = default, string purchaserTenantId = default, string termUnit = default, bool? isAutoRenew = default, bool? isFreeTrial = default)
        {
            return new SaasSubscriptionDetails(
                id,
                subscriptionName,
                createdOn,
                offerId,
                planId,
                saasSubscriptionStatus,
                publisherId,
                purchaserEmailId,
                purchaserTenantId,
                termUnit,
                isAutoRenew,
                isFreeTrial,
                additionalBinaryDataProperties: null);
        }

        /// <summary> Activation Links model. </summary>
        /// <param name="newCloudAccountActivationLink"> New Cloud Account Activation Link. </param>
        /// <param name="existingCloudAccountActivationLink"> Existing Cloud Account Activation Link. </param>
        /// <returns> A new <see cref="Models.CloudAccountActivationLinks"/> instance for mocking. </returns>
        public static CloudAccountActivationLinks CloudAccountActivationLinks(string newCloudAccountActivationLink = default, string existingCloudAccountActivationLink = default)
        {
            return new CloudAccountActivationLinks(newCloudAccountActivationLink, existingCloudAccountActivationLink, additionalBinaryDataProperties: null);
        }

        /// <summary> Azure Subscriptions model. </summary>
        /// <param name="azureSubscriptionIds"> Azure Subscription Ids to be updated. </param>
        /// <returns> A new <see cref="Models.OracleAzureSubscriptionsContent"/> instance for mocking. </returns>
        public static OracleAzureSubscriptionsContent OracleAzureSubscriptionsContent(IEnumerable<string> azureSubscriptionIds = default)
        {
            azureSubscriptionIds ??= new ChangeTrackingList<string>();

            return new OracleAzureSubscriptionsContent(azureSubscriptionIds.ToList(), additionalBinaryDataProperties: null);
        }

        /// <summary> The DbNode resource belonging to vmCluster. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.CloudVmClusterDBNodeData"/> instance for mocking. </returns>
        public static CloudVmClusterDBNodeData CloudVmClusterDBNodeData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, CloudVmClusterDBNodeProperties properties = default)
        {
            return new CloudVmClusterDBNodeData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> The properties of DbNodeResource. </summary>
        /// <param name="dbNodeOcid"> DbNode OCID. </param>
        /// <param name="additionalDetails"> Additional information about the planned maintenance. </param>
        /// <param name="backupIPOcid"> The OCID of the backup IP address associated with the database node. </param>
        /// <param name="backupVnic2Ocid"> The OCID of the second backup VNIC. </param>
        /// <param name="backupVnicOcid"> The OCID of the backup VNIC. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores enabled on the Db node. </param>
        /// <param name="dbNodeStorageSizeInGbs"> The allocated local node storage in GBs on the Db node. </param>
        /// <param name="dbServerOcid"> The OCID of the Exacc Db server associated with the database node. </param>
        /// <param name="dbSystemOcid"> The OCID of the DB system. </param>
        /// <param name="faultDomain"> The name of the Fault Domain the instance is contained in. </param>
        /// <param name="hostIPOcid"> The OCID of the host IP address associated with the database node. </param>
        /// <param name="hostname"> The host name for the database node. </param>
        /// <param name="dbNodeLifecycleState"> The current state of the database node. </param>
        /// <param name="lifecycleDetails"> Lifecycle details of Db Node. </param>
        /// <param name="maintenanceType"> The type of database node maintenance. </param>
        /// <param name="memorySizeInGbs"> The allocated memory in GBs on the Db node. </param>
        /// <param name="softwareStorageSizeInGb"> The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems. </param>
        /// <param name="createdOn"> The date and time that the database node was created. </param>
        /// <param name="timeMaintenanceWindowEnd"> End date and time of maintenance window. </param>
        /// <param name="timeMaintenanceWindowStart"> Start date and time of maintenance window. </param>
        /// <param name="vnic2Ocid"> The OCID of the second VNIC. </param>
        /// <param name="vnicOcid"> The OCID of the VNIC. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <returns> A new <see cref="Models.CloudVmClusterDBNodeProperties"/> instance for mocking. </returns>
        public static CloudVmClusterDBNodeProperties CloudVmClusterDBNodeProperties(string dbNodeOcid = default, string additionalDetails = default, string backupIPOcid = default, string backupVnic2Ocid = default, string backupVnicOcid = default, int? cpuCoreCount = default, int? dbNodeStorageSizeInGbs = default, string dbServerOcid = default, string dbSystemOcid = default, string faultDomain = default, string hostIPOcid = default, string hostname = default, DBNodeProvisioningState dbNodeLifecycleState = default, string lifecycleDetails = default, DBNodeMaintenanceType? maintenanceType = default, int? memorySizeInGbs = default, int? softwareStorageSizeInGb = default, DateTimeOffset createdOn = default, DateTimeOffset? timeMaintenanceWindowEnd = default, DateTimeOffset? timeMaintenanceWindowStart = default, string vnic2Ocid = default, string vnicOcid = default, OracleDatabaseResourceProvisioningState? provisioningState = default)
        {
            return new CloudVmClusterDBNodeProperties(
                dbNodeOcid,
                additionalDetails,
                backupIPOcid,
                backupVnic2Ocid,
                backupVnicOcid,
                cpuCoreCount,
                dbNodeStorageSizeInGbs,
                dbServerOcid,
                dbSystemOcid,
                faultDomain,
                hostIPOcid,
                hostname,
                dbNodeLifecycleState,
                lifecycleDetails,
                maintenanceType,
                memorySizeInGbs,
                softwareStorageSizeInGb,
                createdOn,
                timeMaintenanceWindowEnd,
                timeMaintenanceWindowStart,
                vnic2Ocid,
                vnicOcid,
                provisioningState,
                additionalBinaryDataProperties: null);
        }

        /// <summary> DbNode action object. </summary>
        /// <param name="action"> Db action. </param>
        /// <returns> A new <see cref="Models.DBNodeAction"/> instance for mocking. </returns>
        public static DBNodeAction DBNodeAction(DBNodeActionType action = default)
        {
            return new DBNodeAction(action, additionalBinaryDataProperties: null);
        }

        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="oracleGIVersion"> A valid Oracle Grid Infrastructure (GI) software version. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleGIVersionData"/> instance for mocking. </returns>
        public static OracleGIVersionData OracleGIVersionData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, string oracleGIVersion = default)
        {
            return new OracleGIVersionData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                oracleGIVersion is null ? default : new OracleGIVersionProperties(oracleGIVersion, new Dictionary<string, BinaryData>()));
        }

        /// <summary> The Oracle Grid Infrastructure (GI) minor version resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleGIMinorVersionData"/> instance for mocking. </returns>
        public static OracleGIMinorVersionData OracleGIMinorVersionData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, OracleGIMinorVersionProperties properties = default)
        {
            return new OracleGIMinorVersionData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> The Oracle Grid Infrastructure (GI) minor version properties. </summary>
        /// <param name="version"> A valid Oracle Grid Infrastructure (GI) software version. </param>
        /// <param name="gridImageOcid"> Grid Infrastructure Image Id. </param>
        /// <returns> A new <see cref="Models.OracleGIMinorVersionProperties"/> instance for mocking. </returns>
        public static OracleGIMinorVersionProperties OracleGIMinorVersionProperties(string version = default, string gridImageOcid = default)
        {
            return new OracleGIMinorVersionProperties(version, gridImageOcid, additionalBinaryDataProperties: null);
        }

        /// <summary> DbSystemShape resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleDBSystemShapeData"/> instance for mocking. </returns>
        public static OracleDBSystemShapeData OracleDBSystemShapeData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, OracleDBSystemShapeProperties properties = default)
        {
            return new OracleDBSystemShapeData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> DbSystemShape resource model. </summary>
        /// <param name="shapeFamily"> The family of the shape used for the DB system. </param>
        /// <param name="shapeName"> The shape used for the DB system. </param>
        /// <param name="availableCoreCount"> The maximum number of CPU cores that can be enabled on the DB system for this shape. </param>
        /// <param name="minimumCoreCount"> The minimum number of CPU cores that can be enabled on the DB system for this shape. </param>
        /// <param name="runtimeMinimumCoreCount"> The runtime minimum number of CPU cores that can be enabled on the DB system for this shape. </param>
        /// <param name="coreCountIncrement"> The discrete number by which the CPU core count for this shape can be increased or decreased. </param>
        /// <param name="minStorageCount"> The minimum number of Exadata storage servers available for the Exadata infrastructure. </param>
        /// <param name="maxStorageCount"> The maximum number of Exadata storage servers available for the Exadata infrastructure. </param>
        /// <param name="availableDataStoragePerServerInTbs"> The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes. </param>
        /// <param name="availableMemoryPerNodeInGbs"> The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes. </param>
        /// <param name="availableDBNodePerNodeInGbs"> The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes. </param>
        /// <param name="minCoreCountPerNode"> The minimum number of CPU cores that can be enabled per node for this shape. </param>
        /// <param name="availableMemoryInGbs"> The maximum memory that can be enabled for this shape. </param>
        /// <param name="minMemoryPerNodeInGbs"> The minimum memory that need be allocated per node for this shape. </param>
        /// <param name="availableDBNodeStorageInGbs"> The maximum Db Node storage that can be enabled for this shape. </param>
        /// <param name="minDBNodeStoragePerNodeInGbs"> The minimum Db Node storage that need be allocated per node for this shape. </param>
        /// <param name="availableDataStorageInTbs"> The maximum DATA storage that can be enabled for this shape. </param>
        /// <param name="minDataStorageInTbs"> The minimum data storage that need be allocated for this shape. </param>
        /// <param name="minimumNodeCount"> The minimum number of database nodes available for this shape. </param>
        /// <param name="maximumNodeCount"> The maximum number of database nodes available for this shape. </param>
        /// <param name="availableCoreCountPerNode"> The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes. </param>
        /// <param name="computeModel"> The compute model of the Exadata Infrastructure. </param>
        /// <param name="areServerTypesSupported"> Indicates if the shape supports database and storage server types. </param>
        /// <param name="displayName"> The display name of the shape used for the DB system. </param>
        /// <param name="shapeAttributes"> The shapeAttributes of the DB system shape.. </param>
        /// <returns> A new <see cref="Models.OracleDBSystemShapeProperties"/> instance for mocking. </returns>
        public static OracleDBSystemShapeProperties OracleDBSystemShapeProperties(string shapeFamily = default, string shapeName = default, int availableCoreCount = default, int? minimumCoreCount = default, int? runtimeMinimumCoreCount = default, int? coreCountIncrement = default, int? minStorageCount = default, int? maxStorageCount = default, double? availableDataStoragePerServerInTbs = default, int? availableMemoryPerNodeInGbs = default, int? availableDBNodePerNodeInGbs = default, int? minCoreCountPerNode = default, int? availableMemoryInGbs = default, int? minMemoryPerNodeInGbs = default, int? availableDBNodeStorageInGbs = default, int? minDBNodeStoragePerNodeInGbs = default, int? availableDataStorageInTbs = default, int? minDataStorageInTbs = default, int? minimumNodeCount = default, int? maximumNodeCount = default, int? availableCoreCountPerNode = default, OracleDatabaseComputeModel? computeModel = default, bool? areServerTypesSupported = default, string displayName = default, IEnumerable<string> shapeAttributes = default)
        {
            shapeAttributes ??= new ChangeTrackingList<string>();

            return new OracleDBSystemShapeProperties(
                shapeFamily,
                shapeName,
                availableCoreCount,
                minimumCoreCount,
                runtimeMinimumCoreCount,
                coreCountIncrement,
                minStorageCount,
                maxStorageCount,
                availableDataStoragePerServerInTbs,
                availableMemoryPerNodeInGbs,
                availableDBNodePerNodeInGbs,
                minCoreCountPerNode,
                availableMemoryInGbs,
                minMemoryPerNodeInGbs,
                availableDBNodeStorageInGbs,
                minDBNodeStoragePerNodeInGbs,
                availableDataStorageInTbs,
                minDataStorageInTbs,
                minimumNodeCount,
                maximumNodeCount,
                availableCoreCountPerNode,
                computeModel,
                areServerTypesSupported,
                displayName,
                shapeAttributes.ToList(),
                additionalBinaryDataProperties: null);
        }

        /// <summary> DnsPrivateView resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleDnsPrivateViewData"/> instance for mocking. </returns>
        public static OracleDnsPrivateViewData OracleDnsPrivateViewData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, OracleDnsPrivateViewProperties properties = default)
        {
            return new OracleDnsPrivateViewData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> Views resource model. </summary>
        /// <param name="dnsPrivateViewOcid"> The OCID of the view. </param>
        /// <param name="displayName"> The display name of the view resource. </param>
        /// <param name="isProtected"> A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed. </param>
        /// <param name="dnsPrivateViewLifecycleState"> Views lifecycleState. </param>
        /// <param name="self"> The canonical absolute URL of the resource. </param>
        /// <param name="createdOn"> views timeCreated. </param>
        /// <param name="updatedOn"> views timeCreated. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <returns> A new <see cref="Models.OracleDnsPrivateViewProperties"/> instance for mocking. </returns>
        public static OracleDnsPrivateViewProperties OracleDnsPrivateViewProperties(string dnsPrivateViewOcid = default, string displayName = default, bool isProtected = default, DnsPrivateViewsLifecycleState dnsPrivateViewLifecycleState = default, string self = default, DateTimeOffset createdOn = default, DateTimeOffset updatedOn = default, OracleDatabaseResourceProvisioningState? provisioningState = default)
        {
            return new OracleDnsPrivateViewProperties(
                dnsPrivateViewOcid,
                displayName,
                isProtected,
                dnsPrivateViewLifecycleState,
                self,
                createdOn,
                updatedOn,
                provisioningState,
                additionalBinaryDataProperties: null);
        }

        /// <summary> DnsPrivateZone resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleDnsPrivateZoneData"/> instance for mocking. </returns>
        public static OracleDnsPrivateZoneData OracleDnsPrivateZoneData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, OracleDnsPrivateZoneProperties properties = default)
        {
            return new OracleDnsPrivateZoneData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> Zones resource model. </summary>
        /// <param name="zoneOcid"> The OCID of the Zone. </param>
        /// <param name="isProtected"> A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed. </param>
        /// <param name="dnsPrivateZoneLifecycleState"> Zones lifecycleState. </param>
        /// <param name="self"> The canonical absolute URL of the resource. </param>
        /// <param name="serial"> The current serial of the zone. As seen in the zone's SOA record. </param>
        /// <param name="version"> Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived. </param>
        /// <param name="viewOcid"> The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view. </param>
        /// <param name="zoneType"> The type of the zone. Must be either PRIMARY or SECONDARY. SECONDARY is only supported for GLOBAL zones. </param>
        /// <param name="createdOn"> Zones timeCreated. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <returns> A new <see cref="Models.OracleDnsPrivateZoneProperties"/> instance for mocking. </returns>
        public static OracleDnsPrivateZoneProperties OracleDnsPrivateZoneProperties(string zoneOcid = default, bool isProtected = default, DnsPrivateZonesLifecycleState dnsPrivateZoneLifecycleState = default, string self = default, int serial = default, string version = default, string viewOcid = default, OracleDnsPrivateZoneType zoneType = default, DateTimeOffset createdOn = default, OracleDatabaseResourceProvisioningState? provisioningState = default)
        {
            return new OracleDnsPrivateZoneProperties(
                zoneOcid,
                isProtected,
                dnsPrivateZoneLifecycleState,
                self,
                serial,
                version,
                viewOcid,
                zoneType,
                createdOn,
                provisioningState,
                additionalBinaryDataProperties: null);
        }

        /// <summary> FlexComponent Resource Definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.OracleFlexComponentData"/> instance for mocking. </returns>
        public static OracleFlexComponentData OracleFlexComponentData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, OracleFlexComponentProperties properties = default)
        {
            return new OracleFlexComponentData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> FlexComponent resource model. </summary>
        /// <param name="minimumCoreCount"> The minimum number of CPU cores that can be enabled on the DB Server for this Flex Component. </param>
        /// <param name="availableCoreCount"> The maximum number of CPU cores that can be enabled on the DB Server for this Flex Component. </param>
        /// <param name="availableDBStorageInGbs"> The maximum storage that can be enabled on the Storage Server for this Flex Component. </param>
        /// <param name="runtimeMinimumCoreCount"> The runtime minimum number of CPU cores that can be enabled for this Flex Component. </param>
        /// <param name="shape"> The name of the DB system shape for this Flex Component. </param>
        /// <param name="availableMemoryInGbs"> The maximum memory size that can be enabled on the DB Server for this Flex Component. </param>
        /// <param name="availableLocalStorageInGbs"> The maximum local storage that can be enabled on the DB Server for this Flex Component. </param>
        /// <param name="computeModel"> The compute model of the DB Server for this Flex Component. </param>
        /// <param name="hardwareType"> The hardware type of the DB (Compute) or Storage (Cell) Server for this Flex Component. </param>
        /// <param name="descriptionSummary"> The description summary for this Flex Component. </param>
        /// <returns> A new <see cref="Models.OracleFlexComponentProperties"/> instance for mocking. </returns>
        public static OracleFlexComponentProperties OracleFlexComponentProperties(int? minimumCoreCount = default, int? availableCoreCount = default, int? availableDBStorageInGbs = default, int? runtimeMinimumCoreCount = default, string shape = default, int? availableMemoryInGbs = default, int? availableLocalStorageInGbs = default, string computeModel = default, FlexComponentHardwareType? hardwareType = default, string descriptionSummary = default)
        {
            return new OracleFlexComponentProperties(
                minimumCoreCount,
                availableCoreCount,
                availableDBStorageInGbs,
                runtimeMinimumCoreCount,
                shape,
                availableMemoryInGbs,
                availableLocalStorageInGbs,
                computeModel,
                hardwareType,
                descriptionSummary,
                additionalBinaryDataProperties: null);
        }

        /// <summary> Autonomous Database resource model. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.AutonomousDatabaseData"/> instance for mocking. </returns>
        public static AutonomousDatabaseData AutonomousDatabaseData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, AutonomousDatabaseBaseProperties properties = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new AutonomousDatabaseData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties);
        }

        /// <summary>
        /// Autonomous Database base resource model.
        /// Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="AutonomousDatabaseProperties"/>, <see cref="AutonomousDatabaseCloneProperties"/>, <see cref="AutonomousDatabaseCrossRegionDisasterRecoveryProperties"/>, and <see cref="AutonomousDatabaseFromBackupTimestampProperties"/>.
        /// </summary>
        /// <param name="adminPassword"> Admin password. </param>
        /// <param name="dataBaseType"> Database type to be created. </param>
        /// <param name="autonomousMaintenanceScheduleType"> The maintenance schedule type of the Autonomous Database Serverless. </param>
        /// <param name="characterSet"> The character set for the autonomous database. </param>
        /// <param name="computeCount"> The compute amount (CPUs) available to the database. </param>
        /// <param name="databaseComputeModel"> The compute model of the Autonomous Database. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores to be made available to the database. </param>
        /// <param name="customerContacts"> Customer Contacts. </param>
        /// <param name="dataStorageSizeInTbs"> The quantity of data in the database, in terabytes. </param>
        /// <param name="dataStorageSizeInGbs"> The size, in gigabytes, of the data volume that will be created and attached to the database. </param>
        /// <param name="dbVersion"> A valid Oracle Database version for Autonomous Database. </param>
        /// <param name="dbWorkload"> The Autonomous Database workload type. </param>
        /// <param name="displayName"> The user-friendly name for the Autonomous Database. </param>
        /// <param name="isAutoScalingEnabled"> Indicates if auto scaling is enabled for the Autonomous Database CPU core count. </param>
        /// <param name="isAutoScalingForStorageEnabled"> Indicates if auto scaling is enabled for the Autonomous Database storage. </param>
        /// <param name="peerDBIds"> The list of Azure resource IDs of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have Azure IDs. </param>
        /// <param name="peerDBId"> The Azure resource ID of the Disaster Recovery peer database, which is located in a different region from the current peer database. </param>
        /// <param name="isLocalDataGuardEnabled"> Indicates whether the Autonomous Database has local or called in-region Data Guard enabled. </param>
        /// <param name="isRemoteDataGuardEnabled"> Indicates whether the Autonomous Database has Cross Region Data Guard enabled. </param>
        /// <param name="localDisasterRecoveryType"> Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover. </param>
        /// <param name="disasterRecoveryRoleChangedOn"> The date and time the Disaster Recovery role was switched for the standby Autonomous Database. </param>
        /// <param name="remoteDisasterRecoveryConfiguration"> Indicates remote disaster recovery configuration. </param>
        /// <param name="localStandbyDB"> Local Autonomous Disaster Recovery standby database details. </param>
        /// <param name="failedDataRecoveryInSeconds"> Indicates the number of seconds of data loss for a Data Guard failover. </param>
        /// <param name="isMtlsConnectionRequired"> Specifies if the Autonomous Database requires mTLS connections. </param>
        /// <param name="isPreviewVersionWithServiceTermsAccepted"> Specifies if the Autonomous Database preview version is being provisioned. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED. </param>
        /// <param name="ncharacterSet"> The character set for the Autonomous Database. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <param name="lifecycleState"> Views lifecycleState. </param>
        /// <param name="scheduledOperationsList"> The list of scheduled operations. </param>
        /// <param name="privateEndpointIp"> The private endpoint Ip address for the resource. </param>
        /// <param name="privateEndpointLabel"> The resource's private endpoint label. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="subnetId"> Client subnet. </param>
        /// <param name="vnetId"> VNET for network connectivity. </param>
        /// <param name="createdOn"> The date and time that the database was created. </param>
        /// <param name="maintenanceBeginOn"> The date and time when maintenance will begin. </param>
        /// <param name="maintenanceEndOn"> The date and time when maintenance will end. </param>
        /// <param name="actualUsedDataStorageSizeInTbs"> The current amount of storage in use for user and system data, in terabytes (TB). </param>
        /// <param name="allocatedStorageSizeInTbs"> The amount of storage currently allocated for the database tables and billed for, rounded up. </param>
        /// <param name="apexDetails"> Information about Oracle APEX Application Development. </param>
        /// <param name="availableUpgradeVersions"> List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty. </param>
        /// <param name="connectionStrings"> The connection string used to connect to the Autonomous Database. </param>
        /// <param name="connectionUrls"> The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. . </param>
        /// <param name="dataSafeStatus"> Status of the Data Safe registration for this Autonomous Database. </param>
        /// <param name="databaseEdition"> The Oracle Database Edition that applies to the Autonomous databases. </param>
        /// <param name="autonomousDatabaseId"> Autonomous Database ID. </param>
        /// <param name="inMemoryAreaInGbs"> The area assigned to In-Memory tables in Autonomous Database. </param>
        /// <param name="nextLongTermBackupCreatedOn"> The date and time when the next long-term backup would be created. </param>
        /// <param name="longTermBackupSchedule"> Details for the long-term backup schedule. </param>
        /// <param name="isPreview"> Indicates if the Autonomous Database version is a preview version. </param>
        /// <param name="localAdgAutoFailoverMaxDataLossLimit"> Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard. </param>
        /// <param name="memoryPerOracleComputeUnitInGbs"> The amount of memory (in GBs) enabled per ECPU or OCPU. </param>
        /// <param name="openMode"> Indicates the Autonomous Database mode. </param>
        /// <param name="operationsInsightsStatus"> Status of Operations Insights for this Autonomous Database. </param>
        /// <param name="permissionLevel"> The Autonomous Database permission level. </param>
        /// <param name="privateEndpoint"> The private endpoint for the resource. </param>
        /// <param name="provisionableCpus"> An array of CPU values that an Autonomous Database can be scaled to. </param>
        /// <param name="role"> The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled. </param>
        /// <param name="serviceConsoleUri"> The URL of the Service Console for the Autonomous Database. </param>
        /// <param name="sqlWebDeveloperUri"> The SQL Web Developer URL for the Oracle Autonomous Database. </param>
        /// <param name="supportedRegionsToCloneTo"> The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database. </param>
        /// <param name="dataGuardRoleChangedOn"> The date and time the Autonomous Data Guard role was switched for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseDeletedOn"> The date and time the Always Free database will be automatically deleted because of inactivity. </param>
        /// <param name="timeLocalDataGuardEnabled"> The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database. </param>
        /// <param name="lastFailoverHappenedOn"> The timestamp of the last failover operation. </param>
        /// <param name="lastRefreshHappenedOn"> The date and time when last refresh happened. </param>
        /// <param name="lastRefreshPointTimestamp"> The refresh point timestamp (UTC). </param>
        /// <param name="lastSwitchoverHappenedOn"> The timestamp of the last switchover operation for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseStoppedOn"> The date and time the Always Free database will be stopped because of inactivity. </param>
        /// <param name="usedDataStorageSizeInGbs"> The storage space consumed by Autonomous Database in GBs. </param>
        /// <param name="usedDataStorageSizeInTbs"> The amount of storage that has been used, in terabytes. </param>
        /// <param name="databaseOcid"> Database ocid. </param>
        /// <param name="backupRetentionPeriodInDays"> Retention period, in days, for long-term backups. </param>
        /// <param name="whitelistedIps"> The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseBaseProperties"/> instance for mocking. </returns>
        public static AutonomousDatabaseBaseProperties AutonomousDatabaseBaseProperties(string adminPassword = default, string dataBaseType = default, AutonomousMaintenanceScheduleType? autonomousMaintenanceScheduleType = default, string characterSet = default, float? computeCount = default, OracleDatabaseComputeModel? databaseComputeModel = default, int? cpuCoreCount = default, IEnumerable<OracleCustomerContact> customerContacts = default, int? dataStorageSizeInTbs = default, int? dataStorageSizeInGbs = default, string dbVersion = default, AutonomousDatabaseWorkloadType? dbWorkload = default, string displayName = default, bool? isAutoScalingEnabled = default, bool? isAutoScalingForStorageEnabled = default, IEnumerable<string> peerDBIds = default, string peerDBId = default, bool? isLocalDataGuardEnabled = default, bool? isRemoteDataGuardEnabled = default, DisasterRecoveryType? localDisasterRecoveryType = default, DateTimeOffset? disasterRecoveryRoleChangedOn = default, DisasterRecoveryConfigurationDetails remoteDisasterRecoveryConfiguration = default, AutonomousDatabaseStandbySummary localStandbyDB = default, int? failedDataRecoveryInSeconds = default, bool? isMtlsConnectionRequired = default, bool? isPreviewVersionWithServiceTermsAccepted = default, OracleLicenseModel? licenseModel = default, string ncharacterSet = default, string lifecycleDetails = default, OracleDatabaseProvisioningState? provisioningState = default, AutonomousDatabaseLifecycleState? lifecycleState = default, IEnumerable<ScheduledOperationsType> scheduledOperationsList = default, string privateEndpointIp = default, string privateEndpointLabel = default, Uri ociUri = default, ResourceIdentifier subnetId = default, ResourceIdentifier vnetId = default, DateTimeOffset? createdOn = default, DateTimeOffset? maintenanceBeginOn = default, DateTimeOffset? maintenanceEndOn = default, double? actualUsedDataStorageSizeInTbs = default, double? allocatedStorageSizeInTbs = default, OracleApexDetailsType apexDetails = default, IEnumerable<string> availableUpgradeVersions = default, AutonomousDatabaseConnectionStrings connectionStrings = default, AutonomousDatabaseConnectionUrls connectionUrls = default, DataSafeStatusType? dataSafeStatus = default, OracleDatabaseEditionType? databaseEdition = default, ResourceIdentifier autonomousDatabaseId = default, int? inMemoryAreaInGbs = default, DateTimeOffset? nextLongTermBackupCreatedOn = default, LongTermBackUpScheduleDetails longTermBackupSchedule = default, bool? isPreview = default, int? localAdgAutoFailoverMaxDataLossLimit = default, int? memoryPerOracleComputeUnitInGbs = default, AutonomousDatabaseModeType? openMode = default, OperationsInsightsStatusType? operationsInsightsStatus = default, AutonomousDatabasePermissionLevelType? permissionLevel = default, string privateEndpoint = default, IEnumerable<int> provisionableCpus = default, DataGuardRoleType? role = default, Uri serviceConsoleUri = default, Uri sqlWebDeveloperUri = default, IEnumerable<string> supportedRegionsToCloneTo = default, DateTimeOffset? dataGuardRoleChangedOn = default, DateTimeOffset? freeAutonomousDatabaseDeletedOn = default, string timeLocalDataGuardEnabled = default, DateTimeOffset? lastFailoverHappenedOn = default, DateTimeOffset? lastRefreshHappenedOn = default, DateTimeOffset? lastRefreshPointTimestamp = default, DateTimeOffset? lastSwitchoverHappenedOn = default, DateTimeOffset? freeAutonomousDatabaseStoppedOn = default, int? usedDataStorageSizeInGbs = default, int? usedDataStorageSizeInTbs = default, string databaseOcid = default, int? backupRetentionPeriodInDays = default, IEnumerable<string> whitelistedIps = default)
        {
            customerContacts ??= new ChangeTrackingList<OracleCustomerContact>();
            peerDBIds ??= new ChangeTrackingList<string>();
            scheduledOperationsList ??= new ChangeTrackingList<ScheduledOperationsType>();
            availableUpgradeVersions ??= new ChangeTrackingList<string>();
            provisionableCpus ??= new ChangeTrackingList<int>();
            supportedRegionsToCloneTo ??= new ChangeTrackingList<string>();
            whitelistedIps ??= new ChangeTrackingList<string>();

            return new UnknownAutonomousDatabaseBaseProperties(
                adminPassword,
                new OracleDataBaseType(dataBaseType),
                autonomousMaintenanceScheduleType,
                characterSet,
                computeCount,
                databaseComputeModel,
                cpuCoreCount,
                customerContacts.ToList(),
                dataStorageSizeInTbs,
                dataStorageSizeInGbs,
                dbVersion,
                dbWorkload,
                displayName,
                isAutoScalingEnabled,
                isAutoScalingForStorageEnabled,
                peerDBIds.ToList(),
                peerDBId,
                isLocalDataGuardEnabled,
                isRemoteDataGuardEnabled,
                localDisasterRecoveryType,
                disasterRecoveryRoleChangedOn,
                remoteDisasterRecoveryConfiguration,
                localStandbyDB,
                failedDataRecoveryInSeconds,
                isMtlsConnectionRequired,
                isPreviewVersionWithServiceTermsAccepted,
                licenseModel,
                ncharacterSet,
                lifecycleDetails,
                provisioningState,
                lifecycleState,
                scheduledOperationsList.ToList(),
                privateEndpointIp,
                privateEndpointLabel,
                ociUri,
                subnetId,
                vnetId,
                createdOn,
                maintenanceBeginOn,
                maintenanceEndOn,
                actualUsedDataStorageSizeInTbs,
                allocatedStorageSizeInTbs,
                apexDetails,
                availableUpgradeVersions.ToList(),
                connectionStrings,
                connectionUrls,
                dataSafeStatus,
                databaseEdition,
                autonomousDatabaseId,
                inMemoryAreaInGbs,
                nextLongTermBackupCreatedOn,
                longTermBackupSchedule,
                isPreview,
                localAdgAutoFailoverMaxDataLossLimit,
                memoryPerOracleComputeUnitInGbs,
                openMode,
                operationsInsightsStatus,
                permissionLevel,
                privateEndpoint,
                provisionableCpus.ToList(),
                role,
                serviceConsoleUri,
                sqlWebDeveloperUri,
                supportedRegionsToCloneTo.ToList(),
                dataGuardRoleChangedOn,
                freeAutonomousDatabaseDeletedOn,
                timeLocalDataGuardEnabled,
                lastFailoverHappenedOn,
                lastRefreshHappenedOn,
                lastRefreshPointTimestamp,
                lastSwitchoverHappenedOn,
                freeAutonomousDatabaseStoppedOn,
                usedDataStorageSizeInGbs,
                usedDataStorageSizeInTbs,
                databaseOcid,
                backupRetentionPeriodInDays,
                whitelistedIps.ToList(),
                additionalBinaryDataProperties: null);
        }

        /// <summary> Autonomous Disaster Recovery standby database details. </summary>
        /// <param name="lagTimeInSeconds"> The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover. </param>
        /// <param name="lifecycleState"> The current state of the Autonomous Database. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="dataGuardRoleChangedOn"> The date and time the Autonomous Data Guard role was switched for the standby Autonomous Database. </param>
        /// <param name="disasterRecoveryRoleChangedOn"> The date and time the Disaster Recovery role was switched for the standby Autonomous Database. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseStandbySummary"/> instance for mocking. </returns>
        public static AutonomousDatabaseStandbySummary AutonomousDatabaseStandbySummary(int? lagTimeInSeconds = default, AutonomousDatabaseLifecycleState? lifecycleState = default, string lifecycleDetails = default, DateTimeOffset? dataGuardRoleChangedOn = default, DateTimeOffset? disasterRecoveryRoleChangedOn = default)
        {
            return new AutonomousDatabaseStandbySummary(
                lagTimeInSeconds,
                lifecycleState,
                lifecycleDetails,
                dataGuardRoleChangedOn,
                disasterRecoveryRoleChangedOn,
                additionalBinaryDataProperties: null);
        }

        /// <summary> Information about Oracle APEX Application Development. </summary>
        /// <param name="apexVersion"> The Oracle APEX Application Development version. </param>
        /// <param name="ordsVersion"> The Oracle REST Data Services (ORDS) version. </param>
        /// <returns> A new <see cref="Models.OracleApexDetailsType"/> instance for mocking. </returns>
        public static OracleApexDetailsType OracleApexDetailsType(string apexVersion = default, string ordsVersion = default)
        {
            return new OracleApexDetailsType(apexVersion, ordsVersion, additionalBinaryDataProperties: null);
        }

        /// <summary> Connection strings to connect to an Oracle Autonomous Database. </summary>
        /// <param name="allConnectionStrings"> Returns all connection strings that can be used to connect to the Autonomous Database. </param>
        /// <param name="dedicated"> The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements. </param>
        /// <param name="high"> The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements. </param>
        /// <param name="low"> The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements. </param>
        /// <param name="medium"> The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements. </param>
        /// <param name="profiles"> A list of connection string profiles to allow clients to group, filter and select connection string values based on structured metadata. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseConnectionStrings"/> instance for mocking. </returns>
        public static AutonomousDatabaseConnectionStrings AutonomousDatabaseConnectionStrings(AutonomousDatabaseConnectionStringType allConnectionStrings = default, string dedicated = default, string high = default, string low = default, string medium = default, IEnumerable<AutonomousDatabaseConnectionStringProfile> profiles = default)
        {
            profiles ??= new ChangeTrackingList<AutonomousDatabaseConnectionStringProfile>();

            return new AutonomousDatabaseConnectionStrings(
                allConnectionStrings,
                dedicated,
                high,
                low,
                medium,
                profiles.ToList(),
                additionalBinaryDataProperties: null);
        }

        /// <summary> The connection string profile to allow clients to group, filter and select connection string values based on structured metadata. </summary>
        /// <param name="high"> The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements. </param>
        /// <param name="low"> The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements. </param>
        /// <param name="medium"> The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseConnectionStringType"/> instance for mocking. </returns>
        public static AutonomousDatabaseConnectionStringType AutonomousDatabaseConnectionStringType(string high = default, string low = default, string medium = default)
        {
            return new AutonomousDatabaseConnectionStringType(high, low, medium, additionalBinaryDataProperties: null);
        }

        /// <summary> The connection string profile to allow clients to group, filter and select connection string values based on structured metadata. </summary>
        /// <param name="consumerGroup"> Consumer group used by the connection. </param>
        /// <param name="displayName"> A user-friendly name for the connection. </param>
        /// <param name="hostFormat"> Host format used in connection string. </param>
        /// <param name="isRegional"> True for a regional connection string, applicable to cross-region DG only. </param>
        /// <param name="protocol"> Protocol used by the connection. </param>
        /// <param name="sessionMode"> Specifies whether the listener performs a direct hand-off of the session, or redirects the session. </param>
        /// <param name="syntaxFormat"> Specifies whether the connection string is using the long (LONG), Easy Connect (EZCONNECT), or Easy Connect Plus (EZCONNECTPLUS) format. </param>
        /// <param name="tlsAuthentication"> Specifies whether the TLS handshake is using one-way (SERVER) or mutual (MUTUAL) authentication. </param>
        /// <param name="value"> Connection string value. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseConnectionStringProfile"/> instance for mocking. </returns>
        public static AutonomousDatabaseConnectionStringProfile AutonomousDatabaseConnectionStringProfile(ConnectionConsumerGroup? consumerGroup = default, string displayName = default, ConnectionHostFormatType hostFormat = default, bool? isRegional = default, ConnectionProtocolType protocol = default, ConnectionSessionModeType sessionMode = default, SyntaxFormatType syntaxFormat = default, ConnectionTlsAuthenticationType? tlsAuthentication = default, string value = default)
        {
            return new AutonomousDatabaseConnectionStringProfile(
                consumerGroup,
                displayName,
                hostFormat,
                isRegional,
                protocol,
                sessionMode,
                syntaxFormat,
                tlsAuthentication,
                value,
                additionalBinaryDataProperties: null);
        }

        /// <summary> The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. </summary>
        /// <param name="apexUri"> Oracle Application Express (APEX) URL. </param>
        /// <param name="databaseTransformsUri"> The URL of the Database Transforms for the Autonomous Database. </param>
        /// <param name="graphStudioUri"> The URL of the Graph Studio for the Autonomous Database. </param>
        /// <param name="machineLearningNotebookUri"> The URL of the Oracle Machine Learning (OML) Notebook for the Autonomous Database. </param>
        /// <param name="mongoDBUri"> The URL of the MongoDB API for the Autonomous Database. </param>
        /// <param name="ordsUri"> The Oracle REST Data Services (ORDS) URL of the Web Access for the Autonomous Database. </param>
        /// <param name="sqlDevWebUri"> Oracle SQL Developer Web URL. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseConnectionUrls"/> instance for mocking. </returns>
        public static AutonomousDatabaseConnectionUrls AutonomousDatabaseConnectionUrls(Uri apexUri = default, Uri databaseTransformsUri = default, Uri graphStudioUri = default, Uri machineLearningNotebookUri = default, Uri mongoDBUri = default, Uri ordsUri = default, Uri sqlDevWebUri = default)
        {
            return new AutonomousDatabaseConnectionUrls(
                apexUri,
                databaseTransformsUri,
                graphStudioUri,
                machineLearningNotebookUri,
                mongoDBUri,
                ordsUri,
                sqlDevWebUri,
                additionalBinaryDataProperties: null);
        }

        /// <summary> Autonomous Database resource model. </summary>
        /// <param name="adminPassword"> Admin password. </param>
        /// <param name="autonomousMaintenanceScheduleType"> The maintenance schedule type of the Autonomous Database Serverless. </param>
        /// <param name="characterSet"> The character set for the autonomous database. </param>
        /// <param name="computeCount"> The compute amount (CPUs) available to the database. </param>
        /// <param name="databaseComputeModel"> The compute model of the Autonomous Database. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores to be made available to the database. </param>
        /// <param name="customerContacts"> Customer Contacts. </param>
        /// <param name="dataStorageSizeInTbs"> The quantity of data in the database, in terabytes. </param>
        /// <param name="dataStorageSizeInGbs"> The size, in gigabytes, of the data volume that will be created and attached to the database. </param>
        /// <param name="dbVersion"> A valid Oracle Database version for Autonomous Database. </param>
        /// <param name="dbWorkload"> The Autonomous Database workload type. </param>
        /// <param name="displayName"> The user-friendly name for the Autonomous Database. </param>
        /// <param name="isAutoScalingEnabled"> Indicates if auto scaling is enabled for the Autonomous Database CPU core count. </param>
        /// <param name="isAutoScalingForStorageEnabled"> Indicates if auto scaling is enabled for the Autonomous Database storage. </param>
        /// <param name="peerDBIds"> The list of Azure resource IDs of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have Azure IDs. </param>
        /// <param name="peerDBId"> The Azure resource ID of the Disaster Recovery peer database, which is located in a different region from the current peer database. </param>
        /// <param name="isLocalDataGuardEnabled"> Indicates whether the Autonomous Database has local or called in-region Data Guard enabled. </param>
        /// <param name="isRemoteDataGuardEnabled"> Indicates whether the Autonomous Database has Cross Region Data Guard enabled. </param>
        /// <param name="localDisasterRecoveryType"> Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover. </param>
        /// <param name="disasterRecoveryRoleChangedOn"> The date and time the Disaster Recovery role was switched for the standby Autonomous Database. </param>
        /// <param name="remoteDisasterRecoveryConfiguration"> Indicates remote disaster recovery configuration. </param>
        /// <param name="localStandbyDB"> Local Autonomous Disaster Recovery standby database details. </param>
        /// <param name="failedDataRecoveryInSeconds"> Indicates the number of seconds of data loss for a Data Guard failover. </param>
        /// <param name="isMtlsConnectionRequired"> Specifies if the Autonomous Database requires mTLS connections. </param>
        /// <param name="isPreviewVersionWithServiceTermsAccepted"> Specifies if the Autonomous Database preview version is being provisioned. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED. </param>
        /// <param name="ncharacterSet"> The character set for the Autonomous Database. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <param name="lifecycleState"> Views lifecycleState. </param>
        /// <param name="scheduledOperationsList"> The list of scheduled operations. </param>
        /// <param name="privateEndpointIp"> The private endpoint Ip address for the resource. </param>
        /// <param name="privateEndpointLabel"> The resource's private endpoint label. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="subnetId"> Client subnet. </param>
        /// <param name="vnetId"> VNET for network connectivity. </param>
        /// <param name="createdOn"> The date and time that the database was created. </param>
        /// <param name="maintenanceBeginOn"> The date and time when maintenance will begin. </param>
        /// <param name="maintenanceEndOn"> The date and time when maintenance will end. </param>
        /// <param name="actualUsedDataStorageSizeInTbs"> The current amount of storage in use for user and system data, in terabytes (TB). </param>
        /// <param name="allocatedStorageSizeInTbs"> The amount of storage currently allocated for the database tables and billed for, rounded up. </param>
        /// <param name="apexDetails"> Information about Oracle APEX Application Development. </param>
        /// <param name="availableUpgradeVersions"> List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty. </param>
        /// <param name="connectionStrings"> The connection string used to connect to the Autonomous Database. </param>
        /// <param name="connectionUrls"> The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. . </param>
        /// <param name="dataSafeStatus"> Status of the Data Safe registration for this Autonomous Database. </param>
        /// <param name="databaseEdition"> The Oracle Database Edition that applies to the Autonomous databases. </param>
        /// <param name="autonomousDatabaseId"> Autonomous Database ID. </param>
        /// <param name="inMemoryAreaInGbs"> The area assigned to In-Memory tables in Autonomous Database. </param>
        /// <param name="nextLongTermBackupCreatedOn"> The date and time when the next long-term backup would be created. </param>
        /// <param name="longTermBackupSchedule"> Details for the long-term backup schedule. </param>
        /// <param name="isPreview"> Indicates if the Autonomous Database version is a preview version. </param>
        /// <param name="localAdgAutoFailoverMaxDataLossLimit"> Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard. </param>
        /// <param name="memoryPerOracleComputeUnitInGbs"> The amount of memory (in GBs) enabled per ECPU or OCPU. </param>
        /// <param name="openMode"> Indicates the Autonomous Database mode. </param>
        /// <param name="operationsInsightsStatus"> Status of Operations Insights for this Autonomous Database. </param>
        /// <param name="permissionLevel"> The Autonomous Database permission level. </param>
        /// <param name="privateEndpoint"> The private endpoint for the resource. </param>
        /// <param name="provisionableCpus"> An array of CPU values that an Autonomous Database can be scaled to. </param>
        /// <param name="role"> The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled. </param>
        /// <param name="serviceConsoleUri"> The URL of the Service Console for the Autonomous Database. </param>
        /// <param name="sqlWebDeveloperUri"> The SQL Web Developer URL for the Oracle Autonomous Database. </param>
        /// <param name="supportedRegionsToCloneTo"> The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database. </param>
        /// <param name="dataGuardRoleChangedOn"> The date and time the Autonomous Data Guard role was switched for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseDeletedOn"> The date and time the Always Free database will be automatically deleted because of inactivity. </param>
        /// <param name="timeLocalDataGuardEnabled"> The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database. </param>
        /// <param name="lastFailoverHappenedOn"> The timestamp of the last failover operation. </param>
        /// <param name="lastRefreshHappenedOn"> The date and time when last refresh happened. </param>
        /// <param name="lastRefreshPointTimestamp"> The refresh point timestamp (UTC). </param>
        /// <param name="lastSwitchoverHappenedOn"> The timestamp of the last switchover operation for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseStoppedOn"> The date and time the Always Free database will be stopped because of inactivity. </param>
        /// <param name="usedDataStorageSizeInGbs"> The storage space consumed by Autonomous Database in GBs. </param>
        /// <param name="usedDataStorageSizeInTbs"> The amount of storage that has been used, in terabytes. </param>
        /// <param name="databaseOcid"> Database ocid. </param>
        /// <param name="backupRetentionPeriodInDays"> Retention period, in days, for long-term backups. </param>
        /// <param name="whitelistedIps"> The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseProperties"/> instance for mocking. </returns>
        public static AutonomousDatabaseProperties AutonomousDatabaseProperties(string adminPassword = default, AutonomousMaintenanceScheduleType? autonomousMaintenanceScheduleType = default, string characterSet = default, float? computeCount = default, OracleDatabaseComputeModel? databaseComputeModel = default, int? cpuCoreCount = default, IEnumerable<OracleCustomerContact> customerContacts = default, int? dataStorageSizeInTbs = default, int? dataStorageSizeInGbs = default, string dbVersion = default, AutonomousDatabaseWorkloadType? dbWorkload = default, string displayName = default, bool? isAutoScalingEnabled = default, bool? isAutoScalingForStorageEnabled = default, IEnumerable<string> peerDBIds = default, string peerDBId = default, bool? isLocalDataGuardEnabled = default, bool? isRemoteDataGuardEnabled = default, DisasterRecoveryType? localDisasterRecoveryType = default, DateTimeOffset? disasterRecoveryRoleChangedOn = default, DisasterRecoveryConfigurationDetails remoteDisasterRecoveryConfiguration = default, AutonomousDatabaseStandbySummary localStandbyDB = default, int? failedDataRecoveryInSeconds = default, bool? isMtlsConnectionRequired = default, bool? isPreviewVersionWithServiceTermsAccepted = default, OracleLicenseModel? licenseModel = default, string ncharacterSet = default, string lifecycleDetails = default, OracleDatabaseProvisioningState? provisioningState = default, AutonomousDatabaseLifecycleState? lifecycleState = default, IEnumerable<ScheduledOperationsType> scheduledOperationsList = default, string privateEndpointIp = default, string privateEndpointLabel = default, Uri ociUri = default, ResourceIdentifier subnetId = default, ResourceIdentifier vnetId = default, DateTimeOffset? createdOn = default, DateTimeOffset? maintenanceBeginOn = default, DateTimeOffset? maintenanceEndOn = default, double? actualUsedDataStorageSizeInTbs = default, double? allocatedStorageSizeInTbs = default, OracleApexDetailsType apexDetails = default, IEnumerable<string> availableUpgradeVersions = default, AutonomousDatabaseConnectionStrings connectionStrings = default, AutonomousDatabaseConnectionUrls connectionUrls = default, DataSafeStatusType? dataSafeStatus = default, OracleDatabaseEditionType? databaseEdition = default, ResourceIdentifier autonomousDatabaseId = default, int? inMemoryAreaInGbs = default, DateTimeOffset? nextLongTermBackupCreatedOn = default, LongTermBackUpScheduleDetails longTermBackupSchedule = default, bool? isPreview = default, int? localAdgAutoFailoverMaxDataLossLimit = default, int? memoryPerOracleComputeUnitInGbs = default, AutonomousDatabaseModeType? openMode = default, OperationsInsightsStatusType? operationsInsightsStatus = default, AutonomousDatabasePermissionLevelType? permissionLevel = default, string privateEndpoint = default, IEnumerable<int> provisionableCpus = default, DataGuardRoleType? role = default, Uri serviceConsoleUri = default, Uri sqlWebDeveloperUri = default, IEnumerable<string> supportedRegionsToCloneTo = default, DateTimeOffset? dataGuardRoleChangedOn = default, DateTimeOffset? freeAutonomousDatabaseDeletedOn = default, string timeLocalDataGuardEnabled = default, DateTimeOffset? lastFailoverHappenedOn = default, DateTimeOffset? lastRefreshHappenedOn = default, DateTimeOffset? lastRefreshPointTimestamp = default, DateTimeOffset? lastSwitchoverHappenedOn = default, DateTimeOffset? freeAutonomousDatabaseStoppedOn = default, int? usedDataStorageSizeInGbs = default, int? usedDataStorageSizeInTbs = default, string databaseOcid = default, int? backupRetentionPeriodInDays = default, IEnumerable<string> whitelistedIps = default)
        {
            customerContacts ??= new ChangeTrackingList<OracleCustomerContact>();
            peerDBIds ??= new ChangeTrackingList<string>();
            scheduledOperationsList ??= new ChangeTrackingList<ScheduledOperationsType>();
            availableUpgradeVersions ??= new ChangeTrackingList<string>();
            provisionableCpus ??= new ChangeTrackingList<int>();
            supportedRegionsToCloneTo ??= new ChangeTrackingList<string>();
            whitelistedIps ??= new ChangeTrackingList<string>();

            return new AutonomousDatabaseProperties(
                adminPassword,
                OracleDataBaseType.Regular,
                autonomousMaintenanceScheduleType,
                characterSet,
                computeCount,
                databaseComputeModel,
                cpuCoreCount,
                customerContacts.ToList(),
                dataStorageSizeInTbs,
                dataStorageSizeInGbs,
                dbVersion,
                dbWorkload,
                displayName,
                isAutoScalingEnabled,
                isAutoScalingForStorageEnabled,
                peerDBIds.ToList(),
                peerDBId,
                isLocalDataGuardEnabled,
                isRemoteDataGuardEnabled,
                localDisasterRecoveryType,
                disasterRecoveryRoleChangedOn,
                remoteDisasterRecoveryConfiguration,
                localStandbyDB,
                failedDataRecoveryInSeconds,
                isMtlsConnectionRequired,
                isPreviewVersionWithServiceTermsAccepted,
                licenseModel,
                ncharacterSet,
                lifecycleDetails,
                provisioningState,
                lifecycleState,
                scheduledOperationsList.ToList(),
                privateEndpointIp,
                privateEndpointLabel,
                ociUri,
                subnetId,
                vnetId,
                createdOn,
                maintenanceBeginOn,
                maintenanceEndOn,
                actualUsedDataStorageSizeInTbs,
                allocatedStorageSizeInTbs,
                apexDetails,
                availableUpgradeVersions.ToList(),
                connectionStrings,
                connectionUrls,
                dataSafeStatus,
                databaseEdition,
                autonomousDatabaseId,
                inMemoryAreaInGbs,
                nextLongTermBackupCreatedOn,
                longTermBackupSchedule,
                isPreview,
                localAdgAutoFailoverMaxDataLossLimit,
                memoryPerOracleComputeUnitInGbs,
                openMode,
                operationsInsightsStatus,
                permissionLevel,
                privateEndpoint,
                provisionableCpus.ToList(),
                role,
                serviceConsoleUri,
                sqlWebDeveloperUri,
                supportedRegionsToCloneTo.ToList(),
                dataGuardRoleChangedOn,
                freeAutonomousDatabaseDeletedOn,
                timeLocalDataGuardEnabled,
                lastFailoverHappenedOn,
                lastRefreshHappenedOn,
                lastRefreshPointTimestamp,
                lastSwitchoverHappenedOn,
                freeAutonomousDatabaseStoppedOn,
                usedDataStorageSizeInGbs,
                usedDataStorageSizeInTbs,
                databaseOcid,
                backupRetentionPeriodInDays,
                whitelistedIps.ToList(),
                additionalBinaryDataProperties: null);
        }

        /// <summary> Autonomous Database clone resource model. </summary>
        /// <param name="adminPassword"> Admin password. </param>
        /// <param name="autonomousMaintenanceScheduleType"> The maintenance schedule type of the Autonomous Database Serverless. </param>
        /// <param name="characterSet"> The character set for the autonomous database. </param>
        /// <param name="computeCount"> The compute amount (CPUs) available to the database. </param>
        /// <param name="databaseComputeModel"> The compute model of the Autonomous Database. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores to be made available to the database. </param>
        /// <param name="customerContacts"> Customer Contacts. </param>
        /// <param name="dataStorageSizeInTbs"> The quantity of data in the database, in terabytes. </param>
        /// <param name="dataStorageSizeInGbs"> The size, in gigabytes, of the data volume that will be created and attached to the database. </param>
        /// <param name="dbVersion"> A valid Oracle Database version for Autonomous Database. </param>
        /// <param name="dbWorkload"> The Autonomous Database workload type. </param>
        /// <param name="displayName"> The user-friendly name for the Autonomous Database. </param>
        /// <param name="isAutoScalingEnabled"> Indicates if auto scaling is enabled for the Autonomous Database CPU core count. </param>
        /// <param name="isAutoScalingForStorageEnabled"> Indicates if auto scaling is enabled for the Autonomous Database storage. </param>
        /// <param name="peerDBIds"> The list of Azure resource IDs of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have Azure IDs. </param>
        /// <param name="peerDBId"> The Azure resource ID of the Disaster Recovery peer database, which is located in a different region from the current peer database. </param>
        /// <param name="isLocalDataGuardEnabled"> Indicates whether the Autonomous Database has local or called in-region Data Guard enabled. </param>
        /// <param name="isRemoteDataGuardEnabled"> Indicates whether the Autonomous Database has Cross Region Data Guard enabled. </param>
        /// <param name="localDisasterRecoveryType"> Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover. </param>
        /// <param name="disasterRecoveryRoleChangedOn"> The date and time the Disaster Recovery role was switched for the standby Autonomous Database. </param>
        /// <param name="remoteDisasterRecoveryConfiguration"> Indicates remote disaster recovery configuration. </param>
        /// <param name="localStandbyDB"> Local Autonomous Disaster Recovery standby database details. </param>
        /// <param name="failedDataRecoveryInSeconds"> Indicates the number of seconds of data loss for a Data Guard failover. </param>
        /// <param name="isMtlsConnectionRequired"> Specifies if the Autonomous Database requires mTLS connections. </param>
        /// <param name="isPreviewVersionWithServiceTermsAccepted"> Specifies if the Autonomous Database preview version is being provisioned. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED. </param>
        /// <param name="ncharacterSet"> The character set for the Autonomous Database. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <param name="lifecycleState"> Views lifecycleState. </param>
        /// <param name="scheduledOperationsList"> The list of scheduled operations. </param>
        /// <param name="privateEndpointIp"> The private endpoint Ip address for the resource. </param>
        /// <param name="privateEndpointLabel"> The resource's private endpoint label. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="subnetId"> Client subnet. </param>
        /// <param name="vnetId"> VNET for network connectivity. </param>
        /// <param name="createdOn"> The date and time that the database was created. </param>
        /// <param name="maintenanceBeginOn"> The date and time when maintenance will begin. </param>
        /// <param name="maintenanceEndOn"> The date and time when maintenance will end. </param>
        /// <param name="actualUsedDataStorageSizeInTbs"> The current amount of storage in use for user and system data, in terabytes (TB). </param>
        /// <param name="allocatedStorageSizeInTbs"> The amount of storage currently allocated for the database tables and billed for, rounded up. </param>
        /// <param name="apexDetails"> Information about Oracle APEX Application Development. </param>
        /// <param name="availableUpgradeVersions"> List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty. </param>
        /// <param name="connectionStrings"> The connection string used to connect to the Autonomous Database. </param>
        /// <param name="connectionUrls"> The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. . </param>
        /// <param name="dataSafeStatus"> Status of the Data Safe registration for this Autonomous Database. </param>
        /// <param name="databaseEdition"> The Oracle Database Edition that applies to the Autonomous databases. </param>
        /// <param name="autonomousDatabaseId"> Autonomous Database ID. </param>
        /// <param name="inMemoryAreaInGbs"> The area assigned to In-Memory tables in Autonomous Database. </param>
        /// <param name="nextLongTermBackupCreatedOn"> The date and time when the next long-term backup would be created. </param>
        /// <param name="longTermBackupSchedule"> Details for the long-term backup schedule. </param>
        /// <param name="isPreview"> Indicates if the Autonomous Database version is a preview version. </param>
        /// <param name="localAdgAutoFailoverMaxDataLossLimit"> Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard. </param>
        /// <param name="memoryPerOracleComputeUnitInGbs"> The amount of memory (in GBs) enabled per ECPU or OCPU. </param>
        /// <param name="openMode"> Indicates the Autonomous Database mode. </param>
        /// <param name="operationsInsightsStatus"> Status of Operations Insights for this Autonomous Database. </param>
        /// <param name="permissionLevel"> The Autonomous Database permission level. </param>
        /// <param name="privateEndpoint"> The private endpoint for the resource. </param>
        /// <param name="provisionableCpus"> An array of CPU values that an Autonomous Database can be scaled to. </param>
        /// <param name="role"> The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled. </param>
        /// <param name="serviceConsoleUri"> The URL of the Service Console for the Autonomous Database. </param>
        /// <param name="sqlWebDeveloperUri"> The SQL Web Developer URL for the Oracle Autonomous Database. </param>
        /// <param name="supportedRegionsToCloneTo"> The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database. </param>
        /// <param name="dataGuardRoleChangedOn"> The date and time the Autonomous Data Guard role was switched for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseDeletedOn"> The date and time the Always Free database will be automatically deleted because of inactivity. </param>
        /// <param name="timeLocalDataGuardEnabled"> The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database. </param>
        /// <param name="lastFailoverHappenedOn"> The timestamp of the last failover operation. </param>
        /// <param name="lastRefreshHappenedOn"> The date and time when last refresh happened. </param>
        /// <param name="lastRefreshPointTimestamp"> The refresh point timestamp (UTC). </param>
        /// <param name="lastSwitchoverHappenedOn"> The timestamp of the last switchover operation for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseStoppedOn"> The date and time the Always Free database will be stopped because of inactivity. </param>
        /// <param name="usedDataStorageSizeInGbs"> The storage space consumed by Autonomous Database in GBs. </param>
        /// <param name="usedDataStorageSizeInTbs"> The amount of storage that has been used, in terabytes. </param>
        /// <param name="databaseOcid"> Database ocid. </param>
        /// <param name="backupRetentionPeriodInDays"> Retention period, in days, for long-term backups. </param>
        /// <param name="whitelistedIps"> The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']. </param>
        /// <param name="source"> The source of the database. </param>
        /// <param name="sourceId"> The Azure resource ID of the Autonomous Database that was cloned to create the current Autonomous Database. </param>
        /// <param name="cloneType"> The Autonomous Database clone type. </param>
        /// <param name="isReconnectCloneEnabled"> Indicates if the refreshable clone can be reconnected to its source database. </param>
        /// <param name="isRefreshableClone"> Indicates if the Autonomous Database is a refreshable clone. </param>
        /// <param name="refreshableModel"> The refresh mode of the clone. </param>
        /// <param name="refreshableStatus"> The refresh status of the clone. </param>
        /// <param name="reconnectCloneEnabledOn"> The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseCloneProperties"/> instance for mocking. </returns>
        public static AutonomousDatabaseCloneProperties AutonomousDatabaseCloneProperties(string adminPassword = default, AutonomousMaintenanceScheduleType? autonomousMaintenanceScheduleType = default, string characterSet = default, float? computeCount = default, OracleDatabaseComputeModel? databaseComputeModel = default, int? cpuCoreCount = default, IEnumerable<OracleCustomerContact> customerContacts = default, int? dataStorageSizeInTbs = default, int? dataStorageSizeInGbs = default, string dbVersion = default, AutonomousDatabaseWorkloadType? dbWorkload = default, string displayName = default, bool? isAutoScalingEnabled = default, bool? isAutoScalingForStorageEnabled = default, IEnumerable<string> peerDBIds = default, string peerDBId = default, bool? isLocalDataGuardEnabled = default, bool? isRemoteDataGuardEnabled = default, DisasterRecoveryType? localDisasterRecoveryType = default, DateTimeOffset? disasterRecoveryRoleChangedOn = default, DisasterRecoveryConfigurationDetails remoteDisasterRecoveryConfiguration = default, AutonomousDatabaseStandbySummary localStandbyDB = default, int? failedDataRecoveryInSeconds = default, bool? isMtlsConnectionRequired = default, bool? isPreviewVersionWithServiceTermsAccepted = default, OracleLicenseModel? licenseModel = default, string ncharacterSet = default, string lifecycleDetails = default, OracleDatabaseProvisioningState? provisioningState = default, AutonomousDatabaseLifecycleState? lifecycleState = default, IEnumerable<ScheduledOperationsType> scheduledOperationsList = default, string privateEndpointIp = default, string privateEndpointLabel = default, Uri ociUri = default, ResourceIdentifier subnetId = default, ResourceIdentifier vnetId = default, DateTimeOffset? createdOn = default, DateTimeOffset? maintenanceBeginOn = default, DateTimeOffset? maintenanceEndOn = default, double? actualUsedDataStorageSizeInTbs = default, double? allocatedStorageSizeInTbs = default, OracleApexDetailsType apexDetails = default, IEnumerable<string> availableUpgradeVersions = default, AutonomousDatabaseConnectionStrings connectionStrings = default, AutonomousDatabaseConnectionUrls connectionUrls = default, DataSafeStatusType? dataSafeStatus = default, OracleDatabaseEditionType? databaseEdition = default, ResourceIdentifier autonomousDatabaseId = default, int? inMemoryAreaInGbs = default, DateTimeOffset? nextLongTermBackupCreatedOn = default, LongTermBackUpScheduleDetails longTermBackupSchedule = default, bool? isPreview = default, int? localAdgAutoFailoverMaxDataLossLimit = default, int? memoryPerOracleComputeUnitInGbs = default, AutonomousDatabaseModeType? openMode = default, OperationsInsightsStatusType? operationsInsightsStatus = default, AutonomousDatabasePermissionLevelType? permissionLevel = default, string privateEndpoint = default, IEnumerable<int> provisionableCpus = default, DataGuardRoleType? role = default, Uri serviceConsoleUri = default, Uri sqlWebDeveloperUri = default, IEnumerable<string> supportedRegionsToCloneTo = default, DateTimeOffset? dataGuardRoleChangedOn = default, DateTimeOffset? freeAutonomousDatabaseDeletedOn = default, string timeLocalDataGuardEnabled = default, DateTimeOffset? lastFailoverHappenedOn = default, DateTimeOffset? lastRefreshHappenedOn = default, DateTimeOffset? lastRefreshPointTimestamp = default, DateTimeOffset? lastSwitchoverHappenedOn = default, DateTimeOffset? freeAutonomousDatabaseStoppedOn = default, int? usedDataStorageSizeInGbs = default, int? usedDataStorageSizeInTbs = default, string databaseOcid = default, int? backupRetentionPeriodInDays = default, IEnumerable<string> whitelistedIps = default, AutonomousDatabaseSourceType? source = default, ResourceIdentifier sourceId = default, AutonomousDatabaseCloneType cloneType = default, bool? isReconnectCloneEnabled = default, bool? isRefreshableClone = default, RefreshableModelType? refreshableModel = default, RefreshableStatusType? refreshableStatus = default, DateTimeOffset? reconnectCloneEnabledOn = default)
        {
            customerContacts ??= new ChangeTrackingList<OracleCustomerContact>();
            peerDBIds ??= new ChangeTrackingList<string>();
            scheduledOperationsList ??= new ChangeTrackingList<ScheduledOperationsType>();
            availableUpgradeVersions ??= new ChangeTrackingList<string>();
            provisionableCpus ??= new ChangeTrackingList<int>();
            supportedRegionsToCloneTo ??= new ChangeTrackingList<string>();
            whitelistedIps ??= new ChangeTrackingList<string>();

            return new AutonomousDatabaseCloneProperties(
                adminPassword,
                OracleDataBaseType.Clone,
                autonomousMaintenanceScheduleType,
                characterSet,
                computeCount,
                databaseComputeModel,
                cpuCoreCount,
                customerContacts.ToList(),
                dataStorageSizeInTbs,
                dataStorageSizeInGbs,
                dbVersion,
                dbWorkload,
                displayName,
                isAutoScalingEnabled,
                isAutoScalingForStorageEnabled,
                peerDBIds.ToList(),
                peerDBId,
                isLocalDataGuardEnabled,
                isRemoteDataGuardEnabled,
                localDisasterRecoveryType,
                disasterRecoveryRoleChangedOn,
                remoteDisasterRecoveryConfiguration,
                localStandbyDB,
                failedDataRecoveryInSeconds,
                isMtlsConnectionRequired,
                isPreviewVersionWithServiceTermsAccepted,
                licenseModel,
                ncharacterSet,
                lifecycleDetails,
                provisioningState,
                lifecycleState,
                scheduledOperationsList.ToList(),
                privateEndpointIp,
                privateEndpointLabel,
                ociUri,
                subnetId,
                vnetId,
                createdOn,
                maintenanceBeginOn,
                maintenanceEndOn,
                actualUsedDataStorageSizeInTbs,
                allocatedStorageSizeInTbs,
                apexDetails,
                availableUpgradeVersions.ToList(),
                connectionStrings,
                connectionUrls,
                dataSafeStatus,
                databaseEdition,
                autonomousDatabaseId,
                inMemoryAreaInGbs,
                nextLongTermBackupCreatedOn,
                longTermBackupSchedule,
                isPreview,
                localAdgAutoFailoverMaxDataLossLimit,
                memoryPerOracleComputeUnitInGbs,
                openMode,
                operationsInsightsStatus,
                permissionLevel,
                privateEndpoint,
                provisionableCpus.ToList(),
                role,
                serviceConsoleUri,
                sqlWebDeveloperUri,
                supportedRegionsToCloneTo.ToList(),
                dataGuardRoleChangedOn,
                freeAutonomousDatabaseDeletedOn,
                timeLocalDataGuardEnabled,
                lastFailoverHappenedOn,
                lastRefreshHappenedOn,
                lastRefreshPointTimestamp,
                lastSwitchoverHappenedOn,
                freeAutonomousDatabaseStoppedOn,
                usedDataStorageSizeInGbs,
                usedDataStorageSizeInTbs,
                databaseOcid,
                backupRetentionPeriodInDays,
                whitelistedIps.ToList(),
                additionalBinaryDataProperties: null,
                source,
                sourceId,
                cloneType,
                isReconnectCloneEnabled,
                isRefreshableClone,
                refreshableModel,
                refreshableStatus,
                reconnectCloneEnabledOn);
        }

        /// <summary> Autonomous Database Cross Region Disaster Recovery resource model. </summary>
        /// <param name="adminPassword"> Admin password. </param>
        /// <param name="autonomousMaintenanceScheduleType"> The maintenance schedule type of the Autonomous Database Serverless. </param>
        /// <param name="characterSet"> The character set for the autonomous database. </param>
        /// <param name="computeCount"> The compute amount (CPUs) available to the database. </param>
        /// <param name="databaseComputeModel"> The compute model of the Autonomous Database. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores to be made available to the database. </param>
        /// <param name="customerContacts"> Customer Contacts. </param>
        /// <param name="dataStorageSizeInTbs"> The quantity of data in the database, in terabytes. </param>
        /// <param name="dataStorageSizeInGbs"> The size, in gigabytes, of the data volume that will be created and attached to the database. </param>
        /// <param name="dbVersion"> A valid Oracle Database version for Autonomous Database. </param>
        /// <param name="dbWorkload"> The Autonomous Database workload type. </param>
        /// <param name="displayName"> The user-friendly name for the Autonomous Database. </param>
        /// <param name="isAutoScalingEnabled"> Indicates if auto scaling is enabled for the Autonomous Database CPU core count. </param>
        /// <param name="isAutoScalingForStorageEnabled"> Indicates if auto scaling is enabled for the Autonomous Database storage. </param>
        /// <param name="peerDBIds"> The list of Azure resource IDs of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have Azure IDs. </param>
        /// <param name="peerDBId"> The Azure resource ID of the Disaster Recovery peer database, which is located in a different region from the current peer database. </param>
        /// <param name="isLocalDataGuardEnabled"> Indicates whether the Autonomous Database has local or called in-region Data Guard enabled. </param>
        /// <param name="isRemoteDataGuardEnabled"> Indicates whether the Autonomous Database has Cross Region Data Guard enabled. </param>
        /// <param name="localDisasterRecoveryType"> Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover. </param>
        /// <param name="disasterRecoveryRoleChangedOn"> The date and time the Disaster Recovery role was switched for the standby Autonomous Database. </param>
        /// <param name="remoteDisasterRecoveryConfiguration"> Indicates remote disaster recovery configuration. </param>
        /// <param name="localStandbyDB"> Local Autonomous Disaster Recovery standby database details. </param>
        /// <param name="failedDataRecoveryInSeconds"> Indicates the number of seconds of data loss for a Data Guard failover. </param>
        /// <param name="isMtlsConnectionRequired"> Specifies if the Autonomous Database requires mTLS connections. </param>
        /// <param name="isPreviewVersionWithServiceTermsAccepted"> Specifies if the Autonomous Database preview version is being provisioned. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED. </param>
        /// <param name="ncharacterSet"> The character set for the Autonomous Database. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <param name="lifecycleState"> Views lifecycleState. </param>
        /// <param name="scheduledOperationsList"> The list of scheduled operations. </param>
        /// <param name="privateEndpointIp"> The private endpoint Ip address for the resource. </param>
        /// <param name="privateEndpointLabel"> The resource's private endpoint label. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="subnetId"> Client subnet. </param>
        /// <param name="vnetId"> VNET for network connectivity. </param>
        /// <param name="createdOn"> The date and time that the database was created. </param>
        /// <param name="maintenanceBeginOn"> The date and time when maintenance will begin. </param>
        /// <param name="maintenanceEndOn"> The date and time when maintenance will end. </param>
        /// <param name="actualUsedDataStorageSizeInTbs"> The current amount of storage in use for user and system data, in terabytes (TB). </param>
        /// <param name="allocatedStorageSizeInTbs"> The amount of storage currently allocated for the database tables and billed for, rounded up. </param>
        /// <param name="apexDetails"> Information about Oracle APEX Application Development. </param>
        /// <param name="availableUpgradeVersions"> List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty. </param>
        /// <param name="connectionStrings"> The connection string used to connect to the Autonomous Database. </param>
        /// <param name="connectionUrls"> The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. . </param>
        /// <param name="dataSafeStatus"> Status of the Data Safe registration for this Autonomous Database. </param>
        /// <param name="databaseEdition"> The Oracle Database Edition that applies to the Autonomous databases. </param>
        /// <param name="autonomousDatabaseId"> Autonomous Database ID. </param>
        /// <param name="inMemoryAreaInGbs"> The area assigned to In-Memory tables in Autonomous Database. </param>
        /// <param name="nextLongTermBackupCreatedOn"> The date and time when the next long-term backup would be created. </param>
        /// <param name="longTermBackupSchedule"> Details for the long-term backup schedule. </param>
        /// <param name="isPreview"> Indicates if the Autonomous Database version is a preview version. </param>
        /// <param name="localAdgAutoFailoverMaxDataLossLimit"> Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard. </param>
        /// <param name="memoryPerOracleComputeUnitInGbs"> The amount of memory (in GBs) enabled per ECPU or OCPU. </param>
        /// <param name="openMode"> Indicates the Autonomous Database mode. </param>
        /// <param name="operationsInsightsStatus"> Status of Operations Insights for this Autonomous Database. </param>
        /// <param name="permissionLevel"> The Autonomous Database permission level. </param>
        /// <param name="privateEndpoint"> The private endpoint for the resource. </param>
        /// <param name="provisionableCpus"> An array of CPU values that an Autonomous Database can be scaled to. </param>
        /// <param name="role"> The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled. </param>
        /// <param name="serviceConsoleUri"> The URL of the Service Console for the Autonomous Database. </param>
        /// <param name="sqlWebDeveloperUri"> The SQL Web Developer URL for the Oracle Autonomous Database. </param>
        /// <param name="supportedRegionsToCloneTo"> The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database. </param>
        /// <param name="dataGuardRoleChangedOn"> The date and time the Autonomous Data Guard role was switched for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseDeletedOn"> The date and time the Always Free database will be automatically deleted because of inactivity. </param>
        /// <param name="timeLocalDataGuardEnabled"> The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database. </param>
        /// <param name="lastFailoverHappenedOn"> The timestamp of the last failover operation. </param>
        /// <param name="lastRefreshHappenedOn"> The date and time when last refresh happened. </param>
        /// <param name="lastRefreshPointTimestamp"> The refresh point timestamp (UTC). </param>
        /// <param name="lastSwitchoverHappenedOn"> The timestamp of the last switchover operation for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseStoppedOn"> The date and time the Always Free database will be stopped because of inactivity. </param>
        /// <param name="usedDataStorageSizeInGbs"> The storage space consumed by Autonomous Database in GBs. </param>
        /// <param name="usedDataStorageSizeInTbs"> The amount of storage that has been used, in terabytes. </param>
        /// <param name="databaseOcid"> Database ocid. </param>
        /// <param name="backupRetentionPeriodInDays"> Retention period, in days, for long-term backups. </param>
        /// <param name="whitelistedIps"> The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']. </param>
        /// <param name="source"> The source of the database. </param>
        /// <param name="sourceId"> The Azure ID of the source Autonomous Database that will be used to create a new peer database for the DR association. </param>
        /// <param name="sourceLocation"> The name of the region where source Autonomous Database exists. </param>
        /// <param name="sourceOcid"> The source database ocid. </param>
        /// <param name="remoteDisasterRecoveryType"> Indicates the cross-region disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover. </param>
        /// <param name="isReplicateAutomaticBackups"> If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseCrossRegionDisasterRecoveryProperties"/> instance for mocking. </returns>
        public static AutonomousDatabaseCrossRegionDisasterRecoveryProperties AutonomousDatabaseCrossRegionDisasterRecoveryProperties(string adminPassword = default, AutonomousMaintenanceScheduleType? autonomousMaintenanceScheduleType = default, string characterSet = default, float? computeCount = default, OracleDatabaseComputeModel? databaseComputeModel = default, int? cpuCoreCount = default, IEnumerable<OracleCustomerContact> customerContacts = default, int? dataStorageSizeInTbs = default, int? dataStorageSizeInGbs = default, string dbVersion = default, AutonomousDatabaseWorkloadType? dbWorkload = default, string displayName = default, bool? isAutoScalingEnabled = default, bool? isAutoScalingForStorageEnabled = default, IEnumerable<string> peerDBIds = default, string peerDBId = default, bool? isLocalDataGuardEnabled = default, bool? isRemoteDataGuardEnabled = default, DisasterRecoveryType? localDisasterRecoveryType = default, DateTimeOffset? disasterRecoveryRoleChangedOn = default, DisasterRecoveryConfigurationDetails remoteDisasterRecoveryConfiguration = default, AutonomousDatabaseStandbySummary localStandbyDB = default, int? failedDataRecoveryInSeconds = default, bool? isMtlsConnectionRequired = default, bool? isPreviewVersionWithServiceTermsAccepted = default, OracleLicenseModel? licenseModel = default, string ncharacterSet = default, string lifecycleDetails = default, OracleDatabaseProvisioningState? provisioningState = default, AutonomousDatabaseLifecycleState? lifecycleState = default, IEnumerable<ScheduledOperationsType> scheduledOperationsList = default, string privateEndpointIp = default, string privateEndpointLabel = default, Uri ociUri = default, ResourceIdentifier subnetId = default, ResourceIdentifier vnetId = default, DateTimeOffset? createdOn = default, DateTimeOffset? maintenanceBeginOn = default, DateTimeOffset? maintenanceEndOn = default, double? actualUsedDataStorageSizeInTbs = default, double? allocatedStorageSizeInTbs = default, OracleApexDetailsType apexDetails = default, IEnumerable<string> availableUpgradeVersions = default, AutonomousDatabaseConnectionStrings connectionStrings = default, AutonomousDatabaseConnectionUrls connectionUrls = default, DataSafeStatusType? dataSafeStatus = default, OracleDatabaseEditionType? databaseEdition = default, ResourceIdentifier autonomousDatabaseId = default, int? inMemoryAreaInGbs = default, DateTimeOffset? nextLongTermBackupCreatedOn = default, LongTermBackUpScheduleDetails longTermBackupSchedule = default, bool? isPreview = default, int? localAdgAutoFailoverMaxDataLossLimit = default, int? memoryPerOracleComputeUnitInGbs = default, AutonomousDatabaseModeType? openMode = default, OperationsInsightsStatusType? operationsInsightsStatus = default, AutonomousDatabasePermissionLevelType? permissionLevel = default, string privateEndpoint = default, IEnumerable<int> provisionableCpus = default, DataGuardRoleType? role = default, Uri serviceConsoleUri = default, Uri sqlWebDeveloperUri = default, IEnumerable<string> supportedRegionsToCloneTo = default, DateTimeOffset? dataGuardRoleChangedOn = default, DateTimeOffset? freeAutonomousDatabaseDeletedOn = default, string timeLocalDataGuardEnabled = default, DateTimeOffset? lastFailoverHappenedOn = default, DateTimeOffset? lastRefreshHappenedOn = default, DateTimeOffset? lastRefreshPointTimestamp = default, DateTimeOffset? lastSwitchoverHappenedOn = default, DateTimeOffset? freeAutonomousDatabaseStoppedOn = default, int? usedDataStorageSizeInGbs = default, int? usedDataStorageSizeInTbs = default, string databaseOcid = default, int? backupRetentionPeriodInDays = default, IEnumerable<string> whitelistedIps = default, AutonomousDatabaseSourceType source = default, ResourceIdentifier sourceId = default, string sourceLocation = default, string sourceOcid = default, DisasterRecoveryType remoteDisasterRecoveryType = default, bool? isReplicateAutomaticBackups = default)
        {
            customerContacts ??= new ChangeTrackingList<OracleCustomerContact>();
            peerDBIds ??= new ChangeTrackingList<string>();
            scheduledOperationsList ??= new ChangeTrackingList<ScheduledOperationsType>();
            availableUpgradeVersions ??= new ChangeTrackingList<string>();
            provisionableCpus ??= new ChangeTrackingList<int>();
            supportedRegionsToCloneTo ??= new ChangeTrackingList<string>();
            whitelistedIps ??= new ChangeTrackingList<string>();

            return new AutonomousDatabaseCrossRegionDisasterRecoveryProperties(
                adminPassword,
                OracleDataBaseType.CrossRegionDisasterRecovery,
                autonomousMaintenanceScheduleType,
                characterSet,
                computeCount,
                databaseComputeModel,
                cpuCoreCount,
                customerContacts.ToList(),
                dataStorageSizeInTbs,
                dataStorageSizeInGbs,
                dbVersion,
                dbWorkload,
                displayName,
                isAutoScalingEnabled,
                isAutoScalingForStorageEnabled,
                peerDBIds.ToList(),
                peerDBId,
                isLocalDataGuardEnabled,
                isRemoteDataGuardEnabled,
                localDisasterRecoveryType,
                disasterRecoveryRoleChangedOn,
                remoteDisasterRecoveryConfiguration,
                localStandbyDB,
                failedDataRecoveryInSeconds,
                isMtlsConnectionRequired,
                isPreviewVersionWithServiceTermsAccepted,
                licenseModel,
                ncharacterSet,
                lifecycleDetails,
                provisioningState,
                lifecycleState,
                scheduledOperationsList.ToList(),
                privateEndpointIp,
                privateEndpointLabel,
                ociUri,
                subnetId,
                vnetId,
                createdOn,
                maintenanceBeginOn,
                maintenanceEndOn,
                actualUsedDataStorageSizeInTbs,
                allocatedStorageSizeInTbs,
                apexDetails,
                availableUpgradeVersions.ToList(),
                connectionStrings,
                connectionUrls,
                dataSafeStatus,
                databaseEdition,
                autonomousDatabaseId,
                inMemoryAreaInGbs,
                nextLongTermBackupCreatedOn,
                longTermBackupSchedule,
                isPreview,
                localAdgAutoFailoverMaxDataLossLimit,
                memoryPerOracleComputeUnitInGbs,
                openMode,
                operationsInsightsStatus,
                permissionLevel,
                privateEndpoint,
                provisionableCpus.ToList(),
                role,
                serviceConsoleUri,
                sqlWebDeveloperUri,
                supportedRegionsToCloneTo.ToList(),
                dataGuardRoleChangedOn,
                freeAutonomousDatabaseDeletedOn,
                timeLocalDataGuardEnabled,
                lastFailoverHappenedOn,
                lastRefreshHappenedOn,
                lastRefreshPointTimestamp,
                lastSwitchoverHappenedOn,
                freeAutonomousDatabaseStoppedOn,
                usedDataStorageSizeInGbs,
                usedDataStorageSizeInTbs,
                databaseOcid,
                backupRetentionPeriodInDays,
                whitelistedIps.ToList(),
                additionalBinaryDataProperties: null,
                source,
                sourceId,
                sourceLocation,
                sourceOcid,
                remoteDisasterRecoveryType,
                isReplicateAutomaticBackups);
        }

        /// <summary> Autonomous Database From Backup Timestamp resource model. </summary>
        /// <param name="adminPassword"> Admin password. </param>
        /// <param name="autonomousMaintenanceScheduleType"> The maintenance schedule type of the Autonomous Database Serverless. </param>
        /// <param name="characterSet"> The character set for the autonomous database. </param>
        /// <param name="computeCount"> The compute amount (CPUs) available to the database. </param>
        /// <param name="databaseComputeModel"> The compute model of the Autonomous Database. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores to be made available to the database. </param>
        /// <param name="customerContacts"> Customer Contacts. </param>
        /// <param name="dataStorageSizeInTbs"> The quantity of data in the database, in terabytes. </param>
        /// <param name="dataStorageSizeInGbs"> The size, in gigabytes, of the data volume that will be created and attached to the database. </param>
        /// <param name="dbVersion"> A valid Oracle Database version for Autonomous Database. </param>
        /// <param name="dbWorkload"> The Autonomous Database workload type. </param>
        /// <param name="displayName"> The user-friendly name for the Autonomous Database. </param>
        /// <param name="isAutoScalingEnabled"> Indicates if auto scaling is enabled for the Autonomous Database CPU core count. </param>
        /// <param name="isAutoScalingForStorageEnabled"> Indicates if auto scaling is enabled for the Autonomous Database storage. </param>
        /// <param name="peerDBIds"> The list of Azure resource IDs of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have Azure IDs. </param>
        /// <param name="peerDBId"> The Azure resource ID of the Disaster Recovery peer database, which is located in a different region from the current peer database. </param>
        /// <param name="isLocalDataGuardEnabled"> Indicates whether the Autonomous Database has local or called in-region Data Guard enabled. </param>
        /// <param name="isRemoteDataGuardEnabled"> Indicates whether the Autonomous Database has Cross Region Data Guard enabled. </param>
        /// <param name="localDisasterRecoveryType"> Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover. </param>
        /// <param name="disasterRecoveryRoleChangedOn"> The date and time the Disaster Recovery role was switched for the standby Autonomous Database. </param>
        /// <param name="remoteDisasterRecoveryConfiguration"> Indicates remote disaster recovery configuration. </param>
        /// <param name="localStandbyDB"> Local Autonomous Disaster Recovery standby database details. </param>
        /// <param name="failedDataRecoveryInSeconds"> Indicates the number of seconds of data loss for a Data Guard failover. </param>
        /// <param name="isMtlsConnectionRequired"> Specifies if the Autonomous Database requires mTLS connections. </param>
        /// <param name="isPreviewVersionWithServiceTermsAccepted"> Specifies if the Autonomous Database preview version is being provisioned. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED. </param>
        /// <param name="ncharacterSet"> The character set for the Autonomous Database. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <param name="lifecycleState"> Views lifecycleState. </param>
        /// <param name="scheduledOperationsList"> The list of scheduled operations. </param>
        /// <param name="privateEndpointIp"> The private endpoint Ip address for the resource. </param>
        /// <param name="privateEndpointLabel"> The resource's private endpoint label. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="subnetId"> Client subnet. </param>
        /// <param name="vnetId"> VNET for network connectivity. </param>
        /// <param name="createdOn"> The date and time that the database was created. </param>
        /// <param name="maintenanceBeginOn"> The date and time when maintenance will begin. </param>
        /// <param name="maintenanceEndOn"> The date and time when maintenance will end. </param>
        /// <param name="actualUsedDataStorageSizeInTbs"> The current amount of storage in use for user and system data, in terabytes (TB). </param>
        /// <param name="allocatedStorageSizeInTbs"> The amount of storage currently allocated for the database tables and billed for, rounded up. </param>
        /// <param name="apexDetails"> Information about Oracle APEX Application Development. </param>
        /// <param name="availableUpgradeVersions"> List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty. </param>
        /// <param name="connectionStrings"> The connection string used to connect to the Autonomous Database. </param>
        /// <param name="connectionUrls"> The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. . </param>
        /// <param name="dataSafeStatus"> Status of the Data Safe registration for this Autonomous Database. </param>
        /// <param name="databaseEdition"> The Oracle Database Edition that applies to the Autonomous databases. </param>
        /// <param name="autonomousDatabaseId"> Autonomous Database ID. </param>
        /// <param name="inMemoryAreaInGbs"> The area assigned to In-Memory tables in Autonomous Database. </param>
        /// <param name="nextLongTermBackupCreatedOn"> The date and time when the next long-term backup would be created. </param>
        /// <param name="longTermBackupSchedule"> Details for the long-term backup schedule. </param>
        /// <param name="isPreview"> Indicates if the Autonomous Database version is a preview version. </param>
        /// <param name="localAdgAutoFailoverMaxDataLossLimit"> Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard. </param>
        /// <param name="memoryPerOracleComputeUnitInGbs"> The amount of memory (in GBs) enabled per ECPU or OCPU. </param>
        /// <param name="openMode"> Indicates the Autonomous Database mode. </param>
        /// <param name="operationsInsightsStatus"> Status of Operations Insights for this Autonomous Database. </param>
        /// <param name="permissionLevel"> The Autonomous Database permission level. </param>
        /// <param name="privateEndpoint"> The private endpoint for the resource. </param>
        /// <param name="provisionableCpus"> An array of CPU values that an Autonomous Database can be scaled to. </param>
        /// <param name="role"> The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled. </param>
        /// <param name="serviceConsoleUri"> The URL of the Service Console for the Autonomous Database. </param>
        /// <param name="sqlWebDeveloperUri"> The SQL Web Developer URL for the Oracle Autonomous Database. </param>
        /// <param name="supportedRegionsToCloneTo"> The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database. </param>
        /// <param name="dataGuardRoleChangedOn"> The date and time the Autonomous Data Guard role was switched for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseDeletedOn"> The date and time the Always Free database will be automatically deleted because of inactivity. </param>
        /// <param name="timeLocalDataGuardEnabled"> The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database. </param>
        /// <param name="lastFailoverHappenedOn"> The timestamp of the last failover operation. </param>
        /// <param name="lastRefreshHappenedOn"> The date and time when last refresh happened. </param>
        /// <param name="lastRefreshPointTimestamp"> The refresh point timestamp (UTC). </param>
        /// <param name="lastSwitchoverHappenedOn"> The timestamp of the last switchover operation for the Autonomous Database. </param>
        /// <param name="freeAutonomousDatabaseStoppedOn"> The date and time the Always Free database will be stopped because of inactivity. </param>
        /// <param name="usedDataStorageSizeInGbs"> The storage space consumed by Autonomous Database in GBs. </param>
        /// <param name="usedDataStorageSizeInTbs"> The amount of storage that has been used, in terabytes. </param>
        /// <param name="databaseOcid"> Database ocid. </param>
        /// <param name="backupRetentionPeriodInDays"> Retention period, in days, for long-term backups. </param>
        /// <param name="whitelistedIps"> The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']. </param>
        /// <param name="source"> The source of the database. </param>
        /// <param name="sourceId"> The ID of the source Autonomous Database that you will clone to create a new Autonomous Database. </param>
        /// <param name="cloneType"> The Autonomous Database clone type. </param>
        /// <param name="timestamp"> The timestamp specified for the point-in-time clone of the source Autonomous Database. The timestamp must be in the past. </param>
        /// <param name="useLatestAvailableBackupTimeStamp"> Clone from latest available backup timestamp. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseFromBackupTimestampProperties"/> instance for mocking. </returns>
        public static AutonomousDatabaseFromBackupTimestampProperties AutonomousDatabaseFromBackupTimestampProperties(string adminPassword = default, AutonomousMaintenanceScheduleType? autonomousMaintenanceScheduleType = default, string characterSet = default, float? computeCount = default, OracleDatabaseComputeModel? databaseComputeModel = default, int? cpuCoreCount = default, IEnumerable<OracleCustomerContact> customerContacts = default, int? dataStorageSizeInTbs = default, int? dataStorageSizeInGbs = default, string dbVersion = default, AutonomousDatabaseWorkloadType? dbWorkload = default, string displayName = default, bool? isAutoScalingEnabled = default, bool? isAutoScalingForStorageEnabled = default, IEnumerable<string> peerDBIds = default, string peerDBId = default, bool? isLocalDataGuardEnabled = default, bool? isRemoteDataGuardEnabled = default, DisasterRecoveryType? localDisasterRecoveryType = default, DateTimeOffset? disasterRecoveryRoleChangedOn = default, DisasterRecoveryConfigurationDetails remoteDisasterRecoveryConfiguration = default, AutonomousDatabaseStandbySummary localStandbyDB = default, int? failedDataRecoveryInSeconds = default, bool? isMtlsConnectionRequired = default, bool? isPreviewVersionWithServiceTermsAccepted = default, OracleLicenseModel? licenseModel = default, string ncharacterSet = default, string lifecycleDetails = default, OracleDatabaseProvisioningState? provisioningState = default, AutonomousDatabaseLifecycleState? lifecycleState = default, IEnumerable<ScheduledOperationsType> scheduledOperationsList = default, string privateEndpointIp = default, string privateEndpointLabel = default, Uri ociUri = default, ResourceIdentifier subnetId = default, ResourceIdentifier vnetId = default, DateTimeOffset? createdOn = default, DateTimeOffset? maintenanceBeginOn = default, DateTimeOffset? maintenanceEndOn = default, double? actualUsedDataStorageSizeInTbs = default, double? allocatedStorageSizeInTbs = default, OracleApexDetailsType apexDetails = default, IEnumerable<string> availableUpgradeVersions = default, AutonomousDatabaseConnectionStrings connectionStrings = default, AutonomousDatabaseConnectionUrls connectionUrls = default, DataSafeStatusType? dataSafeStatus = default, OracleDatabaseEditionType? databaseEdition = default, ResourceIdentifier autonomousDatabaseId = default, int? inMemoryAreaInGbs = default, DateTimeOffset? nextLongTermBackupCreatedOn = default, LongTermBackUpScheduleDetails longTermBackupSchedule = default, bool? isPreview = default, int? localAdgAutoFailoverMaxDataLossLimit = default, int? memoryPerOracleComputeUnitInGbs = default, AutonomousDatabaseModeType? openMode = default, OperationsInsightsStatusType? operationsInsightsStatus = default, AutonomousDatabasePermissionLevelType? permissionLevel = default, string privateEndpoint = default, IEnumerable<int> provisionableCpus = default, DataGuardRoleType? role = default, Uri serviceConsoleUri = default, Uri sqlWebDeveloperUri = default, IEnumerable<string> supportedRegionsToCloneTo = default, DateTimeOffset? dataGuardRoleChangedOn = default, DateTimeOffset? freeAutonomousDatabaseDeletedOn = default, string timeLocalDataGuardEnabled = default, DateTimeOffset? lastFailoverHappenedOn = default, DateTimeOffset? lastRefreshHappenedOn = default, DateTimeOffset? lastRefreshPointTimestamp = default, DateTimeOffset? lastSwitchoverHappenedOn = default, DateTimeOffset? freeAutonomousDatabaseStoppedOn = default, int? usedDataStorageSizeInGbs = default, int? usedDataStorageSizeInTbs = default, string databaseOcid = default, int? backupRetentionPeriodInDays = default, IEnumerable<string> whitelistedIps = default, AutonomousDatabaseSourceType source = default, ResourceIdentifier sourceId = default, AutonomousDatabaseCloneType cloneType = default, DateTimeOffset? timestamp = default, bool? useLatestAvailableBackupTimeStamp = default)
        {
            customerContacts ??= new ChangeTrackingList<OracleCustomerContact>();
            peerDBIds ??= new ChangeTrackingList<string>();
            scheduledOperationsList ??= new ChangeTrackingList<ScheduledOperationsType>();
            availableUpgradeVersions ??= new ChangeTrackingList<string>();
            provisionableCpus ??= new ChangeTrackingList<int>();
            supportedRegionsToCloneTo ??= new ChangeTrackingList<string>();
            whitelistedIps ??= new ChangeTrackingList<string>();

            return new AutonomousDatabaseFromBackupTimestampProperties(
                adminPassword,
                OracleDataBaseType.CloneFromBackupTimestamp,
                autonomousMaintenanceScheduleType,
                characterSet,
                computeCount,
                databaseComputeModel,
                cpuCoreCount,
                customerContacts.ToList(),
                dataStorageSizeInTbs,
                dataStorageSizeInGbs,
                dbVersion,
                dbWorkload,
                displayName,
                isAutoScalingEnabled,
                isAutoScalingForStorageEnabled,
                peerDBIds.ToList(),
                peerDBId,
                isLocalDataGuardEnabled,
                isRemoteDataGuardEnabled,
                localDisasterRecoveryType,
                disasterRecoveryRoleChangedOn,
                remoteDisasterRecoveryConfiguration,
                localStandbyDB,
                failedDataRecoveryInSeconds,
                isMtlsConnectionRequired,
                isPreviewVersionWithServiceTermsAccepted,
                licenseModel,
                ncharacterSet,
                lifecycleDetails,
                provisioningState,
                lifecycleState,
                scheduledOperationsList.ToList(),
                privateEndpointIp,
                privateEndpointLabel,
                ociUri,
                subnetId,
                vnetId,
                createdOn,
                maintenanceBeginOn,
                maintenanceEndOn,
                actualUsedDataStorageSizeInTbs,
                allocatedStorageSizeInTbs,
                apexDetails,
                availableUpgradeVersions.ToList(),
                connectionStrings,
                connectionUrls,
                dataSafeStatus,
                databaseEdition,
                autonomousDatabaseId,
                inMemoryAreaInGbs,
                nextLongTermBackupCreatedOn,
                longTermBackupSchedule,
                isPreview,
                localAdgAutoFailoverMaxDataLossLimit,
                memoryPerOracleComputeUnitInGbs,
                openMode,
                operationsInsightsStatus,
                permissionLevel,
                privateEndpoint,
                provisionableCpus.ToList(),
                role,
                serviceConsoleUri,
                sqlWebDeveloperUri,
                supportedRegionsToCloneTo.ToList(),
                dataGuardRoleChangedOn,
                freeAutonomousDatabaseDeletedOn,
                timeLocalDataGuardEnabled,
                lastFailoverHappenedOn,
                lastRefreshHappenedOn,
                lastRefreshPointTimestamp,
                lastSwitchoverHappenedOn,
                freeAutonomousDatabaseStoppedOn,
                usedDataStorageSizeInGbs,
                usedDataStorageSizeInTbs,
                databaseOcid,
                backupRetentionPeriodInDays,
                whitelistedIps.ToList(),
                additionalBinaryDataProperties: null,
                source,
                sourceId,
                cloneType,
                timestamp,
                useLatestAvailableBackupTimeStamp);
        }

        /// <summary> The type used for update operations of the AutonomousDatabase. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabasePatch"/> instance for mocking. </returns>
        public static AutonomousDatabasePatch AutonomousDatabasePatch(IDictionary<string, string> tags = default, AutonomousDatabaseUpdateProperties properties = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new AutonomousDatabasePatch(tags, properties, additionalBinaryDataProperties: null);
        }

        /// <summary> The updatable properties of the AutonomousDatabase. </summary>
        /// <param name="adminPassword"> Admin password. </param>
        /// <param name="autonomousMaintenanceScheduleType"> The maintenance schedule type of the Autonomous Database Serverless. </param>
        /// <param name="computeCount"> The compute amount (CPUs) available to the database. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores to be made available to the database. </param>
        /// <param name="customerContacts"> Customer Contacts. </param>
        /// <param name="dataStorageSizeInTbs"> The quantity of data in the database, in terabytes. </param>
        /// <param name="dataStorageSizeInGbs"> The size, in gigabytes, of the data volume that will be created and attached to the database. </param>
        /// <param name="displayName"> The user-friendly name for the Autonomous Database. </param>
        /// <param name="isAutoScalingEnabled"> Indicates if auto scaling is enabled for the Autonomous Database CPU core count. </param>
        /// <param name="isAutoScalingForStorageEnabled"> Indicates if auto scaling is enabled for the Autonomous Database storage. </param>
        /// <param name="peerDBId"> The Azure resource ID of the Disaster Recovery peer database, which is located in a different region from the current peer database. </param>
        /// <param name="isLocalDataGuardEnabled"> Indicates whether the Autonomous Database has local or called in-region Data Guard enabled. </param>
        /// <param name="isMtlsConnectionRequired"> Specifies if the Autonomous Database requires mTLS connections. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED. </param>
        /// <param name="scheduledOperationsList"> The list of scheduled operations. </param>
        /// <param name="databaseEdition"> The Oracle Database Edition that applies to the Autonomous databases. </param>
        /// <param name="longTermBackupSchedule"> Details for the long-term backup schedule. </param>
        /// <param name="localAdgAutoFailoverMaxDataLossLimit"> Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard. </param>
        /// <param name="openMode"> Indicates the Autonomous Database mode. </param>
        /// <param name="permissionLevel"> The Autonomous Database permission level. </param>
        /// <param name="role"> The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled. </param>
        /// <param name="backupRetentionPeriodInDays"> Retention period, in days, for long-term backups. </param>
        /// <param name="whitelistedIps"> The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseUpdateProperties"/> instance for mocking. </returns>
        public static AutonomousDatabaseUpdateProperties AutonomousDatabaseUpdateProperties(string adminPassword = default, AutonomousMaintenanceScheduleType? autonomousMaintenanceScheduleType = default, float? computeCount = default, int? cpuCoreCount = default, IEnumerable<OracleCustomerContact> customerContacts = default, int? dataStorageSizeInTbs = default, int? dataStorageSizeInGbs = default, string displayName = default, bool? isAutoScalingEnabled = default, bool? isAutoScalingForStorageEnabled = default, string peerDBId = default, bool? isLocalDataGuardEnabled = default, bool? isMtlsConnectionRequired = default, OracleLicenseModel? licenseModel = default, IEnumerable<ScheduledOperationsTypeUpdate> scheduledOperationsList = default, OracleDatabaseEditionType? databaseEdition = default, LongTermBackUpScheduleDetails longTermBackupSchedule = default, int? localAdgAutoFailoverMaxDataLossLimit = default, AutonomousDatabaseModeType? openMode = default, AutonomousDatabasePermissionLevelType? permissionLevel = default, DataGuardRoleType? role = default, int? backupRetentionPeriodInDays = default, IEnumerable<string> whitelistedIps = default)
        {
            customerContacts ??= new ChangeTrackingList<OracleCustomerContact>();
            scheduledOperationsList ??= new ChangeTrackingList<ScheduledOperationsTypeUpdate>();
            whitelistedIps ??= new ChangeTrackingList<string>();

            return new AutonomousDatabaseUpdateProperties(
                adminPassword,
                autonomousMaintenanceScheduleType,
                computeCount,
                cpuCoreCount,
                customerContacts.ToList(),
                dataStorageSizeInTbs,
                dataStorageSizeInGbs,
                displayName,
                isAutoScalingEnabled,
                isAutoScalingForStorageEnabled,
                peerDBId,
                isLocalDataGuardEnabled,
                isMtlsConnectionRequired,
                licenseModel,
                scheduledOperationsList.ToList(),
                databaseEdition,
                longTermBackupSchedule,
                localAdgAutoFailoverMaxDataLossLimit,
                openMode,
                permissionLevel,
                role,
                backupRetentionPeriodInDays,
                whitelistedIps.ToList(),
                additionalBinaryDataProperties: null);
        }

        /// <summary> Autonomous Database Generate Wallet resource model. </summary>
        /// <param name="generateType"> The type of wallet to generate. </param>
        /// <param name="isRegional"> True when requesting regional connection strings in PDB connect info, applicable to cross-region DG only. </param>
        /// <param name="password"> The password to encrypt the keys inside the wallet. </param>
        /// <returns> A new <see cref="Models.GenerateAutonomousDatabaseWalletDetails"/> instance for mocking. </returns>
        public static GenerateAutonomousDatabaseWalletDetails GenerateAutonomousDatabaseWalletDetails(WalletGenerateType? generateType = default, bool? isRegional = default, string password = default)
        {
            return new GenerateAutonomousDatabaseWalletDetails(generateType, isRegional, password, additionalBinaryDataProperties: null);
        }

        /// <summary> Autonomous Database Wallet File resource model. </summary>
        /// <param name="walletFiles"> The base64 encoded wallet files. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseWalletFile"/> instance for mocking. </returns>
        public static AutonomousDatabaseWalletFile AutonomousDatabaseWalletFile(string walletFiles = default)
        {
            return new AutonomousDatabaseWalletFile(walletFiles, additionalBinaryDataProperties: null);
        }

        /// <summary> Details to restore an Oracle Autonomous Database. </summary>
        /// <param name="timestamp"> The time to restore the database to. </param>
        /// <returns> A new <see cref="Models.RestoreAutonomousDatabaseDetails"/> instance for mocking. </returns>
        public static RestoreAutonomousDatabaseDetails RestoreAutonomousDatabaseDetails(DateTimeOffset timestamp = default)
        {
            return new RestoreAutonomousDatabaseDetails(timestamp, additionalBinaryDataProperties: null);
        }

        /// <summary> Autonomous Database Action Object. </summary>
        /// <param name="action"> Autonomous Database lifecycle action. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseLifecycleAction"/> instance for mocking. </returns>
        public static AutonomousDatabaseLifecycleAction AutonomousDatabaseLifecycleAction(AutonomousDatabaseLifecycleActionEnum action = default)
        {
            return new AutonomousDatabaseLifecycleAction(action, additionalBinaryDataProperties: null);
        }

        /// <summary> AutonomousDatabaseBackup resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.AutonomousDatabaseBackupData"/> instance for mocking. </returns>
        public static AutonomousDatabaseBackupData AutonomousDatabaseBackupData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, AutonomousDatabaseBackupProperties properties = default)
        {
            return new AutonomousDatabaseBackupData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> AutonomousDatabaseBackup resource model. </summary>
        /// <param name="databaseOcid"> The OCID of the Autonomous Database. </param>
        /// <param name="databaseSizeInTbs"> The size of the database in terabytes at the time the backup was taken. </param>
        /// <param name="dbVersion"> A valid Oracle Database version for Autonomous Database. </param>
        /// <param name="displayName"> The user-friendly name for the backup. The name does not have to be unique. </param>
        /// <param name="databaseBackupOcid"> The OCID of the Autonomous Database backup. </param>
        /// <param name="isAutomatic"> Indicates whether the backup is user-initiated or automatic. </param>
        /// <param name="isRestorable"> Indicates whether the backup can be used to restore the associated Autonomous Database. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="lifecycleState"> The current state of the backup. </param>
        /// <param name="retentionPeriodInDays"> Retention period, in days. </param>
        /// <param name="sizeInTbs"> The backup size in terabytes (TB). </param>
        /// <param name="timeAvailableTil"> Timestamp until when the backup will be available. </param>
        /// <param name="timeStarted"> The date and time the backup started. </param>
        /// <param name="timeEnded"> The date and time the backup completed. </param>
        /// <param name="backupType"> The type of backup. </param>
        /// <param name="provisioningState"> Azure resource provisioning state. </param>
        /// <returns> A new <see cref="Models.AutonomousDatabaseBackupProperties"/> instance for mocking. </returns>
        public static AutonomousDatabaseBackupProperties AutonomousDatabaseBackupProperties(string databaseOcid = default, double? databaseSizeInTbs = default, string dbVersion = default, string displayName = default, string databaseBackupOcid = default, bool? isAutomatic = default, bool? isRestorable = default, string lifecycleDetails = default, AutonomousDatabaseBackupLifecycleState? lifecycleState = default, int? retentionPeriodInDays = default, double? sizeInTbs = default, DateTimeOffset? timeAvailableTil = default, string timeStarted = default, string timeEnded = default, AutonomousDatabaseBackupType? backupType = default, OracleDatabaseProvisioningState? provisioningState = default)
        {
            return new AutonomousDatabaseBackupProperties(
                databaseOcid,
                databaseSizeInTbs,
                dbVersion,
                displayName,
                databaseBackupOcid,
                isAutomatic,
                isRestorable,
                lifecycleDetails,
                lifecycleState,
                retentionPeriodInDays,
                sizeInTbs,
                timeAvailableTil,
                timeStarted,
                timeEnded,
                backupType,
                provisioningState,
                additionalBinaryDataProperties: null);
        }

        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="autonomousDatabaseCharacterSet"> The Oracle Autonomous Database supported character sets. </param>
        /// <returns> A new <see cref="OracleDatabase.AutonomousDatabaseCharacterSetData"/> instance for mocking. </returns>
        public static AutonomousDatabaseCharacterSetData AutonomousDatabaseCharacterSetData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, string autonomousDatabaseCharacterSet = default)
        {
            return new AutonomousDatabaseCharacterSetData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                autonomousDatabaseCharacterSet is null ? default : new AutonomousDatabaseCharacterSetProperties(autonomousDatabaseCharacterSet, new Dictionary<string, BinaryData>()));
        }

        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="autonomousDatabaseNationalCharacterSet"> The Oracle Autonomous Database supported national character sets. </param>
        /// <returns> A new <see cref="OracleDatabase.AutonomousDatabaseNationalCharacterSetData"/> instance for mocking. </returns>
        public static AutonomousDatabaseNationalCharacterSetData AutonomousDatabaseNationalCharacterSetData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, string autonomousDatabaseNationalCharacterSet = default)
        {
            return new AutonomousDatabaseNationalCharacterSetData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                autonomousDatabaseNationalCharacterSet is null ? default : new AutonomousDatabaseNationalCharacterSetProperties(autonomousDatabaseNationalCharacterSet, new Dictionary<string, BinaryData>()));
        }

        /// <summary> AutonomousDbVersion resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.AutonomousDBVersionData"/> instance for mocking. </returns>
        public static AutonomousDBVersionData AutonomousDBVersionData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, AutonomousDBVersionProperties properties = default)
        {
            return new AutonomousDBVersionData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> AutonomousDbVersion resource model. </summary>
        /// <param name="version"> Supported Autonomous Db versions. </param>
        /// <param name="dbWorkload"> The Autonomous Database workload type. </param>
        /// <param name="isDefaultForFree"> True if this version of the Oracle Database software's default is free. </param>
        /// <param name="isDefaultForPaid"> True if this version of the Oracle Database software's default is paid. </param>
        /// <param name="isFreeTierEnabled"> True if this version of the Oracle Database software can be used for Always-Free Autonomous Databases. </param>
        /// <param name="isPaidEnabled"> True if this version of the Oracle Database software has payments enabled. </param>
        /// <returns> A new <see cref="Models.AutonomousDBVersionProperties"/> instance for mocking. </returns>
        public static AutonomousDBVersionProperties AutonomousDBVersionProperties(string version = default, AutonomousDatabaseWorkloadType? dbWorkload = default, bool? isDefaultForFree = default, bool? isDefaultForPaid = default, bool? isFreeTierEnabled = default, bool? isPaidEnabled = default)
        {
            return new AutonomousDBVersionProperties(
                version,
                dbWorkload,
                isDefaultForFree,
                isDefaultForPaid,
                isFreeTierEnabled,
                isPaidEnabled,
                additionalBinaryDataProperties: null);
        }

        /// <summary> ExadbVmCluster resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="zones"> The availability zones. </param>
        /// <returns> A new <see cref="OracleDatabase.ExadbVmClusterData"/> instance for mocking. </returns>
        public static ExadbVmClusterData ExadbVmClusterData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, ExadbVmClusterProperties properties = default, IEnumerable<string> zones = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();
            zones ??= new ChangeTrackingList<string>();

            return new ExadbVmClusterData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties,
                zones.ToList());
        }

        /// <param name="ocid"> ExadbVmCluster ocid. </param>
        /// <param name="clusterName"> The cluster name for Exadata VM cluster on Exascale Infrastructure. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. </param>
        /// <param name="backupSubnetCidr"> Client OCI backup subnet CIDR, default is 192.168.252.0/22. </param>
        /// <param name="nsgUri"> HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface. </param>
        /// <param name="provisioningState"> Exadata VM cluster on Exascale Infrastructure provisioning state. </param>
        /// <param name="lifecycleState"> CloudVmCluster lifecycle state. </param>
        /// <param name="vnetId"> VNET for network connectivity. </param>
        /// <param name="subnetId"> Client subnet. </param>
        /// <param name="dataCollectionOptions"> Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS. </param>
        /// <param name="displayName"> Display Name. </param>
        /// <param name="domain"> A domain name used for the Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="enabledEcpuCount"> The number of ECPUs to enable for an Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="exascaleDBStorageVaultId"> The Azure Resource ID of the Exadata Database Storage Vault. </param>
        /// <param name="gridImageOcid"> Grid Setup will be done using this Grid Image OCID. Can be obtained using giMinorVersions API. </param>
        /// <param name="gridImageType"> The type of Grid Image. </param>
        /// <param name="giVersion"> Oracle Grid Infrastructure (GI) software version. </param>
        /// <param name="hostname"> The hostname for the  Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="licenseModel"> The Oracle license model that applies to the Exadata VM cluster on Exascale Infrastructure. The default is LICENSE_INCLUDED. . </param>
        /// <param name="memorySizeInGbs"> The memory that you want to be allocated in GBs. Memory is calculated based on 11 GB per VM core reserved. </param>
        /// <param name="nodeCount"> The number of nodes in the Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="nsgCidrs"> CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default. </param>
        /// <param name="zoneOcid"> The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with. </param>
        /// <param name="privateZoneOcid"> The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with. </param>
        /// <param name="scanListenerPortTcp"> The TCP Single Client Access Name (SCAN) port. The default port is 1521. </param>
        /// <param name="scanListenerPortTcpSsl"> The TCPS Single Client Access Name (SCAN) port. The default port is 2484. </param>
        /// <param name="listenerPort"> The port number configured for the listener on the Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="shape"> The shape of the Exadata VM cluster on Exascale Infrastructure resource. </param>
        /// <param name="sshPublicKeys"> The public key portion of one or more key pairs used for SSH access to the Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="systemVersion"> Operating system version of the image. </param>
        /// <param name="timeZone"> The time zone of the Exadata VM cluster on Exascale Infrastructure. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm). </param>
        /// <param name="totalEcpuCount"> The number of Total ECPUs for an Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="vmFileSystemStorageTotalSizeInGbs"> Total Capacity. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="scanDnsName"> The FQDN of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure. . </param>
        /// <param name="scanIpIds"> The Single Client Access Name (SCAN) IP addresses associated with the Exadata VM cluster on Exascale Infrastructure. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty. </param>
        /// <param name="scanDnsRecordId"> The OCID of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="snapshotFileSystemStorageTotalSizeInGbs"> Total Capacity. </param>
        /// <param name="totalSizeInGbs"> Total Capacity. </param>
        /// <param name="vipIds"> The virtual IP (VIP) addresses associated with the Exadata VM cluster on Exascale Infrastructure. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="iormConfigCache"> iormConfigCache details for Exadata VM cluster on Exascale Infrastructure. </param>
        /// <param name="backupSubnetOcid"> Cluster backup subnet ocid. </param>
        /// <param name="subnetOcid"> Cluster subnet ocid. </param>
        /// <param name="shapeAttribute"> The type of Exascale storage used for Exadata VM cluster. </param>
        /// <returns> A new <see cref="Models.ExadbVmClusterProperties"/> instance for mocking. </returns>
        public static ExadbVmClusterProperties ExadbVmClusterProperties(string ocid = default, string clusterName = default, string backupSubnetCidr = default, Uri nsgUri = default, OracleDatabaseProvisioningState? provisioningState = default, ExadbVmClusterLifecycleState? lifecycleState = default, ResourceIdentifier vnetId = default, ResourceIdentifier subnetId = default, DiagnosticCollectionConfig dataCollectionOptions = default, string displayName = default, string domain = default, int enabledEcpuCount = default, ResourceIdentifier exascaleDBStorageVaultId = default, string gridImageOcid = default, GridImageType? gridImageType = default, string giVersion = default, string hostname = default, OracleLicenseModel? licenseModel = default, int? memorySizeInGbs = default, int nodeCount = default, IEnumerable<CloudVmClusterNsgCidr> nsgCidrs = default, string zoneOcid = default, string privateZoneOcid = default, int? scanListenerPortTcp = default, int? scanListenerPortTcpSsl = default, int? listenerPort = default, string shape = default, IEnumerable<string> sshPublicKeys = default, string systemVersion = default, string timeZone = default, int totalEcpuCount = default, int? vmFileSystemStorageTotalSizeInGbs = default, string lifecycleDetails = default, string scanDnsName = default, IEnumerable<string> scanIpIds = default, string scanDnsRecordId = default, int? snapshotFileSystemStorageTotalSizeInGbs = default, int? totalSizeInGbs = default, IEnumerable<string> vipIds = default, Uri ociUri = default, ExadataIormConfig iormConfigCache = default, string backupSubnetOcid = default, string subnetOcid = default, ShapeAttribute? shapeAttribute = default)
        {
            nsgCidrs ??= new ChangeTrackingList<CloudVmClusterNsgCidr>();
            sshPublicKeys ??= new ChangeTrackingList<string>();
            scanIpIds ??= new ChangeTrackingList<string>();
            vipIds ??= new ChangeTrackingList<string>();

            return new ExadbVmClusterProperties(
                ocid,
                clusterName,
                backupSubnetCidr,
                nsgUri,
                provisioningState,
                lifecycleState,
                vnetId,
                subnetId,
                dataCollectionOptions,
                displayName,
                domain,
                enabledEcpuCount,
                exascaleDBStorageVaultId,
                gridImageOcid,
                gridImageType,
                giVersion,
                hostname,
                licenseModel,
                memorySizeInGbs,
                nodeCount,
                nsgCidrs.ToList(),
                zoneOcid,
                privateZoneOcid,
                scanListenerPortTcp,
                scanListenerPortTcpSsl,
                listenerPort,
                shape,
                sshPublicKeys.ToList(),
                systemVersion,
                timeZone,
                totalEcpuCount,
                vmFileSystemStorageTotalSizeInGbs is null ? default : new ExadbVmClusterStorageDetails(vmFileSystemStorageTotalSizeInGbs.Value, new Dictionary<string, BinaryData>()),
                lifecycleDetails,
                scanDnsName,
                scanIpIds.ToList(),
                scanDnsRecordId,
                snapshotFileSystemStorageTotalSizeInGbs is null ? default : new ExadbVmClusterStorageDetails(snapshotFileSystemStorageTotalSizeInGbs.Value, new Dictionary<string, BinaryData>()),
                totalSizeInGbs is null ? default : new ExadbVmClusterStorageDetails(totalSizeInGbs.Value, new Dictionary<string, BinaryData>()),
                vipIds.ToList(),
                ociUri,
                iormConfigCache,
                backupSubnetOcid,
                subnetOcid,
                shapeAttribute,
                additionalBinaryDataProperties: null);
        }

        /// <param name="zones"> The availability zones. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="exadbVmClusterUpdateNodeCount"> The number of nodes in the Exadata VM cluster on Exascale Infrastructure. </param>
        /// <returns> A new <see cref="Models.ExadbVmClusterPatch"/> instance for mocking. </returns>
        public static ExadbVmClusterPatch ExadbVmClusterPatch(IEnumerable<string> zones = default, IDictionary<string, string> tags = default, int? exadbVmClusterUpdateNodeCount = default)
        {
            zones ??= new ChangeTrackingList<string>();
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new ExadbVmClusterPatch(zones.ToList(), tags, exadbVmClusterUpdateNodeCount is null ? default : new ExadbVmClusterUpdateProperties(exadbVmClusterUpdateNodeCount, new Dictionary<string, BinaryData>()), additionalBinaryDataProperties: null);
        }

        /// <summary> Details of removing Virtual Machines from the Exadata VM cluster on Exascale Infrastructure. Applies to Exadata Database Service on Exascale Infrastructure only. </summary>
        /// <param name="dbNodes"> The list of ExaCS DB nodes for the Exadata VM cluster on Exascale Infrastructure to be removed. </param>
        /// <returns> A new <see cref="Models.RemoveVirtualMachineFromExadbVmClusterDetails"/> instance for mocking. </returns>
        public static RemoveVirtualMachineFromExadbVmClusterDetails RemoveVirtualMachineFromExadbVmClusterDetails(IEnumerable<DBNodeDetails> dbNodes = default)
        {
            dbNodes ??= new ChangeTrackingList<DBNodeDetails>();

            return new RemoveVirtualMachineFromExadbVmClusterDetails(dbNodes.ToList(), additionalBinaryDataProperties: null);
        }

        /// <summary> Details of the ExaCS Db node. Applies to Exadata Database Service on Exascale Infrastructure only. </summary>
        /// <param name="dbNodeId"> Exascale DbNode Azure Resource ID. </param>
        /// <returns> A new <see cref="Models.DBNodeDetails"/> instance for mocking. </returns>
        public static DBNodeDetails DBNodeDetails(ResourceIdentifier dbNodeId = default)
        {
            return new DBNodeDetails(dbNodeId, additionalBinaryDataProperties: null);
        }

        /// <summary> The DbNode resource belonging to ExadbVmCluster. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.ExascaleDBNodeData"/> instance for mocking. </returns>
        public static ExascaleDBNodeData ExascaleDBNodeData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, ExascaleDBNodeProperties properties = default)
        {
            return new ExascaleDBNodeData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> The properties of DbNodeResource. </summary>
        /// <param name="ocid"> DbNode OCID. </param>
        /// <param name="additionalDetails"> Additional information about the planned maintenance. </param>
        /// <param name="cpuCoreCount"> The number of CPU cores enabled on the Db node. </param>
        /// <param name="dbNodeStorageSizeInGbs"> The allocated local node storage in GBs on the Db node. </param>
        /// <param name="faultDomain"> The name of the Fault Domain the instance is contained in. </param>
        /// <param name="hostname"> The host name for the database node. </param>
        /// <param name="lifecycleState"> The current state of the database node. </param>
        /// <param name="maintenanceType"> The type of database node maintenance. </param>
        /// <param name="memorySizeInGbs"> The allocated memory in GBs on the Db node. </param>
        /// <param name="softwareStorageSizeInGb"> The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems. </param>
        /// <param name="maintenanceWindowEndOn"> End date and time of maintenance window. </param>
        /// <param name="maintenanceWindowStartOn"> Start date and time of maintenance window. </param>
        /// <param name="totalCpuCoreCount"> The total number of CPU cores reserved on the Db node. </param>
        /// <returns> A new <see cref="Models.ExascaleDBNodeProperties"/> instance for mocking. </returns>
        public static ExascaleDBNodeProperties ExascaleDBNodeProperties(string ocid = default, string additionalDetails = default, int? cpuCoreCount = default, int? dbNodeStorageSizeInGbs = default, string faultDomain = default, string hostname = default, DBNodeProvisioningState? lifecycleState = default, string maintenanceType = default, int? memorySizeInGbs = default, int? softwareStorageSizeInGb = default, DateTimeOffset? maintenanceWindowEndOn = default, DateTimeOffset? maintenanceWindowStartOn = default, int? totalCpuCoreCount = default)
        {
            return new ExascaleDBNodeProperties(
                ocid,
                additionalDetails,
                cpuCoreCount,
                dbNodeStorageSizeInGbs,
                faultDomain,
                hostname,
                lifecycleState,
                maintenanceType,
                memorySizeInGbs,
                softwareStorageSizeInGb,
                maintenanceWindowEndOn,
                maintenanceWindowStartOn,
                totalCpuCoreCount,
                additionalBinaryDataProperties: null);
        }

        /// <summary> ExascaleDbStorageVault resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="zones"> The availability zones. </param>
        /// <returns> A new <see cref="OracleDatabase.ExascaleDBStorageVaultData"/> instance for mocking. </returns>
        public static ExascaleDBStorageVaultData ExascaleDBStorageVaultData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, ExascaleDBStorageVaultProperties properties = default, IEnumerable<string> zones = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();
            zones ??= new ChangeTrackingList<string>();

            return new ExascaleDBStorageVaultData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties,
                zones.ToList());
        }

        /// <param name="additionalFlashCacheInPercent"> The size of additional Flash Cache in percentage of High Capacity database storage. </param>
        /// <param name="description"> Exadata Database Storage Vault description. </param>
        /// <param name="displayName"> The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique. </param>
        /// <param name="highCapacityDatabaseStorageInputTotalSizeInGbs"> Total Capacity. </param>
        /// <param name="highCapacityDatabaseStorage"> Response exadata Database Storage Details. </param>
        /// <param name="timeZone"> The time zone that you want to use for the Exadata Database Storage Vault. </param>
        /// <param name="provisioningState"> Exadata Database Storage Vault provisioning state. </param>
        /// <param name="lifecycleState"> Exadata Database Storage Vault lifecycle state. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="vmClusterCount"> The number of Exadata VM clusters used the Exadata Database Storage Vault. </param>
        /// <param name="ocid"> The OCID of the Exadata Database Storage Vault. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="exadataInfrastructureId"> Cloud Exadata infrastructure ID. </param>
        /// <param name="attachedShapeAttributes"> The shapeAttribute of the Exadata VM cluster(s) associated with the Exadata Database Storage Vault. </param>
        /// <returns> A new <see cref="Models.ExascaleDBStorageVaultProperties"/> instance for mocking. </returns>
        public static ExascaleDBStorageVaultProperties ExascaleDBStorageVaultProperties(int? additionalFlashCacheInPercent = default, string description = default, string displayName = default, int? highCapacityDatabaseStorageInputTotalSizeInGbs = default, ExascaleDBStorageDetails highCapacityDatabaseStorage = default, string timeZone = default, OracleDatabaseProvisioningState? provisioningState = default, ExascaleDBStorageVaultLifecycleState? lifecycleState = default, string lifecycleDetails = default, int? vmClusterCount = default, string ocid = default, Uri ociUri = default, ResourceIdentifier exadataInfrastructureId = default, IEnumerable<ShapeAttribute> attachedShapeAttributes = default)
        {
            attachedShapeAttributes ??= new ChangeTrackingList<ShapeAttribute>();

            return new ExascaleDBStorageVaultProperties(
                additionalFlashCacheInPercent,
                description,
                displayName,
                highCapacityDatabaseStorageInputTotalSizeInGbs is null ? default : new ExascaleDBStorageInputDetails(highCapacityDatabaseStorageInputTotalSizeInGbs.Value, new Dictionary<string, BinaryData>()),
                highCapacityDatabaseStorage,
                timeZone,
                provisioningState,
                lifecycleState,
                lifecycleDetails,
                vmClusterCount,
                ocid,
                ociUri,
                exadataInfrastructureId,
                attachedShapeAttributes.ToList(),
                additionalBinaryDataProperties: null);
        }

        /// <summary> Exadata Database Storage Details. </summary>
        /// <param name="availableSizeInGbs"> Available Capacity. </param>
        /// <param name="totalSizeInGbs"> Total Capacity. </param>
        /// <returns> A new <see cref="Models.ExascaleDBStorageDetails"/> instance for mocking. </returns>
        public static ExascaleDBStorageDetails ExascaleDBStorageDetails(int? availableSizeInGbs = default, int? totalSizeInGbs = default)
        {
            return new ExascaleDBStorageDetails(availableSizeInGbs, totalSizeInGbs, additionalBinaryDataProperties: null);
        }

        /// <summary> The type used for updating tags in ExascaleDbStorageVault resources. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <returns> A new <see cref="Models.ExascaleDBStorageVaultPatch"/> instance for mocking. </returns>
        public static ExascaleDBStorageVaultPatch ExascaleDBStorageVaultPatch(IDictionary<string, string> tags = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new ExascaleDBStorageVaultPatch(tags, additionalBinaryDataProperties: null);
        }

        /// <summary> Network Anchor resource model. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="zones"> The availability zones. </param>
        /// <returns> A new <see cref="OracleDatabase.NetworkAnchorData"/> instance for mocking. </returns>
        public static NetworkAnchorData NetworkAnchorData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, NetworkAnchorProperties properties = default, IEnumerable<string> zones = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();
            zones ??= new ChangeTrackingList<string>();

            return new NetworkAnchorData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties,
                zones.ToList());
        }

        /// <summary> Network Anchor properties. </summary>
        /// <param name="resourceAnchorId"> Corresponding resource anchor Azure ID. </param>
        /// <param name="provisioningState"> NetworkAnchor provisioning state. </param>
        /// <param name="vnetId"> VNET for network connectivity. </param>
        /// <param name="subnetId"> Client subnet. </param>
        /// <param name="cidrBlock"> Delegated Azure subnet cidr block. </param>
        /// <param name="ociVcnId"> Oracle Cloud Infrastructure VCN OCID. </param>
        /// <param name="ociVcnDnsLabel"> OCI DNS label. This is optional if DNS config is provided. </param>
        /// <param name="ociSubnetId"> Oracle Cloud Infrastructure subnet OCID. </param>
        /// <param name="ociBackupCidrBlock"> OCI backup subnet cidr block. </param>
        /// <param name="isOracleToAzureDnsZoneSyncEnabled"> Indicates whether DNS zone sync from OCI to Azure is enabled. </param>
        /// <param name="isOracleDnsListeningEndpointEnabled"> Indicates whether the Oracle DNS listening endpoint is enabled. </param>
        /// <param name="isOracleDnsForwardingEndpointEnabled"> Indicates whether the Oracle DNS forwarding endpoint is enabled. </param>
        /// <param name="dnsForwardingRules"> DNS forwarding rules. </param>
        /// <param name="dnsListeningEndpointAllowedCidrs"> Comma-separated list of CIDRs that are allowed to send requests to the DNS listening endpoint. </param>
        /// <param name="dnsListeningEndpointIpAddress"> DNS listening endpoint IP address. </param>
        /// <param name="dnsForwardingEndpointIpAddress"> DNS forwarding endpoint IP address. </param>
        /// <param name="dnsForwardingRulesUri"> Deep link to OCI console DNS Forwarding rules page. </param>
        /// <param name="dnsListeningEndpointNsgRulesUri"> Deep link to OCI console DNS Listening endpoint NSG rules. </param>
        /// <param name="dnsForwardingEndpointNsgRulesUri"> Deep link to OCI console DNS Forwarding endpoint NSG rules. </param>
        /// <returns> A new <see cref="Models.NetworkAnchorProperties"/> instance for mocking. </returns>
        public static NetworkAnchorProperties NetworkAnchorProperties(string resourceAnchorId = default, OracleDatabaseProvisioningState? provisioningState = default, ResourceIdentifier vnetId = default, ResourceIdentifier subnetId = default, string cidrBlock = default, string ociVcnId = default, string ociVcnDnsLabel = default, string ociSubnetId = default, string ociBackupCidrBlock = default, bool? isOracleToAzureDnsZoneSyncEnabled = default, bool? isOracleDnsListeningEndpointEnabled = default, bool? isOracleDnsForwardingEndpointEnabled = default, IEnumerable<DnsForwardingRule> dnsForwardingRules = default, string dnsListeningEndpointAllowedCidrs = default, string dnsListeningEndpointIpAddress = default, string dnsForwardingEndpointIpAddress = default, string dnsForwardingRulesUri = default, string dnsListeningEndpointNsgRulesUri = default, string dnsForwardingEndpointNsgRulesUri = default)
        {
            dnsForwardingRules ??= new ChangeTrackingList<DnsForwardingRule>();

            return new NetworkAnchorProperties(
                resourceAnchorId,
                provisioningState,
                vnetId,
                subnetId,
                cidrBlock,
                ociVcnId,
                ociVcnDnsLabel,
                ociSubnetId,
                ociBackupCidrBlock,
                isOracleToAzureDnsZoneSyncEnabled,
                isOracleDnsListeningEndpointEnabled,
                isOracleDnsForwardingEndpointEnabled,
                dnsForwardingRules.ToList(),
                dnsListeningEndpointAllowedCidrs,
                dnsListeningEndpointIpAddress,
                dnsForwardingEndpointIpAddress,
                dnsForwardingRulesUri,
                dnsListeningEndpointNsgRulesUri,
                dnsForwardingEndpointNsgRulesUri,
                additionalBinaryDataProperties: null);
        }

        /// <summary> The type used for update operations of the NetworkAnchor. </summary>
        /// <param name="zones"> The availability zones. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="Models.NetworkAnchorPatch"/> instance for mocking. </returns>
        public static NetworkAnchorPatch NetworkAnchorPatch(IEnumerable<string> zones = default, IDictionary<string, string> tags = default, NetworkAnchorUpdateProperties properties = default)
        {
            zones ??= new ChangeTrackingList<string>();
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new NetworkAnchorPatch(zones.ToList(), tags, properties, additionalBinaryDataProperties: null);
        }

        /// <summary> Resource Anchor model. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.ResourceAnchorData"/> instance for mocking. </returns>
        public static ResourceAnchorData ResourceAnchorData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, ResourceAnchorProperties properties = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new ResourceAnchorData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties);
        }

        /// <summary> Resource Anchor properties. </summary>
        /// <param name="provisioningState"> ResourceAnchor provisioning state. </param>
        /// <param name="linkedCompartmentId"> Oracle Cloud Infrastructure compartment Id (ocid) which was created or linked by customer with resource anchor. This compartmentId is different from where resource Anchor lives. </param>
        /// <returns> A new <see cref="Models.ResourceAnchorProperties"/> instance for mocking. </returns>
        public static ResourceAnchorProperties ResourceAnchorProperties(OracleDatabaseProvisioningState? provisioningState = default, string linkedCompartmentId = default)
        {
            return new ResourceAnchorProperties(provisioningState, linkedCompartmentId, additionalBinaryDataProperties: null);
        }

        /// <summary> The type used for update operations of the ResourceAnchor. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <returns> A new <see cref="Models.ResourceAnchorPatch"/> instance for mocking. </returns>
        public static ResourceAnchorPatch ResourceAnchorPatch(IDictionary<string, string> tags = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new ResourceAnchorPatch(tags, additionalBinaryDataProperties: null);
        }

        /// <summary> DbSystem resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The geo-location where the resource lives. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="zones"> The availability zones. </param>
        /// <returns> A new <see cref="OracleDatabase.DbSystemData"/> instance for mocking. </returns>
        public static DbSystemData DbSystemData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, DbSystemProperties properties = default, IEnumerable<string> zones = default)
        {
            tags ??= new ChangeTrackingDictionary<string, string>();
            zones ??= new ChangeTrackingList<string>();

            return new DbSystemData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                tags,
                location,
                properties,
                zones.ToList());
        }

        /// <summary> DbSystem resource model. </summary>
        /// <param name="provisioningState"> dbSystem provisioning state. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="resourceAnchorId"> Azure Resource Anchor ID. </param>
        /// <param name="networkAnchorId"> Azure Network Anchor ID. </param>
        /// <param name="clusterName"> The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. </param>
        /// <param name="displayName"> The user-friendly name for the DB system. The name does not have to be unique. </param>
        /// <param name="initialDataStorageSizeInGb"> Size in GB of the initial data volume that will be created and attached to a virtual machine DB system. You can scale up storage after provisioning, as needed. Note that the total storage size attached will be more than the amount you specify to allow for REDO/RECO space and software volume. </param>
        /// <param name="dataStorageSizeInGbs"> The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. </param>
        /// <param name="dbSystemOptions"> The DB system options. </param>
        /// <param name="diskRedundancy"> The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. </param>
        /// <param name="domainV2"> The domain name for the DB system. </param>
        /// <param name="gridImageOcid"> The OCID of a grid infrastructure software image. This is a database software image of the type GRID_IMAGE. </param>
        /// <param name="hostname"> The hostname for the DB system. </param>
        /// <param name="ocid"> The OCID of the DB system. </param>
        /// <param name="licenseModelV2"> The Oracle license model that applies to all the databases on the DB system. The default is LicenseIncluded. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="lifecycleState"> The current state of the DB system. </param>
        /// <param name="listenerPort"> The port number configured for the listener on the DB system. </param>
        /// <param name="memorySizeInGbs"> Memory allocated to the DB system, in gigabytes. </param>
        /// <param name="nodeCount"> The number of nodes in the DB system. For RAC DB systems, the value is greater than 1. </param>
        /// <param name="scanDnsName"> The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system. </param>
        /// <param name="scanIps"> The list of Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. Note: For a single-node DB system, this list is empty. </param>
        /// <param name="shape"> The shape of the DB system. The shape determines resources to allocate to the DB system. For virtual machine shapes, the number of CPU cores and memory. For bare metal and Exadata shapes, the number of CPU cores, storage, and memory. </param>
        /// <param name="sshPublicKeys"> The public key portion of one or more key pairs used for SSH access to the DB system. </param>
        /// <param name="storageVolumePerformanceMode"> The block storage volume performance level. Valid values are Balanced and HighPerformance. See [Block Volume Performance](/Content/Block/Concepts/blockvolumeperformance.htm) for more information. </param>
        /// <param name="timeZone"> The time zone of the DB system, e.g., UTC, to set the timeZone as UTC. </param>
        /// <param name="version"> The Oracle Database version of the DB system. </param>
        /// <param name="computeModel"> The compute model for Base Database Service. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy. </param>
        /// <param name="computeCount"> The number of compute servers for the DB system. </param>
        /// <param name="databaseEdition"> The Oracle Database Edition that applies to all the databases on the DB system. Exadata DB systems and 2-node RAC DB systems require EnterpriseEditionExtremePerformance. </param>
        /// <param name="adminPassword"> A strong password for SYS, SYSTEM, and PDB Admin. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, #, or -. </param>
        /// <param name="dbVersion"> A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation. </param>
        /// <param name="pdbName"> The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name. </param>
        /// <returns> A new <see cref="Models.DbSystemProperties"/> instance for mocking. </returns>
        public static DbSystemProperties DbSystemProperties(OracleDatabaseProvisioningState? provisioningState = default, Uri ociUri = default, ResourceIdentifier resourceAnchorId = default, ResourceIdentifier networkAnchorId = default, string clusterName = default, string displayName = default, int? initialDataStorageSizeInGb = default, int? dataStorageSizeInGbs = default, DbSystemOptions dbSystemOptions = default, DiskRedundancyType? diskRedundancy = default, string domainV2 = default, string gridImageOcid = default, string hostname = default, string ocid = default, OracleLicenseModel? licenseModelV2 = default, string lifecycleDetails = default, DbSystemLifecycleState? lifecycleState = default, int? listenerPort = default, int? memorySizeInGbs = default, int? nodeCount = default, string scanDnsName = default, IEnumerable<string> scanIps = default, string shape = default, IEnumerable<string> sshPublicKeys = default, StorageVolumePerformanceMode? storageVolumePerformanceMode = default, string timeZone = default, string version = default, OracleDatabaseComputeModel? computeModel = default, int? computeCount = default, DbSystemDatabaseEditionType databaseEdition = default, string adminPassword = default, string dbVersion = default, string pdbName = default)
        {
            scanIps ??= new ChangeTrackingList<string>();
            sshPublicKeys ??= new ChangeTrackingList<string>();

            return new DbSystemProperties(
                Models.DbSystemSourceType?.None,
                provisioningState,
                ociUri,
                resourceAnchorId,
                networkAnchorId,
                clusterName,
                displayName,
                initialDataStorageSizeInGb,
                dataStorageSizeInGbs,
                dbSystemOptions,
                diskRedundancy,
                domainV2,
                gridImageOcid,
                hostname,
                ocid,
                licenseModelV2,
                lifecycleDetails,
                lifecycleState,
                listenerPort,
                memorySizeInGbs,
                nodeCount,
                scanDnsName,
                scanIps.ToList(),
                shape,
                sshPublicKeys.ToList(),
                storageVolumePerformanceMode,
                timeZone,
                version,
                computeModel,
                computeCount,
                additionalBinaryDataProperties: null,
                databaseEdition,
                adminPassword,
                dbVersion,
                pdbName);
        }

        /// <param name="source"> The source of the database: Use `None` for creating a new database. The default is `None`. </param>
        /// <param name="provisioningState"> dbSystem provisioning state. </param>
        /// <param name="ociUri"> HTTPS link to OCI resources exposed to Azure Customer via Azure Interface. </param>
        /// <param name="resourceAnchorId"> Azure Resource Anchor ID. </param>
        /// <param name="networkAnchorId"> Azure Network Anchor ID. </param>
        /// <param name="clusterName"> The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. </param>
        /// <param name="displayName"> The user-friendly name for the DB system. The name does not have to be unique. </param>
        /// <param name="initialDataStorageSizeInGb"> Size in GB of the initial data volume that will be created and attached to a virtual machine DB system. You can scale up storage after provisioning, as needed. Note that the total storage size attached will be more than the amount you specify to allow for REDO/RECO space and software volume. </param>
        /// <param name="dataStorageSizeInGbs"> The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. </param>
        /// <param name="dbSystemOptionsStorageManagement"> The storage option used in DB system. ASM - Automatic storage management, LVM - Logical Volume management. </param>
        /// <param name="diskRedundancy"> The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. </param>
        /// <param name="domainV2"> The domain name for the DB system. </param>
        /// <param name="gridImageOcid"> The OCID of a grid infrastructure software image. This is a database software image of the type GRID_IMAGE. </param>
        /// <param name="hostname"> The hostname for the DB system. </param>
        /// <param name="ocid"> The OCID of the DB system. </param>
        /// <param name="licenseModelV2"> The Oracle license model that applies to all the databases on the DB system. The default is LicenseIncluded. </param>
        /// <param name="lifecycleDetails"> Additional information about the current lifecycle state. </param>
        /// <param name="lifecycleState"> The current state of the DB system. </param>
        /// <param name="listenerPort"> The port number configured for the listener on the DB system. </param>
        /// <param name="memorySizeInGbs"> Memory allocated to the DB system, in gigabytes. </param>
        /// <param name="nodeCount"> The number of nodes in the DB system. For RAC DB systems, the value is greater than 1. </param>
        /// <param name="scanDnsName"> The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system. </param>
        /// <param name="scanIps"> The list of Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. Note: For a single-node DB system, this list is empty. </param>
        /// <param name="shape"> The shape of the DB system. The shape determines resources to allocate to the DB system. For virtual machine shapes, the number of CPU cores and memory. For bare metal and Exadata shapes, the number of CPU cores, storage, and memory. </param>
        /// <param name="sshPublicKeys"> The public key portion of one or more key pairs used for SSH access to the DB system. </param>
        /// <param name="storageVolumePerformanceMode"> The block storage volume performance level. Valid values are Balanced and HighPerformance. See [Block Volume Performance](/Content/Block/Concepts/blockvolumeperformance.htm) for more information. </param>
        /// <param name="timeZone"> The time zone of the DB system, e.g., UTC, to set the timeZone as UTC. </param>
        /// <param name="version"> The Oracle Database version of the DB system. </param>
        /// <param name="computeModel"> The compute model for Base Database Service. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. The ECPU compute model is the recommended model, and the OCPU compute model is legacy. </param>
        /// <param name="computeCount"> The number of compute servers for the DB system. </param>
        /// <returns> A new <see cref="Models.DbSystemBaseProperties"/> instance for mocking. </returns>
        public static DbSystemBaseProperties DbSystemBaseProperties(string source = default, OracleDatabaseProvisioningState? provisioningState = default, Uri ociUri = default, ResourceIdentifier resourceAnchorId = default, ResourceIdentifier networkAnchorId = default, string clusterName = default, string displayName = default, int? initialDataStorageSizeInGb = default, int? dataStorageSizeInGbs = default, StorageManagementType? dbSystemOptionsStorageManagement = default, DiskRedundancyType? diskRedundancy = default, string domainV2 = default, string gridImageOcid = default, string hostname = default, string ocid = default, OracleLicenseModel? licenseModelV2 = default, string lifecycleDetails = default, DbSystemLifecycleState? lifecycleState = default, int? listenerPort = default, int? memorySizeInGbs = default, int? nodeCount = default, string scanDnsName = default, IEnumerable<string> scanIps = default, string shape = default, IEnumerable<string> sshPublicKeys = default, StorageVolumePerformanceMode? storageVolumePerformanceMode = default, string timeZone = default, string version = default, OracleDatabaseComputeModel? computeModel = default, int? computeCount = default)
        {
            scanIps ??= new ChangeTrackingList<string>();
            sshPublicKeys ??= new ChangeTrackingList<string>();

            return new UnknownDbSystemBaseProperties(
                new DbSystemSourceType(source),
                provisioningState,
                ociUri,
                resourceAnchorId,
                networkAnchorId,
                clusterName,
                displayName,
                initialDataStorageSizeInGb,
                dataStorageSizeInGbs,
                dbSystemOptionsStorageManagement is null ? default : new DbSystemOptions(dbSystemOptionsStorageManagement, new Dictionary<string, BinaryData>()),
                diskRedundancy,
                domainV2,
                gridImageOcid,
                hostname,
                ocid,
                licenseModelV2,
                lifecycleDetails,
                lifecycleState,
                listenerPort,
                memorySizeInGbs,
                nodeCount,
                scanDnsName,
                scanIps.ToList(),
                shape,
                sshPublicKeys.ToList(),
                storageVolumePerformanceMode,
                timeZone,
                version,
                computeModel,
                computeCount,
                additionalBinaryDataProperties: null);
        }

        /// <param name="zones"> The availability zones. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="dbSystemUpdateSource"> The source of the database for creating a new database. </param>
        /// <returns> A new <see cref="Models.DbSystemPatch"/> instance for mocking. </returns>
        public static DbSystemPatch DbSystemPatch(IEnumerable<string> zones = default, IDictionary<string, string> tags = default, DbSystemSourceType? dbSystemUpdateSource = default)
        {
            zones ??= new ChangeTrackingList<string>();
            tags ??= new ChangeTrackingDictionary<string, string>();

            return new DbSystemPatch(zones.ToList(), tags, dbSystemUpdateSource is null ? default : new DbSystemUpdateProperties(dbSystemUpdateSource, new Dictionary<string, BinaryData>()), additionalBinaryDataProperties: null);
        }

        /// <summary> Oracle Database DbVersion resource definition. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <returns> A new <see cref="OracleDatabase.DbVersionData"/> instance for mocking. </returns>
        public static DbVersionData DbVersionData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, DbVersionProperties properties = default)
        {
            return new DbVersionData(
                id,
                name,
                resourceType,
                systemData,
                additionalBinaryDataProperties: null,
                properties);
        }

        /// <summary> DbVersion resource model. </summary>
        /// <param name="version"> A valid Oracle Database version. </param>
        /// <param name="isLatestForMajorVersion"> True if this version of the Oracle Database software is the latest version for a release. </param>
        /// <param name="isPreviewDbVersion"> True if this version of the Oracle Database software is the preview version. </param>
        /// <param name="isUpgradeSupported"> True if this version of the Oracle Database software is supported for Upgrade. </param>
        /// <param name="supportsPdb"> True if this version of the Oracle Database software supports pluggable databases. </param>
        /// <returns> A new <see cref="Models.DbVersionProperties"/> instance for mocking. </returns>
        public static DbVersionProperties DbVersionProperties(string version = default, bool? isLatestForMajorVersion = default, bool? isPreviewDbVersion = default, bool? isUpgradeSupported = default, bool? supportsPdb = default)
        {
            return new DbVersionProperties(
                version,
                isLatestForMajorVersion,
                isPreviewDbVersion,
                isUpgradeSupported,
                supportsPdb,
                additionalBinaryDataProperties: null);
        }
    }
}
