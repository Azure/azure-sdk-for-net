// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> DbServer Patching Properties. </summary>
    public partial class DBServerPatchingDetails
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DBServerPatchingDetails"/>. </summary>
        internal DBServerPatchingDetails()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DBServerPatchingDetails"/>. </summary>
        /// <param name="estimatedPatchDuration"> Estimated Patch Duration. </param>
        /// <param name="patchingStatus"> Patching Status. </param>
        /// <param name="patchingEndedOn"> Time Patching Ended. </param>
        /// <param name="patchingStartedOn"> Time Patching Started. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DBServerPatchingDetails(int? estimatedPatchDuration, DBServerPatchingStatus? patchingStatus, DateTimeOffset? patchingEndedOn, DateTimeOffset? patchingStartedOn, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            EstimatedPatchDuration = estimatedPatchDuration;
            PatchingStatus = patchingStatus;
            PatchingEndedOn = patchingEndedOn;
            PatchingStartedOn = patchingStartedOn;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Estimated Patch Duration. </summary>
        public int? EstimatedPatchDuration { get; }

        /// <summary> Patching Status. </summary>
        public DBServerPatchingStatus? PatchingStatus { get; }

        /// <summary> Time Patching Ended. </summary>
        public DateTimeOffset? PatchingEndedOn { get; }

        /// <summary> Time Patching Started. </summary>
        public DateTimeOffset? PatchingStartedOn { get; }
    }
}
