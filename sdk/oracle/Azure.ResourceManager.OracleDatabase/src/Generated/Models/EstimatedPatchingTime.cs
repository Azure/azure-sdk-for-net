// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching). </summary>
    public partial class EstimatedPatchingTime
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="EstimatedPatchingTime"/>. </summary>
        internal EstimatedPatchingTime()
        {
        }

        /// <summary> Initializes a new instance of <see cref="EstimatedPatchingTime"/>. </summary>
        /// <param name="estimatedDBServerPatchingTime"> The estimated time required in minutes for database server patching. </param>
        /// <param name="estimatedNetworkSwitchesPatchingTime"> The estimated time required in minutes for network switch patching. </param>
        /// <param name="estimatedStorageServerPatchingTime"> The estimated time required in minutes for storage server patching. </param>
        /// <param name="totalEstimatedPatchingTime"> The estimated total time required in minutes for all patching operations. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal EstimatedPatchingTime(int? estimatedDBServerPatchingTime, int? estimatedNetworkSwitchesPatchingTime, int? estimatedStorageServerPatchingTime, int? totalEstimatedPatchingTime, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            EstimatedDBServerPatchingTime = estimatedDBServerPatchingTime;
            EstimatedNetworkSwitchesPatchingTime = estimatedNetworkSwitchesPatchingTime;
            EstimatedStorageServerPatchingTime = estimatedStorageServerPatchingTime;
            TotalEstimatedPatchingTime = totalEstimatedPatchingTime;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The estimated time required in minutes for database server patching. </summary>
        public int? EstimatedDBServerPatchingTime { get; }

        /// <summary> The estimated time required in minutes for network switch patching. </summary>
        public int? EstimatedNetworkSwitchesPatchingTime { get; }

        /// <summary> The estimated time required in minutes for storage server patching. </summary>
        public int? EstimatedStorageServerPatchingTime { get; }

        /// <summary> The estimated total time required in minutes for all patching operations. </summary>
        public int? TotalEstimatedPatchingTime { get; }
    }
}
