// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary>
    /// SaaS Subscription Details model
    /// Serialized Name: SaasSubscriptionDetails
    /// </summary>
    public partial class SaasSubscriptionDetails
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SaasSubscriptionDetails"/>. </summary>
        internal SaasSubscriptionDetails()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SaasSubscriptionDetails"/>. </summary>
        /// <param name="id">
        /// Purchased SaaS subscription ID
        /// Serialized Name: SaasSubscriptionDetails.id
        /// </param>
        /// <param name="subscriptionName">
        /// SaaS subscription name
        /// Serialized Name: SaasSubscriptionDetails.subscriptionName
        /// </param>
        /// <param name="timeCreated">
        /// Creation Date and Time
        /// Serialized Name: SaasSubscriptionDetails.timeCreated
        /// </param>
        /// <param name="offerId">
        /// Purchased offer ID
        /// Serialized Name: SaasSubscriptionDetails.offerId
        /// </param>
        /// <param name="planId">
        /// Purchased offer's plan ID
        /// Serialized Name: SaasSubscriptionDetails.planId
        /// </param>
        /// <param name="saasSubscriptionStatus">
        /// Indicates the status of the Subscription.
        /// Serialized Name: SaasSubscriptionDetails.saasSubscriptionStatus
        /// </param>
        /// <param name="publisherId">
        /// Publisher ID
        /// Serialized Name: SaasSubscriptionDetails.publisherId
        /// </param>
        /// <param name="purchaserEmailId">
        /// Purchaser Email ID
        /// Serialized Name: SaasSubscriptionDetails.purchaserEmailId
        /// </param>
        /// <param name="purchaserTenantId">
        /// Purchaser Tenant ID
        /// Serialized Name: SaasSubscriptionDetails.purchaserTenantId
        /// </param>
        /// <param name="termUnit">
        /// Purchase Term Unit
        /// Serialized Name: SaasSubscriptionDetails.termUnit
        /// </param>
        /// <param name="isAutoRenew">
        /// AutoRenew flag
        /// Serialized Name: SaasSubscriptionDetails.isAutoRenew
        /// </param>
        /// <param name="isFreeTrial">
        /// FreeTrial flag
        /// Serialized Name: SaasSubscriptionDetails.isFreeTrial
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SaasSubscriptionDetails(string id, string subscriptionName, DateTimeOffset? timeCreated, string offerId, string planId, string saasSubscriptionStatus, string publisherId, string purchaserEmailId, string purchaserTenantId, string termUnit, bool? isAutoRenew, bool? isFreeTrial, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            SubscriptionName = subscriptionName;
            TimeCreated = timeCreated;
            OfferId = offerId;
            PlanId = planId;
            SaasSubscriptionStatus = saasSubscriptionStatus;
            PublisherId = publisherId;
            PurchaserEmailId = purchaserEmailId;
            PurchaserTenantId = purchaserTenantId;
            TermUnit = termUnit;
            IsAutoRenew = isAutoRenew;
            IsFreeTrial = isFreeTrial;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// Purchased SaaS subscription ID
        /// Serialized Name: SaasSubscriptionDetails.id
        /// </summary>
        public string Id { get; }
        /// <summary>
        /// SaaS subscription name
        /// Serialized Name: SaasSubscriptionDetails.subscriptionName
        /// </summary>
        public string SubscriptionName { get; }
        /// <summary>
        /// Creation Date and Time
        /// Serialized Name: SaasSubscriptionDetails.timeCreated
        /// </summary>
        public DateTimeOffset? TimeCreated { get; }
        /// <summary>
        /// Purchased offer ID
        /// Serialized Name: SaasSubscriptionDetails.offerId
        /// </summary>
        public string OfferId { get; }
        /// <summary>
        /// Purchased offer's plan ID
        /// Serialized Name: SaasSubscriptionDetails.planId
        /// </summary>
        public string PlanId { get; }
        /// <summary>
        /// Indicates the status of the Subscription.
        /// Serialized Name: SaasSubscriptionDetails.saasSubscriptionStatus
        /// </summary>
        public string SaasSubscriptionStatus { get; }
        /// <summary>
        /// Publisher ID
        /// Serialized Name: SaasSubscriptionDetails.publisherId
        /// </summary>
        public string PublisherId { get; }
        /// <summary>
        /// Purchaser Email ID
        /// Serialized Name: SaasSubscriptionDetails.purchaserEmailId
        /// </summary>
        public string PurchaserEmailId { get; }
        /// <summary>
        /// Purchaser Tenant ID
        /// Serialized Name: SaasSubscriptionDetails.purchaserTenantId
        /// </summary>
        public string PurchaserTenantId { get; }
        /// <summary>
        /// Purchase Term Unit
        /// Serialized Name: SaasSubscriptionDetails.termUnit
        /// </summary>
        public string TermUnit { get; }
        /// <summary>
        /// AutoRenew flag
        /// Serialized Name: SaasSubscriptionDetails.isAutoRenew
        /// </summary>
        public bool? IsAutoRenew { get; }
        /// <summary>
        /// FreeTrial flag
        /// Serialized Name: SaasSubscriptionDetails.isFreeTrial
        /// </summary>
        public bool? IsFreeTrial { get; }
    }
}
