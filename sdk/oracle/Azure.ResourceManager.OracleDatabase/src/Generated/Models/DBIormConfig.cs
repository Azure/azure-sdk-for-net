// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> DbIormConfig for cloud vm cluster. </summary>
    public partial class DBIormConfig
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DBIormConfig"/>. </summary>
        internal DBIormConfig()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DBIormConfig"/>. </summary>
        /// <param name="dbName"> The database name. For the default DbPlan, the dbName is default. </param>
        /// <param name="flashCacheLimit"> The flash cache limit for this database. This value is internally configured based on the share value assigned to the database. </param>
        /// <param name="share"> The relative priority of this database. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DBIormConfig(string dbName, string flashCacheLimit, int? share, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DBName = dbName;
            FlashCacheLimit = flashCacheLimit;
            Share = share;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The database name. For the default DbPlan, the dbName is default. </summary>
        public string DBName { get; }

        /// <summary> The flash cache limit for this database. This value is internally configured based on the share value assigned to the database. </summary>
        public string FlashCacheLimit { get; }

        /// <summary> The relative priority of this database. </summary>
        public int? Share { get; }
    }
}
