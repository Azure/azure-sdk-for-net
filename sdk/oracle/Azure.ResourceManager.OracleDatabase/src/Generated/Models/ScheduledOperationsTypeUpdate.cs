// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> The list of scheduled operations. </summary>
    public partial class ScheduledOperationsTypeUpdate
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ScheduledOperationsTypeUpdate"/>. </summary>
        /// <param name="dayOfWeek"> Day of week. </param>
        /// <param name="autoStartOn"> auto start time. value must be of ISO-8601 format HH:mm. </param>
        /// <param name="autoStopOn"> auto stop time. value must be of ISO-8601 format HH:mm. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ScheduledOperationsTypeUpdate(OracleDatabaseDayOfWeekUpdate dayOfWeek, DateTimeOffset? autoStartOn, DateTimeOffset? autoStopOn, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DayOfWeek = dayOfWeek;
            AutoStartOn = autoStartOn;
            AutoStopOn = autoStopOn;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Day of week. </summary>
        internal OracleDatabaseDayOfWeekUpdate DayOfWeek { get; set; }

        /// <summary> auto start time. value must be of ISO-8601 format HH:mm. </summary>
        public DateTimeOffset? AutoStartOn { get; set; }

        /// <summary> auto stop time. value must be of ISO-8601 format HH:mm. </summary>
        public DateTimeOffset? AutoStopOn { get; set; }

        /// <summary> Name of the day of the week. </summary>
        public OracleDatabaseDayOfWeekName? DayOfWeekName
        {
            get
            {
                return DayOfWeek is null ? default : DayOfWeek.Name;
            }
            set
            {
                if (DayOfWeek is null)
                {
                    DayOfWeek = new OracleDatabaseDayOfWeekUpdate();
                }
                DayOfWeek.Name = value;
            }
        }
    }
}
