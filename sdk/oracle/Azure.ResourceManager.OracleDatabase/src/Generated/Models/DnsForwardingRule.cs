// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.OracleDatabase;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> DNS forwarding rule properties. </summary>
    public partial class DnsForwardingRule
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DnsForwardingRule"/>. </summary>
        /// <param name="domainNames"> Comma-separated domain names. </param>
        /// <param name="forwardingIpAddress"> Forwarding ip address. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="domainNames"/> or <paramref name="forwardingIpAddress"/> is null. </exception>
        public DnsForwardingRule(string domainNames, string forwardingIpAddress)
        {
            Argument.AssertNotNull(domainNames, nameof(domainNames));
            Argument.AssertNotNull(forwardingIpAddress, nameof(forwardingIpAddress));

            DomainNames = domainNames;
            ForwardingIpAddress = forwardingIpAddress;
        }

        /// <summary> Initializes a new instance of <see cref="DnsForwardingRule"/>. </summary>
        /// <param name="domainNames"> Comma-separated domain names. </param>
        /// <param name="forwardingIpAddress"> Forwarding ip address. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DnsForwardingRule(string domainNames, string forwardingIpAddress, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DomainNames = domainNames;
            ForwardingIpAddress = forwardingIpAddress;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Comma-separated domain names. </summary>
        public string DomainNames { get; set; }

        /// <summary> Forwarding ip address. </summary>
        public string ForwardingIpAddress { get; set; }
    }
}
