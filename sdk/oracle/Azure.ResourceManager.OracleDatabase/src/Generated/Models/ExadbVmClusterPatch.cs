// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.OracleDatabase;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> The type used for update operations of the ExadbVmCluster. </summary>
    public partial class ExadbVmClusterPatch
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ExadbVmClusterPatch"/>. </summary>
        public ExadbVmClusterPatch()
        {
            Zones = new ChangeTrackingList<string>();
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="ExadbVmClusterPatch"/>. </summary>
        /// <param name="zones"> The availability zones. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ExadbVmClusterPatch(IList<string> zones, IDictionary<string, string> tags, ExadbVmClusterUpdateProperties properties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Zones = zones;
            Tags = tags;
            Properties = properties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The availability zones. </summary>
        public IList<string> Zones { get; }

        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }

        /// <summary> The resource-specific properties for this resource. </summary>
        internal ExadbVmClusterUpdateProperties Properties { get; set; }

        /// <summary> The number of nodes in the Exadata VM cluster on Exascale Infrastructure. </summary>
        public int? ExadbVmClusterUpdateNodeCount
        {
            get
            {
                return Properties is null ? default : Properties.NodeCount;
            }
            set
            {
                if (Properties is null)
                {
                    Properties = new ExadbVmClusterUpdateProperties();
                }
                Properties.NodeCount = value;
            }
        }
    }
}
