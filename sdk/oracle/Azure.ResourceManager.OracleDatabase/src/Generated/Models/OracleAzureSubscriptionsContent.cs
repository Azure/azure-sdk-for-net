// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.ResourceManager.OracleDatabase;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> Azure Subscriptions model. </summary>
    public partial class OracleAzureSubscriptionsContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="OracleAzureSubscriptionsContent"/>. </summary>
        /// <param name="azureSubscriptionIds"> Azure Subscription Ids to be updated. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureSubscriptionIds"/> is null. </exception>
        public OracleAzureSubscriptionsContent(IEnumerable<string> azureSubscriptionIds)
        {
            Argument.AssertNotNull(azureSubscriptionIds, nameof(azureSubscriptionIds));

            AzureSubscriptionIds = azureSubscriptionIds.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="OracleAzureSubscriptionsContent"/>. </summary>
        /// <param name="azureSubscriptionIds"> Azure Subscription Ids to be updated. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal OracleAzureSubscriptionsContent(IList<string> azureSubscriptionIds, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            AzureSubscriptionIds = azureSubscriptionIds;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Azure Subscription Ids to be updated. </summary>
        public IList<string> AzureSubscriptionIds { get; }
    }
}
