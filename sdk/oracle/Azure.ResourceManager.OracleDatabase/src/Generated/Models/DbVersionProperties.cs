// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> DbVersion resource model. </summary>
    public partial class DbVersionProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DbVersionProperties"/>. </summary>
        /// <param name="version"> A valid Oracle Database version. </param>
        internal DbVersionProperties(string version)
        {
            Version = version;
        }

        /// <summary> Initializes a new instance of <see cref="DbVersionProperties"/>. </summary>
        /// <param name="version"> A valid Oracle Database version. </param>
        /// <param name="isLatestForMajorVersion"> True if this version of the Oracle Database software is the latest version for a release. </param>
        /// <param name="isPreviewDbVersion"> True if this version of the Oracle Database software is the preview version. </param>
        /// <param name="isUpgradeSupported"> True if this version of the Oracle Database software is supported for Upgrade. </param>
        /// <param name="supportsPdb"> True if this version of the Oracle Database software supports pluggable databases. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DbVersionProperties(string version, bool? isLatestForMajorVersion, bool? isPreviewDbVersion, bool? isUpgradeSupported, bool? supportsPdb, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Version = version;
            IsLatestForMajorVersion = isLatestForMajorVersion;
            IsPreviewDbVersion = isPreviewDbVersion;
            IsUpgradeSupported = isUpgradeSupported;
            SupportsPdb = supportsPdb;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> A valid Oracle Database version. </summary>
        public string Version { get; }

        /// <summary> True if this version of the Oracle Database software is the latest version for a release. </summary>
        public bool? IsLatestForMajorVersion { get; }

        /// <summary> True if this version of the Oracle Database software is the preview version. </summary>
        public bool? IsPreviewDbVersion { get; }

        /// <summary> True if this version of the Oracle Database software is supported for Upgrade. </summary>
        public bool? IsUpgradeSupported { get; }

        /// <summary> True if this version of the Oracle Database software supports pluggable databases. </summary>
        public bool? SupportsPdb { get; }
    }
}
