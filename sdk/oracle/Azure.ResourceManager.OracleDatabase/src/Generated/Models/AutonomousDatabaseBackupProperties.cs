// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary>
    /// AutonomousDatabaseBackup resource model
    /// Serialized Name: AutonomousDatabaseBackupProperties
    /// </summary>
    public partial class AutonomousDatabaseBackupProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AutonomousDatabaseBackupProperties"/>. </summary>
        public AutonomousDatabaseBackupProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AutonomousDatabaseBackupProperties"/>. </summary>
        /// <param name="autonomousDatabaseOcid">
        /// The OCID of the Autonomous Database.
        /// Serialized Name: AutonomousDatabaseBackupProperties.autonomousDatabaseOcid
        /// </param>
        /// <param name="databaseSizeInTbs">
        /// The size of the database in terabytes at the time the backup was taken.
        /// Serialized Name: AutonomousDatabaseBackupProperties.databaseSizeInTbs
        /// </param>
        /// <param name="dbVersion">
        /// A valid Oracle Database version for Autonomous Database.
        /// Serialized Name: AutonomousDatabaseBackupProperties.dbVersion
        /// </param>
        /// <param name="displayName">
        /// The user-friendly name for the backup. The name does not have to be unique.
        /// Serialized Name: AutonomousDatabaseBackupProperties.displayName
        /// </param>
        /// <param name="ocid">
        /// The OCID of the Autonomous Database backup.
        /// Serialized Name: AutonomousDatabaseBackupProperties.ocid
        /// </param>
        /// <param name="isAutomatic">
        /// Indicates whether the backup is user-initiated or automatic.
        /// Serialized Name: AutonomousDatabaseBackupProperties.isAutomatic
        /// </param>
        /// <param name="isRestorable">
        /// Indicates whether the backup can be used to restore the associated Autonomous Database.
        /// Serialized Name: AutonomousDatabaseBackupProperties.isRestorable
        /// </param>
        /// <param name="lifecycleDetails">
        /// Additional information about the current lifecycle state.
        /// Serialized Name: AutonomousDatabaseBackupProperties.lifecycleDetails
        /// </param>
        /// <param name="lifecycleState">
        /// The current state of the backup.
        /// Serialized Name: AutonomousDatabaseBackupProperties.lifecycleState
        /// </param>
        /// <param name="retentionPeriodInDays">
        /// Retention period, in days, for long-term backups.
        /// Serialized Name: AutonomousDatabaseBackupProperties.retentionPeriodInDays
        /// </param>
        /// <param name="sizeInTbs">
        /// The backup size in terabytes (TB).
        /// Serialized Name: AutonomousDatabaseBackupProperties.sizeInTbs
        /// </param>
        /// <param name="timeAvailableTil">
        /// Timestamp until when the backup will be available.
        /// Serialized Name: AutonomousDatabaseBackupProperties.timeAvailableTil
        /// </param>
        /// <param name="timeStarted">
        /// The date and time the backup started.
        /// Serialized Name: AutonomousDatabaseBackupProperties.timeStarted
        /// </param>
        /// <param name="timeEnded">
        /// The date and time the backup completed.
        /// Serialized Name: AutonomousDatabaseBackupProperties.timeEnded
        /// </param>
        /// <param name="backupType">
        /// The type of backup.
        /// Serialized Name: AutonomousDatabaseBackupProperties.backupType
        /// </param>
        /// <param name="provisioningState">
        /// Azure resource provisioning state.
        /// Serialized Name: AutonomousDatabaseBackupProperties.provisioningState
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AutonomousDatabaseBackupProperties(string autonomousDatabaseOcid, double? databaseSizeInTbs, string dbVersion, string displayName, string ocid, bool? isAutomatic, bool? isRestorable, string lifecycleDetails, AutonomousDatabaseBackupLifecycleState? lifecycleState, int? retentionPeriodInDays, double? sizeInTbs, DateTimeOffset? timeAvailableTil, string timeStarted, string timeEnded, AutonomousDatabaseBackupType? backupType, AzureResourceProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            AutonomousDatabaseOcid = autonomousDatabaseOcid;
            DatabaseSizeInTbs = databaseSizeInTbs;
            DbVersion = dbVersion;
            DisplayName = displayName;
            Ocid = ocid;
            IsAutomatic = isAutomatic;
            IsRestorable = isRestorable;
            LifecycleDetails = lifecycleDetails;
            LifecycleState = lifecycleState;
            RetentionPeriodInDays = retentionPeriodInDays;
            SizeInTbs = sizeInTbs;
            TimeAvailableTil = timeAvailableTil;
            TimeStarted = timeStarted;
            TimeEnded = timeEnded;
            BackupType = backupType;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// The OCID of the Autonomous Database.
        /// Serialized Name: AutonomousDatabaseBackupProperties.autonomousDatabaseOcid
        /// </summary>
        public string AutonomousDatabaseOcid { get; }
        /// <summary>
        /// The size of the database in terabytes at the time the backup was taken.
        /// Serialized Name: AutonomousDatabaseBackupProperties.databaseSizeInTbs
        /// </summary>
        public double? DatabaseSizeInTbs { get; }
        /// <summary>
        /// A valid Oracle Database version for Autonomous Database.
        /// Serialized Name: AutonomousDatabaseBackupProperties.dbVersion
        /// </summary>
        public string DbVersion { get; }
        /// <summary>
        /// The user-friendly name for the backup. The name does not have to be unique.
        /// Serialized Name: AutonomousDatabaseBackupProperties.displayName
        /// </summary>
        public string DisplayName { get; set; }
        /// <summary>
        /// The OCID of the Autonomous Database backup.
        /// Serialized Name: AutonomousDatabaseBackupProperties.ocid
        /// </summary>
        public string Ocid { get; }
        /// <summary>
        /// Indicates whether the backup is user-initiated or automatic.
        /// Serialized Name: AutonomousDatabaseBackupProperties.isAutomatic
        /// </summary>
        public bool? IsAutomatic { get; }
        /// <summary>
        /// Indicates whether the backup can be used to restore the associated Autonomous Database.
        /// Serialized Name: AutonomousDatabaseBackupProperties.isRestorable
        /// </summary>
        public bool? IsRestorable { get; }
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// Serialized Name: AutonomousDatabaseBackupProperties.lifecycleDetails
        /// </summary>
        public string LifecycleDetails { get; }
        /// <summary>
        /// The current state of the backup.
        /// Serialized Name: AutonomousDatabaseBackupProperties.lifecycleState
        /// </summary>
        public AutonomousDatabaseBackupLifecycleState? LifecycleState { get; }
        /// <summary>
        /// Retention period, in days, for long-term backups.
        /// Serialized Name: AutonomousDatabaseBackupProperties.retentionPeriodInDays
        /// </summary>
        public int? RetentionPeriodInDays { get; set; }
        /// <summary>
        /// The backup size in terabytes (TB).
        /// Serialized Name: AutonomousDatabaseBackupProperties.sizeInTbs
        /// </summary>
        public double? SizeInTbs { get; }
        /// <summary>
        /// Timestamp until when the backup will be available.
        /// Serialized Name: AutonomousDatabaseBackupProperties.timeAvailableTil
        /// </summary>
        public DateTimeOffset? TimeAvailableTil { get; }
        /// <summary>
        /// The date and time the backup started.
        /// Serialized Name: AutonomousDatabaseBackupProperties.timeStarted
        /// </summary>
        public string TimeStarted { get; }
        /// <summary>
        /// The date and time the backup completed.
        /// Serialized Name: AutonomousDatabaseBackupProperties.timeEnded
        /// </summary>
        public string TimeEnded { get; }
        /// <summary>
        /// The type of backup.
        /// Serialized Name: AutonomousDatabaseBackupProperties.backupType
        /// </summary>
        public AutonomousDatabaseBackupType? BackupType { get; }
        /// <summary>
        /// Azure resource provisioning state.
        /// Serialized Name: AutonomousDatabaseBackupProperties.provisioningState
        /// </summary>
        public AzureResourceProvisioningState? ProvisioningState { get; }
    }
}
