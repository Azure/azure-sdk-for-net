// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> PrivateIpAddress resource properties. </summary>
    public partial class PrivateIPAddressResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="PrivateIPAddressResult"/>. </summary>
        /// <param name="displayName"> PrivateIpAddresses displayName. </param>
        /// <param name="hostnameLabel"> PrivateIpAddresses hostnameLabel. </param>
        /// <param name="privateIPAddressesOcid"> PrivateIpAddresses Id. </param>
        /// <param name="ipAddress"> PrivateIpAddresses ipAddress. </param>
        /// <param name="subnetOcid"> PrivateIpAddresses subnetId. </param>
        internal PrivateIPAddressResult(string displayName, string hostnameLabel, string privateIPAddressesOcid, string ipAddress, string subnetOcid)
        {
            DisplayName = displayName;
            HostnameLabel = hostnameLabel;
            PrivateIPAddressesOcid = privateIPAddressesOcid;
            IpAddress = ipAddress;
            SubnetOcid = subnetOcid;
        }

        /// <summary> Initializes a new instance of <see cref="PrivateIPAddressResult"/>. </summary>
        /// <param name="displayName"> PrivateIpAddresses displayName. </param>
        /// <param name="hostnameLabel"> PrivateIpAddresses hostnameLabel. </param>
        /// <param name="privateIPAddressesOcid"> PrivateIpAddresses Id. </param>
        /// <param name="ipAddress"> PrivateIpAddresses ipAddress. </param>
        /// <param name="subnetOcid"> PrivateIpAddresses subnetId. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal PrivateIPAddressResult(string displayName, string hostnameLabel, string privateIPAddressesOcid, string ipAddress, string subnetOcid, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DisplayName = displayName;
            HostnameLabel = hostnameLabel;
            PrivateIPAddressesOcid = privateIPAddressesOcid;
            IpAddress = ipAddress;
            SubnetOcid = subnetOcid;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> PrivateIpAddresses displayName. </summary>
        public string DisplayName { get; }

        /// <summary> PrivateIpAddresses hostnameLabel. </summary>
        public string HostnameLabel { get; }

        /// <summary> PrivateIpAddresses Id. </summary>
        public string PrivateIPAddressesOcid { get; }

        /// <summary> PrivateIpAddresses ipAddress. </summary>
        public string IpAddress { get; }

        /// <summary> PrivateIpAddresses subnetId. </summary>
        public string SubnetOcid { get; }
    }
}
