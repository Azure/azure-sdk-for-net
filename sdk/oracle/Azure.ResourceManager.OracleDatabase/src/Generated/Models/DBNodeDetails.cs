// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.OracleDatabase;

namespace Azure.ResourceManager.OracleDatabase.Models
{
    /// <summary> Details of the ExaCS Db node. Applies to Exadata Database Service on Exascale Infrastructure only. </summary>
    public partial class DBNodeDetails
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DBNodeDetails"/>. </summary>
        /// <param name="dbNodeId"> Exascale DbNode Azure Resource ID. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dbNodeId"/> is null. </exception>
        public DBNodeDetails(ResourceIdentifier dbNodeId)
        {
            Argument.AssertNotNull(dbNodeId, nameof(dbNodeId));

            DBNodeId = dbNodeId;
        }

        /// <summary> Initializes a new instance of <see cref="DBNodeDetails"/>. </summary>
        /// <param name="dbNodeId"> Exascale DbNode Azure Resource ID. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DBNodeDetails(ResourceIdentifier dbNodeId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            DBNodeId = dbNodeId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Exascale DbNode Azure Resource ID. </summary>
        public ResourceIdentifier DBNodeId { get; }
    }
}
