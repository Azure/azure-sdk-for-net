// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.OracleDatabase.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.OracleDatabase.Samples
{
    public partial class Sample_ExadbVmClusterResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ExadbVmClustersGetMaximumSet()
        {
            // Generated from example definition: specification/oracle/resource-manager/Oracle.Database/stable/2025-03-01/examples/ExadbVmClusters_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "ExadbVmClusters_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ExadbVmClusterResource created on azure
            // for more information of creating ExadbVmClusterResource, please refer to the document of ExadbVmClusterResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string exadbVmClusterName = "vmClusterName";
            ResourceIdentifier exadbVmClusterResourceId = ExadbVmClusterResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, exadbVmClusterName);
            ExadbVmClusterResource exadbVmCluster = client.GetExadbVmClusterResource(exadbVmClusterResourceId);

            // invoke the operation
            ExadbVmClusterResource result = await exadbVmCluster.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ExadbVmClusterData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ExadbVmClustersDeleteMaximumSet()
        {
            // Generated from example definition: specification/oracle/resource-manager/Oracle.Database/stable/2025-03-01/examples/ExadbVmClusters_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "ExadbVmClusters_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ExadbVmClusterResource created on azure
            // for more information of creating ExadbVmClusterResource, please refer to the document of ExadbVmClusterResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string exadbVmClusterName = "vmClusterName";
            ResourceIdentifier exadbVmClusterResourceId = ExadbVmClusterResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, exadbVmClusterName);
            ExadbVmClusterResource exadbVmCluster = client.GetExadbVmClusterResource(exadbVmClusterResourceId);

            // invoke the operation
            await exadbVmCluster.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ExadbVmClustersUpdateMaximumSet()
        {
            // Generated from example definition: specification/oracle/resource-manager/Oracle.Database/stable/2025-03-01/examples/ExadbVmClusters_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "ExadbVmClusters_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ExadbVmClusterResource created on azure
            // for more information of creating ExadbVmClusterResource, please refer to the document of ExadbVmClusterResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string exadbVmClusterName = "vmClusterName";
            ResourceIdentifier exadbVmClusterResourceId = ExadbVmClusterResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, exadbVmClusterName);
            ExadbVmClusterResource exadbVmCluster = client.GetExadbVmClusterResource(exadbVmClusterResourceId);

            // invoke the operation
            ExadbVmClusterPatch patch = new ExadbVmClusterPatch
            {
                Zones = { "zcqfxmpauiqjphmhwwt" },
                Tags =
{
["key6027"] = "kesrhztqxwjjsexr"
},
                ExadbVmClusterUpdateNodeCount = 9,
            };
            ArmOperation<ExadbVmClusterResource> lro = await exadbVmCluster.UpdateAsync(WaitUntil.Completed, patch);
            ExadbVmClusterResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ExadbVmClusterData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task RemoveVms_ExadbVmClustersRemoveVmsMaximumSet()
        {
            // Generated from example definition: specification/oracle/resource-manager/Oracle.Database/stable/2025-03-01/examples/ExadbVmClusters_RemoveVms_MaximumSet_Gen.json
            // this example is just showing the usage of "ExadbVmClusters_RemoveVms" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ExadbVmClusterResource created on azure
            // for more information of creating ExadbVmClusterResource, please refer to the document of ExadbVmClusterResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rgopenapi";
            string exadbVmClusterName = "vmClusterName";
            ResourceIdentifier exadbVmClusterResourceId = ExadbVmClusterResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, exadbVmClusterName);
            ExadbVmClusterResource exadbVmCluster = client.GetExadbVmClusterResource(exadbVmClusterResourceId);

            // invoke the operation
            RemoveVirtualMachineFromExadbVmClusterDetails details = new RemoveVirtualMachineFromExadbVmClusterDetails(new DBNodeDetails[]
            {
new DBNodeDetails(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Oracle.Database/exadbVmClusters/vmCluster/dbNodes/dbNodeName"))
            });
            ArmOperation<ExadbVmClusterResource> lro = await exadbVmCluster.RemoveVmsAsync(WaitUntil.Completed, details);
            ExadbVmClusterResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ExadbVmClusterData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
