// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Template.Contoso
{
    /// <summary> Model factory for models. </summary>
    public static partial class TemplateContosoModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Contoso.WidgetSuite"/>. </summary>
        /// <param name="name"> The widget name. </param>
        /// <param name="manufacturerId"> The ID of the widget's manufacturer. </param>
        /// <param name="sharedModel"> The faked shared model. </param>
        /// <returns> A new <see cref="Contoso.WidgetSuite"/> instance for mocking. </returns>
        public static WidgetSuite WidgetSuite(string name = null, string manufacturerId = null, FakedSharedModel sharedModel = null)
        {
            return new WidgetSuite(name, manufacturerId, sharedModel, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Contoso.ResourceOperationStatusWidgetSuiteWidgetSuiteError"/>. </summary>
        /// <param name="id"> The unique ID of the operation. </param>
        /// <param name="status"> The status of the operation. </param>
        /// <param name="error"> Error object that describes the error when status is "Failed". </param>
        /// <param name="result"> The result of the operation. </param>
        /// <returns> A new <see cref="Contoso.ResourceOperationStatusWidgetSuiteWidgetSuiteError"/> instance for mocking. </returns>
        public static ResourceOperationStatusWidgetSuiteWidgetSuiteError ResourceOperationStatusWidgetSuiteWidgetSuiteError(string id = null, OperationState status = default, ResponseError error = null, WidgetSuite result = null)
        {
            return new ResourceOperationStatusWidgetSuiteWidgetSuiteError(id, status, error, result, serializedAdditionalRawData: null);
        }
    }
}
