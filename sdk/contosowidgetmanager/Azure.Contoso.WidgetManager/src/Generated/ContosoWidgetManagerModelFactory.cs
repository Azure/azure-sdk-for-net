// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Contoso.WidgetManager
{
    /// <summary> Model factory for models. </summary>
    public static partial class ContosoWidgetManagerModelFactory
    {
        /// <summary> Initializes a new instance of Widget. </summary>
        /// <param name="name"> The widget name. </param>
        /// <param name="manufacturerId"> The ID of the widget's manufacturer. </param>
        /// <param name="sharedModel"> The faked shared model. </param>
        /// <returns> A new <see cref="WidgetManager.Widget"/> instance for mocking. </returns>
        public static Widget Widget(string name = null, string manufacturerId = null, FakedSharedModel sharedModel = null)
        {
            return new Widget(name, manufacturerId, sharedModel);
        }

        /// <summary> Initializes a new instance of FakedSharedModel. </summary>
        /// <param name="tag"> The tag. </param>
        /// <param name="createdDate"> The created date. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="tag"/> is null. </exception>
        /// <returns> A new <see cref="WidgetManager.FakedSharedModel"/> instance for mocking. </returns>
        public static FakedSharedModel FakedSharedModel(string tag = null, DateTimeOffset createdDate = default)
        {
            if (tag == null)
            {
                throw new ArgumentNullException(nameof(tag));
            }

            return new FakedSharedModel(tag, createdDate);
        }
    }
}
