// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PostgreSQL.FlexibleServers.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents server restart parameters.
    /// </summary>
    public partial class RestartParameter
    {
        /// <summary>
        /// Initializes a new instance of the RestartParameter class.
        /// </summary>
        public RestartParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestartParameter class.
        /// </summary>
        /// <param name="restartWithFailover">Indicates whether to restart the
        /// server with failover.</param>
        /// <param name="failoverMode">Failover mode. Possible values include:
        /// 'PlannedFailover', 'ForcedFailover', 'PlannedSwitchover',
        /// 'ForcedSwitchover'</param>
        public RestartParameter(bool? restartWithFailover = default(bool?), string failoverMode = default(string))
        {
            RestartWithFailover = restartWithFailover;
            FailoverMode = failoverMode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets indicates whether to restart the server with failover.
        /// </summary>
        [JsonProperty(PropertyName = "restartWithFailover")]
        public bool? RestartWithFailover { get; set; }

        /// <summary>
        /// Gets or sets failover mode. Possible values include:
        /// 'PlannedFailover', 'ForcedFailover', 'PlannedSwitchover',
        /// 'ForcedSwitchover'
        /// </summary>
        [JsonProperty(PropertyName = "failoverMode")]
        public string FailoverMode { get; set; }

    }
}
