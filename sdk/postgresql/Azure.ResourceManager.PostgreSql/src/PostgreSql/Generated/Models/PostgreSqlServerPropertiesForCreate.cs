// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.PostgreSql.Models
{
    /// <summary>
    /// The properties used to create a new server.
    /// Please note <see cref="PostgreSqlServerPropertiesForCreate"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="PostgreSqlServerPropertiesForDefaultCreate"/>, <see cref="PostgreSqlServerPropertiesForGeoRestore"/>, <see cref="PostgreSqlServerPropertiesForRestore"/> and <see cref="PostgreSqlServerPropertiesForReplica"/>.
    /// </summary>
    public abstract partial class PostgreSqlServerPropertiesForCreate
    {
        /// <summary> Initializes a new instance of PostgreSqlServerPropertiesForCreate. </summary>
        protected PostgreSqlServerPropertiesForCreate()
        {
        }

        /// <summary> Server version. </summary>
        public PostgreSqlServerVersion? Version { get; set; }
        /// <summary> Enable ssl enforcement or not when connect to server. </summary>
        public PostgreSqlSslEnforcementEnum? SslEnforcement { get; set; }
        /// <summary> Enforce a minimal Tls version for the server. </summary>
        public PostgreSqlMinimalTlsVersionEnum? MinimalTlsVersion { get; set; }
        /// <summary> Status showing whether the server enabled infrastructure encryption. </summary>
        public PostgreSqlInfrastructureEncryption? InfrastructureEncryption { get; set; }
        /// <summary> Whether or not public network access is allowed for this server. Value is optional but if passed in, must be &apos;Enabled&apos; or &apos;Disabled&apos;. </summary>
        public PostgreSqlPublicNetworkAccessEnum? PublicNetworkAccess { get; set; }
        /// <summary> Storage profile of a server. </summary>
        public PostgreSqlStorageProfile StorageProfile { get; set; }
        /// <summary> The mode to create a new server. </summary>
        internal PostgreSqlCreateMode CreateMode { get; set; }
    }
}
