// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.PostgreSql.Models
{
    /// <summary> Performance tier properties. </summary>
    public partial class PerformanceTierProperties
    {
        /// <summary> Initializes a new instance of PerformanceTierProperties. </summary>
        internal PerformanceTierProperties()
        {
            ServiceLevelObjectives = new ChangeTrackingList<PerformanceTierServiceLevelObjectives>();
        }

        /// <summary> Initializes a new instance of PerformanceTierProperties. </summary>
        /// <param name="id"> ID of the performance tier. </param>
        /// <param name="maxBackupRetentionDays"> Maximum Backup retention in days for the performance tier edition. </param>
        /// <param name="minBackupRetentionDays"> Minimum Backup retention in days for the performance tier edition. </param>
        /// <param name="maxStorageMB"> Max storage allowed for a server. </param>
        /// <param name="minLargeStorageMB"> Max storage allowed for a server. </param>
        /// <param name="maxLargeStorageMB"> Max storage allowed for a server. </param>
        /// <param name="minStorageMB"> Max storage allowed for a server. </param>
        /// <param name="serviceLevelObjectives"> Service level objectives associated with the performance tier. </param>
        internal PerformanceTierProperties(string id, int? maxBackupRetentionDays, int? minBackupRetentionDays, int? maxStorageMB, int? minLargeStorageMB, int? maxLargeStorageMB, int? minStorageMB, IReadOnlyList<PerformanceTierServiceLevelObjectives> serviceLevelObjectives)
        {
            Id = id;
            MaxBackupRetentionDays = maxBackupRetentionDays;
            MinBackupRetentionDays = minBackupRetentionDays;
            MaxStorageMB = maxStorageMB;
            MinLargeStorageMB = minLargeStorageMB;
            MaxLargeStorageMB = maxLargeStorageMB;
            MinStorageMB = minStorageMB;
            ServiceLevelObjectives = serviceLevelObjectives;
        }

        /// <summary> ID of the performance tier. </summary>
        public string Id { get; }
        /// <summary> Maximum Backup retention in days for the performance tier edition. </summary>
        public int? MaxBackupRetentionDays { get; }
        /// <summary> Minimum Backup retention in days for the performance tier edition. </summary>
        public int? MinBackupRetentionDays { get; }
        /// <summary> Max storage allowed for a server. </summary>
        public int? MaxStorageMB { get; }
        /// <summary> Max storage allowed for a server. </summary>
        public int? MinLargeStorageMB { get; }
        /// <summary> Max storage allowed for a server. </summary>
        public int? MaxLargeStorageMB { get; }
        /// <summary> Max storage allowed for a server. </summary>
        public int? MinStorageMB { get; }
        /// <summary> Service level objectives associated with the performance tier. </summary>
        public IReadOnlyList<PerformanceTierServiceLevelObjectives> ServiceLevelObjectives { get; }
    }
}
