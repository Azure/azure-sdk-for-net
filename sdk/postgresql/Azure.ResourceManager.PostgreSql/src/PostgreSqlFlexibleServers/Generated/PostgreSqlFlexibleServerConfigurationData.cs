// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.PostgreSql.FlexibleServers.Models;

namespace Azure.ResourceManager.PostgreSql.FlexibleServers
{
    /// <summary>
    /// A class representing the PostgreSqlFlexibleServerConfiguration data model.
    /// Represents a Configuration.
    /// </summary>
    public partial class PostgreSqlFlexibleServerConfigurationData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="PostgreSqlFlexibleServerConfigurationData"/>. </summary>
        public PostgreSqlFlexibleServerConfigurationData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="PostgreSqlFlexibleServerConfigurationData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="value"> Value of the configuration. </param>
        /// <param name="description"> Description of the configuration. </param>
        /// <param name="defaultValue"> Default value of the configuration. </param>
        /// <param name="dataType"> Data type of the configuration. </param>
        /// <param name="allowedValues"> Allowed values of the configuration. </param>
        /// <param name="source"> Source of the configuration. </param>
        /// <param name="isDynamicConfig"> Configuration dynamic or static. </param>
        /// <param name="isReadOnly"> Configuration read-only or not. </param>
        /// <param name="isConfigPendingRestart"> Configuration is pending restart or not. </param>
        /// <param name="unit"> Configuration unit. </param>
        /// <param name="documentationLink"> Configuration documentation link. </param>
        internal PostgreSqlFlexibleServerConfigurationData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string value, string description, string defaultValue, PostgreSqlFlexibleServerConfigurationDataType? dataType, string allowedValues, string source, bool? isDynamicConfig, bool? isReadOnly, bool? isConfigPendingRestart, string unit, string documentationLink) : base(id, name, resourceType, systemData)
        {
            Value = value;
            Description = description;
            DefaultValue = defaultValue;
            DataType = dataType;
            AllowedValues = allowedValues;
            Source = source;
            IsDynamicConfig = isDynamicConfig;
            IsReadOnly = isReadOnly;
            IsConfigPendingRestart = isConfigPendingRestart;
            Unit = unit;
            DocumentationLink = documentationLink;
        }

        /// <summary> Value of the configuration. </summary>
        public string Value { get; set; }
        /// <summary> Description of the configuration. </summary>
        public string Description { get; }
        /// <summary> Default value of the configuration. </summary>
        public string DefaultValue { get; }
        /// <summary> Data type of the configuration. </summary>
        public PostgreSqlFlexibleServerConfigurationDataType? DataType { get; }
        /// <summary> Allowed values of the configuration. </summary>
        public string AllowedValues { get; }
        /// <summary> Source of the configuration. </summary>
        public string Source { get; set; }
        /// <summary> Configuration dynamic or static. </summary>
        public bool? IsDynamicConfig { get; }
        /// <summary> Configuration read-only or not. </summary>
        public bool? IsReadOnly { get; }
        /// <summary> Configuration is pending restart or not. </summary>
        public bool? IsConfigPendingRestart { get; }
        /// <summary> Configuration unit. </summary>
        public string Unit { get; }
        /// <summary> Configuration documentation link. </summary>
        public string DocumentationLink { get; }
    }
}
