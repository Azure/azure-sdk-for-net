// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.PostgreSql.FlexibleServers.Models
{
    /// <summary> Represents a server to be updated. </summary>
    public partial class PostgreSqlFlexibleServerPatch
    {
        /// <summary> Initializes a new instance of PostgreSqlFlexibleServerPatch. </summary>
        public PostgreSqlFlexibleServerPatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> The location the resource resides in. </summary>
        public AzureLocation? Location { get; set; }
        /// <summary> The SKU (pricing tier) of the server. </summary>
        public PostgreSqlFlexibleServerSku Sku { get; set; }
        /// <summary> Application-specific metadata in the form of key-value pairs. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> The password of the administrator login. </summary>
        public string AdministratorLoginPassword { get; set; }
        /// <summary> Storage properties of a server. </summary>
        internal PostgreSqlFlexibleServerStorage Storage { get; set; }
        /// <summary> Max storage allowed for a server. </summary>
        public int? StorageSizeInGB
        {
            get => Storage is null ? default : Storage.StorageSizeInGB;
            set
            {
                if (Storage is null)
                    Storage = new PostgreSqlFlexibleServerStorage();
                Storage.StorageSizeInGB = value;
            }
        }

        /// <summary> Backup properties of a server. </summary>
        public PostgreSqlFlexibleServerBackupProperties Backup { get; set; }
        /// <summary> High availability properties of a server. </summary>
        public PostgreSqlFlexibleServerHighAvailability HighAvailability { get; set; }
        /// <summary> Maintenance window properties of a server. </summary>
        public PostgreSqlFlexibleServerMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary> The mode to update a new PostgreSQL server. </summary>
        public PostgreSqlFlexibleServerCreateModeForUpdate? CreateMode { get; set; }
    }
}
