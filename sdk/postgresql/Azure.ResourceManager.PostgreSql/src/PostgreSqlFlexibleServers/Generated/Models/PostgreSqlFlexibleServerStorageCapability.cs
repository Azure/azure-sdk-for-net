// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.PostgreSql.FlexibleServers.Models
{
    /// <summary> storage size in MB capability. </summary>
    public partial class PostgreSqlFlexibleServerStorageCapability : PostgreSqlBaseCapability
    {
        /// <summary> Initializes a new instance of <see cref="PostgreSqlFlexibleServerStorageCapability"/>. </summary>
        internal PostgreSqlFlexibleServerStorageCapability()
        {
            SupportedIopsTiers = new ChangeTrackingList<PostgreSqlFlexibleServerStorageTierCapability>();
        }

        /// <summary> Initializes a new instance of <see cref="PostgreSqlFlexibleServerStorageCapability"/>. </summary>
        /// <param name="capabilityStatus"> The status of the capability. </param>
        /// <param name="reason"> The reason for the capability not being available. </param>
        /// <param name="supportedIops"> Supported IOPS. </param>
        /// <param name="storageSizeInMB"> Storage size in MB. </param>
        /// <param name="defaultIopsTier"> Default tier for IOPS. </param>
        /// <param name="supportedIopsTiers"> List of available options to upgrade the storage performance. </param>
        internal PostgreSqlFlexibleServerStorageCapability(PostgreSqlFlexbileServerCapabilityStatus? capabilityStatus, string reason, long? supportedIops, long? storageSizeInMB, string defaultIopsTier, IReadOnlyList<PostgreSqlFlexibleServerStorageTierCapability> supportedIopsTiers) : base(capabilityStatus, reason)
        {
            SupportedIops = supportedIops;
            StorageSizeInMB = storageSizeInMB;
            DefaultIopsTier = defaultIopsTier;
            SupportedIopsTiers = supportedIopsTiers;
        }
        /// <summary> Storage size in MB. </summary>
        public long? StorageSizeInMB { get; }
        /// <summary> Default tier for IOPS. </summary>
        public string DefaultIopsTier { get; }
        /// <summary> List of available options to upgrade the storage performance. </summary>
        public IReadOnlyList<PostgreSqlFlexibleServerStorageTierCapability> SupportedIopsTiers { get; }
    }
}
