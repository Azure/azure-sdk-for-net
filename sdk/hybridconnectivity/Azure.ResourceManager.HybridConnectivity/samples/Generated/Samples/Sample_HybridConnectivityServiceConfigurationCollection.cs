// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.HybridConnectivity.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.HybridConnectivity.Samples
{
    public partial class Sample_HybridConnectivityServiceConfigurationCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_ServiceConfigurationsPutSSH()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsPutSSH.json
            // this example is just showing the usage of "ServiceConfigurations_CreateOrupdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation
            string serviceConfigurationName = "SSH";
            HybridConnectivityServiceConfigurationData data = new HybridConnectivityServiceConfigurationData
            {
                ServiceName = HybridConnectivityServiceName.SSH,
                Port = 22L,
            };
            ArmOperation<HybridConnectivityServiceConfigurationResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, serviceConfigurationName, data);
            HybridConnectivityServiceConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HybridConnectivityServiceConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_ServiceConfigurationsPutWAC()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsPutWAC.json
            // this example is just showing the usage of "ServiceConfigurations_CreateOrupdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation
            string serviceConfigurationName = "WAC";
            HybridConnectivityServiceConfigurationData data = new HybridConnectivityServiceConfigurationData
            {
                ServiceName = HybridConnectivityServiceName.WAC,
                Port = 6516L,
            };
            ArmOperation<HybridConnectivityServiceConfigurationResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, serviceConfigurationName, data);
            HybridConnectivityServiceConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HybridConnectivityServiceConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_HybridConnectivityEndpointsServiceconfigurationsGetSSH()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsGetSSH.json
            // this example is just showing the usage of "ServiceConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation
            string serviceConfigurationName = "SSH";
            HybridConnectivityServiceConfigurationResource result = await collection.GetAsync(serviceConfigurationName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HybridConnectivityServiceConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_HybridConnectivityEndpointsServiceconfigurationsGetWAC()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsGetWAC.json
            // this example is just showing the usage of "ServiceConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation
            string serviceConfigurationName = "WAC";
            HybridConnectivityServiceConfigurationResource result = await collection.GetAsync(serviceConfigurationName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            HybridConnectivityServiceConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_GetClustersExample()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsList.json
            // this example is just showing the usage of "ServiceConfigurations_ListByEndpointResource" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation and iterate over the result
            await foreach (HybridConnectivityServiceConfigurationResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                HybridConnectivityServiceConfigurationData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_HybridConnectivityEndpointsServiceconfigurationsGetSSH()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsGetSSH.json
            // this example is just showing the usage of "ServiceConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation
            string serviceConfigurationName = "SSH";
            bool result = await collection.ExistsAsync(serviceConfigurationName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_HybridConnectivityEndpointsServiceconfigurationsGetWAC()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsGetWAC.json
            // this example is just showing the usage of "ServiceConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation
            string serviceConfigurationName = "WAC";
            bool result = await collection.ExistsAsync(serviceConfigurationName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_HybridConnectivityEndpointsServiceconfigurationsGetSSH()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsGetSSH.json
            // this example is just showing the usage of "ServiceConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation
            string serviceConfigurationName = "SSH";
            NullableResponse<HybridConnectivityServiceConfigurationResource> response = await collection.GetIfExistsAsync(serviceConfigurationName);
            HybridConnectivityServiceConfigurationResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                HybridConnectivityServiceConfigurationData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_HybridConnectivityEndpointsServiceconfigurationsGetWAC()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2023-03-15/examples/ServiceConfigurationsGetWAC.json
            // this example is just showing the usage of "ServiceConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this HybridConnectivityEndpointResource created on azure
            // for more information of creating HybridConnectivityEndpointResource, please refer to the document of HybridConnectivityEndpointResource
            string resourceUri = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            ResourceIdentifier hybridConnectivityEndpointResourceId = HybridConnectivityEndpointResource.CreateResourceIdentifier(resourceUri, endpointName);
            HybridConnectivityEndpointResource hybridConnectivityEndpoint = client.GetHybridConnectivityEndpointResource(hybridConnectivityEndpointResourceId);

            // get the collection of this HybridConnectivityServiceConfigurationResource
            HybridConnectivityServiceConfigurationCollection collection = hybridConnectivityEndpoint.GetHybridConnectivityServiceConfigurations();

            // invoke the operation
            string serviceConfigurationName = "WAC";
            NullableResponse<HybridConnectivityServiceConfigurationResource> response = await collection.GetIfExistsAsync(serviceConfigurationName);
            HybridConnectivityServiceConfigurationResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                HybridConnectivityServiceConfigurationData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
