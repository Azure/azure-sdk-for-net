// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.HybridConnectivity.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.HybridConnectivity.Samples
{
    public partial class Sample_ServiceConfigurationResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_HybridConnectivityEndpointsServiceconfigurationsGetSSH()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2024-12-01/examples/ServiceConfigurationsGetSSH.json
            // this example is just showing the usage of "ServiceConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServiceConfigurationResource created on azure
            // for more information of creating ServiceConfigurationResource, please refer to the document of ServiceConfigurationResource
            string scope = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            string serviceConfigurationName = "SSH";
            ResourceIdentifier serviceConfigurationResourceId = ServiceConfigurationResource.CreateResourceIdentifier(scope, endpointName, serviceConfigurationName);
            ServiceConfigurationResource serviceConfigurationResource = client.GetServiceConfigurationResource(serviceConfigurationResourceId);

            // invoke the operation
            ServiceConfigurationResource result = await serviceConfigurationResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServiceConfigurationResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_HybridConnectivityEndpointsServiceconfigurationsGetWAC()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2024-12-01/examples/ServiceConfigurationsGetWAC.json
            // this example is just showing the usage of "ServiceConfigurations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServiceConfigurationResource created on azure
            // for more information of creating ServiceConfigurationResource, please refer to the document of ServiceConfigurationResource
            string scope = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            string serviceConfigurationName = "WAC";
            ResourceIdentifier serviceConfigurationResourceId = ServiceConfigurationResource.CreateResourceIdentifier(scope, endpointName, serviceConfigurationName);
            ServiceConfigurationResource serviceConfigurationResource = client.GetServiceConfigurationResource(serviceConfigurationResourceId);

            // invoke the operation
            ServiceConfigurationResource result = await serviceConfigurationResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServiceConfigurationResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ServiceConfigurationsPatchSSH()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2024-12-01/examples/ServiceConfigurationsPatchSSH.json
            // this example is just showing the usage of "ServiceConfigurations_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServiceConfigurationResource created on azure
            // for more information of creating ServiceConfigurationResource, please refer to the document of ServiceConfigurationResource
            string scope = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            string serviceConfigurationName = "SSH";
            ResourceIdentifier serviceConfigurationResourceId = ServiceConfigurationResource.CreateResourceIdentifier(scope, endpointName, serviceConfigurationName);
            ServiceConfigurationResource serviceConfigurationResource = client.GetServiceConfigurationResource(serviceConfigurationResourceId);

            // invoke the operation
            ServiceConfigurationResourcePatch patch = new ServiceConfigurationResourcePatch()
            {
                Port = 22L,
            };
            ServiceConfigurationResource result = await serviceConfigurationResource.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServiceConfigurationResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ServiceConfigurationsDeleteSSH()
        {
            // Generated from example definition: specification/hybridconnectivity/resource-manager/Microsoft.HybridConnectivity/stable/2024-12-01/examples/ServiceConfigurationsDeleteSSH.json
            // this example is just showing the usage of "ServiceConfigurations_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServiceConfigurationResource created on azure
            // for more information of creating ServiceConfigurationResource, please refer to the document of ServiceConfigurationResource
            string scope = "subscriptions/f5bcc1d9-23af-4ae9-aca1-041d0f593a63/resourceGroups/hybridRG/providers/Microsoft.HybridCompute/machines/testMachine/providers/Microsoft.HybridConnectivity/endpoints/default";
            string endpointName = "default";
            string serviceConfigurationName = "SSH";
            ResourceIdentifier serviceConfigurationResourceId = ServiceConfigurationResource.CreateResourceIdentifier(scope, endpointName, serviceConfigurationName);
            ServiceConfigurationResource serviceConfigurationResource = client.GetServiceConfigurationResource(serviceConfigurationResourceId);

            // invoke the operation
            await serviceConfigurationResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }
    }
}
