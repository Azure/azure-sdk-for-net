// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.HybridConnectivity.Models
{
    /// <summary> Solution Configuration Status. </summary>
    public readonly partial struct SolutionConfigurationStatus : IEquatable<SolutionConfigurationStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="SolutionConfigurationStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public SolutionConfigurationStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NewValue = "New";
        private const string InProgressValue = "InProgress";
        private const string CompletedValue = "Completed";
        private const string FailedValue = "Failed";

        /// <summary> New status. </summary>
        public static SolutionConfigurationStatus New { get; } = new SolutionConfigurationStatus(NewValue);
        /// <summary> InProgress status. </summary>
        public static SolutionConfigurationStatus InProgress { get; } = new SolutionConfigurationStatus(InProgressValue);
        /// <summary> Canceled status. </summary>
        public static SolutionConfigurationStatus Completed { get; } = new SolutionConfigurationStatus(CompletedValue);
        /// <summary> Failed status. </summary>
        public static SolutionConfigurationStatus Failed { get; } = new SolutionConfigurationStatus(FailedValue);
        /// <summary> Determines if two <see cref="SolutionConfigurationStatus"/> values are the same. </summary>
        public static bool operator ==(SolutionConfigurationStatus left, SolutionConfigurationStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="SolutionConfigurationStatus"/> values are not the same. </summary>
        public static bool operator !=(SolutionConfigurationStatus left, SolutionConfigurationStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="SolutionConfigurationStatus"/>. </summary>
        public static implicit operator SolutionConfigurationStatus(string value) => new SolutionConfigurationStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is SolutionConfigurationStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(SolutionConfigurationStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
