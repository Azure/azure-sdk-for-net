// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.CosmosDBForPostgreSql;

namespace Azure.ResourceManager.CosmosDBForPostgreSql.Samples
{
    public partial class Sample_ServerGroupsv2NodeConfigurationResource
    {
        // Get configuration details for node.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetConfigurationDetailsForNode()
        {
            // Generated from example definition: specification/postgresqlhsc/resource-manager/Microsoft.DBforPostgreSQL/stable/2022-11-08/examples/ConfigurationGetNode.json
            // this example is just showing the usage of "Configurations_GetNode" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServerGroupsv2NodeConfigurationResource created on azure
            // for more information of creating ServerGroupsv2NodeConfigurationResource, please refer to the document of ServerGroupsv2NodeConfigurationResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestResourceGroup";
            string clusterName = "testcluster";
            string configurationName = "array_nulls";
            ResourceIdentifier serverGroupsv2NodeConfigurationResourceId = ServerGroupsv2NodeConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, clusterName, configurationName);
            ServerGroupsv2NodeConfigurationResource serverGroupsv2NodeConfiguration = client.GetServerGroupsv2NodeConfigurationResource(serverGroupsv2NodeConfigurationResourceId);

            // invoke the operation
            ServerGroupsv2NodeConfigurationResource result = await serverGroupsv2NodeConfiguration.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServerConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Update single configuration of nodes
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateSingleConfigurationOfNodes()
        {
            // Generated from example definition: specification/postgresqlhsc/resource-manager/Microsoft.DBforPostgreSQL/stable/2022-11-08/examples/ConfigurationUpdateNode.json
            // this example is just showing the usage of "Configurations_UpdateOnNode" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ServerGroupsv2NodeConfigurationResource created on azure
            // for more information of creating ServerGroupsv2NodeConfigurationResource, please refer to the document of ServerGroupsv2NodeConfigurationResource
            string subscriptionId = "ffffffff-ffff-ffff-ffff-ffffffffffff";
            string resourceGroupName = "TestResourceGroup";
            string clusterName = "testcluster";
            string configurationName = "array_nulls";
            ResourceIdentifier serverGroupsv2NodeConfigurationResourceId = ServerGroupsv2NodeConfigurationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, clusterName, configurationName);
            ServerGroupsv2NodeConfigurationResource serverGroupsv2NodeConfiguration = client.GetServerGroupsv2NodeConfigurationResource(serverGroupsv2NodeConfigurationResourceId);

            // invoke the operation
            ServerConfigurationData data = new ServerConfigurationData()
            {
                Value = "off",
            };
            ArmOperation<ServerGroupsv2NodeConfigurationResource> lro = await serverGroupsv2NodeConfiguration.UpdateAsync(WaitUntil.Completed, data);
            ServerGroupsv2NodeConfigurationResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ServerConfigurationData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
