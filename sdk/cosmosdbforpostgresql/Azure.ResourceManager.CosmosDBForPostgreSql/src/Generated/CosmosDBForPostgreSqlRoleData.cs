// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.CosmosDBForPostgreSql.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.CosmosDBForPostgreSql
{
    /// <summary>
    /// A class representing the CosmosDBForPostgreSqlRole data model.
    /// Represents a cluster role.
    /// </summary>
    public partial class CosmosDBForPostgreSqlRoleData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CosmosDBForPostgreSqlRoleData"/>. </summary>
        public CosmosDBForPostgreSqlRoleData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CosmosDBForPostgreSqlRoleData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="roleType"></param>
        /// <param name="password"> The password of the cluster role. If an identity is used, password will not be required. </param>
        /// <param name="provisioningState"> Provisioning state of the role. </param>
        /// <param name="objectId"> A type definition that refers the id to an Azure Resource Manager resource. </param>
        /// <param name="principalType"></param>
        /// <param name="tenantId"> A type definition that refers the id to an Azure Resource Manager resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CosmosDBForPostgreSqlRoleData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, CosmosDBForPostgreSqlClusterRoleType? roleType, string password, CosmosDBForPostgreSqlProvisioningState? provisioningState, ResourceIdentifier objectId, CosmosDBForPostgreSqlClusterRolePrincipalType? principalType, Guid? tenantId, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            RoleType = roleType;
            Password = password;
            ProvisioningState = provisioningState;
            ObjectId = objectId;
            PrincipalType = principalType;
            TenantId = tenantId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the role type. </summary>
        public CosmosDBForPostgreSqlClusterRoleType? RoleType { get; set; }
        /// <summary> The password of the cluster role. If an identity is used, password will not be required. </summary>
        public string Password { get; set; }
        /// <summary> Provisioning state of the role. </summary>
        public CosmosDBForPostgreSqlProvisioningState? ProvisioningState { get; }
        /// <summary> A type definition that refers the id to an Azure Resource Manager resource. </summary>
        public ResourceIdentifier ObjectId { get; set; }
        /// <summary> Gets or sets the principal type. </summary>
        public CosmosDBForPostgreSqlClusterRolePrincipalType? PrincipalType { get; set; }
        /// <summary> A type definition that refers the id to an Azure Resource Manager resource. </summary>
        public Guid? TenantId { get; set; }
    }
}
