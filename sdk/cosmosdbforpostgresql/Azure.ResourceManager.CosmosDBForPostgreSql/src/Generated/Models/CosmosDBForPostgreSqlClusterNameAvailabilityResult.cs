// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.CosmosDBForPostgreSql.Models
{
    /// <summary> Represents cluster name availability. </summary>
    public partial class CosmosDBForPostgreSqlClusterNameAvailabilityResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="CosmosDBForPostgreSqlClusterNameAvailabilityResult"/>. </summary>
        internal CosmosDBForPostgreSqlClusterNameAvailabilityResult()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CosmosDBForPostgreSqlClusterNameAvailabilityResult"/>. </summary>
        /// <param name="message"> Error message. </param>
        /// <param name="isNameAvailable"> Indicates whether the cluster name is available. </param>
        /// <param name="name"> Name of the cluster. </param>
        /// <param name="resourceType"> Type of the cluster. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal CosmosDBForPostgreSqlClusterNameAvailabilityResult(string message, bool? isNameAvailable, string name, ResourceType? resourceType, Dictionary<string, BinaryData> rawData)
        {
            Message = message;
            IsNameAvailable = isNameAvailable;
            Name = name;
            ResourceType = resourceType;
            _rawData = rawData;
        }

        /// <summary> Error message. </summary>
        public string Message { get; }
        /// <summary> Indicates whether the cluster name is available. </summary>
        public bool? IsNameAvailable { get; }
        /// <summary> Name of the cluster. </summary>
        public string Name { get; }
        /// <summary> Type of the cluster. </summary>
        public ResourceType? ResourceType { get; }
    }
}
