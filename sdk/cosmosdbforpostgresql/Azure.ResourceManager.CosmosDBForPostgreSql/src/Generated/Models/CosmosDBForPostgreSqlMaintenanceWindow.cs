// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.CosmosDBForPostgreSql.Models
{
    /// <summary> Schedule settings for regular cluster updates. </summary>
    public partial class CosmosDBForPostgreSqlMaintenanceWindow
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CosmosDBForPostgreSqlMaintenanceWindow"/>. </summary>
        public CosmosDBForPostgreSqlMaintenanceWindow()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CosmosDBForPostgreSqlMaintenanceWindow"/>. </summary>
        /// <param name="customWindow"> Indicates whether custom maintenance window is enabled or not. </param>
        /// <param name="startHour"> Start hour within preferred day of the week for maintenance window. </param>
        /// <param name="startMinute"> Start minute within the start hour for maintenance window. </param>
        /// <param name="dayOfWeek"> Preferred day of the week for maintenance window. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CosmosDBForPostgreSqlMaintenanceWindow(string customWindow, int? startHour, int? startMinute, int? dayOfWeek, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CustomWindow = customWindow;
            StartHour = startHour;
            StartMinute = startMinute;
            DayOfWeek = dayOfWeek;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Indicates whether custom maintenance window is enabled or not. </summary>
        public string CustomWindow { get; set; }
        /// <summary> Start hour within preferred day of the week for maintenance window. </summary>
        public int? StartHour { get; set; }
        /// <summary> Start minute within the start hour for maintenance window. </summary>
        public int? StartMinute { get; set; }
        /// <summary> Preferred day of the week for maintenance window. </summary>
        public int? DayOfWeek { get; set; }
    }
}
