// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ConnectedCache.Models
{
    /// <summary> Model representing an Mcc cache node connectedCache resource. </summary>
    public partial class CacheNodeProperty
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CacheNodeProperty"/>. </summary>
        public CacheNodeProperty()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CacheNodeProperty"/>. </summary>
        /// <param name="provisioningState"> The provisioned state of the resource. </param>
        /// <param name="cacheNode"> Mcc cache node resource (cache node entity). </param>
        /// <param name="additionalCacheNodeProperties"> Mcc cache node resource additional properties. </param>
        /// <param name="statusCode"> Mcc response status code. </param>
        /// <param name="statusText"> Mcc response status text as string for retrieving status details. </param>
        /// <param name="statusDetails"> Mcc response status details for retrieving response inner details. </param>
        /// <param name="status"> HTTP error status code. </param>
        /// <param name="error"> Mcc response error details. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CacheNodeProperty(ProvisioningState? provisioningState, CacheNodeEntity cacheNode, AdditionalCacheNodeProperties additionalCacheNodeProperties, string statusCode, string statusText, string statusDetails, string status, ResponseError error, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProvisioningState = provisioningState;
            CacheNode = cacheNode;
            AdditionalCacheNodeProperties = additionalCacheNodeProperties;
            StatusCode = statusCode;
            StatusText = statusText;
            StatusDetails = statusDetails;
            Status = status;
            Error = error;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The provisioned state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Mcc cache node resource (cache node entity). </summary>
        public CacheNodeEntity CacheNode { get; set; }
        /// <summary> Mcc cache node resource additional properties. </summary>
        public AdditionalCacheNodeProperties AdditionalCacheNodeProperties { get; set; }
        /// <summary> Mcc response status code. </summary>
        public string StatusCode { get; set; }
        /// <summary> Mcc response status text as string for retrieving status details. </summary>
        public string StatusText { get; set; }
        /// <summary> Mcc response status details for retrieving response inner details. </summary>
        public string StatusDetails { get; set; }
        /// <summary> HTTP error status code. </summary>
        public string Status { get; }
        /// <summary> Mcc response error details. </summary>
        public ResponseError Error { get; set; }
    }
}
