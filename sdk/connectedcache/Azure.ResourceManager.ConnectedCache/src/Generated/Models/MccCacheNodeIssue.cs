// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ConnectedCache.Models
{
    /// <summary> Mcc cache node resource issue properties. </summary>
    public partial class MccCacheNodeIssue
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MccCacheNodeIssue"/>. </summary>
        internal MccCacheNodeIssue()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MccCacheNodeIssue"/>. </summary>
        /// <param name="mccIssueType"> Mcc cache node issue type. </param>
        /// <param name="toastString"> Mcc cache node issues toastString. </param>
        /// <param name="detailString"> Mcc cache node issue detail string. </param>
        /// <param name="helpLink"> Mcc cache node issue related help link. </param>
        /// <param name="issueStartOn"> Mcc cache node issue start date. </param>
        /// <param name="issueEndOn"> Mcc cache node issue end date. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MccCacheNodeIssue(string mccIssueType, string toastString, string detailString, string helpLink, DateTimeOffset? issueStartOn, DateTimeOffset? issueEndOn, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MccIssueType = mccIssueType;
            ToastString = toastString;
            DetailString = detailString;
            HelpLink = helpLink;
            IssueStartOn = issueStartOn;
            IssueEndOn = issueEndOn;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Mcc cache node issue type. </summary>
        public string MccIssueType { get; }
        /// <summary> Mcc cache node issues toastString. </summary>
        public string ToastString { get; }
        /// <summary> Mcc cache node issue detail string. </summary>
        public string DetailString { get; }
        /// <summary> Mcc cache node issue related help link. </summary>
        public string HelpLink { get; }
        /// <summary> Mcc cache node issue start date. </summary>
        public DateTimeOffset? IssueStartOn { get; }
        /// <summary> Mcc cache node issue end date. </summary>
        public DateTimeOffset? IssueEndOn { get; }
    }
}
