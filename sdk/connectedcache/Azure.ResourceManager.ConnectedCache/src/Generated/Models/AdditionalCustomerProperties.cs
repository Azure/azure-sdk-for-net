// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ConnectedCache.Models
{
    /// <summary> Model representing customer for connected cache resource. </summary>
    public partial class AdditionalCustomerProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AdditionalCustomerProperties"/>. </summary>
        public AdditionalCustomerProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AdditionalCustomerProperties"/>. </summary>
        /// <param name="customerPropertiesOverviewCacheEfficiency"> Customer resource cache efficiency. </param>
        /// <param name="customerPropertiesOverviewAverageEgressMbps"> Customer resource average egress in Mbps. </param>
        /// <param name="customerPropertiesOverviewAverageMissMbps"> Customer resource average cache miss throughput in Mbps. </param>
        /// <param name="customerPropertiesOverviewEgressMbpsMax"> Customer resource maximum egress in Mbps. </param>
        /// <param name="customerPropertiesOverviewEgressMbpsMaxOn"> Customer resource peak egress timestamp. </param>
        /// <param name="customerPropertiesOverviewMissMbpsMax"> Customer resource maximum cache miss throughput in Mbps. </param>
        /// <param name="customerPropertiesOverviewMissMbpsMaxOn"> Customer resource peak cache miss throughput timestamp. </param>
        /// <param name="customerPropertiesOverviewCacheNodesHealthyCount"> Customer resource total healthy cache nodes. </param>
        /// <param name="customerPropertiesOverviewCacheNodesUnhealthyCount"> Customer resource total unhealthy cache nodes. </param>
        /// <param name="signupStatus"> Customer resource signup status as boolean. </param>
        /// <param name="signupStatusCode"> Customer resource signup status as integer code. </param>
        /// <param name="signupStatusText"> Customer resource signup status as string text. </param>
        /// <param name="signupPhaseStatusCode"> Customer resource signup phase status code as integer. </param>
        /// <param name="signupPhaseStatusText"> Customer resource signup phase status as string text. </param>
        /// <param name="peeringDbLastUpdateDateValue"> Customer resource last PeeringDB update timestamp. </param>
        /// <param name="customerOrgName"> Customer resource owner organization name. </param>
        /// <param name="customerEmail"> Customer resource contact email. </param>
        /// <param name="customerTransitAsn"> Customer resource transit Asn (autonomous system number). </param>
        /// <param name="customerTransitState"> Customer resource transit state. </param>
        /// <param name="customerAsn"> Customer resource Asn (autonomous system number). </param>
        /// <param name="customerAsnEstimatedEgressPeekGbps"> Customer resource estimated Asn peering peak in Gbps. </param>
        /// <param name="customerEntitlementSkuId"> Customer resource entitlement Sku Id. </param>
        /// <param name="customerEntitlementSkuGuid"> Customer resource entitlement Sku Guid. </param>
        /// <param name="customerEntitlementSkuName"> Customer resource entitlement Sku name. </param>
        /// <param name="customerEntitlementExpiration"> Customer resource entitlement expiration date string. </param>
        /// <param name="optionalProperty1"> Optional property #1 of Mcc response object. </param>
        /// <param name="optionalProperty2"> Optional property #2 of Mcc response object. </param>
        /// <param name="optionalProperty3"> Optional property #3 of Mcc response object. </param>
        /// <param name="optionalProperty4"> Optional property #4 of Mcc response object. </param>
        /// <param name="optionalProperty5"> Optional property #5 of Mcc response object. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AdditionalCustomerProperties(float? customerPropertiesOverviewCacheEfficiency, float? customerPropertiesOverviewAverageEgressMbps, float? customerPropertiesOverviewAverageMissMbps, float? customerPropertiesOverviewEgressMbpsMax, DateTimeOffset? customerPropertiesOverviewEgressMbpsMaxOn, float? customerPropertiesOverviewMissMbpsMax, DateTimeOffset? customerPropertiesOverviewMissMbpsMaxOn, int? customerPropertiesOverviewCacheNodesHealthyCount, int? customerPropertiesOverviewCacheNodesUnhealthyCount, bool? signupStatus, int? signupStatusCode, string signupStatusText, int? signupPhaseStatusCode, string signupPhaseStatusText, DateTimeOffset? peeringDbLastUpdateDateValue, string customerOrgName, string customerEmail, string customerTransitAsn, CustomerTransitState? customerTransitState, string customerAsn, float? customerAsnEstimatedEgressPeekGbps, string customerEntitlementSkuId, string customerEntitlementSkuGuid, string customerEntitlementSkuName, DateTimeOffset? customerEntitlementExpiration, string optionalProperty1, string optionalProperty2, string optionalProperty3, string optionalProperty4, string optionalProperty5, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CustomerPropertiesOverviewCacheEfficiency = customerPropertiesOverviewCacheEfficiency;
            CustomerPropertiesOverviewAverageEgressMbps = customerPropertiesOverviewAverageEgressMbps;
            CustomerPropertiesOverviewAverageMissMbps = customerPropertiesOverviewAverageMissMbps;
            CustomerPropertiesOverviewEgressMbpsMax = customerPropertiesOverviewEgressMbpsMax;
            CustomerPropertiesOverviewEgressMbpsMaxOn = customerPropertiesOverviewEgressMbpsMaxOn;
            CustomerPropertiesOverviewMissMbpsMax = customerPropertiesOverviewMissMbpsMax;
            CustomerPropertiesOverviewMissMbpsMaxOn = customerPropertiesOverviewMissMbpsMaxOn;
            CustomerPropertiesOverviewCacheNodesHealthyCount = customerPropertiesOverviewCacheNodesHealthyCount;
            CustomerPropertiesOverviewCacheNodesUnhealthyCount = customerPropertiesOverviewCacheNodesUnhealthyCount;
            SignupStatus = signupStatus;
            SignupStatusCode = signupStatusCode;
            SignupStatusText = signupStatusText;
            SignupPhaseStatusCode = signupPhaseStatusCode;
            SignupPhaseStatusText = signupPhaseStatusText;
            PeeringDbLastUpdateDateValue = peeringDbLastUpdateDateValue;
            CustomerOrgName = customerOrgName;
            CustomerEmail = customerEmail;
            CustomerTransitAsn = customerTransitAsn;
            CustomerTransitState = customerTransitState;
            CustomerAsn = customerAsn;
            CustomerAsnEstimatedEgressPeekGbps = customerAsnEstimatedEgressPeekGbps;
            CustomerEntitlementSkuId = customerEntitlementSkuId;
            CustomerEntitlementSkuGuid = customerEntitlementSkuGuid;
            CustomerEntitlementSkuName = customerEntitlementSkuName;
            CustomerEntitlementExpiration = customerEntitlementExpiration;
            OptionalProperty1 = optionalProperty1;
            OptionalProperty2 = optionalProperty2;
            OptionalProperty3 = optionalProperty3;
            OptionalProperty4 = optionalProperty4;
            OptionalProperty5 = optionalProperty5;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Customer resource cache efficiency. </summary>
        public float? CustomerPropertiesOverviewCacheEfficiency { get; }
        /// <summary> Customer resource average egress in Mbps. </summary>
        public float? CustomerPropertiesOverviewAverageEgressMbps { get; }
        /// <summary> Customer resource average cache miss throughput in Mbps. </summary>
        public float? CustomerPropertiesOverviewAverageMissMbps { get; }
        /// <summary> Customer resource maximum egress in Mbps. </summary>
        public float? CustomerPropertiesOverviewEgressMbpsMax { get; }
        /// <summary> Customer resource peak egress timestamp. </summary>
        public DateTimeOffset? CustomerPropertiesOverviewEgressMbpsMaxOn { get; }
        /// <summary> Customer resource maximum cache miss throughput in Mbps. </summary>
        public float? CustomerPropertiesOverviewMissMbpsMax { get; }
        /// <summary> Customer resource peak cache miss throughput timestamp. </summary>
        public DateTimeOffset? CustomerPropertiesOverviewMissMbpsMaxOn { get; }
        /// <summary> Customer resource total healthy cache nodes. </summary>
        public int? CustomerPropertiesOverviewCacheNodesHealthyCount { get; }
        /// <summary> Customer resource total unhealthy cache nodes. </summary>
        public int? CustomerPropertiesOverviewCacheNodesUnhealthyCount { get; }
        /// <summary> Customer resource signup status as boolean. </summary>
        public bool? SignupStatus { get; }
        /// <summary> Customer resource signup status as integer code. </summary>
        public int? SignupStatusCode { get; }
        /// <summary> Customer resource signup status as string text. </summary>
        public string SignupStatusText { get; }
        /// <summary> Customer resource signup phase status code as integer. </summary>
        public int? SignupPhaseStatusCode { get; }
        /// <summary> Customer resource signup phase status as string text. </summary>
        public string SignupPhaseStatusText { get; }
        /// <summary> Customer resource last PeeringDB update timestamp. </summary>
        public DateTimeOffset? PeeringDbLastUpdateDateValue { get; }
        /// <summary> Customer resource owner organization name. </summary>
        public string CustomerOrgName { get; }
        /// <summary> Customer resource contact email. </summary>
        public string CustomerEmail { get; set; }
        /// <summary> Customer resource transit Asn (autonomous system number). </summary>
        public string CustomerTransitAsn { get; set; }
        /// <summary> Customer resource transit state. </summary>
        public CustomerTransitState? CustomerTransitState { get; set; }
        /// <summary> Customer resource Asn (autonomous system number). </summary>
        public string CustomerAsn { get; set; }
        /// <summary> Customer resource estimated Asn peering peak in Gbps. </summary>
        public float? CustomerAsnEstimatedEgressPeekGbps { get; }
        /// <summary> Customer resource entitlement Sku Id. </summary>
        public string CustomerEntitlementSkuId { get; set; }
        /// <summary> Customer resource entitlement Sku Guid. </summary>
        public string CustomerEntitlementSkuGuid { get; set; }
        /// <summary> Customer resource entitlement Sku name. </summary>
        public string CustomerEntitlementSkuName { get; set; }
        /// <summary> Customer resource entitlement expiration date string. </summary>
        public DateTimeOffset? CustomerEntitlementExpiration { get; set; }
        /// <summary> Optional property #1 of Mcc response object. </summary>
        public string OptionalProperty1 { get; set; }
        /// <summary> Optional property #2 of Mcc response object. </summary>
        public string OptionalProperty2 { get; set; }
        /// <summary> Optional property #3 of Mcc response object. </summary>
        public string OptionalProperty3 { get; set; }
        /// <summary> Optional property #4 of Mcc response object. </summary>
        public string OptionalProperty4 { get; set; }
        /// <summary> Optional property #5 of Mcc response object. </summary>
        public string OptionalProperty5 { get; set; }
    }
}
