// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.ConnectedCache.Mocking
{
    /// <summary> A class to add extension methods to ResourceGroupResource. </summary>
    public partial class MockableConnectedCacheResourceGroupResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableConnectedCacheResourceGroupResource"/> class for mocking. </summary>
        protected MockableConnectedCacheResourceGroupResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableConnectedCacheResourceGroupResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableConnectedCacheResourceGroupResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of IspCustomerResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of IspCustomerResources and their operations over a IspCustomerResource. </returns>
        public virtual IspCustomerResourceCollection GetIspCustomerResources()
        {
            return GetCachedClient(client => new IspCustomerResourceCollection(client, Id));
        }

        /// <summary>
        /// Gets the ispCustomer resource information using this get call
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>IspCustomerResource_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-11-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="IspCustomerResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="customerResourceName"> Name of the Customer resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="customerResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="customerResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<IspCustomerResource>> GetIspCustomerResourceAsync(string customerResourceName, CancellationToken cancellationToken = default)
        {
            return await GetIspCustomerResources().GetAsync(customerResourceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the ispCustomer resource information using this get call
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers/{customerResourceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>IspCustomerResource_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-11-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="IspCustomerResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="customerResourceName"> Name of the Customer resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="customerResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="customerResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<IspCustomerResource> GetIspCustomerResource(string customerResourceName, CancellationToken cancellationToken = default)
        {
            return GetIspCustomerResources().Get(customerResourceName, cancellationToken);
        }

        /// <summary> Gets a collection of EnterpriseMccCustomerResources in the ResourceGroupResource. </summary>
        /// <returns> An object representing collection of EnterpriseMccCustomerResources and their operations over a EnterpriseMccCustomerResource. </returns>
        public virtual EnterpriseMccCustomerResourceCollection GetEnterpriseMccCustomerResources()
        {
            return GetCachedClient(client => new EnterpriseMccCustomerResourceCollection(client, Id));
        }

        /// <summary>
        /// Gets the enterprise mcc customer resource information using this get call
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>EnterpriseMccCustomerResource_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-11-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="EnterpriseMccCustomerResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="customerResourceName"> Name of the Customer resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="customerResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="customerResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<EnterpriseMccCustomerResource>> GetEnterpriseMccCustomerResourceAsync(string customerResourceName, CancellationToken cancellationToken = default)
        {
            return await GetEnterpriseMccCustomerResources().GetAsync(customerResourceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets the enterprise mcc customer resource information using this get call
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/enterpriseMccCustomers/{customerResourceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>EnterpriseMccCustomerResource_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-11-30-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="EnterpriseMccCustomerResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="customerResourceName"> Name of the Customer resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="customerResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="customerResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<EnterpriseMccCustomerResource> GetEnterpriseMccCustomerResource(string customerResourceName, CancellationToken cancellationToken = default)
        {
            return GetEnterpriseMccCustomerResources().Get(customerResourceName, cancellationToken);
        }
    }
}
