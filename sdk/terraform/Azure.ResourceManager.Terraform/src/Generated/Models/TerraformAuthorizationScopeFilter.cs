// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Terraform.Models
{
    /// <summary> The Azure Resource Graph Authorization Scope Filter parameter. </summary>
    public readonly partial struct TerraformAuthorizationScopeFilter : IEquatable<TerraformAuthorizationScopeFilter>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="TerraformAuthorizationScopeFilter"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public TerraformAuthorizationScopeFilter(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AtScopeAndBelowValue = "AtScopeAndBelow";
        private const string AtScopeAndAboveValue = "AtScopeAndAbove";
        private const string AtScopeAboveAndBelowValue = "AtScopeAboveAndBelow";
        private const string AtScopeExactValue = "AtScopeExact";

        /// <summary> Returns assignments for the given scope and all child scopes. </summary>
        public static TerraformAuthorizationScopeFilter AtScopeAndBelow { get; } = new TerraformAuthorizationScopeFilter(AtScopeAndBelowValue);
        /// <summary> Returns assignments for the given scope and all parent scopes, but not child scopes. </summary>
        public static TerraformAuthorizationScopeFilter AtScopeAndAbove { get; } = new TerraformAuthorizationScopeFilter(AtScopeAndAboveValue);
        /// <summary> Returns assignments for the given scope, all parent scopes, and all child scopes. </summary>
        public static TerraformAuthorizationScopeFilter AtScopeAboveAndBelow { get; } = new TerraformAuthorizationScopeFilter(AtScopeAboveAndBelowValue);
        /// <summary> Returns assignments only for the given scope; no parent or child scopes are included. </summary>
        public static TerraformAuthorizationScopeFilter AtScopeExact { get; } = new TerraformAuthorizationScopeFilter(AtScopeExactValue);
        /// <summary> Determines if two <see cref="TerraformAuthorizationScopeFilter"/> values are the same. </summary>
        public static bool operator ==(TerraformAuthorizationScopeFilter left, TerraformAuthorizationScopeFilter right) => left.Equals(right);
        /// <summary> Determines if two <see cref="TerraformAuthorizationScopeFilter"/> values are not the same. </summary>
        public static bool operator !=(TerraformAuthorizationScopeFilter left, TerraformAuthorizationScopeFilter right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="TerraformAuthorizationScopeFilter"/>. </summary>
        public static implicit operator TerraformAuthorizationScopeFilter(string value) => new TerraformAuthorizationScopeFilter(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is TerraformAuthorizationScopeFilter other && Equals(other);
        /// <inheritdoc />
        public bool Equals(TerraformAuthorizationScopeFilter other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
