// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ArizeAIObservabilityEval.Models;
using Azure.ResourceManager.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ArizeAIObservabilityEval.Samples
{
    public partial class Sample_OrganizationResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_OrganizationsGetGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-10-01-preview/Organizations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrganizationResource created on azure
            // for more information of creating OrganizationResource, please refer to the document of OrganizationResource
            string subscriptionId = "4DEBE8B4-8BA4-42F8-AE50-FBEF318751D1";
            string resourceGroupName = "rgopenapi";
            string organizationname = "test-organization-1";
            ResourceIdentifier organizationResourceId = OrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationname);
            OrganizationResource organizationResource = client.GetOrganizationResource(organizationResourceId);

            // invoke the operation
            OrganizationResource result = await organizationResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OrganizationResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_OrganizationsDeleteGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-10-01-preview/Organizations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrganizationResource created on azure
            // for more information of creating OrganizationResource, please refer to the document of OrganizationResource
            string subscriptionId = "4DEBE8B4-8BA4-42F8-AE50-FBEF318751D1";
            string resourceGroupName = "rgopenapi";
            string organizationname = "test-organization-1";
            ResourceIdentifier organizationResourceId = OrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationname);
            OrganizationResource organizationResource = client.GetOrganizationResource(organizationResourceId);

            // invoke the operation
            await organizationResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_OrganizationsUpdateGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-10-01-preview/Organizations_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "OrganizationResource_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this OrganizationResource created on azure
            // for more information of creating OrganizationResource, please refer to the document of OrganizationResource
            string subscriptionId = "4DEBE8B4-8BA4-42F8-AE50-FBEF318751D1";
            string resourceGroupName = "rgopenapi";
            string organizationname = "test-organization-1";
            ResourceIdentifier organizationResourceId = OrganizationResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, organizationname);
            OrganizationResource organizationResource = client.GetOrganizationResource(organizationResourceId);

            // invoke the operation
            OrganizationResourcePatch patch = new OrganizationResourcePatch
            {
                Tags = { },
                Identity = new ManagedServiceIdentity("None")
                {
                    UserAssignedIdentities = { },
                },
            };
            OrganizationResource result = await organizationResource.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            OrganizationResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
