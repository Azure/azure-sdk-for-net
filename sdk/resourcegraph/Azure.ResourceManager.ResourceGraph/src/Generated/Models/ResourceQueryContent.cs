// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ResourceGraph.Models
{
    /// <summary> Describes a query to be executed. </summary>
    public partial class ResourceQueryContent
    {
        /// <summary> Initializes a new instance of ResourceQueryContent. </summary>
        /// <param name="query"> The resources query. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="query"/> is null. </exception>
        public ResourceQueryContent(string query)
        {
            Argument.AssertNotNull(query, nameof(query));

            Subscriptions = new ChangeTrackingList<string>();
            ManagementGroups = new ChangeTrackingList<string>();
            Query = query;
            Facets = new ChangeTrackingList<FacetRequest>();
        }

        /// <summary> Azure subscriptions against which to execute the query. </summary>
        public IList<string> Subscriptions { get; }
        /// <summary> Azure management groups against which to execute the query. Example: [ &apos;mg1&apos;, &apos;mg2&apos; ]. </summary>
        public IList<string> ManagementGroups { get; }
        /// <summary> The resources query. </summary>
        public string Query { get; }
        /// <summary> The query evaluation options. </summary>
        public ResourceQueryRequestOptions Options { get; set; }
        /// <summary> An array of facet requests to be computed against the query result. </summary>
        public IList<FacetRequest> Facets { get; }
    }
}
