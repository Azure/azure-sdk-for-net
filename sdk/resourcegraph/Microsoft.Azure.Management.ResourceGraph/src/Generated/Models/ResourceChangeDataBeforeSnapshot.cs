// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceGraph.Models
{
    using System.Linq;

    /// <summary>
    /// The snapshot before the change.
    /// </summary>
    public partial class ResourceChangeDataBeforeSnapshot : ResourceSnapshotData
    {
        /// <summary>
        /// Initializes a new instance of the ResourceChangeDataBeforeSnapshot
        /// class.
        /// </summary>
        public ResourceChangeDataBeforeSnapshot()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceChangeDataBeforeSnapshot
        /// class.
        /// </summary>
        /// <param name="timestamp">The time when the snapshot was created.
        /// The snapshot timestamp provides an approximation as to when a
        /// modification to a resource was detected.  There can be a difference
        /// between the actual modification time and the detection time.  This
        /// is due to differences in how operations that modify a resource are
        /// processed, versus how operation that record resource snapshots are
        /// processed.</param>
        /// <param name="snapshotId">The ID of the snapshot.</param>
        /// <param name="content">The resource snapshot content (in
        /// resourceChangeDetails response only).</param>
        public ResourceChangeDataBeforeSnapshot(System.DateTime timestamp, string snapshotId = default(string), object content = default(object))
            : base(timestamp, snapshotId, content)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
