// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceGraph.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The resource property change
    /// </summary>
    public partial class ResourcePropertyChange
    {
        /// <summary>
        /// Initializes a new instance of the ResourcePropertyChange class.
        /// </summary>
        public ResourcePropertyChange()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourcePropertyChange class.
        /// </summary>
        /// <param name="propertyName">The property name</param>
        /// <param name="changeCategory">The change category. Possible values
        /// include: 'User', 'System'</param>
        /// <param name="propertyChangeType">The property change Type. Possible
        /// values include: 'Insert', 'Update', 'Remove'</param>
        /// <param name="beforeValue">The property value in before
        /// snapshot</param>
        /// <param name="afterValue">The property value in after
        /// snapshot</param>
        public ResourcePropertyChange(string propertyName, ChangeCategory changeCategory, PropertyChangeType propertyChangeType, string beforeValue = default(string), string afterValue = default(string))
        {
            PropertyName = propertyName;
            BeforeValue = beforeValue;
            AfterValue = afterValue;
            ChangeCategory = changeCategory;
            PropertyChangeType = propertyChangeType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the property name
        /// </summary>
        [JsonProperty(PropertyName = "propertyName")]
        public string PropertyName { get; set; }

        /// <summary>
        /// Gets or sets the property value in before snapshot
        /// </summary>
        [JsonProperty(PropertyName = "beforeValue")]
        public string BeforeValue { get; set; }

        /// <summary>
        /// Gets or sets the property value in after snapshot
        /// </summary>
        [JsonProperty(PropertyName = "afterValue")]
        public string AfterValue { get; set; }

        /// <summary>
        /// Gets or sets the change category. Possible values include: 'User',
        /// 'System'
        /// </summary>
        [JsonProperty(PropertyName = "changeCategory")]
        public ChangeCategory ChangeCategory { get; set; }

        /// <summary>
        /// Gets or sets the property change Type. Possible values include:
        /// 'Insert', 'Update', 'Remove'
        /// </summary>
        [JsonProperty(PropertyName = "propertyChangeType")]
        public PropertyChangeType PropertyChangeType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PropertyName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PropertyName");
            }
        }
    }
}
