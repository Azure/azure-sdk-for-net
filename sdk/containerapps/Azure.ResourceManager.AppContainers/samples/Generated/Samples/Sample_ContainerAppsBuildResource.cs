// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;

namespace Azure.ResourceManager.AppContainers.Samples
{
    public partial class Sample_ContainerAppsBuildResource
    {
        // ContainerAppsBuilds_Get_0
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ContainerAppsBuildsGet0()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/ContainerAppsBuilds_Get.json
            // this example is just showing the usage of "ContainerAppsBuilds_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppsBuildResource created on azure
            // for more information of creating ContainerAppsBuildResource, please refer to the document of ContainerAppsBuildResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg";
            string containerAppName = "testCapp";
            string buildName = "testBuild";
            ResourceIdentifier containerAppsBuildResourceId = ContainerAppsBuildResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, containerAppName, buildName);
            ContainerAppsBuildResource containerAppsBuildResource = client.GetContainerAppsBuildResource(containerAppsBuildResourceId);

            // invoke the operation
            ContainerAppsBuildResource result = await containerAppsBuildResource.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ContainerAppsBuildResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ContainerAppsBuilds_Delete_0
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_ContainerAppsBuildsDelete0()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/ContainerAppsBuilds_Delete.json
            // this example is just showing the usage of "ContainerAppsBuilds_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppsBuildResource created on azure
            // for more information of creating ContainerAppsBuildResource, please refer to the document of ContainerAppsBuildResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg";
            string containerAppName = "testCapp";
            string buildName = "testBuild";
            ResourceIdentifier containerAppsBuildResourceId = ContainerAppsBuildResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, containerAppName, buildName);
            ContainerAppsBuildResource containerAppsBuildResource = client.GetContainerAppsBuildResource(containerAppsBuildResourceId);

            // invoke the operation
            await containerAppsBuildResource.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
