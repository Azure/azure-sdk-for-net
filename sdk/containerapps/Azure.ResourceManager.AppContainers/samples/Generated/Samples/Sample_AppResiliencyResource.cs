// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.AppContainers.Models;

namespace Azure.ResourceManager.AppContainers.Samples
{
    public partial class Sample_AppResiliencyResource
    {
        // Update App Resiliency
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateAppResiliency()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/AppResiliency_Patch.json
            // this example is just showing the usage of "AppResiliency_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AppResiliencyResource created on azure
            // for more information of creating AppResiliencyResource, please refer to the document of AppResiliencyResource
            string subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
            string resourceGroupName = "rg";
            string appName = "testcontainerApp0";
            string name = "resiliency-policy-1";
            ResourceIdentifier appResiliencyResourceId = AppResiliencyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, appName, name);
            AppResiliencyResource appResiliency = client.GetAppResiliencyResource(appResiliencyResourceId);

            // invoke the operation
            AppResiliencyData data = new AppResiliencyData()
            {
                TimeoutPolicy = new TimeoutPolicy()
                {
                    ResponseTimeoutInSeconds = 30,
                    ConnectionTimeoutInSeconds = 40,
                },
            };
            AppResiliencyResource result = await appResiliency.UpdateAsync(data);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AppResiliencyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete App Resiliency
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteAppResiliency()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/AppResiliency_Delete.json
            // this example is just showing the usage of "AppResiliency_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AppResiliencyResource created on azure
            // for more information of creating AppResiliencyResource, please refer to the document of AppResiliencyResource
            string subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
            string resourceGroupName = "rg";
            string appName = "testcontainerApp0";
            string name = "resiliency-policy-1";
            ResourceIdentifier appResiliencyResourceId = AppResiliencyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, appName, name);
            AppResiliencyResource appResiliency = client.GetAppResiliencyResource(appResiliencyResourceId);

            // invoke the operation
            await appResiliency.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }

        // Get App Resiliency
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetAppResiliency()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/AppResiliency_Get.json
            // this example is just showing the usage of "AppResiliency_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AppResiliencyResource created on azure
            // for more information of creating AppResiliencyResource, please refer to the document of AppResiliencyResource
            string subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
            string resourceGroupName = "rg";
            string appName = "testcontainerApp0";
            string name = "resiliency-policy-1";
            ResourceIdentifier appResiliencyResourceId = AppResiliencyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, appName, name);
            AppResiliencyResource appResiliency = client.GetAppResiliencyResource(appResiliencyResourceId);

            // invoke the operation
            AppResiliencyResource result = await appResiliency.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AppResiliencyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
