// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.AppContainers.Models;

namespace Azure.ResourceManager.AppContainers.Samples
{
    public partial class Sample_DaprComponentResiliencyPolicyCollection
    {
        // List Dapr component resiliency policies
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ListDaprComponentResiliencyPolicies()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprComponentResiliencyPolicies_List.json
            // this example is just showing the usage of "DaprComponentResiliencyPolicies_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppManagedEnvironmentDaprComponentResource created on azure
            // for more information of creating ContainerAppManagedEnvironmentDaprComponentResource, please refer to the document of ContainerAppManagedEnvironmentDaprComponentResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string componentName = "mydaprcomponent";
            ResourceIdentifier containerAppManagedEnvironmentDaprComponentResourceId = ContainerAppManagedEnvironmentDaprComponentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, componentName);
            ContainerAppManagedEnvironmentDaprComponentResource containerAppManagedEnvironmentDaprComponent = client.GetContainerAppManagedEnvironmentDaprComponentResource(containerAppManagedEnvironmentDaprComponentResourceId);

            // get the collection of this DaprComponentResiliencyPolicyResource
            DaprComponentResiliencyPolicyCollection collection = containerAppManagedEnvironmentDaprComponent.GetDaprComponentResiliencyPolicies();

            // invoke the operation and iterate over the result
            await foreach (DaprComponentResiliencyPolicyResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DaprComponentResiliencyPolicyData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Get Dapr component resiliency policy
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetDaprComponentResiliencyPolicy()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprComponentResiliencyPolicies_Get.json
            // this example is just showing the usage of "DaprComponentResiliencyPolicies_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppManagedEnvironmentDaprComponentResource created on azure
            // for more information of creating ContainerAppManagedEnvironmentDaprComponentResource, please refer to the document of ContainerAppManagedEnvironmentDaprComponentResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string componentName = "mydaprcomponent";
            ResourceIdentifier containerAppManagedEnvironmentDaprComponentResourceId = ContainerAppManagedEnvironmentDaprComponentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, componentName);
            ContainerAppManagedEnvironmentDaprComponentResource containerAppManagedEnvironmentDaprComponent = client.GetContainerAppManagedEnvironmentDaprComponentResource(containerAppManagedEnvironmentDaprComponentResourceId);

            // get the collection of this DaprComponentResiliencyPolicyResource
            DaprComponentResiliencyPolicyCollection collection = containerAppManagedEnvironmentDaprComponent.GetDaprComponentResiliencyPolicies();

            // invoke the operation
            string name = "myresiliencypolicy";
            DaprComponentResiliencyPolicyResource result = await collection.GetAsync(name);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprComponentResiliencyPolicyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get Dapr component resiliency policy
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetDaprComponentResiliencyPolicy()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprComponentResiliencyPolicies_Get.json
            // this example is just showing the usage of "DaprComponentResiliencyPolicies_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppManagedEnvironmentDaprComponentResource created on azure
            // for more information of creating ContainerAppManagedEnvironmentDaprComponentResource, please refer to the document of ContainerAppManagedEnvironmentDaprComponentResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string componentName = "mydaprcomponent";
            ResourceIdentifier containerAppManagedEnvironmentDaprComponentResourceId = ContainerAppManagedEnvironmentDaprComponentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, componentName);
            ContainerAppManagedEnvironmentDaprComponentResource containerAppManagedEnvironmentDaprComponent = client.GetContainerAppManagedEnvironmentDaprComponentResource(containerAppManagedEnvironmentDaprComponentResourceId);

            // get the collection of this DaprComponentResiliencyPolicyResource
            DaprComponentResiliencyPolicyCollection collection = containerAppManagedEnvironmentDaprComponent.GetDaprComponentResiliencyPolicies();

            // invoke the operation
            string name = "myresiliencypolicy";
            bool result = await collection.ExistsAsync(name);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Get Dapr component resiliency policy
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_GetDaprComponentResiliencyPolicy()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprComponentResiliencyPolicies_Get.json
            // this example is just showing the usage of "DaprComponentResiliencyPolicies_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppManagedEnvironmentDaprComponentResource created on azure
            // for more information of creating ContainerAppManagedEnvironmentDaprComponentResource, please refer to the document of ContainerAppManagedEnvironmentDaprComponentResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string componentName = "mydaprcomponent";
            ResourceIdentifier containerAppManagedEnvironmentDaprComponentResourceId = ContainerAppManagedEnvironmentDaprComponentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, componentName);
            ContainerAppManagedEnvironmentDaprComponentResource containerAppManagedEnvironmentDaprComponent = client.GetContainerAppManagedEnvironmentDaprComponentResource(containerAppManagedEnvironmentDaprComponentResourceId);

            // get the collection of this DaprComponentResiliencyPolicyResource
            DaprComponentResiliencyPolicyCollection collection = containerAppManagedEnvironmentDaprComponent.GetDaprComponentResiliencyPolicies();

            // invoke the operation
            string name = "myresiliencypolicy";
            NullableResponse<DaprComponentResiliencyPolicyResource> response = await collection.GetIfExistsAsync(name);
            DaprComponentResiliencyPolicyResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                DaprComponentResiliencyPolicyData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // Create or update dapr component resiliency policy with all options
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateOrUpdateDaprComponentResiliencyPolicyWithAllOptions()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprComponentResiliencyPolicy_CreateOrUpdate_AllOptions.json
            // this example is just showing the usage of "DaprComponentResiliencyPolicies_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppManagedEnvironmentDaprComponentResource created on azure
            // for more information of creating ContainerAppManagedEnvironmentDaprComponentResource, please refer to the document of ContainerAppManagedEnvironmentDaprComponentResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string componentName = "mydaprcomponent";
            ResourceIdentifier containerAppManagedEnvironmentDaprComponentResourceId = ContainerAppManagedEnvironmentDaprComponentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, componentName);
            ContainerAppManagedEnvironmentDaprComponentResource containerAppManagedEnvironmentDaprComponent = client.GetContainerAppManagedEnvironmentDaprComponentResource(containerAppManagedEnvironmentDaprComponentResourceId);

            // get the collection of this DaprComponentResiliencyPolicyResource
            DaprComponentResiliencyPolicyCollection collection = containerAppManagedEnvironmentDaprComponent.GetDaprComponentResiliencyPolicies();

            // invoke the operation
            string name = "myresiliencypolicy";
            DaprComponentResiliencyPolicyData data = new DaprComponentResiliencyPolicyData()
            {
                InboundPolicy = new DaprComponentResiliencyPolicyConfiguration()
                {
                    HttpRetryPolicy = new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration()
                    {
                        MaxRetries = 15,
                        RetryBackOff = new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                        {
                            InitialDelayInMilliseconds = 2000,
                            MaxIntervalInMilliseconds = 5500,
                        },
                    },
                    ResponseTimeoutInSeconds = 30,
                    CircuitBreakerPolicy = new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    {
                        ConsecutiveErrors = 5,
                        TimeoutInSeconds = 10,
                        IntervalInSeconds = 4,
                    },
                },
                OutboundPolicy = new DaprComponentResiliencyPolicyConfiguration()
                {
                    HttpRetryPolicy = new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration()
                    {
                        MaxRetries = 5,
                        RetryBackOff = new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                        {
                            InitialDelayInMilliseconds = 100,
                            MaxIntervalInMilliseconds = 30000,
                        },
                    },
                    ResponseTimeoutInSeconds = 12,
                    CircuitBreakerPolicy = new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    {
                        ConsecutiveErrors = 3,
                        TimeoutInSeconds = 20,
                        IntervalInSeconds = 60,
                    },
                },
            };
            ArmOperation<DaprComponentResiliencyPolicyResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, name, data);
            DaprComponentResiliencyPolicyResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprComponentResiliencyPolicyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Create or update dapr component resiliency policy with outbound policy only
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateOrUpdateDaprComponentResiliencyPolicyWithOutboundPolicyOnly()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprComponentResiliencyPolicy_CreateOrUpdate_OutboundOnly.json
            // this example is just showing the usage of "DaprComponentResiliencyPolicies_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppManagedEnvironmentDaprComponentResource created on azure
            // for more information of creating ContainerAppManagedEnvironmentDaprComponentResource, please refer to the document of ContainerAppManagedEnvironmentDaprComponentResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string componentName = "mydaprcomponent";
            ResourceIdentifier containerAppManagedEnvironmentDaprComponentResourceId = ContainerAppManagedEnvironmentDaprComponentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, componentName);
            ContainerAppManagedEnvironmentDaprComponentResource containerAppManagedEnvironmentDaprComponent = client.GetContainerAppManagedEnvironmentDaprComponentResource(containerAppManagedEnvironmentDaprComponentResourceId);

            // get the collection of this DaprComponentResiliencyPolicyResource
            DaprComponentResiliencyPolicyCollection collection = containerAppManagedEnvironmentDaprComponent.GetDaprComponentResiliencyPolicies();

            // invoke the operation
            string name = "myresiliencypolicy";
            DaprComponentResiliencyPolicyData data = new DaprComponentResiliencyPolicyData()
            {
                OutboundPolicy = new DaprComponentResiliencyPolicyConfiguration()
                {
                    HttpRetryPolicy = new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration()
                    {
                        MaxRetries = 5,
                        RetryBackOff = new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                        {
                            InitialDelayInMilliseconds = 100,
                            MaxIntervalInMilliseconds = 30000,
                        },
                    },
                    ResponseTimeoutInSeconds = 12,
                    CircuitBreakerPolicy = new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    {
                        ConsecutiveErrors = 3,
                        TimeoutInSeconds = 20,
                        IntervalInSeconds = 60,
                    },
                },
            };
            ArmOperation<DaprComponentResiliencyPolicyResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, name, data);
            DaprComponentResiliencyPolicyResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprComponentResiliencyPolicyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Create or update dapr component resiliency policy with sparse options
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateOrUpdateDaprComponentResiliencyPolicyWithSparseOptions()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprComponentResiliencyPolicy_CreateOrUpdate_SparseOptions.json
            // this example is just showing the usage of "DaprComponentResiliencyPolicies_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerAppManagedEnvironmentDaprComponentResource created on azure
            // for more information of creating ContainerAppManagedEnvironmentDaprComponentResource, please refer to the document of ContainerAppManagedEnvironmentDaprComponentResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string componentName = "mydaprcomponent";
            ResourceIdentifier containerAppManagedEnvironmentDaprComponentResourceId = ContainerAppManagedEnvironmentDaprComponentResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, componentName);
            ContainerAppManagedEnvironmentDaprComponentResource containerAppManagedEnvironmentDaprComponent = client.GetContainerAppManagedEnvironmentDaprComponentResource(containerAppManagedEnvironmentDaprComponentResourceId);

            // get the collection of this DaprComponentResiliencyPolicyResource
            DaprComponentResiliencyPolicyCollection collection = containerAppManagedEnvironmentDaprComponent.GetDaprComponentResiliencyPolicies();

            // invoke the operation
            string name = "myresiliencypolicy";
            DaprComponentResiliencyPolicyData data = new DaprComponentResiliencyPolicyData()
            {
                InboundPolicy = new DaprComponentResiliencyPolicyConfiguration()
                {
                    HttpRetryPolicy = new DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration()
                    {
                        MaxRetries = 5,
                        RetryBackOff = new DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration()
                        {
                            InitialDelayInMilliseconds = 2000,
                            MaxIntervalInMilliseconds = 5500,
                        },
                    },
                    CircuitBreakerPolicy = new DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration()
                    {
                        ConsecutiveErrors = 3,
                        TimeoutInSeconds = 20,
                    },
                },
                OutboundPolicy = new DaprComponentResiliencyPolicyConfiguration()
                {
                    ResponseTimeoutInSeconds = 12,
                },
            };
            ArmOperation<DaprComponentResiliencyPolicyResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, name, data);
            DaprComponentResiliencyPolicyResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprComponentResiliencyPolicyData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
