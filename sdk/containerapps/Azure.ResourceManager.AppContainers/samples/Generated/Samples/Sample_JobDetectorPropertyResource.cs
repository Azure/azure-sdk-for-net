// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;

namespace Azure.ResourceManager.AppContainers.Samples
{
    public partial class Sample_JobDetectorPropertyResource
    {
        // Get Container App Job by name
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetContainerAppJobByName()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-02-02-preview/examples/Job_ProxyGet.json
            // this example is just showing the usage of "Jobs_ProxyGet" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this JobDetectorPropertyResource created on azure
            // for more information of creating JobDetectorPropertyResource, please refer to the document of JobDetectorPropertyResource
            string subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
            string resourceGroupName = "rg";
            string jobName = "testcontainerAppsJob0";
            ResourceIdentifier jobDetectorPropertyResourceId = JobDetectorPropertyResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, jobName);
            JobDetectorPropertyResource jobDetectorProperty = client.GetJobDetectorPropertyResource(jobDetectorPropertyResourceId);

            // invoke the operation
            JobDetectorPropertyResource result = await jobDetectorProperty.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ContainerAppJobData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
