// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.AppContainers.Models;

namespace Azure.ResourceManager.AppContainers.Samples
{
    public partial class Sample_DaprSubscriptionResource
    {
        // Get Dapr subscription with bulk subscribe configuration and scopes
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetDaprSubscriptionWithBulkSubscribeConfigurationAndScopes()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprSubscriptions_Get_DefaultRoute.json
            // this example is just showing the usage of "DaprSubscriptions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DaprSubscriptionResource created on azure
            // for more information of creating DaprSubscriptionResource, please refer to the document of DaprSubscriptionResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string name = "mypubsubcomponent";
            ResourceIdentifier daprSubscriptionResourceId = DaprSubscriptionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, name);
            DaprSubscriptionResource daprSubscription = client.GetDaprSubscriptionResource(daprSubscriptionResourceId);

            // invoke the operation
            DaprSubscriptionResource result = await daprSubscription.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get Dapr subscription with default route only
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetDaprSubscriptionWithDefaultRouteOnly()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprSubscriptions_Get_BulkSubscribeAndScopes.json
            // this example is just showing the usage of "DaprSubscriptions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DaprSubscriptionResource created on azure
            // for more information of creating DaprSubscriptionResource, please refer to the document of DaprSubscriptionResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string name = "mypubsubcomponent";
            ResourceIdentifier daprSubscriptionResourceId = DaprSubscriptionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, name);
            DaprSubscriptionResource daprSubscription = client.GetDaprSubscriptionResource(daprSubscriptionResourceId);

            // invoke the operation
            DaprSubscriptionResource result = await daprSubscription.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // GetDapr subscription with route rules and metadata
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetDaprSubscriptionWithRouteRulesAndMetadata()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprSubscriptions_Get_RouteRulesAndMetadata.json
            // this example is just showing the usage of "DaprSubscriptions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DaprSubscriptionResource created on azure
            // for more information of creating DaprSubscriptionResource, please refer to the document of DaprSubscriptionResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string name = "mypubsubcomponent";
            ResourceIdentifier daprSubscriptionResourceId = DaprSubscriptionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, name);
            DaprSubscriptionResource daprSubscription = client.GetDaprSubscriptionResource(daprSubscriptionResourceId);

            // invoke the operation
            DaprSubscriptionResource result = await daprSubscription.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Create or update dapr subscription with bulk subscribe configuration and scopes
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreateOrUpdateDaprSubscriptionWithBulkSubscribeConfigurationAndScopes()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprSubscriptions_CreateOrUpdate_BulkSubscribeAndScopes.json
            // this example is just showing the usage of "DaprSubscriptions_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DaprSubscriptionResource created on azure
            // for more information of creating DaprSubscriptionResource, please refer to the document of DaprSubscriptionResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string name = "mysubscription";
            ResourceIdentifier daprSubscriptionResourceId = DaprSubscriptionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, name);
            DaprSubscriptionResource daprSubscription = client.GetDaprSubscriptionResource(daprSubscriptionResourceId);

            // invoke the operation
            DaprSubscriptionData data = new DaprSubscriptionData()
            {
                PubsubName = "mypubsubcomponent",
                Topic = "inventory",
                Routes = new DaprSubscriptionRoutes()
                {
                    Default = "/products",
                },
                Scopes =
{
"warehouseapp","customersupportapp"
},
                BulkSubscribe = new DaprSubscriptionBulkSubscribeConfig()
                {
                    IsEnabled = true,
                    MaxMessagesCount = 123,
                    MaxAwaitDurationMs = 500,
                },
            };
            ArmOperation<DaprSubscriptionResource> lro = await daprSubscription.UpdateAsync(WaitUntil.Completed, data);
            DaprSubscriptionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Create or update dapr subscription with default route only
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreateOrUpdateDaprSubscriptionWithDefaultRouteOnly()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprSubscriptions_CreateOrUpdate_DefaultRoute.json
            // this example is just showing the usage of "DaprSubscriptions_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DaprSubscriptionResource created on azure
            // for more information of creating DaprSubscriptionResource, please refer to the document of DaprSubscriptionResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string name = "mysubscription";
            ResourceIdentifier daprSubscriptionResourceId = DaprSubscriptionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, name);
            DaprSubscriptionResource daprSubscription = client.GetDaprSubscriptionResource(daprSubscriptionResourceId);

            // invoke the operation
            DaprSubscriptionData data = new DaprSubscriptionData()
            {
                PubsubName = "mypubsubcomponent",
                Topic = "inventory",
                Routes = new DaprSubscriptionRoutes()
                {
                    Default = "/products",
                },
            };
            ArmOperation<DaprSubscriptionResource> lro = await daprSubscription.UpdateAsync(WaitUntil.Completed, data);
            DaprSubscriptionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Create or update dapr subscription with route rules and metadata
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_CreateOrUpdateDaprSubscriptionWithRouteRulesAndMetadata()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprSubscriptions_CreateOrUpdate_RouteRulesAndMetadata.json
            // this example is just showing the usage of "DaprSubscriptions_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DaprSubscriptionResource created on azure
            // for more information of creating DaprSubscriptionResource, please refer to the document of DaprSubscriptionResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string name = "mysubscription";
            ResourceIdentifier daprSubscriptionResourceId = DaprSubscriptionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, name);
            DaprSubscriptionResource daprSubscription = client.GetDaprSubscriptionResource(daprSubscriptionResourceId);

            // invoke the operation
            DaprSubscriptionData data = new DaprSubscriptionData()
            {
                PubsubName = "mypubsubcomponent",
                Topic = "inventory",
                Routes = new DaprSubscriptionRoutes()
                {
                    Rules =
{
new DaprSubscriptionRouteRule()
{
Match = "event.type == 'widget'",
Path = "/widgets",
},new DaprSubscriptionRouteRule()
{
Match = "event.type == 'gadget'",
Path = "/gadgets",
}
},
                    Default = "/products",
                },
                Metadata =
{
["foo"] = "bar",
["hello"] = "world",
},
            };
            ArmOperation<DaprSubscriptionResource> lro = await daprSubscription.UpdateAsync(WaitUntil.Completed, data);
            DaprSubscriptionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DaprSubscriptionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Delete dapr subscription
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_DeleteDaprSubscription()
        {
            // Generated from example definition: specification/app/resource-manager/Microsoft.App/preview/2024-10-02-preview/examples/DaprSubscriptions_Delete.json
            // this example is just showing the usage of "DaprSubscriptions_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DaprSubscriptionResource created on azure
            // for more information of creating DaprSubscriptionResource, please refer to the document of DaprSubscriptionResource
            string subscriptionId = "8efdecc5-919e-44eb-b179-915dca89ebf9";
            string resourceGroupName = "examplerg";
            string environmentName = "myenvironment";
            string name = "mysubscription";
            ResourceIdentifier daprSubscriptionResourceId = DaprSubscriptionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, environmentName, name);
            DaprSubscriptionResource daprSubscription = client.GetDaprSubscriptionResource(daprSubscriptionResourceId);

            // invoke the operation
            await daprSubscription.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
