// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Resource instance provisioning state. </summary>
    public readonly partial struct ContainerAppBuilderProvisioningState : IEquatable<ContainerAppBuilderProvisioningState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ContainerAppBuilderProvisioningState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ContainerAppBuilderProvisioningState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SucceededValue = "Succeeded";
        private const string FailedValue = "Failed";
        private const string CanceledValue = "Canceled";
        private const string CreatingValue = "Creating";
        private const string UpdatingValue = "Updating";
        private const string DeletingValue = "Deleting";

        /// <summary> Succeeded. </summary>
        public static ContainerAppBuilderProvisioningState Succeeded { get; } = new ContainerAppBuilderProvisioningState(SucceededValue);
        /// <summary> Failed. </summary>
        public static ContainerAppBuilderProvisioningState Failed { get; } = new ContainerAppBuilderProvisioningState(FailedValue);
        /// <summary> Canceled. </summary>
        public static ContainerAppBuilderProvisioningState Canceled { get; } = new ContainerAppBuilderProvisioningState(CanceledValue);
        /// <summary> Creating. </summary>
        public static ContainerAppBuilderProvisioningState Creating { get; } = new ContainerAppBuilderProvisioningState(CreatingValue);
        /// <summary> Updating. </summary>
        public static ContainerAppBuilderProvisioningState Updating { get; } = new ContainerAppBuilderProvisioningState(UpdatingValue);
        /// <summary> Deleting. </summary>
        public static ContainerAppBuilderProvisioningState Deleting { get; } = new ContainerAppBuilderProvisioningState(DeletingValue);
        /// <summary> Determines if two <see cref="ContainerAppBuilderProvisioningState"/> values are the same. </summary>
        public static bool operator ==(ContainerAppBuilderProvisioningState left, ContainerAppBuilderProvisioningState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ContainerAppBuilderProvisioningState"/> values are not the same. </summary>
        public static bool operator !=(ContainerAppBuilderProvisioningState left, ContainerAppBuilderProvisioningState right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ContainerAppBuilderProvisioningState"/>. </summary>
        public static implicit operator ContainerAppBuilderProvisioningState(string value) => new ContainerAppBuilderProvisioningState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ContainerAppBuilderProvisioningState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ContainerAppBuilderProvisioningState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
