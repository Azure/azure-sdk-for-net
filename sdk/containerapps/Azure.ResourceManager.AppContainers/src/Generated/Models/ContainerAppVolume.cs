// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary>
    /// Volume definitions for the Container App.
    /// Serialized Name: Volume
    /// </summary>
    public partial class ContainerAppVolume
    {
        /// <summary> Initializes a new instance of ContainerAppVolume. </summary>
        public ContainerAppVolume()
        {
            Secrets = new ChangeTrackingList<SecretVolumeItem>();
        }

        /// <summary> Initializes a new instance of ContainerAppVolume. </summary>
        /// <param name="name">
        /// Volume name.
        /// Serialized Name: Volume.name
        /// </param>
        /// <param name="storageType">
        /// Storage type for the volume. If not provided, use EmptyDir.
        /// Serialized Name: Volume.storageType
        /// </param>
        /// <param name="storageName">
        /// Name of storage resource. No need to provide for EmptyDir and Secret.
        /// Serialized Name: Volume.storageName
        /// </param>
        /// <param name="secrets">
        /// List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
        /// Serialized Name: Volume.secrets
        /// </param>
        internal ContainerAppVolume(string name, ContainerAppStorageType? storageType, string storageName, IList<SecretVolumeItem> secrets)
        {
            Name = name;
            StorageType = storageType;
            StorageName = storageName;
            Secrets = secrets;
        }

        /// <summary>
        /// Volume name.
        /// Serialized Name: Volume.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Storage type for the volume. If not provided, use EmptyDir.
        /// Serialized Name: Volume.storageType
        /// </summary>
        public ContainerAppStorageType? StorageType { get; set; }
        /// <summary>
        /// Name of storage resource. No need to provide for EmptyDir and Secret.
        /// Serialized Name: Volume.storageName
        /// </summary>
        public string StorageName { get; set; }
        /// <summary>
        /// List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
        /// Serialized Name: Volume.secrets
        /// </summary>
        public IList<SecretVolumeItem> Secrets { get; }
    }
}
