// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    public partial class ManagedCertificateProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(SubjectName))
            {
                writer.WritePropertyName("subjectName"u8);
                writer.WriteStringValue(SubjectName);
            }
            if (Core.Optional.IsDefined(DomainControlValidation))
            {
                writer.WritePropertyName("domainControlValidation"u8);
                writer.WriteStringValue(DomainControlValidation.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static ManagedCertificateProperties DeserializeManagedCertificateProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<ContainerAppCertificateProvisioningState> provisioningState = default;
            Core.Optional<string> subjectName = default;
            Core.Optional<string> error = default;
            Core.Optional<ManagedCertificateDomainControlValidation> domainControlValidation = default;
            Core.Optional<string> validationToken = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisioningState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    provisioningState = new ContainerAppCertificateProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("subjectName"u8))
                {
                    subjectName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("error"u8))
                {
                    error = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("domainControlValidation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domainControlValidation = new ManagedCertificateDomainControlValidation(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("validationToken"u8))
                {
                    validationToken = property.Value.GetString();
                    continue;
                }
            }
            return new ManagedCertificateProperties(Core.Optional.ToNullable(provisioningState), subjectName.Value, error.Value, Core.Optional.ToNullable(domainControlValidation), validationToken.Value);
        }
    }
}
