// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Container App container resource requirements. </summary>
    public partial class AppContainerResources
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AppContainerResources"/>. </summary>
        public AppContainerResources()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AppContainerResources"/>. </summary>
        /// <param name="cpu"> Required CPU in cores, e.g. 0.5. </param>
        /// <param name="memory"> Required memory, e.g. "250Mb". </param>
        /// <param name="ephemeralStorage"> Ephemeral Storage, e.g. "1Gi". </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AppContainerResources(double? cpu, string memory, string ephemeralStorage, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Cpu = cpu;
            Memory = memory;
            EphemeralStorage = ephemeralStorage;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Required CPU in cores, e.g. 0.5. </summary>
        public double? Cpu { get; set; }
        /// <summary> Required memory, e.g. "250Mb". </summary>
        public string Memory { get; set; }
        /// <summary> Ephemeral Storage, e.g. "1Gi". </summary>
        public string EphemeralStorage { get; }
    }
}
