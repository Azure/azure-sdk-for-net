// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    public partial class OpenTelemetryConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DestinationsConfiguration))
            {
                writer.WritePropertyName("destinationsConfiguration"u8);
                writer.WriteObjectValue(DestinationsConfiguration);
            }
            if (Optional.IsDefined(TracesConfiguration))
            {
                writer.WritePropertyName("tracesConfiguration"u8);
                writer.WriteObjectValue(TracesConfiguration);
            }
            if (Optional.IsDefined(LogsConfiguration))
            {
                writer.WritePropertyName("logsConfiguration"u8);
                writer.WriteObjectValue(LogsConfiguration);
            }
            if (Optional.IsDefined(MetricsConfiguration))
            {
                writer.WritePropertyName("metricsConfiguration"u8);
                writer.WriteObjectValue(MetricsConfiguration);
            }
            writer.WriteEndObject();
        }

        internal static OpenTelemetryConfiguration DeserializeOpenTelemetryConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<DestinationsConfiguration> destinationsConfiguration = default;
            Optional<TracesConfiguration> tracesConfiguration = default;
            Optional<LogsConfiguration> logsConfiguration = default;
            Optional<MetricsConfiguration> metricsConfiguration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("destinationsConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    destinationsConfiguration = DestinationsConfiguration.DeserializeDestinationsConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("tracesConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    tracesConfiguration = TracesConfiguration.DeserializeTracesConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("logsConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    logsConfiguration = LogsConfiguration.DeserializeLogsConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("metricsConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    metricsConfiguration = MetricsConfiguration.DeserializeMetricsConfiguration(property.Value);
                    continue;
                }
            }
            return new OpenTelemetryConfiguration(destinationsConfiguration.Value, tracesConfiguration.Value, logsConfiguration.Value, metricsConfiguration.Value);
        }
    }
}
