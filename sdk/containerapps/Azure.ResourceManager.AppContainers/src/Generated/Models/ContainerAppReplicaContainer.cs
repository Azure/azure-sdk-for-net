// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary>
    /// Container object under Container App Revision Replica.
    /// Serialized Name: ReplicaContainer
    /// </summary>
    public partial class ContainerAppReplicaContainer
    {
        /// <summary> Initializes a new instance of ContainerAppReplicaContainer. </summary>
        public ContainerAppReplicaContainer()
        {
        }

        /// <summary> Initializes a new instance of ContainerAppReplicaContainer. </summary>
        /// <param name="name">
        /// The Name of the Container
        /// Serialized Name: ReplicaContainer.name
        /// </param>
        /// <param name="containerId">
        /// The Id of the Container
        /// Serialized Name: ReplicaContainer.containerId
        /// </param>
        /// <param name="isReady">
        /// The container ready status
        /// Serialized Name: ReplicaContainer.ready
        /// </param>
        /// <param name="isStarted">
        /// The container start status
        /// Serialized Name: ReplicaContainer.started
        /// </param>
        /// <param name="restartCount">
        /// The container restart count
        /// Serialized Name: ReplicaContainer.restartCount
        /// </param>
        /// <param name="logStreamEndpoint">
        /// Log Stream endpoint
        /// Serialized Name: ReplicaContainer.logStreamEndpoint
        /// </param>
        /// <param name="execEndpoint">
        /// Container exec endpoint
        /// Serialized Name: ReplicaContainer.execEndpoint
        /// </param>
        internal ContainerAppReplicaContainer(string name, string containerId, bool? isReady, bool? isStarted, int? restartCount, string logStreamEndpoint, string execEndpoint)
        {
            Name = name;
            ContainerId = containerId;
            IsReady = isReady;
            IsStarted = isStarted;
            RestartCount = restartCount;
            LogStreamEndpoint = logStreamEndpoint;
            ExecEndpoint = execEndpoint;
        }

        /// <summary>
        /// The Name of the Container
        /// Serialized Name: ReplicaContainer.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// The Id of the Container
        /// Serialized Name: ReplicaContainer.containerId
        /// </summary>
        public string ContainerId { get; set; }
        /// <summary>
        /// The container ready status
        /// Serialized Name: ReplicaContainer.ready
        /// </summary>
        public bool? IsReady { get; set; }
        /// <summary>
        /// The container start status
        /// Serialized Name: ReplicaContainer.started
        /// </summary>
        public bool? IsStarted { get; set; }
        /// <summary>
        /// The container restart count
        /// Serialized Name: ReplicaContainer.restartCount
        /// </summary>
        public int? RestartCount { get; set; }
        /// <summary>
        /// Log Stream endpoint
        /// Serialized Name: ReplicaContainer.logStreamEndpoint
        /// </summary>
        public string LogStreamEndpoint { get; }
        /// <summary>
        /// Container exec endpoint
        /// Serialized Name: ReplicaContainer.execEndpoint
        /// </summary>
        public string ExecEndpoint { get; }
    }
}
