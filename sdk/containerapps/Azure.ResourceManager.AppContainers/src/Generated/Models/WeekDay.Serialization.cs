// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.AppContainers.Models
{
    internal static partial class WeekDayExtensions
    {
        public static string ToSerialString(this WeekDay value) => value switch
        {
            WeekDay.Monday => "Monday",
            WeekDay.Tuesday => "Tuesday",
            WeekDay.Wednesday => "Wednesday",
            WeekDay.Thursday => "Thursday",
            WeekDay.Friday => "Friday",
            WeekDay.Saturday => "Saturday",
            WeekDay.Sunday => "Sunday",
            WeekDay.Everyday => "Everyday",
            WeekDay.Weekend => "Weekend",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown WeekDay value.")
        };

        public static WeekDay ToWeekDay(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Monday")) return WeekDay.Monday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Tuesday")) return WeekDay.Tuesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Wednesday")) return WeekDay.Wednesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Thursday")) return WeekDay.Thursday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Friday")) return WeekDay.Friday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Saturday")) return WeekDay.Saturday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Sunday")) return WeekDay.Sunday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Everyday")) return WeekDay.Everyday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Weekend")) return WeekDay.Weekend;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown WeekDay value.");
        }
    }
}
