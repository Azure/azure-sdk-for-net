// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary>
    /// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.
    /// Serialized Name: ContainerAppProbeTcpSocket
    /// </summary>
    public partial class ContainerAppTcpSocketRequestInfo
    {
        /// <summary> Initializes a new instance of ContainerAppTcpSocketRequestInfo. </summary>
        /// <param name="port">
        /// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        /// Serialized Name: ContainerAppProbeTcpSocket.port
        /// </param>
        public ContainerAppTcpSocketRequestInfo(int port)
        {
            Port = port;
        }

        /// <summary> Initializes a new instance of ContainerAppTcpSocketRequestInfo. </summary>
        /// <param name="host">
        /// Optional: Host name to connect to, defaults to the pod IP.
        /// Serialized Name: ContainerAppProbeTcpSocket.host
        /// </param>
        /// <param name="port">
        /// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        /// Serialized Name: ContainerAppProbeTcpSocket.port
        /// </param>
        internal ContainerAppTcpSocketRequestInfo(string host, int port)
        {
            Host = host;
            Port = port;
        }

        /// <summary>
        /// Optional: Host name to connect to, defaults to the pod IP.
        /// Serialized Name: ContainerAppProbeTcpSocket.host
        /// </summary>
        public string Host { get; set; }
        /// <summary>
        /// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        /// Serialized Name: ContainerAppProbeTcpSocket.port
        /// </summary>
        public int Port { get; set; }
    }
}
