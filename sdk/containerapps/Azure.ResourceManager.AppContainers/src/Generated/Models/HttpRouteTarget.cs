// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Targets - Container App Names, Revision Names, Labels. </summary>
    public partial class HttpRouteTarget
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="HttpRouteTarget"/>. </summary>
        /// <param name="containerApp"> Container App Name to route requests to. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="containerApp"/> is null. </exception>
        public HttpRouteTarget(string containerApp)
        {
            Argument.AssertNotNull(containerApp, nameof(containerApp));

            ContainerApp = containerApp;
        }

        /// <summary> Initializes a new instance of <see cref="HttpRouteTarget"/>. </summary>
        /// <param name="containerApp"> Container App Name to route requests to. </param>
        /// <param name="revision"> Revision to route requests to. </param>
        /// <param name="label"> Label/Revision to route requests to. </param>
        /// <param name="weight"> Weighted routing. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal HttpRouteTarget(string containerApp, string revision, string label, int? weight, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ContainerApp = containerApp;
            Revision = revision;
            Label = label;
            Weight = weight;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="HttpRouteTarget"/> for deserialization. </summary>
        internal HttpRouteTarget()
        {
        }

        /// <summary> Container App Name to route requests to. </summary>
        [WirePath("containerApp")]
        public string ContainerApp { get; set; }
        /// <summary> Revision to route requests to. </summary>
        [WirePath("revision")]
        public string Revision { get; set; }
        /// <summary> Label/Revision to route requests to. </summary>
        [WirePath("label")]
        public string Label { get; set; }
        /// <summary> Weighted routing. </summary>
        [WirePath("weight")]
        public int? Weight { get; set; }
    }
}
