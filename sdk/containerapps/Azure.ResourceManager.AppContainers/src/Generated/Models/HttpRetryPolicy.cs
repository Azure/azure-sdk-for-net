// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Policy that defines http request retry conditions. </summary>
    public partial class HttpRetryPolicy
    {
        /// <summary> Initializes a new instance of HttpRetryPolicy. </summary>
        public HttpRetryPolicy()
        {
            Headers = new ChangeTrackingList<HeaderMatch>();
            HttpStatusCodes = new ChangeTrackingList<int>();
            Errors = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of HttpRetryPolicy. </summary>
        /// <param name="maxRetries"> Maximum number of times a request will retry. </param>
        /// <param name="headers"> Headers that must be present for a request to be retried. </param>
        /// <param name="httpStatusCodes"> Additional http status codes that can trigger a retry. </param>
        /// <param name="errors"> Errors that can trigger a retry. </param>
        /// <param name="initialDelayInMilliseconds"> Initial delay, in milliseconds, before retrying a request. </param>
        /// <param name="maxIntervalInMilliseconds"> Maximum interval, in milliseconds, between retries. </param>
        internal HttpRetryPolicy(int? maxRetries, IList<HeaderMatch> headers, IList<int> httpStatusCodes, IList<string> errors, long? initialDelayInMilliseconds, long? maxIntervalInMilliseconds)
        {
            MaxRetries = maxRetries;
            Headers = headers;
            HttpStatusCodes = httpStatusCodes;
            Errors = errors;
            InitialDelayInMilliseconds = initialDelayInMilliseconds;
            MaxIntervalInMilliseconds = maxIntervalInMilliseconds;
        }

        /// <summary> Maximum number of times a request will retry. </summary>
        public int? MaxRetries { get; set; }
        /// <summary> Headers that must be present for a request to be retried. </summary>
        public IList<HeaderMatch> Headers { get; }
        /// <summary> Additional http status codes that can trigger a retry. </summary>
        public IList<int> HttpStatusCodes { get; }
        /// <summary> Errors that can trigger a retry. </summary>
        public IList<string> Errors { get; }
        /// <summary> Initial delay, in milliseconds, before retrying a request. </summary>
        public long? InitialDelayInMilliseconds { get; set; }
        /// <summary> Maximum interval, in milliseconds, between retries. </summary>
        public long? MaxIntervalInMilliseconds { get; set; }
    }
}
