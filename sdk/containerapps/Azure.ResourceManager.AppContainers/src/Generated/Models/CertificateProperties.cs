// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Certificate resource specific properties. </summary>
    public partial class CertificateProperties
    {
        /// <summary> Initializes a new instance of CertificateProperties. </summary>
        public CertificateProperties()
        {
        }

        /// <summary> Initializes a new instance of CertificateProperties. </summary>
        /// <param name="provisioningState"> Provisioning state of the certificate. </param>
        /// <param name="password"> Certificate password. </param>
        /// <param name="subjectName"> Subject name of the certificate. </param>
        /// <param name="value"> PFX or PEM blob. </param>
        /// <param name="issuer"> Certificate issuer. </param>
        /// <param name="issueOn"> Certificate issue Date. </param>
        /// <param name="expirationOn"> Certificate expiration date. </param>
        /// <param name="thumbprint"> Certificate thumbprint. </param>
        /// <param name="valid"> Is the certificate valid?. </param>
        /// <param name="publicKeyHash"> Public key hash. </param>
        internal CertificateProperties(CertificateProvisioningState? provisioningState, string password, string subjectName, byte[] value, string issuer, DateTimeOffset? issueOn, DateTimeOffset? expirationOn, string thumbprint, bool? valid, string publicKeyHash)
        {
            ProvisioningState = provisioningState;
            Password = password;
            SubjectName = subjectName;
            Value = value;
            Issuer = issuer;
            IssueOn = issueOn;
            ExpirationOn = expirationOn;
            Thumbprint = thumbprint;
            Valid = valid;
            PublicKeyHash = publicKeyHash;
        }

        /// <summary> Provisioning state of the certificate. </summary>
        public CertificateProvisioningState? ProvisioningState { get; }
        /// <summary> Certificate password. </summary>
        public string Password { get; set; }
        /// <summary> Subject name of the certificate. </summary>
        public string SubjectName { get; }
        /// <summary> PFX or PEM blob. </summary>
        public byte[] Value { get; set; }
        /// <summary> Certificate issuer. </summary>
        public string Issuer { get; }
        /// <summary> Certificate issue Date. </summary>
        public DateTimeOffset? IssueOn { get; }
        /// <summary> Certificate expiration date. </summary>
        public DateTimeOffset? ExpirationOn { get; }
        /// <summary> Certificate thumbprint. </summary>
        public string Thumbprint { get; }
        /// <summary> Is the certificate valid?. </summary>
        public bool? Valid { get; }
        /// <summary> Public key hash. </summary>
        public string PublicKeyHash { get; }
    }
}
