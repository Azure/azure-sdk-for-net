// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Net;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.AppContainers.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppContainers
{
    public partial class ContainerAppManagedEnvironmentData : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind"u8);
                writer.WriteStringValue(Kind);
            }
            if (Core.Optional.IsCollectionDefined(Tags))
            {
                writer.WritePropertyName("tags"u8);
                writer.WriteStartObject();
                foreach (var item in Tags)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WritePropertyName("location"u8);
            writer.WriteStringValue(Location);
            writer.WritePropertyName("properties"u8);
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(DaprAIInstrumentationKey))
            {
                writer.WritePropertyName("daprAIInstrumentationKey"u8);
                writer.WriteStringValue(DaprAIInstrumentationKey);
            }
            if (Core.Optional.IsDefined(DaprAIConnectionString))
            {
                writer.WritePropertyName("daprAIConnectionString"u8);
                writer.WriteStringValue(DaprAIConnectionString);
            }
            if (Core.Optional.IsDefined(VnetConfiguration))
            {
                writer.WritePropertyName("vnetConfiguration"u8);
                writer.WriteObjectValue(VnetConfiguration);
            }
            if (Core.Optional.IsDefined(AppLogsConfiguration))
            {
                writer.WritePropertyName("appLogsConfiguration"u8);
                writer.WriteObjectValue(AppLogsConfiguration);
            }
            if (Core.Optional.IsDefined(IsZoneRedundant))
            {
                writer.WritePropertyName("zoneRedundant"u8);
                writer.WriteBooleanValue(IsZoneRedundant.Value);
            }
            if (Core.Optional.IsDefined(CustomDomainConfiguration))
            {
                writer.WritePropertyName("customDomainConfiguration"u8);
                writer.WriteObjectValue(CustomDomainConfiguration);
            }
            if (Core.Optional.IsCollectionDefined(WorkloadProfiles))
            {
                writer.WritePropertyName("workloadProfiles"u8);
                writer.WriteStartArray();
                foreach (var item in WorkloadProfiles)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsDefined(KedaConfiguration))
            {
                writer.WritePropertyName("kedaConfiguration"u8);
                writer.WriteObjectValue(KedaConfiguration);
            }
            if (Core.Optional.IsDefined(DaprConfiguration))
            {
                writer.WritePropertyName("daprConfiguration"u8);
                writer.WriteObjectValue(DaprConfiguration);
            }
            if (Core.Optional.IsDefined(InfrastructureResourceGroup))
            {
                writer.WritePropertyName("infrastructureResourceGroup"u8);
                writer.WriteStringValue(InfrastructureResourceGroup);
            }
            if (Core.Optional.IsDefined(PeerAuthentication))
            {
                writer.WritePropertyName("peerAuthentication"u8);
                writer.WriteObjectValue(PeerAuthentication);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static ContainerAppManagedEnvironmentData DeserializeContainerAppManagedEnvironmentData(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> kind = default;
            Core.Optional<IDictionary<string, string>> tags = default;
            AzureLocation location = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Core.Optional<SystemData> systemData = default;
            Core.Optional<ContainerAppEnvironmentProvisioningState> provisioningState = default;
            Core.Optional<string> daprAIInstrumentationKey = default;
            Core.Optional<string> daprAIConnectionString = default;
            Core.Optional<ContainerAppVnetConfiguration> vnetConfiguration = default;
            Core.Optional<string> deploymentErrors = default;
            Core.Optional<string> defaultDomain = default;
            Core.Optional<IPAddress> staticIP = default;
            Core.Optional<ContainerAppLogsConfiguration> appLogsConfiguration = default;
            Core.Optional<bool> zoneRedundant = default;
            Core.Optional<ContainerAppCustomDomainConfiguration> customDomainConfiguration = default;
            Core.Optional<string> eventStreamEndpoint = default;
            Core.Optional<IList<ContainerAppWorkloadProfile>> workloadProfiles = default;
            Core.Optional<KedaConfiguration> kedaConfiguration = default;
            Core.Optional<DaprConfiguration> daprConfiguration = default;
            Core.Optional<string> infrastructureResourceGroup = default;
            Core.Optional<ManagedEnvironmentPropertiesPeerAuthentication> peerAuthentication = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"u8))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tags"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetString());
                    }
                    tags = dictionary;
                    continue;
                }
                if (property.NameEquals("location"u8))
                {
                    location = new AzureLocation(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("provisioningState"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            provisioningState = new ContainerAppEnvironmentProvisioningState(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("daprAIInstrumentationKey"u8))
                        {
                            daprAIInstrumentationKey = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("daprAIConnectionString"u8))
                        {
                            daprAIConnectionString = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("vnetConfiguration"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            vnetConfiguration = ContainerAppVnetConfiguration.DeserializeContainerAppVnetConfiguration(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("deploymentErrors"u8))
                        {
                            deploymentErrors = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("defaultDomain"u8))
                        {
                            defaultDomain = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("staticIp"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            staticIP = IPAddress.Parse(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("appLogsConfiguration"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            appLogsConfiguration = ContainerAppLogsConfiguration.DeserializeContainerAppLogsConfiguration(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("zoneRedundant"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            zoneRedundant = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("customDomainConfiguration"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            customDomainConfiguration = ContainerAppCustomDomainConfiguration.DeserializeContainerAppCustomDomainConfiguration(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("eventStreamEndpoint"u8))
                        {
                            eventStreamEndpoint = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("workloadProfiles"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            List<ContainerAppWorkloadProfile> array = new List<ContainerAppWorkloadProfile>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(ContainerAppWorkloadProfile.DeserializeContainerAppWorkloadProfile(item));
                            }
                            workloadProfiles = array;
                            continue;
                        }
                        if (property0.NameEquals("kedaConfiguration"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            kedaConfiguration = KedaConfiguration.DeserializeKedaConfiguration(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("daprConfiguration"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            daprConfiguration = DaprConfiguration.DeserializeDaprConfiguration(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("infrastructureResourceGroup"u8))
                        {
                            infrastructureResourceGroup = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("peerAuthentication"u8))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            peerAuthentication = ManagedEnvironmentPropertiesPeerAuthentication.DeserializeManagedEnvironmentPropertiesPeerAuthentication(property0.Value);
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new ContainerAppManagedEnvironmentData(id, name, type, systemData.Value, Core.Optional.ToDictionary(tags), location, kind.Value, Core.Optional.ToNullable(provisioningState), daprAIInstrumentationKey.Value, daprAIConnectionString.Value, vnetConfiguration.Value, deploymentErrors.Value, defaultDomain.Value, staticIP.Value, appLogsConfiguration.Value, Core.Optional.ToNullable(zoneRedundant), customDomainConfiguration.Value, eventStreamEndpoint.Value, Core.Optional.ToList(workloadProfiles), kedaConfiguration.Value, daprConfiguration.Value, infrastructureResourceGroup.Value, peerAuthentication.Value);
        }
    }
}
