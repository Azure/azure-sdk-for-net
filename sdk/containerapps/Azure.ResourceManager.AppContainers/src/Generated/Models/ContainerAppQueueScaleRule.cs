// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Container App container Azure Queue based scaling rule. </summary>
    public partial class ContainerAppQueueScaleRule
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ContainerAppQueueScaleRule"/>. </summary>
        public ContainerAppQueueScaleRule()
        {
            Auth = new ChangeTrackingList<ContainerAppScaleRuleAuth>();
        }

        /// <summary> Initializes a new instance of <see cref="ContainerAppQueueScaleRule"/>. </summary>
        /// <param name="queueName"> Queue name. </param>
        /// <param name="queueLength"> Queue length. </param>
        /// <param name="auth"> Authentication secrets for the queue scale rule. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ContainerAppQueueScaleRule(string queueName, int? queueLength, IList<ContainerAppScaleRuleAuth> auth, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            QueueName = queueName;
            QueueLength = queueLength;
            Auth = auth;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Queue name. </summary>
        public string QueueName { get; set; }
        /// <summary> Queue length. </summary>
        public int? QueueLength { get; set; }
        /// <summary> Authentication secrets for the queue scale rule. </summary>
        public IList<ContainerAppScaleRuleAuth> Auth { get; }
    }
}
