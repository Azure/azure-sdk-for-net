// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    public partial class ContainerAppVnetConfiguration : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(IsInternal))
            {
                writer.WritePropertyName("internal"u8);
                writer.WriteBooleanValue(IsInternal.Value);
            }
            if (Core.Optional.IsDefined(InfrastructureSubnetId))
            {
                writer.WritePropertyName("infrastructureSubnetId"u8);
                writer.WriteStringValue(InfrastructureSubnetId);
            }
            if (Core.Optional.IsDefined(DockerBridgeCidr))
            {
                writer.WritePropertyName("dockerBridgeCidr"u8);
                writer.WriteStringValue(DockerBridgeCidr);
            }
            if (Core.Optional.IsDefined(PlatformReservedCidr))
            {
                writer.WritePropertyName("platformReservedCidr"u8);
                writer.WriteStringValue(PlatformReservedCidr);
            }
            if (Core.Optional.IsDefined(PlatformReservedDnsIP))
            {
                writer.WritePropertyName("platformReservedDnsIP"u8);
                writer.WriteStringValue(PlatformReservedDnsIP);
            }
            writer.WriteEndObject();
        }

        internal static ContainerAppVnetConfiguration DeserializeContainerAppVnetConfiguration(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<bool> @internal = default;
            Core.Optional<ResourceIdentifier> infrastructureSubnetId = default;
            Core.Optional<string> dockerBridgeCidr = default;
            Core.Optional<string> platformReservedCidr = default;
            Core.Optional<string> platformReservedDnsIP = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("internal"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    @internal = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("infrastructureSubnetId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    infrastructureSubnetId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("dockerBridgeCidr"u8))
                {
                    dockerBridgeCidr = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("platformReservedCidr"u8))
                {
                    platformReservedCidr = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("platformReservedDnsIP"u8))
                {
                    platformReservedDnsIP = property.Value.GetString();
                    continue;
                }
            }
            return new ContainerAppVnetConfiguration(Core.Optional.ToNullable(@internal), infrastructureSubnetId.Value, dockerBridgeCidr.Value, platformReservedCidr.Value, platformReservedDnsIP.Value);
        }
    }
}
