// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Configuration properties for apps environment custom domain. </summary>
    public partial class ContainerAppCustomDomainConfiguration
    {
        /// <summary> Initializes a new instance of <see cref="ContainerAppCustomDomainConfiguration"/>. </summary>
        public ContainerAppCustomDomainConfiguration()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ContainerAppCustomDomainConfiguration"/>. </summary>
        /// <param name="customDomainVerificationId"> Id used to verify domain name ownership. </param>
        /// <param name="dnsSuffix"> Dns suffix for the environment domain. </param>
        /// <param name="certificateValue"> PFX or PEM blob. </param>
        /// <param name="certificatePassword"> Certificate password. </param>
        /// <param name="expireOn"> Certificate expiration date. </param>
        /// <param name="thumbprint"> Certificate thumbprint. </param>
        /// <param name="subjectName"> Subject name of the certificate. </param>
        internal ContainerAppCustomDomainConfiguration(string customDomainVerificationId, string dnsSuffix, byte[] certificateValue, string certificatePassword, DateTimeOffset? expireOn, string thumbprint, string subjectName)
        {
            CustomDomainVerificationId = customDomainVerificationId;
            DnsSuffix = dnsSuffix;
            CertificateValue = certificateValue;
            CertificatePassword = certificatePassword;
            ExpireOn = expireOn;
            Thumbprint = thumbprint;
            SubjectName = subjectName;
        }

        /// <summary> Id used to verify domain name ownership. </summary>
        public string CustomDomainVerificationId { get; }
        /// <summary> Dns suffix for the environment domain. </summary>
        public string DnsSuffix { get; set; }
        /// <summary> PFX or PEM blob. </summary>
        public byte[] CertificateValue { get; set; }
        /// <summary> Certificate password. </summary>
        public string CertificatePassword { get; set; }
        /// <summary> Certificate expiration date. </summary>
        public DateTimeOffset? ExpireOn { get; }
        /// <summary> Certificate thumbprint. </summary>
        public string Thumbprint { get; }
        /// <summary> Subject name of the certificate. </summary>
        public string SubjectName { get; }
    }
}
