// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Model representing a mapping from a container registry to the identity used to connect to it. </summary>
    public partial class ContainerRegistry
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ContainerRegistry"/>. </summary>
        /// <param name="containerRegistryServer"> Login server of the container registry. </param>
        /// <param name="identityResourceId"> Resource ID of the managed identity. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="containerRegistryServer"/> or <paramref name="identityResourceId"/> is null. </exception>
        public ContainerRegistry(string containerRegistryServer, ResourceIdentifier identityResourceId)
        {
            Argument.AssertNotNull(containerRegistryServer, nameof(containerRegistryServer));
            Argument.AssertNotNull(identityResourceId, nameof(identityResourceId));

            ContainerRegistryServer = containerRegistryServer;
            IdentityResourceId = identityResourceId;
        }

        /// <summary> Initializes a new instance of <see cref="ContainerRegistry"/>. </summary>
        /// <param name="containerRegistryServer"> Login server of the container registry. </param>
        /// <param name="identityResourceId"> Resource ID of the managed identity. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ContainerRegistry(string containerRegistryServer, ResourceIdentifier identityResourceId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ContainerRegistryServer = containerRegistryServer;
            IdentityResourceId = identityResourceId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ContainerRegistry"/> for deserialization. </summary>
        internal ContainerRegistry()
        {
        }

        /// <summary> Login server of the container registry. </summary>
        [WirePath("containerRegistryServer")]
        public string ContainerRegistryServer { get; set; }
        /// <summary> Resource ID of the managed identity. </summary>
        [WirePath("identityResourceId")]
        public ResourceIdentifier IdentityResourceId { get; set; }
    }
}
