// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    public partial class ContainerAppReplicaContainer : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            if (Core.Optional.IsDefined(ContainerId))
            {
                writer.WritePropertyName("containerId"u8);
                writer.WriteStringValue(ContainerId);
            }
            if (Core.Optional.IsDefined(IsReady))
            {
                writer.WritePropertyName("ready"u8);
                writer.WriteBooleanValue(IsReady.Value);
            }
            if (Core.Optional.IsDefined(IsStarted))
            {
                writer.WritePropertyName("started"u8);
                writer.WriteBooleanValue(IsStarted.Value);
            }
            if (Core.Optional.IsDefined(RestartCount))
            {
                writer.WritePropertyName("restartCount"u8);
                writer.WriteNumberValue(RestartCount.Value);
            }
            writer.WriteEndObject();
        }

        internal static ContainerAppReplicaContainer DeserializeContainerAppReplicaContainer(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> name = default;
            Core.Optional<string> containerId = default;
            Core.Optional<bool> ready = default;
            Core.Optional<bool> started = default;
            Core.Optional<int> restartCount = default;
            Core.Optional<ContainerAppContainerRunningState> runningState = default;
            Core.Optional<string> runningStateDetails = default;
            Core.Optional<string> logStreamEndpoint = default;
            Core.Optional<string> execEndpoint = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("containerId"u8))
                {
                    containerId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ready"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ready = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("started"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    started = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("restartCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    restartCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("runningState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    runningState = new ContainerAppContainerRunningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("runningStateDetails"u8))
                {
                    runningStateDetails = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("logStreamEndpoint"u8))
                {
                    logStreamEndpoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("execEndpoint"u8))
                {
                    execEndpoint = property.Value.GetString();
                    continue;
                }
            }
            return new ContainerAppReplicaContainer(name.Value, containerId.Value, Core.Optional.ToNullable(ready), Core.Optional.ToNullable(started), Core.Optional.ToNullable(restartCount), Core.Optional.ToNullable(runningState), runningStateDetails.Value, logStreamEndpoint.Value, execEndpoint.Value);
        }
    }
}
