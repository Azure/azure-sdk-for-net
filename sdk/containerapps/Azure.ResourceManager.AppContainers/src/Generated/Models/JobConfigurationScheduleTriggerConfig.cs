// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Cron formatted repeating trigger schedule ("* * * * *") for cronjobs. Properties completions and parallelism would be set to 1 by default. </summary>
    public partial class JobConfigurationScheduleTriggerConfig
    {
        /// <summary> Initializes a new instance of <see cref="JobConfigurationScheduleTriggerConfig"/>. </summary>
        /// <param name="cronExpression"> Cron formatted repeating schedule ("* * * * *") of a Cron Job. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="cronExpression"/> is null. </exception>
        public JobConfigurationScheduleTriggerConfig(string cronExpression)
        {
            Argument.AssertNotNull(cronExpression, nameof(cronExpression));

            CronExpression = cronExpression;
        }

        /// <summary> Initializes a new instance of <see cref="JobConfigurationScheduleTriggerConfig"/>. </summary>
        /// <param name="replicaCompletionCount"> Minimum number of successful replica completions before overall job completion. </param>
        /// <param name="cronExpression"> Cron formatted repeating schedule ("* * * * *") of a Cron Job. </param>
        /// <param name="parallelism"> Number of parallel replicas of a job that can run at a given time. </param>
        internal JobConfigurationScheduleTriggerConfig(int? replicaCompletionCount, string cronExpression, int? parallelism)
        {
            ReplicaCompletionCount = replicaCompletionCount;
            CronExpression = cronExpression;
            Parallelism = parallelism;
        }

        /// <summary> Minimum number of successful replica completions before overall job completion. </summary>
        public int? ReplicaCompletionCount { get; set; }
        /// <summary> Cron formatted repeating schedule ("* * * * *") of a Cron Job. </summary>
        public string CronExpression { get; set; }
        /// <summary> Number of parallel replicas of a job that can run at a given time. </summary>
        public int? Parallelism { get; set; }
    }
}
