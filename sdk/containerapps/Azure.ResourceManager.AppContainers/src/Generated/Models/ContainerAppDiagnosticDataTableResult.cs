// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Diagnostics data table. </summary>
    public partial class ContainerAppDiagnosticDataTableResult
    {
        /// <summary> Initializes a new instance of <see cref="ContainerAppDiagnosticDataTableResult"/>. </summary>
        public ContainerAppDiagnosticDataTableResult()
        {
            Columns = new ChangeTrackingList<ContainerAppDiagnosticDataColumn>();
            Rows = new ChangeTrackingList<BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="ContainerAppDiagnosticDataTableResult"/>. </summary>
        /// <param name="tableName"> Table name. </param>
        /// <param name="columns"> Columns in the table. </param>
        /// <param name="rows"> Rows in the table. </param>
        internal ContainerAppDiagnosticDataTableResult(string tableName, IList<ContainerAppDiagnosticDataColumn> columns, IList<BinaryData> rows)
        {
            TableName = tableName;
            Columns = columns;
            Rows = rows;
        }

        /// <summary> Table name. </summary>
        public string TableName { get; set; }
        /// <summary> Columns in the table. </summary>
        public IList<ContainerAppDiagnosticDataColumn> Columns { get; }
        /// <summary>
        /// Rows in the table
        /// <para>
        /// To assign an object to the element of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IList<BinaryData> Rows { get; }
    }
}
