// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> The configuration settings of a forward proxy used to make the requests. </summary>
    public partial class ContainerAppForwardProxy
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ContainerAppForwardProxy"/>. </summary>
        public ContainerAppForwardProxy()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ContainerAppForwardProxy"/>. </summary>
        /// <param name="convention"> The convention used to determine the url of the request made. </param>
        /// <param name="customHostHeaderName"> The name of the header containing the host of the request. </param>
        /// <param name="customProtoHeaderName"> The name of the header containing the scheme of the request. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ContainerAppForwardProxy(ContainerAppForwardProxyConvention? convention, string customHostHeaderName, string customProtoHeaderName, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Convention = convention;
            CustomHostHeaderName = customHostHeaderName;
            CustomProtoHeaderName = customProtoHeaderName;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The convention used to determine the url of the request made. </summary>
        public ContainerAppForwardProxyConvention? Convention { get; set; }
        /// <summary> The name of the header containing the host of the request. </summary>
        public string CustomHostHeaderName { get; set; }
        /// <summary> The name of the header containing the scheme of the request. </summary>
        public string CustomProtoHeaderName { get; set; }
    }
}
