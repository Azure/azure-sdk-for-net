// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Body of the error response returned from the API. </summary>
    public partial class WorkflowErrorEntity
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="WorkflowErrorEntity"/>. </summary>
        public WorkflowErrorEntity()
        {
            Parameters = new ChangeTrackingList<string>();
            InnerErrors = new ChangeTrackingList<WorkflowErrorEntity>();
            Details = new ChangeTrackingList<WorkflowErrorEntity>();
        }

        /// <summary> Initializes a new instance of <see cref="WorkflowErrorEntity"/>. </summary>
        /// <param name="extendedCode"> Type of error. </param>
        /// <param name="messageTemplate"> Message template. </param>
        /// <param name="parameters"> Parameters for the template. </param>
        /// <param name="innerErrors"> Inner errors. </param>
        /// <param name="details"> Error Details. </param>
        /// <param name="target"> The error target. </param>
        /// <param name="code"> Basic error code. </param>
        /// <param name="message"> Any details of the error. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal WorkflowErrorEntity(string extendedCode, string messageTemplate, IList<string> parameters, IList<WorkflowErrorEntity> innerErrors, IList<WorkflowErrorEntity> details, string target, string code, string message, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ExtendedCode = extendedCode;
            MessageTemplate = messageTemplate;
            Parameters = parameters;
            InnerErrors = innerErrors;
            Details = details;
            Target = target;
            Code = code;
            Message = message;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Type of error. </summary>
        [WirePath("extendedCode")]
        public string ExtendedCode { get; set; }
        /// <summary> Message template. </summary>
        [WirePath("messageTemplate")]
        public string MessageTemplate { get; set; }
        /// <summary> Parameters for the template. </summary>
        [WirePath("parameters")]
        public IList<string> Parameters { get; }
        /// <summary> Inner errors. </summary>
        [WirePath("innerErrors")]
        public IList<WorkflowErrorEntity> InnerErrors { get; }
        /// <summary> Error Details. </summary>
        [WirePath("details")]
        public IList<WorkflowErrorEntity> Details { get; }
        /// <summary> The error target. </summary>
        [WirePath("target")]
        public string Target { get; set; }
        /// <summary> Basic error code. </summary>
        [WirePath("code")]
        public string Code { get; set; }
        /// <summary> Any details of the error. </summary>
        [WirePath("message")]
        public string Message { get; set; }
    }
}
