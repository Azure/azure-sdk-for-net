// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.AppContainers.Models
{
    internal static partial class ManagedEnvironmentWeekDayExtensions
    {
        public static string ToSerialString(this ManagedEnvironmentWeekDay value) => value switch
        {
            ManagedEnvironmentWeekDay.Monday => "Monday",
            ManagedEnvironmentWeekDay.Tuesday => "Tuesday",
            ManagedEnvironmentWeekDay.Wednesday => "Wednesday",
            ManagedEnvironmentWeekDay.Thursday => "Thursday",
            ManagedEnvironmentWeekDay.Friday => "Friday",
            ManagedEnvironmentWeekDay.Saturday => "Saturday",
            ManagedEnvironmentWeekDay.Sunday => "Sunday",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ManagedEnvironmentWeekDay value.")
        };

        public static ManagedEnvironmentWeekDay ToManagedEnvironmentWeekDay(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Monday")) return ManagedEnvironmentWeekDay.Monday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Tuesday")) return ManagedEnvironmentWeekDay.Tuesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Wednesday")) return ManagedEnvironmentWeekDay.Wednesday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Thursday")) return ManagedEnvironmentWeekDay.Thursday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Friday")) return ManagedEnvironmentWeekDay.Friday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Saturday")) return ManagedEnvironmentWeekDay.Saturday;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Sunday")) return ManagedEnvironmentWeekDay.Sunday;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ManagedEnvironmentWeekDay value.");
        }
    }
}
