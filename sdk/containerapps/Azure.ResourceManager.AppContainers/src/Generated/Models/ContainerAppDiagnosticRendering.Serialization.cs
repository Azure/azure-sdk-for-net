// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    public partial class ContainerAppDiagnosticRendering : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DiagnosticRenderingType))
            {
                writer.WritePropertyName("type"u8);
                writer.WriteNumberValue(DiagnosticRenderingType.Value);
            }
            if (Optional.IsDefined(Title))
            {
                writer.WritePropertyName("title"u8);
                writer.WriteStringValue(Title);
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description"u8);
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(IsVisible))
            {
                writer.WritePropertyName("isVisible"u8);
                writer.WriteBooleanValue(IsVisible.Value);
            }
            writer.WriteEndObject();
        }

        internal static ContainerAppDiagnosticRendering DeserializeContainerAppDiagnosticRendering(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<int> type = default;
            Optional<string> title = default;
            Optional<string> description = default;
            Optional<bool> isVisible = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("title"u8))
                {
                    title = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isVisible"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isVisible = property.Value.GetBoolean();
                    continue;
                }
            }
            return new ContainerAppDiagnosticRendering(Optional.ToNullable(type), title.Value, description.Value, Optional.ToNullable(isVisible));
        }
    }
}
