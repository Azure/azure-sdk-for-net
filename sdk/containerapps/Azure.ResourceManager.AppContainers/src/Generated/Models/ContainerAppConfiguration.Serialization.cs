// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppContainers.Models
{
    public partial class ContainerAppConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Secrets))
            {
                writer.WritePropertyName("secrets");
                writer.WriteStartArray();
                foreach (var item in Secrets)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(ActiveRevisionsMode))
            {
                writer.WritePropertyName("activeRevisionsMode");
                writer.WriteStringValue(ActiveRevisionsMode.Value.ToString());
            }
            if (Optional.IsDefined(Ingress))
            {
                writer.WritePropertyName("ingress");
                writer.WriteObjectValue(Ingress);
            }
            if (Optional.IsCollectionDefined(Registries))
            {
                writer.WritePropertyName("registries");
                writer.WriteStartArray();
                foreach (var item in Registries)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Dapr))
            {
                writer.WritePropertyName("dapr");
                writer.WriteObjectValue(Dapr);
            }
            writer.WriteEndObject();
        }

        internal static ContainerAppConfiguration DeserializeContainerAppConfiguration(JsonElement element)
        {
            Optional<IList<AppSecret>> secrets = default;
            Optional<ActiveRevisionsMode> activeRevisionsMode = default;
            Optional<IngressProvider> ingress = default;
            Optional<IList<RegistryCredentials>> registries = default;
            Optional<DaprProvider> dapr = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("secrets"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AppSecret> array = new List<AppSecret>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AppSecret.DeserializeAppSecret(item));
                    }
                    secrets = array;
                    continue;
                }
                if (property.NameEquals("activeRevisionsMode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    activeRevisionsMode = new ActiveRevisionsMode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ingress"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    ingress = IngressProvider.DeserializeIngressProvider(property.Value);
                    continue;
                }
                if (property.NameEquals("registries"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<RegistryCredentials> array = new List<RegistryCredentials>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RegistryCredentials.DeserializeRegistryCredentials(item));
                    }
                    registries = array;
                    continue;
                }
                if (property.NameEquals("dapr"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dapr = DaprProvider.DeserializeDaprProvider(property.Value);
                    continue;
                }
            }
            return new ContainerAppConfiguration(Optional.ToList(secrets), Optional.ToNullable(activeRevisionsMode), ingress.Value, Optional.ToList(registries), dapr.Value);
        }
    }
}
