// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppContainers.Models
{
    /// <summary> Peer authentication settings for the Managed Environment. </summary>
    internal partial class ManagedEnvironmentPropertiesPeerAuthentication
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ManagedEnvironmentPropertiesPeerAuthentication"/>. </summary>
        public ManagedEnvironmentPropertiesPeerAuthentication()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ManagedEnvironmentPropertiesPeerAuthentication"/>. </summary>
        /// <param name="mtls"> Mutual TLS authentication settings for the Managed Environment. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ManagedEnvironmentPropertiesPeerAuthentication(Mtls mtls, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Mtls = mtls;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Mutual TLS authentication settings for the Managed Environment. </summary>
        internal Mtls Mtls { get; set; }
        /// <summary> Boolean indicating whether the mutual TLS authentication is enabled. </summary>
        public bool? IsMtlsEnabled
        {
            get => Mtls is null ? default : Mtls.IsMtlsEnabled;
            set
            {
                if (Mtls is null)
                    Mtls = new Mtls();
                Mtls.IsMtlsEnabled = value;
            }
        }
    }
}
