// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.AppContainers.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppContainers
{
    /// <summary>
    /// A class representing the ContainerAppRevision data model.
    /// Container App Revision.
    /// Serialized Name: Revision
    /// </summary>
    public partial class ContainerAppRevisionData : ResourceData
    {
        /// <summary> Initializes a new instance of ContainerAppRevisionData. </summary>
        public ContainerAppRevisionData()
        {
        }

        /// <summary> Initializes a new instance of ContainerAppRevisionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="createdOn">
        /// Timestamp describing when the revision was created
        /// by controller
        /// Serialized Name: Revision.properties.createdTime
        /// </param>
        /// <param name="lastActiveOn">
        /// Timestamp describing when the revision was last active. Only meaningful when revision is inactive
        /// Serialized Name: Revision.properties.lastActiveTime
        /// </param>
        /// <param name="fqdn">
        /// Fully qualified domain name of the revision
        /// Serialized Name: Revision.properties.fqdn
        /// </param>
        /// <param name="template">
        /// Container App Revision Template with all possible settings and the
        /// defaults if user did not provide them. The defaults are populated
        /// as they were at the creation time
        /// Serialized Name: Revision.properties.template
        /// </param>
        /// <param name="isActive">
        /// Boolean describing if the Revision is Active
        /// Serialized Name: Revision.properties.active
        /// </param>
        /// <param name="replicas">
        /// Number of pods currently running for this revision
        /// Serialized Name: Revision.properties.replicas
        /// </param>
        /// <param name="trafficWeight">
        /// Traffic weight assigned to this revision
        /// Serialized Name: Revision.properties.trafficWeight
        /// </param>
        /// <param name="provisioningError">
        /// Optional Field - Platform Error Message
        /// Serialized Name: Revision.properties.provisioningError
        /// </param>
        /// <param name="healthState">
        /// Current health State of the revision
        /// Serialized Name: Revision.properties.healthState
        /// </param>
        /// <param name="provisioningState">
        /// Current provisioning State of the revision
        /// Serialized Name: Revision.properties.provisioningState
        /// </param>
        internal ContainerAppRevisionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DateTimeOffset? createdOn, DateTimeOffset? lastActiveOn, string fqdn, ContainerAppTemplate template, bool? isActive, int? replicas, int? trafficWeight, string provisioningError, ContainerAppRevisionHealthState? healthState, ContainerAppRevisionProvisioningState? provisioningState) : base(id, name, resourceType, systemData)
        {
            CreatedOn = createdOn;
            LastActiveOn = lastActiveOn;
            Fqdn = fqdn;
            Template = template;
            IsActive = isActive;
            Replicas = replicas;
            TrafficWeight = trafficWeight;
            ProvisioningError = provisioningError;
            HealthState = healthState;
            ProvisioningState = provisioningState;
        }

        /// <summary>
        /// Timestamp describing when the revision was created
        /// by controller
        /// Serialized Name: Revision.properties.createdTime
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// Timestamp describing when the revision was last active. Only meaningful when revision is inactive
        /// Serialized Name: Revision.properties.lastActiveTime
        /// </summary>
        public DateTimeOffset? LastActiveOn { get; }
        /// <summary>
        /// Fully qualified domain name of the revision
        /// Serialized Name: Revision.properties.fqdn
        /// </summary>
        public string Fqdn { get; }
        /// <summary>
        /// Container App Revision Template with all possible settings and the
        /// defaults if user did not provide them. The defaults are populated
        /// as they were at the creation time
        /// Serialized Name: Revision.properties.template
        /// </summary>
        public ContainerAppTemplate Template { get; }
        /// <summary>
        /// Boolean describing if the Revision is Active
        /// Serialized Name: Revision.properties.active
        /// </summary>
        public bool? IsActive { get; }
        /// <summary>
        /// Number of pods currently running for this revision
        /// Serialized Name: Revision.properties.replicas
        /// </summary>
        public int? Replicas { get; }
        /// <summary>
        /// Traffic weight assigned to this revision
        /// Serialized Name: Revision.properties.trafficWeight
        /// </summary>
        public int? TrafficWeight { get; }
        /// <summary>
        /// Optional Field - Platform Error Message
        /// Serialized Name: Revision.properties.provisioningError
        /// </summary>
        public string ProvisioningError { get; }
        /// <summary>
        /// Current health State of the revision
        /// Serialized Name: Revision.properties.healthState
        /// </summary>
        public ContainerAppRevisionHealthState? HealthState { get; }
        /// <summary>
        /// Current provisioning State of the revision
        /// Serialized Name: Revision.properties.provisioningState
        /// </summary>
        public ContainerAppRevisionProvisioningState? ProvisioningState { get; }
    }
}
