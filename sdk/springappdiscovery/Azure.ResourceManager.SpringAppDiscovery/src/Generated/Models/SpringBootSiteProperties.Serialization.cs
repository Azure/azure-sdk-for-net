// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SpringAppDiscovery.Models
{
    public partial class SpringBootSiteProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MasterSiteId))
            {
                writer.WritePropertyName("masterSiteId"u8);
                writer.WriteStringValue(MasterSiteId);
            }
            if (Optional.IsDefined(MigrateProjectId))
            {
                writer.WritePropertyName("migrateProjectId"u8);
                writer.WriteStringValue(MigrateProjectId);
            }
            if (Optional.IsDefined(ProvisioningState))
            {
                writer.WritePropertyName("provisioningState"u8);
                writer.WriteStringValue(ProvisioningState.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static SpringBootSiteProperties DeserializeSpringBootSiteProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> masterSiteId = default;
            Optional<string> migrateProjectId = default;
            Optional<SpringAppDiscoveryProvisioningState> provisioningState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("masterSiteId"u8))
                {
                    masterSiteId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("migrateProjectId"u8))
                {
                    migrateProjectId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    provisioningState = new SpringAppDiscoveryProvisioningState(property.Value.GetString());
                    continue;
                }
            }
            return new SpringBootSiteProperties(masterSiteId.Value, migrateProjectId.Value, Optional.ToNullable(provisioningState));
        }
    }
}
