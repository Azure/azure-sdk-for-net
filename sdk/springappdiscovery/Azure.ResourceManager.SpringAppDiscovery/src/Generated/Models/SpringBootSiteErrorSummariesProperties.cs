// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SpringAppDiscovery.Models
{
    /// <summary>
    /// Error summary properties
    /// Serialized Name: ErrorSummariesProperties
    /// </summary>
    public partial class SpringBootSiteErrorSummariesProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SpringBootSiteErrorSummariesProperties"/>. </summary>
        public SpringBootSiteErrorSummariesProperties()
        {
            DiscoveryScopeErrorSummaries = new ChangeTrackingList<SpringBootSiteErrorSummaryModel>();
            Errors = new ChangeTrackingList<SpringBootSiteError>();
        }

        /// <summary> Initializes a new instance of <see cref="SpringBootSiteErrorSummariesProperties"/>. </summary>
        /// <param name="discoveryScopeErrorSummaries">
        /// The list of ErrorSummary.
        /// Serialized Name: ErrorSummariesProperties.discoveryScopeErrorSummaries
        /// </param>
        /// <param name="errors">
        /// The list of errors.
        /// Serialized Name: ErrorSummariesProperties.errors
        /// </param>
        /// <param name="provisioningState">
        /// The resource provisioning state.
        /// Serialized Name: ErrorSummariesProperties.provisioningState
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SpringBootSiteErrorSummariesProperties(IList<SpringBootSiteErrorSummaryModel> discoveryScopeErrorSummaries, IList<SpringBootSiteError> errors, SpringAppDiscoveryProvisioningState? provisioningState, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            DiscoveryScopeErrorSummaries = discoveryScopeErrorSummaries;
            Errors = errors;
            ProvisioningState = provisioningState;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// The list of ErrorSummary.
        /// Serialized Name: ErrorSummariesProperties.discoveryScopeErrorSummaries
        /// </summary>
        public IList<SpringBootSiteErrorSummaryModel> DiscoveryScopeErrorSummaries { get; }
        /// <summary>
        /// The list of errors.
        /// Serialized Name: ErrorSummariesProperties.errors
        /// </summary>
        public IList<SpringBootSiteError> Errors { get; }
        /// <summary>
        /// The resource provisioning state.
        /// Serialized Name: ErrorSummariesProperties.provisioningState
        /// </summary>
        public SpringAppDiscoveryProvisioningState? ProvisioningState { get; set; }
    }
}
