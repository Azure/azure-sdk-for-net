// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.SpringAppDiscovery;

namespace Azure.ResourceManager.SpringAppDiscovery.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableSpringAppDiscoveryArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableSpringAppDiscoveryArmClient"/> class for mocking. </summary>
        protected MockableSpringAppDiscoveryArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableSpringAppDiscoveryArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableSpringAppDiscoveryArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableSpringAppDiscoveryArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="SpringbootsitesModelResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SpringbootsitesModelResource.CreateResourceIdentifier" /> to create a <see cref="SpringbootsitesModelResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SpringbootsitesModelResource"/> object. </returns>
        public virtual SpringbootsitesModelResource GetSpringbootsitesModelResource(ResourceIdentifier id)
        {
            SpringbootsitesModelResource.ValidateResourceId(id);
            return new SpringbootsitesModelResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SpringbootserversModelResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SpringbootserversModelResource.CreateResourceIdentifier" /> to create a <see cref="SpringbootserversModelResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SpringbootserversModelResource"/> object. </returns>
        public virtual SpringbootserversModelResource GetSpringbootserversModelResource(ResourceIdentifier id)
        {
            SpringbootserversModelResource.ValidateResourceId(id);
            return new SpringbootserversModelResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SpringbootappsModelResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SpringbootappsModelResource.CreateResourceIdentifier" /> to create a <see cref="SpringbootappsModelResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SpringbootappsModelResource"/> object. </returns>
        public virtual SpringbootappsModelResource GetSpringbootappsModelResource(ResourceIdentifier id)
        {
            SpringbootappsModelResource.ValidateResourceId(id);
            return new SpringbootappsModelResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SummaryResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SummaryResource.CreateResourceIdentifier" /> to create a <see cref="SummaryResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SummaryResource"/> object. </returns>
        public virtual SummaryResource GetSummaryResource(ResourceIdentifier id)
        {
            SummaryResource.ValidateResourceId(id);
            return new SummaryResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="ErrorSummaryResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ErrorSummaryResource.CreateResourceIdentifier" /> to create an <see cref="ErrorSummaryResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ErrorSummaryResource"/> object. </returns>
        public virtual ErrorSummaryResource GetErrorSummaryResource(ResourceIdentifier id)
        {
            ErrorSummaryResource.ValidateResourceId(id);
            return new ErrorSummaryResource(Client, id);
        }
    }
}
