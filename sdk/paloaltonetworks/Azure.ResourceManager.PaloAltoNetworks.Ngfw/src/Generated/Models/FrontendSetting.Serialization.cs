// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.PaloAltoNetworks.Ngfw.Models
{
    public partial class FrontendSetting : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("name"u8);
            writer.WriteStringValue(Name);
            writer.WritePropertyName("protocol"u8);
            writer.WriteStringValue(Protocol.ToString());
            writer.WritePropertyName("frontendConfiguration"u8);
            writer.WriteObjectValue(FrontendConfiguration);
            writer.WritePropertyName("backendConfiguration"u8);
            writer.WriteObjectValue(BackendConfiguration);
            writer.WriteEndObject();
        }

        internal static FrontendSetting DeserializeFrontendSetting(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string name = default;
            ProtocolType protocol = default;
            EndpointConfiguration frontendConfiguration = default;
            EndpointConfiguration backendConfiguration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protocol"u8))
                {
                    protocol = new ProtocolType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("frontendConfiguration"u8))
                {
                    frontendConfiguration = EndpointConfiguration.DeserializeEndpointConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("backendConfiguration"u8))
                {
                    backendConfiguration = EndpointConfiguration.DeserializeEndpointConfiguration(property.Value);
                    continue;
                }
            }
            return new FrontendSetting(name, protocol, frontendConfiguration, backendConfiguration);
        }
    }
}
