// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.Template
{
    /// <summary> The Analyze service client. </summary>
    public partial class AnalyzeClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "https://vault.azure.net/.default" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of AnalyzeClient for mocking. </summary>
        protected AnalyzeClient()
        {
        }

        /// <summary> Initializes a new instance of AnalyzeClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credential"/> is null. </exception>
        public AnalyzeClient(TokenCredential credential) : this(credential, new Uri(""), new TextAnalyticsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AnalyzeClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credential"/> or <paramref name="endpoint"/> is null. </exception>
        public AnalyzeClient(TokenCredential credential, Uri endpoint, TextAnalyticsClientOptions options)
        {
            Argument.AssertNotNull(credential, nameof(credential));
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new TextAnalyticsClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential, AuthorizationScopes) }, new ResponseClassifier());
            _endpoint = endpoint;
        }

        /// <summary> Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed. </summary>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request payload.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>AnalyzeBatchInput</c>:
        /// <code>{
        ///   analysisInput: {
        ///     documents: [
        ///       {
        ///         id: string, # Required. A unique, non-empty document identifier.
        ///         text: string, # Required. The input text to process.
        ///         language: string, # Optional. This is the 2 letter ISO 639-1 representation of a language. 
        /// 
        /// For example, use &quot;en&quot; for English; &quot;es&quot; for Spanish etc. z,an
        /// If not set, use &quot;en&quot; for English as default.&quot;
        ///       }
        ///     ], # Required. The set of documents to process as part of this batch.
        ///   }, # Required. The set of documents to process as part of this batch.
        ///   displayName: string, # Optional. Optional display name for the analysis job.
        ///   tasks: {
        ///     entityRecognitionTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///           stringIndexType: &quot;TextElement_v8&quot; | &quot;UnicodeCodePoint&quot; | &quot;Utf16CodeUnit&quot;, # Optional. Specifies the method used to interpret string offsets.
        /// 
        /// Defaults to grapheme clusters according to Unicode v8.0.0.
        /// For additional information see https://aka.ms/text-analytics-offsets
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///     entityRecognitionPiiTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///           stringIndexType: &quot;TextElement_v8&quot; | &quot;UnicodeCodePoint&quot; | &quot;Utf16CodeUnit&quot;, # Optional. Specifies the method used to interpret string offsets.
        /// 
        /// Defaults to grapheme clusters according to Unicode v8.0.0.
        /// For additional information see https://aka.ms/text-analytics-offsets
        ///           domain: &quot;phi&quot; | &quot;none&quot;, # Optional. If specified, will set the PII domain to include only a subset of the entity categories.
        ///           piiCategories: [&quot;ABARoutingNumber&quot; | &quot;ARNationalIdentityNumber&quot; | &quot;AUBankAccountNumber&quot; | &quot;AUDriversLicenseNumber&quot; | &quot;AUMedicalAccountNumber&quot; | &quot;AUPassportNumber&quot; | &quot;AUTaxFileNumber&quot; | &quot;AUBusinessNumber&quot; | &quot;AUCompanyNumber&quot; | &quot;ATIdentityCard&quot; | &quot;ATTaxIdentificationNumber&quot; | &quot;ATValueAddedTaxNumber&quot; | &quot;AzureDocumentDBAuthKey&quot; | &quot;AzureIAASDatabaseConnectionAndSQLString&quot; | &quot;AzureIoTConnectionString&quot; | &quot;AzurePublishSettingPassword&quot; | &quot;AzureRedisCacheString&quot; | &quot;AzureSAS&quot; | &quot;AzureServiceBusString&quot; | &quot;AzureStorageAccountKey&quot; | &quot;AzureStorageAccountGeneric&quot; | &quot;BENationalNumber&quot; | &quot;BENationalNumberV2&quot; | &quot;BEValueAddedTaxNumber&quot; | &quot;BRCPFNumber&quot; | &quot;BRLegalEntityNumber&quot; | &quot;BRNationalIDRG&quot; | &quot;BGUniformCivilNumber&quot; | &quot;CABankAccountNumber&quot; | &quot;CADriversLicenseNumber&quot; | &quot;CAHealthServiceNumber&quot; | &quot;CAPassportNumber&quot; | &quot;CAPersonalHealthIdentification&quot; | &quot;CASocialInsuranceNumber&quot; | &quot;CLIdentityCardNumber&quot; | &quot;CNResidentIdentityCardNumber&quot; | &quot;CreditCardNumber&quot; | &quot;HRIdentityCardNumber&quot; | &quot;HRNationalIDNumber&quot; | &quot;HRPersonalIdentificationNumber&quot; | &quot;HRPersonalIdentificationOIBNumberV2&quot; | &quot;CYIdentityCard&quot; | &quot;CYTaxIdentificationNumber&quot; | &quot;CZPersonalIdentityNumber&quot; | &quot;CZPersonalIdentityV2&quot; | &quot;DKPersonalIdentificationNumber&quot; | &quot;DKPersonalIdentificationV2&quot; | &quot;DrugEnforcementAgencyNumber&quot; | &quot;EEPersonalIdentificationCode&quot; | &quot;EUDebitCardNumber&quot; | &quot;EUDriversLicenseNumber&quot; | &quot;EUGPSCoordinates&quot; | &quot;EUNationalIdentificationNumber&quot; | &quot;EUPassportNumber&quot; | &quot;EUSocialSecurityNumber&quot; | &quot;EUTaxIdentificationNumber&quot; | &quot;FIEuropeanHealthNumber&quot; | &quot;FINationalID&quot; | &quot;FINationalIDV2&quot; | &quot;FIPassportNumber&quot; | &quot;FRDriversLicenseNumber&quot; | &quot;FRHealthInsuranceNumber&quot; | &quot;FRNationalID&quot; | &quot;FRPassportNumber&quot; | &quot;FRSocialSecurityNumber&quot; | &quot;FRTaxIdentificationNumber&quot; | &quot;FRValueAddedTaxNumber&quot; | &quot;DEDriversLicenseNumber&quot; | &quot;DEPassportNumber&quot; | &quot;DEIdentityCardNumber&quot; | &quot;DETaxIdentificationNumber&quot; | &quot;DEValueAddedNumber&quot; | &quot;GRNationalIDCard&quot; | &quot;GRNationalIDV2&quot; | &quot;GRTaxIdentificationNumber&quot; | &quot;HKIdentityCardNumber&quot; | &quot;HUValueAddedNumber&quot; | &quot;HUPersonalIdentificationNumber&quot; | &quot;HUTaxIdentificationNumber&quot; | &quot;INPermanentAccount&quot; | &quot;INUniqueIdentificationNumber&quot; | &quot;IDIdentityCardNumber&quot; | &quot;InternationalBankingAccountNumber&quot; | &quot;IEPersonalPublicServiceNumber&quot; | &quot;IEPersonalPublicServiceNumberV2&quot; | &quot;ILBankAccountNumber&quot; | &quot;ILNationalID&quot; | &quot;ITDriversLicenseNumber&quot; | &quot;ITFiscalCode&quot; | &quot;ITValueAddedTaxNumber&quot; | &quot;JPBankAccountNumber&quot; | &quot;JPDriversLicenseNumber&quot; | &quot;JPPassportNumber&quot; | &quot;JPResidentRegistrationNumber&quot; | &quot;JPSocialInsuranceNumber&quot; | &quot;JPMyNumberCorporate&quot; | &quot;JPMyNumberPersonal&quot; | &quot;JPResidenceCardNumber&quot; | &quot;LVPersonalCode&quot; | &quot;LTPersonalCode&quot; | &quot;LUNationalIdentificationNumberNatural&quot; | &quot;LUNationalIdentificationNumberNonNatural&quot; | &quot;MYIdentityCardNumber&quot; | &quot;MTIdentityCardNumber&quot; | &quot;MTTaxIDNumber&quot; | &quot;NLCitizensServiceNumber&quot; | &quot;NLCitizensServiceNumberV2&quot; | &quot;NLTaxIdentificationNumber&quot; | &quot;NLValueAddedTaxNumber&quot; | &quot;NZBankAccountNumber&quot; | &quot;NZDriversLicenseNumber&quot; | &quot;NZInlandRevenueNumber&quot; | &quot;NZMinistryOfHealthNumber&quot; | &quot;NZSocialWelfareNumber&quot; | &quot;NOIdentityNumber&quot; | &quot;PHUnifiedMultiPurposeIDNumber&quot; | &quot;PLIdentityCard&quot; | &quot;PLNationalID&quot; | &quot;PLNationalIDV2&quot; | &quot;PLPassportNumber&quot; | &quot;PLTaxIdentificationNumber&quot; | &quot;PLREGONNumber&quot; | &quot;PTCitizenCardNumber&quot; | &quot;PTCitizenCardNumberV2&quot; | &quot;PTTaxIdentificationNumber&quot; | &quot;ROPersonalNumericalCode&quot; | &quot;RUPassportNumberDomestic&quot; | &quot;RUPassportNumberInternational&quot; | &quot;SANationalID&quot; | &quot;SGNationalRegistrationIdentityCardNumber&quot; | &quot;SKPersonalNumber&quot; | &quot;SITaxIdentificationNumber&quot; | &quot;SIUniqueMasterCitizenNumber&quot; | &quot;ZAIdentificationNumber&quot; | &quot;KRResidentRegistrationNumber&quot; | &quot;ESDNI&quot; | &quot;ESSocialSecurityNumber&quot; | &quot;ESTaxIdentificationNumber&quot; | &quot;SQLServerConnectionString&quot; | &quot;SENationalID&quot; | &quot;SENationalIDV2&quot; | &quot;SEPassportNumber&quot; | &quot;SETaxIdentificationNumber&quot; | &quot;SWIFTCode&quot; | &quot;CHSocialSecurityNumber&quot; | &quot;TWNationalID&quot; | &quot;TWPassportNumber&quot; | &quot;TWResidentCertificate&quot; | &quot;THPopulationIdentificationCode&quot; | &quot;TRNationalIdentificationNumber&quot; | &quot;UKDriversLicenseNumber&quot; | &quot;UKElectoralRollNumber&quot; | &quot;UKNationalHealthNumber&quot; | &quot;UKNationalInsuranceNumber&quot; | &quot;UKUniqueTaxpayerNumber&quot; | &quot;USUKPassportNumber&quot; | &quot;USBankAccountNumber&quot; | &quot;USDriversLicenseNumber&quot; | &quot;USIndividualTaxpayerIdentification&quot; | &quot;USSocialSecurityNumber&quot; | &quot;UAPassportNumberDomestic&quot; | &quot;UAPassportNumberInternational&quot; | &quot;Organization&quot; | &quot;Email&quot; | &quot;URL&quot; | &quot;Age&quot; | &quot;PhoneNumber&quot; | &quot;IPAddress&quot; | &quot;Date&quot; | &quot;Person&quot; | &quot;Address&quot; | &quot;All&quot; | &quot;Default&quot;], # Optional. Describes the PII categories to return.
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///     keyPhraseExtractionTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///     entityLinkingTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///           stringIndexType: &quot;TextElement_v8&quot; | &quot;UnicodeCodePoint&quot; | &quot;Utf16CodeUnit&quot;, # Optional. Specifies the method used to interpret string offsets.
        /// 
        /// Defaults to grapheme clusters according to Unicode v8.0.0.
        /// For additional information see https://aka.ms/text-analytics-offsets
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///     sentimentAnalysisTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///           stringIndexType: &quot;TextElement_v8&quot; | &quot;UnicodeCodePoint&quot; | &quot;Utf16CodeUnit&quot;, # Optional. Specifies the method used to interpret string offsets.
        /// 
        /// Defaults to grapheme clusters according to Unicode v8.0.0.
        /// For additional information see https://aka.ms/text-analytics-offsets
        ///           opinionMining: boolean, # Optional. If set to true, response will contain not only sentiment prediction but also opinion 
        /// mining (aspect-based sentiment analysis) results.
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///   }, # Required. The set of tasks to execute on the input documents.
        /// Cannot specify the same task more than once.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> SubmitAsync(RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("AnalyzeClient.Submit");
            scope.Start();
            try
            {
                using HttpMessage message = CreateSubmitRequest(content, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed. </summary>
        /// <param name="content"> The content to send as the body of the request. </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        /// <remarks>
        /// Below is the JSON schema for the request payload.
        /// 
        /// Request Body:
        /// 
        /// Schema for <c>AnalyzeBatchInput</c>:
        /// <code>{
        ///   analysisInput: {
        ///     documents: [
        ///       {
        ///         id: string, # Required. A unique, non-empty document identifier.
        ///         text: string, # Required. The input text to process.
        ///         language: string, # Optional. This is the 2 letter ISO 639-1 representation of a language. 
        /// 
        /// For example, use &quot;en&quot; for English; &quot;es&quot; for Spanish etc. z,an
        /// If not set, use &quot;en&quot; for English as default.&quot;
        ///       }
        ///     ], # Required. The set of documents to process as part of this batch.
        ///   }, # Required. The set of documents to process as part of this batch.
        ///   displayName: string, # Optional. Optional display name for the analysis job.
        ///   tasks: {
        ///     entityRecognitionTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///           stringIndexType: &quot;TextElement_v8&quot; | &quot;UnicodeCodePoint&quot; | &quot;Utf16CodeUnit&quot;, # Optional. Specifies the method used to interpret string offsets.
        /// 
        /// Defaults to grapheme clusters according to Unicode v8.0.0.
        /// For additional information see https://aka.ms/text-analytics-offsets
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///     entityRecognitionPiiTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///           stringIndexType: &quot;TextElement_v8&quot; | &quot;UnicodeCodePoint&quot; | &quot;Utf16CodeUnit&quot;, # Optional. Specifies the method used to interpret string offsets.
        /// 
        /// Defaults to grapheme clusters according to Unicode v8.0.0.
        /// For additional information see https://aka.ms/text-analytics-offsets
        ///           domain: &quot;phi&quot; | &quot;none&quot;, # Optional. If specified, will set the PII domain to include only a subset of the entity categories.
        ///           piiCategories: [&quot;ABARoutingNumber&quot; | &quot;ARNationalIdentityNumber&quot; | &quot;AUBankAccountNumber&quot; | &quot;AUDriversLicenseNumber&quot; | &quot;AUMedicalAccountNumber&quot; | &quot;AUPassportNumber&quot; | &quot;AUTaxFileNumber&quot; | &quot;AUBusinessNumber&quot; | &quot;AUCompanyNumber&quot; | &quot;ATIdentityCard&quot; | &quot;ATTaxIdentificationNumber&quot; | &quot;ATValueAddedTaxNumber&quot; | &quot;AzureDocumentDBAuthKey&quot; | &quot;AzureIAASDatabaseConnectionAndSQLString&quot; | &quot;AzureIoTConnectionString&quot; | &quot;AzurePublishSettingPassword&quot; | &quot;AzureRedisCacheString&quot; | &quot;AzureSAS&quot; | &quot;AzureServiceBusString&quot; | &quot;AzureStorageAccountKey&quot; | &quot;AzureStorageAccountGeneric&quot; | &quot;BENationalNumber&quot; | &quot;BENationalNumberV2&quot; | &quot;BEValueAddedTaxNumber&quot; | &quot;BRCPFNumber&quot; | &quot;BRLegalEntityNumber&quot; | &quot;BRNationalIDRG&quot; | &quot;BGUniformCivilNumber&quot; | &quot;CABankAccountNumber&quot; | &quot;CADriversLicenseNumber&quot; | &quot;CAHealthServiceNumber&quot; | &quot;CAPassportNumber&quot; | &quot;CAPersonalHealthIdentification&quot; | &quot;CASocialInsuranceNumber&quot; | &quot;CLIdentityCardNumber&quot; | &quot;CNResidentIdentityCardNumber&quot; | &quot;CreditCardNumber&quot; | &quot;HRIdentityCardNumber&quot; | &quot;HRNationalIDNumber&quot; | &quot;HRPersonalIdentificationNumber&quot; | &quot;HRPersonalIdentificationOIBNumberV2&quot; | &quot;CYIdentityCard&quot; | &quot;CYTaxIdentificationNumber&quot; | &quot;CZPersonalIdentityNumber&quot; | &quot;CZPersonalIdentityV2&quot; | &quot;DKPersonalIdentificationNumber&quot; | &quot;DKPersonalIdentificationV2&quot; | &quot;DrugEnforcementAgencyNumber&quot; | &quot;EEPersonalIdentificationCode&quot; | &quot;EUDebitCardNumber&quot; | &quot;EUDriversLicenseNumber&quot; | &quot;EUGPSCoordinates&quot; | &quot;EUNationalIdentificationNumber&quot; | &quot;EUPassportNumber&quot; | &quot;EUSocialSecurityNumber&quot; | &quot;EUTaxIdentificationNumber&quot; | &quot;FIEuropeanHealthNumber&quot; | &quot;FINationalID&quot; | &quot;FINationalIDV2&quot; | &quot;FIPassportNumber&quot; | &quot;FRDriversLicenseNumber&quot; | &quot;FRHealthInsuranceNumber&quot; | &quot;FRNationalID&quot; | &quot;FRPassportNumber&quot; | &quot;FRSocialSecurityNumber&quot; | &quot;FRTaxIdentificationNumber&quot; | &quot;FRValueAddedTaxNumber&quot; | &quot;DEDriversLicenseNumber&quot; | &quot;DEPassportNumber&quot; | &quot;DEIdentityCardNumber&quot; | &quot;DETaxIdentificationNumber&quot; | &quot;DEValueAddedNumber&quot; | &quot;GRNationalIDCard&quot; | &quot;GRNationalIDV2&quot; | &quot;GRTaxIdentificationNumber&quot; | &quot;HKIdentityCardNumber&quot; | &quot;HUValueAddedNumber&quot; | &quot;HUPersonalIdentificationNumber&quot; | &quot;HUTaxIdentificationNumber&quot; | &quot;INPermanentAccount&quot; | &quot;INUniqueIdentificationNumber&quot; | &quot;IDIdentityCardNumber&quot; | &quot;InternationalBankingAccountNumber&quot; | &quot;IEPersonalPublicServiceNumber&quot; | &quot;IEPersonalPublicServiceNumberV2&quot; | &quot;ILBankAccountNumber&quot; | &quot;ILNationalID&quot; | &quot;ITDriversLicenseNumber&quot; | &quot;ITFiscalCode&quot; | &quot;ITValueAddedTaxNumber&quot; | &quot;JPBankAccountNumber&quot; | &quot;JPDriversLicenseNumber&quot; | &quot;JPPassportNumber&quot; | &quot;JPResidentRegistrationNumber&quot; | &quot;JPSocialInsuranceNumber&quot; | &quot;JPMyNumberCorporate&quot; | &quot;JPMyNumberPersonal&quot; | &quot;JPResidenceCardNumber&quot; | &quot;LVPersonalCode&quot; | &quot;LTPersonalCode&quot; | &quot;LUNationalIdentificationNumberNatural&quot; | &quot;LUNationalIdentificationNumberNonNatural&quot; | &quot;MYIdentityCardNumber&quot; | &quot;MTIdentityCardNumber&quot; | &quot;MTTaxIDNumber&quot; | &quot;NLCitizensServiceNumber&quot; | &quot;NLCitizensServiceNumberV2&quot; | &quot;NLTaxIdentificationNumber&quot; | &quot;NLValueAddedTaxNumber&quot; | &quot;NZBankAccountNumber&quot; | &quot;NZDriversLicenseNumber&quot; | &quot;NZInlandRevenueNumber&quot; | &quot;NZMinistryOfHealthNumber&quot; | &quot;NZSocialWelfareNumber&quot; | &quot;NOIdentityNumber&quot; | &quot;PHUnifiedMultiPurposeIDNumber&quot; | &quot;PLIdentityCard&quot; | &quot;PLNationalID&quot; | &quot;PLNationalIDV2&quot; | &quot;PLPassportNumber&quot; | &quot;PLTaxIdentificationNumber&quot; | &quot;PLREGONNumber&quot; | &quot;PTCitizenCardNumber&quot; | &quot;PTCitizenCardNumberV2&quot; | &quot;PTTaxIdentificationNumber&quot; | &quot;ROPersonalNumericalCode&quot; | &quot;RUPassportNumberDomestic&quot; | &quot;RUPassportNumberInternational&quot; | &quot;SANationalID&quot; | &quot;SGNationalRegistrationIdentityCardNumber&quot; | &quot;SKPersonalNumber&quot; | &quot;SITaxIdentificationNumber&quot; | &quot;SIUniqueMasterCitizenNumber&quot; | &quot;ZAIdentificationNumber&quot; | &quot;KRResidentRegistrationNumber&quot; | &quot;ESDNI&quot; | &quot;ESSocialSecurityNumber&quot; | &quot;ESTaxIdentificationNumber&quot; | &quot;SQLServerConnectionString&quot; | &quot;SENationalID&quot; | &quot;SENationalIDV2&quot; | &quot;SEPassportNumber&quot; | &quot;SETaxIdentificationNumber&quot; | &quot;SWIFTCode&quot; | &quot;CHSocialSecurityNumber&quot; | &quot;TWNationalID&quot; | &quot;TWPassportNumber&quot; | &quot;TWResidentCertificate&quot; | &quot;THPopulationIdentificationCode&quot; | &quot;TRNationalIdentificationNumber&quot; | &quot;UKDriversLicenseNumber&quot; | &quot;UKElectoralRollNumber&quot; | &quot;UKNationalHealthNumber&quot; | &quot;UKNationalInsuranceNumber&quot; | &quot;UKUniqueTaxpayerNumber&quot; | &quot;USUKPassportNumber&quot; | &quot;USBankAccountNumber&quot; | &quot;USDriversLicenseNumber&quot; | &quot;USIndividualTaxpayerIdentification&quot; | &quot;USSocialSecurityNumber&quot; | &quot;UAPassportNumberDomestic&quot; | &quot;UAPassportNumberInternational&quot; | &quot;Organization&quot; | &quot;Email&quot; | &quot;URL&quot; | &quot;Age&quot; | &quot;PhoneNumber&quot; | &quot;IPAddress&quot; | &quot;Date&quot; | &quot;Person&quot; | &quot;Address&quot; | &quot;All&quot; | &quot;Default&quot;], # Optional. Describes the PII categories to return.
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///     keyPhraseExtractionTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///     entityLinkingTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///           stringIndexType: &quot;TextElement_v8&quot; | &quot;UnicodeCodePoint&quot; | &quot;Utf16CodeUnit&quot;, # Optional. Specifies the method used to interpret string offsets.
        /// 
        /// Defaults to grapheme clusters according to Unicode v8.0.0.
        /// For additional information see https://aka.ms/text-analytics-offsets
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///     sentimentAnalysisTasks: [
        ///       {
        ///         taskName: string, # Optional.
        ///         parameters: {
        ///           model-version: string, # Optional. This value indicates which model will be used for scoring.
        /// If a model-version is not specified, the API should default to the latest, non-preview version.
        ///           loggingOptOut: boolean, # Optional. If set to true, you opt-out of having your text input logged for troubleshooting.
        /// 
        /// By default, Text Analytics logs your input text for 48 hours, solely to allow for
        /// troubleshooting issues in providing you with the Text Analytics natural language
        /// processing functions. Setting this parameter to true disables input logging and
        /// may limit our ability to remediate issues that occur. Please see Cognitive Services
        /// Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details,
        /// and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.
        ///           stringIndexType: &quot;TextElement_v8&quot; | &quot;UnicodeCodePoint&quot; | &quot;Utf16CodeUnit&quot;, # Optional. Specifies the method used to interpret string offsets.
        /// 
        /// Defaults to grapheme clusters according to Unicode v8.0.0.
        /// For additional information see https://aka.ms/text-analytics-offsets
        ///           opinionMining: boolean, # Optional. If set to true, response will contain not only sentiment prediction but also opinion 
        /// mining (aspect-based sentiment analysis) results.
        ///         }, # Required.
        ///       }
        ///     ], # Optional.
        ///   }, # Required. The set of tasks to execute on the input documents.
        /// Cannot specify the same task more than once.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response Submit(RequestContent content, RequestContext context = null)
        {
            Argument.AssertNotNull(content, nameof(content));

            using var scope = ClientDiagnostics.CreateScope("AnalyzeClient.Submit");
            scope.Start();
            try
            {
                using HttpMessage message = CreateSubmitRequest(content, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Get the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are completed, the job will transition to the completed state and results will be available for each task. </summary>
        /// <param name="jobId"> Job ID. </param>
        /// <param name="showStats"> If set to true, response will contain request and document level statistics. </param>
        /// <param name="top">
        /// Set the maximum number of results per task.
        /// When both $top and $skip are specified, $skip is applied first.
        /// </param>
        /// <param name="skip">
        /// Set the number of elements to offset in the response.
        /// When both $top and $skip are specified, $skip is applied first.
        /// </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="jobId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="jobId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>AnalyzeJobState</c>:
        /// <code>{
        ///   createdDateTime: string (ISO 8601 Format), # Required.
        ///   expirationDateTime: string (ISO 8601 Format), # Required.
        ///   lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///   jobId: string, # Required.
        ///   status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///   errors: [
        ///     {
        ///       message: string, # Required. Error message.
        ///       code: &quot;InvalidRequest&quot; | &quot;InvalidArgument&quot; | &quot;InternalServerError&quot; | &quot;ServiceUnavailable&quot; | &quot;NotFound&quot;, # Required. Error code.
        ///       details: Dictionary&lt;string, string&gt;, # Optional. Error details.
        ///       target: string, # Optional. Error target.
        ///       innererror: {
        ///         message: string, # Required. Error message.
        ///         code: &quot;InvalidParameterValue&quot; | &quot;InvalidRequestBodyFormat&quot; | &quot;EmptyRequest&quot; | &quot;MissingInputRecords&quot; | &quot;InvalidDocument&quot; | &quot;ModelVersionIncorrect&quot; | &quot;InvalidDocumentBatch&quot; | &quot;UnsupportedLanguageCode&quot; | &quot;InvalidCountryHint&quot;, # Required. Error code.
        ///         details: Dictionary&lt;string, string&gt;, # Optional. Error details.
        ///         target: string, # Optional. Error target.
        ///         innererror: InnerError, # Optional. Inner error contains more specific information.
        ///       }, # Optional. Inner error contains more specific information.
        ///     }
        ///   ], # Optional.
        ///   @nextLink: string, # Required.
        ///   displayName: string, # Optional.
        ///   completed: number, # Required.
        ///   statistics: {
        ///     documentsCount: number, # Required. Number of documents submitted in the request.
        ///     validDocumentsCount: number, # Required. Number of valid documents. This excludes empty, over-size limit or non-supported languages documents.
        ///     erroneousDocumentsCount: number, # Required. Number of invalid documents. This includes empty, over-size limit or non-supported languages documents.
        ///     transactionsCount: number, # Required. Number of transactions for the request.
        ///   }, # Optional.
        ///   tasks: {
        ///     entityLinkingTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: {
        ///           documents: [
        ///             {
        ///               id: string, # Required. Unique, non-empty document identifier.
        ///               warnings: [
        ///                 {
        ///                   code: &quot;LongWordsInDocument&quot; | &quot;DocumentTruncated&quot;, # Required. Warning code.
        ///                   message: string, # Required. Warning message.
        ///                   targetRef: string, # Optional. A JSON pointer reference indicating the target object.
        ///                 }
        ///               ], # Required. Warnings encountered while processing document.
        ///               statistics: [
        ///                 {
        ///                   charactersCount: number, # Required. Number of text elements recognized in the document.
        ///                   transactionsCount: number, # Required. Number of transactions for the document.
        ///                 }
        ///               ], # Required. If showStats=true was specified in the request this field will contain information about the document payload.
        ///               entities: [LinkedEntity], # Required. Recognized well known entities in the document.
        ///             }
        ///           ], # Required. Response by document.
        ///           errors: [
        ///             {
        ///               id: string, # Required. Document id.
        ///               error: Error, # Required. Document error.
        ///             }
        ///           ], # Required. Errors by document id.
        ///           statistics: RequestStatistics, # Optional. If showStats=true was specified in the request this field will contain information about the request payload.
        ///           modelVersion: string, # Required. This field indicates which model is used for scoring.
        ///         }, # Required.
        ///       }
        ///     ], # Required.
        ///     entityRecognitionPiiTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: AnyObject, # Required. Any object
        ///       }
        ///     ], # Required.
        ///     entityRecognitionTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: {
        ///           documents: [
        ///             {
        ///               id: string, # Required. Unique, non-empty document identifier.
        ///               warnings: [Warning], # Required. Warnings encountered while processing document.
        ///               statistics: [DocumentStatistics], # Required. If showStats=true was specified in the request this field will contain information about the document payload.
        ///               entities: [Entity], # Required. Recognized entities in the document.
        ///             }
        ///           ], # Required. Response by document.
        ///           errors: [DocumentError], # Required. Errors by document id.
        ///           statistics: RequestStatistics, # Optional. If showStats=true was specified in the request this field will contain information about the request payload.
        ///           modelVersion: string, # Required. This field indicates which model is used for scoring.
        ///         }, # Required.
        ///       }
        ///     ], # Required.
        ///     keyPhraseExtractionTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: {
        ///           documents: [
        ///             {
        ///               id: string, # Required. Unique, non-empty document identifier.
        ///               warnings: [Warning], # Required. Warnings encountered while processing document.
        ///               statistics: [DocumentStatistics], # Required. If showStats=true was specified in the request this field will contain information about the document payload.
        ///               keyPhrases: [string], # Required. A list of representative words or phrases.
        /// 
        /// The number of key phrases returned is proportional to the number of words in the input document.
        ///             }
        ///           ], # Required. Response by document.
        ///           errors: [DocumentError], # Required. Errors by document id.
        ///           statistics: RequestStatistics, # Optional. If showStats=true was specified in the request this field will contain information about the request payload.
        ///           modelVersion: string, # Required. This field indicates which model is used for scoring.
        ///         }, # Required.
        ///       }
        ///     ], # Required.
        ///     sentimentAnalysisTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: {
        ///           documents: [
        ///             {
        ///               id: string, # Required. Unique, non-empty document identifier.
        ///               warnings: [Warning], # Required. Warnings encountered while processing document.
        ///               statistics: [DocumentStatistics], # Required. If showStats=true was specified in the request this field will contain information about the document payload.
        ///               sentiment: &quot;positive&quot; | &quot;neutral&quot; | &quot;negative&quot; | &quot;mixed&quot;, # Required. Predicted sentiment for document.
        ///               sentences: [
        ///                 {
        ///                   text: string, # Required. The sentence text.
        ///                   sentiment: &quot;positive&quot; | &quot;neutral&quot; | &quot;negative&quot;, # Required. The predicted sentiment for the sentence.
        ///                   confidenceScores: {
        ///                     positive: number, # Required.
        ///                     negative: number, # Required.
        ///                     neutral: number, # Required.
        ///                   }, # Required. The sentiment confidence score between 0 and 1 for the sentence for all classes.
        ///                   offset: number, # Required. The sentence offset from the start of the document.
        ///                   length: number, # Required. The length of the sentence.
        ///                   targets: [
        ///                     {
        ///                       sentiment: &quot;positive&quot; | &quot;neutral&quot; | &quot;mixed&quot;, # Required. Targeted sentiment in the sentence.
        ///                       confidenceScores: {
        ///                         positive: number, # Required.
        ///                         negative: number, # Required.
        ///                       }, # Required. Target sentiment confidence scores for the target in the sentence.
        ///                       offset: number, # Required. The target offset from the start of the sentence.
        ///                       length: number, # Required. The length of the target.
        ///                       text: string, # Required. The target text detected.
        ///                       relations: [
        ///                         {
        ///                           relationType: &quot;assessment&quot; | &quot;target&quot;, # Required. The type related to the target.
        ///                           ref: string, # Required. The JSON pointer indicating the linked object.
        ///                         }
        ///                       ], # Required. The array of either assessment or target objects which is related to the target.
        ///                     }
        ///                   ], # Optional. The array of sentence targets for the sentence.
        ///                 }
        ///               ], # Required. Sentence level sentiment analysis.
        ///               confidenceScores: SentimentConfidenceScorePerLabel, # Required. Document level sentiment confidence scores between 0 and 1 for each sentiment class.
        ///             }
        ///           ], # Required. Response by document.
        ///           errors: [DocumentError], # Required. Errors by document id.
        ///           statistics: RequestStatistics, # Optional. If showStats=true was specified in the request this field will contain information about the request payload.
        ///           modelVersion: string, # Required. This field indicates which model is used for scoring.
        ///         }, # Required.
        ///       }
        ///     ], # Required.
        ///   }, # Required.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual async Task<Response> GetStatusAsync(string jobId, bool? showStats = null, int? top = null, int? skip = null, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(jobId, nameof(jobId));

            using var scope = ClientDiagnostics.CreateScope("AnalyzeClient.GetStatus");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetStatusRequest(jobId, showStats, top, skip, context);
                return await _pipeline.ProcessMessageAsync(message, context).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> Get the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are completed, the job will transition to the completed state and results will be available for each task. </summary>
        /// <param name="jobId"> Job ID. </param>
        /// <param name="showStats"> If set to true, response will contain request and document level statistics. </param>
        /// <param name="top">
        /// Set the maximum number of results per task.
        /// When both $top and $skip are specified, $skip is applied first.
        /// </param>
        /// <param name="skip">
        /// Set the number of elements to offset in the response.
        /// When both $top and $skip are specified, $skip is applied first.
        /// </param>
        /// <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="jobId"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="jobId"/> is an empty string, and was expected to be non-empty. </exception>
        /// <remarks>
        /// Below is the JSON schema for the response payload.
        /// 
        /// Response Body:
        /// 
        /// Schema for <c>AnalyzeJobState</c>:
        /// <code>{
        ///   createdDateTime: string (ISO 8601 Format), # Required.
        ///   expirationDateTime: string (ISO 8601 Format), # Required.
        ///   lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///   jobId: string, # Required.
        ///   status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///   errors: [
        ///     {
        ///       message: string, # Required. Error message.
        ///       code: &quot;InvalidRequest&quot; | &quot;InvalidArgument&quot; | &quot;InternalServerError&quot; | &quot;ServiceUnavailable&quot; | &quot;NotFound&quot;, # Required. Error code.
        ///       details: Dictionary&lt;string, string&gt;, # Optional. Error details.
        ///       target: string, # Optional. Error target.
        ///       innererror: {
        ///         message: string, # Required. Error message.
        ///         code: &quot;InvalidParameterValue&quot; | &quot;InvalidRequestBodyFormat&quot; | &quot;EmptyRequest&quot; | &quot;MissingInputRecords&quot; | &quot;InvalidDocument&quot; | &quot;ModelVersionIncorrect&quot; | &quot;InvalidDocumentBatch&quot; | &quot;UnsupportedLanguageCode&quot; | &quot;InvalidCountryHint&quot;, # Required. Error code.
        ///         details: Dictionary&lt;string, string&gt;, # Optional. Error details.
        ///         target: string, # Optional. Error target.
        ///         innererror: InnerError, # Optional. Inner error contains more specific information.
        ///       }, # Optional. Inner error contains more specific information.
        ///     }
        ///   ], # Optional.
        ///   @nextLink: string, # Required.
        ///   displayName: string, # Optional.
        ///   completed: number, # Required.
        ///   statistics: {
        ///     documentsCount: number, # Required. Number of documents submitted in the request.
        ///     validDocumentsCount: number, # Required. Number of valid documents. This excludes empty, over-size limit or non-supported languages documents.
        ///     erroneousDocumentsCount: number, # Required. Number of invalid documents. This includes empty, over-size limit or non-supported languages documents.
        ///     transactionsCount: number, # Required. Number of transactions for the request.
        ///   }, # Optional.
        ///   tasks: {
        ///     entityLinkingTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: {
        ///           documents: [
        ///             {
        ///               id: string, # Required. Unique, non-empty document identifier.
        ///               warnings: [
        ///                 {
        ///                   code: &quot;LongWordsInDocument&quot; | &quot;DocumentTruncated&quot;, # Required. Warning code.
        ///                   message: string, # Required. Warning message.
        ///                   targetRef: string, # Optional. A JSON pointer reference indicating the target object.
        ///                 }
        ///               ], # Required. Warnings encountered while processing document.
        ///               statistics: [
        ///                 {
        ///                   charactersCount: number, # Required. Number of text elements recognized in the document.
        ///                   transactionsCount: number, # Required. Number of transactions for the document.
        ///                 }
        ///               ], # Required. If showStats=true was specified in the request this field will contain information about the document payload.
        ///               entities: [LinkedEntity], # Required. Recognized well known entities in the document.
        ///             }
        ///           ], # Required. Response by document.
        ///           errors: [
        ///             {
        ///               id: string, # Required. Document id.
        ///               error: Error, # Required. Document error.
        ///             }
        ///           ], # Required. Errors by document id.
        ///           statistics: RequestStatistics, # Optional. If showStats=true was specified in the request this field will contain information about the request payload.
        ///           modelVersion: string, # Required. This field indicates which model is used for scoring.
        ///         }, # Required.
        ///       }
        ///     ], # Required.
        ///     entityRecognitionPiiTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: AnyObject, # Required. Any object
        ///       }
        ///     ], # Required.
        ///     entityRecognitionTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: {
        ///           documents: [
        ///             {
        ///               id: string, # Required. Unique, non-empty document identifier.
        ///               warnings: [Warning], # Required. Warnings encountered while processing document.
        ///               statistics: [DocumentStatistics], # Required. If showStats=true was specified in the request this field will contain information about the document payload.
        ///               entities: [Entity], # Required. Recognized entities in the document.
        ///             }
        ///           ], # Required. Response by document.
        ///           errors: [DocumentError], # Required. Errors by document id.
        ///           statistics: RequestStatistics, # Optional. If showStats=true was specified in the request this field will contain information about the request payload.
        ///           modelVersion: string, # Required. This field indicates which model is used for scoring.
        ///         }, # Required.
        ///       }
        ///     ], # Required.
        ///     keyPhraseExtractionTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: {
        ///           documents: [
        ///             {
        ///               id: string, # Required. Unique, non-empty document identifier.
        ///               warnings: [Warning], # Required. Warnings encountered while processing document.
        ///               statistics: [DocumentStatistics], # Required. If showStats=true was specified in the request this field will contain information about the document payload.
        ///               keyPhrases: [string], # Required. A list of representative words or phrases.
        /// 
        /// The number of key phrases returned is proportional to the number of words in the input document.
        ///             }
        ///           ], # Required. Response by document.
        ///           errors: [DocumentError], # Required. Errors by document id.
        ///           statistics: RequestStatistics, # Optional. If showStats=true was specified in the request this field will contain information about the request payload.
        ///           modelVersion: string, # Required. This field indicates which model is used for scoring.
        ///         }, # Required.
        ///       }
        ///     ], # Required.
        ///     sentimentAnalysisTasks: [
        ///       {
        ///         lastUpdateDateTime: string (ISO 8601 Format), # Required.
        ///         taskName: string, # Required.
        ///         status: &quot;notStarted&quot; | &quot;running&quot; | &quot;succeeded&quot; | &quot;failed&quot; | &quot;cancelled&quot; | &quot;cancelling&quot; | &quot;rejected&quot;, # Required.
        ///         results: {
        ///           documents: [
        ///             {
        ///               id: string, # Required. Unique, non-empty document identifier.
        ///               warnings: [Warning], # Required. Warnings encountered while processing document.
        ///               statistics: [DocumentStatistics], # Required. If showStats=true was specified in the request this field will contain information about the document payload.
        ///               sentiment: &quot;positive&quot; | &quot;neutral&quot; | &quot;negative&quot; | &quot;mixed&quot;, # Required. Predicted sentiment for document.
        ///               sentences: [
        ///                 {
        ///                   text: string, # Required. The sentence text.
        ///                   sentiment: &quot;positive&quot; | &quot;neutral&quot; | &quot;negative&quot;, # Required. The predicted sentiment for the sentence.
        ///                   confidenceScores: {
        ///                     positive: number, # Required.
        ///                     negative: number, # Required.
        ///                     neutral: number, # Required.
        ///                   }, # Required. The sentiment confidence score between 0 and 1 for the sentence for all classes.
        ///                   offset: number, # Required. The sentence offset from the start of the document.
        ///                   length: number, # Required. The length of the sentence.
        ///                   targets: [
        ///                     {
        ///                       sentiment: &quot;positive&quot; | &quot;neutral&quot; | &quot;mixed&quot;, # Required. Targeted sentiment in the sentence.
        ///                       confidenceScores: {
        ///                         positive: number, # Required.
        ///                         negative: number, # Required.
        ///                       }, # Required. Target sentiment confidence scores for the target in the sentence.
        ///                       offset: number, # Required. The target offset from the start of the sentence.
        ///                       length: number, # Required. The length of the target.
        ///                       text: string, # Required. The target text detected.
        ///                       relations: [
        ///                         {
        ///                           relationType: &quot;assessment&quot; | &quot;target&quot;, # Required. The type related to the target.
        ///                           ref: string, # Required. The JSON pointer indicating the linked object.
        ///                         }
        ///                       ], # Required. The array of either assessment or target objects which is related to the target.
        ///                     }
        ///                   ], # Optional. The array of sentence targets for the sentence.
        ///                 }
        ///               ], # Required. Sentence level sentiment analysis.
        ///               confidenceScores: SentimentConfidenceScorePerLabel, # Required. Document level sentiment confidence scores between 0 and 1 for each sentiment class.
        ///             }
        ///           ], # Required. Response by document.
        ///           errors: [DocumentError], # Required. Errors by document id.
        ///           statistics: RequestStatistics, # Optional. If showStats=true was specified in the request this field will contain information about the request payload.
        ///           modelVersion: string, # Required. This field indicates which model is used for scoring.
        ///         }, # Required.
        ///       }
        ///     ], # Required.
        ///   }, # Required.
        /// }
        /// </code>
        /// 
        /// </remarks>
        public virtual Response GetStatus(string jobId, bool? showStats = null, int? top = null, int? skip = null, RequestContext context = null)
        {
            Argument.AssertNotNullOrEmpty(jobId, nameof(jobId));

            using var scope = ClientDiagnostics.CreateScope("AnalyzeClient.GetStatus");
            scope.Start();
            try
            {
                using HttpMessage message = CreateGetStatusRequest(jobId, showStats, top, skip, context);
                return _pipeline.ProcessMessage(message, context);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        internal HttpMessage CreateSubmitRequest(RequestContent content, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier202);
            var request = message.Request;
            request.Method = RequestMethod.Post;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/analyze", false);
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Type", "application/json");
            request.Content = content;
            return message;
        }

        internal HttpMessage CreateGetStatusRequest(string jobId, bool? showStats, int? top, int? skip, RequestContext context)
        {
            var message = _pipeline.CreateMessage(context, ResponseClassifier200);
            var request = message.Request;
            request.Method = RequestMethod.Get;
            var uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/analyze/jobs/", false);
            uri.AppendPath(jobId, true);
            if (showStats != null)
            {
                uri.AppendQuery("showStats", showStats.Value, true);
            }
            if (top != null)
            {
                uri.AppendQuery("$top", top.Value, true);
            }
            if (skip != null)
            {
                uri.AppendQuery("$skip", skip.Value, true);
            }
            request.Uri = uri;
            request.Headers.Add("Accept", "application/json");
            return message;
        }

        private static ResponseClassifier _responseClassifier202;
        private static ResponseClassifier ResponseClassifier202 => _responseClassifier202 ??= new StatusCodeClassifier(stackalloc ushort[] { 202 });
        private static ResponseClassifier _responseClassifier200;
        private static ResponseClassifier ResponseClassifier200 => _responseClassifier200 ??= new StatusCodeClassifier(stackalloc ushort[] { 200 });
    }
}
