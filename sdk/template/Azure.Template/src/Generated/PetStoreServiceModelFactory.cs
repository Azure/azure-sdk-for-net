// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;

namespace Azure.Template.Models
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class PetStoreServiceModelFactory
    {
        /// <summary> Initializes a new instance of PetListResults. </summary>
        /// <param name="items"></param>
        /// <param name="nextLink"></param>
        /// <returns> A new <see cref="Models.PetListResults"/> instance for mocking. </returns>
        public static PetListResults PetListResults(IEnumerable<Pet> items = null, string nextLink = null)
        {
            items ??= new List<Pet>();

            return new PetListResults(items?.ToList(), nextLink);
        }

        /// <summary> Initializes a new instance of ToyListResults. </summary>
        /// <param name="items"></param>
        /// <param name="nextLink"></param>
        /// <returns> A new <see cref="Models.ToyListResults"/> instance for mocking. </returns>
        public static ToyListResults ToyListResults(IEnumerable<Toy> items = null, string nextLink = null)
        {
            items ??= new List<Toy>();

            return new ToyListResults(items?.ToList(), nextLink);
        }

        /// <summary> Initializes a new instance of Toy. </summary>
        /// <param name="id"></param>
        /// <param name="petId"></param>
        /// <param name="name"></param>
        /// <returns> A new <see cref="Models.Toy"/> instance for mocking. </returns>
        public static Toy Toy(long id = default, long petId = default, string name = null)
        {
            return new Toy(id, petId, name);
        }
    }
}
