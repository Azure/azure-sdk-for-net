// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Template.Models
{
    public partial class PrimitivePropertyModel : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("requiredString");
            writer.WriteStringValue(RequiredString);
            writer.WritePropertyName("requiredBytes");
            writer.WriteBase64StringValue(RequiredBytes, "D");
            writer.WritePropertyName("requiredInt");
            writer.WriteNumberValue(RequiredInt);
            writer.WritePropertyName("requiredLong");
            writer.WriteNumberValue(RequiredLong);
            writer.WritePropertyName("requiredSafeInt");
            writer.WriteNumberValue(RequiredSafeInt);
            writer.WritePropertyName("requiredFloat");
            writer.WriteNumberValue(RequiredFloat);
            writer.WritePropertyName("requiredDouble");
            writer.WriteNumberValue(RequiredDouble);
            writer.WritePropertyName("requiredBodyDateTime");
            writer.WriteStringValue(RequiredBodyDateTime, "O");
            writer.WritePropertyName("requiredDuration");
            writer.WriteStringValue(RequiredDuration, "P");
            writer.WritePropertyName("requiredBoolean");
            writer.WriteBooleanValue(RequiredBoolean);
            writer.WriteEndObject();
        }

        internal static PrimitivePropertyModel DeserializePrimitivePropertyModel(JsonElement element)
        {
            string requiredString = default;
            byte[] requiredBytes = default;
            int requiredInt = default;
            long requiredLong = default;
            long requiredSafeInt = default;
            float requiredFloat = default;
            double requiredDouble = default;
            DateTimeOffset requiredBodyDateTime = default;
            TimeSpan requiredDuration = default;
            bool requiredBoolean = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("requiredString"))
                {
                    requiredString = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("requiredBytes"))
                {
                    requiredBytes = property.Value.GetBytesFromBase64("D");
                    continue;
                }
                if (property.NameEquals("requiredInt"))
                {
                    requiredInt = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("requiredLong"))
                {
                    requiredLong = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("requiredSafeInt"))
                {
                    requiredSafeInt = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("requiredFloat"))
                {
                    requiredFloat = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("requiredDouble"))
                {
                    requiredDouble = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("requiredBodyDateTime"))
                {
                    requiredBodyDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("requiredDuration"))
                {
                    requiredDuration = property.Value.GetTimeSpan("P");
                    continue;
                }
                if (property.NameEquals("requiredBoolean"))
                {
                    requiredBoolean = property.Value.GetBoolean();
                    continue;
                }
            }
            return new PrimitivePropertyModel(requiredString, requiredBytes, requiredInt, requiredLong, requiredSafeInt, requiredFloat, requiredDouble, requiredBodyDateTime, requiredDuration, requiredBoolean);
        }
    }
}
