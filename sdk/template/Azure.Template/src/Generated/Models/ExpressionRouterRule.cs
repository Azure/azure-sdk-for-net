// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.Communication.JobRouter.Models
{
    /// <summary> A rule providing inline expression rules. </summary>
    public partial class ExpressionRouterRule : RouterRule
    {
        /// <summary> Initializes a new instance of ExpressionRouterRule. </summary>
        /// <param name="expression"> The string containing the expression to evaluate. Should contain return statement with calculated values. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="expression"/> is null. </exception>
        public ExpressionRouterRule(string expression)
        {
            Argument.AssertNotNull(expression, nameof(expression));

            Expression = expression;
            Kind = "expression-rule";
        }

        /// <summary> Initializes a new instance of ExpressionRouterRule. </summary>
        /// <param name="kind"> The type discriminator describing a sub-type of Rule. </param>
        /// <param name="language"> The expression language to compile to and execute. </param>
        /// <param name="expression"> The string containing the expression to evaluate. Should contain return statement with calculated values. </param>
        internal ExpressionRouterRule(string kind, ExpressionRouterRuleLanguage? language, string expression) : base(kind)
        {
            Language = language;
            Expression = expression;
            Kind = kind ?? "expression-rule";
        }

        /// <summary> The expression language to compile to and execute. </summary>
        public ExpressionRouterRuleLanguage? Language { get; set; }
        /// <summary> The string containing the expression to evaluate. Should contain return statement with calculated values. </summary>
        public string Expression { get; set; }
    }
}
