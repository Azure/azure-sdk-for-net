// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Template.Models
{
    internal static partial class DayOfTheWeekExtensions
    {
        public static string ToSerialString(this DayOfTheWeek value) => value switch
        {
            DayOfTheWeek.Monday => "Monday",
            DayOfTheWeek.Tuesday => "Tuesday",
            DayOfTheWeek.Wednesday => "Wednesday",
            DayOfTheWeek.Thursday => "Thursday",
            DayOfTheWeek.Friday => "Friday",
            DayOfTheWeek.Saturday => "Saturday",
            DayOfTheWeek.Sunday => "Sunday",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DayOfTheWeek value.")
        };

        public static DayOfTheWeek ToDayOfTheWeek(this string value)
        {
            if (string.Equals(value, "Monday", StringComparison.InvariantCultureIgnoreCase)) return DayOfTheWeek.Monday;
            if (string.Equals(value, "Tuesday", StringComparison.InvariantCultureIgnoreCase)) return DayOfTheWeek.Tuesday;
            if (string.Equals(value, "Wednesday", StringComparison.InvariantCultureIgnoreCase)) return DayOfTheWeek.Wednesday;
            if (string.Equals(value, "Thursday", StringComparison.InvariantCultureIgnoreCase)) return DayOfTheWeek.Thursday;
            if (string.Equals(value, "Friday", StringComparison.InvariantCultureIgnoreCase)) return DayOfTheWeek.Friday;
            if (string.Equals(value, "Saturday", StringComparison.InvariantCultureIgnoreCase)) return DayOfTheWeek.Saturday;
            if (string.Equals(value, "Sunday", StringComparison.InvariantCultureIgnoreCase)) return DayOfTheWeek.Sunday;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown DayOfTheWeek value.");
        }
    }
}
