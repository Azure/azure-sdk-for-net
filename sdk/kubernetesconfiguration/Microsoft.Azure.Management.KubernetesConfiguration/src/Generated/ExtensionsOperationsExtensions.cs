// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesConfiguration
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ExtensionsOperations.
    /// </summary>
    public static partial class ExtensionsOperationsExtensions
    {
            /// <summary>
            /// Create a new Kubernetes Cluster Extension Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='extensionInstanceName'>
            /// Name of an instance of the Extension.
            /// </param>
            /// <param name='extensionInstance'>
            /// Properties necessary to Create an Extension Instance.
            /// </param>
            public static ExtensionInstance Create(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string extensionInstanceName, ExtensionInstance extensionInstance)
            {
                return operations.CreateAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionInstanceName, extensionInstance).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new Kubernetes Cluster Extension Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='extensionInstanceName'>
            /// Name of an instance of the Extension.
            /// </param>
            /// <param name='extensionInstance'>
            /// Properties necessary to Create an Extension Instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ExtensionInstance> CreateAsync(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string extensionInstanceName, ExtensionInstance extensionInstance, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionInstanceName, extensionInstance, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets details of the Kubernetes Cluster Extension Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='extensionInstanceName'>
            /// Name of an instance of the Extension.
            /// </param>
            public static ExtensionInstance Get(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string extensionInstanceName)
            {
                return operations.GetAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets details of the Kubernetes Cluster Extension Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='extensionInstanceName'>
            /// Name of an instance of the Extension.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ExtensionInstance> GetAsync(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string extensionInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update an existing Kubernetes Cluster Extension Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='extensionInstanceName'>
            /// Name of an instance of the Extension.
            /// </param>
            /// <param name='extensionInstance'>
            /// Properties to Update in the Extension Instance.
            /// </param>
            public static ExtensionInstance Update(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string extensionInstanceName, ExtensionInstanceUpdate extensionInstance)
            {
                return operations.UpdateAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionInstanceName, extensionInstance).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update an existing Kubernetes Cluster Extension Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='extensionInstanceName'>
            /// Name of an instance of the Extension.
            /// </param>
            /// <param name='extensionInstance'>
            /// Properties to Update in the Extension Instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ExtensionInstance> UpdateAsync(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string extensionInstanceName, ExtensionInstanceUpdate extensionInstance, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionInstanceName, extensionInstance, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a Kubernetes Cluster Extension Instance. This will cause the Agent
            /// to Uninstall the extension instance from the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='extensionInstanceName'>
            /// Name of an instance of the Extension.
            /// </param>
            public static void Delete(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string extensionInstanceName)
            {
                operations.DeleteAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a Kubernetes Cluster Extension Instance. This will cause the Agent
            /// to Uninstall the extension instance from the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='extensionInstanceName'>
            /// Name of an instance of the Extension.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string extensionInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, extensionInstanceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List all Source Control Configurations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            public static IPage<ExtensionInstance> List(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName)
            {
                return operations.ListAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all Source Control Configurations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS
            /// clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible
            /// values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - either managedClusters (for AKS
            /// clusters) or connectedClusters (for OnPrem K8S clusters). Possible values
            /// include: 'managedClusters', 'connectedClusters'
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ExtensionInstance>> ListAsync(this IExtensionsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List all Source Control Configurations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ExtensionInstance> ListNext(this IExtensionsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all Source Control Configurations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ExtensionInstance>> ListNextAsync(this IExtensionsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
