// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesConfiguration
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for FluxConfigurationsOperations.
    /// </summary>
    public static partial class FluxConfigurationsOperationsExtensions
    {
            /// <summary>
            /// Gets details of the Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            public static FluxConfiguration Get(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName)
            {
                return operations.GetAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets details of the Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<FluxConfiguration> GetAsync(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new Kubernetes Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='fluxConfiguration'>
            /// Properties necessary to Create a FluxConfiguration.
            /// </param>
            public static FluxConfiguration CreateOrUpdate(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, FluxConfiguration fluxConfiguration)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, fluxConfiguration).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new Kubernetes Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='fluxConfiguration'>
            /// Properties necessary to Create a FluxConfiguration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<FluxConfiguration> CreateOrUpdateAsync(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, FluxConfiguration fluxConfiguration, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, fluxConfiguration, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update an existing Kubernetes Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='fluxConfigurationPatch'>
            /// Properties to Patch in an existing Flux Configuration.
            /// </param>
            public static FluxConfiguration Update(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, FluxConfigurationPatch fluxConfigurationPatch)
            {
                return operations.UpdateAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, fluxConfigurationPatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update an existing Kubernetes Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='fluxConfigurationPatch'>
            /// Properties to Patch in an existing Flux Configuration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<FluxConfiguration> UpdateAsync(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, FluxConfigurationPatch fluxConfigurationPatch, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, fluxConfigurationPatch, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// This will delete the YAML file used to set up the Flux Configuration, thus
            /// stopping future sync from the source repo.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='forceDelete'>
            /// Delete the extension resource in Azure - not the normal asynchronous
            /// delete.
            /// </param>
            public static void Delete(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, bool? forceDelete = default(bool?))
            {
                operations.DeleteAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, forceDelete).GetAwaiter().GetResult();
            }

            /// <summary>
            /// This will delete the YAML file used to set up the Flux Configuration, thus
            /// stopping future sync from the source repo.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='forceDelete'>
            /// Delete the extension resource in Azure - not the normal asynchronous
            /// delete.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, bool? forceDelete = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, forceDelete, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List all Flux Configurations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            public static IPage<FluxConfiguration> List(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName)
            {
                return operations.ListAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all Flux Configurations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<FluxConfiguration>> ListAsync(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a new Kubernetes Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='fluxConfiguration'>
            /// Properties necessary to Create a FluxConfiguration.
            /// </param>
            public static FluxConfiguration BeginCreateOrUpdate(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, FluxConfiguration fluxConfiguration)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, fluxConfiguration).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new Kubernetes Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='fluxConfiguration'>
            /// Properties necessary to Create a FluxConfiguration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<FluxConfiguration> BeginCreateOrUpdateAsync(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, FluxConfiguration fluxConfiguration, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, fluxConfiguration, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update an existing Kubernetes Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='fluxConfigurationPatch'>
            /// Properties to Patch in an existing Flux Configuration.
            /// </param>
            public static FluxConfiguration BeginUpdate(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, FluxConfigurationPatch fluxConfigurationPatch)
            {
                return operations.BeginUpdateAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, fluxConfigurationPatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update an existing Kubernetes Flux Configuration.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='fluxConfigurationPatch'>
            /// Properties to Patch in an existing Flux Configuration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<FluxConfiguration> BeginUpdateAsync(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, FluxConfigurationPatch fluxConfigurationPatch, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, fluxConfigurationPatch, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// This will delete the YAML file used to set up the Flux Configuration, thus
            /// stopping future sync from the source repo.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='forceDelete'>
            /// Delete the extension resource in Azure - not the normal asynchronous
            /// delete.
            /// </param>
            public static void BeginDelete(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, bool? forceDelete = default(bool?))
            {
                operations.BeginDeleteAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, forceDelete).GetAwaiter().GetResult();
            }

            /// <summary>
            /// This will delete the YAML file used to set up the Flux Configuration, thus
            /// stopping future sync from the source repo.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterRp'>
            /// The Kubernetes cluster RP - i.e. Microsoft.ContainerService,
            /// Microsoft.Kubernetes, Microsoft.HybridContainerService.
            /// </param>
            /// <param name='clusterResourceName'>
            /// The Kubernetes cluster resource name - i.e. managedClusters,
            /// connectedClusters, provisionedClusters.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the kubernetes cluster.
            /// </param>
            /// <param name='fluxConfigurationName'>
            /// Name of the Flux Configuration.
            /// </param>
            /// <param name='forceDelete'>
            /// Delete the extension resource in Azure - not the normal asynchronous
            /// delete.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IFluxConfigurationsOperations operations, string resourceGroupName, string clusterRp, string clusterResourceName, string clusterName, string fluxConfigurationName, bool? forceDelete = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, clusterRp, clusterResourceName, clusterName, fluxConfigurationName, forceDelete, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// List all Flux Configurations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<FluxConfiguration> ListNext(this IFluxConfigurationsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List all Flux Configurations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<FluxConfiguration>> ListNextAsync(this IFluxConfigurationsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
