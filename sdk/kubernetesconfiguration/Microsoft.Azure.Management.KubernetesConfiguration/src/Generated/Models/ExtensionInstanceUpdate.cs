// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesConfiguration.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Update Extension Instance request object.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ExtensionInstanceUpdate
    {
        /// <summary>
        /// Initializes a new instance of the ExtensionInstanceUpdate class.
        /// </summary>
        public ExtensionInstanceUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExtensionInstanceUpdate class.
        /// </summary>
        /// <param name="autoUpgradeMinorVersion">Flag to note if this instance
        /// participates in Extension Lifecycle Management or not.</param>
        /// <param name="releaseTrain">ReleaseTrain this extension instance
        /// participates in for auto-upgrade (e.g. Stable, Preview, etc.) -
        /// only if autoUpgradeMinorVersion is 'true'.</param>
        /// <param name="version">Version number of extension, to 'pin' to a
        /// specific version.  autoUpgradeMinorVersion must be 'false'.</param>
        public ExtensionInstanceUpdate(bool? autoUpgradeMinorVersion = default(bool?), string releaseTrain = default(string), string version = default(string))
        {
            AutoUpgradeMinorVersion = autoUpgradeMinorVersion;
            ReleaseTrain = releaseTrain;
            Version = version;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets flag to note if this instance participates in
        /// Extension Lifecycle Management or not.
        /// </summary>
        [JsonProperty(PropertyName = "properties.autoUpgradeMinorVersion")]
        public bool? AutoUpgradeMinorVersion { get; set; }

        /// <summary>
        /// Gets or sets releaseTrain this extension instance participates in
        /// for auto-upgrade (e.g. Stable, Preview, etc.) - only if
        /// autoUpgradeMinorVersion is 'true'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.releaseTrain")]
        public string ReleaseTrain { get; set; }

        /// <summary>
        /// Gets or sets version number of extension, to 'pin' to a specific
        /// version.  autoUpgradeMinorVersion must be 'false'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

    }
}
