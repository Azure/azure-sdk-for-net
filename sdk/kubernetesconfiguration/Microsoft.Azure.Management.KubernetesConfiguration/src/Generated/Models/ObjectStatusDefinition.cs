// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesConfiguration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Statuses of objects deployed by the user-specified kustomizations from
    /// the git repository.
    /// </summary>
    public partial class ObjectStatusDefinition
    {
        /// <summary>
        /// Initializes a new instance of the ObjectStatusDefinition class.
        /// </summary>
        public ObjectStatusDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ObjectStatusDefinition class.
        /// </summary>
        /// <param name="name">Name of the applied object</param>
        /// <param name="namespaceProperty">Namespace of the applied
        /// object</param>
        /// <param name="kind">Kind of the applied object</param>
        /// <param name="complianceState">Compliance state of the applied
        /// object showing whether the applied object has come into a ready
        /// state on the cluster. Possible values include: 'Compliant',
        /// 'Non-Compliant', 'Pending', 'Suspended', 'Unknown'</param>
        /// <param name="appliedBy">Object reference to the Kustomization that
        /// applied this object</param>
        /// <param name="statusConditions">List of Kubernetes object status
        /// conditions present on the cluster</param>
        /// <param name="helmReleaseProperties">Additional properties that are
        /// provided from objects of the HelmRelease kind</param>
        public ObjectStatusDefinition(string name = default(string), string namespaceProperty = default(string), string kind = default(string), string complianceState = default(string), ObjectReferenceDefinition appliedBy = default(ObjectReferenceDefinition), IList<ObjectStatusConditionDefinition> statusConditions = default(IList<ObjectStatusConditionDefinition>), HelmReleasePropertiesDefinition helmReleaseProperties = default(HelmReleasePropertiesDefinition))
        {
            Name = name;
            NamespaceProperty = namespaceProperty;
            Kind = kind;
            ComplianceState = complianceState;
            AppliedBy = appliedBy;
            StatusConditions = statusConditions;
            HelmReleaseProperties = helmReleaseProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the applied object
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets namespace of the applied object
        /// </summary>
        [JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets kind of the applied object
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets compliance state of the applied object showing whether
        /// the applied object has come into a ready state on the cluster.
        /// Possible values include: 'Compliant', 'Non-Compliant', 'Pending',
        /// 'Suspended', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "complianceState")]
        public string ComplianceState { get; set; }

        /// <summary>
        /// Gets or sets object reference to the Kustomization that applied
        /// this object
        /// </summary>
        [JsonProperty(PropertyName = "appliedBy")]
        public ObjectReferenceDefinition AppliedBy { get; set; }

        /// <summary>
        /// Gets or sets list of Kubernetes object status conditions present on
        /// the cluster
        /// </summary>
        [JsonProperty(PropertyName = "statusConditions")]
        public IList<ObjectStatusConditionDefinition> StatusConditions { get; set; }

        /// <summary>
        /// Gets or sets additional properties that are provided from objects
        /// of the HelmRelease kind
        /// </summary>
        [JsonProperty(PropertyName = "helmReleaseProperties")]
        public HelmReleasePropertiesDefinition HelmReleaseProperties { get; set; }

    }
}
