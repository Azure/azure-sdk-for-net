// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesConfiguration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The source reference for the GitRepository object.
    /// </summary>
    public partial class RepositoryRefDefinition
    {
        /// <summary>
        /// Initializes a new instance of the RepositoryRefDefinition class.
        /// </summary>
        public RepositoryRefDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RepositoryRefDefinition class.
        /// </summary>
        /// <param name="branch">The git repository branch name to
        /// checkout.</param>
        /// <param name="tag">The git repository tag name to checkout. This
        /// takes precedence over branch.</param>
        /// <param name="semver">The semver range used to match against git
        /// repository tags. This takes precedence over tag.</param>
        /// <param name="commit">The commit SHA to checkout. This value must be
        /// combined with the branch name to be valid. This takes precedence
        /// over semver.</param>
        public RepositoryRefDefinition(string branch = default(string), string tag = default(string), string semver = default(string), string commit = default(string))
        {
            Branch = branch;
            Tag = tag;
            Semver = semver;
            Commit = commit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the git repository branch name to checkout.
        /// </summary>
        [JsonProperty(PropertyName = "branch")]
        public string Branch { get; set; }

        /// <summary>
        /// Gets or sets the git repository tag name to checkout. This takes
        /// precedence over branch.
        /// </summary>
        [JsonProperty(PropertyName = "tag")]
        public string Tag { get; set; }

        /// <summary>
        /// Gets or sets the semver range used to match against git repository
        /// tags. This takes precedence over tag.
        /// </summary>
        [JsonProperty(PropertyName = "semver")]
        public string Semver { get; set; }

        /// <summary>
        /// Gets or sets the commit SHA to checkout. This value must be
        /// combined with the branch name to be valid. This takes precedence
        /// over semver.
        /// </summary>
        [JsonProperty(PropertyName = "commit")]
        public string Commit { get; set; }

    }
}
