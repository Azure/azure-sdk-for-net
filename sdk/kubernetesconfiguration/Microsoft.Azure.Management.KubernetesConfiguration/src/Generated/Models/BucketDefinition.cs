// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesConfiguration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters to reconcile to the GitRepository source kind type.
    /// </summary>
    public partial class BucketDefinition
    {
        /// <summary>
        /// Initializes a new instance of the BucketDefinition class.
        /// </summary>
        public BucketDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BucketDefinition class.
        /// </summary>
        /// <param name="url">The URL to sync for the flux configuration S3
        /// bucket.</param>
        /// <param name="bucketName">The bucket name to sync from the url
        /// endpoint for the flux configuration.</param>
        /// <param name="insecure">Specify whether to use insecure
        /// communication when puling data from the S3 bucket.</param>
        /// <param name="timeoutInSeconds">The maximum time to attempt to
        /// reconcile the cluster git repository source with the
        /// remote.</param>
        /// <param name="syncIntervalInSeconds">The interval at which to
        /// re-reconcile the cluster git repository source with the
        /// remote.</param>
        /// <param name="accessKey">Plaintext access key used to securely
        /// access the S3 bucket</param>
        /// <param name="localAuthRef">Name of a local secret on the Kubernetes
        /// cluster to use as the authentication secret rather than the managed
        /// or user-provided configuration secrets.</param>
        public BucketDefinition(string url = default(string), string bucketName = default(string), bool? insecure = default(bool?), long? timeoutInSeconds = default(long?), long? syncIntervalInSeconds = default(long?), string accessKey = default(string), string localAuthRef = default(string))
        {
            Url = url;
            BucketName = bucketName;
            Insecure = insecure;
            TimeoutInSeconds = timeoutInSeconds;
            SyncIntervalInSeconds = syncIntervalInSeconds;
            AccessKey = accessKey;
            LocalAuthRef = localAuthRef;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the URL to sync for the flux configuration S3 bucket.
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets the bucket name to sync from the url endpoint for the
        /// flux configuration.
        /// </summary>
        [JsonProperty(PropertyName = "bucketName")]
        public string BucketName { get; set; }

        /// <summary>
        /// Gets or sets specify whether to use insecure communication when
        /// puling data from the S3 bucket.
        /// </summary>
        [JsonProperty(PropertyName = "insecure")]
        public bool? Insecure { get; set; }

        /// <summary>
        /// Gets or sets the maximum time to attempt to reconcile the cluster
        /// git repository source with the remote.
        /// </summary>
        [JsonProperty(PropertyName = "timeoutInSeconds")]
        public long? TimeoutInSeconds { get; set; }

        /// <summary>
        /// Gets or sets the interval at which to re-reconcile the cluster git
        /// repository source with the remote.
        /// </summary>
        [JsonProperty(PropertyName = "syncIntervalInSeconds")]
        public long? SyncIntervalInSeconds { get; set; }

        /// <summary>
        /// Gets or sets plaintext access key used to securely access the S3
        /// bucket
        /// </summary>
        [JsonProperty(PropertyName = "accessKey")]
        public string AccessKey { get; set; }

        /// <summary>
        /// Gets or sets name of a local secret on the Kubernetes cluster to
        /// use as the authentication secret rather than the managed or
        /// user-provided configuration secrets.
        /// </summary>
        [JsonProperty(PropertyName = "localAuthRef")]
        public string LocalAuthRef { get; set; }

    }
}
