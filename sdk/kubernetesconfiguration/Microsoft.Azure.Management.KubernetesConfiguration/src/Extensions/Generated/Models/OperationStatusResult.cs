// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.KubernetesConfiguration.Extensions.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The current status of an async operation.
    /// </summary>
    public partial class OperationStatusResult
    {
        /// <summary>
        /// Initializes a new instance of the OperationStatusResult class.
        /// </summary>
        public OperationStatusResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationStatusResult class.
        /// </summary>
        /// <param name="status">Operation status.</param>
        /// <param name="id">Fully qualified ID for the async
        /// operation.</param>
        /// <param name="name">Name of the async operation.</param>
        /// <param name="properties">Additional information, if
        /// available.</param>
        public OperationStatusResult(string status, string id = default(string), string name = default(string), IDictionary<string, string> properties = default(IDictionary<string, string>), ErrorDetail error = default(ErrorDetail))
        {
            Id = id;
            Name = name;
            Status = status;
            Properties = properties;
            Error = error;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets fully qualified ID for the async operation.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets name of the async operation.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets operation status.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets additional information, if available.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ErrorDetail Error { get; set; }

    }
}
