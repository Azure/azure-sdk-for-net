// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.IoT.DeviceUpdate.Models
{
    /// <summary> Supported deployment group types. </summary>
    public readonly partial struct DeviceGroupType : IEquatable<DeviceGroupType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="DeviceGroupType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DeviceGroupType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AllValue = "All";
        private const string DevicesValue = "Devices";
        private const string DeviceGroupDefinitionsValue = "DeviceGroupDefinitions";

        /// <summary> The deployment should be sent to all devices in the device class. </summary>
        public static DeviceGroupType All { get; } = new DeviceGroupType(AllValue);
        /// <summary> The deployment should be sent to the list of devices in the device group definition. </summary>
        public static DeviceGroupType Devices { get; } = new DeviceGroupType(DevicesValue);
        /// <summary> The deployment should be sent to the list of devices returned by the union of all the device group definition queries. </summary>
        public static DeviceGroupType DeviceGroupDefinitions { get; } = new DeviceGroupType(DeviceGroupDefinitionsValue);
        /// <summary> Determines if two <see cref="DeviceGroupType"/> values are the same. </summary>
        public static bool operator ==(DeviceGroupType left, DeviceGroupType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DeviceGroupType"/> values are not the same. </summary>
        public static bool operator !=(DeviceGroupType left, DeviceGroupType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DeviceGroupType"/>. </summary>
        public static implicit operator DeviceGroupType(string value) => new DeviceGroupType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DeviceGroupType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DeviceGroupType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
